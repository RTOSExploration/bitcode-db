; ModuleID = 'build/96b_meerkat96/benchmark/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.external_data_msg = type { i8*, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.z_heap_bucket, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.z_heap_bucket, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.bm_msg = type { [256 x i8] }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.17], [13808 x i8], [191 x %struct.anon.17], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.17 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.17] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.17], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536851976 to i8*), void (i8*)* inttoptr (i32 536850463 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536851952 to i8*), void (i8*)* inttoptr (i32 536850303 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536851952 to i8*), void (i8*)* inttoptr (i32 536850303 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [27 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_bm_channel to i8*), i8* bitcast (%struct.zbus_channel* @bm_channel to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s1, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s2, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s3, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s4, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s5, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s6, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s7, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s8, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_bm_channel = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_bm_channel", align 4, !dbg !25
@_zbus_message_bm_channel = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !344
@_zbus_observers_bm_channel = internal constant [9 x %struct.zbus_observer*] [%struct.zbus_observer* @s1, %struct.zbus_observer* @s2, %struct.zbus_observer* @s3, %struct.zbus_observer* @s4, %struct.zbus_observer* @s5, %struct.zbus_observer* @s6, %struct.zbus_observer* @s7, %struct.zbus_observer* @s8, %struct.zbus_observer* null], align 4, !dbg !351
@bm_channel = dso_local constant %struct.zbus_channel { i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_bm_channel to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_bm_channel, %struct.zbus_observer** getelementptr inbounds ([9 x %struct.zbus_observer*], [9 x %struct.zbus_observer*]* @_zbus_observers_bm_channel, i32 0, i32 0) }, section "._zbus_channel.static.bm_channel", align 4, !dbg !112
@s1 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s1", align 4, !dbg !284
@s2 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s2", align 4, !dbg !286
@s3 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s3", align 4, !dbg !288
@s4 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s4", align 4, !dbg !290
@s5 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s5", align 4, !dbg !292
@s6 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s6", align 4, !dbg !294
@s7 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s7", align 4, !dbg !296
@s8 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s8", align 4, !dbg !298
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !342
@_k_thread_stack_producer_thread_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/benchmark.c\22.0", align 8, !dbg !337
@.str = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !300
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !333
@count = internal unnamed_addr global i64 0, align 8, !dbg !356
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Benchmark 1 to %d: Dynamic memory, %sSYNC transmission and message size %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%c: Something wrong. Duration is zero!\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%c: Bytes sent = %lld, received = %llu\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"%c: Average data rate: %llu.%lluB/s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%c: Duration: %ums\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\0A@%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !358
@.str.1.10 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !382
@.str.15 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !392
@.str.20 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.22 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.23 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.21 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.25 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.26 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.27 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.28 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.29 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.30 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.44 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.39 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.40 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.41 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.42 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.43 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.37 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.38 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.35 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.36 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.34 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.33 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !821
@.str.56 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !831
@.str.1.58 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.59 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !843
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !948
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1133
@.str.67 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.z_heap_bucket { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1084
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1115
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1082
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1070
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1058
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1060
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1117
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1128
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1138
@.str.71 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1144
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1402
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1400
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1394
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1385
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1387
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1404
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1406
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1411
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1414
@overflow_cyc = internal global i32 0, align 4, !dbg !1425
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1681
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1683
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1679
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1650
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1685
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.2 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1715
@.str.102 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.106 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.107 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.108 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.112 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.113 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.114 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.115 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.116 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.111 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.110 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.112, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.113, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.114, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.115, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.116, i32 0, i32 0)], align 4
@.str.118 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.118, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1721
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1935
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1924
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1930
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1942
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1947
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.127 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.135, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.136, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.137, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.138, i32 0, i32 0)], align 4, !dbg !1975
@.str.132 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.133 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.134 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.135 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.136 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.137 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.131 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.138 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2081
@.str.8.130 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2095
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2197
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2299
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2302
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2304
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1940
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1932
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2306
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2342
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2340
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2345
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2350
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1808
@.str.238 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2383
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3165 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #23, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3215, !srcloc !3218
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3261, !srcloc !3262
  ret void, !dbg !3263
}

; Function Attrs: noinline nounwind optsize
define internal void @s_cb(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3266 {
  %2 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3268, metadata !DIExpression()), !dbg !3279
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #23, !dbg !3280
  call void @llvm.dbg.declare(metadata %struct.bm_msg* undef, metadata !3269, metadata !DIExpression()), !dbg !3281
  %4 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #24, !dbg !3282
  call void @llvm.dbg.value(metadata i8* %4, metadata !3276, metadata !DIExpression()), !dbg !3279
  %5 = bitcast i8* %4 to i8**, !dbg !3283
  %6 = load i8*, i8** %5, align 4, !dbg !3283
  %7 = call i8* @memcpy(i8* noundef nonnull %3, i8* noundef %6, i32 noundef 256) #25, !dbg !3284
  %8 = load i64, i64* @count, align 8, !dbg !3285
  %9 = add i64 %8, 256, !dbg !3285
  store i64 %9, i64* @count, align 8, !dbg !3285
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #23, !dbg !3286
  ret void, !dbg !3286
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3287 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3291, metadata !DIExpression()), !dbg !3292
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3293
  %3 = load i8*, i8** %2, align 4, !dbg !3293
  ret i8* %3, !dbg !3294
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3295 {
  %1 = alloca %struct.bm_msg, align 1
  %2 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3308
  %3 = zext i8 %2 to i32, !dbg !3308
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3, i32 noundef 8, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i32 noundef 256) #25, !dbg !3308
  %4 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 0, !dbg !3313
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #23, !dbg !3313
  call void @llvm.dbg.declare(metadata %struct.bm_msg* %1, metadata !3297, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.value(metadata i64 255, metadata !3300, metadata !DIExpression()), !dbg !3315
  br label %10, !dbg !3316

5:                                                ; preds = %10
  %6 = tail call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #25, !dbg !3317
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3298, metadata !DIExpression()), !dbg !3318
  %7 = tail call i8* @k_malloc(i32 noundef 256) #25, !dbg !3319
  store i8* %7, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3320
  store i32 256, i32* getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 1), align 4, !dbg !3321
  %8 = tail call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #25, !dbg !3322
  %9 = tail call fastcc i32 @k_uptime_get_32() #24, !dbg !3323
  call void @llvm.dbg.value(metadata i32 %9, metadata !3302, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.value(metadata i64 32768, metadata !3303, metadata !DIExpression()), !dbg !3324
  br label %21, !dbg !3325

10:                                               ; preds = %0, %10
  %11 = phi i64 [ 255, %0 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !3300, metadata !DIExpression()), !dbg !3315
  %12 = trunc i64 %11 to i8, !dbg !3326
  %13 = trunc i64 %11 to i32, !dbg !3329
  %14 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 %13, !dbg !3329
  store i8 %12, i8* %14, align 1, !dbg !3330
  %15 = add nsw i64 %11, -1, !dbg !3331
  call void @llvm.dbg.value(metadata i64 %15, metadata !3300, metadata !DIExpression()), !dbg !3315
  %16 = icmp eq i64 %15, 0, !dbg !3332
  br i1 %16, label %5, label %10, !dbg !3316, !llvm.loop !3333

17:                                               ; preds = %21
  %18 = call fastcc i32 @k_uptime_get_32() #24, !dbg !3335
  %19 = sub i32 %18, %9, !dbg !3336
  call void @llvm.dbg.value(metadata i32 %19, metadata !3305, metadata !DIExpression()), !dbg !3318
  %20 = icmp eq i32 %19, 0, !dbg !3337
  br i1 %20, label %32, label %35, !dbg !3339

21:                                               ; preds = %5, %21
  %22 = phi i64 [ 32768, %5 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3303, metadata !DIExpression()), !dbg !3324
  %23 = call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #25, !dbg !3340
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3298, metadata !DIExpression()), !dbg !3318
  %24 = load i8*, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3343
  %25 = call i8* @memcpy(i8* noundef %24, i8* noundef nonnull %4, i32 noundef 256) #25, !dbg !3344
  %26 = call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #25, !dbg !3345
  %27 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #24, !dbg !3346
  %28 = insertvalue [1 x i64] poison, i64 %27, 0, !dbg !3347
  %29 = call i32 @zbus_chan_notify(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] %28) #25, !dbg !3347
  %30 = add nsw i64 %22, -256, !dbg !3348
  call void @llvm.dbg.value(metadata i64 %30, metadata !3303, metadata !DIExpression()), !dbg !3324
  %31 = icmp eq i64 %30, 0, !dbg !3349
  br i1 %31, label %17, label %21, !dbg !3325, !llvm.loop !3350

32:                                               ; preds = %17
  %33 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3352
  %34 = zext i8 %33 to i32, !dbg !3352
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 noundef %34) #25, !dbg !3352
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 3, i32 2) #23, !dbg !3358, !srcloc !3360
  br label %35, !dbg !3361

35:                                               ; preds = %32, %17
  %36 = zext i32 %19 to i64, !dbg !3362
  %37 = udiv i32 262144000, %19, !dbg !3363
  %38 = zext i32 %37 to i64, !dbg !3363
  call void @llvm.dbg.value(metadata i64 %38, metadata !3306, metadata !DIExpression()), !dbg !3318
  %39 = udiv i64 26214400000, %36, !dbg !3364
  %40 = urem i64 %39, 100, !dbg !3365
  call void @llvm.dbg.value(metadata i64 %40, metadata !3307, metadata !DIExpression()), !dbg !3318
  %41 = load i64, i64* @count, align 8, !dbg !3366
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 noundef %3, i64 noundef 262144, i64 noundef %41) #25, !dbg !3366
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 noundef %3, i64 noundef %38, i64 noundef %40) #25, !dbg !3371
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i32 noundef %3, i32 noundef %19) #25, !dbg !3376
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 noundef %19) #25, !dbg !3381
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #23, !dbg !3382
  ret void, !dbg !3382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3388, metadata !DIExpression()), !dbg !3389
  %2 = add i32 %0, -1, !dbg !3390
  %3 = icmp ult i32 %2, 3, !dbg !3390
  %4 = trunc i32 %2 to i24, !dbg !3390
  %5 = shl i24 %4, 3, !dbg !3390
  %6 = lshr i24 4806469, %5, !dbg !3390
  %7 = trunc i24 %6 to i8, !dbg !3390
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3390
  ret i8 %8, !dbg !3391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3392 {
  %1 = tail call fastcc i64 @k_uptime_get() #24, !dbg !3395
  %2 = trunc i64 %1 to i32, !dbg !3396
  ret i32 %2, !dbg !3397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #5 !dbg !3398 {
  call void @llvm.dbg.value(metadata i64 200, metadata !3403, metadata !DIExpression()), !dbg !3404
  ret i64 2000, !dbg !3405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3406 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !3409
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #24, !dbg !3410
  ret i64 %2, !dbg !3411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3412 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3414, !srcloc !3416
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !3417
  ret i64 %1, !dbg !3418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !3419 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3421, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata i64 %0, metadata !3423, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 10000, metadata !3428, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 1000, metadata !3429, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 1, metadata !3430, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 0, metadata !3431, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i1 false, metadata !3432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3440
  call void @llvm.dbg.value(metadata i8 0, metadata !3433, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i1 false, metadata !3434, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3440
  call void @llvm.dbg.value(metadata i1 true, metadata !3435, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3440
  call void @llvm.dbg.value(metadata i64 0, metadata !3436, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i64 0, metadata !3436, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3423, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3440
  call void @llvm.dbg.value(metadata i64 %0, metadata !3423, metadata !DIExpression()), !dbg !3440
  %2 = udiv i64 %0, 10, !dbg !3442
  ret i64 %2, !dbg !3447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3448 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %0, metadata !3459, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %1, metadata !3460, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %2, metadata !3461, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %3, metadata !3462, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %0, metadata !3464, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %0, metadata !3465, metadata !DIExpression()), !dbg !3526
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3527
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3527
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3468, metadata !DIExpression()), !dbg !3528
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3529
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3529
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3470, metadata !DIExpression()), !dbg !3530
  call void @llvm.dbg.value(metadata i32 0, metadata !3471, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 0, metadata !3472, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 0, metadata !3473, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 -1, metadata !3474, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 0, metadata !3477, metadata !DIExpression()), !dbg !3526
  %12 = and i32 %2, 4, !dbg !3531
  %13 = icmp eq i32 %12, 0, !dbg !3532
  call void @llvm.dbg.value(metadata i1 %13, metadata !3478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3526
  %14 = lshr i32 %2, 3, !dbg !3533
  %15 = and i32 %14, 7, !dbg !3533
  %16 = add nuw nsw i32 %15, 1, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %16, metadata !3479, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 0, metadata !3480, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %0, metadata !3481, metadata !DIExpression()), !dbg !3526
  %17 = ptrtoint i8* %0 to i32, !dbg !3535
  %18 = and i32 %17, 3, !dbg !3537
  %19 = icmp eq i32 %18, 0, !dbg !3537
  br i1 %19, label %20, label %316, !dbg !3538

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3539
  call void @llvm.dbg.value(metadata i8* %21, metadata !3465, metadata !DIExpression()), !dbg !3526
  %22 = icmp eq i8* %0, null, !dbg !3540
  %23 = and i32 %1, 7, !dbg !3542
  %24 = sub nuw nsw i32 8, %23, !dbg !3542
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3542
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3542
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3542
  call void @llvm.dbg.value(metadata i32 %27, metadata !3460, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %26, metadata !3465, metadata !DIExpression()), !dbg !3526
  br i1 %22, label %33, label %28, !dbg !3543

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3545
  %30 = sub i32 4, %17, !dbg !3545
  %31 = add i32 %30, %29, !dbg !3546
  %32 = icmp ugt i32 %31, %27, !dbg !3547
  br i1 %32, label %316, label %33, !dbg !3548

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3549
  call void @llvm.dbg.value(metadata i8* %34, metadata !3462, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %3, metadata !3476, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 4, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 4, metadata !3466, metadata !DIExpression()), !dbg !3526
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3550

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %42, metadata !3462, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %43, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %44, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %45, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %72, metadata !3474, metadata !DIExpression()), !dbg !3526
  br i1 %46, label %73, label %47, !dbg !3551

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3552
  %49 = zext i1 %48 to i32, !dbg !3556
  %50 = add nsw i32 %72, %49, !dbg !3556
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3556
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %52, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %51, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3477, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %50, metadata !3474, metadata !DIExpression()), !dbg !3526
  br label %53, !dbg !3557

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %40, metadata !3462, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %58, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %57, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %56, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3477, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %54, metadata !3474, metadata !DIExpression()), !dbg !3526
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3558
  call void @llvm.dbg.value(metadata i8* %60, metadata !3462, metadata !DIExpression()), !dbg !3526
  %61 = load i8, i8* %60, align 1, !dbg !3560
  %62 = icmp eq i8 %61, 0, !dbg !3561
  br i1 %62, label %223, label %63, !dbg !3562, !llvm.loop !3563

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3551

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3566

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3477, metadata !DIExpression()), !dbg !3526
  %75 = add nsw i32 %72, -1, !dbg !3567
  call void @llvm.dbg.value(metadata i32 %75, metadata !3474, metadata !DIExpression()), !dbg !3526
  br label %53, !dbg !3568

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3569

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 4, metadata !3466, metadata !DIExpression()), !dbg !3526
  br label %53, !dbg !3570

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 4, metadata !3466, metadata !DIExpression()), !dbg !3526
  br label %53, !dbg !3571

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3572
  %81 = icmp eq i8 %80, 108, !dbg !3574
  br i1 %81, label %82, label %109, !dbg !3575

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3576
  %84 = load i8, i8* %83, align 1, !dbg !3576
  %85 = icmp eq i8 %84, 108, !dbg !3579
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3580
  %89 = add i32 %88, 7, !dbg !3580
  %90 = and i32 %89, -8, !dbg !3580
  %91 = inttoptr i32 %90 to i8*, !dbg !3580
  %92 = inttoptr i32 %90 to double*, !dbg !3580
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3580
  %94 = load double, double* %92, align 8, !dbg !3580
  call void @llvm.dbg.value(metadata i8* %93, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 8, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 8, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata double %94, metadata !3494, metadata !DIExpression()), !dbg !3582
  %95 = ptrtoint i8* %43 to i32, !dbg !3583
  %96 = add i32 %95, 7, !dbg !3583
  %97 = and i32 %96, -8, !dbg !3583
  %98 = inttoptr i32 %97 to i8*, !dbg !3584
  call void @llvm.dbg.value(metadata i8* %98, metadata !3465, metadata !DIExpression()), !dbg !3526
  br i1 %22, label %104, label %99, !dbg !3585

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3586
  %101 = icmp ugt i32 %100, %194, !dbg !3590
  br i1 %101, label %316, label %102, !dbg !3591

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3592
  store double %94, double* %103, align 8, !dbg !3592
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3595
  call void @llvm.dbg.value(metadata i8* %105, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3477, metadata !DIExpression()), !dbg !3526
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3477, metadata !DIExpression()), !dbg !3526
  br label %53, !dbg !3596

107:                                              ; preds = %73, %73
  br label %109, !dbg !3597

108:                                              ; preds = %73
  br label %109, !dbg !3597

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3526
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3526
  call void @llvm.dbg.value(metadata i32 %113, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %112, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3477, metadata !DIExpression()), !dbg !3526
  %114 = ptrtoint i8* %43 to i32, !dbg !3597
  %115 = add i32 %114, -1, !dbg !3597
  %116 = add i32 %115, %112, !dbg !3597
  %117 = sub i32 0, %112, !dbg !3597
  %118 = and i32 %116, %117, !dbg !3597
  %119 = inttoptr i32 %118 to i8*, !dbg !3598
  call void @llvm.dbg.value(metadata i8* %119, metadata !3465, metadata !DIExpression()), !dbg !3526
  br i1 %22, label %124, label %120, !dbg !3599

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3601
  %122 = add i32 %121, %118, !dbg !3602
  %123 = icmp ugt i32 %122, %194, !dbg !3603
  br i1 %123, label %316, label %124, !dbg !3604

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3605

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3598
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3606
  call void @llvm.dbg.value(metadata i8* %127, metadata !3463, metadata !DIExpression()), !dbg !3526
  %128 = bitcast i8* %41 to i8**, !dbg !3606
  %129 = load i8*, i8** %128, align 4, !dbg !3606
  call void @llvm.dbg.value(metadata i8* %129, metadata !3476, metadata !DIExpression()), !dbg !3526
  br label %130, !dbg !3607

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3608
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3609
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3526
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3610
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3526
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3611
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3526
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3526
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3526
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3526
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3612
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %142, metadata !3460, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %141, metadata !3462, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %140, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %139, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %138, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %137, metadata !3471, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %136, metadata !3479, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %135, metadata !3472, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3477, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %133, metadata !3476, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %132, metadata !3474, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %131, metadata !3473, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.label(metadata !3525), !dbg !3614
  br i1 %22, label %146, label %144, !dbg !3615

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3616
  store i8* %133, i8** %145, align 4, !dbg !3619
  br label %146, !dbg !3620

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %147, metadata !3479, metadata !DIExpression()), !dbg !3526
  %148 = icmp sgt i32 %136, 0, !dbg !3622
  br i1 %148, label %152, label %149, !dbg !3623

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3624
  %151 = zext i1 %150 to i32, !dbg !3624
  br label %152, !dbg !3623

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3623
  %154 = icmp eq i32 %153, 0, !dbg !3623
  call void @llvm.dbg.value(metadata i1 %154, metadata !3503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3625
  call void @llvm.dbg.value(metadata i1 %36, metadata !3506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3625
  %155 = or i1 %36, %154, !dbg !3626
  br i1 %155, label %156, label %190, !dbg !3626

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3627
  %158 = sub i32 %157, %17, !dbg !3627
  %159 = lshr i32 %158, 2, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %159, metadata !3507, metadata !DIExpression()), !dbg !3629
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3630
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3630
  br i1 %163, label %316, label %164, !dbg !3630

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3632

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3633
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3636
  store i8 %166, i8* %167, align 1, !dbg !3637
  %168 = trunc i32 %132 to i8, !dbg !3638
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3639
  store i8 %168, i8* %169, align 1, !dbg !3640
  br i1 %154, label %173, label %170, !dbg !3641

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3642
  store i8 %171, i8* %167, align 1, !dbg !3642
  %172 = add i32 %131, 1, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %172, metadata !3473, metadata !DIExpression()), !dbg !3526
  br label %185, !dbg !3646

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %174, metadata !3472, metadata !DIExpression()), !dbg !3526
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3649

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %177, metadata !3460, metadata !DIExpression()), !dbg !3526
  br label %185, !dbg !3653

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3654

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %180, metadata !3460, metadata !DIExpression()), !dbg !3526
  br label %185, !dbg !3658

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3659
  %183 = add i32 %142, 2, !dbg !3661
  %184 = add i32 %183, %182, !dbg !3662
  call void @llvm.dbg.value(metadata i32 %184, metadata !3460, metadata !DIExpression()), !dbg !3526
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3526
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3526
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3526
  call void @llvm.dbg.value(metadata i32 %188, metadata !3460, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %187, metadata !3472, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %186, metadata !3473, metadata !DIExpression()), !dbg !3526
  %189 = add nuw nsw i32 %137, 1, !dbg !3663
  call void @llvm.dbg.value(metadata i32 undef, metadata !3460, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 undef, metadata !3471, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 undef, metadata !3472, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 undef, metadata !3473, metadata !DIExpression()), !dbg !3526
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3608
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3610
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3611
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3612
  call void @llvm.dbg.value(metadata i32 %194, metadata !3460, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %193, metadata !3471, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %192, metadata !3472, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %191, metadata !3473, metadata !DIExpression()), !dbg !3526
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3664
  call void @llvm.dbg.value(metadata i8* %195, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %143, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %141, metadata !3462, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %139, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %138, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3477, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %132, metadata !3474, metadata !DIExpression()), !dbg !3526
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3558
  call void @llvm.dbg.value(metadata i8* %196, metadata !3462, metadata !DIExpression()), !dbg !3526
  %197 = load i8, i8* %196, align 1, !dbg !3560
  %198 = icmp eq i8 %197, 0, !dbg !3561
  br i1 %198, label %223, label %63, !dbg !3562

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3665

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3666
  call void @llvm.dbg.value(metadata i8* %201, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 undef, metadata !3510, metadata !DIExpression()), !dbg !3667
  br i1 %22, label %216, label %202, !dbg !3668

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3666
  %204 = load i32, i32* %203, align 4, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %204, metadata !3510, metadata !DIExpression()), !dbg !3667
  %205 = inttoptr i32 %118 to i32*, !dbg !3669
  store i32 %204, i32* %205, align 4, !dbg !3672
  br label %216, !dbg !3673

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3674
  %208 = add i32 %207, 7, !dbg !3674
  %209 = and i32 %208, -8, !dbg !3674
  %210 = inttoptr i32 %209 to i8*, !dbg !3674
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3674
  call void @llvm.dbg.value(metadata i8* %211, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i64 undef, metadata !3516, metadata !DIExpression()), !dbg !3675
  br i1 %22, label %216, label %212, !dbg !3676

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3674
  %214 = load i64, i64* %213, align 8, !dbg !3674
  call void @llvm.dbg.value(metadata i64 %214, metadata !3516, metadata !DIExpression()), !dbg !3675
  %215 = inttoptr i32 %118 to i64*, !dbg !3677
  store i64 %214, i64* %215, align 8, !dbg !3682
  br label %216, !dbg !3683

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3684
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3684
  call void @llvm.dbg.value(metadata i8* %218, metadata !3463, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %40, metadata !3462, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %219, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %113, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %112, metadata !3467, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8 poison, metadata !3477, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %72, metadata !3474, metadata !DIExpression()), !dbg !3526
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3558
  call void @llvm.dbg.value(metadata i8* %220, metadata !3462, metadata !DIExpression()), !dbg !3526
  %221 = load i8, i8* %220, align 1, !dbg !3560
  %222 = icmp eq i8 %221, 0, !dbg !3561
  br i1 %222, label %223, label %38, !dbg !3562

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3685
  %225 = ptrtoint i8* %224 to i32, !dbg !3686
  %226 = sub i32 %225, %17, !dbg !3686
  %227 = lshr i32 %226, 2, !dbg !3688
  %228 = icmp ugt i32 %226, 1023, !dbg !3689
  br i1 %228, label %316, label %229, !dbg !3690

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3691

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3692
  %232 = add i32 %231, %226, !dbg !3695
  br label %316, !dbg !3696

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3697
  store i8 %234, i8* %0, align 1, !dbg !3698
  %235 = trunc i32 %192 to i8, !dbg !3699
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3701
  store i8 %236, i8* %238, align 1, !dbg !3703
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3704
  store i8 %237, i8* %239, align 1, !dbg !3705
  %240 = trunc i32 %191 to i8, !dbg !3706
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3707
  store i8 %240, i8* %241, align 1, !dbg !3708
  %242 = icmp eq i32 %191, 0, !dbg !3709
  %243 = xor i1 %242, true, !dbg !3710
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %224, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 0, metadata !3475, metadata !DIExpression()), !dbg !3526
  br i1 %245, label %246, label %265, !dbg !3710

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3711

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %250, metadata !3475, metadata !DIExpression()), !dbg !3526
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3712
  %252 = load i8, i8* %251, align 1, !dbg !3712
  %253 = icmp sgt i8 %252, -1, !dbg !3714
  br i1 %253, label %261, label %254, !dbg !3715

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3519, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3716
  %255 = ptrtoint i8* %249 to i32, !dbg !3717
  %256 = add i32 %247, %255, !dbg !3719
  %257 = icmp ugt i32 %256, %194, !dbg !3720
  br i1 %257, label %316, label %258, !dbg !3721

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3722
  call void @llvm.dbg.value(metadata i8 %259, metadata !3519, metadata !DIExpression()), !dbg !3716
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %260, metadata !3465, metadata !DIExpression()), !dbg !3526
  store i8 %259, i8* %249, align 1, !dbg !3724
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3664
  call void @llvm.dbg.value(metadata i8* %262, metadata !3465, metadata !DIExpression()), !dbg !3526
  %263 = add nuw i32 %250, 1, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %263, metadata !3475, metadata !DIExpression()), !dbg !3526
  %264 = icmp eq i32 %263, %193, !dbg !3726
  br i1 %264, label %265, label %248, !dbg !3711, !llvm.loop !3727

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3664
  call void @llvm.dbg.value(metadata i8* %266, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 0, metadata !3475, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %133, metadata !3476, metadata !DIExpression()), !dbg !3526
  %267 = icmp eq i32 %193, 0, !dbg !3729
  br i1 %267, label %312, label %268, !dbg !3732

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3732

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %272, metadata !3476, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %273, metadata !3475, metadata !DIExpression()), !dbg !3526
  br i1 %242, label %278, label %274, !dbg !3733

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3736
  %276 = load i8, i8* %275, align 1, !dbg !3736
  %277 = icmp sgt i8 %276, -1, !dbg !3737
  br i1 %277, label %278, label %307, !dbg !3738

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !3739

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3466, metadata !DIExpression()), !dbg !3526
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !3740
  %281 = load i8, i8* %280, align 1, !dbg !3740
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !3743
  call void @llvm.dbg.value(metadata i8* %282, metadata !3465, metadata !DIExpression()), !dbg !3526
  store i8 %281, i8* %271, align 1, !dbg !3744
  br label %293, !dbg !3745

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3746
  %285 = load i8, i8* %284, align 1, !dbg !3746
  %286 = zext i8 %285 to i32, !dbg !3746
  %287 = shl nuw nsw i32 %286, 2, !dbg !3748
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !3749
  %289 = bitcast i8* %288 to i8**, !dbg !3750
  %290 = load i8*, i8** %289, align 4, !dbg !3750
  call void @llvm.dbg.value(metadata i8* %290, metadata !3476, metadata !DIExpression()), !dbg !3526
  store i8* null, i8** %289, align 4, !dbg !3751
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !3752
  %292 = add i32 %291, 1, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %292, metadata !3466, metadata !DIExpression()), !dbg !3526
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3526
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !3754
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3526
  call void @llvm.dbg.value(metadata i8* %296, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %295, metadata !3466, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %294, metadata !3476, metadata !DIExpression()), !dbg !3526
  %297 = ptrtoint i8* %296 to i32, !dbg !3755
  %298 = add i32 %269, %295, !dbg !3757
  %299 = add i32 %298, %297, !dbg !3758
  %300 = icmp ugt i32 %299, %194, !dbg !3759
  br i1 %300, label %316, label %301, !dbg !3760

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3761
  %303 = load i8, i8* %302, align 1, !dbg !3761
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !3762
  call void @llvm.dbg.value(metadata i8* %304, metadata !3465, metadata !DIExpression()), !dbg !3526
  store i8 %303, i8* %296, align 1, !dbg !3763
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !3764
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !3765
  call void @llvm.dbg.value(metadata i8* %306, metadata !3465, metadata !DIExpression()), !dbg !3526
  br label %307, !dbg !3766

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !3767
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3526
  call void @llvm.dbg.value(metadata i8* %309, metadata !3465, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %308, metadata !3476, metadata !DIExpression()), !dbg !3526
  %310 = add nuw i32 %273, 1, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %310, metadata !3475, metadata !DIExpression()), !dbg !3526
  %311 = icmp eq i32 %310, %193, !dbg !3729
  br i1 %311, label %312, label %270, !dbg !3732, !llvm.loop !3769

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3664
  %314 = ptrtoint i8* %313 to i32, !dbg !3771
  %315 = sub i32 %314, %17, !dbg !3771
  br label %316, !dbg !3772

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3526
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3773
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3773
  ret i32 %317, !dbg !3773
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3778, metadata !DIExpression()), !dbg !3779
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3780
  ret i1 %2, !dbg !3781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3782 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3787, metadata !DIExpression()), !dbg !3788
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3789
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3790
  %4 = and i1 %2, %3, !dbg !3790
  ret i1 %4, !dbg !3791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3792 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3796, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %1, metadata !3797, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %2, metadata !3798, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i8* %3, metadata !3799, metadata !DIExpression()), !dbg !3802
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3803
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3803
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3800, metadata !DIExpression()), !dbg !3804
  call void @llvm.va_start(i8* nonnull %6), !dbg !3805
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3806
  %8 = load i32, i32* %7, align 4, !dbg !3806
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3806
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %10, metadata !3801, metadata !DIExpression()), !dbg !3802
  call void @llvm.va_end(i8* nonnull %6), !dbg !3807
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3808
  ret i32 %10, !dbg !3809
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3810 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3822, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3823, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %2, metadata !3824, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %3, metadata !3825, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %3, metadata !3826, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %3, metadata !3827, metadata !DIExpression()), !dbg !3841
  %5 = icmp eq i8* %3, null, !dbg !3842
  br i1 %5, label %45, label %6, !dbg !3844

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3836, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3841
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3845
  %8 = load i8, i8* %7, align 1, !dbg !3845
  %9 = zext i8 %8 to i32, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %9, metadata !3837, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8 undef, metadata !3838, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata i8 undef, metadata !3839, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata i32 0, metadata !3835, metadata !DIExpression()), !dbg !3841
  %10 = icmp eq i8 %8, 0, !dbg !3847
  br i1 %10, label %39, label %11, !dbg !3850

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3851
  call void @llvm.dbg.value(metadata i8 %12, metadata !3836, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %13 = zext i8 %12 to i32, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %13, metadata !3836, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %14 = shl nuw nsw i32 %13, 2, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %14, metadata !3836, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3854
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3855
  %17 = load i8, i8* %16, align 1, !dbg !3855
  call void @llvm.dbg.value(metadata i8 %17, metadata !3838, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %18 = zext i8 %17 to i32, !dbg !3856
  call void @llvm.dbg.value(metadata i32 %18, metadata !3838, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3857
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3858
  %21 = load i8, i8* %20, align 1, !dbg !3858
  call void @llvm.dbg.value(metadata i8 %21, metadata !3839, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %22 = zext i8 %21 to i32, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %22, metadata !3839, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %23 = shl nuw nsw i32 %22, 1, !dbg !3860
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3861
  call void @llvm.dbg.value(metadata i8* %24, metadata !3833, metadata !DIExpression()), !dbg !3841
  br label %25, !dbg !3850

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3833, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 %27, metadata !3835, metadata !DIExpression()), !dbg !3841
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %28, metadata !3833, metadata !DIExpression()), !dbg !3841
  %29 = load i8, i8* %26, align 1, !dbg !3864
  %30 = zext i8 %29 to i32, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %30, metadata !3840, metadata !DIExpression()), !dbg !3841
  %31 = shl nuw nsw i32 %30, 2, !dbg !3865
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3866
  %33 = bitcast i8* %32 to i8**, !dbg !3867
  call void @llvm.dbg.value(metadata i8** %33, metadata !3834, metadata !DIExpression()), !dbg !3841
  store i8* %28, i8** %33, align 4, !dbg !3868
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3869
  %35 = add i32 %34, 1, !dbg !3870
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %36, metadata !3833, metadata !DIExpression()), !dbg !3841
  %37 = add nuw nsw i32 %27, 1, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %37, metadata !3835, metadata !DIExpression()), !dbg !3841
  %38 = icmp eq i32 %37, %9, !dbg !3847
  br i1 %38, label %39, label %25, !dbg !3850, !llvm.loop !3873

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3875
  call void @llvm.dbg.value(metadata i8* %40, metadata !3826, metadata !DIExpression()), !dbg !3841
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3876
  %42 = bitcast i8* %41 to i8**, !dbg !3876
  %43 = load i8*, i8** %42, align 1, !dbg !3876
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3877
  br label %45, !dbg !3878

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3841
  ret i32 %46, !dbg !3879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3880 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3884, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3885, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %2, metadata !3886, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %3, metadata !3887, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %4, metadata !3888, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %4, metadata !3889, metadata !DIExpression()), !dbg !3894
  %6 = ptrtoint i8* %4 to i32, !dbg !3895
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3895
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3895
  ret i32 %8, !dbg !3896
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !3897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3901, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 %1, metadata !3902, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 0, metadata !3904, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 0, metadata !3905, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 poison, metadata !3904, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8* %0, metadata !3901, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3906
  %3 = load i8, i8* %0, align 1, !dbg !3907
  call void @llvm.dbg.value(metadata i8 %3, metadata !3903, metadata !DIExpression()), !dbg !3906
  %4 = icmp eq i8 %3, 0, !dbg !3908
  br i1 %4, label %29, label %5, !dbg !3909

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %8, metadata !3905, metadata !DIExpression()), !dbg !3906
  br i1 %9, label %11, label %22, !dbg !3911

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3913
  br i1 %12, label %13, label %17, !dbg !3917

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3918
  br i1 %14, label %29, label %15, !dbg !3921

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3922
  br i1 %16, label %29, label %22, !dbg !3924

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3925
  %19 = xor i1 %18, true, !dbg !3927
  %20 = zext i1 %18 to i32, !dbg !3927
  %21 = add nsw i32 %8, %20, !dbg !3927
  br label %22, !dbg !3927

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3906
  call void @llvm.dbg.value(metadata i32 %24, metadata !3905, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 poison, metadata !3904, metadata !DIExpression()), !dbg !3906
  %25 = icmp eq i8 %6, 37, !dbg !3928
  %26 = xor i1 %25, %23, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %10, metadata !3901, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8* %10, metadata !3901, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3906
  %27 = load i8, i8* %10, align 1, !dbg !3907
  call void @llvm.dbg.value(metadata i8 %27, metadata !3903, metadata !DIExpression()), !dbg !3906
  %28 = icmp eq i8 %27, 0, !dbg !3908
  br i1 %28, label %29, label %5, !dbg !3909, !llvm.loop !3931

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3906
  ret i1 %30, !dbg !3933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !3934 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3938, metadata !DIExpression()), !dbg !3939
  %2 = add i8 %0, -64, !dbg !3940
  %3 = icmp ult i8 %2, 59, !dbg !3940
  ret i1 %3, !dbg !3941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3942 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3950, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %1, metadata !3951, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3952, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %3, metadata !3953, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %4, metadata !3954, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i16* %5, metadata !3955, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %6, metadata !3956, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %0, metadata !3957, metadata !DIExpression()), !dbg !4019
  %11 = bitcast i8* %0 to i32*, !dbg !4020
  call void @llvm.dbg.value(metadata i32* %11, metadata !3958, metadata !DIExpression()), !dbg !4019
  %12 = and i32 %4, 8, !dbg !4021
  %13 = icmp eq i32 %12, 0, !dbg !4022
  call void @llvm.dbg.value(metadata i1 %13, metadata !3962, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %0, metadata !3965, metadata !DIExpression()), !dbg !4019
  %14 = icmp eq i32 %1, 0, !dbg !4023
  br i1 %14, label %15, label %17, !dbg !4024

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4025
  br label %17, !dbg !4024

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4024
  call void @llvm.dbg.value(metadata i32 %18, metadata !3951, metadata !DIExpression()), !dbg !4019
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4026
  %20 = load i8, i8* %19, align 1, !dbg !4026
  %21 = zext i8 %20 to i32, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %21, metadata !3960, metadata !DIExpression()), !dbg !4019
  %22 = icmp ne i8 %20, 0, !dbg !4028
  %23 = and i32 %4, 1, !dbg !4029
  %24 = icmp ne i32 %23, 0, !dbg !4029
  %25 = and i1 %24, %22, !dbg !4029
  call void @llvm.dbg.value(metadata i1 %25, metadata !3964, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4030
  %27 = load i8, i8* %26, align 1, !dbg !4030
  %28 = zext i8 %27 to i32, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %28, metadata !3961, metadata !DIExpression()), !dbg !4019
  %29 = icmp ne i8 %27, 0, !dbg !4032
  %30 = and i32 %4, 2, !dbg !4033
  %31 = icmp ne i32 %30, 0, !dbg !4033
  %32 = and i1 %31, %29, !dbg !4033
  call void @llvm.dbg.value(metadata i1 %32, metadata !3963, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4034
  br i1 %33, label %38, label %34, !dbg !4034

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4036
  br i1 %35, label %267, label %36, !dbg !4039

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4040
  br label %267, !dbg !4042

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4043
  %40 = zext i8 %39 to i32, !dbg !4044
  %41 = shl nuw nsw i32 %40, 2, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %41, metadata !3959, metadata !DIExpression()), !dbg !4019
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4046
  %43 = bitcast i8* %42 to i8**, !dbg !4047
  %44 = load i8*, i8** %43, align 4, !dbg !4047
  call void @llvm.dbg.value(metadata i8* %44, metadata !3968, metadata !DIExpression()), !dbg !4019
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %45, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3970, metadata !DIExpression()), !dbg !4019
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4049
  br i1 %46, label %47, label %132, !dbg !4050

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !3967, metadata !DIExpression()), !dbg !4019
  br i1 %25, label %48, label %73, !dbg !4051

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %45, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3970, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3971, metadata !DIExpression()), !dbg !4052
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4053

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %52, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %53, metadata !3970, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %54, metadata !3971, metadata !DIExpression()), !dbg !4052
  %55 = load i8, i8* %52, align 1, !dbg !4054
  %56 = zext i8 %55 to i32, !dbg !4055
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4055
  %58 = bitcast i32* %57 to i8**, !dbg !4056
  %59 = load i8*, i8** %58, align 4, !dbg !4056
  call void @llvm.dbg.value(metadata i8* %59, metadata !3977, metadata !DIExpression()), !dbg !4057
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %60, metadata !3980, metadata !DIExpression()), !dbg !4057
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4059
  br i1 %62, label %63, label %67, !dbg !4059

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4061
  %65 = add nuw i32 %53, 1, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %65, metadata !3970, metadata !DIExpression()), !dbg !4019
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4064
  store i16 %64, i16* %66, align 2, !dbg !4065
  br label %67, !dbg !4066

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4019
  call void @llvm.dbg.value(metadata i32 %68, metadata !3970, metadata !DIExpression()), !dbg !4019
  %69 = add nsw i32 %60, %51, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %69, metadata !3967, metadata !DIExpression()), !dbg !4019
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4068
  call void @llvm.dbg.value(metadata i8* %70, metadata !3969, metadata !DIExpression()), !dbg !4019
  %71 = add nuw nsw i32 %54, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %71, metadata !3971, metadata !DIExpression()), !dbg !4052
  %72 = icmp eq i32 %71, %21, !dbg !4070
  br i1 %72, label %79, label %50, !dbg !4053, !llvm.loop !4071

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4073
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4073
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4073
  br label %79, !dbg !4073

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4076
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4019
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4077
  call void @llvm.dbg.value(metadata i1 undef, metadata !3981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4078
  call void @llvm.dbg.value(metadata i32 0, metadata !3982, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i32 %82, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %81, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %80, metadata !3970, metadata !DIExpression()), !dbg !4019
  %83 = icmp eq i8 %27, 0, !dbg !4080
  br i1 %83, label %267, label %84, !dbg !4081

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4082
  %86 = icmp eq i32 %85, 0, !dbg !4083
  call void @llvm.dbg.value(metadata i1 %86, metadata !3981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4078
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4081

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %93, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %94, metadata !3970, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %95, metadata !3982, metadata !DIExpression()), !dbg !4079
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4084
  call void @llvm.dbg.value(metadata i8* %96, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 undef, metadata !3984, metadata !DIExpression()), !dbg !4085
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4086
  call void @llvm.dbg.value(metadata i8* %97, metadata !3969, metadata !DIExpression()), !dbg !4019
  %98 = load i8, i8* %96, align 1, !dbg !4087
  call void @llvm.dbg.value(metadata i8 %98, metadata !3987, metadata !DIExpression()), !dbg !4085
  %99 = zext i8 %98 to i32, !dbg !4088
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4088
  %101 = bitcast i32* %100 to i8**, !dbg !4089
  %102 = load i8*, i8** %101, align 4, !dbg !4089
  call void @llvm.dbg.value(metadata i8* %102, metadata !3988, metadata !DIExpression()), !dbg !4085
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4090
  call void @llvm.dbg.value(metadata i1 %103, metadata !3989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4085
  br i1 %13, label %110, label %104, !dbg !4091

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4093
  call void @llvm.dbg.value(metadata i8 %105, metadata !3984, metadata !DIExpression()), !dbg !4085
  %106 = zext i8 %105 to i32, !dbg !4094
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4095
  br i1 %107, label %108, label %110, !dbg !4096

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4097
  %109 = add nsw i32 %92, -2, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %109, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %127, !dbg !4104

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4105

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4106

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %113, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %127, !dbg !4111

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4112

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4015), !dbg !4113
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %116, metadata !3990, metadata !DIExpression()), !dbg !4085
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4115
  br i1 %118, label %119, label %123, !dbg !4115

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4117
  %121 = add nuw i32 %94, 1, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %121, metadata !3970, metadata !DIExpression()), !dbg !4019
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4120
  store i16 %120, i16* %122, align 2, !dbg !4121
  br label %123, !dbg !4122

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4019
  call void @llvm.dbg.value(metadata i32 %124, metadata !3970, metadata !DIExpression()), !dbg !4019
  %125 = add i32 %92, -1, !dbg !4123
  %126 = add i32 %125, %116, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %126, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %127, !dbg !4125

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4019
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4085
  call void @llvm.dbg.value(metadata i32 %129, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %128, metadata !3970, metadata !DIExpression()), !dbg !4019
  %130 = add nuw nsw i32 %95, 1, !dbg !4126
  call void @llvm.dbg.value(metadata i8* %97, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %130, metadata !3982, metadata !DIExpression()), !dbg !4079
  %131 = icmp eq i32 %130, %28, !dbg !4080
  br i1 %131, label %267, label %91, !dbg !4081, !llvm.loop !4127

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3992, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3993, metadata !DIExpression()), !dbg !4130
  br i1 %25, label %133, label %135, !dbg !4131

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !3994, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 0, metadata !3995, metadata !DIExpression()), !dbg !4019
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4132
  call void @llvm.dbg.value(metadata i8* %134, metadata !3996, metadata !DIExpression()), !dbg !4019
  br label %140, !dbg !4135

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4136
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4136

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3996, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 undef, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 0, metadata !3994, metadata !DIExpression()), !dbg !4019
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4138
  br label %145, !dbg !4141

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4142
  call void @llvm.dbg.value(metadata i8* %148, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.value(metadata i8 %146, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 %147, metadata !3994, metadata !DIExpression()), !dbg !4019
  %149 = icmp eq i8 %27, 0, !dbg !4144
  br i1 %149, label %150, label %152, !dbg !4145

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4146
  br label %157, !dbg !4145

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4145

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4146
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4147
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4148
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4019
  call void @llvm.dbg.value(metadata i8 undef, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4019
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4149
  %163 = load i8, i8* %162, align 1, !dbg !4149
  %164 = zext i8 %159 to i32, !dbg !4150
  %165 = add i8 %163, %159, !dbg !4151
  call void @llvm.dbg.value(metadata i8 %165, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4019
  %166 = icmp eq i32 %30, 0, !dbg !4152
  %167 = lshr i8 %160, 1, !dbg !4153
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4153
  call void @llvm.dbg.value(metadata i8 %168, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4019
  %169 = icmp eq i32 %23, 0, !dbg !4154
  %170 = icmp eq i32 %158, 0, !dbg !4146
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4146
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4146
  call void @llvm.dbg.value(metadata i8 %172, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4019
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4006, metadata !DIExpression()), !dbg !4155
  %173 = load i32, i32* %11, align 1, !dbg !4156
  store i8 %165, i8* %162, align 1, !dbg !4157
  store i8 %172, i8* %19, align 1, !dbg !4157
  store i8 %168, i8* %26, align 1, !dbg !4157
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4158
  call void @llvm.dbg.value(metadata i32 %174, metadata !3997, metadata !DIExpression()), !dbg !4019
  %175 = icmp slt i32 %174, 0, !dbg !4159
  br i1 %175, label %267, label %220, !dbg !4161

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %178, metadata !3998, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.value(metadata i8 %179, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 %180, metadata !3994, metadata !DIExpression()), !dbg !4019
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %181, metadata !3969, metadata !DIExpression()), !dbg !4019
  %182 = load i8, i8* %177, align 1, !dbg !4163
  call void @llvm.dbg.value(metadata i8 %182, metadata !4000, metadata !DIExpression()), !dbg !4164
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4165
  call void @llvm.dbg.value(metadata i8* %183, metadata !3969, metadata !DIExpression()), !dbg !4019
  %184 = load i8, i8* %181, align 1, !dbg !4166
  call void @llvm.dbg.value(metadata i8 %184, metadata !4003, metadata !DIExpression()), !dbg !4164
  %185 = zext i8 %184 to i32, !dbg !4167
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4167
  %187 = bitcast i32* %186 to i8**, !dbg !4168
  %188 = load i8*, i8** %187, align 4, !dbg !4168
  call void @llvm.dbg.value(metadata i8* %188, metadata !4004, metadata !DIExpression()), !dbg !4164
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !4169
  call void @llvm.dbg.value(metadata i1 %189, metadata !4005, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4164
  br i1 %13, label %193, label %190, !dbg !4170

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4172
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !4173
  br i1 %192, label %215, label %193, !dbg !4174

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4175

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4176

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4179
  call void @llvm.dbg.value(metadata i8 %196, metadata !3994, metadata !DIExpression()), !dbg !4019
  br label %208, !dbg !4182

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4183

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4184
  call void @llvm.dbg.value(metadata i8 %199, metadata !3995, metadata !DIExpression()), !dbg !4019
  br label %208, !dbg !4187

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4188

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4190
  call void @llvm.dbg.value(metadata i8 %202, metadata !3994, metadata !DIExpression()), !dbg !4019
  br label %208, !dbg !4193

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4194
  call void @llvm.dbg.value(metadata i8 %204, metadata !3995, metadata !DIExpression()), !dbg !4019
  %205 = zext i8 %179 to i32, !dbg !4196
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4196
  store i8 %182, i8* %206, align 1, !dbg !4197
  %207 = add i8 %179, 2, !dbg !4198
  call void @llvm.dbg.value(metadata i8 %207, metadata !3995, metadata !DIExpression()), !dbg !4019
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4199
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4199
  store i8 %184, i8* %214, align 1, !dbg !4199
  br label %215, !dbg !4200

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4019
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4148
  call void @llvm.dbg.value(metadata i8 %217, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 %216, metadata !3994, metadata !DIExpression()), !dbg !4019
  %218 = add nuw nsw i32 %178, 1, !dbg !4200
  call void @llvm.dbg.value(metadata i8* %183, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %218, metadata !3998, metadata !DIExpression()), !dbg !4143
  %219 = icmp eq i32 %218, %28, !dbg !4144
  br i1 %219, label %157, label %176, !dbg !4145, !llvm.loop !4201

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %174, metadata !3967, metadata !DIExpression()), !dbg !4019
  store i32 %173, i32* %11, align 1, !dbg !4203
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4204
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %223, metadata !3997, metadata !DIExpression()), !dbg !4019
  %224 = icmp slt i32 %223, 0, !dbg !4206
  br i1 %224, label %267, label %225, !dbg !4208

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !3967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4019
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4209
  %228 = add nuw nsw i32 %41, %21, !dbg !4209
  %229 = sub i32 %227, %228, !dbg !4209
  call void @llvm.dbg.value(metadata i32 %229, metadata !4007, metadata !DIExpression()), !dbg !4019
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !4210
  call void @llvm.dbg.value(metadata i32 %230, metadata !3997, metadata !DIExpression()), !dbg !4019
  %231 = icmp slt i32 %230, 0, !dbg !4211
  br i1 %231, label %267, label %232, !dbg !4213

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %233, metadata !3967, metadata !DIExpression()), !dbg !4019
  %234 = add nuw nsw i32 %233, %230, !dbg !4215
  call void @llvm.dbg.value(metadata i32 %234, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !4008, metadata !DIExpression()), !dbg !4216
  %235 = icmp eq i8 %159, 0, !dbg !4217
  br i1 %235, label %264, label %236, !dbg !4218

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4218

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4008, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %240, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4219
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4220
  %242 = load i8, i8* %241, align 1, !dbg !4220
  call void @llvm.dbg.value(metadata i8 %242, metadata !4010, metadata !DIExpression()), !dbg !4221
  store i8 %242, i8* %10, align 1, !dbg !4222
  %243 = zext i8 %242 to i32, !dbg !4223
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4223
  %245 = bitcast i32* %244 to i8**, !dbg !4224
  %246 = load i8*, i8** %245, align 4, !dbg !4224
  call void @llvm.dbg.value(metadata i8* %246, metadata !4013, metadata !DIExpression()), !dbg !4221
  br i1 %237, label %250, label %247, !dbg !4225

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4226
  %249 = load i16, i16* %248, align 2, !dbg !4226
  br label %250, !dbg !4225

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4225
  call void @llvm.dbg.value(metadata i32 undef, metadata !4014, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4221
  call void @llvm.dbg.value(metadata i8* %10, metadata !4010, metadata !DIExpression(DW_OP_deref)), !dbg !4221
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %252, metadata !3997, metadata !DIExpression()), !dbg !4019
  %253 = icmp slt i32 %252, 0, !dbg !4228
  br i1 %253, label %257, label %254, !dbg !4230

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4014, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !3967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4019
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %255, metadata !3997, metadata !DIExpression()), !dbg !4019
  %256 = icmp slt i32 %255, 0, !dbg !4232
  br i1 %256, label %257, label %259, !dbg !4234

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4235
  call void @llvm.dbg.value(metadata i32 undef, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %260, metadata !3967, metadata !DIExpression()), !dbg !4019
  %261 = add nsw i32 %260, %255, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %261, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4235
  %262 = add nuw nsw i32 %239, 1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %262, metadata !4008, metadata !DIExpression()), !dbg !4216
  %263 = icmp eq i32 %262, %164, !dbg !4217
  br i1 %263, label %264, label %238, !dbg !4218, !llvm.loop !4239

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4215
  call void @llvm.dbg.value(metadata i32 %265, metadata !3967, metadata !DIExpression()), !dbg !4019
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4241
  br label %267, !dbg !4242

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4019
  ret i32 %268, !dbg !4243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4244 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4248, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %0, metadata !4249, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %0, metadata !4250, metadata !DIExpression()), !dbg !4256
  %2 = load i8, i8* %0, align 1, !dbg !4257
  %3 = zext i8 %2 to i32, !dbg !4257
  %4 = shl nuw nsw i32 %3, 2, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %4, metadata !4251, metadata !DIExpression()), !dbg !4256
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4259
  %6 = load i8, i8* %5, align 1, !dbg !4259
  %7 = zext i8 %6 to i32, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %7, metadata !4252, metadata !DIExpression()), !dbg !4256
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4260
  %9 = load i8, i8* %8, align 1, !dbg !4260
  %10 = zext i8 %9 to i32, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %10, metadata !4253, metadata !DIExpression()), !dbg !4256
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4261
  call void @llvm.dbg.value(metadata i8* %11, metadata !4249, metadata !DIExpression()), !dbg !4256
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4262
  call void @llvm.dbg.value(metadata i8* %12, metadata !4249, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i32 0, metadata !4254, metadata !DIExpression()), !dbg !4263
  %13 = icmp eq i8 %6, 0, !dbg !4264
  br i1 %13, label %14, label %19, !dbg !4266

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4256
  %16 = ptrtoint i8* %15 to i32, !dbg !4267
  %17 = ptrtoint i8* %0 to i32, !dbg !4267
  %18 = sub i32 %16, %17, !dbg !4267
  ret i32 %18, !dbg !4268

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4254, metadata !DIExpression()), !dbg !4263
  call void @llvm.dbg.value(metadata i8* %21, metadata !4249, metadata !DIExpression()), !dbg !4256
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4269
  call void @llvm.dbg.value(metadata i8* %22, metadata !4249, metadata !DIExpression()), !dbg !4256
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !4271
  %24 = add i32 %23, 1, !dbg !4272
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4273
  call void @llvm.dbg.value(metadata i8* %25, metadata !4249, metadata !DIExpression()), !dbg !4256
  %26 = add nuw nsw i32 %20, 1, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %26, metadata !4254, metadata !DIExpression()), !dbg !4263
  %27 = icmp eq i32 %26, %7, !dbg !4264
  br i1 %27, label %14, label %19, !dbg !4266, !llvm.loop !4275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4277 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4281, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %1, metadata !4282, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %2, metadata !4283, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i16 %3, metadata !4284, metadata !DIExpression()), !dbg !4285
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4286
  br i1 %5, label %6, label %9, !dbg !4288

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4289
  %8 = add i32 %7, 1, !dbg !4291
  br label %20, !dbg !4292

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4293
  br i1 %10, label %13, label %11, !dbg !4294

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4294
  br label %16, !dbg !4294

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4295
  %15 = add i32 %14, 1, !dbg !4296
  br label %16, !dbg !4294

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4294
  %18 = and i32 %17, 65535, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %17, metadata !4284, metadata !DIExpression()), !dbg !4285
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4298
  br label %20, !dbg !4299

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4285
  ret i32 %21, !dbg !4300
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4303, metadata !DIExpression()), !dbg !4304
  ret i32 0, !dbg !4305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4306 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4310, metadata !DIExpression()), !dbg !4311
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4312
  ret void, !dbg !4313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !4314 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4317
  ret i8* %1, !dbg !4318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4319 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4330, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i8* %0, metadata !4329, metadata !DIExpression()), !dbg !4339
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4340
  ret void, !dbg !4342
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4347, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i8* %1, metadata !4348, metadata !DIExpression()), !dbg !4349
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4350
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4350
  ret i32 %4, !dbg !4351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4352 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4359, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4356, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %1, metadata !4357, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %2, metadata !4358, metadata !DIExpression()), !dbg !4360
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4361
  ret void, !dbg !4362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4367, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 %1, metadata !4368, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 0, metadata !4369, metadata !DIExpression()), !dbg !4370
  %3 = icmp eq i32 %1, 0, !dbg !4371
  br i1 %3, label %13, label %4, !dbg !4374

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4369, metadata !DIExpression()), !dbg !4370
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4375
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4377
  %8 = load i8, i8* %7, align 1, !dbg !4377
  %9 = zext i8 %8 to i32, !dbg !4377
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4375
  %11 = add nuw i32 %5, 1, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %11, metadata !4369, metadata !DIExpression()), !dbg !4370
  %12 = icmp eq i32 %11, %1, !dbg !4371
  br i1 %12, label %13, label %4, !dbg !4374, !llvm.loop !4379

13:                                               ; preds = %4, %2
  ret void, !dbg !4381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4382 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4386, metadata !DIExpression()), !dbg !4388
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4389
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4389
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4387, metadata !DIExpression()), !dbg !4390
  call void @llvm.va_start(i8* nonnull %3), !dbg !4391
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4392
  %5 = load i32, i32* %4, align 4, !dbg !4392
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4392
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4392
  call void @llvm.va_end(i8* nonnull %3), !dbg !4393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4394
  ret void, !dbg !4394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4395 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4399, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i32 %1, metadata !4400, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i8* %2, metadata !4401, metadata !DIExpression()), !dbg !4404
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4405
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4402, metadata !DIExpression()), !dbg !4406
  call void @llvm.va_start(i8* nonnull %5), !dbg !4407
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4408
  %7 = load i32, i32* %6, align 4, !dbg !4408
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4408
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %9, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.va_end(i8* nonnull %5), !dbg !4409
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4410
  ret i32 %9, !dbg !4411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4412 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i8* %0, metadata !4416, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i32 %1, metadata !4417, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i8* %2, metadata !4418, metadata !DIExpression()), !dbg !4426
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4427
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4427
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4420, metadata !DIExpression()), !dbg !4428
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4429
  store i8* %0, i8** %7, align 4, !dbg !4429
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4429
  store i32 %1, i32* %8, align 4, !dbg !4429
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4429
  store i32 0, i32* %9, align 4, !dbg !4429
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4430
  %10 = load i32, i32* %9, align 4, !dbg !4431
  %11 = load i32, i32* %8, align 4, !dbg !4433
  %12 = icmp slt i32 %10, %11, !dbg !4434
  br i1 %12, label %13, label %15, !dbg !4435

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4436
  store i8 0, i8* %14, align 1, !dbg !4438
  br label %15, !dbg !4439

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4440
  ret i32 %10, !dbg !4441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4447, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4448, metadata !DIExpression()), !dbg !4449
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4450
  %4 = load i8*, i8** %3, align 4, !dbg !4450
  %5 = icmp eq i8* %4, null, !dbg !4452
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4453
  br i1 %5, label %12, label %8, !dbg !4454

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4455
  %10 = load i32, i32* %9, align 4, !dbg !4455
  %11 = icmp slt i32 %7, %10, !dbg !4456
  br i1 %11, label %15, label %12, !dbg !4457

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4458
  %14 = add nsw i32 %7, 1, !dbg !4460
  store i32 %14, i32* %13, align 4, !dbg !4460
  br label %25, !dbg !4461

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4462
  %17 = icmp eq i32 %7, %16, !dbg !4464
  br i1 %17, label %18, label %21, !dbg !4465

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4466
  store i32 %19, i32* %6, align 4, !dbg !4466
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4468
  store i8 0, i8* %20, align 1, !dbg !4469
  br label %25, !dbg !4470

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4471
  %23 = add nsw i32 %7, 1, !dbg !4473
  store i32 %23, i32* %6, align 4, !dbg !4473
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4474
  store i8 %22, i8* %24, align 1, !dbg !4475
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4476
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4477 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4482, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i8* %1, metadata !4483, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i8* %2, metadata !4484, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i8* %3, metadata !4485, metadata !DIExpression()), !dbg !4486
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4487
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4488
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4489
  unreachable, !dbg !4490
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4491 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4589
  ret %struct.k_thread* %1, !dbg !4590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4595, metadata !DIExpression()), !dbg !4596
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4597, !srcloc !4599
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4600
  ret void, !dbg !4601
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4602 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4603, !srcloc !4605
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4606
  ret %struct.k_thread* %1, !dbg !4607
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !4608 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4619, metadata !DIExpression()), !dbg !4623
  call void @llvm.dbg.value(metadata i8* %1, metadata !4620, metadata !DIExpression()), !dbg !4623
  %3 = icmp eq i8* %1, null, !dbg !4624
  br i1 %3, label %8, label %4, !dbg !4626

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4627
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4627
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4621, metadata !DIExpression()), !dbg !4623
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !4628, !range !4629
  call void @llvm.dbg.value(metadata i32 %7, metadata !4622, metadata !DIExpression()), !dbg !4623
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #24, !dbg !4630
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #24, !dbg !4631
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4633 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4637, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.value(metadata i8* %1, metadata !4638, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.value(metadata i8* %1, metadata !4639, metadata !DIExpression()), !dbg !4641
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !4642
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4640, metadata !DIExpression()), !dbg !4641
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4643
  %5 = ptrtoint i8* %4 to i32, !dbg !4644
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4644
  %7 = sub i32 %5, %6, !dbg !4644
  %8 = lshr i32 %7, 3, !dbg !4645
  ret i32 %8, !dbg !4646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4647 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4651, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.value(metadata i32 %1, metadata !4652, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.value(metadata i1 %2, metadata !4653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4656
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !4657
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4654, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4655, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4656
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4658
  %6 = bitcast i8* %5 to i16*, !dbg !4658
  %7 = load i16, i16* %6, align 2, !dbg !4658
  %8 = and i16 %7, -2, !dbg !4662
  %9 = zext i1 %2 to i16, !dbg !4662
  %10 = or i16 %8, %9, !dbg !4662
  store i16 %10, i16* %6, align 2, !dbg !4658
  ret void, !dbg !4663
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4664 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4668, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %1, metadata !4669, metadata !DIExpression()), !dbg !4670
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4671
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !4673
  br i1 %4, label %7, label %5, !dbg !4674

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !4675
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4677
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !4678
  br label %7, !dbg !4679

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4680, !range !4682
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !4683
  br i1 %9, label %13, label %10, !dbg !4684

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !4685
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4687, !range !4682
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #24, !dbg !4688
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %12, metadata !4669, metadata !DIExpression()), !dbg !4670
  br label %13, !dbg !4690

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4669, metadata !DIExpression()), !dbg !4670
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #24, !dbg !4691
  ret void, !dbg !4692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4693 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4697, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i32 %1, metadata !4698, metadata !DIExpression()), !dbg !4699
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4700
  %4 = add i32 %3, %1, !dbg !4701
  ret i32 %4, !dbg !4702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4703 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4707, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.value(metadata i32 %1, metadata !4708, metadata !DIExpression()), !dbg !4709
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !4710
  %4 = and i32 %3, 1, !dbg !4711
  %5 = icmp ne i32 %4, 0, !dbg !4710
  ret i1 %5, !dbg !4712
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4713 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4715, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.value(metadata i32 %1, metadata !4716, metadata !DIExpression()), !dbg !4720
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4721, !range !4722
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %4, metadata !4717, metadata !DIExpression()), !dbg !4724
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !4725
  ret void, !dbg !4726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4727 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4731, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 %1, metadata !4732, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 %2, metadata !4733, metadata !DIExpression()), !dbg !4736
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4737
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !4738
  %6 = add i32 %5, %4, !dbg !4739
  call void @llvm.dbg.value(metadata i32 %6, metadata !4734, metadata !DIExpression()), !dbg !4736
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !4740
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !4741
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !4742
  ret void, !dbg !4743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4744 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4746, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i32 %1, metadata !4747, metadata !DIExpression()), !dbg !4748
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #24, !dbg !4749
  %4 = sub i32 %1, %3, !dbg !4750
  ret i32 %4, !dbg !4751
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4752 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4754, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.value(metadata i32 %1, metadata !4755, metadata !DIExpression()), !dbg !4759
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4760, !range !4722
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !4761
  call void @llvm.dbg.value(metadata i32 %4, metadata !4756, metadata !DIExpression()), !dbg !4762
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !4763
  ret void, !dbg !4764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4765 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4769, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 %1, metadata !4770, metadata !DIExpression()), !dbg !4771
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !4772
  %4 = lshr i32 %3, 1, !dbg !4773
  ret i32 %4, !dbg !4774
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4775 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4779, metadata !DIExpression()), !dbg !4782
  call void @llvm.dbg.value(metadata i32 %1, metadata !4780, metadata !DIExpression()), !dbg !4782
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #24, !dbg !4783
  %4 = add i32 %1, 1, !dbg !4784
  %5 = sub i32 %4, %3, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %5, metadata !4781, metadata !DIExpression()), !dbg !4782
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4786, !range !4787
  %7 = sub nsw i32 31, %6, !dbg !4788
  ret i32 %7, !dbg !4789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4790 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4794, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i32 %1, metadata !4795, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i32 %2, metadata !4796, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4797, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4803
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4804
  %5 = load i32, i32* %4, align 4, !dbg !4804
  %6 = icmp eq i32 %5, 0, !dbg !4805
  br i1 %6, label %7, label %12, !dbg !4806

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4807
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4809
  %10 = load i32, i32* %9, align 4, !dbg !4810
  %11 = or i32 %10, %8, !dbg !4810
  store i32 %11, i32* %9, align 4, !dbg !4810
  store i32 %1, i32* %4, align 4, !dbg !4811
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !4812
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !4813
  br label %14, !dbg !4814

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4799, metadata !DIExpression()), !dbg !4815
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #24, !dbg !4816, !range !4817
  call void @llvm.dbg.value(metadata i32 %13, metadata !4802, metadata !DIExpression()), !dbg !4815
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #24, !dbg !4818
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #24, !dbg !4819
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #24, !dbg !4820
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #24, !dbg !4821
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4823 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4825, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i32 %1, metadata !4826, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i32 %2, metadata !4827, metadata !DIExpression()), !dbg !4828
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #24, !dbg !4829
  ret void, !dbg !4830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4831 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4833, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i32 %1, metadata !4834, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i32 %2, metadata !4835, metadata !DIExpression()), !dbg !4836
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #24, !dbg !4837
  ret void, !dbg !4838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !4839 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4841, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i32 %1, metadata !4842, metadata !DIExpression()), !dbg !4843
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #24, !dbg !4844
  ret i32 %3, !dbg !4845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4846 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4850, metadata !DIExpression()), !dbg !4855
  call void @llvm.dbg.value(metadata i32 %1, metadata !4851, metadata !DIExpression()), !dbg !4855
  call void @llvm.dbg.value(metadata i32 %2, metadata !4852, metadata !DIExpression()), !dbg !4855
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !4856
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4853, metadata !DIExpression()), !dbg !4855
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4854, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4855
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4854, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4855
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %5, metadata !4854, metadata !DIExpression()), !dbg !4855
  %6 = bitcast i8* %5 to i16*, !dbg !4858
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4861
  %8 = load i16, i16* %7, align 2, !dbg !4861
  %9 = zext i16 %8 to i32, !dbg !4861
  ret i32 %9, !dbg !4862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !4863 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4867, metadata !DIExpression()), !dbg !4868
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4869
  ret %struct.chunk_unit_t* %2, !dbg !4870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !4871 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4875, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %1, metadata !4876, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %2, metadata !4877, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %3, metadata !4878, metadata !DIExpression()), !dbg !4881
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !4882
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4879, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4880, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4881
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %6, metadata !4880, metadata !DIExpression()), !dbg !4881
  %7 = trunc i32 %3 to i16, !dbg !4884
  %8 = bitcast i8* %6 to i16*, !dbg !4887
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4888
  store i16 %7, i16* %9, align 2, !dbg !4889
  ret void, !dbg !4890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !4891 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4895, metadata !DIExpression()), !dbg !4896
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #24, !dbg !4897
  ret i32 %2, !dbg !4898
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !4899 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4903, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.value(metadata i32 %1, metadata !4904, metadata !DIExpression()), !dbg !4905
  %3 = add i32 %1, 4, !dbg !4906
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #24, !dbg !4907
  ret i32 %4, !dbg !4908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !4909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4913, metadata !DIExpression()), !dbg !4914
  %2 = add i32 %0, 7, !dbg !4915
  %3 = lshr i32 %2, 3, !dbg !4916
  ret i32 %3, !dbg !4917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4918 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4922, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.value(metadata i32 %1, metadata !4923, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.value(metadata i32 %2, metadata !4924, metadata !DIExpression()), !dbg !4925
  %4 = shl i32 %2, 1, !dbg !4926
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #24, !dbg !4927
  ret void, !dbg !4928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4929 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4931, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i32 %1, metadata !4932, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i32 %2, metadata !4933, metadata !DIExpression()), !dbg !4934
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #24, !dbg !4935
  ret void, !dbg !4936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4937 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4939, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 %1, metadata !4940, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 %2, metadata !4941, metadata !DIExpression()), !dbg !4947
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4948
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4942, metadata !DIExpression()), !dbg !4947
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4949
  %6 = icmp eq i32 %5, %1, !dbg !4950
  br i1 %6, label %7, label %14, !dbg !4951

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4952
  %9 = xor i32 %8, -1, !dbg !4954
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4955
  %11 = load i32, i32* %10, align 4, !dbg !4956
  %12 = and i32 %11, %9, !dbg !4956
  store i32 %12, i32* %10, align 4, !dbg !4956
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4957
  store i32 0, i32* %13, align 4, !dbg !4958
  br label %17, !dbg !4959

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %15, metadata !4943, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.value(metadata i32 %5, metadata !4946, metadata !DIExpression()), !dbg !4961
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4962
  store i32 %5, i32* %16, align 4, !dbg !4963
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #24, !dbg !4964
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #24, !dbg !4965
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !4967 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4969, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32 %1, metadata !4970, metadata !DIExpression()), !dbg !4971
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #24, !dbg !4972
  ret i32 %3, !dbg !4973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #4 !dbg !4974 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4978, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.value(metadata i8* %1, metadata !4979, metadata !DIExpression()), !dbg !4985
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4986
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4986
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4980, metadata !DIExpression()), !dbg !4985
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #24, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %5, metadata !4981, metadata !DIExpression()), !dbg !4985
  %6 = ptrtoint i8* %1 to i32, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %6, metadata !4982, metadata !DIExpression()), !dbg !4985
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #24, !dbg !4989
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4989
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %9, metadata !4983, metadata !DIExpression()), !dbg !4985
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #24, !dbg !4991
  %11 = shl i32 %10, 3, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %11, metadata !4984, metadata !DIExpression()), !dbg !4985
  %12 = sub i32 %9, %6, !dbg !4993
  %13 = add i32 %12, %11, !dbg !4994
  ret i32 %13, !dbg !4995
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !4996 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5000, metadata !DIExpression()), !dbg !5006
  call void @llvm.dbg.value(metadata i32 %1, metadata !5001, metadata !DIExpression()), !dbg !5006
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5007
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5007
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5002, metadata !DIExpression()), !dbg !5006
  %5 = icmp eq i32 %1, 0, !dbg !5008
  br i1 %5, label %19, label %6, !dbg !5010

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !5011
  br i1 %7, label %19, label %8, !dbg !5012

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !5013, !range !4629
  call void @llvm.dbg.value(metadata i32 %9, metadata !5004, metadata !DIExpression()), !dbg !5006
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #24, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %10, metadata !5005, metadata !DIExpression()), !dbg !5006
  %11 = icmp eq i32 %10, 0, !dbg !5015
  br i1 %11, label %19, label %12, !dbg !5017

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !5018
  %14 = icmp ugt i32 %13, %9, !dbg !5020
  br i1 %14, label %15, label %17, !dbg !5021

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5022
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #24, !dbg !5024
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #24, !dbg !5025
  br label %17, !dbg !5026

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #24, !dbg !5027
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %18, metadata !5003, metadata !DIExpression()), !dbg !5006
  br label %19, !dbg !5029

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5006
  ret i8* %20, !dbg !5030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5031 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5035, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i32 %1, metadata !5036, metadata !DIExpression()), !dbg !5037
  %3 = lshr i32 %1, 3, !dbg !5038
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5039
  %5 = load i32, i32* %4, align 4, !dbg !5039
  %6 = icmp uge i32 %3, %5, !dbg !5040
  ret i1 %6, !dbg !5041
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5042 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5046, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32 %1, metadata !5047, metadata !DIExpression()), !dbg !5061
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !5062
  call void @llvm.dbg.value(metadata i32 %3, metadata !5048, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5049, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5061
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5063
  %5 = load i32, i32* %4, align 4, !dbg !5063
  %6 = icmp eq i32 %5, 0, !dbg !5064
  br i1 %6, label %19, label %7, !dbg !5065

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5066
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5067
  call void @llvm.dbg.value(metadata i32 %9, metadata !5053, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 %8, metadata !5054, metadata !DIExpression()), !dbg !5068
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !5069
  %11 = icmp ult i32 %10, %1, !dbg !5071
  br i1 %11, label %13, label %12, !dbg !5072

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #24, !dbg !5073
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !5075
  store i32 %14, i32* %4, align 4, !dbg !5076
  %15 = add nsw i32 %9, -1, !dbg !5077
  call void @llvm.dbg.value(metadata i32 %15, metadata !5053, metadata !DIExpression()), !dbg !5067
  %16 = icmp eq i32 %15, 0, !dbg !5077
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5078
  br i1 %18, label %19, label %7, !dbg !5078, !llvm.loop !5079

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5082
  %21 = load i32, i32* %20, align 4, !dbg !5082
  %22 = add nsw i32 %3, 1, !dbg !5083
  %23 = shl nsw i32 -1, %22, !dbg !5083
  %24 = and i32 %21, %23, !dbg !5084
  call void @llvm.dbg.value(metadata i32 %24, metadata !5056, metadata !DIExpression()), !dbg !5061
  %25 = icmp eq i32 %24, 0, !dbg !5085
  br i1 %25, label %30, label %26, !dbg !5086

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5087, !range !4787
  call void @llvm.dbg.value(metadata i32 %27, metadata !5057, metadata !DIExpression()), !dbg !5088
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5089
  %29 = load i32, i32* %28, align 4, !dbg !5089
  call void @llvm.dbg.value(metadata i32 %29, metadata !5060, metadata !DIExpression()), !dbg !5088
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #24, !dbg !5090
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5061
  ret i32 %31, !dbg !5091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5092 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5094, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %1, metadata !5095, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %2, metadata !5096, metadata !DIExpression()), !dbg !5100
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !5101
  call void @llvm.dbg.value(metadata i32 %4, metadata !5097, metadata !DIExpression()), !dbg !5100
  %5 = sub i32 %2, %1, !dbg !5102
  call void @llvm.dbg.value(metadata i32 %5, metadata !5098, metadata !DIExpression()), !dbg !5100
  %6 = sub i32 %4, %5, !dbg !5103
  call void @llvm.dbg.value(metadata i32 %6, metadata !5099, metadata !DIExpression()), !dbg !5100
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #24, !dbg !5104
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #24, !dbg !5105
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #24, !dbg !5106
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !5107
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !5108
  ret void, !dbg !5109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5110 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5114, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i32 %1, metadata !5115, metadata !DIExpression()), !dbg !5118
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !5119
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5116, metadata !DIExpression()), !dbg !5118
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %4, metadata !5117, metadata !DIExpression()), !dbg !5118
  ret i8* %4, !dbg !5121
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5122 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5126, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %1, metadata !5127, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %2, metadata !5128, metadata !DIExpression()), !dbg !5138
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5139
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5139
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5129, metadata !DIExpression()), !dbg !5138
  %6 = sub i32 0, %1, !dbg !5140
  %7 = and i32 %6, %1, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %7, metadata !5131, metadata !DIExpression()), !dbg !5138
  %8 = icmp eq i32 %7, %1, !dbg !5142
  br i1 %8, label %13, label %9, !dbg !5144

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5145
  call void @llvm.dbg.value(metadata i32 %10, metadata !5127, metadata !DIExpression()), !dbg !5138
  %11 = icmp ult i32 %7, 4, !dbg !5147
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5147
  br label %17, !dbg !5147

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5148
  br i1 %14, label %15, label %17, !dbg !5151

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #24, !dbg !5152
  br label %57, !dbg !5154

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5138
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5155
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5127, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %19, metadata !5130, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %18, metadata !5131, metadata !DIExpression()), !dbg !5138
  %21 = icmp eq i32 %2, 0, !dbg !5156
  br i1 %21, label %57, label %22, !dbg !5158

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #24, !dbg !5159
  br i1 %23, label %57, label %24, !dbg !5160

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5161
  %26 = add i32 %25, %20, !dbg !5162
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #24, !dbg !5163, !range !4629
  call void @llvm.dbg.value(metadata i32 %27, metadata !5132, metadata !DIExpression()), !dbg !5138
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #24, !dbg !5164
  call void @llvm.dbg.value(metadata i32 %28, metadata !5133, metadata !DIExpression()), !dbg !5138
  %29 = icmp eq i32 %28, 0, !dbg !5165
  br i1 %29, label %57, label %30, !dbg !5167

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #24, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %31, metadata !5134, metadata !DIExpression()), !dbg !5138
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5169
  %33 = ptrtoint i8* %32 to i32, !dbg !5169
  %34 = add i32 %20, -1, !dbg !5169
  %35 = add i32 %34, %33, !dbg !5169
  %36 = sub i32 0, %20, !dbg !5169
  %37 = and i32 %35, %36, !dbg !5169
  %38 = inttoptr i32 %37 to i8*, !dbg !5170
  %39 = sub i32 0, %18, !dbg !5171
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5171
  call void @llvm.dbg.value(metadata i8* %40, metadata !5134, metadata !DIExpression()), !dbg !5138
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5172
  %42 = ptrtoint i8* %41 to i32, !dbg !5172
  %43 = add i32 %42, 7, !dbg !5172
  %44 = and i32 %43, -8, !dbg !5172
  call void @llvm.dbg.value(metadata i32 %44, metadata !5135, metadata !DIExpression()), !dbg !5138
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #24, !dbg !5173
  call void @llvm.dbg.value(metadata i32 %45, metadata !5136, metadata !DIExpression()), !dbg !5138
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #24, !dbg !5174
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5175
  %48 = sub i32 %44, %47, !dbg !5175
  %49 = ashr exact i32 %48, 3, !dbg !5175
  call void @llvm.dbg.value(metadata i32 %49, metadata !5137, metadata !DIExpression()), !dbg !5138
  %50 = icmp ugt i32 %45, %28, !dbg !5176
  br i1 %50, label %51, label %52, !dbg !5178

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #24, !dbg !5179
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #24, !dbg !5181
  br label %52, !dbg !5182

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #24, !dbg !5183
  %54 = icmp ugt i32 %53, %49, !dbg !5185
  br i1 %54, label %55, label %56, !dbg !5186

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #24, !dbg !5187
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #24, !dbg !5189
  br label %56, !dbg !5190

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #24, !dbg !5191
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5138
  ret i8* %58, !dbg !5192
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5193 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5197, metadata !DIExpression()), !dbg !5216
  call void @llvm.dbg.value(metadata i8* %1, metadata !5198, metadata !DIExpression()), !dbg !5216
  call void @llvm.dbg.value(metadata i32 %2, metadata !5199, metadata !DIExpression()), !dbg !5216
  call void @llvm.dbg.value(metadata i32 %3, metadata !5200, metadata !DIExpression()), !dbg !5216
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5217
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5217
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5201, metadata !DIExpression()), !dbg !5216
  %7 = icmp eq i8* %1, null, !dbg !5218
  br i1 %7, label %8, label %10, !dbg !5220

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !5221
  br label %59, !dbg !5223

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5224
  br i1 %11, label %12, label %13, !dbg !5226

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !5227
  br label %59, !dbg !5229

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #24, !dbg !5230
  br i1 %14, label %59, label %15, !dbg !5232

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !5233, !range !4629
  call void @llvm.dbg.value(metadata i32 %16, metadata !5202, metadata !DIExpression()), !dbg !5216
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !5234
  call void @llvm.dbg.value(metadata i32 %17, metadata !5203, metadata !DIExpression()), !dbg !5216
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !5235
  %19 = ptrtoint i8* %1 to i32, !dbg !5236
  %20 = ptrtoint i8* %18 to i32, !dbg !5236
  %21 = sub i32 %19, %20, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %21, metadata !5204, metadata !DIExpression()), !dbg !5216
  %22 = add i32 %21, %3, !dbg !5237
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #24, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %23, metadata !5205, metadata !DIExpression()), !dbg !5216
  %24 = icmp eq i32 %2, 0, !dbg !5239
  br i1 %24, label %29, label %25, !dbg !5240

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5241
  %27 = and i32 %26, %19, !dbg !5242
  %28 = icmp eq i32 %27, 0, !dbg !5242
  br i1 %28, label %29, label %49, !dbg !5243

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !5244
  %31 = icmp eq i32 %23, %30, !dbg !5245
  br i1 %31, label %59, label %32, !dbg !5246

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5247
  br i1 %33, label %34, label %36, !dbg !5248

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5249
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #24, !dbg !5251
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #24, !dbg !5252
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #24, !dbg !5253
  br label %59, !dbg !5254

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !5255
  br i1 %37, label %49, label %38, !dbg !5256

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !5257
  %40 = add i32 %39, %30, !dbg !5258
  %41 = icmp ult i32 %40, %23, !dbg !5259
  br i1 %41, label %49, label %42, !dbg !5260

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %43, metadata !5206, metadata !DIExpression()), !dbg !5262
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !5263
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #24, !dbg !5264
  %45 = icmp ult i32 %43, %44, !dbg !5266
  br i1 %45, label %46, label %48, !dbg !5267

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5268
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #24, !dbg !5270
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #24, !dbg !5271
  br label %48, !dbg !5272

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #24, !dbg !5273
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #24, !dbg !5274
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !5275
  call void @llvm.dbg.value(metadata i8* %50, metadata !5212, metadata !DIExpression()), !dbg !5216
  %51 = icmp eq i8* %50, null, !dbg !5276
  br i1 %51, label %59, label %52, !dbg !5277

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #24, !dbg !5278, !range !4722
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #24, !dbg !5279
  %55 = sub i32 %54, %21, !dbg !5280
  call void @llvm.dbg.value(metadata i32 %55, metadata !5213, metadata !DIExpression()), !dbg !5281
  %56 = icmp ult i32 %55, %3, !dbg !5282
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5282
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !5283
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !5284
  br label %59, !dbg !5285

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5216
  ret i8* %60, !dbg !5286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5287 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5291, metadata !DIExpression()), !dbg !5293
  call void @llvm.dbg.value(metadata i32 %1, metadata !5292, metadata !DIExpression()), !dbg !5293
  %3 = shl i32 %1, 3, !dbg !5294
  %4 = add i32 %3, -4, !dbg !5295
  ret i32 %4, !dbg !5296
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5297 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5301, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.value(metadata i8* %1, metadata !5302, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.value(metadata i32 %2, metadata !5303, metadata !DIExpression()), !dbg !5312
  %4 = add i32 %2, -4, !dbg !5313
  call void @llvm.dbg.value(metadata i32 %4, metadata !5303, metadata !DIExpression()), !dbg !5312
  %5 = ptrtoint i8* %1 to i32, !dbg !5314
  %6 = add i32 %5, 7, !dbg !5314
  %7 = and i32 %6, -8, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %7, metadata !5304, metadata !DIExpression()), !dbg !5312
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5315
  %9 = ptrtoint i8* %8 to i32, !dbg !5315
  %10 = and i32 %9, -8, !dbg !5315
  call void @llvm.dbg.value(metadata i32 %10, metadata !5305, metadata !DIExpression()), !dbg !5312
  %11 = sub i32 %10, %7, !dbg !5316
  %12 = lshr exact i32 %11, 3, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %12, metadata !5306, metadata !DIExpression()), !dbg !5312
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5318
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5307, metadata !DIExpression()), !dbg !5312
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5319
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5320
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5321
  store i32 %12, i32* %15, align 8, !dbg !5322
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5323
  store i32 0, i32* %16, align 4, !dbg !5324
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #24, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %17, metadata !5308, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5312
  %18 = shl i32 %17, 2, !dbg !5326
  %19 = add i32 %18, 20, !dbg !5327
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #24, !dbg !5328
  call void @llvm.dbg.value(metadata i32 %20, metadata !5309, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.value(metadata i32 0, metadata !5310, metadata !DIExpression()), !dbg !5329
  %21 = icmp slt i32 %17, 0, !dbg !5330
  br i1 %21, label %22, label %24, !dbg !5332

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #24, !dbg !5333
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #24, !dbg !5334
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #24, !dbg !5335
  %23 = sub i32 %12, %20, !dbg !5336
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #24, !dbg !5337
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #24, !dbg !5338
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #24, !dbg !5339
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #24, !dbg !5340
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #24, !dbg !5341
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #24, !dbg !5342
  ret void, !dbg !5343

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5310, metadata !DIExpression()), !dbg !5329
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5344
  store i32 0, i32* %26, align 4, !dbg !5346
  %27 = add nuw i32 %25, 1, !dbg !5347
  call void @llvm.dbg.value(metadata i32 %27, metadata !5310, metadata !DIExpression()), !dbg !5329
  %28 = icmp eq i32 %25, %17, !dbg !5330
  br i1 %28, label %22, label %24, !dbg !5332, !llvm.loop !5348
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5350 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5363, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5360, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %1, metadata !5361, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %2, metadata !5362, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %4, metadata !5364, metadata !DIExpression()), !dbg !5489
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5490
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5490
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5365, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i32 0, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i1 undef, metadata !5371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5489
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5492

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5492

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5493
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5363, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %30, metadata !5362, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %29, metadata !5369, metadata !DIExpression()), !dbg !5489
  %31 = load i8, i8* %30, align 1, !dbg !5494
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5492

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5494
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5495
  call void @llvm.dbg.value(metadata i8* %34, metadata !5362, metadata !DIExpression()), !dbg !5489
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %35, metadata !5373, metadata !DIExpression()), !dbg !5496
  %36 = icmp slt i32 %35, 0, !dbg !5497
  %37 = add i32 %29, 1, !dbg !5495
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %36, label %365, label %28, !llvm.loop !5499

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5501
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5378, metadata !DIExpression()), !dbg !5502
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5502
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5421, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5424, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8* %30, metadata !5427, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i32 -1, metadata !5428, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i32 -1, metadata !5429, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8* null, metadata !5430, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8* %14, metadata !5431, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8 0, metadata !5432, metadata !DIExpression()), !dbg !5503
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5504
  call void @llvm.dbg.value(metadata i8* %39, metadata !5362, metadata !DIExpression()), !dbg !5489
  %40 = load i24, i24* %15, align 8, !dbg !5505
  %41 = and i24 %40, 256, !dbg !5505
  %42 = icmp eq i24 %41, 0, !dbg !5505
  br i1 %42, label %51, label %43, !dbg !5507

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5508
  call void @llvm.dbg.value(metadata i8* %44, metadata !5363, metadata !DIExpression()), !dbg !5489
  %45 = bitcast i8* %27 to i32*, !dbg !5508
  %46 = load i32, i32* %45, align 4, !dbg !5508
  call void @llvm.dbg.value(metadata i32 %46, metadata !5428, metadata !DIExpression()), !dbg !5503
  %47 = icmp slt i32 %46, 0, !dbg !5510
  br i1 %47, label %48, label %56, !dbg !5512

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5513
  store i24 %49, i24* %15, align 8, !dbg !5513
  %50 = sub nsw i32 0, %46, !dbg !5515
  call void @llvm.dbg.value(metadata i32 %50, metadata !5428, metadata !DIExpression()), !dbg !5503
  br label %56, !dbg !5516

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5517
  %53 = icmp eq i24 %52, 0, !dbg !5517
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5519
  br label %56, !dbg !5519

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5520
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5503
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5363, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %58, metadata !5428, metadata !DIExpression()), !dbg !5503
  %60 = and i24 %57, 1024, !dbg !5520
  %61 = icmp eq i24 %60, 0, !dbg !5520
  br i1 %61, label %69, label %62, !dbg !5521

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5522
  call void @llvm.dbg.value(metadata i8* %63, metadata !5363, metadata !DIExpression()), !dbg !5489
  %64 = bitcast i8* %59 to i32*, !dbg !5522
  %65 = load i32, i32* %64, align 4, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %65, metadata !5433, metadata !DIExpression()), !dbg !5523
  %66 = icmp slt i32 %65, 0, !dbg !5524
  br i1 %66, label %67, label %74, !dbg !5526

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5527
  store i24 %68, i24* %15, align 8, !dbg !5527
  br label %74, !dbg !5529

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5530
  %71 = icmp eq i24 %70, 0, !dbg !5530
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5532
  br label %74, !dbg !5532

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5533
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5503
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5503
  call void @llvm.dbg.value(metadata i8* %77, metadata !5363, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %76, metadata !5429, metadata !DIExpression()), !dbg !5503
  store i32 0, i32* %16, align 4, !dbg !5534
  store i32 0, i32* %17, align 8, !dbg !5535
  %78 = lshr i24 %75, 16, !dbg !5533
  call void @llvm.dbg.value(metadata i24 %78, metadata !5436, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5503
  %79 = lshr i24 %75, 11, !dbg !5536
  %80 = and i24 %79, 15, !dbg !5536
  %81 = zext i24 %80 to i32, !dbg !5536
  call void @llvm.dbg.value(metadata i32 %81, metadata !5437, metadata !DIExpression()), !dbg !5503
  %82 = trunc i24 %78 to i3, !dbg !5537
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5537

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5538

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5541
  call void @llvm.dbg.value(metadata i8* %85, metadata !5363, metadata !DIExpression()), !dbg !5489
  %86 = bitcast i8* %77 to i32*, !dbg !5541
  %87 = load i32, i32* %86, align 4, !dbg !5541
  %88 = sext i32 %87 to i64, !dbg !5541
  store i64 %88, i64* %20, align 8, !dbg !5543
  br label %115, !dbg !5544

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5545
  call void @llvm.dbg.value(metadata i8* %90, metadata !5363, metadata !DIExpression()), !dbg !5489
  %91 = bitcast i8* %77 to i32*, !dbg !5545
  %92 = load i32, i32* %91, align 4, !dbg !5545
  %93 = sext i32 %92 to i64, !dbg !5545
  store i64 %93, i64* %20, align 8, !dbg !5548
  br label %115, !dbg !5549

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5550
  %96 = add i32 %95, 7, !dbg !5550
  %97 = and i32 %96, -8, !dbg !5550
  %98 = inttoptr i32 %97 to i8*, !dbg !5550
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5550
  call void @llvm.dbg.value(metadata i8* %99, metadata !5363, metadata !DIExpression()), !dbg !5489
  %100 = inttoptr i32 %97 to i64*, !dbg !5550
  %101 = load i64, i64* %100, align 8, !dbg !5550
  store i64 %101, i64* %20, align 8, !dbg !5551
  br label %115, !dbg !5552

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5553
  %104 = add i32 %103, 7, !dbg !5553
  %105 = and i32 %104, -8, !dbg !5553
  %106 = inttoptr i32 %105 to i8*, !dbg !5553
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5553
  call void @llvm.dbg.value(metadata i8* %107, metadata !5363, metadata !DIExpression()), !dbg !5489
  %108 = inttoptr i32 %105 to i64*, !dbg !5553
  %109 = load i64, i64* %108, align 8, !dbg !5553
  store i64 %109, i64* %20, align 8, !dbg !5554
  br label %115, !dbg !5555

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5556
  call void @llvm.dbg.value(metadata i8* %111, metadata !5363, metadata !DIExpression()), !dbg !5489
  %112 = bitcast i8* %77 to i32*, !dbg !5556
  %113 = load i32, i32* %112, align 4, !dbg !5556
  %114 = sext i32 %113 to i64, !dbg !5557
  store i64 %114, i64* %20, align 8, !dbg !5558
  br label %115, !dbg !5559

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5560
  call void @llvm.dbg.value(metadata i8* %117, metadata !5363, metadata !DIExpression()), !dbg !5489
  %118 = trunc i24 %79 to i4, !dbg !5561
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5561

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5562
  %121 = ashr exact i64 %120, 56, !dbg !5562
  store i64 %121, i64* %20, align 8, !dbg !5565
  br label %177, !dbg !5566

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5567
  %124 = ashr exact i64 %123, 48, !dbg !5567
  store i64 %124, i64* %20, align 8, !dbg !5570
  br label %177, !dbg !5571

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5572

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5575
  call void @llvm.dbg.value(metadata i8* %127, metadata !5363, metadata !DIExpression()), !dbg !5489
  %128 = bitcast i8* %77 to i32*, !dbg !5575
  %129 = load i32, i32* %128, align 4, !dbg !5575
  %130 = zext i32 %129 to i64, !dbg !5575
  store i64 %130, i64* %20, align 8, !dbg !5577
  br label %157, !dbg !5578

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5579
  call void @llvm.dbg.value(metadata i8* %132, metadata !5363, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %132, metadata !5363, metadata !DIExpression()), !dbg !5489
  %133 = bitcast i8* %77 to i32*, !dbg !5579
  %134 = load i32, i32* %133, align 4, !dbg !5579
  %135 = zext i32 %134 to i64, !dbg !5579
  store i64 %135, i64* %20, align 8, !dbg !5579
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5581
  %138 = add i32 %137, 7, !dbg !5581
  %139 = and i32 %138, -8, !dbg !5581
  %140 = inttoptr i32 %139 to i8*, !dbg !5581
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5581
  call void @llvm.dbg.value(metadata i8* %141, metadata !5363, metadata !DIExpression()), !dbg !5489
  %142 = inttoptr i32 %139 to i64*, !dbg !5581
  %143 = load i64, i64* %142, align 8, !dbg !5581
  store i64 %143, i64* %20, align 8, !dbg !5582
  br label %157, !dbg !5583

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5584
  %146 = add i32 %145, 7, !dbg !5584
  %147 = and i32 %146, -8, !dbg !5584
  %148 = inttoptr i32 %147 to i8*, !dbg !5584
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5584
  call void @llvm.dbg.value(metadata i8* %149, metadata !5363, metadata !DIExpression()), !dbg !5489
  %150 = inttoptr i32 %147 to i64*, !dbg !5584
  %151 = load i64, i64* %150, align 8, !dbg !5584
  store i64 %151, i64* %20, align 8, !dbg !5585
  br label %157, !dbg !5586

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5587
  call void @llvm.dbg.value(metadata i8* %153, metadata !5363, metadata !DIExpression()), !dbg !5489
  %154 = bitcast i8* %77 to i32*, !dbg !5587
  %155 = load i32, i32* %154, align 4, !dbg !5587
  %156 = zext i32 %155 to i64, !dbg !5588
  store i64 %156, i64* %20, align 8, !dbg !5589
  br label %157, !dbg !5590

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5591
  call void @llvm.dbg.value(metadata i8* %159, metadata !5363, metadata !DIExpression()), !dbg !5489
  %160 = trunc i24 %79 to i4, !dbg !5592
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5592

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5593
  store i64 %162, i64* %20, align 8, !dbg !5596
  br label %177, !dbg !5597

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5598
  store i64 %164, i64* %20, align 8, !dbg !5601
  br label %177, !dbg !5602

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5603
  %167 = add i32 %166, 7, !dbg !5603
  %168 = and i32 %167, -8, !dbg !5603
  %169 = inttoptr i32 %168 to i8*, !dbg !5603
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5603
  call void @llvm.dbg.value(metadata i8* %170, metadata !5363, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %170, metadata !5363, metadata !DIExpression()), !dbg !5489
  %171 = inttoptr i32 %168 to double*, !dbg !5603
  %172 = load double, double* %171, align 8, !dbg !5603
  store double %172, double* %19, align 8, !dbg !5603
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5607
  call void @llvm.dbg.value(metadata i8* %174, metadata !5363, metadata !DIExpression()), !dbg !5489
  %175 = bitcast i8* %77 to i8**, !dbg !5607
  %176 = load i8*, i8** %175, align 4, !dbg !5607
  store i8* %176, i8** %18, align 8, !dbg !5610
  br label %177, !dbg !5611

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5503
  call void @llvm.dbg.value(metadata i8* %178, metadata !5363, metadata !DIExpression()), !dbg !5489
  %179 = and i24 %75, 3, !dbg !5612
  %180 = icmp eq i24 %179, 0, !dbg !5612
  br i1 %180, label %185, label %181, !dbg !5612

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5613
  call void @llvm.dbg.value(metadata i32 %182, metadata !5438, metadata !DIExpression()), !dbg !5614
  %183 = icmp slt i32 %182, 0, !dbg !5615
  %184 = add i32 %182, %29, !dbg !5613
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5617
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5618

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5619
  call void @llvm.dbg.value(metadata i32 %188, metadata !5442, metadata !DIExpression()), !dbg !5620
  %189 = icmp slt i32 %188, 0, !dbg !5621
  %190 = add i32 %29, 1, !dbg !5619
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5623
  call void @llvm.dbg.value(metadata i8* %192, metadata !5430, metadata !DIExpression()), !dbg !5503
  %193 = icmp sgt i32 %76, -1, !dbg !5624
  br i1 %193, label %194, label %196, !dbg !5626

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5627
  call void @llvm.dbg.value(metadata i32 %195, metadata !5445, metadata !DIExpression()), !dbg !5629
  br label %241, !dbg !5630

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5631
  call void @llvm.dbg.value(metadata i32 %197, metadata !5445, metadata !DIExpression()), !dbg !5629
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5430, metadata !DIExpression()), !dbg !5503
  %199 = load i64, i64* %20, align 8, !dbg !5633
  %200 = trunc i64 %199 to i8, !dbg !5634
  store i8 %200, i8* %10, align 1, !dbg !5635
  call void @llvm.dbg.value(metadata i8* %23, metadata !5431, metadata !DIExpression()), !dbg !5503
  br label %245, !dbg !5636

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5637
  %203 = icmp eq i24 %202, 0, !dbg !5637
  %204 = trunc i24 %75 to i8, !dbg !5639
  %205 = shl i8 %204, 1, !dbg !5639
  %206 = and i8 %205, 32, !dbg !5639
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5639
  call void @llvm.dbg.value(metadata i8 %207, metadata !5432, metadata !DIExpression()), !dbg !5503
  %208 = load i64, i64* %20, align 8, !dbg !5640
  call void @llvm.dbg.value(metadata i64 %208, metadata !5370, metadata !DIExpression()), !dbg !5489
  %209 = icmp slt i64 %208, 0, !dbg !5641
  br i1 %209, label %210, label %212, !dbg !5643

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5432, metadata !DIExpression()), !dbg !5503
  %211 = sub nsw i64 0, %208, !dbg !5644
  store i64 %211, i64* %20, align 8, !dbg !5646
  br label %212, !dbg !5647

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5503
  call void @llvm.dbg.value(metadata i8 %213, metadata !5432, metadata !DIExpression()), !dbg !5503
  %214 = load i64, i64* %20, align 8, !dbg !5648
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5649
  call void @llvm.dbg.value(metadata i8* %215, metadata !5430, metadata !DIExpression()), !dbg !5503
  br label %216, !dbg !5650

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5651
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5652
  call void @llvm.dbg.value(metadata i8* %218, metadata !5430, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8 %217, metadata !5432, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.label(metadata !5488), !dbg !5653
  %219 = icmp sgt i32 %76, -1, !dbg !5654
  br i1 %219, label %222, label %220, !dbg !5655

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5656
  br label %245, !dbg !5655

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5658
  %224 = sub i32 %22, %223, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %224, metadata !5447, metadata !DIExpression()), !dbg !5659
  %225 = load i24, i24* %15, align 8, !dbg !5660
  %226 = and i24 %225, -65, !dbg !5660
  store i24 %226, i24* %15, align 8, !dbg !5660
  %227 = icmp ugt i32 %76, %224, !dbg !5661
  br i1 %227, label %228, label %245, !dbg !5663

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5664
  store i32 %229, i32* %16, align 4, !dbg !5666
  br label %245, !dbg !5667

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5668
  %232 = icmp eq i8* %231, null, !dbg !5670
  br i1 %232, label %245, label %233, !dbg !5671

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5672
  %235 = zext i32 %234 to i64, !dbg !5672
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5674
  call void @llvm.dbg.value(metadata i8* %236, metadata !5430, metadata !DIExpression()), !dbg !5503
  %237 = load i24, i24* %15, align 8, !dbg !5675
  %238 = or i24 %237, 1048576, !dbg !5675
  store i24 %238, i24* %15, align 8, !dbg !5675
  store i8 120, i8* %21, align 1, !dbg !5676
  br label %216, !dbg !5677

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5678
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5681
  br label %363, !dbg !5682

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5683
  call void @llvm.dbg.value(metadata i32 %242, metadata !5445, metadata !DIExpression()), !dbg !5629
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5684
  call void @llvm.dbg.value(metadata i32 -1, metadata !5429, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i32 %29, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %192, metadata !5430, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8* %243, metadata !5431, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8 0, metadata !5432, metadata !DIExpression()), !dbg !5503
  %244 = icmp eq i8* %192, null, !dbg !5685
  br i1 %244, label %363, label %245, !dbg !5687, !llvm.loop !5499

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5656
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5503
  call void @llvm.dbg.value(metadata i32 0, metadata !5451, metadata !DIExpression()), !dbg !5503
  %250 = zext i8 %249 to i32, !dbg !5688
  %251 = icmp eq i8 %249, 0, !dbg !5690
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  call void @llvm.dbg.value(metadata i32 undef, metadata !5450, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  call void @llvm.dbg.value(metadata i32 undef, metadata !5450, metadata !DIExpression()), !dbg !5503
  %252 = icmp sgt i32 %58, 0, !dbg !5691
  br i1 %252, label %253, label %302, !dbg !5692

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5656
  %255 = icmp eq i24 %254, 0, !dbg !5656
  %256 = ptrtoint i8* %248 to i32, !dbg !5693
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  %257 = ptrtoint i8* %247 to i32, !dbg !5693
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  %258 = xor i1 %251, true, !dbg !5694
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  %259 = sext i1 %258 to i32, !dbg !5694
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  %260 = lshr i24 %246, 19, !dbg !5695
  %261 = and i24 %260, 1, !dbg !5695
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5695
  %263 = zext i24 %262 to i32, !dbg !5695
  %264 = add i32 %257, %259, !dbg !5695
  %265 = add i32 %256, %263, !dbg !5695
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  %266 = and i24 %246, 4194304, !dbg !5696
  %267 = icmp eq i24 %266, 0, !dbg !5696
  %268 = load i32, i32* %16, align 4, !dbg !5698
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5503
  call void @llvm.dbg.value(metadata i32 undef, metadata !5450, metadata !DIExpression()), !dbg !5503
  %269 = load i32, i32* %17, align 8, !dbg !5699
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5699
  call void @llvm.dbg.value(metadata i32 undef, metadata !5450, metadata !DIExpression()), !dbg !5503
  %271 = add i32 %264, %58, !dbg !5699
  %272 = add i32 %265, %268, !dbg !5699
  %273 = add i32 %272, %270, !dbg !5700
  %274 = sub i32 %271, %273, !dbg !5700
  call void @llvm.dbg.value(metadata i32 %274, metadata !5428, metadata !DIExpression()), !dbg !5503
  %275 = and i24 %246, 4, !dbg !5701
  %276 = icmp eq i24 %275, 0, !dbg !5701
  br i1 %276, label %277, label %302, !dbg !5702

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5452, metadata !DIExpression()), !dbg !5703
  %278 = and i24 %246, 64, !dbg !5704
  %279 = icmp eq i24 %278, 0, !dbg !5704
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5705
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5705
  %282 = select i1 %279, i32 32, i32 48, !dbg !5705
  br i1 %280, label %287, label %283, !dbg !5705

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5706
  call void @llvm.dbg.value(metadata i32 %284, metadata !5457, metadata !DIExpression()), !dbg !5707
  %285 = icmp slt i32 %284, 0, !dbg !5708
  %286 = add i32 %29, 1, !dbg !5706
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5503
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %290, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8 undef, metadata !5452, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.value(metadata i8 %288, metadata !5432, metadata !DIExpression()), !dbg !5503
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5710
  %292 = add i32 %291, -1, !dbg !5710
  br label %293, !dbg !5710

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5711
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %295, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %294, metadata !5428, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i32 %294, metadata !5428, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5503
  %296 = icmp sgt i32 %294, 0, !dbg !5712
  br i1 %296, label %297, label %302, !dbg !5710

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %298, metadata !5428, metadata !DIExpression()), !dbg !5503
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %299, metadata !5463, metadata !DIExpression()), !dbg !5715
  %300 = icmp slt i32 %299, 0, !dbg !5716
  %301 = add i32 %295, 1, !dbg !5714
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %300, label %361, label %293, !llvm.loop !5718

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5503
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5503
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %305, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %304, metadata !5428, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i8 %303, metadata !5432, metadata !DIExpression()), !dbg !5503
  %306 = icmp eq i8 %303, 0, !dbg !5720
  br i1 %306, label %312, label %307, !dbg !5721

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5722
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %309, metadata !5466, metadata !DIExpression()), !dbg !5724
  %310 = icmp slt i32 %309, 0, !dbg !5725
  %311 = add i32 %305, 1, !dbg !5723
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %313, metadata !5369, metadata !DIExpression()), !dbg !5489
  %314 = lshr i24 %246, 20, !dbg !5727
  %315 = lshr i24 %246, 19, !dbg !5728
  %316 = or i24 %314, %315, !dbg !5729
  %317 = and i24 %316, 1, !dbg !5729
  %318 = icmp eq i24 %317, 0, !dbg !5729
  br i1 %318, label %323, label %319, !dbg !5730

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5731
  call void @llvm.dbg.value(metadata i32 %320, metadata !5470, metadata !DIExpression()), !dbg !5732
  %321 = icmp slt i32 %320, 0, !dbg !5733
  %322 = add i32 %313, 1, !dbg !5731
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %324, metadata !5369, metadata !DIExpression()), !dbg !5489
  %325 = and i24 %246, 1048576, !dbg !5735
  %326 = icmp eq i24 %325, 0, !dbg !5735
  br i1 %326, label %333, label %327, !dbg !5736

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5737
  %329 = zext i8 %328 to i32, !dbg !5737
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5737
  call void @llvm.dbg.value(metadata i32 %330, metadata !5476, metadata !DIExpression()), !dbg !5738
  %331 = icmp slt i32 %330, 0, !dbg !5739
  %332 = add i32 %324, 1, !dbg !5737
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %334, metadata !5369, metadata !DIExpression()), !dbg !5489
  %335 = load i32, i32* %16, align 4, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %335, metadata !5451, metadata !DIExpression()), !dbg !5503
  br label %336, !dbg !5742

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5743
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %338, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %337, metadata !5451, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5503
  %339 = icmp sgt i32 %337, 0, !dbg !5744
  br i1 %339, label %340, label %345, !dbg !5742

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5745
  call void @llvm.dbg.value(metadata i32 %341, metadata !5451, metadata !DIExpression()), !dbg !5503
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %342, metadata !5480, metadata !DIExpression()), !dbg !5747
  %343 = icmp slt i32 %342, 0, !dbg !5748
  %344 = add i32 %338, 1, !dbg !5746
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %343, label %361, label %336, !llvm.loop !5750

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %346, metadata !5483, metadata !DIExpression()), !dbg !5753
  %347 = icmp slt i32 %346, 0, !dbg !5754
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %349, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %304, metadata !5428, metadata !DIExpression()), !dbg !5503
  %350 = icmp sgt i32 %304, 0, !dbg !5756
  br i1 %350, label %351, label %363, !dbg !5757

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5757
  %353 = add i32 %352, %338, !dbg !5757
  br label %354, !dbg !5757

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %355, metadata !5428, metadata !DIExpression()), !dbg !5503
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %356, metadata !5485, metadata !DIExpression()), !dbg !5759
  %357 = icmp slt i32 %356, 0, !dbg !5760
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5762
  call void @llvm.dbg.value(metadata i32 undef, metadata !5369, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %359, metadata !5428, metadata !DIExpression()), !dbg !5503
  %360 = icmp sgt i32 %355, 1, !dbg !5756
  br i1 %360, label %354, label %363, !dbg !5757, !llvm.loop !5763

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5500
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %364, metadata !5369, metadata !DIExpression()), !dbg !5489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5500
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5489
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5765
  ret i32 %366, !dbg !5765
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5766 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5770, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata i8* %1, metadata !5771, metadata !DIExpression()), !dbg !5772
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5773
  store i24 0, i24* %3, align 4, !dbg !5773
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5773
  store i8 0, i8* %4, align 1, !dbg !5773
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5773
  store i32 0, i32* %5, align 4, !dbg !5773
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5773
  store i32 0, i32* %6, align 4, !dbg !5773
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %7, metadata !5771, metadata !DIExpression()), !dbg !5772
  %8 = load i8, i8* %7, align 1, !dbg !5775
  %9 = icmp eq i8 %8, 37, !dbg !5777
  br i1 %9, label %10, label %12, !dbg !5778

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5779
  call void @llvm.dbg.value(metadata i8* %11, metadata !5771, metadata !DIExpression()), !dbg !5772
  store i8 37, i8* %4, align 1, !dbg !5781
  br label %18, !dbg !5782

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5783
  call void @llvm.dbg.value(metadata i8* %13, metadata !5771, metadata !DIExpression()), !dbg !5772
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5784
  call void @llvm.dbg.value(metadata i8* %14, metadata !5771, metadata !DIExpression()), !dbg !5772
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5785
  call void @llvm.dbg.value(metadata i8* %15, metadata !5771, metadata !DIExpression()), !dbg !5772
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5786
  call void @llvm.dbg.value(metadata i8* %16, metadata !5771, metadata !DIExpression()), !dbg !5772
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5787
  call void @llvm.dbg.value(metadata i8* %17, metadata !5771, metadata !DIExpression()), !dbg !5772
  br label %18, !dbg !5788

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5772
  ret i8* %19, !dbg !5789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5790 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5794, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i8* %1, metadata !5795, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i8* %2, metadata !5796, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i8* %3, metadata !5797, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i32 0, metadata !5798, metadata !DIExpression()), !dbg !5801
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5802

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5803
  call void @llvm.dbg.value(metadata i32 %9, metadata !5798, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i8* %8, metadata !5796, metadata !DIExpression()), !dbg !5801
  %10 = icmp ult i8* %8, %3, !dbg !5804
  br i1 %10, label %11, label %13, !dbg !5805

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5806
  br label %17, !dbg !5805

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5807

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5808
  %16 = icmp eq i8 %15, 0, !dbg !5807
  br i1 %16, label %24, label %17, !dbg !5802

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5806
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5809
  call void @llvm.dbg.value(metadata i8* %19, metadata !5796, metadata !DIExpression()), !dbg !5801
  %20 = zext i8 %18 to i32, !dbg !5810
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5811
  call void @llvm.dbg.value(metadata i32 %21, metadata !5799, metadata !DIExpression()), !dbg !5812
  %22 = icmp slt i32 %21, 0, !dbg !5813
  %23 = add i32 %9, 1, !dbg !5815
  call void @llvm.dbg.value(metadata i32 undef, metadata !5798, metadata !DIExpression()), !dbg !5801
  br i1 %22, label %24, label %7, !llvm.loop !5816

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5801
  ret i32 %25, !dbg !5818
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !5819 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5823, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5824, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i8* %2, metadata !5825, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i8* %3, metadata !5826, metadata !DIExpression()), !dbg !5833
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5834
  %6 = load i8, i8* %5, align 1, !dbg !5834
  %7 = zext i8 %6 to i32, !dbg !5835
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5836
  %9 = icmp eq i32 %8, 0, !dbg !5836
  call void @llvm.dbg.value(metadata i1 %9, metadata !5827, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5833
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %10, metadata !5828, metadata !DIExpression()), !dbg !5833
  %11 = ptrtoint i8* %3 to i32, !dbg !5838
  %12 = ptrtoint i8* %2 to i32, !dbg !5838
  %13 = sub i32 %11, %12, !dbg !5838
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5839
  call void @llvm.dbg.value(metadata i8* %14, metadata !5830, metadata !DIExpression()), !dbg !5833
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5840

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5833
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5823, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i8* %18, metadata !5830, metadata !DIExpression()), !dbg !5833
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5841
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5842
  call void @llvm.dbg.value(metadata i32 %25, metadata !5831, metadata !DIExpression()), !dbg !5843
  %26 = icmp ult i32 %25, 10, !dbg !5844
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5845
  %28 = add i32 %27, %25, !dbg !5843
  %29 = trunc i32 %28 to i8, !dbg !5845
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5846
  call void @llvm.dbg.value(metadata i8* %30, metadata !5830, metadata !DIExpression()), !dbg !5833
  store i8 %29, i8* %30, align 1, !dbg !5847
  call void @llvm.dbg.value(metadata i64 %22, metadata !5823, metadata !DIExpression()), !dbg !5833
  %31 = icmp uge i64 %19, %15, !dbg !5848
  %32 = icmp ugt i8* %30, %2, !dbg !5849
  %33 = and i1 %31, %32, !dbg !5849
  br i1 %33, label %17, label %34, !dbg !5850, !llvm.loop !5851

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5853
  %36 = load i24, i24* %35, align 4, !dbg !5853
  %37 = and i24 %36, 32, !dbg !5853
  %38 = icmp eq i24 %37, 0, !dbg !5853
  br i1 %38, label %44, label %39, !dbg !5855

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5856

40:                                               ; preds = %39
  br label %41, !dbg !5858

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5862
  store i24 %43, i24* %35, align 4, !dbg !5862
  br label %44, !dbg !5863

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5864 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5870, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %1, metadata !5871, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %2, metadata !5872, metadata !DIExpression()), !dbg !5873
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5874
  %5 = load i24, i24* %4, align 4, !dbg !5874
  %6 = lshr i24 %5, 11, !dbg !5874
  %7 = and i24 %6, 15, !dbg !5874
  %8 = zext i24 %7 to i32, !dbg !5874
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5875

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5876
  store i32 %2, i32* %10, align 4, !dbg !5878
  br label %28, !dbg !5879

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5880
  store i8 %12, i8* %1, align 1, !dbg !5881
  br label %28, !dbg !5882

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5883
  %15 = bitcast i8* %1 to i16*, !dbg !5884
  store i16 %14, i16* %15, align 2, !dbg !5885
  br label %28, !dbg !5886

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5887
  store i32 %2, i32* %17, align 4, !dbg !5888
  br label %28, !dbg !5889

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5890
  %20 = bitcast i8* %1 to i64*, !dbg !5891
  store i64 %19, i64* %20, align 8, !dbg !5892
  br label %28, !dbg !5893

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5894
  %23 = bitcast i8* %1 to i64*, !dbg !5895
  store i64 %22, i64* %23, align 8, !dbg !5896
  br label %28, !dbg !5897

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5898
  store i32 %2, i32* %25, align 4, !dbg !5899
  br label %28, !dbg !5900

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5901
  store i32 %2, i32* %27, align 4, !dbg !5902
  br label %28, !dbg !5903

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5904
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !5905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5908, metadata !DIExpression()), !dbg !5909
  %2 = add i32 %0, -65, !dbg !5910
  %3 = icmp ult i32 %2, 26, !dbg !5911
  %4 = zext i1 %3 to i32, !dbg !5911
  ret i32 %4, !dbg !5912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !5913 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5917, metadata !DIExpression()), !dbg !5918
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5919

2:                                                ; preds = %1
  br label %4, !dbg !5920

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5922

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5923
  ret i32 %5, !dbg !5924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !5925 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5927, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata i8* %1, metadata !5928, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata i8 1, metadata !5929, metadata !DIExpression()), !dbg !5930
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5931

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5929, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata i8* %5, metadata !5928, metadata !DIExpression()), !dbg !5930
  %6 = load i8, i8* %5, align 1, !dbg !5932
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5934

7:                                                ; preds = %4
  br label %11, !dbg !5935

8:                                                ; preds = %4
  br label %11, !dbg !5937

9:                                                ; preds = %4
  br label %11, !dbg !5938

10:                                               ; preds = %4
  br label %11, !dbg !5939

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5940
  %14 = or i24 %13, %12, !dbg !5940
  store i24 %14, i24* %3, align 4, !dbg !5940
  call void @llvm.dbg.value(metadata i8 poison, metadata !5929, metadata !DIExpression()), !dbg !5930
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5928, metadata !DIExpression()), !dbg !5930
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5929, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata i8* %15, metadata !5928, metadata !DIExpression()), !dbg !5930
  %17 = load i24, i24* %3, align 4, !dbg !5941
  %18 = and i24 %17, 68, !dbg !5943
  %19 = icmp eq i24 %18, 68, !dbg !5943
  br i1 %19, label %20, label %22, !dbg !5943

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5944
  store i24 %21, i24* %3, align 4, !dbg !5944
  br label %22, !dbg !5946

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5947
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5948 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5950, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i8* %1, metadata !5951, metadata !DIExpression()), !dbg !5954
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5955
  %5 = load i24, i24* %4, align 4, !dbg !5956
  %6 = or i24 %5, 128, !dbg !5956
  store i24 %6, i24* %4, align 4, !dbg !5956
  call void @llvm.dbg.value(metadata i8* %1, metadata !5951, metadata !DIExpression()), !dbg !5954
  %7 = load i8, i8* %1, align 1, !dbg !5957
  %8 = icmp eq i8 %7, 42, !dbg !5959
  br i1 %8, label %9, label %12, !dbg !5960

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5961
  store i24 %10, i24* %4, align 4, !dbg !5961
  call void @llvm.dbg.value(metadata i8* %1, metadata !5951, metadata !DIExpression()), !dbg !5954
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5963
  call void @llvm.dbg.value(metadata i8* %11, metadata !5951, metadata !DIExpression()), !dbg !5954
  store i8* %11, i8** %3, align 4, !dbg !5963
  br label %29, !dbg !5964

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5952, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i8** %3, metadata !5951, metadata !DIExpression(DW_OP_deref)), !dbg !5954
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5965
  call void @llvm.dbg.value(metadata i32 %13, metadata !5953, metadata !DIExpression()), !dbg !5954
  %14 = load i8*, i8** %3, align 4, !dbg !5966
  call void @llvm.dbg.value(metadata i8* %14, metadata !5951, metadata !DIExpression()), !dbg !5954
  %15 = icmp eq i8* %14, %1, !dbg !5968
  br i1 %15, label %29, label %16, !dbg !5969

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5970
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5972
  store i32 %13, i32* %18, align 4, !dbg !5973
  %19 = lshr i32 %13, 31, !dbg !5974
  %20 = lshr i24 %17, 1, !dbg !5975
  %21 = and i24 %20, 1, !dbg !5975
  %22 = zext i24 %21 to i32, !dbg !5975
  %23 = or i32 %19, %22, !dbg !5975
  %24 = trunc i32 %23 to i24, !dbg !5975
  %25 = shl nuw nsw i24 %24, 1, !dbg !5975
  %26 = and i24 %17, -131, !dbg !5975
  %27 = or i24 %26, 128, !dbg !5975
  %28 = or i24 %25, %27, !dbg !5975
  store i24 %28, i24* %4, align 4, !dbg !5975
  br label %29, !dbg !5976

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5954
  ret i8* %30, !dbg !5977
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5978 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5980, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.value(metadata i8* %1, metadata !5981, metadata !DIExpression()), !dbg !5983
  %4 = load i8, i8* %1, align 1, !dbg !5984
  %5 = icmp eq i8 %4, 46, !dbg !5985
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5986
  %7 = load i24, i24* %6, align 4, !dbg !5987
  %8 = select i1 %5, i24 512, i24 0, !dbg !5987
  %9 = and i24 %7, -513, !dbg !5987
  %10 = or i24 %9, %8, !dbg !5987
  store i24 %10, i24* %6, align 4, !dbg !5987
  br i1 %5, label %11, label %32, !dbg !5988

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5981, metadata !DIExpression()), !dbg !5983
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5989
  call void @llvm.dbg.value(metadata i8* %12, metadata !5981, metadata !DIExpression()), !dbg !5983
  store i8* %12, i8** %3, align 4, !dbg !5989
  %13 = load i8, i8* %12, align 1, !dbg !5990
  %14 = icmp eq i8 %13, 42, !dbg !5992
  br i1 %14, label %15, label %18, !dbg !5993

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5994
  store i24 %16, i24* %6, align 4, !dbg !5994
  call void @llvm.dbg.value(metadata i8* %12, metadata !5981, metadata !DIExpression()), !dbg !5983
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5996
  call void @llvm.dbg.value(metadata i8* %17, metadata !5981, metadata !DIExpression()), !dbg !5983
  store i8* %17, i8** %3, align 4, !dbg !5996
  br label %32, !dbg !5997

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5981, metadata !DIExpression(DW_OP_deref)), !dbg !5983
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5998
  call void @llvm.dbg.value(metadata i32 %19, metadata !5982, metadata !DIExpression()), !dbg !5983
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5999
  store i32 %19, i32* %20, align 4, !dbg !6000
  %21 = lshr i32 %19, 31, !dbg !6001
  %22 = load i24, i24* %6, align 4, !dbg !6002
  %23 = lshr i24 %22, 1, !dbg !6002
  %24 = and i24 %23, 1, !dbg !6002
  %25 = zext i24 %24 to i32, !dbg !6002
  %26 = or i32 %21, %25, !dbg !6002
  %27 = trunc i32 %26 to i24, !dbg !6002
  %28 = shl nuw nsw i24 %27, 1, !dbg !6002
  %29 = and i24 %22, -3, !dbg !6002
  %30 = or i24 %28, %29, !dbg !6002
  store i24 %30, i24* %6, align 4, !dbg !6002
  %31 = load i8*, i8** %3, align 4, !dbg !6003
  call void @llvm.dbg.value(metadata i8* %31, metadata !5981, metadata !DIExpression()), !dbg !5983
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5983
  ret i8* %33, !dbg !6004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6005 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6007, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.value(metadata i8* %1, metadata !6008, metadata !DIExpression()), !dbg !6009
  %3 = load i8, i8* %1, align 1, !dbg !6010
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6011

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6012
  call void @llvm.dbg.value(metadata i8* %5, metadata !6008, metadata !DIExpression()), !dbg !6009
  %6 = load i8, i8* %5, align 1, !dbg !6015
  %7 = icmp eq i8 %6, 104, !dbg !6016
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6017
  %9 = load i24, i24* %8, align 4, !dbg !6017
  %10 = and i24 %9, -30721, !dbg !6017
  br i1 %7, label %11, label %14, !dbg !6018

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6019
  store i24 %12, i24* %8, align 4, !dbg !6019
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6021
  call void @llvm.dbg.value(metadata i8* %13, metadata !6008, metadata !DIExpression()), !dbg !6009
  br label %56, !dbg !6022

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6023
  store i24 %15, i24* %8, align 4, !dbg !6023
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6025
  call void @llvm.dbg.value(metadata i8* %17, metadata !6008, metadata !DIExpression()), !dbg !6009
  %18 = load i8, i8* %17, align 1, !dbg !6027
  %19 = icmp eq i8 %18, 108, !dbg !6028
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6029
  %21 = load i24, i24* %20, align 4, !dbg !6029
  %22 = and i24 %21, -30721, !dbg !6029
  br i1 %19, label %23, label %26, !dbg !6030

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6031
  store i24 %24, i24* %20, align 4, !dbg !6031
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6033
  call void @llvm.dbg.value(metadata i8* %25, metadata !6008, metadata !DIExpression()), !dbg !6009
  br label %56, !dbg !6034

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6035
  store i24 %27, i24* %20, align 4, !dbg !6035
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6037
  %30 = load i24, i24* %29, align 4, !dbg !6038
  %31 = and i24 %30, -30721, !dbg !6038
  %32 = or i24 %31, 10240, !dbg !6038
  store i24 %32, i24* %29, align 4, !dbg !6038
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6039
  call void @llvm.dbg.value(metadata i8* %33, metadata !6008, metadata !DIExpression()), !dbg !6009
  br label %56, !dbg !6040

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6041
  %36 = load i24, i24* %35, align 4, !dbg !6042
  %37 = and i24 %36, -30721, !dbg !6042
  %38 = or i24 %37, 12288, !dbg !6042
  store i24 %38, i24* %35, align 4, !dbg !6042
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6043
  call void @llvm.dbg.value(metadata i8* %39, metadata !6008, metadata !DIExpression()), !dbg !6009
  br label %56, !dbg !6044

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6045
  %42 = load i24, i24* %41, align 4, !dbg !6046
  %43 = and i24 %42, -30721, !dbg !6046
  %44 = or i24 %43, 14336, !dbg !6046
  store i24 %44, i24* %41, align 4, !dbg !6046
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6047
  call void @llvm.dbg.value(metadata i8* %45, metadata !6008, metadata !DIExpression()), !dbg !6009
  br label %56, !dbg !6048

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6049
  %48 = load i24, i24* %47, align 4, !dbg !6050
  %49 = and i24 %48, -30723, !dbg !6050
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6051
  call void @llvm.dbg.value(metadata i8* %50, metadata !6008, metadata !DIExpression()), !dbg !6009
  %51 = or i24 %49, 16386, !dbg !6052
  store i24 %51, i24* %47, align 4, !dbg !6052
  br label %56, !dbg !6053

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6054
  %54 = load i24, i24* %53, align 4, !dbg !6055
  %55 = and i24 %54, -30721, !dbg !6055
  store i24 %55, i24* %53, align 4, !dbg !6055
  br label %56, !dbg !6056

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6008, metadata !DIExpression()), !dbg !6009
  ret i8* %57, !dbg !6057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6058 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6060, metadata !DIExpression()), !dbg !6065
  call void @llvm.dbg.value(metadata i8* %1, metadata !6061, metadata !DIExpression()), !dbg !6065
  call void @llvm.dbg.value(metadata i8 0, metadata !6062, metadata !DIExpression()), !dbg !6065
  call void @llvm.dbg.value(metadata i8* %1, metadata !6061, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6065
  %3 = load i8, i8* %1, align 1, !dbg !6066
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6067
  store i8 %3, i8* %4, align 1, !dbg !6068
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6069

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6070

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6071
  %9 = load i24, i24* %8, align 4, !dbg !6071
  %10 = and i24 %9, -458753, !dbg !6071
  %11 = or i24 %10, %7, !dbg !6071
  call void @llvm.dbg.label(metadata !6063), !dbg !6072
  %12 = and i24 %9, 30720, !dbg !6073
  %13 = icmp eq i24 %12, 16384, !dbg !6073
  %14 = zext i1 %13 to i24, !dbg !6075
  %15 = or i24 %11, %14, !dbg !6075
  %16 = icmp eq i8 %3, 99, !dbg !6076
  br i1 %16, label %17, label %43, !dbg !6078

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6079
  %19 = icmp ne i24 %18, 0, !dbg !6079
  call void @llvm.dbg.value(metadata i1 %19, metadata !6062, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6065
  br label %43, !dbg !6081

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6082
  %22 = load i24, i24* %21, align 4, !dbg !6083
  %23 = and i24 %22, -458753, !dbg !6083
  %24 = or i24 %23, 262144, !dbg !6083
  call void @llvm.dbg.value(metadata i8 1, metadata !6062, metadata !DIExpression()), !dbg !6065
  br label %43, !dbg !6084

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6087
  %27 = load i24, i24* %26, align 4, !dbg !6088
  %28 = and i24 %27, -458753, !dbg !6088
  %29 = or i24 %28, 196608, !dbg !6088
  %30 = and i24 %27, 30720, !dbg !6089
  %31 = icmp eq i24 %30, 16384, !dbg !6089
  br label %43, !dbg !6091

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6092
  %34 = load i24, i24* %33, align 4, !dbg !6093
  %35 = and i24 %34, -458753, !dbg !6093
  %36 = or i24 %35, 196608, !dbg !6093
  %37 = and i24 %34, 30720, !dbg !6094
  %38 = icmp ne i24 %37, 0, !dbg !6094
  br label %43, !dbg !6096

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6097
  %41 = load i24, i24* %40, align 4, !dbg !6098
  %42 = or i24 %41, 1, !dbg !6098
  br label %43, !dbg !6099

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6100
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6101
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6102
  call void @llvm.dbg.value(metadata i8* %48, metadata !6061, metadata !DIExpression()), !dbg !6065
  call void @llvm.dbg.value(metadata i8 poison, metadata !6062, metadata !DIExpression()), !dbg !6065
  %49 = lshr i24 %44, 1, !dbg !6100
  %50 = and i24 %49, 1, !dbg !6100
  %51 = zext i24 %50 to i32, !dbg !6100
  %52 = or i32 %51, %47, !dbg !6100
  %53 = trunc i32 %52 to i24, !dbg !6100
  %54 = shl nuw nsw i24 %53, 1, !dbg !6100
  %55 = and i24 %44, -3, !dbg !6100
  %56 = or i24 %54, %55, !dbg !6100
  store i24 %56, i24* %46, align 4, !dbg !6100
  ret i8* %48, !dbg !6103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6104 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6108, metadata !DIExpression()), !dbg !6111
  %2 = load i8*, i8** %0, align 4, !dbg !6112
  call void @llvm.dbg.value(metadata i8* %2, metadata !6109, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 0, metadata !6110, metadata !DIExpression()), !dbg !6111
  %3 = load i8, i8* %2, align 1, !dbg !6113
  %4 = zext i8 %3 to i32, !dbg !6114
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6115
  %6 = icmp eq i32 %5, 0, !dbg !6116
  br i1 %6, label %19, label %7, !dbg !6116

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6110, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i8* %10, metadata !6109, metadata !DIExpression()), !dbg !6111
  %11 = mul i32 %9, 10, !dbg !6117
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6119
  call void @llvm.dbg.value(metadata i8* %12, metadata !6109, metadata !DIExpression()), !dbg !6111
  %13 = add i32 %11, -48, !dbg !6120
  %14 = add i32 %13, %8, !dbg !6121
  call void @llvm.dbg.value(metadata i32 %14, metadata !6110, metadata !DIExpression()), !dbg !6111
  %15 = load i8, i8* %12, align 1, !dbg !6113
  %16 = zext i8 %15 to i32, !dbg !6114
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6115
  %18 = icmp eq i32 %17, 0, !dbg !6116
  br i1 %18, label %19, label %7, !dbg !6116, !llvm.loop !6122

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6111
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6111
  store i8* %20, i8** %0, align 4, !dbg !6124
  ret i32 %21, !dbg !6125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6128, metadata !DIExpression()), !dbg !6129
  %2 = add i32 %0, -48, !dbg !6130
  %3 = icmp ult i32 %2, 10, !dbg !6131
  %4 = zext i1 %3 to i32, !dbg !6131
  ret i32 %4, !dbg !6132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6133 {
  tail call void asm sideeffect ".globl\09CONFIG_BM_MESSAGE_SIZE\0A\09.equ\09CONFIG_BM_MESSAGE_SIZE,256\0A\09.type\09CONFIG_BM_MESSAGE_SIZE,%object", ""() #23, !dbg !6135, !srcloc !6136
  tail call void asm sideeffect ".globl\09CONFIG_BM_ONE_TO\0A\09.equ\09CONFIG_BM_ONE_TO,8\0A\09.type\09CONFIG_BM_ONE_TO,%object", ""() #23, !dbg !6137, !srcloc !6138
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6139, !srcloc !6140
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6141, !srcloc !6142
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !6143, !srcloc !6144
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6145, !srcloc !6146
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6147, !srcloc !6148
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6149, !srcloc !6150
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6151, !srcloc !6152
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6153, !srcloc !6154
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6155, !srcloc !6156
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6157, !srcloc !6158
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6159, !srcloc !6160
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6161, !srcloc !6162
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6163, !srcloc !6164
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !6165, !srcloc !6166
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6167, !srcloc !6168
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6169, !srcloc !6170
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6171, !srcloc !6172
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6173, !srcloc !6174
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6175, !srcloc !6176
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6177, !srcloc !6178
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6179, !srcloc !6180
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6181, !srcloc !6182
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #23, !dbg !6183, !srcloc !6184
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6185, !srcloc !6186
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6187, !srcloc !6188
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6189, !srcloc !6190
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6191, !srcloc !6192
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6193, !srcloc !6194
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #23, !dbg !6195, !srcloc !6196
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6197, !srcloc !6198
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6199, !srcloc !6200
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #23, !dbg !6201, !srcloc !6202
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #23, !dbg !6203, !srcloc !6204
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #23, !dbg !6205, !srcloc !6206
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #23, !dbg !6207, !srcloc !6208
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #23, !dbg !6209, !srcloc !6210
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #23, !dbg !6211, !srcloc !6212
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #23, !dbg !6213, !srcloc !6214
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6215, !srcloc !6216
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6217, !srcloc !6218
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6219, !srcloc !6220
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6221, !srcloc !6222
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6223, !srcloc !6224
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6225, !srcloc !6226
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6227, !srcloc !6228
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6229, !srcloc !6230
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6231, !srcloc !6232
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6233, !srcloc !6234
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6235, !srcloc !6236
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6237, !srcloc !6238
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6239, !srcloc !6240
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6241, !srcloc !6242
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6243, !srcloc !6244
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6245, !srcloc !6246
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6247, !srcloc !6248
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6249, !srcloc !6250
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6251, !srcloc !6252
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6253, !srcloc !6254
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6255, !srcloc !6256
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6257, !srcloc !6258
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6259, !srcloc !6260
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6261, !srcloc !6262
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6263, !srcloc !6264
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6265, !srcloc !6266
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6267, !srcloc !6268
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6269, !srcloc !6270
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6271, !srcloc !6272
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6273, !srcloc !6274
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6275, !srcloc !6276
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6277, !srcloc !6278
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #23, !dbg !6279, !srcloc !6280
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #23, !dbg !6281, !srcloc !6282
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #23, !dbg !6283, !srcloc !6284
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #23, !dbg !6285, !srcloc !6286
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6287, !srcloc !6288
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #23, !dbg !6289, !srcloc !6290
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #23, !dbg !6291, !srcloc !6292
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6293, !srcloc !6294
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #23, !dbg !6295, !srcloc !6296
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #23, !dbg !6297, !srcloc !6298
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #23, !dbg !6299, !srcloc !6300
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #23, !dbg !6301, !srcloc !6302
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6303, !srcloc !6304
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6305, !srcloc !6306
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6307, !srcloc !6308
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6309, !srcloc !6310
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6311, !srcloc !6312
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6313, !srcloc !6314
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6315, !srcloc !6316
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6317, !srcloc !6318
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6319, !srcloc !6320
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6321, !srcloc !6322
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6323, !srcloc !6324
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6325, !srcloc !6326
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6327, !srcloc !6328
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6329, !srcloc !6330
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6331, !srcloc !6332
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6333, !srcloc !6334
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6335, !srcloc !6336
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6337, !srcloc !6338
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6339, !srcloc !6340
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6341, !srcloc !6342
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6345, !srcloc !6346
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6347, !srcloc !6348
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6349, !srcloc !6350
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6351, !srcloc !6352
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6353, !srcloc !6354
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6357, !srcloc !6358
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6361, !srcloc !6362
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6363, !srcloc !6364
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6365, !srcloc !6366
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6367, !srcloc !6368
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6369, !srcloc !6370
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6371, !srcloc !6372
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6373, !srcloc !6374
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6377, !srcloc !6378
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6379, !srcloc !6380
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6381, !srcloc !6382
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6383, !srcloc !6384
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6385, !srcloc !6386
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6387, !srcloc !6388
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6389, !srcloc !6390
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6391, !srcloc !6392
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6393, !srcloc !6394
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6395, !srcloc !6396
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6399, !srcloc !6400
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6401, !srcloc !6402
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #23, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #23, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #23, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #23, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #23, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #23, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #23, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6671, !srcloc !6672
  ret void, !dbg !6673
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6676, metadata !DIExpression()), !dbg !6677
  tail call void @SOC_RdcInit() #24, !dbg !6678
  tail call void @SOC_ClockInit() #24, !dbg !6679
  tail call fastcc void @nxp_mcimx7_gpio_config() #24, !dbg !6680
  ret i32 0, !dbg !6681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #16 !dbg !6682 {
  tail call fastcc void @RDC_SetDomainID() #24, !dbg !6683
  ret void, !dbg !6684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !6685 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #25, !dbg !6686
  tail call fastcc void @CCM_EnableRoot() #24, !dbg !6687
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #24, !dbg !6688
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #24, !dbg !6689
  tail call fastcc void @WDOG_DisablePowerdown() #24, !dbg !6690
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #24, !dbg !6691
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #24, !dbg !6692
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #24, !dbg !6693
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #24, !dbg !6694
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #24, !dbg !6695
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #24, !dbg !6696
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #24, !dbg !6697
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #24, !dbg !6698
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #24, !dbg !6699
  ret void, !dbg !6700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #16 !dbg !6701 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #24, !dbg !6702
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #24, !dbg !6703
  ret void, !dbg !6704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !6705 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !6710, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata i32 %0, metadata !6711, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata i8 %1, metadata !6712, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata i8 0, metadata !6713, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata i8 0, metadata !6714, metadata !DIExpression()), !dbg !6715
  %3 = zext i8 %1 to i32, !dbg !6716
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !6717
  store volatile i32 %3, i32* %4, align 4, !dbg !6718
  ret void, !dbg !6719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !6720 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !6724, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %0, metadata !6725, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %1, metadata !6726, metadata !DIExpression()), !dbg !6727
  %3 = inttoptr i32 %0 to i32*, !dbg !6728
  store volatile i32 %1, i32* %3, align 4, !dbg !6729
  ret void, !dbg !6730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #16 !dbg !6731 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !6735, metadata !DIExpression()), !dbg !6737
  call void @llvm.dbg.value(metadata i32 809024384, metadata !6736, metadata !DIExpression()), !dbg !6737
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !6738
  ret void, !dbg !6739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #16 !dbg !6740 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !6745, metadata !DIExpression()), !dbg !6746
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !6747
  %2 = and i16 %1, -2, !dbg !6747
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !6747
  ret void, !dbg !6748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #16 !dbg !6749 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !6753, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 1, metadata !6754, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 1, metadata !6755, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i8 0, metadata !6756, metadata !DIExpression()), !dbg !6757
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !6758
  ret void, !dbg !6759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6760 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6763, metadata !DIExpression()), !dbg !6771
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6772
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6772
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6764, metadata !DIExpression()), !dbg !6773
  call void @llvm.va_start(i8* nonnull %3), !dbg !6774
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6775
  %5 = load i32, i32* %4, align 4, !dbg !6775
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6775
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6775
  call void @llvm.va_end(i8* nonnull %3), !dbg !6776
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6777
  ret void, !dbg !6777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6778 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6783, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i8* %0, metadata !6782, metadata !DIExpression()), !dbg !6784
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6785
  ret void, !dbg !6786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6791, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i8* %1, metadata !6792, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i32 %2, metadata !6793, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i8* %1, metadata !6794, metadata !DIExpression()), !dbg !6795
  %4 = icmp eq i32 %2, 0, !dbg !6796
  br i1 %4, label %14, label %5, !dbg !6797

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.19(i32 noundef %0) #24, !dbg !6795
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6797

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6794, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i32 %10, metadata !6793, metadata !DIExpression()), !dbg !6795
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 noundef %7) #25, !dbg !6798
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6800
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6801
  call void @llvm.dbg.value(metadata i32 %11, metadata !6793, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i8* %12, metadata !6794, metadata !DIExpression()), !dbg !6795
  br i1 %13, label %14, label %8, !dbg !6801, !llvm.loop !6802

14:                                               ; preds = %8, %3
  ret void, !dbg !6804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.19(i32 noundef %0) unnamed_addr #5 !dbg !6805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6807, metadata !DIExpression()), !dbg !6808
  %2 = add i32 %0, -1, !dbg !6809
  %3 = icmp ult i32 %2, 4, !dbg !6809
  %4 = shl i32 %2, 3, !dbg !6809
  %5 = lshr i32 1145657157, %4, !dbg !6809
  %6 = trunc i32 %5 to i8, !dbg !6809
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6809
  ret i8 %7, !dbg !6810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6811 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6815, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.value(metadata i32 %1, metadata !6816, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.value(metadata i32 0, metadata !6817, metadata !DIExpression()), !dbg !6827
  br label %4, !dbg !6828

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.21, i32 0, i32 0)) #25, !dbg !6829
  call void @llvm.dbg.value(metadata i32 0, metadata !6819, metadata !DIExpression()), !dbg !6830
  br label %16, !dbg !6831

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6817, metadata !DIExpression()), !dbg !6827
  %6 = icmp ult i32 %5, %1, !dbg !6832
  br i1 %6, label %7, label %11, !dbg !6836

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6837
  %9 = load i8, i8* %8, align 1, !dbg !6837
  %10 = zext i8 %9 to i32, !dbg !6839
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %10) #25, !dbg !6840
  br label %12, !dbg !6841

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.23, i32 0, i32 0)) #25, !dbg !6842
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6844
  call void @llvm.dbg.value(metadata i32 %13, metadata !6817, metadata !DIExpression()), !dbg !6827
  %14 = icmp eq i32 %13, 8, !dbg !6845
  br i1 %14, label %3, label %4, !dbg !6828, !llvm.loop !6846

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.24, i32 0, i32 0)) #25, !dbg !6848
  ret void, !dbg !6849

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6819, metadata !DIExpression()), !dbg !6830
  %18 = icmp ult i32 %17, %1, !dbg !6850
  br i1 %18, label %19, label %26, !dbg !6851

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6852
  %21 = load i8, i8* %20, align 1, !dbg !6852
  call void @llvm.dbg.value(metadata i8 %21, metadata !6821, metadata !DIExpression()), !dbg !6853
  %22 = zext i8 %21 to i32, !dbg !6854
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6855
  %24 = icmp eq i32 %23, 0, !dbg !6856
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6855
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.25, i32 0, i32 0), i32 noundef %25) #25, !dbg !6857
  br label %27, !dbg !6858

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.26, i32 0, i32 0)) #25, !dbg !6859
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %28, metadata !6819, metadata !DIExpression()), !dbg !6830
  %29 = icmp eq i32 %28, 8, !dbg !6862
  br i1 %29, label %15, label %16, !dbg !6831, !llvm.loop !6863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !6865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6867, metadata !DIExpression()), !dbg !6868
  %2 = add i32 %0, -32, !dbg !6869
  %3 = icmp ult i32 %2, 95, !dbg !6869
  %4 = zext i1 %3 to i32, !dbg !6869
  ret i32 %4, !dbg !6870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6920, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6921, metadata !DIExpression()), !dbg !6922
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6923
  br i1 %3, label %5, label %4, !dbg !6925

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6926
  br label %5, !dbg !6928

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6929
  ret void, !dbg !6930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6931 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6935, metadata !DIExpression()), !dbg !6936
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6937
  %3 = load i32, i32* %2, align 4, !dbg !6937
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6937
  %5 = load i32, i32* %4, align 4, !dbg !6937
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6937
  %7 = load i32, i32* %6, align 4, !dbg !6937
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6937
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6942
  %9 = load i32, i32* %8, align 4, !dbg !6942
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6942
  %11 = load i32, i32* %10, align 4, !dbg !6942
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6942
  %13 = load i32, i32* %12, align 4, !dbg !6942
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.28, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6942
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6947
  %15 = load i32, i32* %14, align 4, !dbg !6947
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.29, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6947
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6952
  %17 = load i32, i32* %16, align 4, !dbg !6952
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.30, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6952
  ret void, !dbg !6957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6958 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6975, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6976, metadata !DIExpression()), !dbg !6978
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6979
  %4 = load i32, i32* %3, align 4, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %4, metadata !6977, metadata !DIExpression()), !dbg !6978
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6980
  ret void, !dbg !6981
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6982 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6986, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i8* %0, metadata !6987, metadata !DIExpression()), !dbg !6989
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6990
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6990
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6988, metadata !DIExpression()), !dbg !6991
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6991
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6992
  %5 = bitcast i8* %4 to i32*, !dbg !6992
  %6 = load i32, i32* %5, align 4, !dbg !6992
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6993
  store i32 %6, i32* %7, align 4, !dbg !6994
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6995
  unreachable, !dbg !6996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7002, metadata !DIExpression()), !dbg !7003
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !7004
  ret void, !dbg !7005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7010, metadata !DIExpression()), !dbg !7011
  %2 = icmp sgt i32 %0, -1, !dbg !7012
  br i1 %2, label %3, label %8, !dbg !7014

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7015, !srcloc !7017
  %4 = and i32 %0, 31, !dbg !7018
  %5 = shl nuw i32 1, %4, !dbg !7019
  %6 = lshr i32 %0, 5, !dbg !7020
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7021
  store volatile i32 %5, i32* %7, align 4, !dbg !7022
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7023, !srcloc !7024
  br label %8, !dbg !7025

8:                                                ; preds = %3, %1
  ret void, !dbg !7026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7029, metadata !DIExpression()), !dbg !7030
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7031
  ret void, !dbg !7032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7035, metadata !DIExpression()), !dbg !7036
  %2 = icmp sgt i32 %0, -1, !dbg !7037
  br i1 %2, label %3, label %8, !dbg !7039

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7040
  %5 = shl nuw i32 1, %4, !dbg !7042
  %6 = lshr i32 %0, 5, !dbg !7043
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7044
  store volatile i32 %5, i32* %7, align 4, !dbg !7045
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7046, !srcloc !7050
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7051, !srcloc !7054
  br label %8, !dbg !7055

8:                                                ; preds = %3, %1
  ret void, !dbg !7056
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7061, metadata !DIExpression()), !dbg !7062
  %2 = lshr i32 %0, 5, !dbg !7063
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7064
  %4 = load volatile i32, i32* %3, align 4, !dbg !7064
  %5 = and i32 %0, 31, !dbg !7065
  %6 = shl nuw i32 1, %5, !dbg !7065
  %7 = and i32 %4, %6, !dbg !7066
  ret i32 %7, !dbg !7067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7072, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.value(metadata i32 %1, metadata !7073, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.value(metadata i32 %2, metadata !7074, metadata !DIExpression()), !dbg !7075
  %4 = add i32 %1, 1, !dbg !7076
  call void @llvm.dbg.value(metadata i32 %4, metadata !7073, metadata !DIExpression()), !dbg !7075
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7079
  ret void, !dbg !7080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7085, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i32 %1, metadata !7086, metadata !DIExpression()), !dbg !7087
  %3 = trunc i32 %1 to i8, !dbg !7088
  %4 = shl i8 %3, 4, !dbg !7088
  %5 = and i32 %0, 15, !dbg !7090
  %6 = add nsw i32 %5, -4, !dbg !7090
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7090
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7090
  %9 = icmp slt i32 %0, 0, !dbg !7090
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7090
  store volatile i8 %4, i8* %10, align 1, !dbg !7088
  ret void, !dbg !7091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7092 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7094, metadata !DIExpression()), !dbg !7095
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7096
  ret void, !dbg !7097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7098 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7100
  tail call void @z_arm_int_exit() #25, !dbg !7101
  ret void, !dbg !7102
}

; Function Attrs: optsize
declare !dbg !7103 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7104 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7106 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7108
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !7109
  tail call void @z_bss_zero() #25, !dbg !7110
  tail call void @z_data_copy() #25, !dbg !7111
  tail call void @z_arm_interrupt_init() #25, !dbg !7112
  tail call void @z_cstart() #27, !dbg !7113
  unreachable, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7114 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7115
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7116, !srcloc !7119
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7120, !srcloc !7123
  ret void, !dbg !7124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7125 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7126
  %2 = and i32 %1, -15728641, !dbg !7126
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7126
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7127, !srcloc !7132
  call void @llvm.dbg.value(metadata i32 %3, metadata !7130, metadata !DIExpression()) #23, !dbg !7133
  %4 = and i32 %3, -5, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %4, metadata !7135, metadata !DIExpression()) #23, !dbg !7140
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7144, !srcloc !7123
  ret void, !dbg !7146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7150, metadata !DIExpression()), !dbg !7151
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7152
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !7153
  store i32 %0, i32* %3, align 8, !dbg !7154
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7155
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !7156
  store i32 %4, i32* %5, align 4, !dbg !7157
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7158
  %7 = or i32 %6, 268435456, !dbg !7158
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7158
  call void @llvm.dbg.value(metadata i32 0, metadata !7159, metadata !DIExpression()) #23, !dbg !7163
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7165, !srcloc !7166
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7167
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !7168
  %10 = load i32, i32* %9, align 4, !dbg !7168
  ret i32 %10, !dbg !7169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7274, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7275, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata i8* %2, metadata !7276, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7277, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata i8* %4, metadata !7278, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata i8* %5, metadata !7279, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata i8* %6, metadata !7280, metadata !DIExpression()), !dbg !7282
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7283
  call void @llvm.dbg.value(metadata i8* %8, metadata !7281, metadata !DIExpression()), !dbg !7282
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7284
  %10 = bitcast i8* %9 to i32*, !dbg !7284
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7285
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7286
  %12 = bitcast i8* %8 to i32*, !dbg !7287
  store i32 %11, i32* %12, align 4, !dbg !7288
  %13 = ptrtoint i8* %4 to i32, !dbg !7289
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7290
  %15 = bitcast i8* %14 to i32*, !dbg !7290
  store i32 %13, i32* %15, align 4, !dbg !7291
  %16 = ptrtoint i8* %5 to i32, !dbg !7292
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7293
  %18 = bitcast i8* %17 to i32*, !dbg !7293
  store i32 %16, i32* %18, align 4, !dbg !7294
  %19 = ptrtoint i8* %6 to i32, !dbg !7295
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7296
  %21 = bitcast i8* %20 to i32*, !dbg !7296
  store i32 %19, i32* %21, align 4, !dbg !7297
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7298
  %23 = bitcast i8* %22 to i32*, !dbg !7298
  store i32 16777216, i32* %23, align 4, !dbg !7299
  %24 = ptrtoint i8* %8 to i32, !dbg !7300
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7301
  store i32 %24, i32* %25, align 8, !dbg !7302
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7303
  store i32 0, i32* %26, align 8, !dbg !7304
  ret void, !dbg !7305
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7310, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata i8* %1, metadata !7311, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7312, metadata !DIExpression()), !dbg !7313
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7314
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7315, !srcloc !7316
  unreachable, !dbg !7317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7318 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7336, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %1, metadata !7337, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %2, metadata !7338, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7339, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 0, metadata !7340, metadata !DIExpression()), !dbg !7346
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7347
  %9 = and i32 %8, 511, !dbg !7348
  call void @llvm.dbg.value(metadata i32 %9, metadata !7341, metadata !DIExpression()), !dbg !7346
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7349
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7349
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7350
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7350
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7345, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.value(metadata i32 0, metadata !7352, metadata !DIExpression()) #23, !dbg !7355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7357, !srcloc !7358
  call void @llvm.dbg.value(metadata i8* %6, metadata !7343, metadata !DIExpression(DW_OP_deref)), !dbg !7346
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7359
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7344, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i8* %5, metadata !7342, metadata !DIExpression(DW_OP_deref)), !dbg !7346
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7360
  call void @llvm.dbg.value(metadata i32 %12, metadata !7340, metadata !DIExpression()), !dbg !7346
  %13 = load i8, i8* %5, align 1, !dbg !7361, !range !7363
  call void @llvm.dbg.value(metadata i8 %13, metadata !7342, metadata !DIExpression()), !dbg !7346
  %14 = icmp eq i8 %13, 0, !dbg !7361
  br i1 %14, label %15, label %32, !dbg !7364

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7365
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7366
  %18 = load i8, i8* %6, align 1, !dbg !7367, !range !7363
  call void @llvm.dbg.value(metadata i8 %18, metadata !7343, metadata !DIExpression()), !dbg !7346
  %19 = icmp eq i8 %18, 0, !dbg !7367
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7369
  %21 = load i32, i32* %20, align 4, !dbg !7369
  br i1 %19, label %27, label %22, !dbg !7370

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7371
  %24 = icmp eq i32 %23, 0, !dbg !7374
  br i1 %24, label %25, label %31, !dbg !7375

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7376
  br label %29, !dbg !7378

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7379
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7369
  br label %31, !dbg !7381

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7381
  br label %32, !dbg !7382

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7382
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7382
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7382
  ret void, !dbg !7382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7388, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i32 %1, metadata !7389, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i32 %2, metadata !7390, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i8* %3, metadata !7391, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i8 0, metadata !7392, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7393, metadata !DIExpression()), !dbg !7394
  store i8 0, i8* %3, align 1, !dbg !7395
  %5 = icmp ugt i32 %2, -16777217, !dbg !7396
  br i1 %5, label %6, label %17, !dbg !7398

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7399
  %8 = icmp eq i32 %7, 8, !dbg !7399
  br i1 %8, label %9, label %10, !dbg !7399

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7401
  br label %17, !dbg !7407

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7408
  %12 = icmp eq i32 %11, 0, !dbg !7408
  br i1 %12, label %13, label %14, !dbg !7409

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7393, metadata !DIExpression()), !dbg !7394
  store i8 1, i8* %3, align 1, !dbg !7412
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7394
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7393, metadata !DIExpression()), !dbg !7394
  br label %17, !dbg !7415

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7394
  ret %struct.__esf* %18, !dbg !7416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7417 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7421, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %1, metadata !7422, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8* %2, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 0, metadata !7424, metadata !DIExpression()), !dbg !7425
  store i8 0, i8* %2, align 1, !dbg !7426
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !7427

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7428
  call void @llvm.dbg.value(metadata i32 %5, metadata !7424, metadata !DIExpression()), !dbg !7425
  br label %11, !dbg !7430

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7431
  call void @llvm.dbg.value(metadata i32 0, metadata !7424, metadata !DIExpression()), !dbg !7425
  br label %11, !dbg !7432

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7433
  call void @llvm.dbg.value(metadata i32 0, metadata !7424, metadata !DIExpression()), !dbg !7425
  br label %11, !dbg !7434

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7435
  call void @llvm.dbg.value(metadata i32 0, metadata !7424, metadata !DIExpression()), !dbg !7425
  br label %11, !dbg !7436

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7437
  br label %11, !dbg !7438

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7439
  br label %11, !dbg !7440

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !7425
  call void @llvm.dbg.value(metadata i32 %12, metadata !7424, metadata !DIExpression()), !dbg !7425
  ret i32 %12, !dbg !7441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7442 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7446, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i8* %1, metadata !7447, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32 0, metadata !7448, metadata !DIExpression()), !dbg !7449
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.39, i32 0, i32 0), i32 noundef 69) #25, !dbg !7450
  store i8 0, i8* %1, align 1, !dbg !7455
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7456
  %4 = and i32 %3, 2, !dbg !7458
  %5 = icmp eq i32 %4, 0, !dbg !7459
  br i1 %5, label %7, label %6, !dbg !7460

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 69) #25, !dbg !7461
  br label %35, !dbg !7467

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7468
  %9 = icmp sgt i32 %8, -1, !dbg !7470
  br i1 %9, label %11, label %10, !dbg !7471

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.41, i32 0, i32 0), i32 noundef 69) #25, !dbg !7472
  br label %35, !dbg !7478

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7479
  %13 = and i32 %12, 1073741824, !dbg !7481
  %14 = icmp eq i32 %13, 0, !dbg !7482
  br i1 %14, label %35, label %15, !dbg !7483

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.42, i32 0, i32 0), i32 noundef 69) #25, !dbg !7484
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7490
  br i1 %16, label %17, label %21, !dbg !7492

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7493
  %19 = load i32, i32* %18, align 4, !dbg !7493
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.43, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7493
  %20 = load i32, i32* %18, align 4, !dbg !7499
  call void @llvm.dbg.value(metadata i32 %20, metadata !7448, metadata !DIExpression()), !dbg !7449
  br label %35, !dbg !7500

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7501
  %23 = and i32 %22, 255, !dbg !7503
  %24 = icmp eq i32 %23, 0, !dbg !7504
  br i1 %24, label %26, label %25, !dbg !7505

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7506
  call void @llvm.dbg.value(metadata i32 0, metadata !7448, metadata !DIExpression()), !dbg !7449
  br label %35, !dbg !7508

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7509
  %28 = and i32 %27, 65280, !dbg !7511
  %29 = icmp eq i32 %28, 0, !dbg !7512
  br i1 %29, label %31, label %30, !dbg !7513

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7514
  call void @llvm.dbg.value(metadata i32 0, metadata !7448, metadata !DIExpression()), !dbg !7449
  br label %35, !dbg !7516

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7517
  %33 = icmp ult i32 %32, 65536, !dbg !7519
  br i1 %33, label %35, label %34, !dbg !7520

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #24, !dbg !7521
  call void @llvm.dbg.value(metadata i32 0, metadata !7448, metadata !DIExpression()), !dbg !7449
  br label %35, !dbg !7523

35:                                               ; preds = %10, %11, %17, %30, %31, %34, %25, %6
  %36 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], [ 0, %31 ], [ 0, %11 ], !dbg !7449
  call void @llvm.dbg.value(metadata i32 %36, metadata !7448, metadata !DIExpression()), !dbg !7449
  ret i32 %36, !dbg !7524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7525 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7527, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %0, metadata !7528, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %1, metadata !7529, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 0, metadata !7530, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 -22, metadata !7531, metadata !DIExpression()), !dbg !7535
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.37, i32 0, i32 0), i32 noundef 69) #25, !dbg !7536
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7541
  %4 = and i32 %3, 16, !dbg !7543
  %5 = icmp eq i32 %4, 0, !dbg !7544
  br i1 %5, label %7, label %6, !dbg !7545

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.38, i32 0, i32 0), i32 noundef 69) #25, !dbg !7546
  br label %7, !dbg !7552

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7553
  %9 = and i32 %8, 8, !dbg !7555
  %10 = icmp eq i32 %9, 0, !dbg !7556
  br i1 %10, label %12, label %11, !dbg !7557

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7558
  br label %12, !dbg !7564

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7565
  %14 = and i32 %13, 2, !dbg !7566
  %15 = icmp eq i32 %14, 0, !dbg !7567
  br i1 %15, label %26, label %16, !dbg !7568

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #25, !dbg !7569
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7574
  call void @llvm.dbg.value(metadata i32 %17, metadata !7532, metadata !DIExpression()), !dbg !7575
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7576
  %19 = and i32 %18, 128, !dbg !7578
  %20 = icmp eq i32 %19, 0, !dbg !7579
  br i1 %20, label %26, label %21, !dbg !7580

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !7531, metadata !DIExpression()), !dbg !7535
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7581
  %22 = icmp eq i32 %0, 0, !dbg !7587
  br i1 %22, label %26, label %23, !dbg !7589

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7590
  %25 = and i32 %24, -129, !dbg !7590
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7590
  br label %26, !dbg !7592

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !7531, metadata !DIExpression()), !dbg !7535
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7593
  %28 = and i32 %27, 1, !dbg !7595
  %29 = icmp eq i32 %28, 0, !dbg !7596
  br i1 %29, label %31, label %30, !dbg !7597

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7598
  br label %31, !dbg !7604

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7605
  %33 = and i32 %32, 32, !dbg !7607
  %34 = icmp eq i32 %33, 0, !dbg !7608
  br i1 %34, label %36, label %35, !dbg !7609

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7610
  br label %36, !dbg !7616

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7617
  %38 = and i32 %37, 16, !dbg !7619
  %39 = icmp eq i32 %38, 0, !dbg !7619
  br i1 %39, label %40, label %42, !dbg !7620

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7621
  br label %42, !dbg !7622

42:                                               ; preds = %40, %36
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7623
  %44 = and i32 %43, 32, !dbg !7625
  %45 = icmp eq i32 %44, 0, !dbg !7626
  br i1 %45, label %49, label %46, !dbg !7627

46:                                               ; preds = %42
  %47 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7628
  %48 = and i32 %47, -8193, !dbg !7628
  store volatile i32 %48, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7628
  br label %49, !dbg !7630

49:                                               ; preds = %46, %42
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7631
  %51 = or i32 %50, 255, !dbg !7631
  store volatile i32 %51, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7631
  store i8 0, i8* %1, align 1, !dbg !7632
  ret void, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7634 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7638, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %0, metadata !7639, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %1, metadata !7640, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 0, metadata !7641, metadata !DIExpression()), !dbg !7645
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7646
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7651
  %4 = and i32 %3, 4096, !dbg !7653
  %5 = icmp eq i32 %4, 0, !dbg !7653
  br i1 %5, label %7, label %6, !dbg !7654

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7655
  br label %7, !dbg !7661

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7662
  %9 = and i32 %8, 2048, !dbg !7664
  %10 = icmp eq i32 %9, 0, !dbg !7664
  br i1 %10, label %12, label %11, !dbg !7665

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7666
  br label %12, !dbg !7672

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7673
  %14 = and i32 %13, 512, !dbg !7674
  %15 = icmp eq i32 %14, 0, !dbg !7674
  br i1 %15, label %26, label %16, !dbg !7675

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.36, i32 0, i32 0), i32 noundef 69) #25, !dbg !7676
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %17, metadata !7642, metadata !DIExpression()), !dbg !7682
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7683
  %19 = and i32 %18, 32768, !dbg !7685
  %20 = icmp eq i32 %19, 0, !dbg !7686
  br i1 %20, label %26, label %21, !dbg !7687

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7688
  %22 = icmp eq i32 %0, 0, !dbg !7694
  br i1 %22, label %26, label %23, !dbg !7696

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7697
  %25 = and i32 %24, -32769, !dbg !7697
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7697
  br label %26, !dbg !7699

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7700
  %28 = and i32 %27, 1024, !dbg !7702
  %29 = icmp eq i32 %28, 0, !dbg !7702
  br i1 %29, label %31, label %30, !dbg !7703

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7704
  br label %31, !dbg !7710

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7711
  %33 = and i32 %32, 256, !dbg !7713
  %34 = icmp eq i32 %33, 0, !dbg !7714
  br i1 %34, label %35, label %39, !dbg !7715

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7716
  %37 = and i32 %36, 8192, !dbg !7718
  %38 = icmp eq i32 %37, 0, !dbg !7718
  br i1 %38, label %41, label %39, !dbg !7719

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7720
  br label %41, !dbg !7721

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7721
  %43 = or i32 %42, 65280, !dbg !7721
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7721
  store i8 0, i8* %1, align 1, !dbg !7722
  ret void, !dbg !7723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7724 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7730, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i32 0, metadata !7731, metadata !DIExpression()), !dbg !7732
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7733
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7738
  %2 = and i32 %1, 33554432, !dbg !7740
  %3 = icmp eq i32 %2, 0, !dbg !7741
  br i1 %3, label %5, label %4, !dbg !7742

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7743
  br label %5, !dbg !7749

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7750
  %7 = and i32 %6, 16777216, !dbg !7752
  %8 = icmp eq i32 %7, 0, !dbg !7753
  br i1 %8, label %10, label %9, !dbg !7754

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7755
  br label %10, !dbg !7761

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7762
  %12 = and i32 %11, 524288, !dbg !7764
  %13 = icmp eq i32 %12, 0, !dbg !7765
  br i1 %13, label %15, label %14, !dbg !7766

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7767
  br label %15, !dbg !7773

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7774
  %17 = and i32 %16, 262144, !dbg !7776
  %18 = icmp eq i32 %17, 0, !dbg !7777
  br i1 %18, label %20, label %19, !dbg !7778

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7779
  br label %20, !dbg !7785

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7786
  %22 = and i32 %21, 131072, !dbg !7788
  %23 = icmp eq i32 %22, 0, !dbg !7789
  br i1 %23, label %25, label %24, !dbg !7790

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7791
  br label %25, !dbg !7797

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7798
  %27 = and i32 %26, 65536, !dbg !7800
  %28 = icmp eq i32 %27, 0, !dbg !7801
  br i1 %28, label %30, label %29, !dbg !7802

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7803
  br label %30, !dbg !7809

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7810
  %32 = or i32 %31, -65536, !dbg !7810
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7810
  ret void, !dbg !7811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7812 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7816, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %0, metadata !7817, metadata !DIExpression()), !dbg !7818
  store i8 0, i8* %0, align 1, !dbg !7819
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7820
  ret void, !dbg !7825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7826 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7830, metadata !DIExpression()), !dbg !7832
  call void @llvm.dbg.value(metadata i32 %0, metadata !7831, metadata !DIExpression()), !dbg !7832
  %2 = icmp slt i32 %0, 16, !dbg !7833
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !7833
  %4 = add nsw i32 %0, -16, !dbg !7833
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.33, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7833
  ret void, !dbg !7838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7839 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7843, metadata !DIExpression()), !dbg !7846
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7847
  %3 = load i32, i32* %2, align 4, !dbg !7847
  %4 = inttoptr i32 %3 to i16*, !dbg !7848
  call void @llvm.dbg.value(metadata i16* %4, metadata !7844, metadata !DIExpression()), !dbg !7846
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7849
  %6 = or i32 %5, 256, !dbg !7849
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7849
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7850, !srcloc !7853
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7854, !srcloc !7857
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7858
  %8 = load i16, i16* %7, align 2, !dbg !7859
  call void @llvm.dbg.value(metadata i16 %8, metadata !7845, metadata !DIExpression()), !dbg !7846
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7860
  %10 = and i32 %9, -257, !dbg !7860
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7860
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7861, !srcloc !7853
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7863, !srcloc !7857
  %11 = icmp eq i16 %8, -8446, !dbg !7865
  ret i1 %11, !dbg !7867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !7868 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7869
  %2 = or i32 %1, 16, !dbg !7869
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7869
  ret void, !dbg !7870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !7871 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7874, metadata !DIExpression()), !dbg !7875
  br label %1, !dbg !7876

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7874, metadata !DIExpression()), !dbg !7875
  tail call fastcc void @__NVIC_SetPriority.47(i32 noundef %2) #24, !dbg !7878
  %3 = add nuw nsw i32 %2, 1, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %3, metadata !7874, metadata !DIExpression()), !dbg !7875
  %4 = icmp eq i32 %3, 127, !dbg !7882
  br i1 %4, label %5, label %1, !dbg !7876, !llvm.loop !7883

5:                                                ; preds = %1
  ret void, !dbg !7885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.47(i32 noundef %0) unnamed_addr #16 !dbg !7886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7888, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.value(metadata i32 1, metadata !7889, metadata !DIExpression()), !dbg !7890
  %2 = and i32 %0, 15, !dbg !7891
  %3 = add nsw i32 %2, -4, !dbg !7891
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7891
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7891
  %6 = icmp slt i32 %0, 0, !dbg !7891
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7891
  store volatile i8 16, i8* %7, align 1, !dbg !7892
  ret void, !dbg !7894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7995, metadata !DIExpression()), !dbg !7996
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7997
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7999
  br i1 %3, label %4, label %12, !dbg !8000

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8001, !srcloc !8013
  call void @llvm.dbg.value(metadata i32 %5, metadata !8004, metadata !DIExpression()) #23, !dbg !8014
  %6 = icmp eq i32 %5, 0, !dbg !8015
  br i1 %6, label %12, label %7, !dbg !8016

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8017
  %9 = or i32 %8, 268435456, !dbg !8017
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8017
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8019
  %11 = and i32 %10, -32769, !dbg !8019
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8019
  br label %12, !dbg !8020

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8021
  ret void, !dbg !8022
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8030, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %0, metadata !8032, metadata !DIExpression()), !dbg !8033
  %3 = load i8, i8* %1, align 1, !dbg !8034
  %4 = icmp eq i8 %3, 0, !dbg !8035
  br i1 %4, label %13, label %5, !dbg !8036

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8030, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %8, metadata !8031, metadata !DIExpression()), !dbg !8033
  store i8 %6, i8* %7, align 1, !dbg !8037
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8039
  call void @llvm.dbg.value(metadata i8* %9, metadata !8030, metadata !DIExpression()), !dbg !8033
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8040
  call void @llvm.dbg.value(metadata i8* %10, metadata !8031, metadata !DIExpression()), !dbg !8033
  %11 = load i8, i8* %10, align 1, !dbg !8034
  %12 = icmp eq i8 %11, 0, !dbg !8035
  br i1 %12, label %13, label %5, !dbg !8036, !llvm.loop !8041

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8043
  ret i8* %0, !dbg !8044
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8045 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8049, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %1, metadata !8050, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %2, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %0, metadata !8052, metadata !DIExpression()), !dbg !8053
  %4 = icmp eq i32 %2, 0, !dbg !8054
  br i1 %4, label %22, label %5, !dbg !8055

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8049, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %7, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %8, metadata !8050, metadata !DIExpression()), !dbg !8053
  %9 = load i8, i8* %8, align 1, !dbg !8056
  %10 = icmp eq i8 %9, 0, !dbg !8057
  br i1 %10, label %16, label %11, !dbg !8058

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8059
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8061
  call void @llvm.dbg.value(metadata i8* %12, metadata !8050, metadata !DIExpression()), !dbg !8053
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8062
  call void @llvm.dbg.value(metadata i8* %13, metadata !8049, metadata !DIExpression()), !dbg !8053
  %14 = add i32 %7, -1, !dbg !8063
  call void @llvm.dbg.value(metadata i32 %14, metadata !8051, metadata !DIExpression()), !dbg !8053
  %15 = icmp eq i32 %14, 0, !dbg !8054
  br i1 %15, label %22, label %5, !dbg !8055, !llvm.loop !8064

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8049, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %18, metadata !8051, metadata !DIExpression()), !dbg !8053
  store i8 0, i8* %17, align 1, !dbg !8066
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8068
  call void @llvm.dbg.value(metadata i8* %19, metadata !8049, metadata !DIExpression()), !dbg !8053
  %20 = add i32 %18, -1, !dbg !8069
  call void @llvm.dbg.value(metadata i32 %20, metadata !8051, metadata !DIExpression()), !dbg !8053
  %21 = icmp eq i32 %20, 0, !dbg !8070
  br i1 %21, label %22, label %16, !dbg !8071, !llvm.loop !8072

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8074
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8075 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %1, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %1, metadata !8081, metadata !DIExpression()), !dbg !8082
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8083

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8079, metadata !DIExpression()), !dbg !8082
  %6 = load i8, i8* %5, align 1, !dbg !8084
  %7 = icmp eq i8 %6, %3, !dbg !8085
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8086
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8087
  call void @llvm.dbg.value(metadata i8* %10, metadata !8079, metadata !DIExpression()), !dbg !8082
  br i1 %9, label %11, label %4, !dbg !8086, !llvm.loop !8089

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8091
  ret i8* %12, !dbg !8092
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8093 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8095, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i32 %1, metadata !8096, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i8* null, metadata !8097, metadata !DIExpression()), !dbg !8098
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8099

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8098
  call void @llvm.dbg.value(metadata i8* %6, metadata !8097, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i8* %5, metadata !8095, metadata !DIExpression()), !dbg !8098
  %7 = load i8, i8* %5, align 1, !dbg !8100
  %8 = icmp eq i8 %7, %3, !dbg !8103
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8104
  call void @llvm.dbg.value(metadata i8* %9, metadata !8097, metadata !DIExpression()), !dbg !8098
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8105
  call void @llvm.dbg.value(metadata i8* %10, metadata !8095, metadata !DIExpression()), !dbg !8098
  %11 = icmp eq i8 %7, 0, !dbg !8106
  br i1 %11, label %12, label %4, !dbg !8106, !llvm.loop !8107

12:                                               ; preds = %4
  ret i8* %9, !dbg !8109
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8110 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8114, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i32 0, metadata !8115, metadata !DIExpression()), !dbg !8116
  %2 = load i8, i8* %0, align 1, !dbg !8117
  %3 = icmp eq i8 %2, 0, !dbg !8118
  br i1 %3, label %11, label %4, !dbg !8119

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8115, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8* %6, metadata !8114, metadata !DIExpression()), !dbg !8116
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8120
  call void @llvm.dbg.value(metadata i8* %7, metadata !8114, metadata !DIExpression()), !dbg !8116
  %8 = add i32 %5, 1, !dbg !8122
  call void @llvm.dbg.value(metadata i32 %8, metadata !8115, metadata !DIExpression()), !dbg !8116
  %9 = load i8, i8* %7, align 1, !dbg !8117
  %10 = icmp eq i8 %9, 0, !dbg !8118
  br i1 %10, label %11, label %4, !dbg !8119, !llvm.loop !8123

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8116
  ret i32 %12, !dbg !8125
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8126 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8130, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata i32 %1, metadata !8131, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata i32 0, metadata !8132, metadata !DIExpression()), !dbg !8133
  %3 = load i8, i8* %0, align 1, !dbg !8134
  %4 = icmp ne i8 %3, 0, !dbg !8135
  %5 = icmp ne i32 %1, 0, !dbg !8136
  %6 = and i1 %4, %5, !dbg !8136
  br i1 %6, label %7, label %16, !dbg !8137

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8132, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata i8* %9, metadata !8130, metadata !DIExpression()), !dbg !8133
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8138
  call void @llvm.dbg.value(metadata i8* %10, metadata !8130, metadata !DIExpression()), !dbg !8133
  %11 = add nuw i32 %8, 1, !dbg !8140
  call void @llvm.dbg.value(metadata i32 %11, metadata !8132, metadata !DIExpression()), !dbg !8133
  %12 = load i8, i8* %10, align 1, !dbg !8134
  %13 = icmp ne i8 %12, 0, !dbg !8135
  %14 = icmp ult i32 %11, %1, !dbg !8136
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8136
  br i1 %15, label %7, label %16, !dbg !8137, !llvm.loop !8141

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8133
  ret i32 %17, !dbg !8143
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8144 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8148, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i8* %1, metadata !8149, metadata !DIExpression()), !dbg !8150
  %3 = load i8, i8* %0, align 1, !dbg !8151
  %4 = load i8, i8* %1, align 1, !dbg !8152
  %5 = icmp ne i8 %3, %4, !dbg !8153
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8154
  br i1 %7, label %18, label %8, !dbg !8154

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8149, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i8* %10, metadata !8148, metadata !DIExpression()), !dbg !8150
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8155
  call void @llvm.dbg.value(metadata i8* %11, metadata !8148, metadata !DIExpression()), !dbg !8150
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8157
  call void @llvm.dbg.value(metadata i8* %12, metadata !8149, metadata !DIExpression()), !dbg !8150
  %13 = load i8, i8* %11, align 1, !dbg !8151
  %14 = load i8, i8* %12, align 1, !dbg !8152
  %15 = icmp ne i8 %13, %14, !dbg !8153
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8154
  br i1 %17, label %18, label %8, !dbg !8154, !llvm.loop !8158

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8151
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8152
  %21 = zext i8 %19 to i32, !dbg !8161
  %22 = zext i8 %20 to i32, !dbg !8162
  %23 = sub nsw i32 %21, %22, !dbg !8163
  ret i32 %23, !dbg !8164
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8169, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i8* %1, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32 %2, metadata !8171, metadata !DIExpression()), !dbg !8172
  %4 = icmp eq i32 %2, 0, !dbg !8173
  br i1 %4, label %23, label %5, !dbg !8173

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8171, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i8* %7, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i8* %8, metadata !8169, metadata !DIExpression()), !dbg !8172
  %9 = load i8, i8* %8, align 1, !dbg !8174
  %10 = load i8, i8* %7, align 1, !dbg !8175
  %11 = icmp ne i8 %9, %10, !dbg !8176
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8177
  br i1 %13, label %19, label %14, !dbg !8177

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8178
  call void @llvm.dbg.value(metadata i8* %15, metadata !8169, metadata !DIExpression()), !dbg !8172
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8180
  call void @llvm.dbg.value(metadata i8* %16, metadata !8170, metadata !DIExpression()), !dbg !8172
  %17 = add i32 %6, -1, !dbg !8181
  call void @llvm.dbg.value(metadata i32 %17, metadata !8171, metadata !DIExpression()), !dbg !8172
  %18 = icmp eq i32 %17, 0, !dbg !8173
  br i1 %18, label %23, label %5, !dbg !8173, !llvm.loop !8182

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8185
  %21 = zext i8 %10 to i32, !dbg !8186
  %22 = sub nsw i32 %20, %21, !dbg !8187
  br label %23, !dbg !8188

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8188
  ret i32 %24, !dbg !8189
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8190 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8194, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8* %1, metadata !8195, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8** %2, metadata !8196, metadata !DIExpression()), !dbg !8199
  %4 = icmp eq i8* %0, null, !dbg !8200
  br i1 %4, label %5, label %7, !dbg !8200

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8201
  br label %7, !dbg !8200

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8200
  call void @llvm.dbg.value(metadata i8* %8, metadata !8197, metadata !DIExpression()), !dbg !8199
  %9 = load i8, i8* %8, align 1, !dbg !8202
  %10 = icmp eq i8 %9, 0, !dbg !8202
  br i1 %10, label %33, label %11, !dbg !8203

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8197, metadata !DIExpression()), !dbg !8199
  %14 = zext i8 %12 to i32, !dbg !8202
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8204
  %16 = icmp eq i8* %15, null, !dbg !8203
  br i1 %16, label %21, label %17, !dbg !8205

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8206
  call void @llvm.dbg.value(metadata i8* %18, metadata !8197, metadata !DIExpression()), !dbg !8199
  %19 = load i8, i8* %18, align 1, !dbg !8202
  %20 = icmp eq i8 %19, 0, !dbg !8202
  br i1 %20, label %33, label %11, !dbg !8203, !llvm.loop !8208

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8198, metadata !DIExpression()), !dbg !8199
  %24 = zext i8 %22 to i32, !dbg !8210
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8211
  %26 = icmp eq i8* %25, null, !dbg !8212
  br i1 %26, label %27, label %31, !dbg !8213

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8214
  call void @llvm.dbg.value(metadata i8* %28, metadata !8198, metadata !DIExpression()), !dbg !8199
  %29 = load i8, i8* %28, align 1, !dbg !8210
  %30 = icmp eq i8 %29, 0, !dbg !8210
  br i1 %30, label %33, label %21, !dbg !8216, !llvm.loop !8217

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8219
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8222
  br label %33, !dbg !8223

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8199
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8199
  store i8* %34, i8** %2, align 4, !dbg !8199
  ret i8* %35, !dbg !8224
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8225 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8227, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8* %1, metadata !8228, metadata !DIExpression()), !dbg !8229
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8230
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8231
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8232
  ret i8* %0, !dbg !8233
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8234 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8236, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %1, metadata !8237, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %2, metadata !8238, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %0, metadata !8239, metadata !DIExpression()), !dbg !8241
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8242
  call void @llvm.dbg.value(metadata i32 %4, metadata !8240, metadata !DIExpression()), !dbg !8241
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8243
  call void @llvm.dbg.value(metadata i8* %5, metadata !8236, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %1, metadata !8237, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %2, metadata !8238, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %2, metadata !8238, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8241
  %6 = icmp eq i32 %2, 0, !dbg !8244
  br i1 %6, label %18, label %7, !dbg !8245

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8246
  call void @llvm.dbg.value(metadata i8* %9, metadata !8236, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8* %10, metadata !8237, metadata !DIExpression()), !dbg !8241
  %12 = load i8, i8* %10, align 1, !dbg !8247
  %13 = icmp eq i8 %12, 0, !dbg !8248
  br i1 %13, label %18, label %14, !dbg !8249

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8250
  call void @llvm.dbg.value(metadata i8* %15, metadata !8237, metadata !DIExpression()), !dbg !8241
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8252
  call void @llvm.dbg.value(metadata i8* %16, metadata !8236, metadata !DIExpression()), !dbg !8241
  store i8 %12, i8* %9, align 1, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %11, metadata !8238, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %11, metadata !8238, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8241
  %17 = icmp eq i32 %11, 0, !dbg !8244
  br i1 %17, label %18, label %7, !dbg !8245, !llvm.loop !8254

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8241
  store i8 0, i8* %19, align 1, !dbg !8256
  ret i8* %0, !dbg !8257
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8262, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i8* %1, metadata !8263, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %2, metadata !8264, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i8* %0, metadata !8265, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i8* %1, metadata !8266, metadata !DIExpression()), !dbg !8267
  %4 = icmp eq i32 %2, 0, !dbg !8268
  br i1 %4, label %31, label %5, !dbg !8270

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i8* %0, metadata !8265, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %2, metadata !8264, metadata !DIExpression()), !dbg !8267
  %6 = add i32 %2, -1, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %6, metadata !8264, metadata !DIExpression()), !dbg !8267
  %7 = icmp eq i32 %6, 0, !dbg !8272
  br i1 %7, label %23, label %8, !dbg !8273

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8274
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8274
  br label %11, !dbg !8274

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i8* %14, metadata !8265, metadata !DIExpression()), !dbg !8267
  %15 = load i8, i8* %14, align 1, !dbg !8275
  %16 = load i8, i8* %13, align 1, !dbg !8276
  %17 = icmp eq i8 %15, %16, !dbg !8277
  br i1 %17, label %18, label %23, !dbg !8274

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8278
  call void @llvm.dbg.value(metadata i8* %19, metadata !8265, metadata !DIExpression()), !dbg !8267
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8280
  call void @llvm.dbg.value(metadata i8* %20, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %12, metadata !8264, metadata !DIExpression()), !dbg !8267
  %21 = add i32 %12, -1, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %21, metadata !8264, metadata !DIExpression()), !dbg !8267
  %22 = icmp eq i32 %21, 0, !dbg !8272
  br i1 %22, label %23, label %11, !dbg !8273, !llvm.loop !8281

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8267
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8267
  %26 = load i8, i8* %24, align 1, !dbg !8283
  %27 = zext i8 %26 to i32, !dbg !8283
  %28 = load i8, i8* %25, align 1, !dbg !8284
  %29 = zext i8 %28 to i32, !dbg !8284
  %30 = sub nsw i32 %27, %29, !dbg !8285
  br label %31, !dbg !8286

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8267
  ret i32 %32, !dbg !8287
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8288 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8292, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i8* %1, metadata !8293, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %2, metadata !8294, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i8* %0, metadata !8295, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i8* %1, metadata !8296, metadata !DIExpression()), !dbg !8297
  %4 = ptrtoint i8* %0 to i32, !dbg !8298
  %5 = ptrtoint i8* %1 to i32, !dbg !8298
  %6 = sub i32 %4, %5, !dbg !8298
  %7 = icmp ult i32 %6, %2, !dbg !8300
  br i1 %7, label %10, label %8, !dbg !8301

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8296, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i8* %0, metadata !8295, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %2, metadata !8294, metadata !DIExpression()), !dbg !8297
  %9 = icmp eq i32 %2, 0, !dbg !8302
  br i1 %9, label %26, label %17, !dbg !8304

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8294, metadata !DIExpression()), !dbg !8297
  %12 = add i32 %11, -1, !dbg !8305
  call void @llvm.dbg.value(metadata i32 %12, metadata !8294, metadata !DIExpression()), !dbg !8297
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8308
  %14 = load i8, i8* %13, align 1, !dbg !8308
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8309
  store i8 %14, i8* %15, align 1, !dbg !8310
  %16 = icmp eq i32 %12, 0, !dbg !8311
  br i1 %16, label %26, label %10, !dbg !8312, !llvm.loop !8313

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8296, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i8* %19, metadata !8295, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %20, metadata !8294, metadata !DIExpression()), !dbg !8297
  %21 = load i8, i8* %18, align 1, !dbg !8315
  store i8 %21, i8* %19, align 1, !dbg !8317
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8318
  call void @llvm.dbg.value(metadata i8* %22, metadata !8295, metadata !DIExpression()), !dbg !8297
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8319
  call void @llvm.dbg.value(metadata i8* %23, metadata !8296, metadata !DIExpression()), !dbg !8297
  %24 = add i32 %20, -1, !dbg !8320
  call void @llvm.dbg.value(metadata i32 %24, metadata !8294, metadata !DIExpression()), !dbg !8297
  %25 = icmp eq i32 %24, 0, !dbg !8302
  br i1 %25, label %26, label %17, !dbg !8304, !llvm.loop !8321

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8323
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8324 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8330, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i8* %1, metadata !8331, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i32 %2, metadata !8332, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i8* %0, metadata !8333, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i8* %1, metadata !8334, metadata !DIExpression()), !dbg !8335
  %4 = icmp eq i32 %2, 0, !dbg !8336
  br i1 %4, label %14, label %5, !dbg !8337

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8334, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i8* %7, metadata !8333, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i32 %8, metadata !8332, metadata !DIExpression()), !dbg !8335
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8338
  call void @llvm.dbg.value(metadata i8* %9, metadata !8334, metadata !DIExpression()), !dbg !8335
  %10 = load i8, i8* %6, align 1, !dbg !8340
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8341
  call void @llvm.dbg.value(metadata i8* %11, metadata !8333, metadata !DIExpression()), !dbg !8335
  store i8 %10, i8* %7, align 1, !dbg !8342
  %12 = add i32 %8, -1, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %12, metadata !8332, metadata !DIExpression()), !dbg !8335
  %13 = icmp eq i32 %12, 0, !dbg !8336
  br i1 %13, label %14, label %5, !dbg !8337, !llvm.loop !8344

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8347 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8351, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 %1, metadata !8352, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 %2, metadata !8353, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i8* %0, metadata !8354, metadata !DIExpression()), !dbg !8356
  %4 = trunc i32 %1 to i8, !dbg !8357
  call void @llvm.dbg.value(metadata i8 %4, metadata !8355, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 %2, metadata !8353, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i8* %0, metadata !8354, metadata !DIExpression()), !dbg !8356
  %5 = icmp eq i32 %2, 0, !dbg !8358
  br i1 %5, label %12, label %6, !dbg !8359

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8353, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i8* %8, metadata !8354, metadata !DIExpression()), !dbg !8356
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8360
  call void @llvm.dbg.value(metadata i8* %9, metadata !8354, metadata !DIExpression()), !dbg !8356
  store i8 %4, i8* %8, align 1, !dbg !8362
  %10 = add i32 %7, -1, !dbg !8363
  call void @llvm.dbg.value(metadata i32 %10, metadata !8353, metadata !DIExpression()), !dbg !8356
  %11 = icmp eq i32 %10, 0, !dbg !8358
  br i1 %11, label %12, label %6, !dbg !8359, !llvm.loop !8364

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8366
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8367 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8371, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i32 %1, metadata !8372, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i32 %2, metadata !8373, metadata !DIExpression()), !dbg !8377
  %4 = icmp eq i32 %2, 0, !dbg !8378
  br i1 %4, label %17, label %5, !dbg !8379

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8380

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8381
  call void @llvm.dbg.value(metadata i8* %9, metadata !8374, metadata !DIExpression()), !dbg !8381
  call void @llvm.dbg.value(metadata i32 %8, metadata !8373, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i8* %9, metadata !8374, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8381
  %10 = load i8, i8* %9, align 1, !dbg !8382
  %11 = icmp eq i8 %10, %6, !dbg !8385
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8386
  call void @llvm.dbg.value(metadata i8* %12, metadata !8374, metadata !DIExpression()), !dbg !8381
  call void @llvm.dbg.value(metadata i32 %13, metadata !8373, metadata !DIExpression()), !dbg !8377
  br i1 %15, label %16, label %7, !dbg !8386, !llvm.loop !8387

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8389

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8377
  ret i8* %19, !dbg !8390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !8391 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8393, metadata !DIExpression()), !dbg !8394
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8395
  ret void, !dbg !8396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !8397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8399, metadata !DIExpression()), !dbg !8400
  ret i32 -1, !dbg !8401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8406, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32* %1, metadata !8407, metadata !DIExpression()), !dbg !8408
  %3 = ptrtoint i32* %1 to i32, !dbg !8409
  %4 = and i32 %3, -2, !dbg !8409
  %5 = icmp eq i32 %4, 2, !dbg !8409
  br i1 %5, label %6, label %9, !dbg !8409

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8410
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8410
  br label %9, !dbg !8411

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8411
  ret i32 %10, !dbg !8412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8415, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i32* %1, metadata !8416, metadata !DIExpression()), !dbg !8417
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8418
  ret i32 %3, !dbg !8419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8423, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i32* %1, metadata !8424, metadata !DIExpression()), !dbg !8425
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8426, !srcloc !8428
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8429
  ret i32 %3, !dbg !8430
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8431 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8436, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i32* %1, metadata !8437, metadata !DIExpression()), !dbg !8440
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %3, metadata !8438, metadata !DIExpression()), !dbg !8440
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8442
  call void @llvm.dbg.value(metadata i32 %4, metadata !8439, metadata !DIExpression()), !dbg !8440
  %5 = icmp ne i32 %3, %4, !dbg !8443
  %6 = sext i1 %5 to i32, !dbg !8444
  ret i32 %6, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8450, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %1, metadata !8451, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %2, metadata !8452, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32* %3, metadata !8453, metadata !DIExpression()), !dbg !8454
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8455
  ret i32 %5, !dbg !8456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8457 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8459, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 %1, metadata !8460, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 %2, metadata !8461, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32* %3, metadata !8462, metadata !DIExpression()), !dbg !8463
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8464, !srcloc !8466
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8467
  ret i32 %5, !dbg !8468
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8469 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8471, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 %1, metadata !8472, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 %2, metadata !8473, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32* %3, metadata !8474, metadata !DIExpression()), !dbg !8479
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8480
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8482
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8482
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8482
  br i1 %11, label %33, label %12, !dbg !8482

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8479
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8479
  call void @llvm.dbg.value(metadata i8* %14, metadata !8477, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 %13, metadata !8475, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 %1, metadata !8476, metadata !DIExpression()), !dbg !8479
  br label %15, !dbg !8483

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8485
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8479
  call void @llvm.dbg.value(metadata i8* %17, metadata !8477, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 %16, metadata !8476, metadata !DIExpression()), !dbg !8479
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8486
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8489
  call void @llvm.dbg.value(metadata i8* %19, metadata !8477, metadata !DIExpression()), !dbg !8479
  %20 = load i8, i8* %17, align 1, !dbg !8490
  %21 = zext i8 %20 to i32, !dbg !8491
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8486
  %23 = icmp eq i32 %22, -1, !dbg !8492
  br i1 %23, label %30, label %24, !dbg !8493

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8494
  call void @llvm.dbg.value(metadata i32 %25, metadata !8476, metadata !DIExpression()), !dbg !8479
  %26 = icmp eq i32 %25, 0, !dbg !8495
  br i1 %26, label %27, label %15, !dbg !8496, !llvm.loop !8497

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8499
  call void @llvm.dbg.value(metadata i32 %28, metadata !8475, metadata !DIExpression()), !dbg !8479
  %29 = icmp eq i32 %28, 0, !dbg !8500
  br i1 %29, label %30, label %12, !dbg !8501, !llvm.loop !8502

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8479
  call void @llvm.dbg.value(metadata i32 %31, metadata !8475, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.label(metadata !8478), !dbg !8505
  %32 = sub i32 %2, %31, !dbg !8506
  br label %33, !dbg !8507

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8479
  ret i32 %34, !dbg !8508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8509 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8515
  %3 = icmp eq i32 %2, -1, !dbg !8517
  br i1 %3, label %8, label %4, !dbg !8518

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8519
  %6 = icmp eq i32 %5, -1, !dbg !8520
  %7 = sext i1 %6 to i32, !dbg !8519
  br label %8, !dbg !8521

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8514
  ret i32 %9, !dbg !8522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !8523 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !8531, metadata !DIExpression()), !dbg !8533
  %3 = tail call i64 @sys_clock_tick_get() #25, !dbg !8534
  call void @llvm.dbg.value(metadata i64 %3, metadata !8532, metadata !DIExpression()), !dbg !8533
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !8535
  %5 = sub i64 %1, %3, !dbg !8535
  store i64 %5, i64* %4, align 8, !dbg !8535
  ret void, !dbg !8536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !8537 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8681, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8679, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8* %1, metadata !8680, metadata !DIExpression()), !dbg !8684
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #25, !dbg !8685
  call void @llvm.dbg.value(metadata i64 %4, metadata !8683, metadata !DIExpression()), !dbg !8684
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !8686
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !8686
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !8688
  br i1 %7, label %13, label %8, !dbg !8689

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !8690
  %10 = load i16, i16* %9, align 4, !dbg !8690
  %11 = zext i16 %10 to i32, !dbg !8691
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #25, !dbg !8692
  br i1 %12, label %13, label %28, !dbg !8693

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !8694
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !8694
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #24, !dbg !8695
  call void @llvm.dbg.value(metadata i32 %16, metadata !8682, metadata !DIExpression()), !dbg !8684
  %17 = icmp eq i32 %16, 0, !dbg !8696
  br i1 %17, label %18, label %28, !dbg !8698

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !8699
  %20 = load i8*, i8** %19, align 4, !dbg !8699
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !8700
  %22 = load i16, i16* %21, align 4, !dbg !8700
  %23 = zext i16 %22 to i32, !dbg !8701
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #25, !dbg !8702
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #24, !dbg !8703
  call void @llvm.dbg.value(metadata i32 %25, metadata !8682, metadata !DIExpression()), !dbg !8684
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !8704
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #24, !dbg !8705
  br label %28, !dbg !8706

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !8684
  ret i32 %29, !dbg !8707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !8708 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8713, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !8712, metadata !DIExpression()), !dbg !8714
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8715, !srcloc !8717
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #25, !dbg !8718
  ret i32 %3, !dbg !8719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !8720 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8724, metadata !DIExpression()), !dbg !8732
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !8725, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 0, metadata !8726, metadata !DIExpression()), !dbg !8732
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !8733
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !8733
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !8728, metadata !DIExpression()), !dbg !8734
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !8735
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !8737
  br i1 %8, label %31, label %16, !dbg !8738

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !8739
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !8740
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8724, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !8730, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.value(metadata i32 0, metadata !8726, metadata !DIExpression()), !dbg !8732
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !8743
  br i1 %12, label %31, label %13, !dbg !8744

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !8744

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !8728, metadata !DIExpression()), !dbg !8734
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !8745
  %20 = load i8, i8* %19, align 4, !dbg !8745, !range !7363
  %21 = icmp eq i8 %20, 0, !dbg !8745
  br i1 %21, label %27, label %22, !dbg !8748

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !8749
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !8749
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !8750
  br i1 %25, label %27, label %26, !dbg !8751

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8724, metadata !DIExpression()), !dbg !8732
  tail call void %24(%struct.zbus_channel* noundef %0) #25, !dbg !8752
  br label %27, !dbg !8754

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !8755
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !8728, metadata !DIExpression()), !dbg !8734
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !8735
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !8737
  br i1 %30, label %9, label %16, !dbg !8738, !llvm.loop !8756

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !8732
  ret i32 %32, !dbg !8758

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !8730, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.value(metadata i32 %36, metadata !8726, metadata !DIExpression()), !dbg !8732
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 0, !dbg !8759
  %38 = load i8, i8* %37, align 4, !dbg !8759, !range !7363
  %39 = icmp eq i8 %38, 0, !dbg !8759
  br i1 %39, label %51, label %40, !dbg !8762

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !8763
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !8763
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !8764
  br i1 %43, label %51, label %44, !dbg !8765

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #24, !dbg !8766
  %45 = load i64, i64* %15, align 8, !dbg !8768
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !8768
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !8724, metadata !DIExpression(DW_OP_deref)), !dbg !8732
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #24, !dbg !8768
  call void @llvm.dbg.value(metadata i32 %47, metadata !8727, metadata !DIExpression()), !dbg !8732
  %48 = icmp eq i32 %47, 0, !dbg !8769
  br i1 %48, label %51, label %49, !dbg !8771

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !8772
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.59, i32 0, i32 0), %struct.zbus_observer* noundef %50, i32 noundef %47) #25, !dbg !8772
  call void @llvm.dbg.value(metadata i32 %47, metadata !8726, metadata !DIExpression()), !dbg !8732
  br label %51, !dbg !8778

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !8732
  call void @llvm.dbg.value(metadata i32 %52, metadata !8726, metadata !DIExpression()), !dbg !8732
  %53 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !8779
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %53, metadata !8730, metadata !DIExpression()), !dbg !8742
  %54 = load %struct.zbus_observer*, %struct.zbus_observer** %53, align 4, !dbg !8740
  %55 = icmp eq %struct.zbus_observer* %54, null, !dbg !8743
  br i1 %55, label %31, label %33, !dbg !8744, !llvm.loop !8780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !8782 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !8786, metadata !DIExpression()), !dbg !8787
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8788, !srcloc !8790
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !8791
  ret i32 %2, !dbg !8792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !8793 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8799, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !8797, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i8* %1, metadata !8798, metadata !DIExpression()), !dbg !8800
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8801, !srcloc !8803
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #25, !dbg !8804
  ret i32 %4, !dbg !8805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !8806 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8812, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8810, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i8* %1, metadata !8811, metadata !DIExpression()), !dbg !8814
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !8815
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !8815
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #24, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %6, metadata !8813, metadata !DIExpression()), !dbg !8814
  %7 = icmp eq i32 %6, 0, !dbg !8817
  br i1 %7, label %8, label %17, !dbg !8819

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !8820
  %10 = load i8*, i8** %9, align 4, !dbg !8820
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !8821
  %12 = load i16, i16* %11, align 4, !dbg !8821
  %13 = zext i16 %12 to i32, !dbg !8822
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #25, !dbg !8823
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !8824
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #24, !dbg !8825
  br label %17, !dbg !8826

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !8814
  ret i32 %18, !dbg !8827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !8828 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8833, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8832, metadata !DIExpression()), !dbg !8836
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #25, !dbg !8837
  call void @llvm.dbg.value(metadata i64 %3, metadata !8835, metadata !DIExpression()), !dbg !8836
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !8838
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !8838
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #24, !dbg !8839
  call void @llvm.dbg.value(metadata i32 %6, metadata !8834, metadata !DIExpression()), !dbg !8836
  %7 = icmp eq i32 %6, 0, !dbg !8840
  br i1 %7, label %8, label %12, !dbg !8842

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #24, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %9, metadata !8834, metadata !DIExpression()), !dbg !8836
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !8844
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #24, !dbg !8845
  br label %12, !dbg !8846

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !8836
  ret i32 %13, !dbg !8847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !8848 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8850, metadata !DIExpression()), !dbg !8853
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !8854
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !8854
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #24, !dbg !8855
  call void @llvm.dbg.value(metadata i32 %5, metadata !8852, metadata !DIExpression()), !dbg !8853
  ret i32 %5, !dbg !8856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !8857 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !8861, metadata !DIExpression()), !dbg !8863
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !8864
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !8864
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #24, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %4, metadata !8862, metadata !DIExpression()), !dbg !8863
  ret i32 %4, !dbg !8866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !8867 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !8872, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !8873, metadata !DIExpression()), !dbg !8875
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !8876
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !8876
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !8878
  br i1 %6, label %10, label %7, !dbg !8879

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !8880
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #24, !dbg !8881
  br label %10, !dbg !8882

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !8875
  ret i32 %11, !dbg !8883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !8884 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !8888, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i8* %1, metadata !8889, metadata !DIExpression()), !dbg !8891
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8892, !srcloc !8894
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #25, !dbg !8895
  ret i32 %4, !dbg !8896
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8899, metadata !DIExpression()), !dbg !8900
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8901
  br i1 %2, label %3, label %4, !dbg !8903

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8904
  br label %4, !dbg !8905

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8900
  ret i32 %5, !dbg !8906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8907 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8912, metadata !DIExpression()), !dbg !8913
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8914, !srcloc !8916
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8917
  ret i1 %1, !dbg !8918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8919 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8920
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8921
  ret void, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8925, metadata !DIExpression()), !dbg !8926
  %2 = icmp eq i32 %0, 10, !dbg !8927
  br i1 %2, label %3, label %4, !dbg !8929

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8930
  br label %4, !dbg !8932

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8933
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8934
  ret i32 %0, !dbg !8935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8936 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8939, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i8 %0, metadata !8940, metadata !DIExpression()), !dbg !8941
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8942, !srcloc !8944
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8945
  ret void, !dbg !8946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8947 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8949, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i8 %0, metadata !8950, metadata !DIExpression()), !dbg !8952
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8953
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8951, metadata !DIExpression()), !dbg !8952
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8954
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8954
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #25, !dbg !8955
  ret void, !dbg !8956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8957 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8959, metadata !DIExpression()), !dbg !8960
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #25, !dbg !8961
  ret i1 %1, !dbg !8962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !8963 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9010, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9011, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9012, metadata !DIExpression()), !dbg !9013
  ret void, !dbg !9014
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9015 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9017, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8 %1, metadata !9018, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i32 %2, metadata !9019, metadata !DIExpression()), !dbg !9030
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9031
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9031
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9031
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9020, metadata !DIExpression()), !dbg !9030
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9032
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9032
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9022, metadata !DIExpression()), !dbg !9030
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !9033
  %13 = icmp eq i32 %12, 196608, !dbg !9033
  br i1 %13, label %66, label %14, !dbg !9033

14:                                               ; preds = %3
  %15 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !9035
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #23, !dbg !9035
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !9023, metadata !DIExpression()), !dbg !9036
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !9037
  %17 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %16, align 4, !dbg !9037
  %18 = zext i8 %1 to i32, !dbg !9038
  %19 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, i32 1, !dbg !9039
  %20 = load i32, i32* %19, align 4, !dbg !9039
  %21 = inttoptr i32 %20 to i32*, !dbg !9040
  call void @llvm.dbg.value(metadata i32* %21, metadata !9028, metadata !DIExpression()), !dbg !9030
  %22 = load volatile i32, i32* %21, align 4, !dbg !9041
  call void @llvm.dbg.value(metadata i32 %22, metadata !9029, metadata !DIExpression()), !dbg !9030
  %23 = and i32 %2, 2, !dbg !9042
  %24 = icmp eq i32 %23, 0, !dbg !9044
  br i1 %24, label %25, label %64, !dbg !9045

25:                                               ; preds = %14
  %26 = and i32 %2, 48, !dbg !9046
  %27 = icmp eq i32 %26, 0, !dbg !9046
  br i1 %27, label %36, label %28, !dbg !9046

28:                                               ; preds = %25
  %29 = and i32 %2, 16, !dbg !9048
  %30 = icmp eq i32 %29, 0, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %22, metadata !9029, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9030
  br i1 %30, label %33, label %31, !dbg !9050

31:                                               ; preds = %28
  %32 = or i32 %22, 48, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %32, metadata !9029, metadata !DIExpression()), !dbg !9030
  br label %38, !dbg !9055

33:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %22, metadata !9029, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9030
  %34 = and i32 %22, -49, !dbg !9056
  %35 = or i32 %34, 16, !dbg !9056
  call void @llvm.dbg.value(metadata i32 %35, metadata !9029, metadata !DIExpression()), !dbg !9030
  br label %38

36:                                               ; preds = %25
  %37 = and i32 %22, -17, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %37, metadata !9029, metadata !DIExpression()), !dbg !9030
  br label %38

38:                                               ; preds = %31, %33, %36
  %39 = phi i32 [ %32, %31 ], [ %35, %33 ], [ %37, %36 ], !dbg !9060
  call void @llvm.dbg.value(metadata i32 %39, metadata !9029, metadata !DIExpression()), !dbg !9030
  %40 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, !dbg !9061
  %41 = bitcast %struct.pinctrl_soc_pinmux* %40 to i8*, !dbg !9062
  %42 = call i8* @memcpy(i8* noundef nonnull %15, i8* noundef %41, i32 noundef 20) #25, !dbg !9063
  %43 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !9064
  store i32 %39, i32* %43, align 4, !dbg !9065
  %44 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #25, !dbg !9066
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #25, !dbg !9067
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #25, !dbg !9068
  br i1 %11, label %58, label %45, !dbg !9069

45:                                               ; preds = %38
  %46 = and i32 %2, 262144, !dbg !9070
  %47 = icmp eq i32 %46, 0, !dbg !9074
  br i1 %47, label %48, label %51, !dbg !9075

48:                                               ; preds = %45
  %49 = and i32 %2, 524288, !dbg !9076
  %50 = icmp eq i32 %49, 0, !dbg !9078
  br i1 %50, label %53, label %51, !dbg !9079

51:                                               ; preds = %48, %45
  %52 = phi i32 [ 0, %45 ], [ 1, %48 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %18, i32 noundef %52) #25, !dbg !9080
  br label %53, !dbg !9081

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9081
  %55 = load volatile i32, i32* %54, align 4, !dbg !9081
  %56 = shl nuw i32 1, %18, !dbg !9081
  %57 = or i32 %55, %56, !dbg !9081
  store volatile i32 %57, i32* %54, align 4, !dbg !9081
  br label %64, !dbg !9082

58:                                               ; preds = %38
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9083
  %60 = load volatile i32, i32* %59, align 4, !dbg !9083
  %61 = shl nuw i32 1, %18, !dbg !9083
  %62 = xor i32 %61, -1, !dbg !9083
  %63 = and i32 %60, %62, !dbg !9083
  store volatile i32 %63, i32* %59, align 4, !dbg !9083
  br label %64

64:                                               ; preds = %53, %58, %14
  %65 = phi i32 [ -134, %14 ], [ 0, %58 ], [ 0, %53 ], !dbg !9030
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #23, !dbg !9085
  br label %66

66:                                               ; preds = %3, %64
  %67 = phi i32 [ %65, %64 ], [ -134, %3 ], !dbg !9030
  ret i32 %67, !dbg !9085
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9090, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata i32* %1, metadata !9091, metadata !DIExpression()), !dbg !9094
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9095
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9095
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9095
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9092, metadata !DIExpression()), !dbg !9094
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9096
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9096
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9093, metadata !DIExpression()), !dbg !9094
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !9097
  store i32 %8, i32* %1, align 4, !dbg !9098
  ret i32 0, !dbg !9099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !9100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9102, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %1, metadata !9103, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %2, metadata !9104, metadata !DIExpression()), !dbg !9107
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9108
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !9108
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !9105, metadata !DIExpression()), !dbg !9107
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !9109
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !9109
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !9106, metadata !DIExpression()), !dbg !9107
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #24, !dbg !9110
  %10 = xor i32 %1, -1, !dbg !9111
  %11 = and i32 %9, %10, !dbg !9112
  %12 = and i32 %2, %1, !dbg !9113
  %13 = or i32 %11, %12, !dbg !9114
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #24, !dbg !9115
  ret i32 0, !dbg !9116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9119, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.value(metadata i32 %1, metadata !9120, metadata !DIExpression()), !dbg !9123
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9124
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9124
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9124
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9121, metadata !DIExpression()), !dbg !9123
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9125
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9125
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9122, metadata !DIExpression()), !dbg !9123
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !9126
  %9 = or i32 %8, %1, !dbg !9127
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !9128
  ret i32 0, !dbg !9129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9132, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %1, metadata !9133, metadata !DIExpression()), !dbg !9136
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9137
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9137
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9137
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9134, metadata !DIExpression()), !dbg !9136
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9138
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9138
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9135, metadata !DIExpression()), !dbg !9136
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !9139
  %9 = xor i32 %1, -1, !dbg !9140
  %10 = and i32 %8, %9, !dbg !9141
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #24, !dbg !9142
  ret i32 0, !dbg !9143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9146, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i32 %1, metadata !9147, metadata !DIExpression()), !dbg !9150
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9151
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9151
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9151
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9148, metadata !DIExpression()), !dbg !9150
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9152
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9152
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9149, metadata !DIExpression()), !dbg !9150
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !9153
  %9 = xor i32 %8, %1, !dbg !9154
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !9155
  ret i32 0, !dbg !9156
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9157 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9159, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i8 %1, metadata !9160, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32 %2, metadata !9161, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32 %3, metadata !9162, metadata !DIExpression()), !dbg !9169
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9170
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9170
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9170
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9163, metadata !DIExpression()), !dbg !9169
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9171
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9171
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9164, metadata !DIExpression()), !dbg !9169
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9172
  %11 = load volatile i32, i32* %10, align 4, !dbg !9172
  %12 = zext i8 %1 to i32, !dbg !9174
  %13 = shl nuw i32 1, %12, !dbg !9174
  %14 = and i32 %11, %13, !dbg !9175
  %15 = icmp ne i32 %14, 0, !dbg !9176
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !9177
  br i1 %17, label %77, label %18, !dbg !9177

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !9178
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !9180
  br i1 %21, label %29, label %22, !dbg !9180

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !9181
  br i1 %24, label %29, label %25, !dbg !9181

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !9183
  %27 = and i1 %26, %23, !dbg !9185
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !9186
  call void @llvm.dbg.value(metadata i32 %30, metadata !9167, metadata !DIExpression()), !dbg !9169
  %31 = icmp ult i8 %1, 16, !dbg !9187
  br i1 %31, label %32, label %35, !dbg !9189

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !9190
  call void @llvm.dbg.value(metadata i8 %33, metadata !9168, metadata !DIExpression()), !dbg !9169
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !9192
  call void @llvm.dbg.value(metadata i32* %34, metadata !9165, metadata !DIExpression()), !dbg !9169
  br label %41, !dbg !9193

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !9194
  br i1 %36, label %37, label %77, !dbg !9196

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !9197
  %39 = add nsw i8 %38, -32, !dbg !9197
  call void @llvm.dbg.value(metadata i8 %39, metadata !9168, metadata !DIExpression()), !dbg !9169
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !9199
  call void @llvm.dbg.value(metadata i32* %40, metadata !9165, metadata !DIExpression()), !dbg !9169
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !9200
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !9200
  call void @llvm.dbg.value(metadata i8 %43, metadata !9168, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32* %42, metadata !9165, metadata !DIExpression()), !dbg !9169
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9201, !srcloc !9209
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %45, metadata !9206, metadata !DIExpression()) #23, !dbg !9210
  call void @llvm.dbg.value(metadata i32 undef, metadata !9207, metadata !DIExpression()) #23, !dbg !9210
  call void @llvm.dbg.value(metadata i32 %45, metadata !9166, metadata !DIExpression()), !dbg !9169
  %46 = load volatile i32, i32* %42, align 4, !dbg !9211
  %47 = zext i8 %43 to i32, !dbg !9212
  %48 = shl nuw i32 3, %47, !dbg !9213
  %49 = xor i32 %48, -1, !dbg !9214
  %50 = and i32 %46, %49, !dbg !9215
  %51 = shl nuw i32 %30, %47, !dbg !9216
  %52 = or i32 %50, %51, !dbg !9217
  store volatile i32 %52, i32* %42, align 4, !dbg !9218
  %53 = icmp eq i32 %3, 100663296, !dbg !9219
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9219
  %55 = load volatile i32, i32* %54, align 4, !dbg !9219
  %56 = or i32 %55, %13, !dbg !9219
  %57 = xor i32 %13, -1, !dbg !9219
  %58 = and i32 %55, %57, !dbg !9219
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !9219
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9219
  store volatile i32 %59, i32* %60, align 4, !dbg !9219
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9220
  %62 = load volatile i32, i32* %61, align 4, !dbg !9220
  br i1 %16, label %63, label %68, !dbg !9220

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !9220
  store volatile i32 %64, i32* %61, align 4, !dbg !9220
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9221
  %66 = load volatile i32, i32* %65, align 4, !dbg !9221
  %67 = or i32 %66, %13, !dbg !9221
  br label %74, !dbg !9221

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !9220
  %70 = and i32 %62, %69, !dbg !9220
  store volatile i32 %70, i32* %61, align 4, !dbg !9220
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9221
  %72 = load volatile i32, i32* %71, align 4, !dbg !9221
  %73 = and i32 %72, %69, !dbg !9221
  br label %74, !dbg !9221

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !9221
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9221
  store volatile i32 %75, i32* %76, align 4, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %45, metadata !9222, metadata !DIExpression()) #23, !dbg !9225
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #23, !dbg !9227, !srcloc !9228
  br label %77, !dbg !9229

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !9169
  ret i32 %78, !dbg !9230
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9233, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9234, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i1 %2, metadata !9235, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9238
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9239
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !9239
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !9239
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !9236, metadata !DIExpression()), !dbg !9238
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !9240
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9241
  ret i32 %8, !dbg !9242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9249, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9250, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.value(metadata i1 %2, metadata !9251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9252
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9253
  br i1 %4, label %10, label %5, !dbg !9255

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9256
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !9259
  %8 = or i1 %7, %2, !dbg !9260
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9260
  br i1 %2, label %11, label %13, !dbg !9260

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9261

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9262
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !9265
  br label %13, !dbg !9266

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9252
  ret i32 %14, !dbg !9267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9272, metadata !DIExpression()), !dbg !9273
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9274
  %3 = icmp eq %struct._snode* %2, null, !dbg !9274
  ret i1 %3, !dbg !9274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !9275 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9279, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9280, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9281, metadata !DIExpression()), !dbg !9283
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9284
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9282, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9281, metadata !DIExpression()), !dbg !9283
  %4 = icmp eq %struct._snode* %3, null, !dbg !9286
  br i1 %4, label %15, label %5, !dbg !9284

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9282, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9281, metadata !DIExpression()), !dbg !9283
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9288
  br i1 %6, label %9, label %11, !dbg !9291

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9282, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9281, metadata !DIExpression()), !dbg !9283
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9288
  br i1 %8, label %9, label %11, !dbg !9291, !llvm.loop !9292

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9293
  br label %15, !dbg !9293

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9282, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9281, metadata !DIExpression()), !dbg !9283
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9286
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9282, metadata !DIExpression()), !dbg !9283
  %14 = icmp eq %struct._snode* %13, null, !dbg !9286
  br i1 %14, label %15, label %7, !dbg !9284, !llvm.loop !9292

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9296 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9301, metadata !DIExpression()), !dbg !9302
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9303
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9303
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9303
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9304
  %5 = icmp eq %struct._snode* %4, null, !dbg !9304
  br i1 %5, label %6, label %8, !dbg !9303

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9306
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9306
  br label %8, !dbg !9306

8:                                                ; preds = %6, %2
  ret void, !dbg !9303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !9308 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9312, metadata !DIExpression()), !dbg !9313
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9314
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9314
  ret %struct._snode* %3, !dbg !9315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9320, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9321, metadata !DIExpression()), !dbg !9322
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9323
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9324
  ret void, !dbg !9325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9326 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9329, metadata !DIExpression()), !dbg !9330
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9331
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9332
  ret void, !dbg !9333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !9334 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9336, metadata !DIExpression()), !dbg !9337
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9338
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9338
  ret %struct._snode* %3, !dbg !9339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9340 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9342, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9343, metadata !DIExpression()), !dbg !9344
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9345
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9346
  ret void, !dbg !9347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9348 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9352, metadata !DIExpression()), !dbg !9355
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9353, metadata !DIExpression()), !dbg !9355
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9354, metadata !DIExpression()), !dbg !9355
  %4 = icmp eq %struct._snode* %1, null, !dbg !9356
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9358
  br i1 %4, label %6, label %11, !dbg !9359

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9360
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9362
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9362
  br i1 %8, label %9, label %15, !dbg !9360

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9364
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9364
  br label %15, !dbg !9364

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9366
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9368
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9368
  br i1 %13, label %14, label %15, !dbg !9366

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9370
  br label %15, !dbg !9370

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9359
  ret void, !dbg !9359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !9372 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9376, metadata !DIExpression()), !dbg !9377
  %2 = icmp eq %struct._snode* %0, null, !dbg !9378
  br i1 %2, label %5, label %3, !dbg !9378

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9378
  br label %5, !dbg !9378

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9378
  ret %struct._snode* %6, !dbg !9378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !9379 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9381, metadata !DIExpression()), !dbg !9382
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9383
  ret %struct._snode* %2, !dbg !9383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !9384 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9386, metadata !DIExpression()), !dbg !9387
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9388
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9388
  ret %struct._snode* %3, !dbg !9389
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #17 !dbg !9390 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9394, metadata !DIExpression()), !dbg !9395
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9396
  %3 = load volatile i32, i32* %2, align 4, !dbg !9396
  ret i32 %3, !dbg !9397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9398 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9402, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %1, metadata !9403, metadata !DIExpression()), !dbg !9404
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9405
  store volatile i32 %1, i32* %3, align 4, !dbg !9406
  ret void, !dbg !9407
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9412, metadata !DIExpression()), !dbg !9416
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9417
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !9417
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !9417
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !9413, metadata !DIExpression()), !dbg !9416
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9418
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !9418
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !9418
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !9414, metadata !DIExpression()), !dbg !9416
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !9419
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9419
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9420
  %11 = load volatile i32, i32* %10, align 4, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %11, metadata !9415, metadata !DIExpression()), !dbg !9416
  store volatile i32 %11, i32* %10, align 4, !dbg !9421
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !9422
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #24, !dbg !9423
  ret void, !dbg !9424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9425 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9429, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9430, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i32 %2, metadata !9431, metadata !DIExpression()), !dbg !9434
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9435
  %5 = icmp eq %struct._snode* %4, null, !dbg !9435
  br i1 %5, label %21, label %6, !dbg !9435

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9437
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9433, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9432, metadata !DIExpression()), !dbg !9434
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9438
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9438
  %11 = load i32, i32* %10, align 4, !dbg !9438
  %12 = and i32 %11, %2, !dbg !9442
  %13 = icmp eq i32 %12, 0, !dbg !9442
  br i1 %13, label %19, label %14, !dbg !9443

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9432, metadata !DIExpression()), !dbg !9434
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9444
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9444
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9444
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !9446
  br label %19, !dbg !9447

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9432, metadata !DIExpression()), !dbg !9434
  %20 = icmp eq %struct._snode* %8, null, !dbg !9448
  br i1 %20, label %21, label %6, !dbg !9448

21:                                               ; preds = %19, %3
  ret void, !dbg !9449
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1121, metadata !DIExpression()), !dbg !9450
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #25, !dbg !9451
  tail call void @arch_irq_enable(i32 noundef 64) #25, !dbg !9453
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #25, !dbg !9454
  tail call void @arch_irq_enable(i32 noundef 65) #25, !dbg !9453
  ret i32 0, !dbg !9453
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9458, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8* %1, metadata !9459, metadata !DIExpression()), !dbg !9462
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9463
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9463
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9463
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9463
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9463
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 -1, metadata !9461, metadata !DIExpression()), !dbg !9462
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #24, !dbg !9464
  br i1 %8, label %9, label %13, !dbg !9466

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #24, !dbg !9467
  store i8 %10, i8* %1, align 1, !dbg !9469
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !9470
  br i1 %11, label %12, label %13, !dbg !9472

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !9473
  br label %13, !dbg !9475

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !9462
  call void @llvm.dbg.value(metadata i32 %14, metadata !9461, metadata !DIExpression()), !dbg !9462
  ret i32 %14, !dbg !9476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #16 !dbg !9477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9479, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8 %1, metadata !9480, metadata !DIExpression()), !dbg !9482
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9483
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9483
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9483
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9483
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9483
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9481, metadata !DIExpression()), !dbg !9482
  br label %8, !dbg !9484

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #24, !dbg !9485
  br i1 %9, label %10, label %8, !dbg !9484, !llvm.loop !9486

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #24, !dbg !9488
  ret void, !dbg !9489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #16 !dbg !9490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9492, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %1, metadata !9493, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i32 %2, metadata !9494, metadata !DIExpression()), !dbg !9497
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9498
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9498
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9498
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9498
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9498
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9495, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i32 0, metadata !9496, metadata !DIExpression()), !dbg !9497
  %9 = icmp eq i32 %2, 0, !dbg !9499
  br i1 %9, label %18, label %10, !dbg !9500

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9496, metadata !DIExpression()), !dbg !9497
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #24, !dbg !9501
  br i1 %12, label %13, label %18, !dbg !9502

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9503
  %15 = load i8, i8* %14, align 1, !dbg !9503
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #24, !dbg !9505
  %16 = add nuw i32 %11, 1, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %16, metadata !9496, metadata !DIExpression()), !dbg !9497
  %17 = icmp eq i32 %16, %2, !dbg !9499
  br i1 %17, label %18, label %10, !dbg !9500, !llvm.loop !9507

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9497
  ret i32 %19, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9512, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i8* %1, metadata !9513, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i32 %2, metadata !9514, metadata !DIExpression()), !dbg !9517
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9518
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9518
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9518
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9518
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9518
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9515, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i32 0, metadata !9516, metadata !DIExpression()), !dbg !9517
  %9 = icmp eq i32 %2, 0, !dbg !9519
  br i1 %9, label %18, label %10, !dbg !9520

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9516, metadata !DIExpression()), !dbg !9517
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #24, !dbg !9521
  br i1 %12, label %13, label %18, !dbg !9522

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #24, !dbg !9523
  %15 = add nuw i32 %11, 1, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %15, metadata !9516, metadata !DIExpression()), !dbg !9517
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9526
  store i8 %14, i8* %16, align 1, !dbg !9527
  %17 = icmp eq i32 %15, %2, !dbg !9519
  br i1 %17, label %18, label %10, !dbg !9520, !llvm.loop !9528

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9517
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !9530
  br i1 %20, label %21, label %22, !dbg !9532

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !9533
  br label %22, !dbg !9535

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !9536
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9539, metadata !DIExpression()), !dbg !9541
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9542
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9542
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9542
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9542
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9542
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9540, metadata !DIExpression()), !dbg !9541
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #25, !dbg !9543
  ret void, !dbg !9544
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9547, metadata !DIExpression()), !dbg !9549
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9550
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9550
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9550
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9550
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9550
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9548, metadata !DIExpression()), !dbg !9549
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #25, !dbg !9551
  ret void, !dbg !9552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9555, metadata !DIExpression()), !dbg !9557
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9558
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9558
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9558
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9558
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9558
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9556, metadata !DIExpression()), !dbg !9557
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !9559
  %8 = zext i1 %7 to i32, !dbg !9559
  ret i32 %8, !dbg !9560
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9561 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9563, metadata !DIExpression()), !dbg !9565
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9566
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9566
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9566
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9566
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9566
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9564, metadata !DIExpression()), !dbg !9565
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #25, !dbg !9567
  ret void, !dbg !9568
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9571, metadata !DIExpression()), !dbg !9573
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9574
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9574
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9574
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9574
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9574
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9572, metadata !DIExpression()), !dbg !9573
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #25, !dbg !9575
  ret void, !dbg !9576
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9579, metadata !DIExpression()), !dbg !9581
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9582
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9582
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9582
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9582
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9582
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9580, metadata !DIExpression()), !dbg !9581
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !9583
  %8 = zext i1 %7 to i32, !dbg !9583
  ret i32 %8, !dbg !9584
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9587, metadata !DIExpression()), !dbg !9589
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9590
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9590
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9590
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9590
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9590
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9588, metadata !DIExpression()), !dbg !9589
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #25, !dbg !9591
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #25, !dbg !9592
  ret void, !dbg !9593
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9596, metadata !DIExpression()), !dbg !9598
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9599
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9599
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9599
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9599
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9597, metadata !DIExpression()), !dbg !9598
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #25, !dbg !9600
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #25, !dbg !9601
  ret void, !dbg !9602
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !9603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9605, metadata !DIExpression()), !dbg !9607
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9608
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9608
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9608
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9608
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9608
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9606, metadata !DIExpression()), !dbg !9607
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !9609
  br i1 %7, label %11, label %8, !dbg !9610

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !9611
  %10 = zext i1 %9 to i32, !dbg !9610
  br label %11, !dbg !9610

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !9612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #5 !dbg !9613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9615, metadata !DIExpression()), !dbg !9616
  ret i32 1, !dbg !9617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #9 !dbg !9618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9620, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9621, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata i8* %2, metadata !9622, metadata !DIExpression()), !dbg !9625
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9626
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !9626
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !9626
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !9623, metadata !DIExpression()), !dbg !9625
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !9627
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9628
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !9629
  store i8* %2, i8** %8, align 4, !dbg !9630
  ret void, !dbg !9631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !9632 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9636, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 %1, metadata !9637, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32* null, metadata !9638, metadata !DIExpression()), !dbg !9639
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9640
  %4 = lshr i32 %1, 16, !dbg !9641
  %5 = add i32 %4, %3, !dbg !9642
  %6 = inttoptr i32 %5 to i32*, !dbg !9643
  call void @llvm.dbg.value(metadata i32* %6, metadata !9638, metadata !DIExpression()), !dbg !9639
  %7 = load volatile i32, i32* %6, align 4, !dbg !9644
  %8 = and i32 %1, 65535, !dbg !9645
  %9 = shl nuw i32 1, %8, !dbg !9646
  %10 = and i32 %7, %9, !dbg !9646
  %11 = icmp ne i32 %10, 0, !dbg !9646
  ret i1 %11, !dbg !9647
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #17 !dbg !9648 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9652, metadata !DIExpression()), !dbg !9653
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9654
  %3 = load volatile i32, i32* %2, align 4, !dbg !9654
  %4 = trunc i32 %3 to i8, !dbg !9655
  ret i8 %4, !dbg !9656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !9657 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9661, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.value(metadata i8 %1, metadata !9662, metadata !DIExpression()), !dbg !9663
  %3 = zext i8 %1 to i32, !dbg !9664
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9665
  store volatile i32 %3, i32* %4, align 4, !dbg !9666
  ret void, !dbg !9667
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1416 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1418, metadata !DIExpression()), !dbg !9668
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #25, !dbg !9669
  tail call void @arch_irq_enable(i32 noundef 26) #25, !dbg !9671
  ret void, !dbg !9671
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !9672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9674, metadata !DIExpression()), !dbg !9676
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9677
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !9677
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !9677
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !9675, metadata !DIExpression()), !dbg !9676
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !9678
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !9678
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !9680
  br i1 %7, label %11, label %8, !dbg !9681

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !9682
  %10 = load i8*, i8** %9, align 4, !dbg !9682
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !9684
  br label %11, !dbg !9685

11:                                               ; preds = %8, %1
  ret void, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !9687 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9689, metadata !DIExpression()), !dbg !9704
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9705
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9705
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9705
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9705
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9705
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9690, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !9691, metadata !DIExpression()), !dbg !9704
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9706, !srcloc !9712
  call void @llvm.dbg.value(metadata i32 undef, metadata !9709, metadata !DIExpression()) #23, !dbg !9713
  call void @llvm.dbg.value(metadata i32 undef, metadata !9710, metadata !DIExpression()) #23, !dbg !9713
  call void @llvm.dbg.value(metadata i32 undef, metadata !9692, metadata !DIExpression()), !dbg !9704
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !9714
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #23, !dbg !9714
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !9694, metadata !DIExpression()), !dbg !9715
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !9716
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !9717
  %12 = load i32, i32* %11, align 4, !dbg !9717
  store i32 %12, i32* %10, align 4, !dbg !9716
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !9716
  store i32 32, i32* %13, align 4, !dbg !9716
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !9716
  store i32 0, i32* %14, align 4, !dbg !9716
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !9716
  store i32 0, i32* %15, align 4, !dbg !9716
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !9716
  store i32 6, i32* %16, align 4, !dbg !9716
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !9718
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !9718
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #24, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %19, metadata !9693, metadata !DIExpression()), !dbg !9704
  %20 = icmp eq i32 %19, 0, !dbg !9720
  br i1 %20, label %21, label %30, !dbg !9722

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !9716
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %23, metadata !9709, metadata !DIExpression()) #23, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %23, metadata !9692, metadata !DIExpression()), !dbg !9704
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #25, !dbg !9723
  store i32 %24, i32* %22, align 4, !dbg !9724
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #25, !dbg !9725
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !9726
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !9727
  call void @llvm.dbg.value(metadata i32 undef, metadata !9728, metadata !DIExpression()) #23, !dbg !9731
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !9733, !srcloc !9734
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !9735
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !9735
  call void %26(%struct.device* noundef nonnull %0) #25, !dbg !9736
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !9737
  %28 = load i8, i8* %27, align 4, !dbg !9737
  %29 = zext i8 %28 to i32, !dbg !9738
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #25, !dbg !9739
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #24, !dbg !9740
  br label %30, !dbg !9741

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #23, !dbg !9742
  ret i32 %19, !dbg !9742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9743 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9747, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata i8 0, metadata !9748, metadata !DIExpression()), !dbg !9751
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9752
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9750, metadata !DIExpression(DW_OP_deref)), !dbg !9751
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %4, metadata !9749, metadata !DIExpression()), !dbg !9751
  %5 = icmp slt i32 %4, 0, !dbg !9754
  br i1 %5, label %9, label %6, !dbg !9756

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9757
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9750, metadata !DIExpression()), !dbg !9751
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !9758
  br label %9, !dbg !9759

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9751
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9760
  ret i32 %10, !dbg !9760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9763, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i8 2, metadata !9764, metadata !DIExpression()), !dbg !9765
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9766
  %3 = load volatile i32, i32* %2, align 4, !dbg !9766
  %4 = and i32 %3, -64513, !dbg !9767
  %5 = or i32 %4, 2048, !dbg !9768
  store volatile i32 %5, i32* %2, align 4, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !9771 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9773, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8 1, metadata !9774, metadata !DIExpression()), !dbg !9775
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9776
  %3 = load volatile i32, i32* %2, align 4, !dbg !9776
  %4 = and i32 %3, -64, !dbg !9777
  %5 = or i32 %4, 1, !dbg !9778
  store volatile i32 %5, i32* %2, align 4, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9785, metadata !DIExpression()), !dbg !9786
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9787
  %3 = load volatile i32, i32* %2, align 4, !dbg !9788
  %4 = or i32 %3, 1, !dbg !9788
  store volatile i32 %4, i32* %2, align 4, !dbg !9788
  ret void, !dbg !9789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9790 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9794, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9795, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.value(metadata i32 0, metadata !9796, metadata !DIExpression()), !dbg !9797
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9798
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !9798
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9799
  %5 = load i8, i8* %4, align 4, !dbg !9799
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !9800
  ret i32 %6, !dbg !9801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !9802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9804, metadata !DIExpression()), !dbg !9805
  tail call fastcc void @__NVIC_SetPriority.74() #24, !dbg !9806
  store i32 19999, i32* @last_load, align 4, !dbg !9807
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9808
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9809
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9810
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9811
  %3 = or i32 %2, 7, !dbg !9811
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9811
  ret i32 0, !dbg !9812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.74() unnamed_addr #16 !dbg !9813 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9815, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i32 1, metadata !9816, metadata !DIExpression()), !dbg !9817
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9818
  ret void, !dbg !9821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9822 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9824, metadata !DIExpression()), !dbg !9826
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !9827
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9828
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9829
  %5 = add i32 %4, %3, !dbg !9829
  store i32 %5, i32* @cycle_count, align 4, !dbg !9829
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9830
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9831
  %7 = sub i32 %5, %6, !dbg !9834
  %8 = udiv i32 %7, 20000, !dbg !9835
  call void @llvm.dbg.value(metadata i32 %8, metadata !9825, metadata !DIExpression()), !dbg !9826
  %9 = mul nuw i32 %8, 20000, !dbg !9836
  %10 = add i32 %9, %6, !dbg !9837
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9837
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !9838
  tail call void @z_arm_int_exit() #25, !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !9841 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9846
  call void @llvm.dbg.value(metadata i32 %1, metadata !9843, metadata !DIExpression()), !dbg !9847
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9848
  call void @llvm.dbg.value(metadata i32 %2, metadata !9844, metadata !DIExpression()), !dbg !9847
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9849
  call void @llvm.dbg.value(metadata i32 %3, metadata !9845, metadata !DIExpression()), !dbg !9847
  %4 = and i32 %2, 65536, !dbg !9850
  %5 = icmp ne i32 %4, 0, !dbg !9850
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9852
  %8 = load i32, i32* @last_load, align 4, !dbg !9847
  br i1 %7, label %9, label %13, !dbg !9852

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9853
  %11 = add i32 %10, %8, !dbg !9853
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9853
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9855
  br label %13, !dbg !9856

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9857
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9858
  %16 = add i32 %14, %15, !dbg !9859
  ret i32 %16, !dbg !9860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9865, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i1 %1, metadata !9866, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9878
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9879
  br i1 %4, label %5, label %8, !dbg !9879

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9881
  %7 = and i32 %6, -2, !dbg !9881
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9881
  store i32 -16777216, i32* @last_load, align 4, !dbg !9883
  br label %54, !dbg !9884

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata i32 %9, metadata !9870, metadata !DIExpression()), !dbg !9878
  br i1 %3, label %18, label %10, !dbg !9886

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9886
  call void @llvm.dbg.value(metadata i32 undef, metadata !9865, metadata !DIExpression()), !dbg !9878
  %12 = icmp slt i32 %11, 1, !dbg !9887
  br i1 %12, label %18, label %13, !dbg !9887

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !9887
  %15 = select i1 %14, i32 %11, i32 837, !dbg !9887
  %16 = mul nuw nsw i32 %15, 20000, !dbg !9887
  %17 = add nuw nsw i32 %16, 19999, !dbg !9887
  br label %18, !dbg !9887

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9865, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9888, metadata !DIExpression()) #23, !dbg !9895
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9897, !srcloc !9903
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9897
  call void @llvm.dbg.value(metadata i32 %21, metadata !9900, metadata !DIExpression()) #23, !dbg !9904
  call void @llvm.dbg.value(metadata i32 undef, metadata !9901, metadata !DIExpression()) #23, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %21, metadata !9894, metadata !DIExpression()) #23, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %21, metadata !9871, metadata !DIExpression()), !dbg !9878
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !9905
  call void @llvm.dbg.value(metadata i32 %22, metadata !9876, metadata !DIExpression()), !dbg !9878
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9906
  call void @llvm.dbg.value(metadata i32 %23, metadata !9868, metadata !DIExpression()), !dbg !9878
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9907
  %25 = add i32 %24, %22, !dbg !9907
  store i32 %25, i32* @cycle_count, align 4, !dbg !9907
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9908
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9909
  %27 = sub i32 %25, %26, !dbg !9910
  call void @llvm.dbg.value(metadata i32 %27, metadata !9877, metadata !DIExpression()), !dbg !9878
  %28 = icmp slt i32 %27, 0, !dbg !9911
  br i1 %28, label %38, label %29, !dbg !9913

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !9867, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9867, metadata !DIExpression()), !dbg !9878
  %30 = add nuw i32 %19, %27, !dbg !9914
  %31 = urem i32 %30, 20000, !dbg !9916
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !9867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9878
  %32 = sub nuw nsw i32 %19, %31, !dbg !9917
  call void @llvm.dbg.value(metadata i32 %32, metadata !9867, metadata !DIExpression()), !dbg !9878
  %33 = icmp ugt i32 %32, 1250, !dbg !9918
  br i1 %33, label %34, label %36, !dbg !9918

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !9867, metadata !DIExpression()), !dbg !9878
  %35 = icmp ugt i32 %32, 16740000, !dbg !9919
  br i1 %35, label %38, label %36, !dbg !9921

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1250, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1250, %18 ], [ 16740000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9922
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9923
  call void @llvm.dbg.value(metadata i32 %40, metadata !9869, metadata !DIExpression()), !dbg !9878
  %41 = add nsw i32 %39, -1, !dbg !9924
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9925
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9926
  %42 = icmp ult i32 %23, %40, !dbg !9927
  br i1 %42, label %43, label %48, !dbg !9929

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9930
  %45 = add i32 %23, %9, !dbg !9932
  %46 = sub i32 %45, %40, !dbg !9933
  %47 = add i32 %46, %44, !dbg !9930
  br label %52, !dbg !9934

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9935
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9937
  %51 = add i32 %49, %50, !dbg !9937
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9938
  store i32 %53, i32* @cycle_count, align 4, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %21, metadata !9939, metadata !DIExpression()) #23, !dbg !9945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9944, metadata !DIExpression()) #23, !dbg !9945
  call void @llvm.dbg.value(metadata i32 %21, metadata !9947, metadata !DIExpression()) #23, !dbg !9950
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9952, !srcloc !9953
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9955 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9888, metadata !DIExpression()) #23, !dbg !9959
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9961, !srcloc !9903
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9961
  call void @llvm.dbg.value(metadata i32 %2, metadata !9900, metadata !DIExpression()) #23, !dbg !9963
  call void @llvm.dbg.value(metadata i32 undef, metadata !9901, metadata !DIExpression()) #23, !dbg !9963
  call void @llvm.dbg.value(metadata i32 %2, metadata !9894, metadata !DIExpression()) #23, !dbg !9959
  call void @llvm.dbg.value(metadata i32 %2, metadata !9957, metadata !DIExpression()), !dbg !9964
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9965
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9966
  %5 = add i32 %4, %3, !dbg !9967
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9968
  %7 = sub i32 %5, %6, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %7, metadata !9958, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %2, metadata !9939, metadata !DIExpression()) #23, !dbg !9970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9944, metadata !DIExpression()) #23, !dbg !9970
  call void @llvm.dbg.value(metadata i32 %2, metadata !9947, metadata !DIExpression()) #23, !dbg !9972
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9974, !srcloc !9953
  %8 = udiv i32 %7, 20000, !dbg !9975
  ret i32 %8, !dbg !9976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9977 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9888, metadata !DIExpression()) #23, !dbg !9981
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9983, !srcloc !9903
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9983
  call void @llvm.dbg.value(metadata i32 %2, metadata !9900, metadata !DIExpression()) #23, !dbg !9985
  call void @llvm.dbg.value(metadata i32 undef, metadata !9901, metadata !DIExpression()) #23, !dbg !9985
  call void @llvm.dbg.value(metadata i32 %2, metadata !9894, metadata !DIExpression()) #23, !dbg !9981
  call void @llvm.dbg.value(metadata i32 %2, metadata !9979, metadata !DIExpression()), !dbg !9986
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9987
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9988
  %5 = add i32 %4, %3, !dbg !9989
  call void @llvm.dbg.value(metadata i32 %5, metadata !9980, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 %2, metadata !9939, metadata !DIExpression()) #23, !dbg !9990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9944, metadata !DIExpression()) #23, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %2, metadata !9947, metadata !DIExpression()) #23, !dbg !9992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9994, !srcloc !9953
  ret i32 %5, !dbg !9995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !9996 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9997
  %2 = icmp eq i32 %1, -16777216, !dbg !9999
  br i1 %2, label %3, label %6, !dbg !10000

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10001
  %5 = or i32 %4, 1, !dbg !10001
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10001
  br label %6, !dbg !10003

6:                                                ; preds = %3, %0
  ret void, !dbg !10004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !10005 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10006
  %2 = and i32 %1, -2, !dbg !10006
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10006
  ret void, !dbg !10007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !10008 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10041, metadata !DIExpression()), !dbg !10044
  call void @llvm.dbg.value(metadata i8 %1, metadata !10042, metadata !DIExpression()), !dbg !10044
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10043, metadata !DIExpression()), !dbg !10044
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10045
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10045
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10044
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10046
  %8 = load i8, i8* %6, align 4, !dbg !10047
  %9 = zext i8 %8 to i32, !dbg !10048
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10048
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10049
  br i1 %11, label %18, label %24, !dbg !10050

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10044
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10046
  %14 = load i8, i8* %6, align 4, !dbg !10047
  %15 = zext i8 %14 to i32, !dbg !10048
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10048
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10049
  br i1 %17, label %18, label %24, !dbg !10050, !llvm.loop !10051

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10053
  %21 = load i8, i8* %20, align 1, !dbg !10053
  %22 = icmp eq i8 %21, %1, !dbg !10056
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10057
  br i1 %22, label %24, label %12, !dbg !10058

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10044
  ret i32 %25, !dbg !10059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #5 !dbg !10060 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10062, metadata !DIExpression()), !dbg !10063
  ret i32 0, !dbg !10064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #16 !dbg !10065 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !10083, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i8 %1, metadata !10084, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32 %2, metadata !10085, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i8 0, metadata !10086, metadata !DIExpression()), !dbg !10097
  %4 = icmp eq i8 %1, 0, !dbg !10098
  br i1 %4, label %7, label %5, !dbg !10099

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10098
  br label %8, !dbg !10099

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !10100

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10086, metadata !DIExpression()), !dbg !10097
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !10101
  %11 = load i32, i32* %10, align 4, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %11, metadata !10088, metadata !DIExpression()), !dbg !10102
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !10103
  %13 = load i8, i8* %12, align 4, !dbg !10103
  call void @llvm.dbg.value(metadata i8 %13, metadata !10091, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10102
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !10104
  %15 = load i32, i32* %14, align 4, !dbg !10104
  call void @llvm.dbg.value(metadata i32 %15, metadata !10092, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i8 %13, metadata !10093, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10102
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !10105
  %17 = load i32, i32* %16, align 4, !dbg !10105
  call void @llvm.dbg.value(metadata i32 %17, metadata !10094, metadata !DIExpression()), !dbg !10102
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !10106
  %19 = load i32, i32* %18, align 4, !dbg !10106
  call void @llvm.dbg.value(metadata i32 %19, metadata !10095, metadata !DIExpression()), !dbg !10102
  %20 = and i8 %13, 15, !dbg !10107
  %21 = zext i8 %20 to i32, !dbg !10107
  %22 = lshr i32 %19, 27, !dbg !10108
  %23 = and i32 %22, 16, !dbg !10108
  %24 = or i32 %23, %21, !dbg !10109
  %25 = inttoptr i32 %11 to i32*, !dbg !10110
  store volatile i32 %24, i32* %25, align 4, !dbg !10111
  %26 = icmp eq i32 %15, 0, !dbg !10112
  br i1 %26, label %32, label %27, !dbg !10114

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !10115
  call void @llvm.dbg.value(metadata i8 %28, metadata !10093, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10102
  %29 = and i8 %28, 7, !dbg !10116
  %30 = zext i8 %29 to i32, !dbg !10116
  %31 = inttoptr i32 %15 to i32*, !dbg !10118
  store volatile i32 %30, i32* %31, align 4, !dbg !10119
  br label %32, !dbg !10120

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !10121
  br i1 %33, label %37, label %34, !dbg !10123

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !10124
  %36 = inttoptr i32 %17 to i32*, !dbg !10126
  store volatile i32 %35, i32* %36, align 4, !dbg !10127
  br label %37, !dbg !10128

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !10129
  call void @llvm.dbg.value(metadata i32 %38, metadata !10086, metadata !DIExpression()), !dbg !10097
  %39 = icmp eq i32 %38, %6, !dbg !10098
  br i1 %39, label %7, label %8, !dbg !10099, !llvm.loop !10130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #16 !dbg !10132 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10189, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.value(metadata i32 %1, metadata !10190, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.value(metadata i32 %2, metadata !10191, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.value(metadata i32 %3, metadata !10192, metadata !DIExpression()), !dbg !10193
  %5 = inttoptr i32 %1 to i32*, !dbg !10194
  %6 = load volatile i32, i32* %5, align 4, !dbg !10194
  %7 = and i32 %6, -458816, !dbg !10195
  %8 = shl i32 %2, 16, !dbg !10196
  %9 = and i32 %8, 458752, !dbg !10196
  %10 = and i32 %3, 63, !dbg !10197
  %11 = or i32 %10, %9, !dbg !10198
  %12 = or i32 %11, %7, !dbg !10199
  store volatile i32 %12, i32* %5, align 4, !dbg !10200
  ret void, !dbg !10201
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #17 !dbg !10202 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10206, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %1, metadata !10207, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32* %2, metadata !10208, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32* %3, metadata !10209, metadata !DIExpression()), !dbg !10210
  %5 = inttoptr i32 %1 to i32*, !dbg !10211
  %6 = load volatile i32, i32* %5, align 4, !dbg !10211
  %7 = lshr i32 %6, 16, !dbg !10212
  %8 = and i32 %7, 7, !dbg !10212
  store i32 %8, i32* %2, align 4, !dbg !10213
  %9 = load volatile i32, i32* %5, align 4, !dbg !10214
  %10 = and i32 %9, 63, !dbg !10215
  store i32 %10, i32* %3, align 4, !dbg !10216
  ret void, !dbg !10217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #16 !dbg !10218 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10222, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 %1, metadata !10223, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 %2, metadata !10224, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 %3, metadata !10225, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 %4, metadata !10226, metadata !DIExpression()), !dbg !10227
  %6 = inttoptr i32 %1 to i32*, !dbg !10228
  %7 = load volatile i32, i32* %6, align 4, !dbg !10228
  %8 = and i32 %7, -117899328, !dbg !10229
  %9 = shl i32 %2, 24, !dbg !10230
  %10 = and i32 %9, 117440512, !dbg !10230
  %11 = shl i32 %3, 16, !dbg !10231
  %12 = and i32 %11, 458752, !dbg !10231
  %13 = and i32 %4, 63, !dbg !10232
  %14 = or i32 %12, %10, !dbg !10233
  %15 = or i32 %14, %13, !dbg !10234
  %16 = or i32 %15, %8, !dbg !10235
  store volatile i32 %16, i32* %6, align 4, !dbg !10236
  ret void, !dbg !10237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10238 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10243, metadata !DIExpression()), !dbg !10244
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #24, !dbg !10245
  br i1 %2, label %7, label %3, !dbg !10247

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !10248
  %5 = and i32 %4, 127, !dbg !10249
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !10250
  br label %7, !dbg !10251

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !10244
  ret i32 %8, !dbg !10252
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10253 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10257, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %1, metadata !10258, metadata !DIExpression()), !dbg !10259
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10260
  %4 = and i32 %1, 65535, !dbg !10260
  %5 = add i32 %4, %3, !dbg !10260
  %6 = inttoptr i32 %5 to i32*, !dbg !10260
  %7 = load volatile i32, i32* %6, align 4, !dbg !10260
  %8 = and i32 %7, 65536, !dbg !10261
  %9 = icmp ne i32 %8, 0, !dbg !10262
  ret i1 %9, !dbg !10263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10264 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10266, metadata !DIExpression()), !dbg !10267
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #24, !dbg !10268
  br i1 %2, label %8, label %3, !dbg !10270

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !10271
  %5 = and i32 %4, 1, !dbg !10273
  %6 = icmp eq i32 %5, 0, !dbg !10273
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !10274
  br label %8, !dbg !10274

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !10267
  ret i32 %9, !dbg !10275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10278, metadata !DIExpression()), !dbg !10282
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #24, !dbg !10283
  br i1 %2, label %40, label %3, !dbg !10285

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !10286
  %5 = trunc i32 %4 to i8, !dbg !10286
  %6 = and i8 %5, 127, !dbg !10286
  call void @llvm.dbg.value(metadata i8 %6, metadata !10279, metadata !DIExpression()), !dbg !10282
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !10287
  %8 = lshr i32 %7, 21, !dbg !10288
  %9 = and i32 %8, 3, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %9, metadata !10280, metadata !DIExpression()), !dbg !10282
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %9, !dbg !10290
  %11 = load i32, i32* %10, align 4, !dbg !10290
  call void @llvm.dbg.value(metadata i8 undef, metadata !10280, metadata !DIExpression()), !dbg !10282
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !10291
  %13 = load volatile i32, i32* %12, align 4, !dbg !10291
  %14 = and i32 %13, 32768, !dbg !10293
  %15 = icmp eq i32 %14, 0, !dbg !10293
  br i1 %15, label %36, label %16, !dbg !10294

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !10295
  %18 = and i32 %17, 32767, !dbg !10297
  %19 = uitofp i32 %18 to float, !dbg !10298
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !10299
  %21 = load volatile i32, i32* %20, align 4, !dbg !10299
  %22 = and i32 %21, 1073741823, !dbg !10300
  %23 = uitofp i32 %22 to float, !dbg !10301
  %24 = fdiv float %19, %23, !dbg !10302
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !10303
  %26 = load volatile i32, i32* %25, align 4, !dbg !10303
  %27 = and i32 %26, 1073741823, !dbg !10304
  %28 = uitofp i32 %27 to float, !dbg !10305
  %29 = fmul float %24, %28, !dbg !10306
  call void @llvm.dbg.value(metadata float %29, metadata !10281, metadata !DIExpression()), !dbg !10282
  %30 = lshr i32 24000000, %11, !dbg !10307
  %31 = uitofp i32 %30 to float, !dbg !10308
  %32 = uitofp i8 %6 to float, !dbg !10309
  %33 = fadd float %29, %32, !dbg !10310
  %34 = fmul float %33, %31, !dbg !10311
  %35 = fptoui float %34 to i32, !dbg !10312
  br label %40, !dbg !10313

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !10314
  %38 = zext i8 %6 to i32, !dbg !10316
  %39 = mul nuw i32 %37, %38, !dbg !10317
  br label %40, !dbg !10318

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !10282
  ret i32 %41, !dbg !10319
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10320 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #24, !dbg !10324
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !10323
  ret i32 %3, !dbg !10326
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10327 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10329, metadata !DIExpression()), !dbg !10334
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #24, !dbg !10335
  br i1 %2, label %47, label %3, !dbg !10337

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10338
  %5 = trunc i32 %4 to i8, !dbg !10338
  %6 = and i8 %5, 127, !dbg !10338
  call void @llvm.dbg.value(metadata i8 %6, metadata !10330, metadata !DIExpression()), !dbg !10334
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10339
  %8 = lshr i32 %7, 22, !dbg !10340
  %9 = and i32 %8, 3, !dbg !10341
  call void @llvm.dbg.value(metadata i32 %8, metadata !10331, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10334
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10342
  %11 = lshr i32 %10, 19, !dbg !10343
  %12 = and i32 %11, 3, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %11, metadata !10332, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10334
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10345
  %14 = load i32, i32* %13, align 4, !dbg !10345
  call void @llvm.dbg.value(metadata i8 undef, metadata !10331, metadata !DIExpression()), !dbg !10334
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !10346
  %16 = load i32, i32* %15, align 4, !dbg !10346
  call void @llvm.dbg.value(metadata i8 undef, metadata !10332, metadata !DIExpression()), !dbg !10334
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !10347
  %18 = load volatile i32, i32* %17, align 4, !dbg !10347
  %19 = and i32 %18, 32768, !dbg !10349
  %20 = icmp eq i32 %19, 0, !dbg !10349
  br i1 %20, label %42, label %21, !dbg !10350

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10351
  %23 = and i32 %22, 32767, !dbg !10353
  %24 = uitofp i32 %23 to float, !dbg !10354
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !10355
  %26 = load volatile i32, i32* %25, align 4, !dbg !10355
  %27 = and i32 %26, 1073741823, !dbg !10356
  %28 = uitofp i32 %27 to float, !dbg !10357
  %29 = fdiv float %24, %28, !dbg !10358
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !10359
  %31 = load volatile i32, i32* %30, align 4, !dbg !10359
  %32 = and i32 %31, 1073741823, !dbg !10360
  %33 = uitofp i32 %32 to float, !dbg !10361
  %34 = fmul float %29, %33, !dbg !10362
  call void @llvm.dbg.value(metadata float %34, metadata !10333, metadata !DIExpression()), !dbg !10334
  %35 = lshr i32 24000000, %16, !dbg !10363
  %36 = lshr i32 %35, %14, !dbg !10364
  %37 = uitofp i32 %36 to float, !dbg !10365
  %38 = uitofp i8 %6 to float, !dbg !10366
  %39 = fadd float %34, %38, !dbg !10367
  %40 = fmul float %39, %37, !dbg !10368
  %41 = fptoui float %40 to i32, !dbg !10369
  br label %47, !dbg !10370

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10371
  %44 = lshr i32 %43, %14, !dbg !10373
  %45 = zext i8 %6 to i32, !dbg !10374
  %46 = mul nuw i32 %44, %45, !dbg !10375
  br label %47, !dbg !10376

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10334
  ret i32 %48, !dbg !10377
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10380, metadata !DIExpression()), !dbg !10385
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #24, !dbg !10386
  br i1 %2, label %47, label %3, !dbg !10388

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10389
  %5 = trunc i32 %4 to i8, !dbg !10389
  %6 = and i8 %5, 127, !dbg !10389
  call void @llvm.dbg.value(metadata i8 %6, metadata !10381, metadata !DIExpression()), !dbg !10385
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10390
  %8 = lshr i32 %7, 22, !dbg !10391
  %9 = and i32 %8, 3, !dbg !10392
  call void @llvm.dbg.value(metadata i32 %8, metadata !10382, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10385
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10393
  %11 = lshr i32 %10, 19, !dbg !10394
  %12 = and i32 %11, 3, !dbg !10395
  call void @llvm.dbg.value(metadata i32 %11, metadata !10383, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10385
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10396
  %14 = load i32, i32* %13, align 4, !dbg !10396
  call void @llvm.dbg.value(metadata i8 undef, metadata !10382, metadata !DIExpression()), !dbg !10385
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !10397
  %16 = load i32, i32* %15, align 4, !dbg !10397
  call void @llvm.dbg.value(metadata i8 undef, metadata !10383, metadata !DIExpression()), !dbg !10385
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !10398
  %18 = load volatile i32, i32* %17, align 4, !dbg !10398
  %19 = and i32 %18, 32768, !dbg !10400
  %20 = icmp eq i32 %19, 0, !dbg !10400
  br i1 %20, label %42, label %21, !dbg !10401

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10402
  %23 = and i32 %22, 32767, !dbg !10404
  %24 = uitofp i32 %23 to float, !dbg !10405
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !10406
  %26 = load volatile i32, i32* %25, align 4, !dbg !10406
  %27 = and i32 %26, 1073741823, !dbg !10407
  %28 = uitofp i32 %27 to float, !dbg !10408
  %29 = fdiv float %24, %28, !dbg !10409
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !10410
  %31 = load volatile i32, i32* %30, align 4, !dbg !10410
  %32 = and i32 %31, 1073741823, !dbg !10411
  %33 = uitofp i32 %32 to float, !dbg !10412
  %34 = fmul float %29, %33, !dbg !10413
  call void @llvm.dbg.value(metadata float %34, metadata !10384, metadata !DIExpression()), !dbg !10385
  %35 = lshr i32 24000000, %16, !dbg !10414
  %36 = lshr i32 %35, %14, !dbg !10415
  %37 = uitofp i32 %36 to float, !dbg !10416
  %38 = uitofp i8 %6 to float, !dbg !10417
  %39 = fadd float %34, %38, !dbg !10418
  %40 = fmul float %39, %37, !dbg !10419
  %41 = fptoui float %40 to i32, !dbg !10420
  br label %47, !dbg !10421

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10422
  %44 = lshr i32 %43, %14, !dbg !10424
  %45 = zext i8 %6 to i32, !dbg !10425
  %46 = mul nuw i32 %44, %45, !dbg !10426
  br label %47, !dbg !10427

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10385
  ret i32 %48, !dbg !10428
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !10429 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10433, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i32 %1, metadata !10434, metadata !DIExpression()), !dbg !10437
  %3 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #24, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %3, metadata !10435, metadata !DIExpression()), !dbg !10437
  %4 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #24, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %4, metadata !10436, metadata !DIExpression()), !dbg !10437
  %5 = udiv i32 %3, %4, !dbg !10440
  %6 = mul i32 %5, 18, !dbg !10441
  ret i32 %6, !dbg !10442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10443 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10445, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata i32 %1, metadata !10446, metadata !DIExpression()), !dbg !10447
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10448
  %4 = and i32 %1, 65535, !dbg !10448
  %5 = add i32 %4, %3, !dbg !10448
  %6 = inttoptr i32 %5 to i32*, !dbg !10448
  %7 = load volatile i32, i32* %6, align 4, !dbg !10448
  %8 = lshr i32 %1, 16, !dbg !10449
  %9 = and i32 %8, 31, !dbg !10449
  %10 = lshr i32 %7, %9, !dbg !10450
  %11 = and i32 %10, 63, !dbg !10451
  ret i32 %11, !dbg !10452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !10453 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10480, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !10481, metadata !DIExpression()), !dbg !10484
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10485
  store volatile i32 0, i32* %3, align 4, !dbg !10486
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10487
  store volatile i32 0, i32* %4, align 4, !dbg !10488
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !10489
  %6 = load i32, i32* %5, align 4, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %6, metadata !10482, metadata !DIExpression()), !dbg !10484
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !10490
  %8 = load i32, i32* %7, align 4, !dbg !10490
  %9 = icmp eq i32 %8, 1, !dbg !10492
  %10 = shl nuw i32 1, %6, !dbg !10493
  br i1 %9, label %11, label %15, !dbg !10494

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10495
  %13 = load volatile i32, i32* %12, align 4, !dbg !10496
  %14 = or i32 %13, %10, !dbg !10496
  store volatile i32 %14, i32* %12, align 4, !dbg !10496
  br label %20, !dbg !10495

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !10497
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10498
  %18 = load volatile i32, i32* %17, align 4, !dbg !10499
  %19 = and i32 %18, %16, !dbg !10499
  store volatile i32 %19, i32* %17, align 4, !dbg !10499
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !10500
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !10502
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !10502
  %24 = add i32 %6, -16, !dbg !10502
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !10502
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !10502
  call void @llvm.dbg.value(metadata i32* %26, metadata !10483, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 %25, metadata !10482, metadata !DIExpression()), !dbg !10484
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !10503
  %28 = load i32, i32* %27, align 4, !dbg !10503
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !10504

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !10505
  %31 = shl i32 3, %30, !dbg !10508
  %32 = xor i32 %31, -1, !dbg !10509
  %33 = load volatile i32, i32* %26, align 4, !dbg !10510
  %34 = and i32 %33, %32, !dbg !10510
  br label %56, !dbg !10511

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !10512
  %37 = shl i32 %25, 1, !dbg !10514
  %38 = shl i32 3, %37, !dbg !10515
  %39 = xor i32 %38, -1, !dbg !10516
  %40 = and i32 %36, %39, !dbg !10517
  %41 = shl nuw i32 1, %37, !dbg !10518
  %42 = or i32 %40, %41, !dbg !10519
  br label %56, !dbg !10520

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !10521
  %45 = shl i32 %25, 1, !dbg !10523
  %46 = shl i32 3, %45, !dbg !10524
  %47 = xor i32 %46, -1, !dbg !10525
  %48 = and i32 %44, %47, !dbg !10526
  %49 = shl i32 2, %45, !dbg !10527
  %50 = or i32 %48, %49, !dbg !10528
  br label %56, !dbg !10529

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !10530
  %53 = shl i32 3, %52, !dbg !10532
  %54 = load volatile i32, i32* %26, align 4, !dbg !10533
  %55 = or i32 %54, %53, !dbg !10533
  br label %56, !dbg !10534

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !10535
  br label %58, !dbg !10536

58:                                               ; preds = %56, %20
  ret void, !dbg !10536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !10537 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10542, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 %1, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 %2, metadata !10544, metadata !DIExpression()), !dbg !10545
  %4 = icmp eq i32 %2, 1, !dbg !10546
  %5 = shl nuw i32 1, %1, !dbg !10548
  br i1 %4, label %6, label %10, !dbg !10549

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10550
  %8 = load volatile i32, i32* %7, align 4, !dbg !10552
  %9 = or i32 %8, %5, !dbg !10552
  store volatile i32 %9, i32* %7, align 4, !dbg !10552
  br label %15, !dbg !10553

10:                                               ; preds = %3
  %11 = xor i32 %5, -1, !dbg !10554
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10556
  %13 = load volatile i32, i32* %12, align 4, !dbg !10557
  %14 = and i32 %13, %11, !dbg !10557
  store volatile i32 %14, i32* %12, align 4, !dbg !10557
  br label %15

15:                                               ; preds = %10, %6
  ret void, !dbg !10558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !10559 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10563, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.value(metadata i32 %1, metadata !10564, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.value(metadata i1 %2, metadata !10565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10566
  %4 = shl nuw i32 1, %1, !dbg !10567
  br i1 %2, label %5, label %9, !dbg !10569

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10570
  %7 = load volatile i32, i32* %6, align 4, !dbg !10571
  %8 = or i32 %7, %4, !dbg !10571
  store volatile i32 %8, i32* %6, align 4, !dbg !10571
  br label %14, !dbg !10570

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !10572
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10573
  %12 = load volatile i32, i32* %11, align 4, !dbg !10574
  %13 = and i32 %12, %10, !dbg !10574
  store volatile i32 %13, i32* %11, align 4, !dbg !10574
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !10575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !10576 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10578, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i32 %1, metadata !10579, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i1 %2, metadata !10580, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10581
  %4 = shl nuw i32 1, %1, !dbg !10582
  br i1 %2, label %5, label %9, !dbg !10584

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10585
  %7 = load volatile i32, i32* %6, align 4, !dbg !10586
  %8 = or i32 %7, %4, !dbg !10586
  store volatile i32 %8, i32* %6, align 4, !dbg !10586
  br label %14, !dbg !10585

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !10587
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10588
  %12 = load volatile i32, i32* %11, align 4, !dbg !10589
  %13 = and i32 %12, %10, !dbg !10589
  store volatile i32 %13, i32* %11, align 4, !dbg !10589
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !10590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !10591 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10630, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !10631, metadata !DIExpression()), !dbg !10632
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10633
  %4 = load volatile i32, i32* %3, align 4, !dbg !10634
  %5 = and i32 %4, -2, !dbg !10634
  store volatile i32 %5, i32* %3, align 4, !dbg !10634
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #24, !dbg !10635
  %6 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !10636
  %7 = load i32, i32* %6, align 4, !dbg !10636
  %8 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !10637
  %9 = load i32, i32* %8, align 4, !dbg !10637
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !10638
  %11 = load i32, i32* %10, align 4, !dbg !10638
  %12 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !10639
  %13 = load i32, i32* %12, align 4, !dbg !10639
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10640
  %15 = load volatile i32, i32* %14, align 4, !dbg !10641
  %16 = or i32 %7, %9, !dbg !10642
  %17 = or i32 %16, %11, !dbg !10643
  %18 = or i32 %17, %13, !dbg !10644
  %19 = or i32 %18, %15, !dbg !10641
  %20 = or i32 %19, 16384, !dbg !10641
  store volatile i32 %20, i32* %14, align 4, !dbg !10641
  %21 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10645
  %22 = load volatile i32, i32* %21, align 4, !dbg !10646
  %23 = or i32 %22, 4, !dbg !10646
  store volatile i32 %23, i32* %21, align 4, !dbg !10646
  %24 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !10647
  %25 = load i32, i32* %24, align 4, !dbg !10647
  %26 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !10648
  %27 = load i32, i32* %26, align 4, !dbg !10648
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %25, i32 noundef %27) #24, !dbg !10649
  ret void, !dbg !10650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !10651 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10655, metadata !DIExpression()), !dbg !10656
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10657
  %3 = load volatile i32, i32* %2, align 4, !dbg !10658
  %4 = and i32 %3, -2, !dbg !10658
  store volatile i32 %4, i32* %2, align 4, !dbg !10658
  store volatile i32 0, i32* %2, align 4, !dbg !10659
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10660
  store volatile i32 1, i32* %5, align 4, !dbg !10661
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10662
  store volatile i32 1792, i32* %6, align 4, !dbg !10663
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10664
  store volatile i32 32768, i32* %7, align 4, !dbg !10665
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10666
  store volatile i32 2049, i32* %8, align 4, !dbg !10667
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !10668
  store volatile i32 43, i32* %9, align 4, !dbg !10669
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !10670
  store volatile i32 0, i32* %10, align 4, !dbg !10671
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10672
  store volatile i32 0, i32* %11, align 4, !dbg !10673
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !10674
  store volatile i32 96, i32* %12, align 4, !dbg !10675
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10676
  store volatile i32 0, i32* %13, align 4, !dbg !10677
  %14 = load volatile i32, i32* %5, align 4, !dbg !10678
  %15 = and i32 %14, -2, !dbg !10678
  store volatile i32 %15, i32* %5, align 4, !dbg !10678
  br label %16, !dbg !10679

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !10680
  %18 = and i32 %17, 1, !dbg !10681
  %19 = icmp eq i32 %18, 0, !dbg !10682
  br i1 %19, label %16, label %20, !dbg !10679, !llvm.loop !10683

20:                                               ; preds = %16
  ret void, !dbg !10685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !10686 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10690, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %1, metadata !10691, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %2, metadata !10692, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 1, metadata !10697, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %1, metadata !10693, metadata !DIExpression()), !dbg !10703
  %4 = shl i32 %2, 4, !dbg !10704
  call void @llvm.dbg.value(metadata i32 %4, metadata !10694, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 1, metadata !10695, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %1, metadata !10693, metadata !DIExpression()), !dbg !10703
  %5 = icmp eq i32 %4, 0, !dbg !10705
  br i1 %5, label %11, label %6, !dbg !10706

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10693, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %8, metadata !10694, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %8, metadata !10695, metadata !DIExpression()), !dbg !10703
  %9 = urem i32 %7, %8, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %8, metadata !10693, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %9, metadata !10694, metadata !DIExpression()), !dbg !10703
  %10 = icmp eq i32 %9, 0, !dbg !10705
  br i1 %10, label %11, label %6, !dbg !10706, !llvm.loop !10709

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !10703
  %13 = udiv i32 %1, %12, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %13, metadata !10693, metadata !DIExpression()), !dbg !10703
  %14 = udiv i32 %4, %12, !dbg !10712
  call void @llvm.dbg.value(metadata i32 %14, metadata !10694, metadata !DIExpression()), !dbg !10703
  %15 = icmp ugt i32 %13, 458745, !dbg !10713
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !10714
  br i1 %17, label %18, label %33, !dbg !10714

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !10715
  %20 = udiv i32 %19, 458745, !dbg !10716
  %21 = add nuw nsw i32 %20, 1, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %21, metadata !10698, metadata !DIExpression()), !dbg !10718
  %22 = add i32 %14, -1, !dbg !10719
  %23 = udiv i32 %22, 65535, !dbg !10720
  %24 = add nuw nsw i32 %23, 1, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %24, metadata !10701, metadata !DIExpression()), !dbg !10718
  %25 = icmp ugt i32 %21, %24, !dbg !10722
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !10723
  call void @llvm.dbg.value(metadata i32 %26, metadata !10702, metadata !DIExpression()), !dbg !10718
  %27 = udiv i32 %13, %26, !dbg !10724
  call void @llvm.dbg.value(metadata i32 %27, metadata !10693, metadata !DIExpression()), !dbg !10703
  %28 = udiv i32 %14, %26, !dbg !10725
  call void @llvm.dbg.value(metadata i32 %28, metadata !10694, metadata !DIExpression()), !dbg !10703
  %29 = icmp ugt i32 %26, %13, !dbg !10726
  %30 = select i1 %29, i32 1, i32 %27, !dbg !10728
  call void @llvm.dbg.value(metadata i32 %30, metadata !10693, metadata !DIExpression()), !dbg !10703
  %31 = icmp ugt i32 %26, %14, !dbg !10729
  %32 = select i1 %31, i32 1, i32 %28, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %32, metadata !10694, metadata !DIExpression()), !dbg !10703
  br label %33, !dbg !10732

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !10703
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !10703
  call void @llvm.dbg.value(metadata i32 %35, metadata !10693, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %34, metadata !10694, metadata !DIExpression()), !dbg !10703
  %36 = add i32 %35, -1, !dbg !10733
  %37 = udiv i32 %36, 65535, !dbg !10734
  %38 = add nuw nsw i32 %37, 1, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %38, metadata !10697, metadata !DIExpression()), !dbg !10703
  %39 = add nsw i32 %37, -1, !dbg !10736
  %40 = icmp ult i32 %39, 6, !dbg !10736
  br i1 %40, label %41, label %44, !dbg !10736

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !10736
  %43 = load i32, i32* %42, align 4, !dbg !10736
  br label %44, !dbg !10736

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !10737
  call void @llvm.dbg.value(metadata i32 %45, metadata !10696, metadata !DIExpression()), !dbg !10703
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10739
  %47 = load volatile i32, i32* %46, align 4, !dbg !10740
  %48 = and i32 %47, -897, !dbg !10740
  store volatile i32 %48, i32* %46, align 4, !dbg !10740
  %49 = load volatile i32, i32* %46, align 4, !dbg !10741
  %50 = or i32 %49, %45, !dbg !10741
  store volatile i32 %50, i32* %46, align 4, !dbg !10741
  %51 = add i32 %34, 65535, !dbg !10742
  %52 = and i32 %51, 65535, !dbg !10742
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !10743
  store volatile i32 %52, i32* %53, align 4, !dbg !10744
  %54 = udiv i32 %35, %38, !dbg !10745
  %55 = add i32 %54, 65535, !dbg !10745
  %56 = and i32 %55, 65535, !dbg !10745
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !10746
  store volatile i32 %56, i32* %57, align 4, !dbg !10747
  %58 = mul nuw nsw i32 %38, 1000, !dbg !10748
  %59 = udiv i32 %1, %58, !dbg !10748
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10749
  store volatile i32 %59, i32* %60, align 4, !dbg !10750
  ret void, !dbg !10751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !10752 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10756, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 %1, metadata !10757, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i1 %2, metadata !10758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10759
  %4 = and i32 %1, 2, !dbg !10760
  %5 = icmp eq i32 %4, 0, !dbg !10760
  br i1 %2, label %6, label %18, !dbg !10762

6:                                                ; preds = %3
  br i1 %5, label %11, label %7, !dbg !10763

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10765
  %9 = load volatile i32, i32* %8, align 4, !dbg !10767
  %10 = or i32 %9, 512, !dbg !10767
  store volatile i32 %10, i32* %8, align 4, !dbg !10767
  br label %11, !dbg !10765

11:                                               ; preds = %7, %6
  %12 = and i32 %1, 4, !dbg !10768
  %13 = icmp eq i32 %12, 0, !dbg !10768
  br i1 %13, label %30, label %14, !dbg !10770

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10771
  %16 = load volatile i32, i32* %15, align 4, !dbg !10772
  %17 = or i32 %16, 2, !dbg !10772
  store volatile i32 %17, i32* %15, align 4, !dbg !10772
  br label %30, !dbg !10771

18:                                               ; preds = %3
  br i1 %5, label %23, label %19, !dbg !10773

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10775
  %21 = load volatile i32, i32* %20, align 4, !dbg !10777
  %22 = and i32 %21, -513, !dbg !10777
  store volatile i32 %22, i32* %20, align 4, !dbg !10777
  br label %23, !dbg !10775

23:                                               ; preds = %19, %18
  %24 = and i32 %1, 4, !dbg !10778
  %25 = icmp eq i32 %24, 0, !dbg !10778
  br i1 %25, label %30, label %26, !dbg !10780

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10781
  %28 = load volatile i32, i32* %27, align 4, !dbg !10782
  %29 = and i32 %28, -3, !dbg !10782
  store volatile i32 %29, i32* %27, align 4, !dbg !10782
  br label %30, !dbg !10781

30:                                               ; preds = %23, %26, %11, %14
  ret void, !dbg !10783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10784 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10788, metadata !DIExpression()), !dbg !10790
  call void @llvm.dbg.value(metadata i1 %1, metadata !10789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10790
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10791
  %4 = load volatile i32, i32* %3, align 4, !dbg !10791
  %5 = and i32 %4, 2, !dbg !10793
  %6 = select i1 %1, i32 0, i32 -3, !dbg !10793
  %7 = or i32 %5, %6, !dbg !10793
  store volatile i32 %7, i32* %3, align 4, !dbg !10791
  ret void, !dbg !10794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10795 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10797, metadata !DIExpression()), !dbg !10799
  call void @llvm.dbg.value(metadata i1 %1, metadata !10798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10799
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10800
  %4 = load volatile i32, i32* %3, align 4, !dbg !10800
  %5 = and i32 %4, -17, !dbg !10802
  %6 = select i1 %1, i32 0, i32 16, !dbg !10802
  %7 = or i32 %5, %6, !dbg !10802
  store volatile i32 %7, i32* %3, align 4, !dbg !10800
  ret void, !dbg !10803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !10804 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10806, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.value(metadata i32 %1, metadata !10807, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.value(metadata i1 %2, metadata !10808, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10811
  call void @llvm.dbg.value(metadata i32* null, metadata !10809, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.value(metadata i32 0, metadata !10810, metadata !DIExpression()), !dbg !10811
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10812
  %5 = lshr i32 %1, 16, !dbg !10813
  %6 = add i32 %5, %4, !dbg !10814
  %7 = inttoptr i32 %6 to i32*, !dbg !10815
  call void @llvm.dbg.value(metadata i32* %7, metadata !10809, metadata !DIExpression()), !dbg !10811
  %8 = and i32 %1, 65535, !dbg !10816
  %9 = shl nuw i32 1, %8, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %9, metadata !10810, metadata !DIExpression()), !dbg !10811
  br i1 %2, label %10, label %13, !dbg !10818

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10819
  %12 = or i32 %11, %9, !dbg !10819
  br label %17, !dbg !10821

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10822
  %15 = load volatile i32, i32* %7, align 4, !dbg !10823
  %16 = and i32 %15, %14, !dbg !10823
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10824
  ret void, !dbg !10825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !10826 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10830, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.value(metadata i32 %1, metadata !10831, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.value(metadata i32* null, metadata !10832, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.value(metadata i32 0, metadata !10833, metadata !DIExpression()), !dbg !10834
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10835
  %4 = lshr i32 %1, 16, !dbg !10836
  %5 = add i32 %4, %3, !dbg !10837
  %6 = inttoptr i32 %5 to i32*, !dbg !10838
  call void @llvm.dbg.value(metadata i32* %6, metadata !10832, metadata !DIExpression()), !dbg !10834
  %7 = and i32 %1, 65535, !dbg !10839
  %8 = shl nuw i32 1, %7, !dbg !10840
  call void @llvm.dbg.value(metadata i32 %8, metadata !10833, metadata !DIExpression()), !dbg !10834
  store volatile i32 %8, i32* %6, align 4, !dbg !10841
  ret void, !dbg !10842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !10843 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10845, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %1, metadata !10846, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i1 %2, metadata !10847, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10850
  call void @llvm.dbg.value(metadata i32* null, metadata !10848, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 0, metadata !10849, metadata !DIExpression()), !dbg !10850
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10851
  %5 = lshr i32 %1, 16, !dbg !10852
  %6 = add i32 %5, %4, !dbg !10853
  %7 = inttoptr i32 %6 to i32*, !dbg !10854
  call void @llvm.dbg.value(metadata i32* %7, metadata !10848, metadata !DIExpression()), !dbg !10850
  %8 = and i32 %1, 65535, !dbg !10855
  %9 = shl nuw i32 1, %8, !dbg !10856
  call void @llvm.dbg.value(metadata i32 %9, metadata !10849, metadata !DIExpression()), !dbg !10850
  br i1 %2, label %10, label %13, !dbg !10857

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10858
  %12 = or i32 %11, %9, !dbg !10858
  br label %17, !dbg !10860

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10861
  %15 = load volatile i32, i32* %7, align 4, !dbg !10862
  %16 = and i32 %15, %14, !dbg !10862
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10863
  ret void, !dbg !10864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10865 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10867, metadata !DIExpression()), !dbg !10869
  call void @llvm.dbg.value(metadata i1 %1, metadata !10868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10869
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10870
  %4 = load volatile i32, i32* %3, align 4, !dbg !10870
  %5 = and i32 %4, -16385, !dbg !10872
  %6 = select i1 %1, i32 0, i32 16384, !dbg !10872
  %7 = or i32 %5, %6, !dbg !10872
  store volatile i32 %7, i32* %3, align 4, !dbg !10870
  ret void, !dbg !10873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10874 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10876, metadata !DIExpression()), !dbg !10878
  call void @llvm.dbg.value(metadata i1 %1, metadata !10877, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10878
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10879
  %4 = load volatile i32, i32* %3, align 4, !dbg !10879
  %5 = and i32 %4, -8193, !dbg !10881
  %6 = select i1 %1, i32 8192, i32 0, !dbg !10881
  %7 = or i32 %5, %6, !dbg !10881
  store volatile i32 %7, i32* %3, align 4, !dbg !10879
  ret void, !dbg !10882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10883 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10885, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i1 %1, metadata !10886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10887
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10888
  %4 = load volatile i32, i32* %3, align 4, !dbg !10888
  %5 = and i32 %4, -4097, !dbg !10890
  %6 = select i1 %1, i32 4096, i32 0, !dbg !10890
  %7 = or i32 %5, %6, !dbg !10890
  store volatile i32 %7, i32* %3, align 4, !dbg !10888
  ret void, !dbg !10891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !10892 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10894, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 %1, metadata !10895, metadata !DIExpression()), !dbg !10896
  %3 = icmp eq i32 %1, 0, !dbg !10897
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10899
  %5 = load volatile i32, i32* %4, align 4, !dbg !10899
  %6 = and i32 %5, -65, !dbg !10900
  %7 = select i1 %3, i32 0, i32 64, !dbg !10900
  %8 = or i32 %6, %7, !dbg !10900
  store volatile i32 %8, i32* %4, align 4, !dbg !10899
  ret void, !dbg !10901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10902 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10904, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata i1 %1, metadata !10905, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10906
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10907
  %4 = load volatile i32, i32* %3, align 4, !dbg !10907
  %5 = and i32 %4, -1025, !dbg !10909
  %6 = select i1 %1, i32 1024, i32 0, !dbg !10909
  %7 = or i32 %5, %6, !dbg !10909
  store volatile i32 %7, i32* %3, align 4, !dbg !10907
  ret void, !dbg !10910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10911 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10913, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i1 %1, metadata !10914, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10915
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10916
  %4 = load volatile i32, i32* %3, align 4, !dbg !10916
  %5 = and i32 %4, -513, !dbg !10918
  %6 = select i1 %1, i32 512, i32 0, !dbg !10918
  %7 = or i32 %5, %6, !dbg !10918
  store volatile i32 %7, i32* %3, align 4, !dbg !10916
  ret void, !dbg !10919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10920 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10922, metadata !DIExpression()), !dbg !10924
  call void @llvm.dbg.value(metadata i1 %1, metadata !10923, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10924
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10925
  %4 = load volatile i32, i32* %3, align 4, !dbg !10925
  %5 = and i32 %4, -257, !dbg !10927
  %6 = select i1 %1, i32 256, i32 0, !dbg !10927
  %7 = or i32 %5, %6, !dbg !10927
  store volatile i32 %7, i32* %3, align 4, !dbg !10925
  ret void, !dbg !10928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #16 !dbg !10929 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10933, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i16 %1, metadata !10934, metadata !DIExpression()), !dbg !10935
  %3 = zext i16 %1 to i32, !dbg !10936
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10938
  %5 = load volatile i32, i32* %4, align 4, !dbg !10938
  %6 = and i32 %5, -5, !dbg !10939
  %7 = lshr i32 %3, 6, !dbg !10939
  %8 = and i32 %7, 4, !dbg !10939
  %9 = or i32 %6, %8, !dbg !10939
  store volatile i32 %9, i32* %4, align 4, !dbg !10938
  %10 = and i32 %3, 255, !dbg !10940
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10941
  store volatile i32 %10, i32* %11, align 4, !dbg !10942
  ret void, !dbg !10943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #17 !dbg !10944 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10948, metadata !DIExpression()), !dbg !10950
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10951
  %3 = load volatile i32, i32* %2, align 4, !dbg !10951
  call void @llvm.dbg.value(metadata i32 %3, metadata !10949, metadata !DIExpression()), !dbg !10950
  %4 = trunc i32 %3 to i16, !dbg !10952
  %5 = and i16 %4, 255, !dbg !10952
  %6 = lshr i16 %4, 2, !dbg !10952
  %7 = and i16 %6, 256, !dbg !10952
  %8 = or i16 %7, %5, !dbg !10952
  call void @llvm.dbg.value(metadata i16 %8, metadata !10949, metadata !DIExpression()), !dbg !10950
  ret i16 %8, !dbg !10953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10954 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10956, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.value(metadata i1 %1, metadata !10957, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10958
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10959
  %4 = load volatile i32, i32* %3, align 4, !dbg !10959
  %5 = and i32 %4, -2, !dbg !10961
  %6 = zext i1 %1 to i32, !dbg !10961
  %7 = or i32 %5, %6, !dbg !10961
  store volatile i32 %7, i32* %3, align 4, !dbg !10959
  ret void, !dbg !10962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10965, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i1 %1, metadata !10966, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10967
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10968
  %4 = load volatile i32, i32* %3, align 4, !dbg !10968
  %5 = and i32 %4, -3, !dbg !10970
  %6 = select i1 %1, i32 2, i32 0, !dbg !10970
  %7 = or i32 %5, %6, !dbg !10970
  store volatile i32 %7, i32* %3, align 4, !dbg !10968
  ret void, !dbg !10971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10972 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10974, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i1 %1, metadata !10975, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10976
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10977
  %4 = load volatile i32, i32* %3, align 4, !dbg !10977
  %5 = and i32 %4, -129, !dbg !10979
  %6 = select i1 %1, i32 128, i32 0, !dbg !10979
  %7 = or i32 %5, %6, !dbg !10979
  store volatile i32 %7, i32* %3, align 4, !dbg !10977
  ret void, !dbg !10980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !10981 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10983, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32 %1, metadata !10984, metadata !DIExpression()), !dbg !10985
  %3 = icmp eq i32 %1, 0, !dbg !10986
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10988
  %5 = load volatile i32, i32* %4, align 4, !dbg !10988
  %6 = and i32 %5, -33, !dbg !10989
  %7 = select i1 %3, i32 32, i32 0, !dbg !10989
  %8 = or i32 %6, %7, !dbg !10989
  store volatile i32 %8, i32* %4, align 4, !dbg !10988
  ret void, !dbg !10990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !10991 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10993, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.value(metadata i1 %1, metadata !10994, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10995
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10996
  %4 = load volatile i32, i32* %3, align 4, !dbg !10996
  %5 = and i32 %4, -16385, !dbg !10998
  %6 = select i1 %1, i32 16384, i32 0, !dbg !10998
  %7 = or i32 %5, %6, !dbg !10998
  store volatile i32 %7, i32* %3, align 4, !dbg !10996
  ret void, !dbg !10999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11000 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11002, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.value(metadata i1 %1, metadata !11003, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11004
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11005
  %4 = load volatile i32, i32* %3, align 4, !dbg !11005
  %5 = and i32 %4, -17, !dbg !11007
  %6 = select i1 %1, i32 16, i32 0, !dbg !11007
  %7 = or i32 %5, %6, !dbg !11007
  store volatile i32 %7, i32* %3, align 4, !dbg !11005
  ret void, !dbg !11008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11009 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11011, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i1 %1, metadata !11012, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11013
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11014
  %4 = load volatile i32, i32* %3, align 4, !dbg !11014
  %5 = and i32 %4, -2049, !dbg !11016
  %6 = select i1 %1, i32 2048, i32 0, !dbg !11016
  %7 = or i32 %5, %6, !dbg !11016
  store volatile i32 %7, i32* %3, align 4, !dbg !11014
  ret void, !dbg !11017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !11018 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !11037, metadata !DIExpression()), !dbg !11042
  %4 = bitcast i32* %2 to i8*, !dbg !11043
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11043
  %5 = bitcast i32* %3 to i8*, !dbg !11043
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11043
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !11044
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !11045

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11038, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i32* %2, metadata !11040, metadata !DIExpression(DW_OP_deref)), !dbg !11042
  call void @llvm.dbg.value(metadata i32* %3, metadata !11041, metadata !DIExpression(DW_OP_deref)), !dbg !11042
  br label %8, !dbg !11046

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !11048
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %10, metadata !11038, metadata !DIExpression()), !dbg !11042
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !11049

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #25, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %12, metadata !11039, metadata !DIExpression()), !dbg !11042
  br label %13, !dbg !11052

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11053
  call void @llvm.dbg.value(metadata i32 %14, metadata !11039, metadata !DIExpression()), !dbg !11042
  %15 = load i32, i32* %2, align 4, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %15, metadata !11040, metadata !DIExpression()), !dbg !11042
  %16 = add i32 %15, 1, !dbg !11055
  %17 = udiv i32 %14, %16, !dbg !11056
  %18 = load i32, i32* %3, align 4, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %18, metadata !11041, metadata !DIExpression()), !dbg !11042
  %19 = add i32 %18, 1, !dbg !11058
  %20 = udiv i32 %17, %19, !dbg !11059
  br label %21, !dbg !11060

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11042
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11061
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11061
  ret i32 %22, !dbg !11061
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #17 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !11066, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i32 %0, metadata !11067, metadata !DIExpression()), !dbg !11068
  %2 = inttoptr i32 %0 to i32*, !dbg !11069
  %3 = load volatile i32, i32* %2, align 4, !dbg !11069
  %4 = lshr i32 %3, 24, !dbg !11070
  %5 = and i32 %4, 7, !dbg !11070
  ret i32 %5, !dbg !11071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !11072 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !11094, metadata !DIExpression()), !dbg !11099
  %4 = bitcast i32* %2 to i8*, !dbg !11100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11100
  %5 = bitcast i32* %3 to i8*, !dbg !11100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11100
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !11101
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !11102

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11095, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32* %2, metadata !11097, metadata !DIExpression(DW_OP_deref)), !dbg !11099
  call void @llvm.dbg.value(metadata i32* %3, metadata !11098, metadata !DIExpression(DW_OP_deref)), !dbg !11099
  br label %8, !dbg !11103

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !11105
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %10, metadata !11095, metadata !DIExpression()), !dbg !11099
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !11106

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #25, !dbg !11107
  call void @llvm.dbg.value(metadata i32 %12, metadata !11096, metadata !DIExpression()), !dbg !11099
  br label %13, !dbg !11109

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11110
  call void @llvm.dbg.value(metadata i32 %14, metadata !11096, metadata !DIExpression()), !dbg !11099
  %15 = load i32, i32* %2, align 4, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %15, metadata !11097, metadata !DIExpression()), !dbg !11099
  %16 = add i32 %15, 1, !dbg !11112
  %17 = udiv i32 %14, %16, !dbg !11113
  %18 = load i32, i32* %3, align 4, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %18, metadata !11098, metadata !DIExpression()), !dbg !11099
  %19 = add i32 %18, 1, !dbg !11115
  %20 = udiv i32 %17, %19, !dbg !11116
  br label %21, !dbg !11117

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11099
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11118
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11118
  ret i32 %22, !dbg !11118
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !11119 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !11165, metadata !DIExpression()), !dbg !11170
  %4 = bitcast i32* %2 to i8*, !dbg !11171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11171
  %5 = bitcast i32* %3 to i8*, !dbg !11171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11171
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !11172
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !11173

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11166, metadata !DIExpression()), !dbg !11170
  call void @llvm.dbg.value(metadata i32* %2, metadata !11168, metadata !DIExpression(DW_OP_deref)), !dbg !11170
  call void @llvm.dbg.value(metadata i32* %3, metadata !11169, metadata !DIExpression(DW_OP_deref)), !dbg !11170
  br label %8, !dbg !11174

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !11176
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11176
  call void @llvm.dbg.value(metadata i32 %10, metadata !11166, metadata !DIExpression()), !dbg !11170
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !11177

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11178
  %13 = lshr i32 %12, 2, !dbg !11180
  call void @llvm.dbg.value(metadata i32 %13, metadata !11167, metadata !DIExpression()), !dbg !11170
  br label %16, !dbg !11181

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %15, metadata !11167, metadata !DIExpression()), !dbg !11170
  br label %16, !dbg !11183

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !11184
  call void @llvm.dbg.value(metadata i32 %17, metadata !11167, metadata !DIExpression()), !dbg !11170
  %18 = load i32, i32* %2, align 4, !dbg !11185
  call void @llvm.dbg.value(metadata i32 %18, metadata !11168, metadata !DIExpression()), !dbg !11170
  %19 = add i32 %18, 1, !dbg !11186
  %20 = udiv i32 %17, %19, !dbg !11187
  %21 = load i32, i32* %3, align 4, !dbg !11188
  call void @llvm.dbg.value(metadata i32 %21, metadata !11169, metadata !DIExpression()), !dbg !11170
  %22 = add i32 %21, 1, !dbg !11189
  %23 = udiv i32 %20, %22, !dbg !11190
  br label %24, !dbg !11191

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !11170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11192
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11192
  ret i32 %25, !dbg !11192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !11193 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !11211, metadata !DIExpression()), !dbg !11216
  %4 = bitcast i32* %2 to i8*, !dbg !11217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11217
  %5 = bitcast i32* %3 to i8*, !dbg !11217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11217
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !11218
  %7 = add i32 %6, -815923200, !dbg !11219
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !11219
  %9 = icmp ult i32 %8, 4, !dbg !11219
  br i1 %9, label %10, label %25, !dbg !11219

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !11219
  %12 = add i32 %11, 809020800, !dbg !11219
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #24, !dbg !11220
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11220
  call void @llvm.dbg.value(metadata i32 %13, metadata !11212, metadata !DIExpression()), !dbg !11216
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !11222

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11223
  %16 = lshr i32 %15, 2, !dbg !11225
  call void @llvm.dbg.value(metadata i32 %16, metadata !11213, metadata !DIExpression()), !dbg !11216
  br label %17, !dbg !11226

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !11227
  call void @llvm.dbg.value(metadata i32 %18, metadata !11213, metadata !DIExpression()), !dbg !11216
  %19 = load i32, i32* %2, align 4, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %19, metadata !11214, metadata !DIExpression()), !dbg !11216
  %20 = add i32 %19, 1, !dbg !11229
  %21 = udiv i32 %18, %20, !dbg !11230
  %22 = load i32, i32* %3, align 4, !dbg !11231
  call void @llvm.dbg.value(metadata i32 %22, metadata !11215, metadata !DIExpression()), !dbg !11216
  %23 = add i32 %22, 1, !dbg !11232
  %24 = udiv i32 %21, %23, !dbg !11233
  br label %25, !dbg !11234

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !11216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11235
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11235
  ret i32 %26, !dbg !11235
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !11236 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11263, metadata !DIExpression()), !dbg !11268
  %4 = bitcast i32* %2 to i8*, !dbg !11269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11269
  %5 = bitcast i32* %3 to i8*, !dbg !11269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11269
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11270
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !11271

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11264, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %2, metadata !11266, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %3, metadata !11267, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  br label %13, !dbg !11272

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11264, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %2, metadata !11266, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %3, metadata !11267, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  br label %13, !dbg !11274

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11264, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %2, metadata !11266, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %3, metadata !11267, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  br label %13, !dbg !11275

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11264, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %2, metadata !11266, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %3, metadata !11267, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  br label %13, !dbg !11276

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11264, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %2, metadata !11266, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %3, metadata !11267, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  br label %13, !dbg !11277

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !11264, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %2, metadata !11266, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  call void @llvm.dbg.value(metadata i32* %3, metadata !11267, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  br label %13, !dbg !11278

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #24, !dbg !11279
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11279
  call void @llvm.dbg.value(metadata i32 %15, metadata !11264, metadata !DIExpression()), !dbg !11268
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !11280

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11281
  %18 = lshr i32 %17, 1, !dbg !11283
  call void @llvm.dbg.value(metadata i32 %18, metadata !11265, metadata !DIExpression()), !dbg !11268
  br label %21, !dbg !11284

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11285
  call void @llvm.dbg.value(metadata i32 %20, metadata !11265, metadata !DIExpression()), !dbg !11268
  br label %21, !dbg !11286

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !11287
  call void @llvm.dbg.value(metadata i32 %22, metadata !11265, metadata !DIExpression()), !dbg !11268
  %23 = load i32, i32* %2, align 4, !dbg !11288
  call void @llvm.dbg.value(metadata i32 %23, metadata !11266, metadata !DIExpression()), !dbg !11268
  %24 = add i32 %23, 1, !dbg !11289
  %25 = udiv i32 %22, %24, !dbg !11290
  %26 = load i32, i32* %3, align 4, !dbg !11291
  call void @llvm.dbg.value(metadata i32 %26, metadata !11267, metadata !DIExpression()), !dbg !11268
  %27 = add i32 %26, 1, !dbg !11292
  %28 = udiv i32 %25, %27, !dbg !11293
  br label %29, !dbg !11294

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !11268
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11295
  ret i32 %30, !dbg !11295
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !11296 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11299, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.value(metadata i32 undef, metadata !11299, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.value(metadata i32 undef, metadata !11299, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11315
  ret void, !dbg !11316
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11321, metadata !DIExpression()), !dbg !11323
  %2 = icmp eq i8* %0, null, !dbg !11324
  br i1 %2, label %29, label %3, !dbg !11326

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11327
  %5 = icmp eq i8 %4, 0, !dbg !11328
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11329
  br i1 %6, label %29, label %8, !dbg !11329

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11322, metadata !DIExpression()), !dbg !11323
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11330

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11322, metadata !DIExpression()), !dbg !11323
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !11332
  br i1 %10, label %11, label %15, !dbg !11337

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11338
  %13 = load i8*, i8** %12, align 4, !dbg !11338
  %14 = icmp eq i8* %13, %0, !dbg !11339
  br i1 %14, label %29, label %15, !dbg !11340

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11341
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11322, metadata !DIExpression()), !dbg !11323
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11342
  br i1 %17, label %7, label %8, !dbg !11343, !llvm.loop !11344

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11322, metadata !DIExpression()), !dbg !11323
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !11346
  br i1 %20, label %21, label %26, !dbg !11350

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11351
  %23 = load i8*, i8** %22, align 4, !dbg !11351
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11352
  %25 = icmp eq i32 %24, 0, !dbg !11353
  br i1 %25, label %29, label %26, !dbg !11354

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11355
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11322, metadata !DIExpression()), !dbg !11323
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11356
  br i1 %28, label %29, label %18, !dbg !11330, !llvm.loop !11357

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11323
  ret %struct.device* %30, !dbg !11359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !11360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11364, metadata !DIExpression()), !dbg !11365
  %2 = icmp eq %struct.device* %0, null, !dbg !11366
  br i1 %2, label %14, label %3, !dbg !11368

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11369
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11369
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11370
  %7 = load i8, i8* %6, align 1, !dbg !11370
  %8 = and i8 %7, 1, !dbg !11370
  %9 = icmp eq i8 %8, 0, !dbg !11370
  br i1 %9, label %14, label %10, !dbg !11371

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11372
  %12 = load i8, i8* %11, align 1, !dbg !11372
  %13 = icmp eq i8 %12, 0, !dbg !11373
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11365
  ret i1 %15, !dbg !11374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !11375 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11380, metadata !DIExpression()), !dbg !11381
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11382
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11384 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11392, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11393, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata i8* %2, metadata !11394, metadata !DIExpression()), !dbg !11397
  %5 = bitcast i32* %4 to i8*, !dbg !11398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11398
  call void @llvm.dbg.value(metadata i32 0, metadata !11395, metadata !DIExpression()), !dbg !11397
  store i32 0, i32* %4, align 4, !dbg !11399
  call void @llvm.dbg.value(metadata i32* %4, metadata !11395, metadata !DIExpression(DW_OP_deref)), !dbg !11397
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11400
  call void @llvm.dbg.value(metadata i16* %6, metadata !11396, metadata !DIExpression()), !dbg !11397
  %7 = load i32, i32* %4, align 4, !dbg !11401
  call void @llvm.dbg.value(metadata i32 %7, metadata !11395, metadata !DIExpression()), !dbg !11397
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11403
  ret i32 %8, !dbg !11404
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !11405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11409, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32* %1, metadata !11410, metadata !DIExpression()), !dbg !11415
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11416
  %4 = load i16*, i16** %3, align 4, !dbg !11416
  call void @llvm.dbg.value(metadata i16* %4, metadata !11411, metadata !DIExpression()), !dbg !11415
  %5 = icmp eq i16* %4, null, !dbg !11417
  br i1 %5, label %14, label %6, !dbg !11418

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11419
  call void @llvm.dbg.value(metadata i32 %7, metadata !11412, metadata !DIExpression()), !dbg !11419
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11420
  %9 = load i16, i16* %8, align 2, !dbg !11420
  %10 = add i16 %9, -32767, !dbg !11421
  %11 = icmp ult i16 %10, 2, !dbg !11421
  %12 = add i32 %7, 1, !dbg !11422
  call void @llvm.dbg.value(metadata i32 %12, metadata !11412, metadata !DIExpression()), !dbg !11419
  br i1 %11, label %13, label %6, !dbg !11421, !llvm.loop !11424

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11427
  br label %14, !dbg !11428

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11430 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11434, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 %1, metadata !11435, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11436, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i8* %3, metadata !11437, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 0, metadata !11438, metadata !DIExpression()), !dbg !11446
  %5 = icmp eq i32 %1, 0, !dbg !11447
  br i1 %5, label %16, label %8, !dbg !11448

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11438, metadata !DIExpression()), !dbg !11446
  %7 = icmp eq i32 %15, %1, !dbg !11447
  br i1 %7, label %16, label %8, !dbg !11448, !llvm.loop !11449

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11438, metadata !DIExpression()), !dbg !11446
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11451
  %11 = load i16, i16* %10, align 2, !dbg !11451
  call void @llvm.dbg.value(metadata i16 %11, metadata !11440, metadata !DIExpression()), !dbg !11452
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !11453
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11443, metadata !DIExpression()), !dbg !11452
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11454
  call void @llvm.dbg.value(metadata i32 %13, metadata !11444, metadata !DIExpression()), !dbg !11452
  %14 = icmp slt i32 %13, 0, !dbg !11455
  %15 = add nuw i32 %9, 1, !dbg !11457
  call void @llvm.dbg.value(metadata i32 %15, metadata !11438, metadata !DIExpression()), !dbg !11446
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !11459 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11463, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11464, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11465, metadata !DIExpression()), !dbg !11466
  %2 = sext i16 %0 to i32, !dbg !11467
  %3 = icmp slt i16 %0, 1, !dbg !11469
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11470
  %6 = add nsw i32 %2, -1, !dbg !11470
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11470
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11470
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11464, metadata !DIExpression()), !dbg !11466
  ret %struct.device* %8, !dbg !11471
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11472 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11474, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11475, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i8* %2, metadata !11476, metadata !DIExpression()), !dbg !11479
  %5 = bitcast i32* %4 to i8*, !dbg !11480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11480
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11479
  store i32 0, i32* %4, align 4, !dbg !11481
  call void @llvm.dbg.value(metadata i32* %4, metadata !11477, metadata !DIExpression(DW_OP_deref)), !dbg !11479
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11482
  call void @llvm.dbg.value(metadata i16* %6, metadata !11478, metadata !DIExpression()), !dbg !11479
  %7 = load i32, i32* %4, align 4, !dbg !11483
  call void @llvm.dbg.value(metadata i32 %7, metadata !11477, metadata !DIExpression()), !dbg !11479
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11484
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11485
  ret i32 %8, !dbg !11486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11489, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32* %1, metadata !11490, metadata !DIExpression()), !dbg !11494
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11495
  %4 = load i16*, i16** %3, align 4, !dbg !11495
  call void @llvm.dbg.value(metadata i16* %4, metadata !11491, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 0, metadata !11492, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 0, metadata !11493, metadata !DIExpression()), !dbg !11494
  %5 = icmp eq i16* %4, null, !dbg !11496
  br i1 %5, label %22, label %6, !dbg !11498

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11492, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i16* %8, metadata !11491, metadata !DIExpression()), !dbg !11494
  %9 = load i16, i16* %8, align 2, !dbg !11499
  %10 = icmp eq i16 %9, -32768, !dbg !11503
  call void @llvm.dbg.value(metadata i32 undef, metadata !11492, metadata !DIExpression()), !dbg !11494
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11504
  call void @llvm.dbg.value(metadata i16* %11, metadata !11491, metadata !DIExpression()), !dbg !11494
  %12 = zext i1 %10 to i32, !dbg !11505
  %13 = add i32 %7, %12, !dbg !11505
  call void @llvm.dbg.value(metadata i32 %13, metadata !11492, metadata !DIExpression()), !dbg !11494
  %14 = icmp eq i32 %13, 2, !dbg !11506
  br i1 %14, label %15, label %6, !dbg !11507

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11494
  call void @llvm.dbg.value(metadata i32 %16, metadata !11493, metadata !DIExpression()), !dbg !11494
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11508
  %18 = load i16, i16* %17, align 2, !dbg !11508
  %19 = icmp eq i16 %18, 32767, !dbg !11509
  %20 = add i32 %16, 1, !dbg !11510
  call void @llvm.dbg.value(metadata i32 %20, metadata !11493, metadata !DIExpression()), !dbg !11494
  br i1 %19, label %21, label %15, !dbg !11512, !llvm.loop !11513

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11515
  br label %22, !dbg !11516

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11517
  call void @llvm.dbg.value(metadata i16* %23, metadata !11491, metadata !DIExpression()), !dbg !11494
  ret i16* %23, !dbg !11518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !11519 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11522
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11523
  ret i32* %2, !dbg !11524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !11525 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11667, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11668, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11669, metadata !DIExpression()), !dbg !11670
  ret void, !dbg !11671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !11672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11676, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i32 %1, metadata !11677, metadata !DIExpression()), !dbg !11678
  ret void, !dbg !11679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !11680 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11684, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.value(metadata i32 %1, metadata !11685, metadata !DIExpression()), !dbg !11686
  ret void, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !11688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11692, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i8* %1, metadata !11693, metadata !DIExpression()), !dbg !11694
  ret i32 -134, !dbg !11695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !11696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11700, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i8* %1, metadata !11701, metadata !DIExpression()), !dbg !11702
  ret i32 -134, !dbg !11703
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !11704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11707, metadata !DIExpression()), !dbg !11708
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11709, !srcloc !11715
  call void @llvm.dbg.value(metadata i32 undef, metadata !11712, metadata !DIExpression()) #23, !dbg !11716
  call void @llvm.dbg.value(metadata i32 undef, metadata !11713, metadata !DIExpression()) #23, !dbg !11716
  br label %3, !dbg !11717

3:                                                ; preds = %3, %1
  br label %3, !dbg !11718, !llvm.loop !11721
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11728, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11729, metadata !DIExpression()), !dbg !11730
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i32 0, i32 0), i32 noundef 69) #25, !dbg !11731
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !11736
  unreachable, !dbg !11736
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !11737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11739, metadata !DIExpression()), !dbg !11740
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !11741
  unreachable, !dbg !11741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11744, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11745, metadata !DIExpression()), !dbg !11748
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11749, !srcloc !11715
  call void @llvm.dbg.value(metadata i32 undef, metadata !11712, metadata !DIExpression()) #23, !dbg !11751
  call void @llvm.dbg.value(metadata i32 undef, metadata !11713, metadata !DIExpression()) #23, !dbg !11751
  call void @llvm.dbg.value(metadata i32 undef, metadata !11746, metadata !DIExpression()), !dbg !11748
  %4 = tail call fastcc %struct.k_thread* @k_current_get.105() #26, !dbg !11752
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11747, metadata !DIExpression()), !dbg !11748
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !11753
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.106, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !11753
  %6 = icmp eq %struct.__esf* %1, null, !dbg !11758
  br i1 %6, label %15, label %7, !dbg !11760

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11761, metadata !DIExpression()), !dbg !11766
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !11768
  %9 = load i32, i32* %8, align 4, !dbg !11768
  %10 = and i32 %9, 511, !dbg !11769
  %11 = icmp eq i32 %10, 0, !dbg !11770
  br i1 %11, label %13, label %12, !dbg !11771

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.107, i32 0, i32 0), i32 noundef 69) #25, !dbg !11772
  br label %13, !dbg !11778

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !11779
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.108, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !11779
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !11784
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11761, metadata !DIExpression()), !dbg !11785
  br label %17, !dbg !11790

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !11779
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.108, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !11779
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !11784
  br label %17, !dbg !11791

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !11749
  call void @llvm.dbg.value(metadata i32 %18, metadata !11712, metadata !DIExpression()) #23, !dbg !11751
  call void @llvm.dbg.value(metadata i32 %18, metadata !11746, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i32 undef, metadata !11792, metadata !DIExpression()) #23, !dbg !11795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !11797, !srcloc !11798
  tail call fastcc void @k_thread_abort.109(%struct.k_thread* noundef %4) #24, !dbg !11799
  ret void, !dbg !11802
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.105() unnamed_addr #11 !dbg !11803 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.117() #26, !dbg !11807
  ret %struct.k_thread* %1, !dbg !11808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !11809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11813, metadata !DIExpression()), !dbg !11814
  %2 = icmp ult i32 %0, 5, !dbg !11815
  br i1 %2, label %3, label %6, !dbg !11815

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !11815
  %5 = load i8*, i8** %4, align 4, !dbg !11815
  br label %6, !dbg !11815

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.111, i32 0, i32 0), %1 ], !dbg !11816
  ret i8* %7, !dbg !11818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11819 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11823, metadata !DIExpression()), !dbg !11825
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !11826
  br i1 %2, label %9, label %3, !dbg !11827

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !11828
  call void @llvm.dbg.value(metadata i8* %4, metadata !11824, metadata !DIExpression()), !dbg !11825
  %5 = icmp eq i8* %4, null, !dbg !11829
  br i1 %5, label %9, label %6, !dbg !11831

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !11832
  %8 = icmp eq i8 %7, 0, !dbg !11833
  br i1 %8, label %9, label %10, !dbg !11834

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.110, i32 0, i32 0), metadata !11824, metadata !DIExpression()), !dbg !11825
  br label %10, !dbg !11835

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.110, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !11825
  call void @llvm.dbg.value(metadata i8* %11, metadata !11824, metadata !DIExpression()), !dbg !11825
  ret i8* %11, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.109(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11838 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11842, metadata !DIExpression()), !dbg !11843
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11844, !srcloc !11846
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !11847
  ret void, !dbg !11848
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.117() unnamed_addr #11 !dbg !11849 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11850, !srcloc !11852
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !11853
  ret %struct.k_thread* %1, !dbg !11854
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11859, metadata !DIExpression()), !dbg !11862
  call void @llvm.dbg.value(metadata i32 %1, metadata !11860, metadata !DIExpression()), !dbg !11862
  call void @llvm.dbg.value(metadata i32 %2, metadata !11861, metadata !DIExpression()), !dbg !11862
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !11863
  ret void, !dbg !11864
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11869, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.value(metadata i8* %1, metadata !11870, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.value(metadata i32 %2, metadata !11871, metadata !DIExpression()), !dbg !11872
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !11873
  ret void, !dbg !11874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11875 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !11876
  ret void, !dbg !11877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11882, metadata !DIExpression()), !dbg !11883
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !11884
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11885
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11886
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11887
  %4 = trunc i32 %0 to i8, !dbg !11888
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11889
  store i8 %4, i8* %5, align 4, !dbg !11890
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11891
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !11892
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11893
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11894
  store i8* %8, i8** %9, align 4, !dbg !11895
  ret void, !dbg !11896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11899, metadata !DIExpression()), !dbg !11905
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11906
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11900, metadata !DIExpression()), !dbg !11905
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11907
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11901, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i8* null, metadata !11904, metadata !DIExpression()), !dbg !11905
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11908
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11909
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !11910
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !11911
  ret void, !dbg !11912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !11913 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11917, metadata !DIExpression()), !dbg !11918
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !11919
  ret i8* %2, !dbg !11920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !11921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11926, metadata !DIExpression()), !dbg !11927
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11928
  %3 = load i8, i8* %2, align 1, !dbg !11929
  %4 = and i8 %3, -5, !dbg !11929
  store i8 %4, i8* %2, align 1, !dbg !11929
  ret void, !dbg !11930
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !11931 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !11934
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !11935
  %3 = ptrtoint i8* %2 to i32, !dbg !11944
  %4 = add i32 %3, 2048, !dbg !11945
  call void @llvm.dbg.value(metadata i32 %4, metadata !11939, metadata !DIExpression()) #23, !dbg !11946
  call void @llvm.dbg.value(metadata i32 %4, metadata !11947, metadata !DIExpression()) #23, !dbg !11950
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11952, !srcloc !11953
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11954
  %6 = or i32 %5, 512, !dbg !11954
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11954
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -2, i32 noundef 255) #25, !dbg !11955
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -5, i32 noundef 0) #25, !dbg !11958
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -12, i32 noundef 0) #25, !dbg !11959
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -11, i32 noundef 0) #25, !dbg !11960
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -10, i32 noundef 0) #25, !dbg !11961
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -4, i32 noundef 0) #25, !dbg !11962
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11963
  %8 = or i32 %7, 458752, !dbg !11963
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11963
  tail call void @z_arm_fault_init() #25, !dbg !11964
  tail call void @z_arm_cpu_idle_init() #25, !dbg !11965
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11966
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11969
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !11970
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #23, !dbg !11970
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11933, metadata !DIExpression()), !dbg !11971
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !11972
  call void @z_device_state_init() #25, !dbg !11973
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !11974
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !11975
  %10 = call fastcc i8* @prepare_multithreading() #24, !dbg !11976
  call fastcc void @switch_to_main_thread(i8* noundef %10) #28, !dbg !11977
  unreachable, !dbg !11977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1953, metadata !DIExpression()), !dbg !11978
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11979
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11979
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11978
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11978
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11980
  br i1 %7, label %8, label %35, !dbg !11981

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1954, metadata !DIExpression()), !dbg !11978
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11982
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11982
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1964, metadata !DIExpression()), !dbg !11983
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11984
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11984
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !11985
  call void @llvm.dbg.value(metadata i32 %14, metadata !1968, metadata !DIExpression()), !dbg !11983
  %15 = icmp eq %struct.device* %11, null, !dbg !11986
  br i1 %15, label %32, label %16, !dbg !11988

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11989
  br i1 %17, label %26, label %18, !dbg !11992

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11993
  call void @llvm.dbg.value(metadata i32 %19, metadata !1968, metadata !DIExpression()), !dbg !11983
  %20 = icmp ult i32 %19, 255, !dbg !11995
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %21, metadata !1968, metadata !DIExpression()), !dbg !11983
  %22 = trunc i32 %21 to i8, !dbg !11996
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11997
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11997
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11998
  store i8 %22, i8* %25, align 1, !dbg !11999
  br label %26, !dbg !12000

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12001
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12001
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12002
  %30 = load i8, i8* %29, align 1, !dbg !12003
  %31 = or i8 %30, 1, !dbg !12003
  store i8 %31, i8* %29, align 1, !dbg !12003
  br label %32, !dbg !12004

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12005
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1954, metadata !DIExpression()), !dbg !11978
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11980
  br i1 %34, label %8, label %35, !dbg !11981, !llvm.loop !12006

35:                                               ; preds = %32, %1
  ret void, !dbg !12008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.126(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12011, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %1, metadata !12012, metadata !DIExpression()), !dbg !12013
  %3 = trunc i32 %1 to i8, !dbg !12014
  %4 = shl i8 %3, 4, !dbg !12014
  %5 = and i32 %0, 15, !dbg !12017
  %6 = add nsw i32 %5, -4, !dbg !12018
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12019
  store volatile i8 %4, i8* %7, align 1, !dbg !12020
  ret void, !dbg !12021
}

; Function Attrs: optsize
declare !dbg !12022 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12026, metadata !DIExpression()), !dbg !12027
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12028
  store i8 1, i8* %2, align 1, !dbg !12029
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12030
  store i8 1, i8* %3, align 4, !dbg !12031
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #25, !dbg !12032
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12033
  ret void, !dbg !12034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12035 {
  tail call void @z_sched_init() #25, !dbg !12040
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12041
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.127, i32 0, i32 0)) #25, !dbg !12042
  call void @llvm.dbg.value(metadata i8* %1, metadata !12039, metadata !DIExpression()), !dbg !12043
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12044
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12045
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12046
  ret i8* %1, !dbg !12047
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12052, metadata !DIExpression()), !dbg !12053
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12054
  unreachable, !dbg !12055
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12058, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i8* %1, metadata !12059, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i8* %2, metadata !12060, metadata !DIExpression()), !dbg !12061
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12062
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12063
  tail call void @boot_banner() #25, !dbg !12064
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12065
  tail call void @z_init_static_threads() #25, !dbg !12066
  tail call void @main() #25, !dbg !12067
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12068
  %5 = and i8 %4, -2, !dbg !12068
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12068
  ret void, !dbg !12069
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !12070 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12080, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.value(metadata i8* %1, metadata !12081, metadata !DIExpression()), !dbg !12082
  ret void, !dbg !12083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !12084 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12086, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata i8* %1, metadata !12087, metadata !DIExpression()), !dbg !12088
  ret void, !dbg !12089
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12090 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12091, !srcloc !12098
  call void @llvm.dbg.value(metadata i32 %1, metadata !12094, metadata !DIExpression()) #23, !dbg !12099
  %2 = icmp ne i32 %1, 0, !dbg !12100
  ret i1 %2, !dbg !12101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12102 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12104
  %3 = load i8, i8* %2, align 4, !dbg !12105
  %4 = or i8 %3, 1, !dbg !12105
  store i8 %4, i8* %2, align 4, !dbg !12105
  ret void, !dbg !12106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12107 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12108
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12109
  %3 = load i8, i8* %2, align 4, !dbg !12110
  %4 = and i8 %3, -2, !dbg !12110
  store i8 %4, i8* %2, align 4, !dbg !12110
  ret void, !dbg !12111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !12112 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12113
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12114
  %3 = load i8, i8* %2, align 4, !dbg !12114
  %4 = and i8 %3, 1, !dbg !12115
  %5 = icmp ne i8 %4, 0, !dbg !12116
  ret i1 %5, !dbg !12117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !12118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12122, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata i8* %1, metadata !12123, metadata !DIExpression()), !dbg !12124
  ret i32 -88, !dbg !12125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !12126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12130, metadata !DIExpression()), !dbg !12131
  ret i8* null, !dbg !12132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !12133 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12137, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i8* %1, metadata !12138, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 %2, metadata !12139, metadata !DIExpression()), !dbg !12140
  ret i32 -88, !dbg !12141
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2086, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i8* %1, metadata !2087, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 %2, metadata !2088, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 0, metadata !2089, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i8 undef, metadata !2091, metadata !DIExpression()), !dbg !12142
  %4 = icmp eq i8* %1, null, !dbg !12143
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12145
  br i1 %6, label %46, label %7, !dbg !12145

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12146
  %9 = load i8, i8* %8, align 1, !dbg !12146
  call void @llvm.dbg.value(metadata i8 %9, metadata !2091, metadata !DIExpression()), !dbg !12142
  %10 = add i32 %2, -1, !dbg !12147
  call void @llvm.dbg.value(metadata i32 %10, metadata !2088, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i8 0, metadata !2092, metadata !DIExpression()), !dbg !12148
  call void @llvm.dbg.value(metadata i8 %9, metadata !2091, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 0, metadata !2089, metadata !DIExpression()), !dbg !12142
  %11 = icmp eq i8 %9, 0, !dbg !12149
  br i1 %11, label %12, label %15, !dbg !12151

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12152
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12153
  store i8 0, i8* %14, align 1, !dbg !12154
  br label %46, !dbg !12155

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2092, metadata !DIExpression()), !dbg !12148
  call void @llvm.dbg.value(metadata i8 %17, metadata !2091, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 %18, metadata !2089, metadata !DIExpression()), !dbg !12142
  %19 = zext i8 %17 to i32, !dbg !12156
  %20 = zext i8 %16 to i32, !dbg !12157
  %21 = shl nuw i32 1, %20, !dbg !12157
  call void @llvm.dbg.value(metadata i32 %21, metadata !2090, metadata !DIExpression()), !dbg !12142
  %22 = and i32 %21, %19, !dbg !12159
  %23 = icmp eq i32 %22, 0, !dbg !12161
  br i1 %23, label %42, label %24, !dbg !12162

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12163
  %26 = sub i32 %10, %18, !dbg !12164
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12165
  %28 = load i8*, i8** %27, align 4, !dbg !12165
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12166
  %30 = load i32, i32* %29, align 4, !dbg !12166
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !12167
  %32 = add i32 %31, %18, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %32, metadata !2089, metadata !DIExpression()), !dbg !12142
  %33 = trunc i32 %21 to i8, !dbg !12169
  %34 = xor i8 %33, -1, !dbg !12169
  %35 = and i8 %17, %34, !dbg !12169
  call void @llvm.dbg.value(metadata i8 %35, metadata !2091, metadata !DIExpression()), !dbg !12142
  %36 = icmp eq i8 %35, 0, !dbg !12170
  br i1 %36, label %12, label %37, !dbg !12172

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12173
  %39 = sub i32 %10, %32, !dbg !12175
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.130, i32 0, i32 0), i32 noundef 1) #24, !dbg !12176
  %41 = add i32 %40, %32, !dbg !12177
  call void @llvm.dbg.value(metadata i32 %41, metadata !2089, metadata !DIExpression()), !dbg !12142
  br label %42, !dbg !12178

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12142
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12142
  call void @llvm.dbg.value(metadata i8 %44, metadata !2091, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 %43, metadata !2089, metadata !DIExpression()), !dbg !12142
  %45 = add i8 %16, 1, !dbg !12179
  call void @llvm.dbg.value(metadata i8 %45, metadata !2092, metadata !DIExpression()), !dbg !12148
  br label %15, !dbg !12151

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.131, i32 0, i32 0), %3 ], !dbg !12142
  ret i8* %47, !dbg !12180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12181 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12185, metadata !DIExpression()), !dbg !12190
  call void @llvm.dbg.value(metadata i32 %1, metadata !12186, metadata !DIExpression()), !dbg !12190
  call void @llvm.dbg.value(metadata i8* %2, metadata !12187, metadata !DIExpression()), !dbg !12190
  call void @llvm.dbg.value(metadata i32 %3, metadata !12188, metadata !DIExpression()), !dbg !12190
  %5 = icmp ult i32 %1, %3, !dbg !12191
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12191
  call void @llvm.dbg.value(metadata i32 %6, metadata !12189, metadata !DIExpression()), !dbg !12190
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12192
  ret i32 %6, !dbg !12193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12194 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12198, metadata !DIExpression()), !dbg !12199
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12200
  ret void, !dbg !12201
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12211, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12212, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i32 %2, metadata !12213, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12214, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i8* %4, metadata !12215, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i8* %5, metadata !12216, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i8* %6, metadata !12217, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i32 %7, metadata !12218, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i32 %8, metadata !12219, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i8* undef, metadata !12220, metadata !DIExpression()), !dbg !12222
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12223
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !12224
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12225
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !12226
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !12227
  call void @llvm.dbg.value(metadata i8* %13, metadata !12221, metadata !DIExpression()), !dbg !12222
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12228
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12229
  store i8* null, i8** %14, align 4, !dbg !12230
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12231
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12231
  br i1 %16, label %20, label %17, !dbg !12233

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 5, !dbg !12234
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 4, !dbg !12234
  br label %20, !dbg !12235

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12222
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12236
  store %struct.k_heap* %21, %struct.k_heap** %22, align 4, !dbg !12238
  ret i8* %13, !dbg !12239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !12240 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12245, metadata !DIExpression()), !dbg !12246
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12247
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !12248
  ret void, !dbg !12249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !12250 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12255, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 %1, metadata !12256, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 %2, metadata !12257, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 %3, metadata !12258, metadata !DIExpression()), !dbg !12259
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12260
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12261
  %6 = trunc i32 %3 to i8, !dbg !12262
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12263
  store i8 %6, i8* %7, align 4, !dbg !12264
  %8 = trunc i32 %2 to i8, !dbg !12265
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12266
  store i8 %8, i8* %9, align 1, !dbg !12267
  %10 = trunc i32 %1 to i8, !dbg !12268
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12269
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12269
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12269
  store i8 %10, i8* %13, align 2, !dbg !12270
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12271
  store i8 0, i8* %14, align 1, !dbg !12272
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !12273
  ret void, !dbg !12274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !12275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12279, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12280, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i32 %1, metadata !12281, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i32 0, metadata !12286, metadata !DIExpression()), !dbg !12287
  %3 = add i32 %1, 7, !dbg !12288
  %4 = and i32 %3, -8, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %4, metadata !12282, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i8* undef, metadata !12285, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i32 %4, metadata !12283, metadata !DIExpression()), !dbg !12287
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !12290
  call void @llvm.dbg.value(metadata i8* %5, metadata !12284, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i32 0, metadata !12286, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i8* %5, metadata !12284, metadata !DIExpression()), !dbg !12287
  ret i8* %5, !dbg !12291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !12292 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12297, metadata !DIExpression()), !dbg !12298
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12299
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12300
  ret void, !dbg !12301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !12302 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12304, metadata !DIExpression()), !dbg !12305
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12306
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !12307
  ret void, !dbg !12308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !12309 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12313, metadata !DIExpression()), !dbg !12314
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12315
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12316
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12317
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12318
  ret void, !dbg !12319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !12320 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12325, metadata !DIExpression()), !dbg !12326
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12327
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12328
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12329
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12330
  ret void, !dbg !12331
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12332 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12349, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12340, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12341, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 %2, metadata !12342, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12343, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i8* %4, metadata !12344, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i8* %5, metadata !12345, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i8* %6, metadata !12346, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 %7, metadata !12347, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32 %8, metadata !12348, metadata !DIExpression()), !dbg !12350
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !12351
  %13 = icmp eq i64 %11, -1, !dbg !12352
  br i1 %13, label %15, label %14, !dbg !12354

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !12355
  br label %15, !dbg !12357

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12359 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12364, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12363, metadata !DIExpression()), !dbg !12365
  %4 = icmp eq i64 %3, 0, !dbg !12366
  br i1 %4, label %5, label %6, !dbg !12368

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12369
  br label %7, !dbg !12371

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12372
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12379, metadata !DIExpression()), !dbg !12380
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12381, !srcloc !12383
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12384
  ret void, !dbg !12385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12386 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12389, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12388, metadata !DIExpression()), !dbg !12390
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12391
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12392
  ret void, !dbg !12393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12394 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12396, metadata !DIExpression()), !dbg !12415
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12416

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12417
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12413, metadata !DIExpression()), !dbg !12418
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12419

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12396, metadata !DIExpression()), !dbg !12415
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12420
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12420
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12423
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12423
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12424
  %9 = load i32, i32* %8, align 4, !dbg !12424
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12425
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12425
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12426
  %13 = load i8*, i8** %12, align 4, !dbg !12426
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12427
  %15 = load i8*, i8** %14, align 4, !dbg !12427
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12428
  %17 = load i8*, i8** %16, align 4, !dbg !12428
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12429
  %19 = load i32, i32* %18, align 4, !dbg !12429
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12430
  %21 = load i32, i32* %20, align 4, !dbg !12430
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !12431
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12432
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12433
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12434
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12434
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12435
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12396, metadata !DIExpression()), !dbg !12415
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12436
  br i1 %27, label %2, label %1, !dbg !12416, !llvm.loop !12438

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12417
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12413, metadata !DIExpression()), !dbg !12418
  br label %29, !dbg !12419

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12440
  ret void, !dbg !12441

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12413, metadata !DIExpression()), !dbg !12418
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12442
  %33 = load i32, i32* %32, align 4, !dbg !12442
  %34 = icmp eq i32 %33, -1, !dbg !12446
  br i1 %34, label %43, label %35, !dbg !12447

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12448
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12448
  %38 = icmp sgt i32 %33, 0, !dbg !12450
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12450
  %40 = zext i32 %39 to i64, !dbg !12450
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.143(i64 noundef %40) #24, !dbg !12450
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12451
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !12451
  br label %43, !dbg !12452

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12453
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12413, metadata !DIExpression()), !dbg !12418
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12454
  br i1 %45, label %30, label %29, !dbg !12419, !llvm.loop !12456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.143(i64 noundef %0) unnamed_addr #5 !dbg !12458 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12460, metadata !DIExpression()), !dbg !12461
  call void @llvm.dbg.value(metadata i64 %0, metadata !12462, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 1000, metadata !12465, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 10000, metadata !12466, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i8 1, metadata !12467, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i8 0, metadata !12468, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i8 1, metadata !12469, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i8 0, metadata !12470, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i8 1, metadata !12471, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i8 0, metadata !12472, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i64 0, metadata !12473, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i64 0, metadata !12473, metadata !DIExpression()), !dbg !12477
  %2 = mul i64 %0, 10, !dbg !12479
  ret i64 %2, !dbg !12485
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !12486 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12488, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i8* %1, metadata !12489, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i8* %2, metadata !12490, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i8* %3, metadata !12491, metadata !DIExpression()), !dbg !12492
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12493
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12494
  %7 = load i8, i8* %6, align 4, !dbg !12495
  %8 = or i8 %7, 4, !dbg !12495
  store i8 %8, i8* %6, align 4, !dbg !12495
  tail call void @z_thread_essential_clear() #24, !dbg !12496
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !12497
  unreachable, !dbg !12497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !12498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12502, metadata !DIExpression()), !dbg !12503
  ret i32 -134, !dbg !12504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !12505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12509, metadata !DIExpression()), !dbg !12511
  call void @llvm.dbg.value(metadata i32 %1, metadata !12510, metadata !DIExpression()), !dbg !12511
  ret i32 -134, !dbg !12512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !12513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12520, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12521, metadata !DIExpression()), !dbg !12522
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12523
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12525
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12522
  ret i32 %6, !dbg !12526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !12527 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12531, metadata !DIExpression()), !dbg !12532
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12533
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12532
  ret i32 %3, !dbg !12535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12536 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12538
  ret void, !dbg !12539
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !12540 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12542, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i8* %1, metadata !12543, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i8* %2, metadata !12544, metadata !DIExpression()), !dbg !12545
  br label %4, !dbg !12546

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12547, !srcloc !12554
  call void @llvm.dbg.value(metadata i32 undef, metadata !12550, metadata !DIExpression()) #23, !dbg !12555
  call void @llvm.dbg.value(metadata i32 undef, metadata !12551, metadata !DIExpression()) #23, !dbg !12555
  tail call fastcc void @k_cpu_idle() #24, !dbg !12556
  br label %4, !dbg !12546, !llvm.loop !12557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12559 {
  tail call void @arch_cpu_idle() #25, !dbg !12560
  ret void, !dbg !12561
}

; Function Attrs: optsize
declare !dbg !12562 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !12563 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12581, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %1, metadata !12582, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %2, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %3, metadata !12584, metadata !DIExpression()), !dbg !12585
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !12586
  store i32 %2, i32* %5, align 4, !dbg !12587
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !12588
  store i32 %3, i32* %6, align 4, !dbg !12589
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !12590
  store i8* %1, i8** %7, align 4, !dbg !12591
  %8 = mul i32 %3, %2, !dbg !12592
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !12593
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !12594
  store i8* %9, i8** %10, align 4, !dbg !12595
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !12596
  store i8* %1, i8** %11, align 4, !dbg !12597
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !12598
  store i8* %1, i8** %12, align 4, !dbg !12599
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !12600
  store i32 0, i32* %13, align 4, !dbg !12601
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !12602
  store i8 0, i8* %14, align 4, !dbg !12603
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !12604
  tail call fastcc void @z_waitq_init.146(%struct._wait_q_t* noundef %15) #24, !dbg !12605
  ret void, !dbg !12606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.146(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !12607 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12611, metadata !DIExpression()), !dbg !12612
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12613
  tail call fastcc void @sys_dlist_init.147(%struct._dnode* noundef %2) #24, !dbg !12614
  ret void, !dbg !12615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.147(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !12616 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12621, metadata !DIExpression()), !dbg !12622
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12623
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12624
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12625
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12626
  ret void, !dbg !12627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12628 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12632, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata i32 %1, metadata !12633, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata i32 %2, metadata !12634, metadata !DIExpression()), !dbg !12638
  %5 = bitcast i32* %4 to i8*, !dbg !12639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12639
  call void @llvm.dbg.value(metadata i32* %4, metadata !12637, metadata !DIExpression(DW_OP_deref)), !dbg !12638
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !12640
  br i1 %6, label %13, label %7, !dbg !12642

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %8, metadata !12637, metadata !DIExpression()), !dbg !12638
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #24, !dbg !12645
  call void @llvm.dbg.value(metadata i8* %9, metadata !12635, metadata !DIExpression()), !dbg !12638
  %10 = icmp eq i8* %9, null, !dbg !12646
  br i1 %10, label %13, label %11, !dbg !12648

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #24, !dbg !12649
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !12651
  store i8 1, i8* %12, align 4, !dbg !12652
  call void @llvm.dbg.value(metadata i32 0, metadata !12636, metadata !DIExpression()), !dbg !12638
  br label %13, !dbg !12653

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !12654
  call void @llvm.dbg.value(metadata i32 %14, metadata !12636, metadata !DIExpression()), !dbg !12638
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12655
  ret i32 %14, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #20 !dbg !12657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12662, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 %1, metadata !12663, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32* %2, metadata !12664, metadata !DIExpression()), !dbg !12665
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !12666
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !12666
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !12666
  store i32 %6, i32* %2, align 4, !dbg !12666
  ret i1 %5, !dbg !12667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !12668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12672, metadata !DIExpression()), !dbg !12673
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #25, !dbg !12674
  ret i8* %2, !dbg !12675
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !12676 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12680, metadata !DIExpression()), !dbg !12681
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !12682
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #24, !dbg !12682
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !12682
  br i1 %4, label %5, label %15, !dbg !12684

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !12685
  %7 = load i8, i8* %6, align 4, !dbg !12685
  %8 = and i8 %7, 1, !dbg !12687
  %9 = icmp eq i8 %8, 0, !dbg !12688
  br i1 %9, label %15, label %10, !dbg !12689

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !12690
  %12 = load i8*, i8** %11, align 4, !dbg !12690
  tail call void @k_free(i8* noundef %12) #25, !dbg !12692
  %13 = load i8, i8* %6, align 4, !dbg !12693
  %14 = and i8 %13, -2, !dbg !12693
  store i8 %14, i8* %6, align 4, !dbg !12693
  br label %15, !dbg !12694

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !12681
  ret i32 %16, !dbg !12695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !12696 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12700, metadata !DIExpression()), !dbg !12701
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12702
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !12703
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !12704
  ret %struct.k_thread* %4, !dbg !12705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12706 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12710, metadata !DIExpression()), !dbg !12711
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !12712
  br i1 %2, label %6, label %3, !dbg !12712

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12713
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12713
  br label %6, !dbg !12712

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12712
  ret %struct._dnode* %7, !dbg !12714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !12715 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12719, metadata !DIExpression()), !dbg !12720
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12721
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12721
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12722
  ret i1 %4, !dbg !12723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12724 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12734, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12732, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.value(metadata i8* %1, metadata !12733, metadata !DIExpression()), !dbg !12742
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !12743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12744, metadata !DIExpression()) #23, !dbg !12751
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12753, !srcloc !12759
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %6, metadata !12756, metadata !DIExpression()) #23, !dbg !12760
  call void @llvm.dbg.value(metadata i32 undef, metadata !12757, metadata !DIExpression()) #23, !dbg !12760
  call void @llvm.dbg.value(metadata i32 %6, metadata !12750, metadata !DIExpression()) #23, !dbg !12751
  call void @llvm.dbg.value(metadata i32 %6, metadata !12736, metadata !DIExpression()), !dbg !12742
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !12761
  %8 = load i32, i32* %7, align 4, !dbg !12761
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !12763
  %10 = load i32, i32* %9, align 4, !dbg !12763
  %11 = icmp ult i32 %8, %10, !dbg !12764
  br i1 %11, label %12, label %42, !dbg !12765

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !12766
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #25, !dbg !12768
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12735, metadata !DIExpression()), !dbg !12742
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !12769
  br i1 %15, label %24, label %16, !dbg !12771

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !12772
  %18 = load i8*, i8** %17, align 4, !dbg !12772
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !12774
  %20 = load i32, i32* %19, align 4, !dbg !12774
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #25, !dbg !12775
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12776, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.value(metadata i32 0, metadata !12781, metadata !DIExpression()), !dbg !12782
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 6, i32 1, !dbg !12784
  store i32 0, i32* %22, align 4, !dbg !12785
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #25, !dbg !12786
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12787
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #25, !dbg !12787
  br label %53, !dbg !12788

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !12789
  %26 = load i8*, i8** %25, align 4, !dbg !12789
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !12791
  %28 = load i32, i32* %27, align 4, !dbg !12791
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #25, !dbg !12792
  %30 = load i32, i32* %27, align 4, !dbg !12793
  %31 = load i8*, i8** %25, align 4, !dbg !12794
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !12794
  store i8* %32, i8** %25, align 4, !dbg !12794
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !12795
  %34 = load i8*, i8** %33, align 4, !dbg !12795
  %35 = icmp eq i8* %32, %34, !dbg !12797
  br i1 %35, label %36, label %39, !dbg !12798

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !12799
  %38 = load i8*, i8** %37, align 4, !dbg !12799
  store i8* %38, i8** %25, align 4, !dbg !12801
  br label %39, !dbg !12802

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !12803
  %41 = add i32 %40, 1, !dbg !12803
  store i32 %41, i32* %7, align 4, !dbg !12803
  call void @llvm.dbg.value(metadata i32 0, metadata !12741, metadata !DIExpression()), !dbg !12742
  br label %51, !dbg !12804

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !12734, metadata !DIExpression()), !dbg !12742
  %44 = icmp eq i64 %43, 0, !dbg !12805
  br i1 %44, label %51, label %45, !dbg !12807

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12808
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !12810
  store i8* %1, i8** %47, align 4, !dbg !12811
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !12812
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12813
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #25, !dbg !12813
  call void @llvm.dbg.value(metadata i32 %50, metadata !12741, metadata !DIExpression()), !dbg !12742
  br label %53, !dbg !12814

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !12815
  call void @llvm.dbg.value(metadata i32 %52, metadata !12741, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.value(metadata i32 %6, metadata !12816, metadata !DIExpression()) #23, !dbg !12822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12821, metadata !DIExpression()) #23, !dbg !12822
  call void @llvm.dbg.value(metadata i32 %6, metadata !12824, metadata !DIExpression()) #23, !dbg !12827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !12829, !srcloc !12830
  br label %53, !dbg !12831

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !12742
  ret i32 %54, !dbg !12832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._gpio_init_config* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !12833 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12843, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !12844, metadata !DIExpression()), !dbg !12845
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !12846
  %4 = load i32, i32* %3, align 4, !dbg !12846
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !12847
  store i32 %4, i32* %5, align 4, !dbg !12848
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !12849
  %7 = load i32, i32* %6, align 4, !dbg !12849
  %8 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !12850
  store i32 %7, i32* %8, align 4, !dbg !12851
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !12852
  %10 = load i32, i32* %9, align 4, !dbg !12852
  %11 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !12853
  store i32 %10, i32* %11, align 4, !dbg !12854
  ret void, !dbg !12855
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12856 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12862, metadata !DIExpression()), !dbg !12866
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12860, metadata !DIExpression()), !dbg !12866
  call void @llvm.dbg.value(metadata i8* %1, metadata !12861, metadata !DIExpression()), !dbg !12866
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !12867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12744, metadata !DIExpression()) #23, !dbg !12868
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12870, !srcloc !12759
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !12870
  call void @llvm.dbg.value(metadata i32 %6, metadata !12756, metadata !DIExpression()) #23, !dbg !12872
  call void @llvm.dbg.value(metadata i32 undef, metadata !12757, metadata !DIExpression()) #23, !dbg !12872
  call void @llvm.dbg.value(metadata i32 %6, metadata !12750, metadata !DIExpression()) #23, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %6, metadata !12863, metadata !DIExpression()), !dbg !12866
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !12873
  %8 = load i32, i32* %7, align 4, !dbg !12873
  %9 = icmp eq i32 %8, 0, !dbg !12875
  br i1 %9, label %51, label %10, !dbg !12876

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !12877
  %12 = load i8*, i8** %11, align 4, !dbg !12877
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !12879
  %14 = load i32, i32* %13, align 4, !dbg !12879
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #25, !dbg !12880
  %16 = load i32, i32* %13, align 4, !dbg !12881
  %17 = load i8*, i8** %11, align 4, !dbg !12882
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !12882
  store i8* %18, i8** %11, align 4, !dbg !12882
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !12883
  %20 = load i8*, i8** %19, align 4, !dbg !12883
  %21 = icmp eq i8* %18, %20, !dbg !12885
  br i1 %21, label %22, label %25, !dbg !12886

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !12887
  %24 = load i8*, i8** %23, align 4, !dbg !12887
  store i8* %24, i8** %11, align 4, !dbg !12889
  br label %25, !dbg !12890

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !12891
  %27 = add i32 %26, -1, !dbg !12891
  store i32 %27, i32* %7, align 4, !dbg !12891
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !12892
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #25, !dbg !12893
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !12864, metadata !DIExpression()), !dbg !12866
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !12894
  br i1 %30, label %60, label %31, !dbg !12896

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !12897
  %33 = load i8*, i8** %32, align 4, !dbg !12897
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !12899
  %35 = load i8*, i8** %34, align 4, !dbg !12899
  %36 = load i32, i32* %13, align 4, !dbg !12900
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #25, !dbg !12901
  %38 = load i32, i32* %13, align 4, !dbg !12902
  %39 = load i8*, i8** %32, align 4, !dbg !12903
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !12903
  store i8* %40, i8** %32, align 4, !dbg !12903
  %41 = load i8*, i8** %19, align 4, !dbg !12904
  %42 = icmp eq i8* %40, %41, !dbg !12906
  br i1 %42, label %43, label %46, !dbg !12907

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !12908
  %45 = load i8*, i8** %44, align 4, !dbg !12908
  store i8* %45, i8** %32, align 4, !dbg !12910
  br label %46, !dbg !12911

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !12912
  %48 = add i32 %47, 1, !dbg !12912
  store i32 %48, i32* %7, align 4, !dbg !12912
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !12776, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata i32 0, metadata !12781, metadata !DIExpression()), !dbg !12913
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 6, i32 1, !dbg !12915
  store i32 0, i32* %49, align 4, !dbg !12916
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #25, !dbg !12917
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12918
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #25, !dbg !12918
  br label %62, !dbg !12919

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !12862, metadata !DIExpression()), !dbg !12866
  %53 = icmp eq i64 %52, 0, !dbg !12920
  br i1 %53, label %60, label %54, !dbg !12922

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12923
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !12925
  store i8* %1, i8** %56, align 4, !dbg !12926
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !12927
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12928
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #25, !dbg !12928
  call void @llvm.dbg.value(metadata i32 %59, metadata !12865, metadata !DIExpression()), !dbg !12866
  br label %62, !dbg !12929

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !12930
  call void @llvm.dbg.value(metadata i32 %61, metadata !12865, metadata !DIExpression()), !dbg !12866
  call void @llvm.dbg.value(metadata i32 %6, metadata !12816, metadata !DIExpression()) #23, !dbg !12931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12821, metadata !DIExpression()) #23, !dbg !12931
  call void @llvm.dbg.value(metadata i32 %6, metadata !12824, metadata !DIExpression()) #23, !dbg !12933
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !12935, !srcloc !12830
  br label %62, !dbg !12936

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !12866
  ret i32 %63, !dbg !12937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12938 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12942, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata i8* %1, metadata !12943, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12744, metadata !DIExpression()) #23, !dbg !12947
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12949, !srcloc !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12756, metadata !DIExpression()) #23, !dbg !12951
  call void @llvm.dbg.value(metadata i32 undef, metadata !12757, metadata !DIExpression()) #23, !dbg !12951
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !12947
  call void @llvm.dbg.value(metadata i32 undef, metadata !12944, metadata !DIExpression()), !dbg !12946
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !12952
  %5 = load i32, i32* %4, align 4, !dbg !12952
  %6 = icmp eq i32 %5, 0, !dbg !12954
  br i1 %6, label %13, label %7, !dbg !12955

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !12956
  %9 = load i8*, i8** %8, align 4, !dbg !12956
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !12958
  %11 = load i32, i32* %10, align 4, !dbg !12958
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #25, !dbg !12959
  call void @llvm.dbg.value(metadata i32 0, metadata !12945, metadata !DIExpression()), !dbg !12946
  br label %13, !dbg !12960

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !12961
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !12949
  call void @llvm.dbg.value(metadata i32 %15, metadata !12756, metadata !DIExpression()) #23, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %15, metadata !12750, metadata !DIExpression()) #23, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %15, metadata !12944, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata i32 %14, metadata !12945, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12816, metadata !DIExpression()) #23, !dbg !12962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12821, metadata !DIExpression()) #23, !dbg !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12824, metadata !DIExpression()) #23, !dbg !12964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !12966, !srcloc !12830
  ret i32 %14, !dbg !12967
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !12968 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12972, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12744, metadata !DIExpression()) #23, !dbg !12976
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12978, !srcloc !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12756, metadata !DIExpression()) #23, !dbg !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12757, metadata !DIExpression()) #23, !dbg !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !12976
  call void @llvm.dbg.value(metadata i32 undef, metadata !12973, metadata !DIExpression()), !dbg !12975
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #25, !dbg !12981
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12974, metadata !DIExpression()), !dbg !12975
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12982
  br i1 %5, label %11, label %6, !dbg !12983

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12776, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 -35, metadata !12781, metadata !DIExpression()), !dbg !12984
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 6, i32 1, !dbg !12987
  store i32 -35, i32* %8, align 4, !dbg !12988
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !12989
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #25, !dbg !12981
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12974, metadata !DIExpression()), !dbg !12975
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !12982
  br i1 %10, label %11, label %6, !dbg !12983, !llvm.loop !12990

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !12978
  call void @llvm.dbg.value(metadata i32 %12, metadata !12756, metadata !DIExpression()) #23, !dbg !12980
  call void @llvm.dbg.value(metadata i32 %12, metadata !12750, metadata !DIExpression()) #23, !dbg !12976
  call void @llvm.dbg.value(metadata i32 %12, metadata !12973, metadata !DIExpression()), !dbg !12975
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !12992
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !12993
  store i32 0, i32* %14, align 4, !dbg !12994
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !12995
  %16 = load i8*, i8** %15, align 4, !dbg !12995
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !12996
  store i8* %16, i8** %17, align 4, !dbg !12997
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !12998
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #25, !dbg !12998
  ret void, !dbg !12999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !13000 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13011, metadata !DIExpression()), !dbg !13012
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13013
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13014
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13015
  store i32 0, i32* %3, align 4, !dbg !13016
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13017
  tail call fastcc void @z_waitq_init.152(%struct._wait_q_t* noundef %4) #24, !dbg !13018
  ret i32 0, !dbg !13019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.152(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !13020 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13024, metadata !DIExpression()), !dbg !13025
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13026
  tail call fastcc void @sys_dlist_init.153(%struct._dnode* noundef %2) #24, !dbg !13027
  ret void, !dbg !13028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.153(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13029 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13034, metadata !DIExpression()), !dbg !13035
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13036
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13037
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13038
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13041 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13050, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13049, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i8 0, metadata !13057, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13063, metadata !DIExpression()) #23, !dbg !13070
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13072, !srcloc !13078
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13072
  call void @llvm.dbg.value(metadata i32 %5, metadata !13075, metadata !DIExpression()) #23, !dbg !13079
  call void @llvm.dbg.value(metadata i32 undef, metadata !13076, metadata !DIExpression()) #23, !dbg !13079
  call void @llvm.dbg.value(metadata i32 %5, metadata !13069, metadata !DIExpression()) #23, !dbg !13070
  call void @llvm.dbg.value(metadata i32 %5, metadata !13052, metadata !DIExpression()), !dbg !13062
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13080
  %7 = load i32, i32* %6, align 4, !dbg !13080
  %8 = icmp eq i32 %7, 0, !dbg !13080
  br i1 %8, label %14, label %9, !dbg !13080

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13080
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !13080
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13080
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13080
  br i1 %13, label %20, label %29, !dbg !13082, !prof !13083

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13084
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !13086
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !13086
  %18 = load i8, i8* %17, align 2, !dbg !13086
  %19 = sext i8 %18 to i32, !dbg !13084
  br label %23, !dbg !13087

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13088
  %22 = load i32, i32* %21, align 4, !dbg !13088
  br label %23, !dbg !13087

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !13089
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !13087
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13090
  store i32 %25, i32* %26, align 4, !dbg !13091
  %27 = add i32 %7, 1, !dbg !13092
  store i32 %27, i32* %6, align 4, !dbg !13092
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13093
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !13094
  call void @llvm.dbg.value(metadata i32 %5, metadata !13095, metadata !DIExpression()) #23, !dbg !13101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13100, metadata !DIExpression()) #23, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %5, metadata !13103, metadata !DIExpression()) #23, !dbg !13106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13108, !srcloc !13109
  br label %78, !dbg !13110

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !13111
  br i1 %30, label %31, label %32, !dbg !13113, !prof !13114

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !13095, metadata !DIExpression()) #23, !dbg !13115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13100, metadata !DIExpression()) #23, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %5, metadata !13103, metadata !DIExpression()) #23, !dbg !13118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13120, !srcloc !13109
  br label %78, !dbg !13121

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !13122
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !13122
  %35 = load i8, i8* %34, align 2, !dbg !13122
  %36 = sext i8 %35 to i32, !dbg !13123
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !13124
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !13124
  %39 = load i8, i8* %38, align 2, !dbg !13124
  %40 = sext i8 %39 to i32, !dbg !13125
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #24, !dbg !13126
  call void @llvm.dbg.value(metadata i32 %41, metadata !13051, metadata !DIExpression()), !dbg !13062
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #24, !dbg !13127
  br i1 %42, label %43, label %45, !dbg !13129

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #24, !dbg !13130
  call void @llvm.dbg.value(metadata i1 %44, metadata !13057, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13062
  br label %45, !dbg !13132

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13057, metadata !DIExpression()), !dbg !13062
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13133
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !13134
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #25, !dbg !13134
  call void @llvm.dbg.value(metadata i32 %49, metadata !13058, metadata !DIExpression()), !dbg !13062
  %50 = icmp eq i32 %49, 0, !dbg !13135
  br i1 %50, label %78, label %51, !dbg !13137

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13063, metadata !DIExpression()) #23, !dbg !13138
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13140, !srcloc !13078
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %53, metadata !13075, metadata !DIExpression()) #23, !dbg !13142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13076, metadata !DIExpression()) #23, !dbg !13142
  call void @llvm.dbg.value(metadata i32 %53, metadata !13069, metadata !DIExpression()) #23, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %53, metadata !13052, metadata !DIExpression()), !dbg !13062
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !13143
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !13143
  br i1 %55, label %74, label %56, !dbg !13144, !prof !13114

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.156(%struct._wait_q_t* noundef nonnull %47) #24, !dbg !13145
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !13059, metadata !DIExpression()), !dbg !13146
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !13147
  br i1 %58, label %67, label %59, !dbg !13148

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !13149
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !13149
  %62 = load i8, i8* %61, align 2, !dbg !13149
  %63 = sext i8 %62 to i32, !dbg !13150
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13151
  %65 = load i32, i32* %64, align 4, !dbg !13151
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #24, !dbg !13152
  br label %70, !dbg !13148

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13153
  %69 = load i32, i32* %68, align 4, !dbg !13153
  br label %70, !dbg !13148

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !13148
  call void @llvm.dbg.value(metadata i32 %71, metadata !13051, metadata !DIExpression()), !dbg !13062
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #24, !dbg !13154
  %73 = select i1 %72, i1 true, i1 %46, !dbg !13155
  call void @llvm.dbg.value(metadata i1 %73, metadata !13057, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13062
  call void @llvm.dbg.value(metadata i8 poison, metadata !13057, metadata !DIExpression()), !dbg !13062
  br i1 %73, label %75, label %77, !dbg !13156

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !13057, metadata !DIExpression()), !dbg !13062
  br i1 %46, label %75, label %77, !dbg !13156

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !13157
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #25, !dbg !13157
  br label %78, !dbg !13160

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !13095, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13100, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata i32 %53, metadata !13103, metadata !DIExpression()) #23, !dbg !13164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #23, !dbg !13166, !srcloc !13109
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !13062
  ret i32 %79, !dbg !13167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !13168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13172, metadata !DIExpression()), !dbg !13175
  call void @llvm.dbg.value(metadata i32 %1, metadata !13173, metadata !DIExpression()), !dbg !13175
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13176
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13176
  call void @llvm.dbg.value(metadata i32 %4, metadata !13174, metadata !DIExpression()), !dbg !13175
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %5, metadata !13174, metadata !DIExpression()), !dbg !13175
  ret i32 %5, !dbg !13178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !13179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13183, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 %1, metadata !13184, metadata !DIExpression()), !dbg !13185
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13186
  ret i1 %3, !dbg !13187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13188 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13192, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.value(metadata i32 %1, metadata !13193, metadata !DIExpression()), !dbg !13194
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13195
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13195
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13197
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13197
  %7 = load i8, i8* %6, align 2, !dbg !13197
  %8 = sext i8 %7 to i32, !dbg !13198
  %9 = icmp eq i32 %8, %1, !dbg !13199
  br i1 %9, label %12, label %10, !dbg !13200

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13201
  br label %12, !dbg !13203

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13194
  ret i1 %13, !dbg !13204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.156(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !13205 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13209, metadata !DIExpression()), !dbg !13210
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13211
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.157(%struct._dnode* noundef %2) #24, !dbg !13212
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13213
  ret %struct.k_thread* %4, !dbg !13214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.157(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13215 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13219, metadata !DIExpression()), !dbg !13220
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.158(%struct._dnode* noundef %0) #24, !dbg !13221
  br i1 %2, label %6, label %3, !dbg !13221

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13222
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13222
  br label %6, !dbg !13221

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13221
  ret %struct._dnode* %7, !dbg !13223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.158(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13224 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13228, metadata !DIExpression()), !dbg !13229
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13230
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13230
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13231
  ret i1 %4, !dbg !13232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !13233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13235, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.value(metadata i32 %1, metadata !13236, metadata !DIExpression()), !dbg !13237
  %3 = icmp slt i32 %0, %1, !dbg !13238
  ret i1 %3, !dbg !13239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !13240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13242, metadata !DIExpression()), !dbg !13243
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13244
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13244
  ret i32 %3, !dbg !13245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !13246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13250, metadata !DIExpression()), !dbg !13251
  %2 = icmp sgt i32 %0, -128, !dbg !13252
  ret i1 %2, !dbg !13253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13254 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13256, metadata !DIExpression()), !dbg !13260
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13261
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !13261
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13261
  br i1 %4, label %31, label %5, !dbg !13263

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13264
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !13264
  br i1 %7, label %8, label %31, !dbg !13266

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13267
  %10 = load i32, i32* %9, align 4, !dbg !13267
  %11 = icmp ugt i32 %10, 1, !dbg !13269
  br i1 %11, label %12, label %14, !dbg !13270

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !13271
  store i32 %13, i32* %9, align 4, !dbg !13271
  br label %31, !dbg !13273

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13063, metadata !DIExpression()) #23, !dbg !13274
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13276, !srcloc !13078
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %16, metadata !13075, metadata !DIExpression()) #23, !dbg !13278
  call void @llvm.dbg.value(metadata i32 undef, metadata !13076, metadata !DIExpression()) #23, !dbg !13278
  call void @llvm.dbg.value(metadata i32 %16, metadata !13069, metadata !DIExpression()) #23, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %16, metadata !13258, metadata !DIExpression()), !dbg !13260
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13279
  %18 = load i32, i32* %17, align 4, !dbg !13279
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #24, !dbg !13280
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13281
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #25, !dbg !13282
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13257, metadata !DIExpression()), !dbg !13260
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !13283
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !13284
  br i1 %22, label %30, label %23, !dbg !13286

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !13287
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !13287
  %26 = load i8, i8* %25, align 2, !dbg !13287
  %27 = sext i8 %26 to i32, !dbg !13289
  store i32 %27, i32* %17, align 4, !dbg !13290
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13291, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i32 0, metadata !13296, metadata !DIExpression()), !dbg !13297
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 6, i32 1, !dbg !13299
  store i32 0, i32* %28, align 4, !dbg !13300
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #25, !dbg !13301
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13302
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #25, !dbg !13302
  br label %31, !dbg !13303

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !13304
  call void @llvm.dbg.value(metadata i32 %16, metadata !13095, metadata !DIExpression()) #23, !dbg !13306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13100, metadata !DIExpression()) #23, !dbg !13306
  call void @llvm.dbg.value(metadata i32 %16, metadata !13103, metadata !DIExpression()) #23, !dbg !13308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !13310, !srcloc !13109
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !13260
  ret i32 %32, !dbg !13311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !13312 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13316, metadata !DIExpression()), !dbg !13320
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13317, metadata !DIExpression()), !dbg !13320
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13321
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13321
  %5 = load i8, i8* %4, align 2, !dbg !13321
  call void @llvm.dbg.value(metadata i8 %5, metadata !13318, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13320
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13322
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13322
  %8 = load i8, i8* %7, align 2, !dbg !13322
  call void @llvm.dbg.value(metadata i8 %8, metadata !13319, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13320
  %9 = icmp eq i8 %8, %5, !dbg !13323
  %10 = sext i8 %5 to i32, !dbg !13325
  %11 = sext i8 %8 to i32, !dbg !13325
  %12 = sub nsw i32 %11, %10, !dbg !13325
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13325
  ret i32 %13, !dbg !13326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13331, metadata !DIExpression()), !dbg !13332
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13333
  %3 = icmp eq i32 %2, 0, !dbg !13335
  br i1 %3, label %8, label %4, !dbg !13336

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13337
  %6 = add i32 %5, %2, !dbg !13339
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13340
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13341
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13342
  br label %8, !dbg !13343

8:                                                ; preds = %4, %1
  ret void, !dbg !13344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !13345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13349, metadata !DIExpression()), !dbg !13351
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13352
  call void @llvm.dbg.value(metadata i32 %1, metadata !13350, metadata !DIExpression()), !dbg !13351
  ret i32 %1, !dbg !13353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13358, metadata !DIExpression()), !dbg !13367
  call void @llvm.dbg.value(metadata i32 %1, metadata !13359, metadata !DIExpression()), !dbg !13367
  call void @llvm.dbg.value(metadata i32 0, metadata !13360, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13376
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13378, !srcloc !13384
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %4, metadata !13381, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %4, metadata !13375, metadata !DIExpression()) #23, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %4, metadata !13366, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13360, metadata !DIExpression()), !dbg !13368
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13386
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !13389
  %6 = icmp sgt i32 %0, 0, !dbg !13390
  %7 = icmp sgt i32 %5, 2, !dbg !13392
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13392
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13392
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13393
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13394
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13395
  call void @llvm.dbg.value(metadata i32 %4, metadata !13396, metadata !DIExpression()) #23, !dbg !13402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !13402
  call void @llvm.dbg.value(metadata i32 %4, metadata !13404, metadata !DIExpression()) #23, !dbg !13407
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13409, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !13360, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13360, metadata !DIExpression()), !dbg !13368
  ret void, !dbg !13411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !13412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13416, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i32 %0, metadata !13418, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13433
  call void @llvm.dbg.value(metadata i32 1000, metadata !13421, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i32 10000, metadata !13422, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i8 1, metadata !13423, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i1 true, metadata !13424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13433
  call void @llvm.dbg.value(metadata i1 true, metadata !13425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13433
  call void @llvm.dbg.value(metadata i8 0, metadata !13426, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i1 true, metadata !13427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13433
  call void @llvm.dbg.value(metadata i1 false, metadata !13428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13433
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !13433
  %2 = mul i32 %0, 10, !dbg !13435
  ret i32 %2, !dbg !13441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13444, metadata !DIExpression()), !dbg !13446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13447
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13449, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13449
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !13447
  call void @llvm.dbg.value(metadata i32 %3, metadata !13445, metadata !DIExpression()), !dbg !13446
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13452
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13454
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13455
  br i1 %6, label %7, label %8, !dbg !13456

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13457
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !13459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !13461
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13463, !srcloc !13410
  br label %24, !dbg !13464

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13465
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !13466
  %10 = icmp eq i32 %9, 0, !dbg !13466
  br i1 %10, label %21, label %11, !dbg !13468

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !13469
  br i1 %12, label %13, label %21, !dbg !13470

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13471
  %15 = icmp sgt i32 %14, %0, !dbg !13474
  br i1 %15, label %19, label %16, !dbg !13475

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13476
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !13476
  call void @llvm.dbg.value(metadata i32 %18, metadata !13445, metadata !DIExpression()), !dbg !13446
  br label %22, !dbg !13478

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13479
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13479
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13481
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13446
  call void @llvm.dbg.value(metadata i32 %23, metadata !13445, metadata !DIExpression()), !dbg !13446
  call void @llvm.dbg.value(metadata i32 %23, metadata !13396, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata i32 %23, metadata !13404, metadata !DIExpression()) #23, !dbg !13485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13487, !srcloc !13410
  br label %24, !dbg !13488

24:                                               ; preds = %22, %7
  ret void, !dbg !13488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13493, metadata !DIExpression()), !dbg !13495
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !13496
  %3 = icmp eq i32 %2, 0, !dbg !13496
  br i1 %3, label %16, label %4, !dbg !13497

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !13498
  br i1 %5, label %16, label %6, !dbg !13499

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13500
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13500
  %9 = load i8, i8* %8, align 2, !dbg !13500
  %10 = sext i8 %9 to i32, !dbg !13501
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13502
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.164(i32 noundef %10, i32 noundef %11) #24, !dbg !13503
  br i1 %12, label %16, label %13, !dbg !13504

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !13505
  %15 = xor i1 %14, true, !dbg !13506
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13495
  call void @llvm.dbg.value(metadata i1 %17, metadata !13494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13495
  ret i1 %17, !dbg !13507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13508 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13512, metadata !DIExpression()), !dbg !13514
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13515
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13513, metadata !DIExpression()), !dbg !13514
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !13516
  br i1 %3, label %5, label %4, !dbg !13518

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !13519
  br label %5, !dbg !13521

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13512, metadata !DIExpression()), !dbg !13514
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13522
  ret i32 %6, !dbg !13523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13526, metadata !DIExpression()), !dbg !13528
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13529
  %3 = load i8, i8* %2, align 1, !dbg !13529
  call void @llvm.dbg.value(metadata i8 %3, metadata !13527, metadata !DIExpression()), !dbg !13528
  %4 = and i8 %3, 31, !dbg !13530
  %5 = icmp ne i8 %4, 0, !dbg !13531
  ret i1 %5, !dbg !13532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13535, metadata !DIExpression()), !dbg !13536
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13537
  br i1 %2, label %3, label %7, !dbg !13539

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13540, metadata !DIExpression()) #23, !dbg !13543
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13546
  %5 = load i8, i8* %4, align 1, !dbg !13547
  %6 = and i8 %5, 127, !dbg !13547
  store i8 %6, i8* %4, align 1, !dbg !13547
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13548, metadata !DIExpression()) #23, !dbg !13551
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13555
  br label %7, !dbg !13556

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13557, metadata !DIExpression()) #23, !dbg !13560
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13562
  %9 = load i8, i8* %8, align 1, !dbg !13563
  %10 = or i8 %9, -128, !dbg !13563
  store i8 %10, i8* %8, align 1, !dbg !13563
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13564, metadata !DIExpression()) #23, !dbg !13567
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13571, metadata !DIExpression()) #23, !dbg !13579
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13577, metadata !DIExpression()) #23, !dbg !13579
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13581
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13578, metadata !DIExpression()) #23, !dbg !13579
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13583
  br i1 %12, label %23, label %13, !dbg !13581

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13578, metadata !DIExpression()) #23, !dbg !13579
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13585
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13578, metadata !DIExpression()) #23, !dbg !13579
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13586
  %17 = icmp sgt i32 %16, 0, !dbg !13589
  br i1 %17, label %18, label %20, !dbg !13590

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13591
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13593
  br label %25, !dbg !13594

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13583
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13578, metadata !DIExpression()) #23, !dbg !13579
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13583
  br i1 %22, label %23, label %13, !dbg !13581, !llvm.loop !13595

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13597
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13598
  br label %25, !dbg !13599

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13600
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13601
  %28 = zext i1 %27 to i32, !dbg !13601
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !13602
  ret void, !dbg !13603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13606, metadata !DIExpression()), !dbg !13607
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !13608
  ret i1 %2, !dbg !13609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !13610 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13612, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13613, metadata !DIExpression()), !dbg !13614
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13615
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !13616
  ret void, !dbg !13617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13622, metadata !DIExpression()), !dbg !13623
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.162(%struct._dnode* noundef %0) #24, !dbg !13624
  br i1 %2, label %6, label %3, !dbg !13624

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13625
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13625
  br label %6, !dbg !13624

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13624
  ret %struct._dnode* %7, !dbg !13626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !13627 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13631, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13632, metadata !DIExpression()), !dbg !13635
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13636
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13636
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13633, metadata !DIExpression()), !dbg !13635
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13637
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13638
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13639
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13640
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13641
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13642
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13643
  ret void, !dbg !13644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !13645 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13649, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13650, metadata !DIExpression()), !dbg !13651
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13652
  br i1 %3, label %6, label %4, !dbg !13653

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !13654
  br label %6, !dbg !13653

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13653
  ret %struct._dnode* %7, !dbg !13655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !13656 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13660, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13661, metadata !DIExpression()), !dbg !13663
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13664
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13664
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13662, metadata !DIExpression()), !dbg !13663
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13665
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13666
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13667
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13668
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13669
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13670
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13671
  ret void, !dbg !13672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13675, metadata !DIExpression()), !dbg !13677
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13678
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13685, metadata !DIExpression()) #23, !dbg !13687
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13688
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13689
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13689
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13676, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13690, metadata !DIExpression()) #23, !dbg !13696
  call void @llvm.dbg.value(metadata i32 %0, metadata !13695, metadata !DIExpression()) #23, !dbg !13696
  %6 = icmp eq i32 %0, 0, !dbg !13699
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13701
  br i1 %6, label %8, label %15, !dbg !13702

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13703
  br i1 %9, label %15, label %10, !dbg !13705

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13706
  br i1 %11, label %15, label %12, !dbg !13708

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13709
  %14 = icmp eq i32 %13, 0, !dbg !13709
  br i1 %14, label %18, label %15, !dbg !13711

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13712
  br i1 %16, label %18, label %17, !dbg !13715

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13716
  br label %18, !dbg !13718

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13701
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13701
  ret void, !dbg !13719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !13720 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13724, metadata !DIExpression()), !dbg !13727
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13725, metadata !DIExpression()), !dbg !13727
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef %0) #24, !dbg !13728
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13726, metadata !DIExpression()), !dbg !13727
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13725, metadata !DIExpression()), !dbg !13727
  ret %struct.k_thread* %3, !dbg !13729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13732, metadata !DIExpression()), !dbg !13733
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13734
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13735
  %4 = xor i1 %3, true, !dbg !13736
  ret i1 %4, !dbg !13737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13740, metadata !DIExpression()), !dbg !13741
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13742
  %3 = load i16, i16* %2, align 2, !dbg !13742
  %4 = icmp ult i16 %3, 128, !dbg !13743
  %5 = zext i1 %4 to i32, !dbg !13743
  ret i32 %5, !dbg !13744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13745 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13751, metadata !DIExpression()), !dbg !13752
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13753
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !13754
  %4 = xor i1 %3, true, !dbg !13755
  ret i1 %4, !dbg !13756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13757 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13763, metadata !DIExpression()), !dbg !13764
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13765
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13765
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13766
  ret i1 %4, !dbg !13767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !13768 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13770, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13771, metadata !DIExpression()), !dbg !13772
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13773
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13773
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13774
  br i1 %5, label %9, label %6, !dbg !13775

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13776
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13776
  br label %9, !dbg !13775

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13775
  ret %struct._dnode* %10, !dbg !13777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.162(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13778 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13782, metadata !DIExpression()), !dbg !13783
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13784
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13784
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13785
  ret i1 %4, !dbg !13786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !13787 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13791, metadata !DIExpression()), !dbg !13794
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13795
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13795
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13792, metadata !DIExpression()), !dbg !13794
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13796
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13796
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13793, metadata !DIExpression()), !dbg !13794
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13797
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13798
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13799
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13800
  tail call fastcc void @sys_dnode_init.163(%struct._dnode* noundef %0) #24, !dbg !13801
  ret void, !dbg !13802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.163(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !13803 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13805, metadata !DIExpression()), !dbg !13806
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13807
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13808
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13809
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13810
  ret void, !dbg !13811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13812 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13816, metadata !DIExpression()), !dbg !13818
  call void @llvm.dbg.value(metadata i32 128, metadata !13817, metadata !DIExpression()), !dbg !13818
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13819
  %3 = load i8, i8* %2, align 1, !dbg !13819
  %4 = icmp slt i8 %3, 0, !dbg !13820
  ret i1 %4, !dbg !13821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.164(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !13822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13824, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i32 %1, metadata !13825, metadata !DIExpression()), !dbg !13826
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.165(i32 noundef %0, i32 noundef %1) #24, !dbg !13827
  ret i1 %3, !dbg !13828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !13829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13831, metadata !DIExpression()), !dbg !13832
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13833
  ret i1 %2, !dbg !13834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.165(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !13835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13837, metadata !DIExpression()), !dbg !13839
  call void @llvm.dbg.value(metadata i32 %1, metadata !13838, metadata !DIExpression()), !dbg !13839
  %3 = icmp slt i32 %0, %1, !dbg !13840
  ret i1 %3, !dbg !13841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13842 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13844, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata i32 0, metadata !13845, metadata !DIExpression()), !dbg !13849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13850
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13852, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13852
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !13854
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13854
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !13850
  call void @llvm.dbg.value(metadata i32 %3, metadata !13847, metadata !DIExpression()), !dbg !13849
  call void @llvm.dbg.value(metadata i32 undef, metadata !13845, metadata !DIExpression()), !dbg !13849
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13855
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !13860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !13860
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !13862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13864, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !13845, metadata !DIExpression()), !dbg !13849
  call void @llvm.dbg.value(metadata i32 undef, metadata !13845, metadata !DIExpression()), !dbg !13849
  ret void, !dbg !13865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13866 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13868, metadata !DIExpression()), !dbg !13869
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13870
  br i1 %2, label %24, label %3, !dbg !13872

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13873
  br i1 %4, label %5, label %24, !dbg !13874

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13557, metadata !DIExpression()) #23, !dbg !13875
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13878
  %7 = load i8, i8* %6, align 1, !dbg !13879
  %8 = or i8 %7, -128, !dbg !13879
  store i8 %8, i8* %6, align 1, !dbg !13879
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13564, metadata !DIExpression()) #23, !dbg !13880
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13571, metadata !DIExpression()) #23, !dbg !13882
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13577, metadata !DIExpression()) #23, !dbg !13882
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13884
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13578, metadata !DIExpression()) #23, !dbg !13882
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13885
  br i1 %10, label %21, label %11, !dbg !13884

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13578, metadata !DIExpression()) #23, !dbg !13882
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13886
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13578, metadata !DIExpression()) #23, !dbg !13882
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !13887
  %15 = icmp sgt i32 %14, 0, !dbg !13888
  br i1 %15, label %16, label %18, !dbg !13889

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13890
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !13891
  br label %23, !dbg !13892

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !13885
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13578, metadata !DIExpression()) #23, !dbg !13882
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13885
  br i1 %20, label %21, label %11, !dbg !13884, !llvm.loop !13893

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13895
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !13896
  br label %23, !dbg !13897

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13898
  br label %24, !dbg !13899

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13901 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13903, metadata !DIExpression()), !dbg !13904
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !13905
  br i1 %2, label %6, label %3, !dbg !13906

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !13907
  %5 = xor i1 %4, true, !dbg !13906
  br label %6, !dbg !13906

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13911, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i32 0, metadata !13912, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13917
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13919, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13919
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !13921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13921
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !13917
  call void @llvm.dbg.value(metadata i32 %3, metadata !13914, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i32 undef, metadata !13912, metadata !DIExpression()), !dbg !13916
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !13922
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !13925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !13925
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !13927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13929, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !13912, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i32 undef, metadata !13912, metadata !DIExpression()), !dbg !13916
  ret void, !dbg !13930
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13933, metadata !DIExpression()), !dbg !13935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !13936
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13938, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13938
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !13940
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !13940
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !13936
  call void @llvm.dbg.value(metadata i32 %3, metadata !13934, metadata !DIExpression()), !dbg !13935
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !13941
  br i1 %4, label %5, label %6, !dbg !13943

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !13944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !13944
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !13947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13949, !srcloc !13410
  br label %8, !dbg !13950

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.170(%struct.k_thread* noundef %0) #24, !dbg !13951
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13952
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13953
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !13953
  br label %8, !dbg !13954

8:                                                ; preds = %6, %5
  ret void, !dbg !13954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13957, metadata !DIExpression()), !dbg !13958
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13959
  %3 = load i8, i8* %2, align 1, !dbg !13959
  %4 = and i8 %3, 4, !dbg !13960
  %5 = icmp eq i8 %4, 0, !dbg !13961
  ret i1 %5, !dbg !13962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.170(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13965, metadata !DIExpression()), !dbg !13966
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13967
  %3 = load i8, i8* %2, align 1, !dbg !13968
  %4 = and i8 %3, -5, !dbg !13968
  store i8 %4, i8* %2, align 1, !dbg !13968
  ret void, !dbg !13969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13970 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13973, metadata !DIExpression()), !dbg !13974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13972, metadata !DIExpression()), !dbg !13974
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !13975
  br i1 %4, label %5, label %9, !dbg !13977

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !13978
  br i1 %6, label %7, label %9, !dbg !13979

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13980, metadata !DIExpression()) #23, !dbg !13986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13985, metadata !DIExpression()) #23, !dbg !13986
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13989
  br label %10, !dbg !13990

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !13991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !13991
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !13994
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13996, !srcloc !13410
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14002, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.value(metadata i32 %0, metadata !14004, metadata !DIExpression()), !dbg !14009
  %2 = icmp eq i32 %0, 0, !dbg !14011
  br i1 %2, label %3, label %6, !dbg !14012

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14013, !srcloc !14020
  call void @llvm.dbg.value(metadata i32 %4, metadata !14016, metadata !DIExpression()) #23, !dbg !14021
  %5 = icmp eq i32 %4, 0, !dbg !14022
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14003
  ret i1 %7, !dbg !14023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !14024 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14027
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14026, metadata !DIExpression()), !dbg !14028
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14029
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14030
  ret i1 %3, !dbg !14031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14034, metadata !DIExpression()), !dbg !14036
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14037
  call void @llvm.dbg.value(metadata i32 %2, metadata !14035, metadata !DIExpression()), !dbg !14036
  ret i32 %2, !dbg !14038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14039 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()), !dbg !14045
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14046
  call void @llvm.dbg.value(metadata i32 0, metadata !14042, metadata !DIExpression()), !dbg !14047
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14048
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14050, !srcloc !13384
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14050
  call void @llvm.dbg.value(metadata i32 %4, metadata !13381, metadata !DIExpression()) #23, !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14052
  call void @llvm.dbg.value(metadata i32 %4, metadata !13375, metadata !DIExpression()) #23, !dbg !14048
  call void @llvm.dbg.value(metadata i32 %4, metadata !14044, metadata !DIExpression()), !dbg !14047
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()), !dbg !14047
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14053
  br i1 %5, label %6, label %10, !dbg !14057

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13540, metadata !DIExpression()) #23, !dbg !14058
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14061
  %8 = load i8, i8* %7, align 1, !dbg !14062
  %9 = and i8 %8, 127, !dbg !14062
  store i8 %9, i8* %7, align 1, !dbg !14062
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13548, metadata !DIExpression()) #23, !dbg !14063
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14065
  br label %10, !dbg !14066

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14067
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14068
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14069
  %13 = zext i1 %12 to i32, !dbg !14069
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !14070
  call void @llvm.dbg.value(metadata i32 %4, metadata !13396, metadata !DIExpression()) #23, !dbg !14071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %4, metadata !13404, metadata !DIExpression()) #23, !dbg !14073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14075, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14042, metadata !DIExpression()), !dbg !14047
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()), !dbg !14047
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14076
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14078
  br i1 %15, label %16, label %17, !dbg !14079

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14080
  br label %17, !dbg !14082

17:                                               ; preds = %16, %10
  ret void, !dbg !14083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14086, metadata !DIExpression()), !dbg !14087
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14088
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14089
  ret i32 %3, !dbg !14090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14093, metadata !DIExpression()), !dbg !14094
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14095
  %3 = load i8, i8* %2, align 1, !dbg !14096
  %4 = or i8 %3, 16, !dbg !14096
  store i8 %4, i8* %2, align 1, !dbg !14096
  ret void, !dbg !14097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14098 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14099, !srcloc !13384
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14099
  call void @llvm.dbg.value(metadata i32 %2, metadata !13381, metadata !DIExpression()) #23, !dbg !14101
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14101
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14102
  ret void, !dbg !14103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14106, metadata !DIExpression()), !dbg !14107
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14108
  br i1 %2, label %3, label %5, !dbg !14110

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14111
  br label %6, !dbg !14113

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13404, metadata !DIExpression()) #23, !dbg !14114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14117, !srcloc !13410
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14119 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14121, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14124
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14126, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14126
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14128
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %3, metadata !14122, metadata !DIExpression()), !dbg !14123
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14129
  br i1 %4, label %6, label %5, !dbg !14131

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !14132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14132
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !14135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14137, !srcloc !13410
  br label %8, !dbg !14138

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14139
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14140
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14141
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !14141
  br label %8, !dbg !14142

8:                                                ; preds = %6, %5
  ret void, !dbg !14142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14145, metadata !DIExpression()), !dbg !14146
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14147
  %3 = load i8, i8* %2, align 1, !dbg !14147
  %4 = and i8 %3, 16, !dbg !14148
  %5 = icmp ne i8 %4, 0, !dbg !14149
  ret i1 %5, !dbg !14150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14153, metadata !DIExpression()), !dbg !14154
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14155
  %3 = load i8, i8* %2, align 1, !dbg !14156
  %4 = and i8 %3, -17, !dbg !14156
  store i8 %4, i8* %2, align 1, !dbg !14156
  ret void, !dbg !14157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14158 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14168, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14166, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14167, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 0, metadata !14169, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14174
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14176, !srcloc !13384
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14176
  call void @llvm.dbg.value(metadata i32 %5, metadata !13381, metadata !DIExpression()) #23, !dbg !14178
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14178
  call void @llvm.dbg.value(metadata i32 %5, metadata !13375, metadata !DIExpression()) #23, !dbg !14174
  call void @llvm.dbg.value(metadata i32 %5, metadata !14171, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14169, metadata !DIExpression()), !dbg !14173
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14179
  call void @llvm.dbg.value(metadata i32 %5, metadata !13396, metadata !DIExpression()) #23, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14182
  call void @llvm.dbg.value(metadata i32 %5, metadata !13404, metadata !DIExpression()) #23, !dbg !14184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !14186, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14169, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14169, metadata !DIExpression()), !dbg !14173
  ret void, !dbg !14187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14188 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14192, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14191, metadata !DIExpression()), !dbg !14193
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14194
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14195
  ret void, !dbg !14196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14202, metadata !DIExpression()), !dbg !14203
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14204
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14205
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14206
  br i1 %3, label %21, label %4, !dbg !14208

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14209
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14211
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14212
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13571, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13577, metadata !DIExpression()) #23, !dbg !14213
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef nonnull %6) #25, !dbg !14215
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13578, metadata !DIExpression()) #23, !dbg !14213
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14216
  br i1 %8, label %19, label %9, !dbg !14215

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13578, metadata !DIExpression()) #23, !dbg !14213
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14217
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13578, metadata !DIExpression()) #23, !dbg !14213
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !14218
  %13 = icmp sgt i32 %12, 0, !dbg !14219
  br i1 %13, label %14, label %16, !dbg !14220

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14221
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !14222
  br label %21, !dbg !14223

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !14216
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13578, metadata !DIExpression()) #23, !dbg !14213
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14216
  br i1 %18, label %19, label %9, !dbg !14215, !llvm.loop !14224

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14226
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !14227
  br label %21, !dbg !14228

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14230 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14235, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14234, metadata !DIExpression()), !dbg !14236
  %4 = icmp eq i64 %3, -1, !dbg !14237
  br i1 %4, label %6, label %5, !dbg !14239

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.173(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14240
  br label %6, !dbg !14242

6:                                                ; preds = %5, %2
  ret void, !dbg !14243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.173(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14244 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14247, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14246, metadata !DIExpression()), !dbg !14248
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14249
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14250
  ret void, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14252 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14254, metadata !DIExpression()), !dbg !14262
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14263
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14263
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14255, metadata !DIExpression()), !dbg !14262
  call void @llvm.dbg.value(metadata i32 0, metadata !14256, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14265
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14267, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !14265
  call void @llvm.dbg.value(metadata i32 undef, metadata !14258, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14256, metadata !DIExpression()), !dbg !14264
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14270
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14271
  %7 = load i8, i8* %6, align 1, !dbg !14271
  %8 = and i8 %7, 40, !dbg !14272
  %9 = icmp eq i8 %8, 0, !dbg !14272
  call void @llvm.dbg.value(metadata i1 %9, metadata !14259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14273
  br i1 %9, label %10, label %17, !dbg !14274

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14275
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !14275
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !14275
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !14279
  br i1 %14, label %16, label %15, !dbg !14280

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !14281
  br label %16, !dbg !14283

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.170(%struct.k_thread* noundef nonnull %3) #24, !dbg !14284
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !14285
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !14286
  br label %17, !dbg !14287

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %18, metadata !13381, metadata !DIExpression()) #23, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %18, metadata !13375, metadata !DIExpression()) #23, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %18, metadata !14258, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !14288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13404, metadata !DIExpression()) #23, !dbg !14290
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !14292, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14256, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14256, metadata !DIExpression()), !dbg !14264
  ret void, !dbg !14293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14294 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14296, metadata !DIExpression()), !dbg !14297
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14298
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !14299
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14300
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !14301
  ret void, !dbg !14302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14305, metadata !DIExpression()), !dbg !14306
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14307
  %3 = load i8, i8* %2, align 1, !dbg !14308
  %4 = and i8 %3, -3, !dbg !14308
  store i8 %4, i8* %2, align 1, !dbg !14308
  ret void, !dbg !14309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14312, metadata !DIExpression()), !dbg !14313
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14314
  br i1 %2, label %3, label %7, !dbg !14316

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13540, metadata !DIExpression()) #23, !dbg !14317
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14320
  %5 = load i8, i8* %4, align 1, !dbg !14321
  %6 = and i8 %5, 127, !dbg !14321
  store i8 %6, i8* %4, align 1, !dbg !14321
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13548, metadata !DIExpression()) #23, !dbg !14322
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14324
  br label %7, !dbg !14325

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14326
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14327
  %10 = zext i1 %9 to i32, !dbg !14327
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !14328
  ret void, !dbg !14329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14332, metadata !DIExpression()), !dbg !14333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14334
  %3 = load i8, i8* %2, align 1, !dbg !14335
  %4 = or i8 %3, 2, !dbg !14335
  store i8 %4, i8* %2, align 1, !dbg !14335
  ret void, !dbg !14336
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #21 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14339, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i32 0, metadata !14340, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14345
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14347, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !14349
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14349
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %3, metadata !14342, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14340, metadata !DIExpression()), !dbg !14344
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !14350
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !14353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14353
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !14355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14357, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14340, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14340, metadata !DIExpression()), !dbg !14344
  ret void, !dbg !14358
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14359 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14365, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata i32 %0, metadata !14363, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14364, metadata !DIExpression()), !dbg !14370
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14371
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14372
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14373
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14374
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14375
  call void @llvm.dbg.value(metadata i32 %6, metadata !14366, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata i32 0, metadata !14367, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14377
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14379, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !14381
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14381
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()), !dbg !14376
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14382
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14386
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14387
  br i1 %10, label %11, label %12, !dbg !14388

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14389
  br label %12, !dbg !14391

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14379
  call void @llvm.dbg.value(metadata i32 %13, metadata !13381, metadata !DIExpression()) #23, !dbg !14381
  call void @llvm.dbg.value(metadata i32 %13, metadata !13375, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %13, metadata !14369, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !14392
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14392
  call void @llvm.dbg.value(metadata i32 undef, metadata !13404, metadata !DIExpression()) #23, !dbg !14394
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !14396, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14367, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()), !dbg !14376
  ret i32 %6, !dbg !14397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14398 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14403, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata i64 undef, metadata !14405, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14402, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14404, metadata !DIExpression()), !dbg !14406
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14407
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14409
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14411, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !14413
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14413
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !14409
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14414
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !14415
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13980, metadata !DIExpression()) #23, !dbg !14416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13985, metadata !DIExpression()) #23, !dbg !14416
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !14418
  ret i32 %9, !dbg !14419
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14420 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14424, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14425, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 0, metadata !14426, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14431
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14433, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !14435
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14435
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !14431
  call void @llvm.dbg.value(metadata i32 undef, metadata !14428, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14425, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14426, metadata !DIExpression()), !dbg !14430
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !14436
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14425, metadata !DIExpression()), !dbg !14429
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14439
  br i1 %5, label %7, label %6, !dbg !14441

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !14442
  br label %7, !dbg !14444

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14433
  call void @llvm.dbg.value(metadata i32 %8, metadata !13381, metadata !DIExpression()) #23, !dbg !14435
  call void @llvm.dbg.value(metadata i32 %8, metadata !13375, metadata !DIExpression()) #23, !dbg !14431
  call void @llvm.dbg.value(metadata i32 %8, metadata !14428, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !14445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14445
  call void @llvm.dbg.value(metadata i32 undef, metadata !13404, metadata !DIExpression()) #23, !dbg !14447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14449, !srcloc !13410
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14425, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14426, metadata !DIExpression()), !dbg !14430
  ret %struct.k_thread* %4, !dbg !14450
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14451 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14453, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14454, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 0, metadata !14455, metadata !DIExpression()), !dbg !14459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14460
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14462, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !14464
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14464
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !14460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14457, metadata !DIExpression()), !dbg !14459
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14454, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14455, metadata !DIExpression()), !dbg !14459
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !14465
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14454, metadata !DIExpression()), !dbg !14458
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14468
  br i1 %5, label %8, label %6, !dbg !14470

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !14471
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !14473
  br label %8, !dbg !14474

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14462
  call void @llvm.dbg.value(metadata i32 %9, metadata !13381, metadata !DIExpression()) #23, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %9, metadata !13375, metadata !DIExpression()) #23, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %9, metadata !14457, metadata !DIExpression()), !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !14475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14475
  call void @llvm.dbg.value(metadata i32 undef, metadata !13404, metadata !DIExpression()) #23, !dbg !14477
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14479, !srcloc !13410
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14454, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14455, metadata !DIExpression()), !dbg !14459
  ret %struct.k_thread* %4, !dbg !14480
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14481 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14483, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14339, metadata !DIExpression()) #23, !dbg !14485
  call void @llvm.dbg.value(metadata i32 0, metadata !14340, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14488
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14490, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14490
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14492
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !14488
  call void @llvm.dbg.value(metadata i32 %3, metadata !14342, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14340, metadata !DIExpression()) #23, !dbg !14487
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14493
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !14494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14494
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !14496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14498, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14340, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14340, metadata !DIExpression()) #23, !dbg !14487
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14499
  ret void, !dbg !14500
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14503, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 %1, metadata !14504, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i8 0, metadata !14505, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 0, metadata !14506, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14511
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14513, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !14515
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14515
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !14511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i8 poison, metadata !14505, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 undef, metadata !14506, metadata !DIExpression()), !dbg !14510
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14516
  call void @llvm.dbg.value(metadata i1 %6, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14509
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14519

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13540, metadata !DIExpression()) #23, !dbg !14520
  %11 = load i8, i8* %4, align 1, !dbg !14526
  %12 = and i8 %11, 127, !dbg !14526
  store i8 %12, i8* %4, align 1, !dbg !14526
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13548, metadata !DIExpression()) #23, !dbg !14527
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14529
  store i8 %9, i8* %8, align 2, !dbg !14530
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13557, metadata !DIExpression()) #23, !dbg !14531
  %13 = load i8, i8* %4, align 1, !dbg !14533
  %14 = or i8 %13, -128, !dbg !14533
  store i8 %14, i8* %4, align 1, !dbg !14533
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13564, metadata !DIExpression()) #23, !dbg !14534
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13571, metadata !DIExpression()) #23, !dbg !14536
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13577, metadata !DIExpression()) #23, !dbg !14536
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14538
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13578, metadata !DIExpression()) #23, !dbg !14536
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14539
  br i1 %16, label %26, label %17, !dbg !14538

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13578, metadata !DIExpression()) #23, !dbg !14536
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14540
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13578, metadata !DIExpression()) #23, !dbg !14536
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14541
  %21 = icmp sgt i32 %20, 0, !dbg !14542
  br i1 %21, label %22, label %23, !dbg !14543

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14544
  br label %27, !dbg !14545

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14539
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13578, metadata !DIExpression()) #23, !dbg !14536
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14539
  br i1 %25, label %26, label %17, !dbg !14538, !llvm.loop !14546

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14548
  br label %27, !dbg !14549

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14550
  br label %29, !dbg !14551

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14552
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14513
  call void @llvm.dbg.value(metadata i32 %30, metadata !13381, metadata !DIExpression()) #23, !dbg !14515
  call void @llvm.dbg.value(metadata i32 %30, metadata !13375, metadata !DIExpression()) #23, !dbg !14511
  call void @llvm.dbg.value(metadata i32 %30, metadata !14508, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !14554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14554
  call void @llvm.dbg.value(metadata i32 undef, metadata !13404, metadata !DIExpression()) #23, !dbg !14556
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !14558, !srcloc !13410
  call void @llvm.dbg.value(metadata i8 poison, metadata !14505, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 undef, metadata !14506, metadata !DIExpression()), !dbg !14510
  ret i1 %6, !dbg !14559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14564, metadata !DIExpression()), !dbg !14567
  call void @llvm.dbg.value(metadata i32 %1, metadata !14565, metadata !DIExpression()), !dbg !14567
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !14568
  call void @llvm.dbg.value(metadata i1 %3, metadata !14566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14567
  br i1 %3, label %4, label %12, !dbg !14569

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14571
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14572
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14572
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14572
  %9 = load i8, i8* %8, align 1, !dbg !14572
  %10 = icmp eq i8 %9, 0, !dbg !14573
  br i1 %10, label %11, label %12, !dbg !14574

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14575
  br label %12, !dbg !14577

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14578
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14579 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14581, metadata !DIExpression()), !dbg !14584
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14585
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14587, !srcloc !13384
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14587
  call void @llvm.dbg.value(metadata i32 %2, metadata !13381, metadata !DIExpression()) #23, !dbg !14589
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14589
  call void @llvm.dbg.value(metadata i32 %2, metadata !13375, metadata !DIExpression()) #23, !dbg !14585
  call void @llvm.dbg.value(metadata i32 %2, metadata !14583, metadata !DIExpression()), !dbg !14584
  call void @llvm.dbg.value(metadata i32 undef, metadata !14581, metadata !DIExpression()), !dbg !14584
  tail call fastcc void @z_sched_lock() #24, !dbg !14590
  call void @llvm.dbg.value(metadata i32 %2, metadata !13396, metadata !DIExpression()) #23, !dbg !14593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14593
  call void @llvm.dbg.value(metadata i32 %2, metadata !13404, metadata !DIExpression()) #23, !dbg !14595
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14597, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14581, metadata !DIExpression()), !dbg !14584
  call void @llvm.dbg.value(metadata i32 undef, metadata !14581, metadata !DIExpression()), !dbg !14584
  ret void, !dbg !14598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14599 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14600
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14601
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14601
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14601
  %5 = load i8, i8* %4, align 1, !dbg !14602
  %6 = add i8 %5, -1, !dbg !14602
  store i8 %6, i8* %4, align 1, !dbg !14602
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14603, !srcloc !14605
  ret void, !dbg !14606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14607 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14609, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14613
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14615, !srcloc !13384
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14615
  call void @llvm.dbg.value(metadata i32 %2, metadata !13381, metadata !DIExpression()) #23, !dbg !14617
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14617
  call void @llvm.dbg.value(metadata i32 %2, metadata !13375, metadata !DIExpression()) #23, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %2, metadata !14611, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i32 undef, metadata !14609, metadata !DIExpression()), !dbg !14612
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14618
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14621
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14621
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14621
  %7 = load i8, i8* %6, align 1, !dbg !14622
  %8 = add i8 %7, 1, !dbg !14622
  store i8 %8, i8* %6, align 1, !dbg !14622
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14623
  call void @llvm.dbg.value(metadata i32 %2, metadata !13396, metadata !DIExpression()) #23, !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !14624
  call void @llvm.dbg.value(metadata i32 %2, metadata !13404, metadata !DIExpression()) #23, !dbg !14626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14628, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 1, metadata !14609, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i32 undef, metadata !14609, metadata !DIExpression()), !dbg !14612
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14629
  ret void, !dbg !14630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !14631 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14632
  ret %struct.k_thread* %1, !dbg !14633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !14634 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14638, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14639, metadata !DIExpression()), !dbg !14643
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14640, metadata !DIExpression()), !dbg !14643
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14645
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14641, metadata !DIExpression()), !dbg !14643
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !14646
  call void @llvm.dbg.value(metadata i32 %5, metadata !14642, metadata !DIExpression()), !dbg !14643
  %6 = icmp sgt i32 %5, 0, !dbg !14647
  br i1 %6, label %17, label %7, !dbg !14649

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14650
  br i1 %8, label %17, label %9, !dbg !14652

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14653
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14653
  %12 = load i32, i32* %11, align 8, !dbg !14653
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14655
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14655
  %15 = load i32, i32* %14, align 8, !dbg !14655
  %16 = icmp ult i32 %12, %15, !dbg !14656
  br label %17, !dbg !14657

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14658
  ret i1 %18, !dbg !14659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14660 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14677, metadata !DIExpression()), !dbg !14692
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14678, metadata !DIExpression()), !dbg !14692
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14693
  %5 = load i32, i32* %4, align 4, !dbg !14694
  %6 = add nsw i32 %5, 1, !dbg !14694
  store i32 %6, i32* %4, align 4, !dbg !14694
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14695
  store i32 %5, i32* %7, align 8, !dbg !14696
  %8 = load i32, i32* %4, align 4, !dbg !14697
  %9 = icmp eq i32 %8, 0, !dbg !14698
  br i1 %9, label %10, label %32, !dbg !14699

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14700
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !14700
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14680, metadata !DIExpression()), !dbg !14700
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14700
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14700
  %14 = load i32, i32* %13, align 4, !dbg !14700
  %15 = shl i32 %14, 2, !dbg !14700
  %16 = alloca i8, i32 %15, align 8, !dbg !14700
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14700
  store i8* %16, i8** %17, align 4, !dbg !14700
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14700
  %19 = alloca i8, i32 %14, align 8, !dbg !14700
  store i8* %19, i8** %18, align 4, !dbg !14700
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14700
  store i32 -1, i32* %20, align 4, !dbg !14700
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14701
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14689, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14679, metadata !DIExpression()), !dbg !14692
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14703
  br i1 %22, label %23, label %24, !dbg !14700

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !14703
  br label %32, !dbg !14704

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14679, metadata !DIExpression()), !dbg !14692
  %26 = load i32, i32* %4, align 4, !dbg !14705
  %27 = add nsw i32 %26, 1, !dbg !14705
  store i32 %27, i32* %4, align 4, !dbg !14705
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14707
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14707
  store i32 %26, i32* %29, align 8, !dbg !14708
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14701
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14689, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14679, metadata !DIExpression()), !dbg !14692
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14703
  br i1 %31, label %23, label %24, !dbg !14700, !llvm.loop !14709

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14711
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14712
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14713
  ret void, !dbg !14714
}

; Function Attrs: optsize
declare !dbg !14715 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14720 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14723 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14725, metadata !DIExpression()), !dbg !14727
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14726, metadata !DIExpression()), !dbg !14727
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14728
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14729
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14730
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14731
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14731
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14733
  br i1 %7, label %8, label %10, !dbg !14734

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14735
  store i32 0, i32* %9, align 4, !dbg !14737
  br label %10, !dbg !14738

10:                                               ; preds = %8, %2
  ret void, !dbg !14739
}

; Function Attrs: optsize
declare !dbg !14740 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14741 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14745, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14746, metadata !DIExpression()), !dbg !14748
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14749
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !14750
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14747, metadata !DIExpression()), !dbg !14748
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14746, metadata !DIExpression()), !dbg !14748
  ret %struct.k_thread* %4, !dbg !14751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14752 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14756, metadata !DIExpression()), !dbg !14757
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14758
  ret %struct.rbnode* %2, !dbg !14759
}

; Function Attrs: optsize
declare !dbg !14760 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #22 !dbg !14763 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14773, metadata !DIExpression()), !dbg !14777
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14778
  %3 = load i32, i32* %2, align 4, !dbg !14778
  %4 = icmp eq i32 %3, 0, !dbg !14780
  br i1 %4, label %10, label %5, !dbg !14781

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14774, metadata !DIExpression()), !dbg !14777
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14782, !range !4787
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14783
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14775, metadata !DIExpression()), !dbg !14777
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef %7) #24, !dbg !14784
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14776, metadata !DIExpression()), !dbg !14777
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14774, metadata !DIExpression()), !dbg !14777
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14777
  ret %struct.k_thread* %11, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14786 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14790, metadata !DIExpression()), !dbg !14793
  call void @llvm.dbg.value(metadata i32 0, metadata !14791, metadata !DIExpression()), !dbg !14793
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.186(%struct._wait_q_t* noundef %0) #24, !dbg !14794
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14792, metadata !DIExpression()), !dbg !14793
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14795
  br i1 %3, label %8, label %4, !dbg !14796

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14797
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14799
  call void @llvm.dbg.value(metadata i32 1, metadata !14791, metadata !DIExpression()), !dbg !14793
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.186(%struct._wait_q_t* noundef %0) #24, !dbg !14794
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14792, metadata !DIExpression()), !dbg !14793
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14795
  br i1 %7, label %8, label %4, !dbg !14796, !llvm.loop !14800

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14793
  ret i32 %9, !dbg !14802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.186(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !14803 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14805, metadata !DIExpression()), !dbg !14806
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14807
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef %2) #24, !dbg !14808
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14809
  ret %struct.k_thread* %4, !dbg !14810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !14811 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14820, metadata !DIExpression()), !dbg !14821
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14822
  tail call fastcc void @sys_dlist_init.187(%struct._dnode* noundef nonnull %2) #24, !dbg !14823
  ret void, !dbg !14824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.187(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14825 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14829, metadata !DIExpression()), !dbg !14830
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14831
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14832
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14833
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14834
  ret void, !dbg !14835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14836 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !14837
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !14838
  ret void, !dbg !14839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14845, metadata !DIExpression()), !dbg !14846
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14847
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14847
  %4 = load i8, i8* %3, align 2, !dbg !14847
  %5 = sext i8 %4 to i32, !dbg !14848
  ret i32 %5, !dbg !14849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14854, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata i32 %1, metadata !14855, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14856, metadata !DIExpression()), !dbg !14857
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !14858
  ret void, !dbg !14859
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14860 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !14861
  br i1 %1, label %8, label %2, !dbg !14862

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14863
  br i1 %3, label %8, label %4, !dbg !14864

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14865
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !14866
  %7 = xor i1 %6, true, !dbg !14864
  br label %8, !dbg !14864

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !14868 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14869, !range !7363
  %2 = icmp eq i8 %1, 0, !dbg !14869
  ret i1 %2, !dbg !14870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14874
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14876, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !14878
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14878
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !14874
  call void @llvm.dbg.value(metadata i32 undef, metadata !14873, metadata !DIExpression()), !dbg !14879
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14880
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13540, metadata !DIExpression()) #23, !dbg !14883
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14885
  %4 = load i8, i8* %3, align 1, !dbg !14886
  %5 = and i8 %4, 127, !dbg !14886
  store i8 %5, i8* %3, align 1, !dbg !14886
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13548, metadata !DIExpression()) #23, !dbg !14887
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !14889
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14890
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13557, metadata !DIExpression()) #23, !dbg !14891
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14893
  %8 = load i8, i8* %7, align 1, !dbg !14894
  %9 = or i8 %8, -128, !dbg !14894
  store i8 %9, i8* %7, align 1, !dbg !14894
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13564, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13571, metadata !DIExpression()) #23, !dbg !14897
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13577, metadata !DIExpression()) #23, !dbg !14897
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14899
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13578, metadata !DIExpression()) #23, !dbg !14897
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14900
  br i1 %11, label %22, label %12, !dbg !14899

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13578, metadata !DIExpression()) #23, !dbg !14897
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14901
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13578, metadata !DIExpression()) #23, !dbg !14897
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !14902
  %16 = icmp sgt i32 %15, 0, !dbg !14903
  br i1 %16, label %17, label %19, !dbg !14904

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14905
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14906
  br label %24, !dbg !14907

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !14900
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13578, metadata !DIExpression()) #23, !dbg !14897
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14900
  br i1 %21, label %22, label %12, !dbg !14899, !llvm.loop !14908

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14910
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !14911
  br label %24, !dbg !14912

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14876
  call void @llvm.dbg.value(metadata i32 %25, metadata !13381, metadata !DIExpression()) #23, !dbg !14878
  call void @llvm.dbg.value(metadata i32 %25, metadata !13375, metadata !DIExpression()) #23, !dbg !14874
  call void @llvm.dbg.value(metadata i32 %25, metadata !14873, metadata !DIExpression()), !dbg !14879
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14913
  call void @llvm.dbg.value(metadata i32 undef, metadata !13980, metadata !DIExpression()) #23, !dbg !14914
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13985, metadata !DIExpression()) #23, !dbg !14914
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !14916
  ret void, !dbg !14917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14918 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14922, metadata !DIExpression()), !dbg !14925
  %3 = icmp eq i64 %2, -1, !dbg !14926
  br i1 %3, label %4, label %6, !dbg !14928

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14929
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !14931
  br label %11, !dbg !14932

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14923, metadata !DIExpression()), !dbg !14925
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !14933
  %8 = sext i32 %7 to i64, !dbg !14933
  call void @llvm.dbg.value(metadata i64 %8, metadata !14923, metadata !DIExpression()), !dbg !14925
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.190(i64 noundef %8) #24, !dbg !14934
  %10 = trunc i64 %9 to i32, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %10, metadata !14924, metadata !DIExpression()), !dbg !14925
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14925
  ret i32 %12, !dbg !14935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14940, metadata !DIExpression()), !dbg !14941
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14942, !srcloc !14944
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !14945
  ret void, !dbg !14946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14947 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14951, metadata !DIExpression()), !dbg !14955
  %2 = icmp eq i64 %0, 0, !dbg !14956
  br i1 %2, label %3, label %4, !dbg !14958

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !14959
  br label %29, !dbg !14961

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14953, metadata !DIExpression()), !dbg !14955
  %5 = icmp sgt i64 %0, -3, !dbg !14962
  br i1 %5, label %6, label %10, !dbg !14964

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14965
  %8 = trunc i64 %0 to i32, !dbg !14967
  %9 = add i32 %7, %8, !dbg !14967
  call void @llvm.dbg.value(metadata i32 %9, metadata !14952, metadata !DIExpression()), !dbg !14955
  br label %13, !dbg !14968

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14969
  %12 = sub i32 -2, %11, !dbg !14969
  call void @llvm.dbg.value(metadata i32 %12, metadata !14952, metadata !DIExpression()), !dbg !14955
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14971
  call void @llvm.dbg.value(metadata i32 %14, metadata !14952, metadata !DIExpression()), !dbg !14955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !14972
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14974, !srcloc !13384
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14974
  call void @llvm.dbg.value(metadata i32 %16, metadata !13381, metadata !DIExpression()) #23, !dbg !14976
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !14976
  call void @llvm.dbg.value(metadata i32 %16, metadata !13375, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 %16, metadata !14954, metadata !DIExpression()), !dbg !14955
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14977
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14978
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !14979
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14980
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14981
  tail call fastcc void @z_add_thread_timeout.173(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !14981
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14982
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !14983
  call void @llvm.dbg.value(metadata i32 %16, metadata !13980, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13985, metadata !DIExpression()) #23, !dbg !14984
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !14986
  %22 = zext i32 %14 to i64, !dbg !14987
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14988
  %24 = zext i32 %23 to i64, !dbg !14988
  %25 = sub nsw i64 %22, %24, !dbg !14989
  call void @llvm.dbg.value(metadata i64 %25, metadata !14951, metadata !DIExpression()), !dbg !14955
  %26 = icmp sgt i64 %25, 0, !dbg !14990
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14990
  %28 = trunc i64 %27 to i32, !dbg !14990
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14955
  ret i32 %30, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.190(i64 noundef %0) unnamed_addr #5 !dbg !14992 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14994, metadata !DIExpression()), !dbg !14995
  call void @llvm.dbg.value(metadata i64 %0, metadata !13418, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i32 10000, metadata !13421, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i32 1000, metadata !13422, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i8 1, metadata !13423, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i1 false, metadata !13424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14996
  call void @llvm.dbg.value(metadata i1 false, metadata !13425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14996
  call void @llvm.dbg.value(metadata i8 0, metadata !13426, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i1 false, metadata !13427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14996
  call void @llvm.dbg.value(metadata i1 true, metadata !13428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14996
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i64 %0, metadata !13418, metadata !DIExpression()), !dbg !14996
  %2 = udiv i64 %0, 10, !dbg !14998
  ret i64 %2, !dbg !15002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15003 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15004, !srcloc !15006
  tail call void @z_impl_k_yield() #24, !dbg !15007
  ret void, !dbg !15008
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15013, metadata !DIExpression()), !dbg !15015
  %2 = sext i32 %0 to i64, !dbg !15016
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !15017
  call void @llvm.dbg.value(metadata i64 %3, metadata !15014, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15015
  %4 = shl i64 %3, 32, !dbg !15018
  %5 = ashr exact i64 %4, 32, !dbg !15018
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !15019
  call void @llvm.dbg.value(metadata i32 %6, metadata !15014, metadata !DIExpression()), !dbg !15015
  %7 = sext i32 %6 to i64, !dbg !15020
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !15021
  %9 = trunc i64 %8 to i32, !dbg !15021
  ret i32 %9, !dbg !15022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !15023 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15025, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i64 %0, metadata !13418, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13421, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.value(metadata i32 10000, metadata !13422, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.value(metadata i8 1, metadata !13423, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.value(metadata i1 false, metadata !13424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15027
  call void @llvm.dbg.value(metadata i1 true, metadata !13425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15027
  call void @llvm.dbg.value(metadata i8 0, metadata !13426, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.value(metadata i1 false, metadata !13427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15027
  call void @llvm.dbg.value(metadata i1 true, metadata !13428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15027
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !15027
  %2 = add i64 %0, 99, !dbg !15029
  call void @llvm.dbg.value(metadata i64 %2, metadata !13418, metadata !DIExpression()), !dbg !15027
  %3 = udiv i64 %2, 100, !dbg !15030
  ret i64 %3, !dbg !15031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !15032 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15034, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.value(metadata i64 %0, metadata !13418, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 10000, metadata !13421, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13422, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i8 1, metadata !13423, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i1 false, metadata !13424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15036
  call void @llvm.dbg.value(metadata i1 false, metadata !13425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15036
  call void @llvm.dbg.value(metadata i8 0, metadata !13426, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i1 true, metadata !13427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15036
  call void @llvm.dbg.value(metadata i1 false, metadata !13428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15036
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i64 0, metadata !13429, metadata !DIExpression()), !dbg !15036
  %2 = mul i64 %0, 100, !dbg !15038
  ret i64 %2, !dbg !15040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15043, metadata !DIExpression()), !dbg !15044
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !15045
  br i1 %2, label %14, label %3, !dbg !15047

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15048
  %5 = icmp slt i32 %4, 0, !dbg !15050
  br i1 %5, label %6, label %10, !dbg !15051

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15052
  %8 = load i8, i8* %7, align 1, !dbg !15052
  %9 = icmp eq i8 %8, 16, !dbg !15055
  br i1 %9, label %10, label %14, !dbg !15056

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15057
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15058
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15059, !srcloc !14020
  call void @llvm.dbg.value(metadata i32 %11, metadata !14016, metadata !DIExpression()) #23, !dbg !15063
  %12 = icmp eq i32 %11, 0, !dbg !15064
  br i1 %12, label %13, label %14, !dbg !15065

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15066
  br label %14, !dbg !15068

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15072, metadata !DIExpression()), !dbg !15073
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15074
  %3 = load i8, i8* %2, align 1, !dbg !15074
  %4 = and i8 %3, 2, !dbg !15075
  %5 = icmp ne i8 %4, 0, !dbg !15076
  ret i1 %5, !dbg !15077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !15078 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15083
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15082, metadata !DIExpression()), !dbg !15084
  ret %struct.k_thread* %1, !dbg !15085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15086 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15089, !srcloc !14020
  call void @llvm.dbg.value(metadata i32 %1, metadata !14016, metadata !DIExpression()) #23, !dbg !15092
  %2 = icmp eq i32 %1, 0, !dbg !15093
  br i1 %2, label %3, label %8, !dbg !15094

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15095
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !15096
  %6 = icmp ne i32 %5, 0, !dbg !15094
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15098 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15100, metadata !DIExpression()), !dbg !15102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !15103
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15105, !srcloc !13384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15105
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()) #23, !dbg !15107
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !15107
  call void @llvm.dbg.value(metadata i32 %3, metadata !13375, metadata !DIExpression()) #23, !dbg !15103
  call void @llvm.dbg.value(metadata i32 %3, metadata !15101, metadata !DIExpression()), !dbg !15102
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15108
  %5 = load i8, i8* %4, align 4, !dbg !15108
  %6 = and i8 %5, 1, !dbg !15110
  %7 = icmp eq i8 %6, 0, !dbg !15111
  br i1 %7, label %9, label %8, !dbg !15112

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !15113
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !15116
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15118, !srcloc !13410
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !15119, !srcloc !15121
  br label %24, !dbg !15122

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15123
  %11 = load i8, i8* %10, align 1, !dbg !15123
  %12 = and i8 %11, 8, !dbg !15125
  %13 = icmp eq i8 %12, 0, !dbg !15126
  br i1 %13, label %15, label %14, !dbg !15127

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !15128
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !15131
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15133, !srcloc !13410
  br label %24, !dbg !15134

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !15135
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15136
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15138
  br i1 %17, label %18, label %23, !dbg !15139

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15140, !srcloc !14020
  call void @llvm.dbg.value(metadata i32 %19, metadata !14016, metadata !DIExpression()) #23, !dbg !15143
  %20 = icmp eq i32 %19, 0, !dbg !15144
  br i1 %20, label %21, label %23, !dbg !15145

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13980, metadata !DIExpression()) #23, !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13985, metadata !DIExpression()) #23, !dbg !15146
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15149
  br label %23, !dbg !15150

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13396, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %3, metadata !13404, metadata !DIExpression()) #23, !dbg !15153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15155, !srcloc !13410
  br label %24, !dbg !15156

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15157 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15159, metadata !DIExpression()), !dbg !15160
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15161
  %3 = load i8, i8* %2, align 1, !dbg !15161
  %4 = and i8 %3, 8, !dbg !15163
  %5 = icmp eq i8 %4, 0, !dbg !15164
  br i1 %5, label %6, label %20, !dbg !15165

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15166
  %8 = or i8 %7, 8, !dbg !15166
  store i8 %8, i8* %2, align 1, !dbg !15166
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !15168
  br i1 %9, label %10, label %12, !dbg !15170

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13540, metadata !DIExpression()) #23, !dbg !15171
  %11 = and i8 %8, 95, !dbg !15174
  store i8 %11, i8* %2, align 1, !dbg !15174
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13548, metadata !DIExpression()) #23, !dbg !15175
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !15177
  br label %12, !dbg !15178

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15179
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15179
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15181
  br i1 %15, label %17, label %16, !dbg !15182

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15183
  br label %17, !dbg !15185

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15186
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15187
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !15188
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15189
  br label %20, !dbg !15190

20:                                               ; preds = %17, %1
  ret void, !dbg !15191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15192 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15196, metadata !DIExpression()), !dbg !15198
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.186(%struct._wait_q_t* noundef %0) #24, !dbg !15199
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15197, metadata !DIExpression()), !dbg !15198
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15200
  br i1 %3, label %10, label %4, !dbg !15201

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15202
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15204
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15205, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i32 0, metadata !15210, metadata !DIExpression()), !dbg !15211
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !15213
  store i32 0, i32* %7, align 4, !dbg !15214
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15215
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.186(%struct._wait_q_t* noundef %0) #24, !dbg !15199
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15197, metadata !DIExpression()), !dbg !15198
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15200
  br i1 %9, label %10, label %4, !dbg !15201, !llvm.loop !15216

10:                                               ; preds = %4, %1
  ret void, !dbg !15218
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15219 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15224, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15223, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !15228
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15230, !srcloc !13384
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15230
  call void @llvm.dbg.value(metadata i32 %4, metadata !13381, metadata !DIExpression()) #23, !dbg !15232
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !15232
  call void @llvm.dbg.value(metadata i32 %4, metadata !13375, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %4, metadata !15225, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 0, metadata !15226, metadata !DIExpression()), !dbg !15227
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15233
  %6 = load i8, i8* %5, align 1, !dbg !15233
  %7 = and i8 %6, 8, !dbg !15235
  %8 = icmp eq i8 %7, 0, !dbg !15236
  br i1 %8, label %9, label %24, !dbg !15237

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15224, metadata !DIExpression()), !dbg !15227
  %11 = icmp eq i64 %10, 0, !dbg !15238
  br i1 %11, label %24, label %12, !dbg !15240

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15241
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15243
  br i1 %14, label %24, label %15, !dbg !15244

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15245
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !15245
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15246
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !15247
  br i1 %19, label %24, label %20, !dbg !15248

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15249
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !15251
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15252
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !15253
  call void @llvm.dbg.value(metadata i32 %4, metadata !13980, metadata !DIExpression()) #23, !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13985, metadata !DIExpression()) #23, !dbg !15254
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !15256
  call void @llvm.dbg.value(metadata i32 %23, metadata !15226, metadata !DIExpression()), !dbg !15227
  br label %26, !dbg !15257

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15258
  call void @llvm.dbg.value(metadata i32 %25, metadata !15226, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 %4, metadata !13396, metadata !DIExpression()) #23, !dbg !15259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !15259
  call void @llvm.dbg.value(metadata i32 %4, metadata !13404, metadata !DIExpression()) #23, !dbg !15261
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15263, !srcloc !13410
  br label %26, !dbg !15264

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15227
  ret i32 %27, !dbg !15265
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15266 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15270, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i32 %1, metadata !15271, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i8* %2, metadata !15272, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i8 0, metadata !15274, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i32 0, metadata !15275, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13369, metadata !DIExpression()) #23, !dbg !15280
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15282, !srcloc !13384
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()) #23, !dbg !15284
  call void @llvm.dbg.value(metadata i32 undef, metadata !13382, metadata !DIExpression()) #23, !dbg !15284
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !15277, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i8 poison, metadata !15274, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !15275, metadata !DIExpression()), !dbg !15279
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !15285
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15273, metadata !DIExpression()), !dbg !15278
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15288
  br i1 %7, label %12, label %8, !dbg !15290

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15291, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.value(metadata i32 %1, metadata !15296, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.value(metadata i8* %2, metadata !15297, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15205, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i32 %1, metadata !15210, metadata !DIExpression()), !dbg !15301
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 6, i32 1, !dbg !15303
  store i32 %1, i32* %9, align 4, !dbg !15304
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15305
  store i8* %2, i8** %10, align 4, !dbg !15306
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !15307
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !15308
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !15309
  call void @llvm.dbg.value(metadata i8 1, metadata !15274, metadata !DIExpression()), !dbg !15278
  br label %12, !dbg !15310

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15282
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15282
  call void @llvm.dbg.value(metadata i32 %14, metadata !13381, metadata !DIExpression()) #23, !dbg !15284
  call void @llvm.dbg.value(metadata i32 %14, metadata !13375, metadata !DIExpression()) #23, !dbg !15280
  call void @llvm.dbg.value(metadata i32 %14, metadata !15277, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i8 poison, metadata !15274, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13401, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !13404, metadata !DIExpression()) #23, !dbg !15313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15315, !srcloc !13410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15275, metadata !DIExpression()), !dbg !15279
  ret i1 %13, !dbg !15316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15317 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15323, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i64 undef, metadata !15325, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15322, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15324, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8** %4, metadata !15326, metadata !DIExpression()), !dbg !15328
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %6, metadata !15327, metadata !DIExpression()), !dbg !15328
  %7 = icmp eq i8** %4, null, !dbg !15330
  br i1 %7, label %12, label %8, !dbg !15332

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15333
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15335
  %11 = load i8*, i8** %10, align 4, !dbg !15335
  store i8* %11, i8** %4, align 4, !dbg !15336
  br label %12, !dbg !15337

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15339 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !15341
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !15342
  ret void, !dbg !15343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15344 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15354, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15352, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15353, metadata !DIExpression()), !dbg !15371
  %5 = icmp eq i64 %4, -1, !dbg !15372
  br i1 %5, label %55, label %6, !dbg !15374

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15375
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15376
  call void @llvm.dbg.value(metadata i32 0, metadata !15355, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15385
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15387, !srcloc !15393
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %9, metadata !15390, metadata !DIExpression()) #23, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %9, metadata !15384, metadata !DIExpression()) #23, !dbg !15385
  call void @llvm.dbg.value(metadata i32 %9, metadata !15361, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()), !dbg !15377
  %10 = icmp slt i64 %4, -1, !dbg !15395
  br i1 %10, label %11, label %17, !dbg !15396

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15397
  %13 = add i64 %4, %12, !dbg !15398
  %14 = sub i64 -2, %13, !dbg !15398
  call void @llvm.dbg.value(metadata i64 %14, metadata !15365, metadata !DIExpression()), !dbg !15399
  %15 = icmp sgt i64 %14, 1, !dbg !15400
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15400
  br label %22, !dbg !15401

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15402
  %19 = tail call fastcc i32 @elapsed.199() #24, !dbg !15404
  %20 = sext i32 %19 to i64, !dbg !15404
  %21 = add nsw i64 %18, %20, !dbg !15405
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15406
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15407
  store i64 %23, i64* %24, align 8, !dbg !15408
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !15409
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15362, metadata !DIExpression()), !dbg !15411
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15412
  br i1 %26, label %42, label %27, !dbg !15412

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15413
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15362, metadata !DIExpression()), !dbg !15411
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15417
  %31 = load i64, i64* %30, align 8, !dbg !15417
  %32 = icmp slt i64 %28, %31, !dbg !15418
  br i1 %32, label %33, label %38, !dbg !15419

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15417
  %35 = sub nsw i64 %31, %28, !dbg !15420
  store i64 %35, i64* %34, align 8, !dbg !15420
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15422
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15423
  tail call fastcc void @sys_dlist_insert.200(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !15424
  br label %44, !dbg !15425

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15426
  store i64 %39, i64* %24, align 8, !dbg !15426
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !15427
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15362, metadata !DIExpression()), !dbg !15411
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15412
  br i1 %41, label %42, label %27, !dbg !15412, !llvm.loop !15428

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15430
  tail call fastcc void @sys_dlist_append.201(%struct._dnode* noundef %43) #24, !dbg !15433
  br label %44, !dbg !15434

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !15435
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15436
  br i1 %46, label %47, label %54, !dbg !15437

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %48, metadata !15368, metadata !DIExpression()), !dbg !15439
  %49 = icmp ne i32 %48, 0, !dbg !15440
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15442
  br i1 %52, label %54, label %53, !dbg !15442

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15443
  br label %54, !dbg !15445

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15446, metadata !DIExpression()) #23, !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %9, metadata !15454, metadata !DIExpression()) #23, !dbg !15457
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15459, !srcloc !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()), !dbg !15377
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.199() unnamed_addr #1 !dbg !15462 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15465
  %2 = icmp eq i32 %1, 0, !dbg !15466
  br i1 %2, label %3, label %5, !dbg !15465

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15467
  br label %5, !dbg !15465

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15465
  ret i32 %6, !dbg !15468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !15469 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.204() #24, !dbg !15475
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15473, metadata !DIExpression()), !dbg !15476
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15477
  ret %struct._timeout* %2, !dbg !15478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.200(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15479 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15483, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15484, metadata !DIExpression()), !dbg !15487
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15488
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15488
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15485, metadata !DIExpression()), !dbg !15487
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15489
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15490
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15491
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15492
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15493
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15494
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15495
  ret void, !dbg !15496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !15497 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15501, metadata !DIExpression()), !dbg !15503
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15504
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.202(%struct._dnode* noundef %2) #24, !dbg !15505
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15502, metadata !DIExpression()), !dbg !15503
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15506
  ret %struct._timeout* %4, !dbg !15507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.201(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15508 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15513, metadata !DIExpression()), !dbg !15516
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15514, metadata !DIExpression()), !dbg !15516
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15517
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15515, metadata !DIExpression()), !dbg !15516
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15518
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15519
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15520
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15521
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15522
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15523
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15524
  ret void, !dbg !15525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15526 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !15531
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15528, metadata !DIExpression()), !dbg !15532
  %2 = tail call fastcc i32 @elapsed.199() #24, !dbg !15533
  call void @llvm.dbg.value(metadata i32 %2, metadata !15529, metadata !DIExpression()), !dbg !15532
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15534
  br i1 %3, label %14, label %4, !dbg !15536

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15537
  %6 = load i64, i64* %5, align 8, !dbg !15537
  %7 = sext i32 %2 to i64, !dbg !15538
  %8 = sub nsw i64 %6, %7, !dbg !15539
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15540
  br i1 %9, label %14, label %10, !dbg !15541

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15542
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15542
  %13 = trunc i64 %12 to i32, !dbg !15542
  call void @llvm.dbg.value(metadata i32 %13, metadata !15530, metadata !DIExpression()), !dbg !15532
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15544
  call void @llvm.dbg.value(metadata i32 %15, metadata !15530, metadata !DIExpression()), !dbg !15532
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15545
  %17 = icmp ne i32 %16, 0, !dbg !15547
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15548
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15548
  call void @llvm.dbg.value(metadata i32 %20, metadata !15530, metadata !DIExpression()), !dbg !15532
  ret i32 %20, !dbg !15549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.202(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15550 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15554, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15555, metadata !DIExpression()), !dbg !15556
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15557
  br i1 %2, label %5, label %3, !dbg !15558

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.203(%struct._dnode* noundef nonnull %0) #24, !dbg !15559
  br label %5, !dbg !15558

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15558
  ret %struct._dnode* %6, !dbg !15560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.203(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15561 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15563, metadata !DIExpression()), !dbg !15565
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15564, metadata !DIExpression()), !dbg !15565
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15566
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15567
  br i1 %3, label %7, label %4, !dbg !15568

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15569
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15569
  br label %7, !dbg !15568

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15568
  ret %struct._dnode* %8, !dbg !15570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.204() unnamed_addr #4 !dbg !15571 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15575, metadata !DIExpression()), !dbg !15576
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.205() #24, !dbg !15577
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15577
  ret %struct._dnode* %3, !dbg !15578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.205() unnamed_addr #4 !dbg !15579 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15583, metadata !DIExpression()), !dbg !15584
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15585
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15586
  ret i1 %2, !dbg !15587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15588 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15592, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 -22, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 0, metadata !15594, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15599
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15601, !srcloc !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15596, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i32 -22, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15594, metadata !DIExpression()), !dbg !15598
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15593, metadata !DIExpression()), !dbg !15597
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.208(%struct._dnode* noundef %3) #24, !dbg !15604
  br i1 %4, label %5, label %6, !dbg !15608

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !15609
  call void @llvm.dbg.value(metadata i32 0, metadata !15593, metadata !DIExpression()), !dbg !15597
  br label %6, !dbg !15611

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15597
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %8, metadata !15390, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %8, metadata !15384, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 %8, metadata !15596, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i32 %7, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()) #23, !dbg !15614
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15616, !srcloc !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15594, metadata !DIExpression()), !dbg !15598
  ret i32 %7, !dbg !15617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.208(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15624, metadata !DIExpression()), !dbg !15625
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15626
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15626
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15627
  ret i1 %4, !dbg !15628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !15629 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15631, metadata !DIExpression()), !dbg !15632
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !15633
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15635
  br i1 %3, label %10, label %4, !dbg !15636

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15637
  %6 = load i64, i64* %5, align 8, !dbg !15637
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15639
  %8 = load i64, i64* %7, align 8, !dbg !15640
  %9 = add nsw i64 %8, %6, !dbg !15640
  store i64 %9, i64* %7, align 8, !dbg !15640
  br label %10, !dbg !15641

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15642
  tail call fastcc void @sys_dlist_remove.209(%struct._dnode* noundef %11) #24, !dbg !15643
  ret void, !dbg !15644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.209(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15645 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15649, metadata !DIExpression()), !dbg !15652
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15653
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15653
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15650, metadata !DIExpression()), !dbg !15652
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15654
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15654
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15651, metadata !DIExpression()), !dbg !15652
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15655
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15656
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15657
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15658
  tail call fastcc void @sys_dnode_init.210(%struct._dnode* noundef %0) #24, !dbg !15659
  ret void, !dbg !15660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.210(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15661 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15663, metadata !DIExpression()), !dbg !15664
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15665
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15666
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15667
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15668
  ret void, !dbg !15669
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15670 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15676, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.value(metadata i64 0, metadata !15677, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.value(metadata i32 0, metadata !15678, metadata !DIExpression()), !dbg !15682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15683
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15685, !srcloc !15393
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15685
  call void @llvm.dbg.value(metadata i32 %3, metadata !15390, metadata !DIExpression()) #23, !dbg !15687
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15687
  call void @llvm.dbg.value(metadata i32 %3, metadata !15384, metadata !DIExpression()) #23, !dbg !15683
  call void @llvm.dbg.value(metadata i32 %3, metadata !15680, metadata !DIExpression()), !dbg !15682
  call void @llvm.dbg.value(metadata i64 0, metadata !15677, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.value(metadata i32 undef, metadata !15678, metadata !DIExpression()), !dbg !15682
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !15688
  call void @llvm.dbg.value(metadata i64 %4, metadata !15677, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.value(metadata i32 %3, metadata !15446, metadata !DIExpression()) #23, !dbg !15691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15691
  call void @llvm.dbg.value(metadata i32 %3, metadata !15454, metadata !DIExpression()) #23, !dbg !15693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15695, !srcloc !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15678, metadata !DIExpression()), !dbg !15682
  ret i64 %4, !dbg !15696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15697 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15699, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.value(metadata i64 0, metadata !15700, metadata !DIExpression()), !dbg !15703
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.211(%struct._timeout* noundef %0) #24, !dbg !15704
  br i1 %2, label %21, label %3, !dbg !15706

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !15707
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15701, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i64 0, metadata !15700, metadata !DIExpression()), !dbg !15703
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15709
  br i1 %5, label %16, label %6, !dbg !15711

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15701, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i64 %8, metadata !15700, metadata !DIExpression()), !dbg !15703
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15712
  %10 = load i64, i64* %9, align 8, !dbg !15712
  %11 = add nsw i64 %10, %8, !dbg !15714
  call void @llvm.dbg.value(metadata i64 %11, metadata !15700, metadata !DIExpression()), !dbg !15703
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15715
  br i1 %12, label %16, label %13, !dbg !15717

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !15718
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15701, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i64 %11, metadata !15700, metadata !DIExpression()), !dbg !15703
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15709
  br i1 %15, label %16, label %6, !dbg !15711, !llvm.loop !15719

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15703
  call void @llvm.dbg.value(metadata i64 %17, metadata !15700, metadata !DIExpression()), !dbg !15703
  %18 = tail call fastcc i32 @elapsed.199() #24, !dbg !15721
  %19 = sext i32 %18 to i64, !dbg !15721
  %20 = sub nsw i64 %17, %19, !dbg !15722
  br label %21, !dbg !15723

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15703
  ret i64 %22, !dbg !15724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.211(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15725 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15729, metadata !DIExpression()), !dbg !15730
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15731
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.208(%struct._dnode* noundef %2) #24, !dbg !15732
  %4 = xor i1 %3, true, !dbg !15733
  ret i1 %4, !dbg !15734
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15735 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15737, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata i64 0, metadata !15738, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata i32 0, metadata !15739, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15744
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15746, !srcloc !15393
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15746
  call void @llvm.dbg.value(metadata i32 %3, metadata !15390, metadata !DIExpression()) #23, !dbg !15748
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15748
  call void @llvm.dbg.value(metadata i32 %3, metadata !15384, metadata !DIExpression()) #23, !dbg !15744
  call void @llvm.dbg.value(metadata i32 %3, metadata !15741, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i64 0, metadata !15738, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()), !dbg !15743
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15749
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !15752
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15738, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15742
  call void @llvm.dbg.value(metadata i32 %3, metadata !15446, metadata !DIExpression()) #23, !dbg !15753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15753
  call void @llvm.dbg.value(metadata i32 %3, metadata !15454, metadata !DIExpression()) #23, !dbg !15755
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15757, !srcloc !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()), !dbg !15743
  %6 = add i64 %5, %4, !dbg !15758
  ret i64 %6, !dbg !15759
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15760 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15762, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata i32 0, metadata !15763, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15768
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15770, !srcloc !15393
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15770
  call void @llvm.dbg.value(metadata i32 %2, metadata !15390, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 %2, metadata !15384, metadata !DIExpression()) #23, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %2, metadata !15765, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 -1, metadata !15762, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata i32 undef, metadata !15763, metadata !DIExpression()), !dbg !15767
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !15773
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata i32 %2, metadata !15446, metadata !DIExpression()) #23, !dbg !15776
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15776
  call void @llvm.dbg.value(metadata i32 %2, metadata !15454, metadata !DIExpression()) #23, !dbg !15778
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15780, !srcloc !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15763, metadata !DIExpression()), !dbg !15767
  ret i32 %3, !dbg !15781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15784, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i1 %1, metadata !15785, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15794
  call void @llvm.dbg.value(metadata i32 0, metadata !15786, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15796
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15798, !srcloc !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !15788, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !15786, metadata !DIExpression()), !dbg !15795
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !15801
  call void @llvm.dbg.value(metadata i32 %4, metadata !15789, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.value(metadata i1 undef, metadata !15792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15802
  %5 = icmp slt i32 %4, 2, !dbg !15803
  call void @llvm.dbg.value(metadata i1 %5, metadata !15793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15802
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15804
  call void @llvm.dbg.value(metadata i1 %6, metadata !15792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15802
  br i1 %7, label %11, label %8, !dbg !15804

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15806
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15806
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15808
  br label %11, !dbg !15809

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15798
  call void @llvm.dbg.value(metadata i32 %12, metadata !15390, metadata !DIExpression()) #23, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %12, metadata !15384, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 %12, metadata !15788, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15810
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()) #23, !dbg !15812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !15814, !srcloc !15460
  call void @llvm.dbg.value(metadata i32 1, metadata !15786, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !15786, metadata !DIExpression()), !dbg !15795
  ret void, !dbg !15815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15820, metadata !DIExpression()), !dbg !15825
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15827
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15829, !srcloc !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()) #23, !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()), !dbg !15825
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15825
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()), !dbg !15825
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !15832
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15833
  br i1 %4, label %28, label %5, !dbg !15834

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15835
  %10 = load i64, i64* %9, align 8, !dbg !15835
  %11 = sext i32 %8 to i64, !dbg !15836
  %12 = icmp sgt i64 %10, %11, !dbg !15837
  br i1 %12, label %26, label %13, !dbg !15838

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15825
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15822, metadata !DIExpression()), !dbg !15839
  %15 = trunc i64 %10 to i32, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %15, metadata !15824, metadata !DIExpression()), !dbg !15839
  %16 = sext i32 %15 to i64, !dbg !15841
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15842
  %18 = add i64 %17, %16, !dbg !15842
  store i64 %18, i64* @curr_tick, align 8, !dbg !15842
  store i64 0, i64* %9, align 8, !dbg !15843
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !15844
  call void @llvm.dbg.value(metadata i32 %14, metadata !15446, metadata !DIExpression()) #23, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15845
  call void @llvm.dbg.value(metadata i32 %14, metadata !15454, metadata !DIExpression()) #23, !dbg !15847
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15849, !srcloc !15460
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15850
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15850
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !15851
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15852
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15854, !srcloc !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()) #23, !dbg !15852
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()), !dbg !15825
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15857
  %23 = sub nsw i32 %22, %15, !dbg !15857
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15825
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()), !dbg !15825
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !15832
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15833
  br i1 %25, label %28, label %5, !dbg !15834, !llvm.loop !15858

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15860
  store i64 %27, i64* %9, align 8, !dbg !15860
  br label %32, !dbg !15863

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15825
  %31 = sext i32 %30 to i64, !dbg !15864
  br label %32, !dbg !15864

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15864
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15825
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15865
  %37 = add i64 %36, %33, !dbg !15865
  store i64 %37, i64* @curr_tick, align 8, !dbg !15865
  store i32 0, i32* @announce_remaining, align 4, !dbg !15866
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !15867
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !15868
  call void @llvm.dbg.value(metadata i32 %35, metadata !15446, metadata !DIExpression()) #23, !dbg !15869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15869
  call void @llvm.dbg.value(metadata i32 %35, metadata !15454, metadata !DIExpression()) #23, !dbg !15871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !15873, !srcloc !15460
  ret void, !dbg !15874
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15875 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15877, metadata !DIExpression()), !dbg !15881
  call void @llvm.dbg.value(metadata i32 0, metadata !15878, metadata !DIExpression()), !dbg !15882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15378, metadata !DIExpression()) #23, !dbg !15883
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15885, !srcloc !15393
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15885
  call void @llvm.dbg.value(metadata i32 %2, metadata !15390, metadata !DIExpression()) #23, !dbg !15887
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()) #23, !dbg !15887
  call void @llvm.dbg.value(metadata i32 %2, metadata !15384, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %2, metadata !15880, metadata !DIExpression()), !dbg !15882
  call void @llvm.dbg.value(metadata i64 0, metadata !15877, metadata !DIExpression()), !dbg !15881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15878, metadata !DIExpression()), !dbg !15882
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15888
  %4 = tail call fastcc i32 @elapsed.199() #24, !dbg !15891
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15881
  call void @llvm.dbg.value(metadata i32 %2, metadata !15446, metadata !DIExpression()) #23, !dbg !15892
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15451, metadata !DIExpression()) #23, !dbg !15892
  call void @llvm.dbg.value(metadata i32 %2, metadata !15454, metadata !DIExpression()) #23, !dbg !15894
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15896, !srcloc !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15878, metadata !DIExpression()), !dbg !15882
  %5 = sext i32 %4 to i64, !dbg !15891
  %6 = add i64 %3, %5, !dbg !15897
  ret i64 %6, !dbg !15898
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15899 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !15900
  %2 = trunc i64 %1 to i32, !dbg !15901
  ret i32 %2, !dbg !15902
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15903 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !15904
  ret i64 %1, !dbg !15905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15908, metadata !DIExpression()), !dbg !15915
  %2 = icmp eq i32 %0, 0, !dbg !15916
  br i1 %2, label %10, label %3, !dbg !15918

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %4, metadata !15909, metadata !DIExpression()), !dbg !15915
  %5 = mul i32 %0, 200, !dbg !15920
  call void @llvm.dbg.value(metadata i32 %5, metadata !15910, metadata !DIExpression()), !dbg !15915
  br label %6, !dbg !15921

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %7, metadata !15911, metadata !DIExpression()), !dbg !15923
  %8 = sub i32 %7, %4, !dbg !15924
  %9 = icmp ult i32 %8, %5, !dbg !15926
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15928 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !15929
  ret i32 %1, !dbg !15930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15931 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15933
  ret i32 %1, !dbg !15934
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15935 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15939, metadata !DIExpression()), !dbg !15941
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15942

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !15943
  br label %14, !dbg !15947

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15940, metadata !DIExpression()), !dbg !15941
  %6 = icmp slt i64 %2, -1, !dbg !15948
  br i1 %6, label %7, label %9, !dbg !15951

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15952
  br label %14, !dbg !15953

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !15955
  %11 = icmp ugt i64 %2, 1, !dbg !15956
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15956
  %13 = add nsw i64 %10, %12, !dbg !15957
  br label %14, !dbg !15958

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15959
  ret i64 %15, !dbg !15960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !15961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15963, metadata !DIExpression()), !dbg !15967
  %2 = icmp eq i8* %0, null, !dbg !15968
  br i1 %2, label %7, label %3, !dbg !15970

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !15964, metadata !DIExpression()), !dbg !15967
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !15971
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !15971
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !15964, metadata !DIExpression()), !dbg !15967
  call void @llvm.dbg.value(metadata i8* %4, metadata !15963, metadata !DIExpression()), !dbg !15967
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !15973
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #25, !dbg !15974
  br label %7, !dbg !15975

7:                                                ; preds = %3, %1
  ret void, !dbg !15976
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15981, metadata !DIExpression()), !dbg !15984
  call void @llvm.dbg.value(metadata i32 %1, metadata !15982, metadata !DIExpression()), !dbg !15984
  %3 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #24, !dbg !15985
  call void @llvm.dbg.value(metadata i8* %3, metadata !15983, metadata !DIExpression()), !dbg !15984
  ret i8* %3, !dbg !15986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !15987 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15991, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 %1, metadata !15992, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 %2, metadata !15993, metadata !DIExpression()), !dbg !15997
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !15993, metadata !DIExpression(DW_OP_deref)), !dbg !15997
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !15998
  br i1 %5, label %14, label %6, !dbg !16000

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !16001
  call void @llvm.dbg.value(metadata i32 %7, metadata !15996, metadata !DIExpression()), !dbg !15997
  %8 = load i32, i32* %4, align 4, !dbg !16002
  call void @llvm.dbg.value(metadata i32 %8, metadata !15993, metadata !DIExpression()), !dbg !15997
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #25, !dbg !16003
  call void @llvm.dbg.value(metadata i8* %9, metadata !15994, metadata !DIExpression()), !dbg !15997
  %10 = icmp eq i8* %9, null, !dbg !16004
  br i1 %10, label %14, label %11, !dbg !16006

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !16007
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !15995, metadata !DIExpression()), !dbg !15997
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !16008
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !16009
  call void @llvm.dbg.value(metadata i8* %13, metadata !15995, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i8* %13, metadata !15994, metadata !DIExpression()), !dbg !15997
  br label %14, !dbg !16010

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !15997
  ret i8* %15, !dbg !16011
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #20 !dbg !16012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16014, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata i32 4, metadata !16015, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata i32* %1, metadata !16016, metadata !DIExpression()), !dbg !16017
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !16018
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !16018
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !16018
  store i32 %5, i32* %1, align 4, !dbg !16018
  ret i1 %4, !dbg !16019
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !16020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16022, metadata !DIExpression()), !dbg !16024
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #24, !dbg !16025
  call void @llvm.dbg.value(metadata i8* %2, metadata !16023, metadata !DIExpression()), !dbg !16024
  ret i8* %2, !dbg !16026
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16027 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !16029, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata i32 %1, metadata !16030, metadata !DIExpression()), !dbg !16033
  %4 = bitcast i32* %3 to i8*, !dbg !16034
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !16034
  call void @llvm.dbg.value(metadata i32* %3, metadata !16032, metadata !DIExpression(DW_OP_deref)), !dbg !16033
  %5 = call fastcc zeroext i1 @size_mul_overflow.229(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #24, !dbg !16035
  br i1 %5, label %12, label %6, !dbg !16037

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !16038
  call void @llvm.dbg.value(metadata i32 %7, metadata !16032, metadata !DIExpression()), !dbg !16033
  %8 = tail call i8* @k_malloc(i32 noundef %7) #24, !dbg !16039
  call void @llvm.dbg.value(metadata i8* %8, metadata !16031, metadata !DIExpression()), !dbg !16033
  %9 = icmp eq i8* %8, null, !dbg !16040
  br i1 %9, label %12, label %10, !dbg !16042

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !16032, metadata !DIExpression()), !dbg !16033
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #25, !dbg !16043
  br label %12, !dbg !16045

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !16033
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !16046
  ret i8* %13, !dbg !16046
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.229(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #20 !dbg !16047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16049, metadata !DIExpression()), !dbg !16052
  call void @llvm.dbg.value(metadata i32 %1, metadata !16050, metadata !DIExpression()), !dbg !16052
  call void @llvm.dbg.value(metadata i32* %2, metadata !16051, metadata !DIExpression()), !dbg !16052
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !16053
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !16053
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !16053
  store i32 %6, i32* %2, align 4, !dbg !16053
  ret i1 %5, !dbg !16054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !16055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16123, metadata !DIExpression()), !dbg !16124
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !16125
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 4, !dbg !16126
  ret void, !dbg !16127
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16130, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 %1, metadata !16131, metadata !DIExpression()), !dbg !16134
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16135
  br i1 %3, label %9, label %4, !dbg !16137

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16138
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 5, !dbg !16140
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 4, !dbg !16140
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !16133, metadata !DIExpression()), !dbg !16134
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !16141
  br i1 %8, label %12, label %9, !dbg !16143

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #24, !dbg !16144
  call void @llvm.dbg.value(metadata i8* %11, metadata !16132, metadata !DIExpression()), !dbg !16134
  br label %12, !dbg !16146

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !16147
  call void @llvm.dbg.value(metadata i8* %13, metadata !16132, metadata !DIExpression()), !dbg !16134
  ret i8* %13, !dbg !16148
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !16149 {
  tail call void asm sideeffect "nop", ""() #23, !dbg !16151, !srcloc !16154
  ret void, !dbg !16155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16156 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.238, i32 0, i32 0)) #25, !dbg !16158
  ret void, !dbg !16159
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16160 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16162, metadata !DIExpression()), !dbg !16182
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16163, metadata !DIExpression()), !dbg !16183
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16184

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16185

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16163, metadata !DIExpression()), !dbg !16183
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16186
  %6 = load i8*, i8** %5, align 4, !dbg !16186
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16190
  %8 = load i32, i32* %7, align 4, !dbg !16190
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #24, !dbg !16191
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16192
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16163, metadata !DIExpression()), !dbg !16183
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16193
  br i1 %10, label %3, label %2, !dbg !16184, !llvm.loop !16195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16197 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16201, metadata !DIExpression()), !dbg !16204
  call void @llvm.dbg.value(metadata i8* %1, metadata !16202, metadata !DIExpression()), !dbg !16204
  call void @llvm.dbg.value(metadata i32 %2, metadata !16203, metadata !DIExpression()), !dbg !16204
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16205
  tail call fastcc void @z_waitq_init.240(%struct._wait_q_t* noundef nonnull %4) #24, !dbg !16206
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16207
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !16208
  ret void, !dbg !16209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.240(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !16210 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16215, metadata !DIExpression()), !dbg !16216
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16217
  tail call fastcc void @sys_dlist_init.241(%struct._dnode* noundef %2) #24, !dbg !16218
  ret void, !dbg !16219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.241(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16220 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16225, metadata !DIExpression()), !dbg !16226
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16227
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16228
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16229
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16230
  ret void, !dbg !16231
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16232 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16243, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16240, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i32 %1, metadata !16241, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i32 %2, metadata !16242, metadata !DIExpression()), !dbg !16253
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !16254
  call void @llvm.dbg.value(metadata i64 %6, metadata !16245, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i8* null, metadata !16246, metadata !DIExpression()), !dbg !16253
  %7 = icmp eq i64 %5, -1, !dbg !16255
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16255
  call void @llvm.dbg.value(metadata i64 %8, metadata !16245, metadata !DIExpression()), !dbg !16253
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16264
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16266, !srcloc !16272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16269, metadata !DIExpression()) #23, !dbg !16273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()) #23, !dbg !16273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16264
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i8 0, metadata !16252, metadata !DIExpression()), !dbg !16253
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16246, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i8 0, metadata !16252, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()), !dbg !16253
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !16274
  call void @llvm.dbg.value(metadata i8* %12, metadata !16246, metadata !DIExpression()), !dbg !16253
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !16276
  call void @llvm.dbg.value(metadata i64 %13, metadata !16244, metadata !DIExpression()), !dbg !16253
  %14 = icmp eq i8* %12, null, !dbg !16277
  br i1 %14, label %15, label %31, !dbg !16279

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()), !dbg !16253
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16279

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16252, metadata !DIExpression()), !dbg !16253
  %20 = sub nsw i64 %8, %18, !dbg !16280
  %21 = icmp slt i64 %20, 1, !dbg !16281
  br i1 %21, label %31, label %22, !dbg !16282

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16253
  call void @llvm.dbg.value(metadata i8 undef, metadata !16252, metadata !DIExpression()), !dbg !16253
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16283
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16283
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #25, !dbg !16283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16284
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16286, !srcloc !16272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16269, metadata !DIExpression()) #23, !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()) #23, !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i8* null, metadata !16246, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()), !dbg !16253
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !16274
  call void @llvm.dbg.value(metadata i8* %28, metadata !16246, metadata !DIExpression()), !dbg !16253
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !16276
  call void @llvm.dbg.value(metadata i64 %29, metadata !16244, metadata !DIExpression()), !dbg !16253
  %30 = icmp eq i8* %28, null, !dbg !16277
  br i1 %30, label %17, label %31, !dbg !16279, !llvm.loop !16289

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16274
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16253
  call void @llvm.dbg.value(metadata i8* %33, metadata !16246, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata i32 %34, metadata !16292, metadata !DIExpression()) #23, !dbg !16298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16297, metadata !DIExpression()) #23, !dbg !16298
  call void @llvm.dbg.value(metadata i32 %34, metadata !16300, metadata !DIExpression()) #23, !dbg !16303
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #23, !dbg !16305, !srcloc !16306
  ret i8* %33, !dbg !16307
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16308 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16314, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16312, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata i32 %1, metadata !16313, metadata !DIExpression()), !dbg !16316
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #24, !dbg !16317
  call void @llvm.dbg.value(metadata i8* %4, metadata !16315, metadata !DIExpression()), !dbg !16316
  ret i8* %4, !dbg !16318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16319 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16323, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i8* %1, metadata !16324, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16327
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16329, !srcloc !16272
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16329
  call void @llvm.dbg.value(metadata i32 %4, metadata !16269, metadata !DIExpression()) #23, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()) #23, !dbg !16331
  call void @llvm.dbg.value(metadata i32 %4, metadata !16263, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %4, metadata !16325, metadata !DIExpression()), !dbg !16326
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16332
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !16333
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16334
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #25, !dbg !16336
  %8 = icmp eq i32 %7, 0, !dbg !16337
  br i1 %8, label %12, label %9, !dbg !16338

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16339
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !16340
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !16340
  br label %13, !dbg !16342

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16292, metadata !DIExpression()) #23, !dbg !16343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16297, metadata !DIExpression()) #23, !dbg !16343
  call void @llvm.dbg.value(metadata i32 %4, metadata !16300, metadata !DIExpression()) #23, !dbg !16346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16348, !srcloc !16306
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !16349
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1135, !2, !2410, !27, !360, !384, !2412, !2414, !2447, !2481, !394, !2483, !2486, !2497, !2544, !2546, !2574, !2602, !2645, !2716, !2761, !2789, !823, !833, !845, !950, !1146, !1427, !2794, !1687, !2796, !2799, !2876, !2890, !2902, !3027, !1717, !3030, !1723, !2076, !3048, !3050, !2097, !2199, !3148, !2308, !2347, !3151, !3153, !2385}
!llvm.ident = !{!3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155, !3155}
!llvm.module.flags = !{!3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_bm_channel", scope: !27, file: !114, line: 16, type: !136, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !284, !286, !288, !290, !292, !294, !296, !298, !300, !333, !337, !342, !344, !351, !356}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "bm_channel", scope: !27, file: !114, line: 16, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !123, !125, !126, !134, !253}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !120, size: 16)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !13, !132}
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 214, baseType: !32)
!133 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !135, size: 32, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !160, !251, !252}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !136, file: !137, line: 2722, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !142, file: !141, line: 232, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !148)
!148 = !{!149, !155}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 38, baseType: !150, size: 32)
!150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 38, size: 32, elements: !151)
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !150, file: !146, line: 39, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !146, line: 40, baseType: !153, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 42, baseType: !156, size: 32, offset: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 42, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !156, file: !146, line: 43, baseType: !153, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !156, file: !146, line: 44, baseType: !153, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !136, file: !137, line: 2724, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !{!165, !212, !225, !226, !227, !228, !246}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !162, file: !163, line: 247, baseType: !166, size: 384)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !167)
!167 = !{!168, !182, !184, !187, !188, !199, !200, !201}
!168 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 60, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 60, size: 64, elements: !170)
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !169, file: !163, line: 61, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !147)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !169, file: !163, line: 62, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !176)
!175 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !174, file: !175, line: 50, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!180 = !{!181}
!181 = !DISubrange(count: 2)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !166, file: !163, line: 68, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !166, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !166, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !163, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !163, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !163, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !163, line: 100, baseType: !121, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !166, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !166, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !166, file: !163, line: 131, baseType: !202, size: 192, offset: 192)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !203)
!203 = !{!204, !205, !211}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !202, file: !141, line: 245, baseType: !172, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !202, file: !141, line: 246, baseType: !206, size: 32, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !202, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !162, file: !163, line: 250, baseType: !213, size: 288, offset: 384)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !213, file: !214, line: 26, baseType: !108, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !213, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !213, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !213, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !213, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !213, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !213, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !213, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !213, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !162, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !162, file: !163, line: 256, baseType: !140, size: 64, offset: 704)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !162, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !162, file: !163, line: 325, baseType: !229, size: 32, offset: 800)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !231)
!231 = !{!232, !241, !242}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !230, file: !137, line: 5074, baseType: !233, size: 96)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = !{!236, !239, !240}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !233, file: !234, line: 57, baseType: !237, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !234, line: 57, flags: DIFlagFwdDecl)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !233, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !233, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !230, file: !137, line: 5075, baseType: !140, size: 64, offset: 96)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !230, file: !137, line: 5076, baseType: !243, offset: 160)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !162, file: !163, line: 343, baseType: !247, size: 64, offset: 832)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !247, file: !214, line: 63, baseType: !108, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !247, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !136, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !136, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !254, size: 32, offset: 160)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !259)
!259 = !{!260, !261, !278}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !258, file: !117, line: 91, baseType: !131, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !258, file: !117, line: 93, baseType: !262, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !265)
!265 = !{!266, !267, !268, !269, !270, !273, !274, !275, !276, !277}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !264, file: !137, line: 4206, baseType: !140, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !264, file: !137, line: 4208, baseType: !243, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !264, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !264, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !264, file: !137, line: 4214, baseType: !271, size: 32, offset: 128)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !264, file: !137, line: 4216, baseType: !271, size: 32, offset: 160)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !264, file: !137, line: 4218, baseType: !271, size: 32, offset: 192)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !264, file: !137, line: 4220, baseType: !271, size: 32, offset: 224)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !264, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !258, file: !117, line: 96, baseType: !279, size: 32, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !280)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !283}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!284 = !DIGlobalVariableExpression(var: !285, expr: !DIExpression())
!285 = distinct !DIGlobalVariable(name: "s1", scope: !27, file: !114, line: 126, type: !258, isLocal: false, isDefinition: true, align: 32)
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "s2", scope: !27, file: !114, line: 129, type: !258, isLocal: false, isDefinition: true, align: 32)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "s3", scope: !27, file: !114, line: 131, type: !258, isLocal: false, isDefinition: true, align: 32)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s4", scope: !27, file: !114, line: 132, type: !258, isLocal: false, isDefinition: true, align: 32)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "s5", scope: !27, file: !114, line: 134, type: !258, isLocal: false, isDefinition: true, align: 32)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "s6", scope: !27, file: !114, line: 135, type: !258, isLocal: false, isDefinition: true, align: 32)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "s7", scope: !27, file: !114, line: 136, type: !258, isLocal: false, isDefinition: true, align: 32)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "s8", scope: !27, file: !114, line: 137, type: !258, isLocal: false, isDefinition: true, align: 32)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !27, file: !114, line: 216, type: !302, isLocal: false, isDefinition: true, align: 32)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !303)
!303 = !{!304, !305, !313, !314, !319, !320, !321, !322, !323, !324, !326, !330}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !302, file: !137, line: 621, baseType: !161, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !302, file: !137, line: 622, baseType: !306, size: 32, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !308, line: 44, baseType: !309)
!308 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !310, line: 47, size: 8, elements: !311)
!310 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = !{!312}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !309, file: !310, line: 48, baseType: !272, size: 8)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !302, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !302, file: !137, line: 624, baseType: !315, size: 32, offset: 96)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !308, line: 46, baseType: !316)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!317 = !DISubroutineType(types: !318)
!318 = !{null, !102, !102, !102}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !302, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !302, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !302, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !302, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !302, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !302, file: !137, line: 630, baseType: !325, size: 32, offset: 288)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !302, file: !137, line: 631, baseType: !327, size: 32, offset: 320)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = !DISubroutineType(types: !329)
!329 = !{null}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !302, file: !137, line: 632, baseType: !331, size: 32, offset: 352)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !27, file: !114, line: 216, type: !335, isLocal: false, isDefinition: true)
!335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !161)
!337 = !DIGlobalVariableExpression(var: !338, expr: !DIExpression())
!338 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !27, file: !114, line: 216, type: !339, isLocal: false, isDefinition: true, align: 64)
!339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 8192, elements: !340)
!340 = !{!341}
!341 = !DISubrange(count: 1024)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !27, file: !114, line: 216, type: !162, isLocal: false, isDefinition: true)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "_zbus_message_bm_channel", scope: !27, file: !114, line: 16, type: !346, isLocal: true, isDefinition: true)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !347, line: 10, size: 64, elements: !348)
!347 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !346, file: !347, line: 11, baseType: !102, size: 32)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !346, file: !347, line: 12, baseType: !132, size: 32, offset: 32)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "_zbus_observers_bm_channel", scope: !27, file: !114, line: 16, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 288, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 9)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 44, type: !109, isLocal: true, isDefinition: true)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !360, file: !375, line: 18, type: !376, isLocal: false, isDefinition: true)
!360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !361, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !362, globals: !374, splitDebugInlining: false, nameTableKind: None)
!361 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!362 = !{!22, !102, !24, !363, !365, !367, !132, !103, !368, !369, !371, !372, !271, !373, !121, !331}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 32)
!364 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!374 = !{!358}
!375 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !378, line: 16, size: 64, elements: !379)
!378 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !377, file: !378, line: 17, baseType: !331, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !377, file: !378, line: 18, baseType: !185, size: 8, offset: 32)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(name: "_char_out", scope: !384, file: !388, line: 54, type: !389, isLocal: false, isDefinition: true)
!384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !385, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, globals: !387, splitDebugInlining: false, nameTableKind: None)
!385 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!386 = !{!102, !103}
!387 = !{!382}
!388 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 32)
!390 = !DISubroutineType(types: !391)
!391 = !{!103, !103}
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !394, file: !808, line: 258, type: !809, isLocal: true, isDefinition: true, align: 32)
!394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !395, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !396, retainedTypes: !679, globals: !807, splitDebugInlining: false, nameTableKind: None)
!395 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!396 = !{!397, !429, !439, !488, !494, !615, !650}
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !398, line: 54, baseType: !32, size: 32, elements: !399)
!398 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!399 = !{!400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428}
!400 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!401 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!402 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!403 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!404 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!405 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!406 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!407 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!408 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!409 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!410 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!411 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!412 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!413 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!414 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!415 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!416 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!417 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!418 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!419 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!420 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!421 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!422 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!423 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!424 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!425 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!426 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!427 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!428 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !398, line: 224, baseType: !32, size: 32, elements: !430)
!430 = !{!431, !432, !433, !434, !435, !436, !437, !438}
!431 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!432 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!433 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!434 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!435 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!436 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!437 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!438 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!439 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !398, line: 275, baseType: !32, size: 32, elements: !440)
!440 = !{!441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487}
!441 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!442 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!443 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!444 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!445 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!446 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!447 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!448 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!449 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!450 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!451 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!452 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!453 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!454 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!455 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!456 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!457 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!458 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!459 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!460 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!461 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!462 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!463 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!464 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!465 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!466 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!467 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!468 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!469 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!470 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!471 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!472 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!473 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!474 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!475 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!476 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!477 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!478 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!479 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!480 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!481 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!482 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!483 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!484 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!485 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!486 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!487 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!488 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !398, line: 327, baseType: !32, size: 32, elements: !489)
!489 = !{!490, !491, !492, !493}
!490 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!491 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!492 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!493 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !495, line: 76, baseType: !32, size: 32, elements: !496)
!495 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614}
!497 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!498 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!499 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!500 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!501 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!502 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!503 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!504 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!505 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!506 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!507 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!508 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!509 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!510 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!511 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!512 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!513 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!514 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!515 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!516 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!517 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!518 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!519 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!520 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!521 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!522 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!523 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!524 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!525 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!526 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!527 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!528 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!529 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!530 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!531 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!532 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!533 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!534 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!535 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!536 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!537 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!538 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!539 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!540 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!541 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!542 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!543 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!544 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!545 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!546 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!547 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!548 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!549 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!550 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!551 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!552 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!553 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!554 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!555 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!556 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!557 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!558 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!559 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!560 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!561 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!562 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!563 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!564 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!565 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!566 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!567 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!568 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!569 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!570 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!571 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!572 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!573 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!574 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!575 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!576 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!577 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!578 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!579 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!580 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!581 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!582 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!583 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!584 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!585 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!586 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!587 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!588 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!589 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!590 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!591 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!592 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!593 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!594 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!595 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!596 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!597 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!598 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!599 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!600 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!601 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!602 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!603 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!604 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!605 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!606 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!607 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!608 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!609 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!610 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!611 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!612 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!613 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!614 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!615 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !398, line: 237, baseType: !32, size: 32, elements: !616)
!616 = !{!617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649}
!617 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!618 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!619 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!620 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!621 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!622 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!623 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!624 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!625 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!626 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!627 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!628 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!629 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!630 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!631 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!632 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!633 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!634 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!635 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!636 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!637 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!638 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!639 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!640 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!641 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!642 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!643 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!644 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!645 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!646 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!647 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!648 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!649 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!650 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !495, line: 44, baseType: !32, size: 32, elements: !651)
!651 = !{!652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678}
!652 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!653 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!654 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!655 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!656 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!657 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!658 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!659 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!660 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!661 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!662 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!663 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!664 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!665 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!666 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!667 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!668 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!669 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!670 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!671 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!672 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!673 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!674 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!675 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!676 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!677 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!678 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!679 = !{!680, !752, !795, !806, !108}
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !682, line: 4575, baseType: !683)
!682 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 4532, size: 390144, elements: !684)
!684 = !{!685, !687, !688, !689, !690, !694, !704, !708, !718, !722}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !683, file: !682, line: 4533, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !683, file: !682, line: 4534, baseType: !686, size: 32, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !683, file: !682, line: 4535, baseType: !686, size: 32, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !683, file: !682, line: 4536, baseType: !686, size: 32, offset: 96)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !683, file: !682, line: 4537, baseType: !691, size: 16256, offset: 128)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 16256, elements: !692)
!692 = !{!693}
!693 = !DISubrange(count: 2032)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !683, file: !682, line: 4543, baseType: !695, size: 4224, offset: 16384)
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 4224, elements: !702)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !683, file: !682, line: 4538, size: 128, elements: !697)
!697 = !{!698, !699, !700, !701}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !696, file: !682, line: 4539, baseType: !686, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !696, file: !682, line: 4540, baseType: !686, size: 32, offset: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !696, file: !682, line: 4541, baseType: !686, size: 32, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !696, file: !682, line: 4542, baseType: !686, size: 32, offset: 96)
!702 = !{!703}
!703 = !DISubrange(count: 33)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !683, file: !682, line: 4544, baseType: !705, size: 110464, offset: 20608)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 110464, elements: !706)
!706 = !{!707}
!707 = !DISubrange(count: 13808)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !683, file: !682, line: 4550, baseType: !709, size: 24448, offset: 131072)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !710, size: 24448, elements: !716)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !683, file: !682, line: 4545, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !710, file: !682, line: 4546, baseType: !686, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !710, file: !682, line: 4547, baseType: !686, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !710, file: !682, line: 4548, baseType: !686, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !710, file: !682, line: 4549, baseType: !686, size: 32, offset: 96)
!716 = !{!717}
!717 = !DISubrange(count: 191)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !683, file: !682, line: 4551, baseType: !719, size: 106624, offset: 155520)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 106624, elements: !720)
!720 = !{!721}
!721 = !DISubrange(count: 13328)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !683, file: !682, line: 4574, baseType: !723, size: 128000, offset: 262144)
!723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !724, size: 128000, elements: !750)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !683, file: !682, line: 4552, size: 1024, elements: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !746, !747, !748, !749}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !724, file: !682, line: 4553, baseType: !686, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !724, file: !682, line: 4554, baseType: !686, size: 32, offset: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !724, file: !682, line: 4555, baseType: !686, size: 32, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !724, file: !682, line: 4556, baseType: !686, size: 32, offset: 96)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !724, file: !682, line: 4557, baseType: !686, size: 32, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !724, file: !682, line: 4558, baseType: !686, size: 32, offset: 160)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !724, file: !682, line: 4559, baseType: !686, size: 32, offset: 192)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !724, file: !682, line: 4560, baseType: !686, size: 32, offset: 224)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !724, file: !682, line: 4561, baseType: !686, size: 32, offset: 256)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !724, file: !682, line: 4562, baseType: !686, size: 32, offset: 288)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !724, file: !682, line: 4563, baseType: !686, size: 32, offset: 320)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !724, file: !682, line: 4564, baseType: !686, size: 32, offset: 352)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !724, file: !682, line: 4565, baseType: !686, size: 32, offset: 384)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !724, file: !682, line: 4566, baseType: !686, size: 32, offset: 416)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !724, file: !682, line: 4567, baseType: !686, size: 32, offset: 448)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !724, file: !682, line: 4568, baseType: !686, size: 32, offset: 480)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !724, file: !682, line: 4569, baseType: !743, size: 384, offset: 512)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 384, elements: !744)
!744 = !{!745}
!745 = !DISubrange(count: 48)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !724, file: !682, line: 4570, baseType: !686, size: 32, offset: 896)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !724, file: !682, line: 4571, baseType: !686, size: 32, offset: 928)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !724, file: !682, line: 4572, baseType: !686, size: 32, offset: 960)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !724, file: !682, line: 4573, baseType: !686, size: 32, offset: 992)
!750 = !{!751}
!751 = !DISubrange(count: 125)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !682, line: 38320, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 38303, size: 23040, elements: !755)
!755 = !{!756, !758, !762, !763, !764, !765, !769, !773, !777, !781, !785}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !754, file: !682, line: 38304, baseType: !757, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !686)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !754, file: !682, line: 38305, baseType: !759, size: 256, offset: 32)
!759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 256, elements: !760)
!760 = !{!761}
!761 = !DISubrange(count: 32)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !754, file: !682, line: 38306, baseType: !686, size: 32, offset: 288)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !754, file: !682, line: 38307, baseType: !686, size: 32, offset: 320)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !754, file: !682, line: 38308, baseType: !686, size: 32, offset: 352)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !754, file: !682, line: 38309, baseType: !766, size: 3712, offset: 384)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 3712, elements: !767)
!767 = !{!768}
!768 = !DISubrange(count: 464)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !754, file: !682, line: 38310, baseType: !770, size: 864, offset: 4096)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 864, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 27)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !754, file: !682, line: 38311, baseType: !774, size: 3232, offset: 4960)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 3232, elements: !775)
!775 = !{!776}
!776 = !DISubrange(count: 404)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !754, file: !682, line: 38312, baseType: !778, size: 3776, offset: 8192)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 3776, elements: !779)
!779 = !{!780}
!780 = !DISubrange(count: 118)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !754, file: !682, line: 38313, baseType: !782, size: 4416, offset: 11968)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 4416, elements: !783)
!783 = !{!784}
!784 = !DISubrange(count: 552)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !754, file: !682, line: 38319, baseType: !786, size: 6656, offset: 16384)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 6656, elements: !793)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !754, file: !682, line: 38314, size: 128, elements: !788)
!788 = !{!789, !790, !791, !792}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !787, file: !682, line: 38315, baseType: !686, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !787, file: !682, line: 38316, baseType: !686, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !787, file: !682, line: 38317, baseType: !686, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !787, file: !682, line: 38318, baseType: !686, size: 32, offset: 96)
!793 = !{!794}
!794 = !DISubrange(count: 52)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !682, line: 43319, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 43313, size: 80, elements: !798)
!798 = !{!799, !801, !802, !804, !805}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !797, file: !682, line: 43314, baseType: !800, size: 16)
!800 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !797, file: !682, line: 43315, baseType: !800, size: 16, offset: 16)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !797, file: !682, line: 43316, baseType: !803, size: 16, offset: 32)
!803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !797, file: !682, line: 43317, baseType: !800, size: 16, offset: 48)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !797, file: !682, line: 43318, baseType: !800, size: 16, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 32)
!807 = !{!392}
!808 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !810)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !812)
!811 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!812 = !{!813, !820}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !810, file: !811, line: 60, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DISubroutineType(types: !816)
!816 = !{!103, !817}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !819)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !811, line: 48, flags: DIFlagFwdDecl)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !810, file: !811, line: 65, baseType: !817, size: 32, offset: 32)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !823, file: !830, line: 21, type: !389, isLocal: true, isDefinition: true)
!823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !824, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !825, globals: !829, splitDebugInlining: false, nameTableKind: None)
!824 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!825 = !{!826, !103, !102}
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !828, line: 22, baseType: !103)
!828 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !{!821}
!830 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !833, file: !837, line: 10, type: !838, isLocal: false, isDefinition: true)
!833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !835, globals: !836, splitDebugInlining: false, nameTableKind: None)
!834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!835 = !{!104, !102, !103}
!836 = !{!831}
!837 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !378, line: 16, size: 64, elements: !840)
!840 = !{!841, !842}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !839, file: !378, line: 17, baseType: !331, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !839, file: !378, line: 18, baseType: !185, size: 8, offset: 32)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !845, file: !941, line: 603, type: !943, isLocal: true, isDefinition: true, align: 32)
!845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !847, globals: !938, splitDebugInlining: false, nameTableKind: None)
!846 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!847 = !{!102, !103, !848}
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !851, line: 336, size: 608, elements: !852)
!851 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!852 = !{!853, !879, !883, !887, !900, !905, !911, !916, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !850, file: !851, line: 365, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!855 = !DISubroutineType(types: !856)
!856 = !{!103, !857, !878}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !860, line: 378, size: 192, elements: !861)
!860 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!861 = !{!862, !863, !864, !865, !871, !872}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !859, file: !860, line: 380, baseType: !331, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !859, file: !860, line: 382, baseType: !13, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !859, file: !860, line: 384, baseType: !13, size: 32, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !859, file: !860, line: 386, baseType: !866, size: 32, offset: 96)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !860, line: 351, size: 16, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !867, file: !860, line: 359, baseType: !185, size: 8)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !867, file: !860, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !859, file: !860, line: 388, baseType: !102, size: 32, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !859, file: !860, line: 396, baseType: !873, size: 32, offset: 160)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !860, line: 43, baseType: !876)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !877)
!877 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !850, file: !851, line: 366, baseType: !880, size: 32, offset: 32)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !857, !186}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !850, file: !851, line: 374, baseType: !884, size: 32, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DISubroutineType(types: !886)
!886 = !{!103, !857}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !850, file: !851, line: 377, baseType: !888, size: 32, offset: 96)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DISubroutineType(types: !890)
!890 = !{!103, !857, !891}
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !851, line: 122, size: 64, elements: !894)
!894 = !{!895, !896, !897, !898, !899}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !893, file: !851, line: 123, baseType: !108, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !893, file: !851, line: 124, baseType: !185, size: 8, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !893, file: !851, line: 125, baseType: !185, size: 8, offset: 40)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !893, file: !851, line: 126, baseType: !185, size: 8, offset: 48)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !893, file: !851, line: 127, baseType: !185, size: 8, offset: 56)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !850, file: !851, line: 379, baseType: !901, size: 32, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DISubroutineType(types: !903)
!903 = !{!103, !857, !904}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !850, file: !851, line: 384, baseType: !906, size: 32, offset: 160)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 32)
!907 = !DISubroutineType(types: !908)
!908 = !{!103, !857, !909, !103}
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !850, file: !851, line: 393, baseType: !912, size: 32, offset: 192)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!103, !857, !373, !915}
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !850, file: !851, line: 402, baseType: !917, size: 32, offset: 224)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DISubroutineType(types: !919)
!919 = !{null, !857}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !850, file: !851, line: 405, baseType: !917, size: 32, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !850, file: !851, line: 408, baseType: !884, size: 32, offset: 288)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !850, file: !851, line: 411, baseType: !917, size: 32, offset: 320)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !850, file: !851, line: 414, baseType: !917, size: 32, offset: 352)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !850, file: !851, line: 417, baseType: !884, size: 32, offset: 384)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !850, file: !851, line: 420, baseType: !884, size: 32, offset: 416)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !850, file: !851, line: 423, baseType: !917, size: 32, offset: 448)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !850, file: !851, line: 426, baseType: !917, size: 32, offset: 480)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !850, file: !851, line: 429, baseType: !884, size: 32, offset: 512)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !850, file: !851, line: 432, baseType: !884, size: 32, offset: 544)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !850, file: !851, line: 435, baseType: !931, size: 32, offset: 576)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !857, !934, !102}
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !851, line: 142, baseType: !935)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DISubroutineType(types: !937)
!937 = !{null, !857, !102}
!938 = !{!843, !939}
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !845, file: !941, line: 38, type: !942, isLocal: true, isDefinition: true)
!941 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !944, file: !811, line: 60, baseType: !884, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !944, file: !811, line: 65, baseType: !857, size: 32, offset: 32)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !950, file: !1054, line: 318, type: !1130, isLocal: false, isDefinition: true)
!950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !952, retainedTypes: !969, globals: !1051, splitDebugInlining: false, nameTableKind: None)
!951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!952 = !{!953, !959, !964}
!953 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !954, line: 506, baseType: !32, size: 32, elements: !955)
!954 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!955 = !{!956, !957, !958}
!956 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!957 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!958 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!959 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !954, line: 512, baseType: !32, size: 32, elements: !960)
!960 = !{!961, !962, !963}
!961 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!962 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!963 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !965, line: 66, baseType: !32, size: 32, elements: !966)
!965 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !{!967, !968}
!967 = !DIEnumerator(name: "gpioPinClear", value: 0)
!968 = !DIEnumerator(name: "gpioPinSet", value: 1)
!969 = !{!970, !1040, !1045, !1005, !959, !953, !1050, !102, !806, !1020, !271}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !954, line: 523, size: 288, elements: !973)
!973 = !{!974, !995, !1001, !1006, !1010, !1011, !1012, !1016, !1036}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !972, file: !954, line: 524, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!103, !978, !993, !994}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !860, line: 378, size: 192, elements: !981)
!981 = !{!982, !983, !984, !985, !991, !992}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !980, file: !860, line: 380, baseType: !331, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !980, file: !860, line: 382, baseType: !13, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !980, file: !860, line: 384, baseType: !13, size: 32, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !980, file: !860, line: 386, baseType: !986, size: 32, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !860, line: 351, size: 16, elements: !988)
!988 = !{!989, !990}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !987, file: !860, line: 359, baseType: !185, size: 8)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !987, file: !860, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !980, file: !860, line: 388, baseType: !102, size: 32, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !980, file: !860, line: 396, baseType: !873, size: 32, offset: 160)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !954, line: 237, baseType: !185)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !954, line: 257, baseType: !108)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !972, file: !954, line: 530, baseType: !996, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DISubroutineType(types: !998)
!998 = !{!103, !978, !999}
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !954, line: 229, baseType: !108)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !972, file: !954, line: 532, baseType: !1002, size: 32, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!103, !978, !1005, !1000}
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !954, line: 216, baseType: !108)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !972, file: !954, line: 535, baseType: !1007, size: 32, offset: 96)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!103, !978, !1005}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !972, file: !954, line: 537, baseType: !1007, size: 32, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !972, file: !954, line: 539, baseType: !1007, size: 32, offset: 160)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !972, file: !954, line: 541, baseType: !1013, size: 32, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!103, !978, !993, !953, !959}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !972, file: !954, line: 544, baseType: !1017, size: 32, offset: 224)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!103, !978, !1020, !131}
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !954, line: 478, size: 96, elements: !1022)
!1022 = !{!1023, !1030, !1035}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1021, file: !954, line: 482, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1025, line: 33, baseType: !1026)
!1025 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1025, line: 29, size: 32, elements: !1027)
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1026, file: !1025, line: 30, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1021, file: !954, line: 485, baseType: !1031, size: 32, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !954, line: 464, baseType: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{null, !978, !1020, !1005}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1021, file: !954, line: 493, baseType: !1005, size: 32, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !972, file: !954, line: 547, baseType: !1037, size: 32, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!108, !978}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !954, line: 428, size: 32, elements: !1043)
!1043 = !{!1044}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1042, file: !954, line: 434, baseType: !1005, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !954, line: 441, size: 32, elements: !1048)
!1048 = !{!1049}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1047, file: !954, line: 447, baseType: !1005, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1051 = !{!948, !1052, !1058, !1060, !1070, !1082, !1084, !1115, !1117, !1128}
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !950, file: !1054, line: 318, type: !1055, isLocal: false, isDefinition: true, align: 16)
!1054 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 400, elements: !1056)
!1056 = !{!1057}
!1057 = !DISubrange(count: 25)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !950, file: !1054, line: 318, type: !979, isLocal: false, isDefinition: true, align: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !950, file: !1054, line: 318, type: !1062, isLocal: true, isDefinition: true, align: 32)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !1064)
!1064 = !{!1065, !1069}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1063, file: !811, line: 60, baseType: !1066, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!103, !978}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1063, file: !811, line: 65, baseType: !978, size: 32, offset: 32)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !950, file: !1054, line: 318, type: !1072, isLocal: true, isDefinition: true)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1054, line: 33, size: 96, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1072, file: !1054, line: 35, baseType: !1047, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1072, file: !1054, line: 37, baseType: !1076, size: 64, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1025, line: 40, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1025, line: 35, size: 64, elements: !1078)
!1078 = !{!1079, !1081}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1077, file: !1025, line: 36, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1077, file: !1025, line: 37, baseType: !1080, size: 32, offset: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !950, file: !1054, line: 318, type: !987, isLocal: true, isDefinition: true, align: 8)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !950, file: !1054, line: 318, type: !1086, isLocal: true, isDefinition: true)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1054, line: 23, size: 128, elements: !1088)
!1088 = !{!1089, !1090, !1103, !1114}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1087, file: !1054, line: 25, baseType: !1042, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1087, file: !1054, line: 26, baseType: !1091, size: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !682, line: 19729, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 19720, size: 256, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1093, file: !682, line: 19721, baseType: !686, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1093, file: !682, line: 19722, baseType: !686, size: 32, offset: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1093, file: !682, line: 19723, baseType: !757, size: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1093, file: !682, line: 19724, baseType: !686, size: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1093, file: !682, line: 19725, baseType: !686, size: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1093, file: !682, line: 19726, baseType: !686, size: 32, offset: 160)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1093, file: !682, line: 19727, baseType: !686, size: 32, offset: 192)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1093, file: !682, line: 19728, baseType: !686, size: 32, offset: 224)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1087, file: !1054, line: 28, baseType: !1104, size: 32, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1107, line: 51, size: 128, elements: !1108)
!1107 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1108 = !{!1109, !1110, !1111, !1112, !1113}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1106, file: !1107, line: 52, baseType: !108, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1106, file: !1107, line: 53, baseType: !108, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1106, file: !1107, line: 54, baseType: !108, size: 32, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1106, file: !1107, line: 55, baseType: !185, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1106, file: !1107, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1087, file: !1054, line: 29, baseType: !185, size: 8, offset: 96)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !950, file: !1054, line: 249, type: !971, isLocal: true, isDefinition: true)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1119, file: !1054, line: 318, type: !1122, isLocal: true, isDefinition: true, align: 32)
!1119 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1054, file: !1054, line: 318, type: !1067, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !1120)
!1120 = !{!1121}
!1121 = !DILocalVariable(name: "port", arg: 1, scope: !1119, file: !1054, line: 318, type: !978)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1122, file: !10, line: 55, baseType: !325, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1122, file: !10, line: 57, baseType: !325, size: 32, offset: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1122, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1122, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1119, file: !1054, line: 318, type: !1122, isLocal: true, isDefinition: true, align: 32)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1105, size: 2048, elements: !1131)
!1131 = !{!1132}
!1132 = !DISubrange(count: 16)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1135, file: !1140, line: 7, type: !1141, isLocal: false, isDefinition: true, align: 16)
!1135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1137, splitDebugInlining: false, nameTableKind: None)
!1136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!1137 = !{!1133, !1138}
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1135, file: !1140, line: 12, type: !1141, isLocal: false, isDefinition: true, align: 16)
!1140 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 48, elements: !1142)
!1142 = !{!1143}
!1143 = !DISubrange(count: 3)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1146, file: !1343, line: 339, type: !1341, isLocal: true, isDefinition: true)
!1146 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1147, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1148, retainedTypes: !1234, globals: !1379, splitDebugInlining: false, nameTableKind: None)
!1147 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!1148 = !{!30, !1149, !1187, !1215, !1219, !1223, !1228}
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1150, line: 122, baseType: !32, size: 32, elements: !1151)
!1150 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186}
!1152 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1153 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1154 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1155 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1156 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1157 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1158 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1159 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1160 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1161 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1162 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1163 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1164 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1165 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1166 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1167 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1168 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1169 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1170 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1171 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1172 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1173 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1174 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1175 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1176 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1177 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1178 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1179 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1180 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1181 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1182 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1183 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1184 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1185 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1186 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1150, line: 91, baseType: !32, size: 32, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214}
!1189 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1190 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1191 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1192 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1193 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1194 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1195 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1196 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1197 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1198 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1199 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1200 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1201 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1202 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1203 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1204 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1205 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1206 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1207 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1208 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1209 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1210 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1211 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1212 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1213 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1214 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1150, line: 60, baseType: !32, size: 32, elements: !1216)
!1216 = !{!1217, !1218}
!1217 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1218 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1219 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1150, line: 67, baseType: !32, size: 32, elements: !1220)
!1220 = !{!1221, !1222}
!1221 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1222 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1150, line: 74, baseType: !32, size: 32, elements: !1224)
!1224 = !{!1225, !1226, !1227}
!1225 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1226 = !DIEnumerator(name: "uartParityEven", value: 256)
!1227 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1228 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1150, line: 82, baseType: !32, size: 32, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233}
!1230 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1231 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1232 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1233 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1234 = !{!102, !103, !1235, !1314, !1340, !1378, !108, !131, !185}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !851, line: 336, size: 608, elements: !1238)
!1238 = !{!1239, !1258, !1262, !1266, !1279, !1284, !1288, !1292, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1237, file: !851, line: 365, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!103, !1243, !878}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !860, line: 378, size: 192, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1256, !1257}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1245, file: !860, line: 380, baseType: !331, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1245, file: !860, line: 382, baseType: !13, size: 32, offset: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1245, file: !860, line: 384, baseType: !13, size: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1245, file: !860, line: 386, baseType: !1251, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !860, line: 351, size: 16, elements: !1253)
!1253 = !{!1254, !1255}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1252, file: !860, line: 359, baseType: !185, size: 8)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1252, file: !860, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1245, file: !860, line: 388, baseType: !102, size: 32, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1245, file: !860, line: 396, baseType: !873, size: 32, offset: 160)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1237, file: !851, line: 366, baseType: !1259, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{null, !1243, !186}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1237, file: !851, line: 374, baseType: !1263, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!103, !1243}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1237, file: !851, line: 377, baseType: !1267, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!103, !1243, !1270}
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !851, line: 122, size: 64, elements: !1273)
!1273 = !{!1274, !1275, !1276, !1277, !1278}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1272, file: !851, line: 123, baseType: !108, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1272, file: !851, line: 124, baseType: !185, size: 8, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1272, file: !851, line: 125, baseType: !185, size: 8, offset: 40)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1272, file: !851, line: 126, baseType: !185, size: 8, offset: 48)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1272, file: !851, line: 127, baseType: !185, size: 8, offset: 56)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1237, file: !851, line: 379, baseType: !1280, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!103, !1243, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1237, file: !851, line: 384, baseType: !1285, size: 32, offset: 160)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!103, !1243, !909, !103}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1237, file: !851, line: 393, baseType: !1289, size: 32, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!103, !1243, !373, !915}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1237, file: !851, line: 402, baseType: !1293, size: 32, offset: 224)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{null, !1243}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1237, file: !851, line: 405, baseType: !1293, size: 32, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1237, file: !851, line: 408, baseType: !1263, size: 32, offset: 288)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1237, file: !851, line: 411, baseType: !1293, size: 32, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1237, file: !851, line: 414, baseType: !1293, size: 32, offset: 352)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1237, file: !851, line: 417, baseType: !1263, size: 32, offset: 384)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1237, file: !851, line: 420, baseType: !1263, size: 32, offset: 416)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1237, file: !851, line: 423, baseType: !1293, size: 32, offset: 448)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1237, file: !851, line: 426, baseType: !1293, size: 32, offset: 480)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1237, file: !851, line: 429, baseType: !1263, size: 32, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1237, file: !851, line: 432, baseType: !1263, size: 32, offset: 544)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1237, file: !851, line: 435, baseType: !1307, size: 32, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1243, !1310, !102}
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !851, line: 142, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{null, !1243, !102}
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !682, line: 41342, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 41322, size: 1504, elements: !1317)
!1317 = !{!1318, !1319, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1316, file: !682, line: 41323, baseType: !757, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1316, file: !682, line: 41324, baseType: !1320, size: 480, offset: 32)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 480, elements: !1321)
!1321 = !{!1322}
!1322 = !DISubrange(count: 60)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1316, file: !682, line: 41325, baseType: !686, size: 32, offset: 512)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1316, file: !682, line: 41326, baseType: !1320, size: 480, offset: 544)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1316, file: !682, line: 41327, baseType: !686, size: 32, offset: 1024)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1316, file: !682, line: 41328, baseType: !686, size: 32, offset: 1056)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1316, file: !682, line: 41329, baseType: !686, size: 32, offset: 1088)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1316, file: !682, line: 41330, baseType: !686, size: 32, offset: 1120)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1316, file: !682, line: 41331, baseType: !686, size: 32, offset: 1152)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1316, file: !682, line: 41332, baseType: !686, size: 32, offset: 1184)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1316, file: !682, line: 41333, baseType: !686, size: 32, offset: 1216)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1316, file: !682, line: 41334, baseType: !686, size: 32, offset: 1248)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1316, file: !682, line: 41335, baseType: !686, size: 32, offset: 1280)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1316, file: !682, line: 41336, baseType: !686, size: 32, offset: 1312)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1316, file: !682, line: 41337, baseType: !686, size: 32, offset: 1344)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1316, file: !682, line: 41338, baseType: !757, size: 32, offset: 1376)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1316, file: !682, line: 41339, baseType: !686, size: 32, offset: 1408)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1316, file: !682, line: 41340, baseType: !686, size: 32, offset: 1440)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1316, file: !682, line: 41341, baseType: !686, size: 32, offset: 1472)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1342)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1343, line: 29, size: 160, elements: !1344)
!1343 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1344 = !{!1345, !1346, !1347, !1348, !1377}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1342, file: !1343, line: 30, baseType: !1314, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1342, file: !1343, line: 31, baseType: !108, size: 32, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1342, file: !1343, line: 32, baseType: !185, size: 8, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1342, file: !1343, line: 33, baseType: !1349, size: 32, offset: 96)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1352, line: 60, size: 64, elements: !1353)
!1352 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1353 = !{!1354, !1376}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1351, file: !1352, line: 69, baseType: !1355, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1352, line: 50, size: 64, elements: !1358)
!1358 = !{!1359, !1374, !1375}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1357, file: !1352, line: 52, baseType: !1360, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1107, line: 64, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1107, line: 59, size: 160, elements: !1364)
!1364 = !{!1365, !1373}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1363, file: !1107, line: 60, baseType: !1366, size: 128)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1107, line: 51, size: 128, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1366, file: !1107, line: 52, baseType: !108, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1366, file: !1107, line: 53, baseType: !108, size: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1366, file: !1107, line: 54, baseType: !108, size: 32, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1366, file: !1107, line: 55, baseType: !185, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1366, file: !1107, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1363, file: !1107, line: 61, baseType: !108, size: 32, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1357, file: !1352, line: 54, baseType: !185, size: 8, offset: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1357, file: !1352, line: 56, baseType: !185, size: 8, offset: 40)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1351, file: !1352, line: 71, baseType: !185, size: 8, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1342, file: !1343, line: 35, baseType: !1293, size: 32, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1379 = !{!1380, !1385, !1387, !1394, !1400, !1402, !1144, !1404, !1406, !1411, !1414}
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1146, file: !1343, line: 339, type: !1382, isLocal: false, isDefinition: true, align: 16)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 96, elements: !1383)
!1383 = !{!1384}
!1384 = !DISubrange(count: 6)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1146, file: !1343, line: 339, type: !1244, isLocal: false, isDefinition: true, align: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1146, file: !1343, line: 339, type: !1389, isLocal: true, isDefinition: true, align: 32)
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !1391)
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1390, file: !811, line: 60, baseType: !1263, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1390, file: !811, line: 65, baseType: !1243, size: 32, offset: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1146, file: !1343, line: 339, type: !1396, isLocal: true, isDefinition: true)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1343, line: 39, size: 64, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1396, file: !1343, line: 41, baseType: !1310, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1396, file: !1343, line: 42, baseType: !102, size: 32, offset: 32)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1146, file: !1343, line: 339, type: !1252, isLocal: true, isDefinition: true, align: 8)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1146, file: !1343, line: 270, type: !1236, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1146, file: !1343, line: 339, type: !1350, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1146, file: !1343, line: 339, type: !1408, isLocal: true, isDefinition: true)
!1408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 64, elements: !1409)
!1409 = !{!1410}
!1410 = !DISubrange(count: 1)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1146, file: !1343, line: 339, type: !1413, isLocal: true, isDefinition: true)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1361, size: 320, elements: !180)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1416, file: !1343, line: 339, type: !1419, isLocal: true, isDefinition: true, align: 32)
!1416 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1343, file: !1343, line: 339, type: !1294, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !1417)
!1417 = !{!1418}
!1418 = !DILocalVariable(name: "dev", arg: 1, scope: !1416, file: !1343, line: 339, type: !1243)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1419, file: !10, line: 55, baseType: !325, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1419, file: !10, line: 57, baseType: !325, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1419, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1419, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1427, file: !1652, line: 65, type: !686, isLocal: true, isDefinition: true)
!1427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1428, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1429, retainedTypes: !1570, globals: !1649, splitDebugInlining: false, nameTableKind: None)
!1428 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!1429 = !{!1430}
!1430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !682, line: 103, baseType: !103, size: 32, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569}
!1432 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1433 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1434 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1435 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1436 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1437 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1438 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1439 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1440 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1441 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1442 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1443 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1444 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1445 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1446 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1447 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1448 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1449 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1450 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1451 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1452 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1453 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1454 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1455 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1456 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1457 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1458 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1459 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1460 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1461 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1462 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1463 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1464 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1465 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1466 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1467 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1468 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1469 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1470 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1471 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1472 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1473 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1474 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1475 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1476 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1477 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1478 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1479 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1480 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1481 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1482 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1483 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1484 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1485 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1486 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1487 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1488 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1489 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1490 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1491 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1492 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1493 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1494 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1495 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1496 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1497 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1498 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1499 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1500 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1501 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1502 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1503 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1504 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1505 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1506 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1507 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1508 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1509 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1510 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1511 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1512 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1513 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1514 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1515 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1516 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1517 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1518 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1519 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1520 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1521 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1522 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1523 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1524 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1525 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1526 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1527 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1528 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1529 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1530 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1531 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1532 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1533 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1534 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1535 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1536 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1537 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1538 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1539 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1540 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1541 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1542 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1543 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1544 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1545 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1546 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1547 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1548 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1549 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1550 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1551 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1552 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1553 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1554 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1555 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1556 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1557 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1558 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1559 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1560 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1561 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1562 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1563 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1564 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1565 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1566 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1567 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1568 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1569 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1570 = !{!104, !1571, !325, !185, !108, !1580, !1613}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1573, line: 770, baseType: !1574)
!1573 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 764, size: 128, elements: !1575)
!1575 = !{!1576, !1577, !1578, !1579}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1574, file: !1573, line: 766, baseType: !686, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1574, file: !1573, line: 767, baseType: !686, size: 32, offset: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1574, file: !1573, line: 768, baseType: !686, size: 32, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1574, file: !1573, line: 769, baseType: !757, size: 32, offset: 96)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1573, line: 426, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 411, size: 28704, elements: !1583)
!1583 = !{!1584, !1588, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1603, !1608, !1612}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1582, file: !1573, line: 413, baseType: !1585, size: 256)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 256, elements: !1586)
!1586 = !{!1587}
!1587 = !DISubrange(count: 8)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1582, file: !1573, line: 414, baseType: !1589, size: 768, offset: 256)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1590)
!1590 = !{!1591}
!1591 = !DISubrange(count: 24)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1582, file: !1573, line: 415, baseType: !1585, size: 256, offset: 1024)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1582, file: !1573, line: 416, baseType: !1589, size: 768, offset: 1280)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1582, file: !1573, line: 417, baseType: !1585, size: 256, offset: 2048)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1582, file: !1573, line: 418, baseType: !1589, size: 768, offset: 2304)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1582, file: !1573, line: 419, baseType: !1585, size: 256, offset: 3072)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1582, file: !1573, line: 420, baseType: !1589, size: 768, offset: 3328)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1582, file: !1573, line: 421, baseType: !1585, size: 256, offset: 4096)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1582, file: !1573, line: 422, baseType: !1600, size: 1792, offset: 4352)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1601)
!1601 = !{!1602}
!1602 = !DISubrange(count: 56)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1582, file: !1573, line: 423, baseType: !1604, size: 1920, offset: 6144)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1605, size: 1920, elements: !1606)
!1605 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1606 = !{!1607}
!1607 = !DISubrange(count: 240)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1582, file: !1573, line: 424, baseType: !1609, size: 20608, offset: 8064)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1610)
!1610 = !{!1611}
!1611 = !DISubrange(count: 644)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1582, file: !1573, line: 425, baseType: !686, size: 32, offset: 28672)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !1616)
!1616 = !{!1617, !1618, !1619, !1620, !1621, !1622, !1623, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1636, !1637, !1638, !1642, !1646, !1648}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1615, file: !1573, line: 447, baseType: !757, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1615, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1615, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1615, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1615, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1615, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1615, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1605, size: 96, elements: !1625)
!1625 = !{!1626}
!1626 = !DISubrange(count: 12)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1615, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1615, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1615, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1615, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1615, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1615, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1615, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1615, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 64, elements: !180)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1615, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1615, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1615, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 128, elements: !1640)
!1640 = !{!1641}
!1641 = !DISubrange(count: 4)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1615, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 160, elements: !1644)
!1644 = !{!1645}
!1645 = !DISubrange(count: 5)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1615, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1644)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1615, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!1649 = !{!1650, !1676, !1679, !1681, !1683, !1425}
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1427, file: !1652, line: 285, type: !1653, isLocal: true, isDefinition: true, align: 32)
!1652 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !1655)
!1655 = !{!1656, !1675}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1654, file: !811, line: 60, baseType: !1657, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!103, !1660}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !860, line: 378, size: 192, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1673, !1674}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1662, file: !860, line: 380, baseType: !331, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1662, file: !860, line: 382, baseType: !13, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1662, file: !860, line: 384, baseType: !13, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1662, file: !860, line: 386, baseType: !1668, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !860, line: 351, size: 16, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1669, file: !860, line: 359, baseType: !185, size: 8)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1669, file: !860, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1662, file: !860, line: 388, baseType: !102, size: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1662, file: !860, line: 396, baseType: !873, size: 32, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1654, file: !811, line: 65, baseType: !1660, size: 32, offset: 32)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "lock", scope: !1427, file: !1652, line: 34, type: !1678, isLocal: true, isDefinition: true)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "last_load", scope: !1427, file: !1652, line: 36, type: !108, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1427, file: !1652, line: 48, type: !108, isLocal: true, isDefinition: true)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1427, file: !1652, line: 54, type: !108, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1687, file: !1691, line: 69, type: !1692, isLocal: true, isDefinition: true, align: 32)
!1687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1689, globals: !1690, splitDebugInlining: false, nameTableKind: None)
!1688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!1689 = !{!806, !22}
!1690 = !{!1685}
!1691 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !1694)
!1694 = !{!1695, !1714}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1693, file: !811, line: 60, baseType: !1696, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 32)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!103, !1699}
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !860, line: 378, size: 192, elements: !1702)
!1702 = !{!1703, !1704, !1705, !1706, !1712, !1713}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1701, file: !860, line: 380, baseType: !331, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1701, file: !860, line: 382, baseType: !13, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1701, file: !860, line: 384, baseType: !13, size: 32, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1701, file: !860, line: 386, baseType: !1707, size: 32, offset: 96)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !860, line: 351, size: 16, elements: !1709)
!1709 = !{!1710, !1711}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1708, file: !860, line: 359, baseType: !185, size: 8)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1708, file: !860, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1701, file: !860, line: 388, baseType: !102, size: 32, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1701, file: !860, line: 396, baseType: !873, size: 32, offset: 160)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1693, file: !811, line: 65, baseType: !1699, size: 32, offset: 32)
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1717, file: !1720, line: 23, type: !915, isLocal: false, isDefinition: true)
!1717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1718, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, globals: !1719, splitDebugInlining: false, nameTableKind: None)
!1718 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!1719 = !{!1715}
!1720 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1723, file: !1727, line: 37, type: !1970, isLocal: false, isDefinition: true)
!1723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1725, retainedTypes: !1734, globals: !1807, splitDebugInlining: false, nameTableKind: None)
!1724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!1725 = !{!1726, !30, !1430}
!1726 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1727, line: 63, baseType: !32, size: 32, elements: !1728)
!1727 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1728 = !{!1729, !1730, !1731, !1732, !1733}
!1729 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1730 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1731 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1732 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1733 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1734 = !{!132, !102, !103, !1735, !271, !108, !1765, !325, !185, !1790}
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1737)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1738, line: 51, size: 64, elements: !1739)
!1738 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1739 = !{!1740, !1760}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1737, file: !1738, line: 52, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1738, line: 38, baseType: !1742)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!103, !1745, !373, !121}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !860, line: 378, size: 192, elements: !1748)
!1748 = !{!1749, !1750, !1751, !1752, !1758, !1759}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1747, file: !860, line: 380, baseType: !331, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1747, file: !860, line: 382, baseType: !13, size: 32, offset: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1747, file: !860, line: 384, baseType: !13, size: 32, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1747, file: !860, line: 386, baseType: !1753, size: 32, offset: 96)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !860, line: 351, size: 16, elements: !1755)
!1755 = !{!1756, !1757}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1754, file: !860, line: 359, baseType: !185, size: 8)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1754, file: !860, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1747, file: !860, line: 388, baseType: !102, size: 32, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1747, file: !860, line: 396, baseType: !873, size: 32, offset: 160)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1737, file: !1738, line: 53, baseType: !1761, size: 32, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1738, line: 47, baseType: !1762)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{!103, !1745, !373, !121, !108}
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !1768)
!1768 = !{!1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1767, file: !1573, line: 447, baseType: !757, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1767, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1767, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1767, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1767, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1767, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1767, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1767, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1767, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1767, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1767, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1767, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1767, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1767, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1767, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1767, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1767, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1767, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1767, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1767, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1767, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1573, line: 426, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 411, size: 28704, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1792, file: !1573, line: 413, baseType: !1585, size: 256)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1792, file: !1573, line: 414, baseType: !1589, size: 768, offset: 256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1792, file: !1573, line: 415, baseType: !1585, size: 256, offset: 1024)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1792, file: !1573, line: 416, baseType: !1589, size: 768, offset: 1280)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1792, file: !1573, line: 417, baseType: !1585, size: 256, offset: 2048)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1792, file: !1573, line: 418, baseType: !1589, size: 768, offset: 2304)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1792, file: !1573, line: 419, baseType: !1585, size: 256, offset: 3072)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1792, file: !1573, line: 420, baseType: !1589, size: 768, offset: 3328)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1792, file: !1573, line: 421, baseType: !1585, size: 256, offset: 4096)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1792, file: !1573, line: 422, baseType: !1600, size: 1792, offset: 4352)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1792, file: !1573, line: 423, baseType: !1604, size: 1920, offset: 6144)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1792, file: !1573, line: 424, baseType: !1609, size: 20608, offset: 8064)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1792, file: !1573, line: 425, baseType: !686, size: 32, offset: 28672)
!1807 = !{!1721, !1808, !1924, !1930, !1932, !1935, !1940, !1942, !1947}
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "_kernel", scope: !1723, file: !1727, line: 40, type: !1810, isLocal: false, isDefinition: true)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !141, line: 158, size: 288, elements: !1811)
!1811 = !{!1812, !1919}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1810, file: !141, line: 159, baseType: !1813, size: 192)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1814, size: 192, elements: !1409)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !141, line: 100, size: 192, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1913, !1914, !1915, !1916}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1814, file: !141, line: 102, baseType: !108, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1814, file: !141, line: 105, baseType: !271, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1814, file: !141, line: 108, baseType: !1819, size: 32, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !1821)
!1821 = !{!1822, !1880, !1892, !1893, !1894, !1895, !1908}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1820, file: !163, line: 247, baseType: !1823, size: 384)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !1824)
!1824 = !{!1825, !1849, !1856, !1857, !1858, !1867, !1868, !1869}
!1825 = !DIDerivedType(tag: DW_TAG_member, scope: !1823, file: !163, line: 60, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1823, file: !163, line: 60, size: 64, elements: !1827)
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1826, file: !163, line: 61, baseType: !1829, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !1831)
!1831 = !{!1832, !1838}
!1832 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !146, line: 38, baseType: !1833, size: 32)
!1833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1830, file: !146, line: 38, size: 32, elements: !1834)
!1834 = !{!1835, !1837}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1833, file: !146, line: 39, baseType: !1836, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1833, file: !146, line: 40, baseType: !1836, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !146, line: 42, baseType: !1839, size: 32, offset: 32)
!1839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1830, file: !146, line: 42, size: 32, elements: !1840)
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1839, file: !146, line: 43, baseType: !1836, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1839, file: !146, line: 44, baseType: !1836, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1826, file: !163, line: 62, baseType: !1844, size: 64)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !1845)
!1845 = !{!1846}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1844, file: !175, line: 50, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1848, size: 64, elements: !180)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1823, file: !163, line: 68, baseType: !1850, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !1853)
!1853 = !{!1854}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1852, file: !141, line: 232, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !1830)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1823, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1823, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!1858 = !DIDerivedType(tag: DW_TAG_member, scope: !1823, file: !163, line: 90, baseType: !1859, size: 16, offset: 112)
!1859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1823, file: !163, line: 90, size: 16, elements: !1860)
!1860 = !{!1861, !1866}
!1861 = !DIDerivedType(tag: DW_TAG_member, scope: !1859, file: !163, line: 91, baseType: !1862, size: 16)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1859, file: !163, line: 91, size: 16, elements: !1863)
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1862, file: !163, line: 96, baseType: !195, size: 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1862, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1859, file: !163, line: 100, baseType: !121, size: 16)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1823, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1823, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1823, file: !163, line: 131, baseType: !1870, size: 192, offset: 192)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !1871)
!1871 = !{!1872, !1873, !1879}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1870, file: !141, line: 245, baseType: !1829, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1870, file: !141, line: 246, baseType: !1874, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !1875)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{null, !1878}
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1870, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1820, file: !163, line: 250, baseType: !1881, size: 288, offset: 384)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1881, file: !214, line: 26, baseType: !108, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1881, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1881, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1881, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1881, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1881, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1881, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1881, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1881, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1820, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1820, file: !163, line: 256, baseType: !1851, size: 64, offset: 704)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1820, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1820, file: !163, line: 325, baseType: !1896, size: 32, offset: 800)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !1898)
!1898 = !{!1899, !1905, !1906}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1897, file: !137, line: 5074, baseType: !1900, size: 96)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !1901)
!1901 = !{!1902, !1903, !1904}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1900, file: !234, line: 57, baseType: !237, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1900, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1900, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1897, file: !137, line: 5075, baseType: !1851, size: 64, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1897, file: !137, line: 5076, baseType: !1907, offset: 160)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1820, file: !163, line: 343, baseType: !1909, size: 64, offset: 832)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1909, file: !214, line: 63, baseType: !108, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1909, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1814, file: !141, line: 111, baseType: !1819, size: 32, offset: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1814, file: !141, line: 124, baseType: !103, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1814, file: !141, line: 127, baseType: !185, size: 8, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1814, file: !141, line: 153, baseType: !1917, offset: 168)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1918, line: 33, elements: !245)
!1918 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1810, file: !141, line: 170, baseType: !1920, size: 96, offset: 192)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1920, file: !141, line: 86, baseType: !1819, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1920, file: !141, line: 90, baseType: !1855, size: 64, offset: 32)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1723, file: !1727, line: 43, type: !1926, isLocal: false, isDefinition: true, align: 64)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 8192, elements: !340)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !310, line: 47, size: 8, elements: !1928)
!1928 = !{!1929}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1927, file: !310, line: 48, baseType: !272, size: 8)
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1723, file: !1727, line: 44, type: !1820, isLocal: false, isDefinition: true)
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1723, file: !1727, line: 48, type: !1934, isLocal: false, isDefinition: true)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1820, size: 896, elements: !1409)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1723, file: !1727, line: 86, type: !1937, isLocal: false, isDefinition: true, align: 64)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 16384, elements: !1938)
!1938 = !{!1410, !1939}
!1939 = !DISubrange(count: 2048)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1723, file: !1727, line: 217, type: !131, isLocal: false, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1723, file: !1727, line: 50, type: !1944, isLocal: true, isDefinition: true, align: 64)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 2560, elements: !1945)
!1945 = !{!1410, !1946}
!1946 = !DISubrange(count: 320)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "levels", scope: !1949, file: !1727, line: 232, type: !1969, isLocal: true, isDefinition: true)
!1949 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1727, file: !1727, line: 230, type: !1950, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !1952)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1726}
!1952 = !{!1953, !1954, !1964, !1968}
!1953 = !DILocalVariable(name: "level", arg: 1, scope: !1949, file: !1727, line: 230, type: !1726)
!1954 = !DILocalVariable(name: "entry", scope: !1949, file: !1727, line: 244, type: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !1958)
!1958 = !{!1959, !1963}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1957, file: !811, line: 60, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!103, !1745}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1957, file: !811, line: 65, baseType: !1745, size: 32, offset: 32)
!1964 = !DILocalVariable(name: "dev", scope: !1965, file: !1727, line: 247, type: !1745)
!1965 = distinct !DILexicalBlock(scope: !1966, file: !1727, line: 246, column: 64)
!1966 = distinct !DILexicalBlock(scope: !1967, file: !1727, line: 246, column: 2)
!1967 = distinct !DILexicalBlock(scope: !1949, file: !1727, line: 246, column: 2)
!1968 = !DILocalVariable(name: "rc", scope: !1965, file: !1727, line: 248, type: !103)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 192, elements: !1383)
!1970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !378, line: 16, size: 64, elements: !1972)
!1972 = !{!1973, !1974}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1971, file: !378, line: 17, baseType: !331, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1971, file: !378, line: 18, baseType: !185, size: 8, offset: 32)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "states_str", scope: !1977, file: !1978, line: 276, type: !2094, isLocal: true, isDefinition: true)
!1977 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1978, file: !1978, line: 271, type: !1979, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !2085)
!1978 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!331, !1981, !271, !132}
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !1982)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !1984)
!1984 = !{!1985, !2043, !2055, !2056, !2057, !2058, !2071}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1983, file: !163, line: 247, baseType: !1986, size: 384)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !1987)
!1987 = !{!1988, !2012, !2019, !2020, !2021, !2030, !2031, !2032}
!1988 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !163, line: 60, baseType: !1989, size: 64)
!1989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !163, line: 60, size: 64, elements: !1990)
!1990 = !{!1991, !2006}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1989, file: !163, line: 61, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !1993)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !1994)
!1994 = !{!1995, !2001}
!1995 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !146, line: 38, baseType: !1996, size: 32)
!1996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !146, line: 38, size: 32, elements: !1997)
!1997 = !{!1998, !2000}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1996, file: !146, line: 39, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1996, file: !146, line: 40, baseType: !1999, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !146, line: 42, baseType: !2002, size: 32, offset: 32)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !146, line: 42, size: 32, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2002, file: !146, line: 43, baseType: !1999, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2002, file: !146, line: 44, baseType: !1999, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1989, file: !163, line: 62, baseType: !2007, size: 64)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2008)
!2008 = !{!2009}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2007, file: !175, line: 50, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 64, elements: !180)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1986, file: !163, line: 68, baseType: !2013, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2015, file: !141, line: 232, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !1993)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1986, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1986, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !163, line: 90, baseType: !2022, size: 16, offset: 112)
!2022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !163, line: 90, size: 16, elements: !2023)
!2023 = !{!2024, !2029}
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !2022, file: !163, line: 91, baseType: !2025, size: 16)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2022, file: !163, line: 91, size: 16, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2025, file: !163, line: 96, baseType: !195, size: 8)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2025, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2022, file: !163, line: 100, baseType: !121, size: 16)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1986, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1986, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1986, file: !163, line: 131, baseType: !2033, size: 192, offset: 192)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2034)
!2034 = !{!2035, !2036, !2042}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2033, file: !141, line: 245, baseType: !1992, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2033, file: !141, line: 246, baseType: !2037, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !2041}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2033, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1983, file: !163, line: 250, baseType: !2044, size: 288, offset: 384)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2044, file: !214, line: 26, baseType: !108, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2044, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2044, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2044, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2044, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2044, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2044, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2044, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2044, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1983, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1983, file: !163, line: 256, baseType: !2014, size: 64, offset: 704)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1983, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1983, file: !163, line: 325, baseType: !2059, size: 32, offset: 800)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2061)
!2061 = !{!2062, !2068, !2069}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2060, file: !137, line: 5074, baseType: !2063, size: 96)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !2064)
!2064 = !{!2065, !2066, !2067}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2063, file: !234, line: 57, baseType: !237, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2063, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2063, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2060, file: !137, line: 5075, baseType: !2014, size: 64, offset: 96)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2060, file: !137, line: 5076, baseType: !2070, offset: 160)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1983, file: !163, line: 343, baseType: !2072, size: 64, offset: 832)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2073)
!2073 = !{!2074, !2075}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2072, file: !214, line: 63, baseType: !108, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2072, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2076 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2077, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2078, globals: !2080, splitDebugInlining: false, nameTableKind: None)
!2077 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2078 = !{!102, !331, !104, !185, !103, !2079, !24, !132, !271, !108, !109}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!2080 = !{!1975, !2081}
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "states_sz", scope: !1977, file: !1978, line: 279, type: !2083, isLocal: true, isDefinition: true)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2084, size: 256, elements: !1586)
!2084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2092}
!2086 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1977, file: !1978, line: 271, type: !1981)
!2087 = !DILocalVariable(name: "buf", arg: 2, scope: !1977, file: !1978, line: 271, type: !271)
!2088 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1977, file: !1978, line: 271, type: !132)
!2089 = !DILocalVariable(name: "off", scope: !1977, file: !1978, line: 273, type: !132)
!2090 = !DILocalVariable(name: "bit", scope: !1977, file: !1978, line: 274, type: !185)
!2091 = !DILocalVariable(name: "thread_state", scope: !1977, file: !1978, line: 275, type: !185)
!2092 = !DILocalVariable(name: "index", scope: !2093, file: !1978, line: 293, type: !185)
!2093 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 293, column: 2)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 256, elements: !1586)
!2095 = !DIGlobalVariableExpression(var: !2096, expr: !DIExpression())
!2096 = distinct !DIGlobalVariable(name: "lock", scope: !2097, file: !2196, line: 47, type: !2189, isLocal: true, isDefinition: true)
!2097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2098, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2099, globals: !2195, splitDebugInlining: false, nameTableKind: None)
!2098 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2099 = !{!131, !102, !103, !2100, !2115}
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2102)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2103)
!2103 = !{!2104, !2110}
!2104 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !146, line: 38, baseType: !2105, size: 32)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !146, line: 38, size: 32, elements: !2106)
!2106 = !{!2107, !2109}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2105, file: !146, line: 39, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2105, file: !146, line: 40, baseType: !2108, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !146, line: 42, baseType: !2111, size: 32, offset: 32)
!2111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !146, line: 42, size: 32, elements: !2112)
!2112 = !{!2113, !2114}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2111, file: !146, line: 43, baseType: !2108, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2111, file: !146, line: 44, baseType: !2108, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !2117)
!2117 = !{!2118, !2162, !2174, !2175, !2176, !2177, !2190}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2116, file: !163, line: 247, baseType: !2119, size: 384)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2120)
!2120 = !{!2121, !2131, !2138, !2139, !2140, !2149, !2150, !2151}
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !163, line: 60, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !163, line: 60, size: 64, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2122, file: !163, line: 61, baseType: !2101, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2122, file: !163, line: 62, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2127)
!2127 = !{!2128}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2126, file: !175, line: 50, baseType: !2129, size: 64)
!2129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2130, size: 64, elements: !180)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2119, file: !163, line: 68, baseType: !2132, size: 32, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2134)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2135)
!2135 = !{!2136}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2134, file: !141, line: 232, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2102)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2119, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2119, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !163, line: 90, baseType: !2141, size: 16, offset: 112)
!2141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !163, line: 90, size: 16, elements: !2142)
!2142 = !{!2143, !2148}
!2143 = !DIDerivedType(tag: DW_TAG_member, scope: !2141, file: !163, line: 91, baseType: !2144, size: 16)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2141, file: !163, line: 91, size: 16, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2144, file: !163, line: 96, baseType: !195, size: 8)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2144, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2141, file: !163, line: 100, baseType: !121, size: 16)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2119, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2119, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2119, file: !163, line: 131, baseType: !2152, size: 192, offset: 192)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2153)
!2153 = !{!2154, !2155, !2161}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2152, file: !141, line: 245, baseType: !2101, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2152, file: !141, line: 246, baseType: !2156, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2157)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{null, !2160}
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2152, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2116, file: !163, line: 250, baseType: !2163, size: 288, offset: 384)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2163, file: !214, line: 26, baseType: !108, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2163, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2163, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2163, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2163, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2163, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2163, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2163, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2163, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2116, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2116, file: !163, line: 256, baseType: !2133, size: 64, offset: 704)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2116, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2116, file: !163, line: 325, baseType: !2178, size: 32, offset: 800)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 32)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2180)
!2180 = !{!2181, !2187, !2188}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2179, file: !137, line: 5074, baseType: !2182, size: 96)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !2183)
!2183 = !{!2184, !2185, !2186}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2182, file: !234, line: 57, baseType: !237, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2182, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2182, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2179, file: !137, line: 5075, baseType: !2133, size: 64, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2179, file: !137, line: 5076, baseType: !2189, offset: 160)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2116, file: !163, line: 343, baseType: !2191, size: 64, offset: 832)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2192)
!2192 = !{!2193, !2194}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2191, file: !214, line: 63, baseType: !108, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2191, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2195 = !{!2095}
!2196 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2199, file: !2301, line: 56, type: !2290, isLocal: false, isDefinition: true)
!2199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2200, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2201, globals: !2298, splitDebugInlining: false, nameTableKind: None)
!2200 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2201 = !{!2202, !271, !102, !2296, !373, !104, !325, !103, !108, !109, !2297}
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !2204)
!2204 = !{!2205, !2263, !2275, !2276, !2277, !2278, !2291}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2203, file: !163, line: 247, baseType: !2206, size: 384)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2207)
!2207 = !{!2208, !2232, !2239, !2240, !2241, !2250, !2251, !2252}
!2208 = !DIDerivedType(tag: DW_TAG_member, scope: !2206, file: !163, line: 60, baseType: !2209, size: 64)
!2209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2206, file: !163, line: 60, size: 64, elements: !2210)
!2210 = !{!2211, !2226}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2209, file: !163, line: 61, baseType: !2212, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2214)
!2214 = !{!2215, !2221}
!2215 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !146, line: 38, baseType: !2216, size: 32)
!2216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !146, line: 38, size: 32, elements: !2217)
!2217 = !{!2218, !2220}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2216, file: !146, line: 39, baseType: !2219, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2216, file: !146, line: 40, baseType: !2219, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !146, line: 42, baseType: !2222, size: 32, offset: 32)
!2222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !146, line: 42, size: 32, elements: !2223)
!2223 = !{!2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2222, file: !146, line: 43, baseType: !2219, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2222, file: !146, line: 44, baseType: !2219, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2209, file: !163, line: 62, baseType: !2227, size: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2227, file: !175, line: 50, baseType: !2230, size: 64)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2231, size: 64, elements: !180)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2206, file: !163, line: 68, baseType: !2233, size: 32, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2236)
!2236 = !{!2237}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2235, file: !141, line: 232, baseType: !2238, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2213)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2206, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2206, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2241 = !DIDerivedType(tag: DW_TAG_member, scope: !2206, file: !163, line: 90, baseType: !2242, size: 16, offset: 112)
!2242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2206, file: !163, line: 90, size: 16, elements: !2243)
!2243 = !{!2244, !2249}
!2244 = !DIDerivedType(tag: DW_TAG_member, scope: !2242, file: !163, line: 91, baseType: !2245, size: 16)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2242, file: !163, line: 91, size: 16, elements: !2246)
!2246 = !{!2247, !2248}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2245, file: !163, line: 96, baseType: !195, size: 8)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2245, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2242, file: !163, line: 100, baseType: !121, size: 16)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2206, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2206, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2206, file: !163, line: 131, baseType: !2253, size: 192, offset: 192)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2254)
!2254 = !{!2255, !2256, !2262}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2253, file: !141, line: 245, baseType: !2212, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2253, file: !141, line: 246, baseType: !2257, size: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{null, !2261}
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2253, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2203, file: !163, line: 250, baseType: !2264, size: 288, offset: 384)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2265)
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2264, file: !214, line: 26, baseType: !108, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2264, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2264, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2264, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2264, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2264, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2264, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2264, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2264, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2203, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2203, file: !163, line: 256, baseType: !2234, size: 64, offset: 704)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2203, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2203, file: !163, line: 325, baseType: !2279, size: 32, offset: 800)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 32)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2281)
!2281 = !{!2282, !2288, !2289}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2280, file: !137, line: 5074, baseType: !2283, size: 96)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !2284)
!2284 = !{!2285, !2286, !2287}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2283, file: !234, line: 57, baseType: !237, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2283, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2283, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2280, file: !137, line: 5075, baseType: !2234, size: 64, offset: 96)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !137, line: 5076, baseType: !2290, offset: 160)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2203, file: !163, line: 343, baseType: !2292, size: 64, offset: 832)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2293)
!2293 = !{!2294, !2295}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2292, file: !214, line: 63, baseType: !108, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2292, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2298 = !{!2197, !2299, !2302, !2304}
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2199, file: !2301, line: 404, type: !103, isLocal: true, isDefinition: true)
!2301 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2199, file: !2301, line: 405, type: !103, isLocal: true, isDefinition: true)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "pending_current", scope: !2199, file: !2301, line: 425, type: !2202, isLocal: true, isDefinition: true)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2308, file: !2338, line: 15, type: !109, isLocal: true, isDefinition: true)
!2308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2310, globals: !2335, splitDebugInlining: false, nameTableKind: None)
!2309 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2310 = !{!104, !102, !325, !108, !109, !103, !2311, !271, !106}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2313)
!2313 = !{!2314, !2329, !2334}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2312, file: !141, line: 245, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2317)
!2317 = !{!2318, !2324}
!2318 = !DIDerivedType(tag: DW_TAG_member, scope: !2316, file: !146, line: 38, baseType: !2319, size: 32)
!2319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2316, file: !146, line: 38, size: 32, elements: !2320)
!2320 = !{!2321, !2323}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2319, file: !146, line: 39, baseType: !2322, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2319, file: !146, line: 40, baseType: !2322, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, scope: !2316, file: !146, line: 42, baseType: !2325, size: 32, offset: 32)
!2325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2316, file: !146, line: 42, size: 32, elements: !2326)
!2326 = !{!2327, !2328}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2325, file: !146, line: 43, baseType: !2322, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2325, file: !146, line: 44, baseType: !2322, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2312, file: !141, line: 246, baseType: !2330, size: 32, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2331)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{null, !2311}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2312, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2335 = !{!2306, !2336, !2340, !2342}
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2308, file: !2338, line: 19, type: !2339, isLocal: true, isDefinition: true)
!2338 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2308, file: !2338, line: 25, type: !103, isLocal: true, isDefinition: true)
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2308, file: !2338, line: 17, type: !2344, isLocal: true, isDefinition: true)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2316)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2347, file: !2352, line: 61, type: !2382, isLocal: false, isDefinition: true, align: 64)
!2347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, globals: !2349, splitDebugInlining: false, nameTableKind: None)
!2348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2349 = !{!2350, !2345}
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2347, file: !2352, line: 61, type: !2353, isLocal: false, isDefinition: true, align: 32)
!2352 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2354)
!2354 = !{!2355, !2361, !2380}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2353, file: !137, line: 5074, baseType: !2356, size: 96)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !2357)
!2357 = !{!2358, !2359, !2360}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2356, file: !234, line: 57, baseType: !237, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2356, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2356, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2353, file: !137, line: 5075, baseType: !2362, size: 64, offset: 96)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2363)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2364)
!2364 = !{!2365}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2363, file: !141, line: 232, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2368)
!2368 = !{!2369, !2375}
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !146, line: 38, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !146, line: 38, size: 32, elements: !2371)
!2371 = !{!2372, !2374}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2370, file: !146, line: 39, baseType: !2373, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2370, file: !146, line: 40, baseType: !2373, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !146, line: 42, baseType: !2376, size: 32, offset: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !146, line: 42, size: 32, elements: !2377)
!2377 = !{!2378, !2379}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2376, file: !146, line: 43, baseType: !2373, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2376, file: !146, line: 44, baseType: !2373, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2353, file: !137, line: 5076, baseType: !2381, offset: 160)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!2382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 8192, elements: !340)
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2385, file: !2404, line: 55, type: !2405, isLocal: true, isDefinition: true, align: 32)
!2385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2387, globals: !2403, splitDebugInlining: false, nameTableKind: None)
!2386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2387 = !{!102, !104, !103, !2388}
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2390)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2391)
!2391 = !{!2392, !2398}
!2392 = !DIDerivedType(tag: DW_TAG_member, scope: !2390, file: !146, line: 38, baseType: !2393, size: 32)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2390, file: !146, line: 38, size: 32, elements: !2394)
!2394 = !{!2395, !2397}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2393, file: !146, line: 39, baseType: !2396, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2393, file: !146, line: 40, baseType: !2396, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2390, file: !146, line: 42, baseType: !2399, size: 32, offset: 32)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2390, file: !146, line: 42, size: 32, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2399, file: !146, line: 43, baseType: !2396, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2399, file: !146, line: 44, baseType: !2396, size: 32)
!2403 = !{!2383}
!2404 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2406)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !811, line: 51, size: 64, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2406, file: !811, line: 60, baseType: !814, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2406, file: !811, line: 65, baseType: !817, size: 32, offset: 32)
!2410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!2411 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!2413 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2416, retainedTypes: !2424, splitDebugInlining: false, nameTableKind: None)
!2415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2416 = !{!30, !2417}
!2417 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2418, line: 54, baseType: !32, size: 32, elements: !2419)
!2418 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2419 = !{!2420, !2421, !2422, !2423}
!2420 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2421 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2422 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2423 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2424 = !{!102, !132, !373, !24, !2425, !22, !2431, !103, !1378, !2446}
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2418, line: 58, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2418, line: 58, size: 64, elements: !2428)
!2428 = !{!2429}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2427, file: !2418, line: 58, baseType: !2430, size: 64)
!2430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !1586)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2418, line: 68, size: 128, elements: !2433)
!2433 = !{!2434, !2437, !2438, !2439}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2432, file: !2418, line: 69, baseType: !2435, size: 64)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2436, size: 64, elements: !180)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2418, line: 61, baseType: !108)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2432, file: !2418, line: 70, baseType: !2436, size: 32, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2432, file: !2418, line: 71, baseType: !108, size: 32, offset: 96)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2432, file: !2418, line: 77, baseType: !2440, offset: 128)
!2440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2441, elements: !2444)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2418, line: 64, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2441, file: !2418, line: 65, baseType: !2436, size: 32)
!2444 = !{!2445}
!2445 = !DISubrange(count: 0)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!2447 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2448, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2449, retainedTypes: !2469, splitDebugInlining: false, nameTableKind: None)
!2448 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2449 = !{!2450, !2458}
!2450 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2451, line: 69, baseType: !32, size: 32, elements: !2452)
!2451 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2452 = !{!2453, !2454, !2455, !2456, !2457}
!2453 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2454 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2455 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2456 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2457 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2458 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2451, line: 56, baseType: !32, size: 32, elements: !2459)
!2459 = !{!2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468}
!2460 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2461 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2462 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2463 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2464 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2465 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2466 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2467 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2468 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2469 = !{!103, !2450, !2458, !2470, !196, !877, !2472, !2473, !186, !122, !331, !132, !102, !22, !32, !368, !2475, !2476, !370, !369, !107, !371, !2471, !2477, !2478, !2479, !2480}
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2451, line: 31, baseType: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !133, line: 329, baseType: !32)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2451, line: 32, baseType: !2474)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !133, line: 145, baseType: !103)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2484, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2485, splitDebugInlining: false, nameTableKind: None)
!2484 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2485 = !{!331, !186, !103, !32}
!2486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2488, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!2487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2488 = !{!2489, !30}
!2489 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2490, line: 27, baseType: !32, size: 32, elements: !2491)
!2490 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2491 = !{!2492, !2493, !2494, !2495, !2496}
!2492 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2493 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2494 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2495 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2496 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2498, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2499, retainedTypes: !2500, splitDebugInlining: false, nameTableKind: None)
!2498 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2499 = !{!1430, !2489, !30}
!2500 = !{!2501, !2502, !102, !103, !325, !108, !185, !2519}
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !682, line: 249, baseType: !1430)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1573, line: 426, baseType: !2504)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 411, size: 28704, elements: !2505)
!2505 = !{!2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2504, file: !1573, line: 413, baseType: !1585, size: 256)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2504, file: !1573, line: 414, baseType: !1589, size: 768, offset: 256)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2504, file: !1573, line: 415, baseType: !1585, size: 256, offset: 1024)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2504, file: !1573, line: 416, baseType: !1589, size: 768, offset: 1280)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2504, file: !1573, line: 417, baseType: !1585, size: 256, offset: 2048)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2504, file: !1573, line: 418, baseType: !1589, size: 768, offset: 2304)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2504, file: !1573, line: 419, baseType: !1585, size: 256, offset: 3072)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2504, file: !1573, line: 420, baseType: !1589, size: 768, offset: 3328)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2504, file: !1573, line: 421, baseType: !1585, size: 256, offset: 4096)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2504, file: !1573, line: 422, baseType: !1600, size: 1792, offset: 4352)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2504, file: !1573, line: 423, baseType: !1604, size: 1920, offset: 6144)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2504, file: !1573, line: 424, baseType: !1609, size: 20608, offset: 8064)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2504, file: !1573, line: 425, baseType: !686, size: 32, offset: 28672)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !2522)
!2522 = !{!2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2521, file: !1573, line: 447, baseType: !757, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2521, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2521, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2521, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2521, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2521, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2521, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2521, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2521, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2521, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2521, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2521, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2521, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2521, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2521, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2521, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2521, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2521, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2521, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2521, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2521, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!2544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!2545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2548, splitDebugInlining: false, nameTableKind: None)
!2547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2548 = !{!102, !103, !22, !2549}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !2552)
!2552 = !{!2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2551, file: !1573, line: 447, baseType: !757, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2551, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2551, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2551, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2551, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2551, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2551, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2551, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2551, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2551, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2551, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2551, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2551, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2551, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2551, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2551, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2551, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2551, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2551, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2551, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2551, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!2574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2576, splitDebugInlining: false, nameTableKind: None)
!2575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2576 = !{!2577, !102, !103}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2579, file: !1573, line: 447, baseType: !757, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2579, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2579, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2579, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2579, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2579, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2579, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2579, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2579, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2579, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2579, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2579, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2579, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2579, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2579, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2579, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2579, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2579, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2579, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2579, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2579, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!2602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2604, splitDebugInlining: false, nameTableKind: None)
!2603 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2604 = !{!2605, !108, !102, !103}
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2607, line: 98, size: 256, elements: !2608)
!2607 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2608 = !{!2609, !2614, !2619, !2624, !2629, !2634, !2639, !2644}
!2609 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2607, line: 99, baseType: !2610, size: 32)
!2610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2606, file: !2607, line: 99, size: 32, elements: !2611)
!2611 = !{!2612, !2613}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2610, file: !2607, line: 99, baseType: !108, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2610, file: !2607, line: 99, baseType: !108, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2607, line: 100, baseType: !2615, size: 32, offset: 32)
!2615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2606, file: !2607, line: 100, size: 32, elements: !2616)
!2616 = !{!2617, !2618}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2615, file: !2607, line: 100, baseType: !108, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2615, file: !2607, line: 100, baseType: !108, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2607, line: 101, baseType: !2620, size: 32, offset: 64)
!2620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2606, file: !2607, line: 101, size: 32, elements: !2621)
!2621 = !{!2622, !2623}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2620, file: !2607, line: 101, baseType: !108, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2620, file: !2607, line: 101, baseType: !108, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2607, line: 102, baseType: !2625, size: 32, offset: 96)
!2625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2606, file: !2607, line: 102, size: 32, elements: !2626)
!2626 = !{!2627, !2628}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2625, file: !2607, line: 102, baseType: !108, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2625, file: !2607, line: 102, baseType: !108, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2607, line: 103, baseType: !2630, size: 32, offset: 128)
!2630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2606, file: !2607, line: 103, size: 32, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2630, file: !2607, line: 103, baseType: !108, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2630, file: !2607, line: 103, baseType: !108, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2607, line: 104, baseType: !2635, size: 32, offset: 160)
!2635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2606, file: !2607, line: 104, size: 32, elements: !2636)
!2636 = !{!2637, !2638}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2635, file: !2607, line: 104, baseType: !108, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2635, file: !2607, line: 104, baseType: !108, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2607, line: 105, baseType: !2640, size: 32, offset: 192)
!2640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2606, file: !2607, line: 105, size: 32, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2640, file: !2607, line: 105, baseType: !108, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2640, file: !2607, line: 105, baseType: !108, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2606, file: !2607, line: 106, baseType: !108, size: 32, offset: 224)
!2645 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2646, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2488, retainedTypes: !2647, splitDebugInlining: false, nameTableKind: None)
!2646 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2647 = !{!2648, !102, !103, !2673, !2446, !108}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !2650)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !2651)
!2651 = !{!2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2650, file: !1573, line: 447, baseType: !757, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2650, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2650, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2650, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2650, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2650, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2650, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2650, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2650, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2650, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2650, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2650, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2650, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2650, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2650, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2650, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2650, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2650, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2650, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2650, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2650, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2607, line: 141, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2607, line: 97, size: 256, elements: !2676)
!2676 = !{!2677}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2675, file: !2607, line: 107, baseType: !2678, size: 256)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2607, line: 98, size: 256, elements: !2679)
!2679 = !{!2680, !2685, !2690, !2695, !2700, !2705, !2710, !2715}
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !2607, line: 99, baseType: !2681, size: 32)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2607, line: 99, size: 32, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2681, file: !2607, line: 99, baseType: !108, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2681, file: !2607, line: 99, baseType: !108, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !2607, line: 100, baseType: !2686, size: 32, offset: 32)
!2686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2607, line: 100, size: 32, elements: !2687)
!2687 = !{!2688, !2689}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2686, file: !2607, line: 100, baseType: !108, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2686, file: !2607, line: 100, baseType: !108, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !2607, line: 101, baseType: !2691, size: 32, offset: 64)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2607, line: 101, size: 32, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2691, file: !2607, line: 101, baseType: !108, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2691, file: !2607, line: 101, baseType: !108, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !2607, line: 102, baseType: !2696, size: 32, offset: 96)
!2696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2607, line: 102, size: 32, elements: !2697)
!2697 = !{!2698, !2699}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2696, file: !2607, line: 102, baseType: !108, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2696, file: !2607, line: 102, baseType: !108, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !2607, line: 103, baseType: !2701, size: 32, offset: 128)
!2701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2607, line: 103, size: 32, elements: !2702)
!2702 = !{!2703, !2704}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2701, file: !2607, line: 103, baseType: !108, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2701, file: !2607, line: 103, baseType: !108, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !2607, line: 104, baseType: !2706, size: 32, offset: 160)
!2706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2607, line: 104, size: 32, elements: !2707)
!2707 = !{!2708, !2709}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2706, file: !2607, line: 104, baseType: !108, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2706, file: !2607, line: 104, baseType: !108, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !2607, line: 105, baseType: !2711, size: 32, offset: 192)
!2711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2607, line: 105, size: 32, elements: !2712)
!2712 = !{!2713, !2714}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2711, file: !2607, line: 105, baseType: !108, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2711, file: !2607, line: 105, baseType: !108, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2678, file: !2607, line: 106, baseType: !108, size: 32, offset: 224)
!2716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1429, retainedTypes: !2718, splitDebugInlining: false, nameTableKind: None)
!2717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2718 = !{!2501, !325, !185, !108, !2719, !2736}
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1573, line: 426, baseType: !2721)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 411, size: 28704, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2721, file: !1573, line: 413, baseType: !1585, size: 256)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2721, file: !1573, line: 414, baseType: !1589, size: 768, offset: 256)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2721, file: !1573, line: 415, baseType: !1585, size: 256, offset: 1024)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2721, file: !1573, line: 416, baseType: !1589, size: 768, offset: 1280)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2721, file: !1573, line: 417, baseType: !1585, size: 256, offset: 2048)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2721, file: !1573, line: 418, baseType: !1589, size: 768, offset: 2304)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2721, file: !1573, line: 419, baseType: !1585, size: 256, offset: 3072)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2721, file: !1573, line: 420, baseType: !1589, size: 768, offset: 3328)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2721, file: !1573, line: 421, baseType: !1585, size: 256, offset: 4096)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2721, file: !1573, line: 422, baseType: !1600, size: 1792, offset: 4352)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2721, file: !1573, line: 423, baseType: !1604, size: 1920, offset: 6144)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2721, file: !1573, line: 424, baseType: !1609, size: 20608, offset: 8064)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2721, file: !1573, line: 425, baseType: !686, size: 32, offset: 28672)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !2738)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !2739)
!2739 = !{!2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2738, file: !1573, line: 447, baseType: !757, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2738, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2738, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2738, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2738, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2738, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2738, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2738, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2738, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2738, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2738, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2738, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2738, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2738, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2738, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2738, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2738, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2738, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2738, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2738, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2738, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!2761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2762, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2763, splitDebugInlining: false, nameTableKind: None)
!2762 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2763 = !{!2764, !102, !103}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1573, line: 468, baseType: !2766)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1573, line: 445, size: 1120, elements: !2767)
!2767 = !{!2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2766, file: !1573, line: 447, baseType: !757, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2766, file: !1573, line: 448, baseType: !686, size: 32, offset: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2766, file: !1573, line: 449, baseType: !686, size: 32, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2766, file: !1573, line: 450, baseType: !686, size: 32, offset: 96)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2766, file: !1573, line: 451, baseType: !686, size: 32, offset: 128)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2766, file: !1573, line: 452, baseType: !686, size: 32, offset: 160)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2766, file: !1573, line: 453, baseType: !1624, size: 96, offset: 192)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2766, file: !1573, line: 454, baseType: !686, size: 32, offset: 288)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2766, file: !1573, line: 455, baseType: !686, size: 32, offset: 320)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2766, file: !1573, line: 456, baseType: !686, size: 32, offset: 352)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2766, file: !1573, line: 457, baseType: !686, size: 32, offset: 384)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2766, file: !1573, line: 458, baseType: !686, size: 32, offset: 416)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2766, file: !1573, line: 459, baseType: !686, size: 32, offset: 448)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2766, file: !1573, line: 460, baseType: !686, size: 32, offset: 480)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2766, file: !1573, line: 461, baseType: !1635, size: 64, offset: 512)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2766, file: !1573, line: 462, baseType: !757, size: 32, offset: 576)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2766, file: !1573, line: 463, baseType: !757, size: 32, offset: 608)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2766, file: !1573, line: 464, baseType: !1639, size: 128, offset: 640)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2766, file: !1573, line: 465, baseType: !1643, size: 160, offset: 768)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2766, file: !1573, line: 466, baseType: !1647, size: 160, offset: 928)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2766, file: !1573, line: 467, baseType: !686, size: 32, offset: 1088)
!2789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2791, splitDebugInlining: false, nameTableKind: None)
!2790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2791 = !{!272, !271, !132, !878, !2792, !186, !102}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2798, splitDebugInlining: false, nameTableKind: None)
!2797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2798 = !{!806, !108}
!2799 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2800, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2801, retainedTypes: !2811, splitDebugInlining: false, nameTableKind: None)
!2800 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2801 = !{!2802}
!2802 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2803, line: 62, baseType: !32, size: 32, elements: !2804)
!2803 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2810}
!2805 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2806 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2807 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2808 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2809 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2810 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2811 = !{!2812, !2875, !108, !131, !806}
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !682, line: 8619, baseType: !2814)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 8563, size: 3072, elements: !2815)
!2815 = !{!2816, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2814, file: !682, line: 8564, baseType: !2817, size: 768)
!2817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 768, elements: !2818)
!2818 = !{!2819}
!2819 = !DISubrange(count: 96)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2814, file: !682, line: 8565, baseType: !686, size: 32, offset: 768)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2814, file: !682, line: 8566, baseType: !686, size: 32, offset: 800)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2814, file: !682, line: 8567, baseType: !686, size: 32, offset: 832)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2814, file: !682, line: 8568, baseType: !686, size: 32, offset: 864)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2814, file: !682, line: 8569, baseType: !686, size: 32, offset: 896)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2814, file: !682, line: 8570, baseType: !686, size: 32, offset: 928)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2814, file: !682, line: 8571, baseType: !686, size: 32, offset: 960)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2814, file: !682, line: 8572, baseType: !686, size: 32, offset: 992)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2814, file: !682, line: 8573, baseType: !686, size: 32, offset: 1024)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2814, file: !682, line: 8574, baseType: !2830, size: 96, offset: 1056)
!2830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 96, elements: !1625)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2814, file: !682, line: 8575, baseType: !686, size: 32, offset: 1152)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2814, file: !682, line: 8576, baseType: !2830, size: 96, offset: 1184)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2814, file: !682, line: 8577, baseType: !686, size: 32, offset: 1280)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2814, file: !682, line: 8578, baseType: !2830, size: 96, offset: 1312)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2814, file: !682, line: 8579, baseType: !686, size: 32, offset: 1408)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2814, file: !682, line: 8580, baseType: !686, size: 32, offset: 1440)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2814, file: !682, line: 8581, baseType: !686, size: 32, offset: 1472)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2814, file: !682, line: 8582, baseType: !686, size: 32, offset: 1504)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2814, file: !682, line: 8583, baseType: !686, size: 32, offset: 1536)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2814, file: !682, line: 8584, baseType: !686, size: 32, offset: 1568)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2814, file: !682, line: 8585, baseType: !686, size: 32, offset: 1600)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2814, file: !682, line: 8586, baseType: !686, size: 32, offset: 1632)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2814, file: !682, line: 8587, baseType: !686, size: 32, offset: 1664)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2814, file: !682, line: 8588, baseType: !686, size: 32, offset: 1696)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2814, file: !682, line: 8589, baseType: !686, size: 32, offset: 1728)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2814, file: !682, line: 8590, baseType: !686, size: 32, offset: 1760)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2814, file: !682, line: 8591, baseType: !686, size: 32, offset: 1792)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2814, file: !682, line: 8592, baseType: !686, size: 32, offset: 1824)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2814, file: !682, line: 8593, baseType: !686, size: 32, offset: 1856)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2814, file: !682, line: 8594, baseType: !686, size: 32, offset: 1888)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2814, file: !682, line: 8595, baseType: !686, size: 32, offset: 1920)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2814, file: !682, line: 8596, baseType: !686, size: 32, offset: 1952)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2814, file: !682, line: 8597, baseType: !686, size: 32, offset: 1984)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2814, file: !682, line: 8598, baseType: !686, size: 32, offset: 2016)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2814, file: !682, line: 8599, baseType: !686, size: 32, offset: 2048)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2814, file: !682, line: 8600, baseType: !2830, size: 96, offset: 2080)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2814, file: !682, line: 8601, baseType: !686, size: 32, offset: 2176)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2814, file: !682, line: 8602, baseType: !2830, size: 96, offset: 2208)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2814, file: !682, line: 8603, baseType: !686, size: 32, offset: 2304)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2814, file: !682, line: 8604, baseType: !2830, size: 96, offset: 2336)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2814, file: !682, line: 8605, baseType: !686, size: 32, offset: 2432)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2814, file: !682, line: 8606, baseType: !686, size: 32, offset: 2464)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2814, file: !682, line: 8607, baseType: !686, size: 32, offset: 2496)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2814, file: !682, line: 8608, baseType: !686, size: 32, offset: 2528)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2814, file: !682, line: 8609, baseType: !686, size: 32, offset: 2560)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2814, file: !682, line: 8610, baseType: !2830, size: 96, offset: 2592)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2814, file: !682, line: 8611, baseType: !686, size: 32, offset: 2688)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2814, file: !682, line: 8612, baseType: !2830, size: 96, offset: 2720)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2814, file: !682, line: 8613, baseType: !686, size: 32, offset: 2816)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2814, file: !682, line: 8614, baseType: !2830, size: 96, offset: 2848)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2814, file: !682, line: 8615, baseType: !686, size: 32, offset: 2944)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2814, file: !682, line: 8616, baseType: !686, size: 32, offset: 2976)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2814, file: !682, line: 8617, baseType: !686, size: 32, offset: 3008)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2814, file: !682, line: 8618, baseType: !686, size: 32, offset: 3040)
!2875 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2877, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2878, splitDebugInlining: false, nameTableKind: None)
!2877 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2878 = !{!2879, !2883, !964}
!2879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !965, line: 49, baseType: !32, size: 32, elements: !2880)
!2880 = !{!2881, !2882}
!2881 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2882 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !965, line: 56, baseType: !32, size: 32, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888, !2889}
!2885 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2886 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2887 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2888 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2889 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2892, retainedTypes: !2901, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2892 = !{!2893, !2897}
!2893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1150, line: 179, baseType: !32, size: 32, elements: !2894)
!2894 = !{!2895, !2896}
!2895 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2896 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1150, line: 194, baseType: !32, size: 32, elements: !2898)
!2898 = !{!2899, !2900}
!2899 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2900 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2901 = !{!108, !1378}
!2902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2904, retainedTypes: !2915, splitDebugInlining: false, nameTableKind: None)
!2903 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!2904 = !{!397, !2905}
!2905 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2803, line: 128, baseType: !32, size: 32, elements: !2906)
!2906 = !{!2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914}
!2907 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2908 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2909 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2910 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2911 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2912 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2913 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2914 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2915 = !{!108, !2916, !2968, !806}
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !682, line: 4575, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 4532, size: 390144, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923, !2924, !2925, !2933, !2934, !2942, !2943}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2918, file: !682, line: 4533, baseType: !686, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2918, file: !682, line: 4534, baseType: !686, size: 32, offset: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2918, file: !682, line: 4535, baseType: !686, size: 32, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2918, file: !682, line: 4536, baseType: !686, size: 32, offset: 96)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2918, file: !682, line: 4537, baseType: !691, size: 16256, offset: 128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2918, file: !682, line: 4543, baseType: !2926, size: 4224, offset: 16384)
!2926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2927, size: 4224, elements: !702)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2918, file: !682, line: 4538, size: 128, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2927, file: !682, line: 4539, baseType: !686, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2927, file: !682, line: 4540, baseType: !686, size: 32, offset: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2927, file: !682, line: 4541, baseType: !686, size: 32, offset: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2927, file: !682, line: 4542, baseType: !686, size: 32, offset: 96)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2918, file: !682, line: 4544, baseType: !705, size: 110464, offset: 20608)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2918, file: !682, line: 4550, baseType: !2935, size: 24448, offset: 131072)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2936, size: 24448, elements: !716)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2918, file: !682, line: 4545, size: 128, elements: !2937)
!2937 = !{!2938, !2939, !2940, !2941}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2936, file: !682, line: 4546, baseType: !686, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2936, file: !682, line: 4547, baseType: !686, size: 32, offset: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2936, file: !682, line: 4548, baseType: !686, size: 32, offset: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2936, file: !682, line: 4549, baseType: !686, size: 32, offset: 96)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2918, file: !682, line: 4551, baseType: !719, size: 106624, offset: 155520)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2918, file: !682, line: 4574, baseType: !2944, size: 128000, offset: 262144)
!2944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2945, size: 128000, elements: !750)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2918, file: !682, line: 4552, size: 1024, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2945, file: !682, line: 4553, baseType: !686, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2945, file: !682, line: 4554, baseType: !686, size: 32, offset: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2945, file: !682, line: 4555, baseType: !686, size: 32, offset: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2945, file: !682, line: 4556, baseType: !686, size: 32, offset: 96)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2945, file: !682, line: 4557, baseType: !686, size: 32, offset: 128)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2945, file: !682, line: 4558, baseType: !686, size: 32, offset: 160)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2945, file: !682, line: 4559, baseType: !686, size: 32, offset: 192)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2945, file: !682, line: 4560, baseType: !686, size: 32, offset: 224)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2945, file: !682, line: 4561, baseType: !686, size: 32, offset: 256)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2945, file: !682, line: 4562, baseType: !686, size: 32, offset: 288)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2945, file: !682, line: 4563, baseType: !686, size: 32, offset: 320)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2945, file: !682, line: 4564, baseType: !686, size: 32, offset: 352)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2945, file: !682, line: 4565, baseType: !686, size: 32, offset: 384)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2945, file: !682, line: 4566, baseType: !686, size: 32, offset: 416)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2945, file: !682, line: 4567, baseType: !686, size: 32, offset: 448)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2945, file: !682, line: 4568, baseType: !686, size: 32, offset: 480)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2945, file: !682, line: 4569, baseType: !743, size: 384, offset: 512)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2945, file: !682, line: 4570, baseType: !686, size: 32, offset: 896)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2945, file: !682, line: 4571, baseType: !686, size: 32, offset: 928)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2945, file: !682, line: 4572, baseType: !686, size: 32, offset: 960)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2945, file: !682, line: 4573, baseType: !686, size: 32, offset: 992)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !682, line: 8619, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 8563, size: 3072, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2970, file: !682, line: 8564, baseType: !2817, size: 768)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2970, file: !682, line: 8565, baseType: !686, size: 32, offset: 768)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2970, file: !682, line: 8566, baseType: !686, size: 32, offset: 800)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2970, file: !682, line: 8567, baseType: !686, size: 32, offset: 832)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2970, file: !682, line: 8568, baseType: !686, size: 32, offset: 864)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2970, file: !682, line: 8569, baseType: !686, size: 32, offset: 896)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2970, file: !682, line: 8570, baseType: !686, size: 32, offset: 928)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2970, file: !682, line: 8571, baseType: !686, size: 32, offset: 960)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2970, file: !682, line: 8572, baseType: !686, size: 32, offset: 992)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2970, file: !682, line: 8573, baseType: !686, size: 32, offset: 1024)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2970, file: !682, line: 8574, baseType: !2830, size: 96, offset: 1056)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2970, file: !682, line: 8575, baseType: !686, size: 32, offset: 1152)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2970, file: !682, line: 8576, baseType: !2830, size: 96, offset: 1184)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2970, file: !682, line: 8577, baseType: !686, size: 32, offset: 1280)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2970, file: !682, line: 8578, baseType: !2830, size: 96, offset: 1312)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2970, file: !682, line: 8579, baseType: !686, size: 32, offset: 1408)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2970, file: !682, line: 8580, baseType: !686, size: 32, offset: 1440)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2970, file: !682, line: 8581, baseType: !686, size: 32, offset: 1472)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2970, file: !682, line: 8582, baseType: !686, size: 32, offset: 1504)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2970, file: !682, line: 8583, baseType: !686, size: 32, offset: 1536)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2970, file: !682, line: 8584, baseType: !686, size: 32, offset: 1568)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2970, file: !682, line: 8585, baseType: !686, size: 32, offset: 1600)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2970, file: !682, line: 8586, baseType: !686, size: 32, offset: 1632)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2970, file: !682, line: 8587, baseType: !686, size: 32, offset: 1664)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2970, file: !682, line: 8588, baseType: !686, size: 32, offset: 1696)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2970, file: !682, line: 8589, baseType: !686, size: 32, offset: 1728)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2970, file: !682, line: 8590, baseType: !686, size: 32, offset: 1760)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2970, file: !682, line: 8591, baseType: !686, size: 32, offset: 1792)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2970, file: !682, line: 8592, baseType: !686, size: 32, offset: 1824)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2970, file: !682, line: 8593, baseType: !686, size: 32, offset: 1856)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2970, file: !682, line: 8594, baseType: !686, size: 32, offset: 1888)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2970, file: !682, line: 8595, baseType: !686, size: 32, offset: 1920)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2970, file: !682, line: 8596, baseType: !686, size: 32, offset: 1952)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2970, file: !682, line: 8597, baseType: !686, size: 32, offset: 1984)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2970, file: !682, line: 8598, baseType: !686, size: 32, offset: 2016)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2970, file: !682, line: 8599, baseType: !686, size: 32, offset: 2048)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2970, file: !682, line: 8600, baseType: !2830, size: 96, offset: 2080)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2970, file: !682, line: 8601, baseType: !686, size: 32, offset: 2176)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2970, file: !682, line: 8602, baseType: !2830, size: 96, offset: 2208)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2970, file: !682, line: 8603, baseType: !686, size: 32, offset: 2304)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2970, file: !682, line: 8604, baseType: !2830, size: 96, offset: 2336)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2970, file: !682, line: 8605, baseType: !686, size: 32, offset: 2432)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2970, file: !682, line: 8606, baseType: !686, size: 32, offset: 2464)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2970, file: !682, line: 8607, baseType: !686, size: 32, offset: 2496)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2970, file: !682, line: 8608, baseType: !686, size: 32, offset: 2528)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2970, file: !682, line: 8609, baseType: !686, size: 32, offset: 2560)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2970, file: !682, line: 8610, baseType: !2830, size: 96, offset: 2592)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2970, file: !682, line: 8611, baseType: !686, size: 32, offset: 2688)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2970, file: !682, line: 8612, baseType: !2830, size: 96, offset: 2720)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2970, file: !682, line: 8613, baseType: !686, size: 32, offset: 2816)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2970, file: !682, line: 8614, baseType: !2830, size: 96, offset: 2848)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2970, file: !682, line: 8615, baseType: !686, size: 32, offset: 2944)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2970, file: !682, line: 8616, baseType: !686, size: 32, offset: 2976)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2970, file: !682, line: 8617, baseType: !686, size: 32, offset: 3008)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2970, file: !682, line: 8618, baseType: !686, size: 32, offset: 3040)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3029, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3029 = !{!102, !132}
!3030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3031, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3032, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!3031 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3032 = !{!3033, !3040, !30}
!3033 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3034, line: 14, baseType: !32, size: 32, elements: !3035)
!3034 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3035 = !{!3036, !3037, !3038, !3039}
!3036 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3037 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3038 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3039 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3040 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3034, line: 42, baseType: !32, size: 32, elements: !3041)
!3041 = !{!3042, !3043, !3044, !3045, !3046, !3047}
!3042 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3043 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3044 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3045 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3046 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3047 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3050 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3051, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3052, splitDebugInlining: false, nameTableKind: None)
!3051 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3052 = !{!102, !103, !3053, !3068}
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !3056)
!3056 = !{!3057, !3063}
!3057 = !DIDerivedType(tag: DW_TAG_member, scope: !3055, file: !146, line: 38, baseType: !3058, size: 32)
!3058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3055, file: !146, line: 38, size: 32, elements: !3059)
!3059 = !{!3060, !3062}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3058, file: !146, line: 39, baseType: !3061, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3058, file: !146, line: 40, baseType: !3061, size: 32)
!3063 = !DIDerivedType(tag: DW_TAG_member, scope: !3055, file: !146, line: 42, baseType: !3064, size: 32, offset: 32)
!3064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3055, file: !146, line: 42, size: 32, elements: !3065)
!3065 = !{!3066, !3067}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3064, file: !146, line: 43, baseType: !3061, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3064, file: !146, line: 44, baseType: !3061, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 32)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !3070)
!3070 = !{!3071, !3115, !3127, !3128, !3129, !3130, !3143}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3069, file: !163, line: 247, baseType: !3072, size: 384)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !3073)
!3073 = !{!3074, !3084, !3091, !3092, !3093, !3102, !3103, !3104}
!3074 = !DIDerivedType(tag: DW_TAG_member, scope: !3072, file: !163, line: 60, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3072, file: !163, line: 60, size: 64, elements: !3076)
!3076 = !{!3077, !3078}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3075, file: !163, line: 61, baseType: !3054, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3075, file: !163, line: 62, baseType: !3079, size: 64)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !3080)
!3080 = !{!3081}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3079, file: !175, line: 50, baseType: !3082, size: 64)
!3082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3083, size: 64, elements: !180)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3072, file: !163, line: 68, baseType: !3085, size: 32, offset: 64)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !3088)
!3088 = !{!3089}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3087, file: !141, line: 232, baseType: !3090, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !3055)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3072, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3072, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!3093 = !DIDerivedType(tag: DW_TAG_member, scope: !3072, file: !163, line: 90, baseType: !3094, size: 16, offset: 112)
!3094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3072, file: !163, line: 90, size: 16, elements: !3095)
!3095 = !{!3096, !3101}
!3096 = !DIDerivedType(tag: DW_TAG_member, scope: !3094, file: !163, line: 91, baseType: !3097, size: 16)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3094, file: !163, line: 91, size: 16, elements: !3098)
!3098 = !{!3099, !3100}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3097, file: !163, line: 96, baseType: !195, size: 8)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3097, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3094, file: !163, line: 100, baseType: !121, size: 16)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3072, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3072, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3072, file: !163, line: 131, baseType: !3105, size: 192, offset: 192)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !3106)
!3106 = !{!3107, !3108, !3114}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3105, file: !141, line: 245, baseType: !3054, size: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3105, file: !141, line: 246, baseType: !3109, size: 32, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !3110)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 32)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{null, !3113}
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3105, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3069, file: !163, line: 250, baseType: !3116, size: 288, offset: 384)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !3117)
!3117 = !{!3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3116, file: !214, line: 26, baseType: !108, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3116, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3116, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3116, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3116, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3116, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3116, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3116, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3116, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3069, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3069, file: !163, line: 256, baseType: !3086, size: 64, offset: 704)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3069, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3069, file: !163, line: 325, baseType: !3131, size: 32, offset: 800)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 32)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !3133)
!3133 = !{!3134, !3140, !3141}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3132, file: !137, line: 5074, baseType: !3135, size: 96)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !3136)
!3136 = !{!3137, !3138, !3139}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3135, file: !234, line: 57, baseType: !237, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3135, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3135, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3132, file: !137, line: 5075, baseType: !3086, size: 64, offset: 96)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3132, file: !137, line: 5076, baseType: !3142, offset: 160)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3069, file: !163, line: 343, baseType: !3144, size: 64, offset: 832)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3144, file: !214, line: 63, baseType: !108, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3144, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!3148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3149, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3150, splitDebugInlining: false, nameTableKind: None)
!3149 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3150 = !{!22, !102, !103}
!3151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!3152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3154, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !386, splitDebugInlining: false, nameTableKind: None)
!3154 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3155 = !{!"Ubuntu clang version 14.0.6"}
!3156 = !{i32 7, !"Dwarf Version", i32 4}
!3157 = !{i32 2, !"Debug Info Version", i32 3}
!3158 = !{i32 1, !"wchar_size", i32 4}
!3159 = !{i32 1, !"min_enum_size", i32 4}
!3160 = !{i32 1, !"branch-target-enforcement", i32 0}
!3161 = !{i32 1, !"sign-return-address", i32 0}
!3162 = !{i32 1, !"sign-return-address-all", i32 0}
!3163 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3164 = !{i32 7, !"frame-pointer", i32 2}
!3165 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3166, file: !3166, line: 26, type: !328, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !245)
!3166 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3167 = !DILocation(line: 28, column: 1, scope: !3165)
!3168 = !{i64 2155072777, i64 2155072797, i64 2155072860}
!3169 = !DILocation(line: 29, column: 1, scope: !3165)
!3170 = !{i64 2155073192, i64 2155073212, i64 2155073275}
!3171 = !DILocation(line: 30, column: 1, scope: !3165)
!3172 = !{i64 2155073611, i64 2155073631, i64 2155073694}
!3173 = !DILocation(line: 31, column: 1, scope: !3165)
!3174 = !{i64 2155074030, i64 2155074050, i64 2155074113}
!3175 = !DILocation(line: 33, column: 1, scope: !3165)
!3176 = !{i64 2155074322, i64 2155074342, i64 2155074405}
!3177 = !DILocation(line: 35, column: 1, scope: !3165)
!3178 = !{i64 2155074647, i64 2155074667, i64 2155074730}
!3179 = !DILocation(line: 50, column: 1, scope: !3165)
!3180 = !{i64 2155075074, i64 2155075094, i64 2155075157}
!3181 = !DILocation(line: 54, column: 1, scope: !3165)
!3182 = !{i64 2155075513, i64 2155075533, i64 2155075596}
!3183 = !DILocation(line: 61, column: 1, scope: !3165)
!3184 = !{i64 2155075830, i64 2155075850, i64 2155075913}
!3185 = !DILocation(line: 63, column: 1, scope: !3165)
!3186 = !{i64 2155076210, i64 2155076230, i64 2155076293}
!3187 = !DILocation(line: 64, column: 1, scope: !3165)
!3188 = !{i64 2155080793, i64 2155080813, i64 2155080876}
!3189 = !DILocation(line: 65, column: 1, scope: !3165)
!3190 = !{i64 2155081291, i64 2155081311, i64 2155081374}
!3191 = !DILocation(line: 66, column: 1, scope: !3165)
!3192 = !{i64 2155081773, i64 2155081793, i64 2155081856}
!3193 = !DILocation(line: 67, column: 1, scope: !3165)
!3194 = !{i64 2155082280, i64 2155082300, i64 2155082363}
!3195 = !DILocation(line: 68, column: 1, scope: !3165)
!3196 = !{i64 2155082768, i64 2155082788, i64 2155082851}
!3197 = !DILocation(line: 70, column: 1, scope: !3165)
!3198 = !{i64 2155083236, i64 2155083256, i64 2155083319}
!3199 = !DILocation(line: 71, column: 1, scope: !3165)
!3200 = !{i64 2155083678, i64 2155083698, i64 2155083761}
!3201 = !DILocation(line: 72, column: 1, scope: !3165)
!3202 = !{i64 2155084136, i64 2155084156, i64 2155084219}
!3203 = !DILocation(line: 97, column: 1, scope: !3165)
!3204 = !{i64 2155084443, i64 2155084463, i64 2155084526}
!3205 = !DILocation(line: 99, column: 1, scope: !3165)
!3206 = !{i64 2155084661, i64 2155084681, i64 2155084744}
!3207 = !DILocation(line: 102, column: 1, scope: !3165)
!3208 = !{i64 2155084918, i64 2155084938, i64 2155085001}
!3209 = !DILocation(line: 105, column: 1, scope: !3165)
!3210 = !{i64 2155085158, i64 2155085178, i64 2155085241}
!3211 = !DILocation(line: 115, column: 1, scope: !3165)
!3212 = !{i64 2155085497, i64 2155085517, i64 2155085580}
!3213 = !DILocation(line: 118, column: 1, scope: !3165)
!3214 = !{i64 2155085841, i64 2155085861, i64 2155085924}
!3215 = !DILocation(line: 32, column: 1, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3165, file: !3217, discriminator: 0)
!3217 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3218 = !{i64 2155086197, i64 2155086217, i64 2155086280}
!3219 = !DILocation(line: 33, column: 1, scope: !3216)
!3220 = !{i64 2155086709, i64 2155086729, i64 2155086792}
!3221 = !DILocation(line: 53, column: 1, scope: !3216)
!3222 = !{i64 2155087217, i64 2155087237, i64 2155087300}
!3223 = !DILocation(line: 54, column: 1, scope: !3216)
!3224 = !{i64 2155087635, i64 2155087655, i64 2155087718}
!3225 = !DILocation(line: 55, column: 1, scope: !3216)
!3226 = !{i64 2155088053, i64 2155088073, i64 2155088136}
!3227 = !DILocation(line: 56, column: 1, scope: !3216)
!3228 = !{i64 2155088471, i64 2155088491, i64 2155088554}
!3229 = !DILocation(line: 57, column: 1, scope: !3216)
!3230 = !{i64 2155088889, i64 2155088909, i64 2155088972}
!3231 = !DILocation(line: 58, column: 1, scope: !3216)
!3232 = !{i64 2155089307, i64 2155089327, i64 2155089390}
!3233 = !DILocation(line: 59, column: 1, scope: !3216)
!3234 = !{i64 2155089725, i64 2155089745, i64 2155089808}
!3235 = !DILocation(line: 60, column: 1, scope: !3216)
!3236 = !{i64 2155090149, i64 2155090169, i64 2155090232}
!3237 = !DILocation(line: 61, column: 1, scope: !3216)
!3238 = !{i64 2155094527, i64 2155094547, i64 2155094610}
!3239 = !DILocation(line: 70, column: 1, scope: !3216)
!3240 = !{i64 2155094756, i64 2155094776, i64 2155094839}
!3241 = !DILocation(line: 72, column: 1, scope: !3216)
!3242 = !{i64 2155095088, i64 2155095108, i64 2155095171}
!3243 = !DILocation(line: 73, column: 1, scope: !3216)
!3244 = !{i64 2155095538, i64 2155095558, i64 2155095621}
!3245 = !DILocation(line: 74, column: 1, scope: !3216)
!3246 = !{i64 2155095988, i64 2155096008, i64 2155096071}
!3247 = !DILocation(line: 75, column: 1, scope: !3216)
!3248 = !{i64 2155096438, i64 2155096458, i64 2155096521}
!3249 = !DILocation(line: 76, column: 1, scope: !3216)
!3250 = !{i64 2155096888, i64 2155096908, i64 2155096971}
!3251 = !DILocation(line: 77, column: 1, scope: !3216)
!3252 = !{i64 2155097338, i64 2155097358, i64 2155097421}
!3253 = !DILocation(line: 78, column: 1, scope: !3216)
!3254 = !{i64 2155097788, i64 2155097808, i64 2155097871}
!3255 = !DILocation(line: 79, column: 1, scope: !3216)
!3256 = !{i64 2155098238, i64 2155098258, i64 2155098321}
!3257 = !DILocation(line: 80, column: 1, scope: !3216)
!3258 = !{i64 2155098691, i64 2155098711, i64 2155098774}
!3259 = !DILocation(line: 84, column: 1, scope: !3216)
!3260 = !{i64 2155099023, i64 2155099043, i64 2155099106}
!3261 = !DILocation(line: 106, column: 1, scope: !3216)
!3262 = !{i64 2155099273, i64 2155099293, i64 2155099356}
!3263 = !DILocation(line: 11, column: 1, scope: !3264)
!3264 = !DILexicalBlockFile(scope: !3165, file: !3265, discriminator: 0)
!3265 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3266 = distinct !DISubprogram(name: "s_cb", scope: !114, file: !114, line: 152, type: !281, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3267)
!3267 = !{!3268, !3269, !3276}
!3268 = !DILocalVariable(name: "chan", arg: 1, scope: !3266, file: !114, line: 152, type: !283)
!3269 = !DILocalVariable(name: "msg_received", scope: !3266, file: !114, line: 154, type: !3270)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bm_msg", file: !347, line: 15, size: 2048, elements: !3271)
!3271 = !{!3272}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3270, file: !347, line: 16, baseType: !3273, size: 2048)
!3273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !3274)
!3274 = !{!3275}
!3275 = !DISubrange(count: 256)
!3276 = !DILocalVariable(name: "actual_message_data", scope: !3266, file: !114, line: 155, type: !3277)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 32)
!3278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!3279 = !DILocation(line: 0, scope: !3266)
!3280 = !DILocation(line: 154, column: 2, scope: !3266)
!3281 = !DILocation(line: 154, column: 16, scope: !3266)
!3282 = !DILocation(line: 155, column: 56, scope: !3266)
!3283 = !DILocation(line: 157, column: 45, scope: !3266)
!3284 = !DILocation(line: 157, column: 2, scope: !3266)
!3285 = !DILocation(line: 159, column: 8, scope: !3266)
!3286 = !DILocation(line: 160, column: 1, scope: !3266)
!3287 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3288, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!13, !283}
!3290 = !{!3291}
!3291 = !DILocalVariable(name: "chan", arg: 1, scope: !3287, file: !117, line: 416, type: !283)
!3292 = !DILocation(line: 0, scope: !3287)
!3293 = !DILocation(line: 420, column: 15, scope: !3287)
!3294 = !DILocation(line: 420, column: 2, scope: !3287)
!3295 = distinct !DISubprogram(name: "producer_thread", scope: !114, file: !114, line: 164, type: !328, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3296)
!3296 = !{!3297, !3298, !3300, !3302, !3303, !3305, !3306, !3307}
!3297 = !DILocalVariable(name: "msg", scope: !3295, file: !114, line: 169, type: !3270)
!3298 = !DILocalVariable(name: "actual_message_data", scope: !3295, file: !114, line: 170, type: !3299)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 32)
!3300 = !DILocalVariable(name: "i", scope: !3301, file: !114, line: 172, type: !109)
!3301 = distinct !DILexicalBlock(scope: !3295, file: !114, line: 172, column: 2)
!3302 = !DILocalVariable(name: "start", scope: !3295, file: !114, line: 186, type: !108)
!3303 = !DILocalVariable(name: "internal_count", scope: !3304, file: !114, line: 188, type: !109)
!3304 = distinct !DILexicalBlock(scope: !3295, file: !114, line: 188, column: 2)
!3305 = !DILocalVariable(name: "duration", scope: !3295, file: !114, line: 200, type: !108)
!3306 = !DILocalVariable(name: "i", scope: !3295, file: !114, line: 206, type: !109)
!3307 = !DILocalVariable(name: "f", scope: !3295, file: !114, line: 207, type: !109)
!3308 = !DILocation(line: 166, column: 2, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !114, line: 166, column: 2)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !114, line: 166, column: 2)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !114, line: 166, column: 2)
!3312 = distinct !DILexicalBlock(scope: !3295, file: !114, line: 166, column: 2)
!3313 = !DILocation(line: 169, column: 2, scope: !3295)
!3314 = !DILocation(line: 169, column: 16, scope: !3295)
!3315 = !DILocation(line: 0, scope: !3301)
!3316 = !DILocation(line: 172, column: 2, scope: !3301)
!3317 = !DILocation(line: 176, column: 2, scope: !3295)
!3318 = !DILocation(line: 0, scope: !3295)
!3319 = !DILocation(line: 179, column: 35, scope: !3295)
!3320 = !DILocation(line: 179, column: 33, scope: !3295)
!3321 = !DILocation(line: 181, column: 28, scope: !3295)
!3322 = !DILocation(line: 184, column: 2, scope: !3295)
!3323 = !DILocation(line: 186, column: 19, scope: !3295)
!3324 = !DILocation(line: 0, scope: !3304)
!3325 = !DILocation(line: 188, column: 2, scope: !3304)
!3326 = !DILocation(line: 173, column: 18, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !114, line: 172, column: 62)
!3328 = distinct !DILexicalBlock(scope: !3301, file: !114, line: 172, column: 2)
!3329 = !DILocation(line: 173, column: 3, scope: !3327)
!3330 = !DILocation(line: 173, column: 16, scope: !3327)
!3331 = !DILocation(line: 172, column: 57, scope: !3328)
!3332 = !DILocation(line: 172, column: 52, scope: !3328)
!3333 = distinct !{!3333, !3316, !3334}
!3334 = !DILocation(line: 174, column: 2, scope: !3301)
!3335 = !DILocation(line: 200, column: 23, scope: !3295)
!3336 = !DILocation(line: 200, column: 41, scope: !3295)
!3337 = !DILocation(line: 202, column: 15, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3295, file: !114, line: 202, column: 6)
!3339 = !DILocation(line: 202, column: 6, scope: !3295)
!3340 = !DILocation(line: 190, column: 3, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !114, line: 189, column: 49)
!3342 = distinct !DILexicalBlock(scope: !3304, file: !114, line: 188, column: 2)
!3343 = !DILocation(line: 194, column: 31, scope: !3341)
!3344 = !DILocation(line: 194, column: 3, scope: !3341)
!3345 = !DILocation(line: 196, column: 3, scope: !3341)
!3346 = !DILocation(line: 198, column: 33, scope: !3341)
!3347 = !DILocation(line: 198, column: 3, scope: !3341)
!3348 = !DILocation(line: 189, column: 22, scope: !3342)
!3349 = !DILocation(line: 188, column: 85, scope: !3342)
!3350 = distinct !{!3350, !3325, !3351}
!3351 = !DILocation(line: 199, column: 2, scope: !3304)
!3352 = !DILocation(line: 203, column: 3, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !114, line: 203, column: 3)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !114, line: 203, column: 3)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !114, line: 203, column: 3)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !114, line: 203, column: 3)
!3357 = distinct !DILexicalBlock(scope: !3338, file: !114, line: 202, column: 21)
!3358 = !DILocation(line: 204, column: 3, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3357, file: !114, line: 204, column: 3)
!3360 = !{i64 2151788658, i64 2151788674, i64 2151788700, i64 2151788728, i64 2151788748}
!3361 = !DILocation(line: 205, column: 2, scope: !3357)
!3362 = !DILocation(line: 206, column: 43, scope: !3295)
!3363 = !DILocation(line: 206, column: 41, scope: !3295)
!3364 = !DILocation(line: 207, column: 44, scope: !3295)
!3365 = !DILocation(line: 207, column: 56, scope: !3295)
!3366 = !DILocation(line: 209, column: 2, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !114, line: 209, column: 2)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !114, line: 209, column: 2)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !114, line: 209, column: 2)
!3370 = distinct !DILexicalBlock(scope: !3295, file: !114, line: 209, column: 2)
!3371 = !DILocation(line: 210, column: 2, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !114, line: 210, column: 2)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !114, line: 210, column: 2)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !114, line: 210, column: 2)
!3375 = distinct !DILexicalBlock(scope: !3295, file: !114, line: 210, column: 2)
!3376 = !DILocation(line: 211, column: 2, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !114, line: 211, column: 2)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !114, line: 211, column: 2)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !114, line: 211, column: 2)
!3380 = distinct !DILexicalBlock(scope: !3295, file: !114, line: 211, column: 2)
!3381 = !DILocation(line: 213, column: 2, scope: !3295)
!3382 = !DILocation(line: 214, column: 1, scope: !3295)
!3383 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3384, file: !3384, line: 175, type: !3385, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3387)
!3384 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!272, !103}
!3387 = !{!3388}
!3388 = !DILocalVariable(name: "level", arg: 1, scope: !3383, file: !3384, line: 175, type: !103)
!3389 = !DILocation(line: 0, scope: !3383)
!3390 = !DILocation(line: 177, column: 2, scope: !3383)
!3391 = !DILocation(line: 189, column: 1, scope: !3383)
!3392 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !137, file: !137, line: 1640, type: !3393, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !245)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!108}
!3395 = !DILocation(line: 1642, column: 19, scope: !3392)
!3396 = !DILocation(line: 1642, column: 9, scope: !3392)
!3397 = !DILocation(line: 1642, column: 2, scope: !3392)
!3398 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3399, file: !3399, line: 403, type: !3400, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3402)
!3399 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!109, !109}
!3402 = !{!3403}
!3403 = !DILocalVariable(name: "t", arg: 1, scope: !3398, file: !3399, line: 403, type: !109)
!3404 = !DILocation(line: 0, scope: !3398)
!3405 = !DILocation(line: 406, column: 2, scope: !3398)
!3406 = distinct !DISubprogram(name: "k_uptime_get", scope: !137, file: !137, line: 1616, type: !3407, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !245)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!106}
!3409 = !DILocation(line: 1618, column: 31, scope: !3406)
!3410 = !DILocation(line: 1618, column: 9, scope: !3406)
!3411 = !DILocation(line: 1618, column: 2, scope: !3406)
!3412 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3413, file: !3413, line: 564, type: !3407, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !245)
!3413 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!3414 = !DILocation(line: 573, column: 2, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3412, file: !3413, line: 573, column: 2)
!3416 = !{i64 2151055600}
!3417 = !DILocation(line: 574, column: 9, scope: !3412)
!3418 = !DILocation(line: 574, column: 2, scope: !3412)
!3419 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3399, file: !3399, line: 1103, type: !3400, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3420)
!3420 = !{!3421}
!3421 = !DILocalVariable(name: "t", arg: 1, scope: !3419, file: !3399, line: 1103, type: !109)
!3422 = !DILocation(line: 0, scope: !3419)
!3423 = !DILocalVariable(name: "t", arg: 1, scope: !3424, file: !3399, line: 102, type: !109)
!3424 = distinct !DISubprogram(name: "z_tmcvt", scope: !3399, file: !3399, line: 102, type: !3425, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3427)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!109, !109, !108, !108, !131, !131, !131, !131}
!3427 = !{!3423, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437}
!3428 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3424, file: !3399, line: 102, type: !108)
!3429 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3424, file: !3399, line: 103, type: !108)
!3430 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3424, file: !3399, line: 103, type: !131)
!3431 = !DILocalVariable(name: "result32", arg: 5, scope: !3424, file: !3399, line: 104, type: !131)
!3432 = !DILocalVariable(name: "round_up", arg: 6, scope: !3424, file: !3399, line: 104, type: !131)
!3433 = !DILocalVariable(name: "round_off", arg: 7, scope: !3424, file: !3399, line: 105, type: !131)
!3434 = !DILocalVariable(name: "mul_ratio", scope: !3424, file: !3399, line: 107, type: !131)
!3435 = !DILocalVariable(name: "div_ratio", scope: !3424, file: !3399, line: 109, type: !131)
!3436 = !DILocalVariable(name: "off", scope: !3424, file: !3399, line: 116, type: !109)
!3437 = !DILocalVariable(name: "rdivisor", scope: !3438, file: !3399, line: 119, type: !108)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !3399, line: 118, column: 18)
!3439 = distinct !DILexicalBlock(scope: !3424, file: !3399, line: 118, column: 6)
!3440 = !DILocation(line: 0, scope: !3424, inlinedAt: !3441)
!3441 = distinct !DILocation(line: 1106, column: 9, scope: !3419)
!3442 = !DILocation(line: 139, column: 13, scope: !3443, inlinedAt: !3441)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !3399, line: 138, column: 10)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !3399, line: 136, column: 7)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !3399, line: 134, column: 17)
!3446 = distinct !DILexicalBlock(scope: !3424, file: !3399, line: 134, column: 6)
!3447 = !DILocation(line: 1106, column: 2, scope: !3419)
!3448 = distinct !DISubprogram(name: "cbvprintf_package", scope: !375, file: !375, line: 233, type: !3449, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3458)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!103, !102, !132, !108, !331, !3451}
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3452, line: 99, baseType: !3453)
!3452 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3452, line: 40, baseType: !3454)
!3454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !375, baseType: !3455)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3456)
!3456 = !{!3457}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3455, file: !375, line: 18, baseType: !102, size: 32)
!3458 = !{!3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3494, !3503, !3506, !3507, !3510, !3513, !3516, !3519, !3525}
!3459 = !DILocalVariable(name: "packaged", arg: 1, scope: !3448, file: !375, line: 233, type: !102)
!3460 = !DILocalVariable(name: "len", arg: 2, scope: !3448, file: !375, line: 233, type: !132)
!3461 = !DILocalVariable(name: "flags", arg: 3, scope: !3448, file: !375, line: 233, type: !108)
!3462 = !DILocalVariable(name: "fmt", arg: 4, scope: !3448, file: !375, line: 234, type: !331)
!3463 = !DILocalVariable(name: "ap", arg: 5, scope: !3448, file: !375, line: 234, type: !3451)
!3464 = !DILocalVariable(name: "buf0", scope: !3448, file: !375, line: 247, type: !373)
!3465 = !DILocalVariable(name: "buf", scope: !3448, file: !375, line: 248, type: !373)
!3466 = !DILocalVariable(name: "size", scope: !3448, file: !375, line: 249, type: !32)
!3467 = !DILocalVariable(name: "align", scope: !3448, file: !375, line: 250, type: !32)
!3468 = !DILocalVariable(name: "str_ptr_pos", scope: !3448, file: !375, line: 251, type: !3469)
!3469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !1131)
!3470 = !DILocalVariable(name: "str_ptr_arg", scope: !3448, file: !375, line: 252, type: !3469)
!3471 = !DILocalVariable(name: "s_idx", scope: !3448, file: !375, line: 253, type: !32)
!3472 = !DILocalVariable(name: "s_rw_cnt", scope: !3448, file: !375, line: 254, type: !32)
!3473 = !DILocalVariable(name: "s_ro_cnt", scope: !3448, file: !375, line: 255, type: !32)
!3474 = !DILocalVariable(name: "arg_idx", scope: !3448, file: !375, line: 256, type: !103)
!3475 = !DILocalVariable(name: "i", scope: !3448, file: !375, line: 257, type: !32)
!3476 = !DILocalVariable(name: "s", scope: !3448, file: !375, line: 258, type: !331)
!3477 = !DILocalVariable(name: "parsing", scope: !3448, file: !375, line: 259, type: !131)
!3478 = !DILocalVariable(name: "rws_pos_en", scope: !3448, file: !375, line: 263, type: !131)
!3479 = !DILocalVariable(name: "fros_cnt", scope: !3448, file: !375, line: 268, type: !103)
!3480 = !DILocalVariable(name: "is_str_arg", scope: !3448, file: !375, line: 269, type: !131)
!3481 = !DILocalVariable(name: "pkg_hdr", scope: !3448, file: !375, line: 270, type: !3482)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 32)
!3483 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3484, line: 78, size: 32, elements: !3485)
!3484 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3485 = !{!3486, !3493}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3483, file: !3484, line: 80, baseType: !3487, size: 32)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3484, line: 45, size: 32, elements: !3488)
!3488 = !{!3489, !3490, !3491, !3492}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3487, file: !3484, line: 47, baseType: !185, size: 8)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3487, file: !3484, line: 50, baseType: !185, size: 8, offset: 8)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3487, file: !3484, line: 53, baseType: !185, size: 8, offset: 16)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3487, file: !3484, line: 56, baseType: !185, size: 8, offset: 24)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3483, file: !3484, line: 82, baseType: !102, size: 32)
!3494 = !DILocalVariable(name: "v", scope: !3495, file: !375, line: 567, type: !3499)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !375, line: 562, column: 14)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !375, line: 481, column: 18)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !375, line: 466, column: 3)
!3498 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 343, column: 15)
!3499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3448, file: !375, line: 567, size: 64, elements: !3500)
!3500 = !{!3501, !3502}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3499, file: !375, line: 567, baseType: !366, size: 64)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3499, file: !375, line: 567, baseType: !364, size: 64)
!3503 = !DILocalVariable(name: "is_ro", scope: !3504, file: !375, line: 620, type: !131)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !375, line: 613, column: 19)
!3505 = distinct !DILexicalBlock(scope: !3498, file: !375, line: 613, column: 7)
!3506 = !DILocalVariable(name: "do_ro", scope: !3504, file: !375, line: 621, type: !131)
!3507 = !DILocalVariable(name: "s_ptr_idx", scope: !3508, file: !375, line: 626, type: !108)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !375, line: 625, column: 11)
!3509 = distinct !DILexicalBlock(scope: !3504, file: !375, line: 623, column: 8)
!3510 = !DILocalVariable(name: "v", scope: !3511, file: !375, line: 684, type: !103)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !375, line: 683, column: 35)
!3512 = distinct !DILexicalBlock(scope: !3505, file: !375, line: 683, column: 14)
!3513 = !DILocalVariable(name: "v", scope: !3514, file: !375, line: 691, type: !370)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !375, line: 690, column: 36)
!3515 = distinct !DILexicalBlock(scope: !3512, file: !375, line: 690, column: 14)
!3516 = !DILocalVariable(name: "v", scope: !3517, file: !375, line: 698, type: !107)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !375, line: 697, column: 41)
!3518 = distinct !DILexicalBlock(scope: !3515, file: !375, line: 697, column: 14)
!3519 = !DILocalVariable(name: "pos", scope: !3520, file: !375, line: 762, type: !185)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !375, line: 757, column: 31)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !375, line: 757, column: 3)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !375, line: 757, column: 3)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !375, line: 756, column: 16)
!3524 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 756, column: 6)
!3525 = !DILabel(scope: !3504, name: "process_string", file: !375, line: 615)
!3526 = !DILocation(line: 0, scope: !3448)
!3527 = !DILocation(line: 251, column: 2, scope: !3448)
!3528 = !DILocation(line: 251, column: 10, scope: !3448)
!3529 = !DILocation(line: 252, column: 2, scope: !3448)
!3530 = !DILocation(line: 252, column: 10, scope: !3448)
!3531 = !DILocation(line: 263, column: 29, scope: !3448)
!3532 = !DILocation(line: 263, column: 21, scope: !3448)
!3533 = !DILocation(line: 268, column: 21, scope: !3448)
!3534 = !DILocation(line: 268, column: 19, scope: !3448)
!3535 = !DILocation(line: 273, column: 6, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 273, column: 6)
!3537 = !DILocation(line: 273, column: 26, scope: !3536)
!3538 = !DILocation(line: 273, column: 6, scope: !3448)
!3539 = !DILocation(line: 297, column: 6, scope: !3448)
!3540 = !DILocation(line: 305, column: 11, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 305, column: 6)
!3542 = !DILocation(line: 305, column: 6, scope: !3448)
!3543 = !DILocation(line: 327, column: 19, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 327, column: 6)
!3545 = !DILocation(line: 327, column: 22, scope: !3544)
!3546 = !DILocation(line: 327, column: 33, scope: !3544)
!3547 = !DILocation(line: 327, column: 50, scope: !3544)
!3548 = !DILocation(line: 327, column: 6, scope: !3448)
!3549 = !DILocation(line: 338, column: 9, scope: !3448)
!3550 = !DILocation(line: 341, column: 2, scope: !3448)
!3551 = !DILocation(line: 472, column: 8, scope: !3497)
!3552 = !DILocation(line: 473, column: 14, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !375, line: 473, column: 9)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !375, line: 472, column: 18)
!3555 = distinct !DILexicalBlock(scope: !3497, file: !375, line: 472, column: 8)
!3556 = !DILocation(line: 473, column: 9, scope: !3554)
!3557 = !DILocation(line: 479, column: 5, scope: !3554)
!3558 = !DILocation(line: 468, column: 9, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3497, file: !375, line: 468, column: 8)
!3560 = !DILocation(line: 468, column: 8, scope: !3559)
!3561 = !DILocation(line: 468, column: 15, scope: !3559)
!3562 = !DILocation(line: 468, column: 8, scope: !3497)
!3563 = distinct !{!3563, !3564, !3565}
!3564 = !DILocation(line: 343, column: 2, scope: !3448)
!3565 = !DILocation(line: 712, column: 2, scope: !3448)
!3566 = !DILocation(line: 481, column: 4, scope: !3497)
!3567 = !DILocation(line: 484, column: 12, scope: !3496)
!3568 = !DILocation(line: 485, column: 5, scope: !3496)
!3569 = !DILocation(line: 505, column: 5, scope: !3496)
!3570 = !DILocation(line: 518, column: 5, scope: !3496)
!3571 = !DILocation(line: 523, column: 5, scope: !3496)
!3572 = !DILocation(line: 532, column: 9, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3496, file: !375, line: 532, column: 9)
!3574 = !DILocation(line: 532, column: 17, scope: !3573)
!3575 = !DILocation(line: 532, column: 9, scope: !3496)
!3576 = !DILocation(line: 533, column: 10, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !375, line: 533, column: 10)
!3578 = distinct !DILexicalBlock(scope: !3573, file: !375, line: 532, column: 25)
!3579 = !DILocation(line: 533, column: 18, scope: !3577)
!3580 = !DILocation(line: 0, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3495, file: !375, line: 569, column: 9)
!3582 = !DILocation(line: 0, scope: !3495)
!3583 = !DILocation(line: 579, column: 20, scope: !3495)
!3584 = !DILocation(line: 579, column: 11, scope: !3495)
!3585 = !DILocation(line: 580, column: 9, scope: !3495)
!3586 = !DILocation(line: 582, column: 21, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !375, line: 582, column: 10)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !375, line: 580, column: 23)
!3589 = distinct !DILexicalBlock(scope: !3495, file: !375, line: 580, column: 9)
!3590 = !DILocation(line: 582, column: 28, scope: !3587)
!3591 = !DILocation(line: 582, column: 10, scope: !3588)
!3592 = !DILocation(line: 0, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !375, line: 587, column: 17)
!3594 = distinct !DILexicalBlock(scope: !3588, file: !375, line: 585, column: 10)
!3595 = !DILocation(line: 593, column: 9, scope: !3495)
!3596 = !DILocation(line: 600, column: 5, scope: !3496)
!3597 = !DILocation(line: 605, column: 18, scope: !3498)
!3598 = !DILocation(line: 605, column: 9, scope: !3498)
!3599 = !DILocation(line: 608, column: 20, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3498, file: !375, line: 608, column: 7)
!3601 = !DILocation(line: 608, column: 23, scope: !3600)
!3602 = !DILocation(line: 608, column: 34, scope: !3600)
!3603 = !DILocation(line: 608, column: 41, scope: !3600)
!3604 = !DILocation(line: 608, column: 7, scope: !3498)
!3605 = !DILocation(line: 613, column: 7, scope: !3498)
!3606 = !DILocation(line: 614, column: 8, scope: !3504)
!3607 = !DILocation(line: 614, column: 4, scope: !3504)
!3608 = !DILocation(line: 255, column: 15, scope: !3448)
!3609 = !DILocation(line: 256, column: 6, scope: !3448)
!3610 = !DILocation(line: 254, column: 15, scope: !3448)
!3611 = !DILocation(line: 253, column: 15, scope: !3448)
!3612 = !DILocation(line: 320, column: 7, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3541, file: !375, line: 305, column: 20)
!3614 = !DILocation(line: 615, column: 1, scope: !3504)
!3615 = !DILocation(line: 616, column: 8, scope: !3504)
!3616 = !DILocation(line: 617, column: 5, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !375, line: 616, column: 22)
!3618 = distinct !DILexicalBlock(scope: !3504, file: !375, line: 616, column: 8)
!3619 = !DILocation(line: 617, column: 25, scope: !3617)
!3620 = !DILocation(line: 618, column: 4, scope: !3617)
!3621 = !DILocation(line: 620, column: 26, scope: !3504)
!3622 = !DILocation(line: 620, column: 29, scope: !3504)
!3623 = !DILocation(line: 620, column: 17, scope: !3504)
!3624 = !DILocation(line: 620, column: 43, scope: !3504)
!3625 = !DILocation(line: 0, scope: !3504)
!3626 = !DILocation(line: 623, column: 14, scope: !3509)
!3627 = !DILocation(line: 626, column: 26, scope: !3508)
!3628 = !DILocation(line: 626, column: 37, scope: !3508)
!3629 = !DILocation(line: 0, scope: !3508)
!3630 = !DILocation(line: 634, column: 15, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3508, file: !375, line: 634, column: 9)
!3632 = !DILocation(line: 644, column: 9, scope: !3508)
!3633 = !DILocation(line: 649, column: 27, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !375, line: 644, column: 23)
!3635 = distinct !DILexicalBlock(scope: !3508, file: !375, line: 644, column: 9)
!3636 = !DILocation(line: 649, column: 6, scope: !3634)
!3637 = !DILocation(line: 649, column: 25, scope: !3634)
!3638 = !DILocation(line: 650, column: 27, scope: !3634)
!3639 = !DILocation(line: 650, column: 6, scope: !3634)
!3640 = !DILocation(line: 650, column: 25, scope: !3634)
!3641 = !DILocation(line: 651, column: 10, scope: !3634)
!3642 = !DILocation(line: 653, column: 26, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !375, line: 651, column: 17)
!3644 = distinct !DILexicalBlock(scope: !3634, file: !375, line: 651, column: 10)
!3645 = !DILocation(line: 654, column: 15, scope: !3643)
!3646 = !DILocation(line: 655, column: 6, scope: !3643)
!3647 = !DILocation(line: 656, column: 15, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3644, file: !375, line: 655, column: 13)
!3649 = !DILocation(line: 658, column: 16, scope: !3635)
!3650 = !DILocation(line: 663, column: 10, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !375, line: 658, column: 23)
!3652 = distinct !DILexicalBlock(scope: !3635, file: !375, line: 658, column: 16)
!3653 = !DILocation(line: 664, column: 5, scope: !3651)
!3654 = !DILocation(line: 664, column: 16, scope: !3652)
!3655 = !DILocation(line: 669, column: 10, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !375, line: 664, column: 28)
!3657 = distinct !DILexicalBlock(scope: !3652, file: !375, line: 664, column: 16)
!3658 = !DILocation(line: 670, column: 5, scope: !3656)
!3659 = !DILocation(line: 675, column: 13, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3657, file: !375, line: 670, column: 12)
!3661 = !DILocation(line: 675, column: 27, scope: !3660)
!3662 = !DILocation(line: 675, column: 10, scope: !3660)
!3663 = !DILocation(line: 678, column: 10, scope: !3508)
!3664 = !DILocation(line: 680, column: 8, scope: !3504)
!3665 = !DILocation(line: 683, column: 14, scope: !3505)
!3666 = !DILocation(line: 684, column: 12, scope: !3511)
!3667 = !DILocation(line: 0, scope: !3511)
!3668 = !DILocation(line: 686, column: 8, scope: !3511)
!3669 = !DILocation(line: 687, column: 5, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !375, line: 686, column: 22)
!3671 = distinct !DILexicalBlock(scope: !3511, file: !375, line: 686, column: 8)
!3672 = !DILocation(line: 687, column: 17, scope: !3670)
!3673 = !DILocation(line: 688, column: 4, scope: !3670)
!3674 = !DILocation(line: 698, column: 18, scope: !3517)
!3675 = !DILocation(line: 0, scope: !3517)
!3676 = !DILocation(line: 700, column: 8, scope: !3517)
!3677 = !DILocation(line: 704, column: 6, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !375, line: 703, column: 12)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !375, line: 701, column: 9)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !375, line: 700, column: 22)
!3681 = distinct !DILexicalBlock(scope: !3517, file: !375, line: 700, column: 8)
!3682 = !DILocation(line: 704, column: 24, scope: !3678)
!3683 = !DILocation(line: 706, column: 4, scope: !3680)
!3684 = !DILocation(line: 0, scope: !3512)
!3685 = !DILocation(line: 0, scope: !3498)
!3686 = !DILocation(line: 720, column: 6, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 720, column: 6)
!3688 = !DILocation(line: 720, column: 17, scope: !3687)
!3689 = !DILocation(line: 720, column: 31, scope: !3687)
!3690 = !DILocation(line: 720, column: 6, scope: !3448)
!3691 = !DILocation(line: 729, column: 6, scope: !3448)
!3692 = !DILocation(line: 730, column: 21, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !375, line: 729, column: 20)
!3694 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 729, column: 6)
!3695 = !DILocation(line: 730, column: 27, scope: !3693)
!3696 = !DILocation(line: 730, column: 3, scope: !3693)
!3697 = !DILocation(line: 737, column: 22, scope: !3448)
!3698 = !DILocation(line: 737, column: 20, scope: !3448)
!3699 = !DILocation(line: 0, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 739, column: 6)
!3701 = !DILocation(line: 745, column: 17, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3700, file: !375, line: 743, column: 9)
!3703 = !DILocation(line: 745, column: 25, scope: !3702)
!3704 = !DILocation(line: 746, column: 17, scope: !3702)
!3705 = !DILocation(line: 746, column: 28, scope: !3702)
!3706 = !DILocation(line: 749, column: 29, scope: !3448)
!3707 = !DILocation(line: 749, column: 16, scope: !3448)
!3708 = !DILocation(line: 749, column: 27, scope: !3448)
!3709 = !DILocation(line: 756, column: 6, scope: !3524)
!3710 = !DILocation(line: 756, column: 6, scope: !3448)
!3711 = !DILocation(line: 757, column: 3, scope: !3522)
!3712 = !DILocation(line: 758, column: 10, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3520, file: !375, line: 758, column: 8)
!3714 = !DILocation(line: 758, column: 25, scope: !3713)
!3715 = !DILocation(line: 758, column: 8, scope: !3520)
!3716 = !DILocation(line: 0, scope: !3520)
!3717 = !DILocation(line: 765, column: 8, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3520, file: !375, line: 765, column: 8)
!3719 = !DILocation(line: 765, column: 19, scope: !3718)
!3720 = !DILocation(line: 765, column: 23, scope: !3718)
!3721 = !DILocation(line: 765, column: 8, scope: !3520)
!3722 = !DILocation(line: 762, column: 33, scope: !3520)
!3723 = !DILocation(line: 769, column: 8, scope: !3520)
!3724 = !DILocation(line: 769, column: 11, scope: !3520)
!3725 = !DILocation(line: 757, column: 27, scope: !3521)
!3726 = !DILocation(line: 757, column: 17, scope: !3521)
!3727 = distinct !{!3727, !3711, !3728}
!3728 = !DILocation(line: 770, column: 3, scope: !3522)
!3729 = !DILocation(line: 774, column: 16, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !375, line: 774, column: 2)
!3731 = distinct !DILexicalBlock(scope: !3448, file: !375, line: 774, column: 2)
!3732 = !DILocation(line: 774, column: 2, scope: !3731)
!3733 = !DILocation(line: 776, column: 16, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !375, line: 776, column: 7)
!3735 = distinct !DILexicalBlock(scope: !3730, file: !375, line: 774, column: 30)
!3736 = !DILocation(line: 776, column: 19, scope: !3734)
!3737 = !DILocation(line: 776, column: 34, scope: !3734)
!3738 = !DILocation(line: 776, column: 7, scope: !3735)
!3739 = !DILocation(line: 780, column: 7, scope: !3735)
!3740 = !DILocation(line: 782, column: 13, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !375, line: 780, column: 19)
!3742 = distinct !DILexicalBlock(scope: !3735, file: !375, line: 780, column: 7)
!3743 = !DILocation(line: 782, column: 8, scope: !3741)
!3744 = !DILocation(line: 782, column: 11, scope: !3741)
!3745 = !DILocation(line: 783, column: 3, scope: !3741)
!3746 = !DILocation(line: 785, column: 26, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3742, file: !375, line: 783, column: 10)
!3748 = !DILocation(line: 785, column: 41, scope: !3747)
!3749 = !DILocation(line: 785, column: 24, scope: !3747)
!3750 = !DILocation(line: 785, column: 8, scope: !3747)
!3751 = !DILocation(line: 787, column: 52, scope: !3747)
!3752 = !DILocation(line: 789, column: 11, scope: !3747)
!3753 = !DILocation(line: 789, column: 21, scope: !3747)
!3754 = !DILocation(line: 0, scope: !3742)
!3755 = !DILocation(line: 793, column: 7, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3735, file: !375, line: 793, column: 7)
!3757 = !DILocation(line: 793, column: 18, scope: !3756)
!3758 = !DILocation(line: 793, column: 22, scope: !3756)
!3759 = !DILocation(line: 793, column: 29, scope: !3756)
!3760 = !DILocation(line: 793, column: 7, scope: !3735)
!3761 = !DILocation(line: 797, column: 12, scope: !3735)
!3762 = !DILocation(line: 797, column: 7, scope: !3735)
!3763 = !DILocation(line: 797, column: 10, scope: !3735)
!3764 = !DILocation(line: 799, column: 3, scope: !3735)
!3765 = !DILocation(line: 800, column: 7, scope: !3735)
!3766 = !DILocation(line: 801, column: 2, scope: !3735)
!3767 = !DILocation(line: 338, column: 4, scope: !3448)
!3768 = !DILocation(line: 774, column: 26, scope: !3730)
!3769 = distinct !{!3769, !3732, !3770}
!3770 = !DILocation(line: 801, column: 2, scope: !3731)
!3771 = !DILocation(line: 808, column: 9, scope: !3448)
!3772 = !DILocation(line: 808, column: 2, scope: !3448)
!3773 = !DILocation(line: 813, column: 1, scope: !3448)
!3774 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !375, file: !375, line: 33, type: !3775, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3777)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!131, !331}
!3777 = !{!3778}
!3778 = !DILocalVariable(name: "addr", arg: 1, scope: !3774, file: !375, line: 33, type: !331)
!3779 = !DILocation(line: 0, scope: !3774)
!3780 = !DILocation(line: 41, column: 9, scope: !3774)
!3781 = !DILocation(line: 41, column: 2, scope: !3774)
!3782 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3783, file: !3783, line: 24, type: !3784, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3786)
!3783 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!131, !13}
!3786 = !{!3787}
!3787 = !DILocalVariable(name: "addr", arg: 1, scope: !3782, file: !3783, line: 24, type: !13)
!3788 = !DILocation(line: 0, scope: !3782)
!3789 = !DILocation(line: 49, column: 30, scope: !3782)
!3790 = !DILocation(line: 49, column: 57, scope: !3782)
!3791 = !DILocation(line: 49, column: 2, scope: !3782)
!3792 = distinct !DISubprogram(name: "cbprintf_package", scope: !375, file: !375, line: 815, type: !3793, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!103, !102, !132, !108, !331, null}
!3795 = !{!3796, !3797, !3798, !3799, !3800, !3801}
!3796 = !DILocalVariable(name: "packaged", arg: 1, scope: !3792, file: !375, line: 815, type: !102)
!3797 = !DILocalVariable(name: "len", arg: 2, scope: !3792, file: !375, line: 815, type: !132)
!3798 = !DILocalVariable(name: "flags", arg: 3, scope: !3792, file: !375, line: 815, type: !108)
!3799 = !DILocalVariable(name: "format", arg: 4, scope: !3792, file: !375, line: 816, type: !331)
!3800 = !DILocalVariable(name: "ap", scope: !3792, file: !375, line: 818, type: !3451)
!3801 = !DILocalVariable(name: "ret", scope: !3792, file: !375, line: 819, type: !103)
!3802 = !DILocation(line: 0, scope: !3792)
!3803 = !DILocation(line: 818, column: 2, scope: !3792)
!3804 = !DILocation(line: 818, column: 10, scope: !3792)
!3805 = !DILocation(line: 821, column: 2, scope: !3792)
!3806 = !DILocation(line: 822, column: 8, scope: !3792)
!3807 = !DILocation(line: 823, column: 2, scope: !3792)
!3808 = !DILocation(line: 825, column: 1, scope: !3792)
!3809 = !DILocation(line: 824, column: 2, scope: !3792)
!3810 = distinct !DISubprogram(name: "cbpprintf_external", scope: !375, file: !375, line: 827, type: !3811, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3821)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!103, !3813, !3817, !102, !102}
!3813 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3484, line: 297, baseType: !3814)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 32)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!103, null}
!3817 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3484, line: 328, baseType: !3818)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 32)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!103, !3813, !102, !331, !3451}
!3821 = !{!3822, !3823, !3824, !3825, !3826, !3827, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840}
!3822 = !DILocalVariable(name: "out", arg: 1, scope: !3810, file: !375, line: 827, type: !3813)
!3823 = !DILocalVariable(name: "formatter", arg: 2, scope: !3810, file: !375, line: 828, type: !3817)
!3824 = !DILocalVariable(name: "ctx", arg: 3, scope: !3810, file: !375, line: 829, type: !102)
!3825 = !DILocalVariable(name: "packaged", arg: 4, scope: !3810, file: !375, line: 829, type: !102)
!3826 = !DILocalVariable(name: "buf", scope: !3810, file: !375, line: 831, type: !373)
!3827 = !DILocalVariable(name: "hdr", scope: !3810, file: !375, line: 832, type: !3828)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 32)
!3829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3484, line: 96, size: 64, elements: !3830)
!3830 = !{!3831, !3832}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3829, file: !3484, line: 98, baseType: !3483, size: 32)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3829, file: !3484, line: 101, baseType: !271, size: 32, offset: 32)
!3833 = !DILocalVariable(name: "s", scope: !3810, file: !375, line: 833, type: !271)
!3834 = !DILocalVariable(name: "ps", scope: !3810, file: !375, line: 833, type: !372)
!3835 = !DILocalVariable(name: "i", scope: !3810, file: !375, line: 834, type: !32)
!3836 = !DILocalVariable(name: "args_size", scope: !3810, file: !375, line: 834, type: !32)
!3837 = !DILocalVariable(name: "s_nbr", scope: !3810, file: !375, line: 834, type: !32)
!3838 = !DILocalVariable(name: "ros_nbr", scope: !3810, file: !375, line: 834, type: !32)
!3839 = !DILocalVariable(name: "rws_nbr", scope: !3810, file: !375, line: 834, type: !32)
!3840 = !DILocalVariable(name: "s_idx", scope: !3810, file: !375, line: 834, type: !32)
!3841 = !DILocation(line: 0, scope: !3810)
!3842 = !DILocation(line: 836, column: 10, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3810, file: !375, line: 836, column: 6)
!3844 = !DILocation(line: 836, column: 6, scope: !3810)
!3845 = !DILocation(line: 842, column: 28, scope: !3810)
!3846 = !DILocation(line: 842, column: 14, scope: !3810)
!3847 = !DILocation(line: 852, column: 16, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !375, line: 852, column: 2)
!3849 = distinct !DILexicalBlock(scope: !3810, file: !375, line: 852, column: 2)
!3850 = !DILocation(line: 852, column: 2, scope: !3849)
!3851 = !DILocation(line: 841, column: 28, scope: !3810)
!3852 = !DILocation(line: 841, column: 14, scope: !3810)
!3853 = !DILocation(line: 841, column: 32, scope: !3810)
!3854 = !DILocation(line: 847, column: 19, scope: !3810)
!3855 = !DILocation(line: 843, column: 28, scope: !3810)
!3856 = !DILocation(line: 843, column: 14, scope: !3810)
!3857 = !DILocation(line: 847, column: 31, scope: !3810)
!3858 = !DILocation(line: 844, column: 28, scope: !3810)
!3859 = !DILocation(line: 844, column: 14, scope: !3810)
!3860 = !DILocation(line: 847, column: 45, scope: !3810)
!3861 = !DILocation(line: 847, column: 41, scope: !3810)
!3862 = !DILocation(line: 854, column: 24, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3848, file: !375, line: 852, column: 30)
!3864 = !DILocation(line: 854, column: 11, scope: !3863)
!3865 = !DILocation(line: 855, column: 30, scope: !3863)
!3866 = !DILocation(line: 855, column: 22, scope: !3863)
!3867 = !DILocation(line: 855, column: 8, scope: !3863)
!3868 = !DILocation(line: 857, column: 7, scope: !3863)
!3869 = !DILocation(line: 859, column: 8, scope: !3863)
!3870 = !DILocation(line: 859, column: 18, scope: !3863)
!3871 = !DILocation(line: 859, column: 5, scope: !3863)
!3872 = !DILocation(line: 852, column: 26, scope: !3848)
!3873 = distinct !{!3873, !3850, !3874}
!3874 = !DILocation(line: 860, column: 2, scope: !3849)
!3875 = !DILocation(line: 863, column: 6, scope: !3810)
!3876 = !DILocation(line: 866, column: 56, scope: !3810)
!3877 = !DILocation(line: 866, column: 9, scope: !3810)
!3878 = !DILocation(line: 866, column: 2, scope: !3810)
!3879 = !DILocation(line: 867, column: 1, scope: !3810)
!3880 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !375, file: !375, line: 179, type: !3881, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!103, !3813, !3817, !102, !331, !102}
!3883 = !{!3884, !3885, !3886, !3887, !3888, !3889}
!3884 = !DILocalVariable(name: "out", arg: 1, scope: !3880, file: !375, line: 179, type: !3813)
!3885 = !DILocalVariable(name: "formatter", arg: 2, scope: !3880, file: !375, line: 180, type: !3817)
!3886 = !DILocalVariable(name: "ctx", arg: 3, scope: !3880, file: !375, line: 181, type: !102)
!3887 = !DILocalVariable(name: "fmt", arg: 4, scope: !3880, file: !375, line: 182, type: !331)
!3888 = !DILocalVariable(name: "buf", arg: 5, scope: !3880, file: !375, line: 182, type: !102)
!3889 = !DILocalVariable(name: "u", scope: !3880, file: !375, line: 187, type: !3890)
!3890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3880, file: !375, line: 184, size: 32, elements: !3891)
!3891 = !{!3892, !3893}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3890, file: !375, line: 185, baseType: !3451, size: 32)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3890, file: !375, line: 186, baseType: !102, size: 32)
!3894 = !DILocation(line: 0, scope: !3880)
!3895 = !DILocation(line: 191, column: 9, scope: !3880)
!3896 = !DILocation(line: 191, column: 2, scope: !3880)
!3897 = distinct !DISubprogram(name: "is_ptr", scope: !375, file: !375, line: 881, type: !3898, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!131, !331, !103}
!3900 = !{!3901, !3902, !3903, !3904, !3905}
!3901 = !DILocalVariable(name: "fmt", arg: 1, scope: !3897, file: !375, line: 881, type: !331)
!3902 = !DILocalVariable(name: "n", arg: 2, scope: !3897, file: !375, line: 881, type: !103)
!3903 = !DILocalVariable(name: "c", scope: !3897, file: !375, line: 883, type: !272)
!3904 = !DILocalVariable(name: "mod", scope: !3897, file: !375, line: 884, type: !131)
!3905 = !DILocalVariable(name: "cnt", scope: !3897, file: !375, line: 885, type: !103)
!3906 = !DILocation(line: 0, scope: !3897)
!3907 = !DILocation(line: 887, column: 14, scope: !3897)
!3908 = !DILocation(line: 887, column: 22, scope: !3897)
!3909 = !DILocation(line: 887, column: 2, scope: !3897)
!3910 = !DILocation(line: 887, column: 18, scope: !3897)
!3911 = !DILocation(line: 888, column: 7, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3897, file: !375, line: 887, column: 31)
!3913 = !DILocation(line: 889, column: 12, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !375, line: 889, column: 8)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !375, line: 888, column: 12)
!3916 = distinct !DILexicalBlock(scope: !3912, file: !375, line: 888, column: 7)
!3917 = !DILocation(line: 889, column: 8, scope: !3915)
!3918 = !DILocation(line: 890, column: 11, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !375, line: 890, column: 9)
!3920 = distinct !DILexicalBlock(scope: !3914, file: !375, line: 889, column: 18)
!3921 = !DILocation(line: 890, column: 9, scope: !3920)
!3922 = !DILocation(line: 892, column: 16, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3919, file: !375, line: 892, column: 16)
!3924 = !DILocation(line: 892, column: 16, scope: !3919)
!3925 = !DILocation(line: 895, column: 15, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3914, file: !375, line: 895, column: 15)
!3927 = !DILocation(line: 895, column: 15, scope: !3914)
!3928 = !DILocation(line: 900, column: 9, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3912, file: !375, line: 900, column: 7)
!3930 = !DILocation(line: 900, column: 7, scope: !3912)
!3931 = distinct !{!3931, !3909, !3932}
!3932 = !DILocation(line: 903, column: 2, scope: !3897)
!3933 = !DILocation(line: 906, column: 1, scope: !3897)
!3934 = distinct !DISubprogram(name: "is_fmt_spec", scope: !375, file: !375, line: 873, type: !3935, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!131, !272}
!3937 = !{!3938}
!3938 = !DILocalVariable(name: "c", arg: 1, scope: !3934, file: !375, line: 873, type: !272)
!3939 = !DILocation(line: 0, scope: !3934)
!3940 = !DILocation(line: 875, column: 19, scope: !3934)
!3941 = !DILocation(line: 875, column: 2, scope: !3934)
!3942 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !375, file: !375, line: 908, type: !3943, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !3949)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!103, !102, !132, !3945, !102, !108, !2446, !132}
!3945 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3484, line: 308, baseType: !3946)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 32)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!103, !13, !132, !102}
!3949 = !{!3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3967, !3968, !3969, !3970, !3971, !3977, !3980, !3981, !3982, !3984, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !4000, !4003, !4004, !4005, !4006, !4007, !4008, !4010, !4013, !4014, !4015}
!3950 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3942, file: !375, line: 908, type: !102)
!3951 = !DILocalVariable(name: "in_len", arg: 2, scope: !3942, file: !375, line: 909, type: !132)
!3952 = !DILocalVariable(name: "cb", arg: 3, scope: !3942, file: !375, line: 910, type: !3945)
!3953 = !DILocalVariable(name: "ctx", arg: 4, scope: !3942, file: !375, line: 911, type: !102)
!3954 = !DILocalVariable(name: "flags", arg: 5, scope: !3942, file: !375, line: 912, type: !108)
!3955 = !DILocalVariable(name: "strl", arg: 6, scope: !3942, file: !375, line: 913, type: !2446)
!3956 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3942, file: !375, line: 914, type: !132)
!3957 = !DILocalVariable(name: "buf", scope: !3942, file: !375, line: 918, type: !373)
!3958 = !DILocalVariable(name: "buf32", scope: !3942, file: !375, line: 919, type: !1378)
!3959 = !DILocalVariable(name: "args_size", scope: !3942, file: !375, line: 920, type: !32)
!3960 = !DILocalVariable(name: "ros_nbr", scope: !3942, file: !375, line: 920, type: !32)
!3961 = !DILocalVariable(name: "rws_nbr", scope: !3942, file: !375, line: 920, type: !32)
!3962 = !DILocalVariable(name: "fmt_present", scope: !3942, file: !375, line: 921, type: !131)
!3963 = !DILocalVariable(name: "rw_cpy", scope: !3942, file: !375, line: 922, type: !131)
!3964 = !DILocalVariable(name: "ro_cpy", scope: !3942, file: !375, line: 923, type: !131)
!3965 = !DILocalVariable(name: "in_desc", scope: !3942, file: !375, line: 924, type: !3966)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 32)
!3967 = !DILocalVariable(name: "out_len", scope: !3942, file: !375, line: 960, type: !103)
!3968 = !DILocalVariable(name: "fmt", scope: !3942, file: !375, line: 965, type: !331)
!3969 = !DILocalVariable(name: "str_pos", scope: !3942, file: !375, line: 966, type: !373)
!3970 = !DILocalVariable(name: "strl_cnt", scope: !3942, file: !375, line: 967, type: !132)
!3971 = !DILocalVariable(name: "i", scope: !3972, file: !375, line: 973, type: !103)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !375, line: 973, column: 4)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !375, line: 972, column: 15)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !375, line: 972, column: 7)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !375, line: 970, column: 18)
!3976 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 970, column: 6)
!3977 = !DILocalVariable(name: "str", scope: !3978, file: !375, line: 974, type: !331)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !375, line: 973, column: 38)
!3979 = distinct !DILexicalBlock(scope: !3972, file: !375, line: 973, column: 4)
!3980 = !DILocalVariable(name: "len", scope: !3978, file: !375, line: 975, type: !103)
!3981 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3975, file: !375, line: 990, type: !131)
!3982 = !DILocalVariable(name: "i", scope: !3983, file: !375, line: 995, type: !103)
!3983 = distinct !DILexicalBlock(scope: !3975, file: !375, line: 995, column: 3)
!3984 = !DILocalVariable(name: "arg_idx", scope: !3985, file: !375, line: 996, type: !185)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !375, line: 995, column: 37)
!3986 = distinct !DILexicalBlock(scope: !3983, file: !375, line: 995, column: 3)
!3987 = !DILocalVariable(name: "arg_pos", scope: !3985, file: !375, line: 997, type: !185)
!3988 = !DILocalVariable(name: "str", scope: !3985, file: !375, line: 998, type: !331)
!3989 = !DILocalVariable(name: "is_ro", scope: !3985, file: !375, line: 999, type: !131)
!3990 = !DILocalVariable(name: "len", scope: !3985, file: !375, line: 1000, type: !103)
!3991 = !DILocalVariable(name: "out_desc", scope: !3942, file: !375, line: 1038, type: !3487)
!3992 = !DILocalVariable(name: "cpy_str_pos", scope: !3942, file: !375, line: 1040, type: !3469)
!3993 = !DILocalVariable(name: "keep_str_pos", scope: !3942, file: !375, line: 1042, type: !3469)
!3994 = !DILocalVariable(name: "scpy_cnt", scope: !3942, file: !375, line: 1043, type: !185)
!3995 = !DILocalVariable(name: "keep_cnt", scope: !3942, file: !375, line: 1044, type: !185)
!3996 = !DILocalVariable(name: "dst", scope: !3942, file: !375, line: 1045, type: !373)
!3997 = !DILocalVariable(name: "rv", scope: !3942, file: !375, line: 1046, type: !103)
!3998 = !DILocalVariable(name: "i", scope: !3999, file: !375, line: 1074, type: !103)
!3999 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 1074, column: 2)
!4000 = !DILocalVariable(name: "arg_idx", scope: !4001, file: !375, line: 1075, type: !185)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !375, line: 1074, column: 36)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !375, line: 1074, column: 2)
!4003 = !DILocalVariable(name: "arg_pos", scope: !4001, file: !375, line: 1076, type: !185)
!4004 = !DILocalVariable(name: "str", scope: !4001, file: !375, line: 1077, type: !331)
!4005 = !DILocalVariable(name: "is_ro", scope: !4001, file: !375, line: 1078, type: !131)
!4006 = !DILocalVariable(name: "in_desc_backup", scope: !3942, file: !375, line: 1114, type: !3487)
!4007 = !DILocalVariable(name: "strs_len", scope: !3942, file: !375, line: 1134, type: !132)
!4008 = !DILocalVariable(name: "i", scope: !4009, file: !375, line: 1143, type: !103)
!4009 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 1143, column: 2)
!4010 = !DILocalVariable(name: "loc", scope: !4011, file: !375, line: 1144, type: !185)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !375, line: 1143, column: 37)
!4012 = distinct !DILexicalBlock(scope: !4009, file: !375, line: 1143, column: 2)
!4013 = !DILocalVariable(name: "str", scope: !4011, file: !375, line: 1145, type: !331)
!4014 = !DILocalVariable(name: "str_len", scope: !4011, file: !375, line: 1146, type: !121)
!4015 = !DILabel(scope: !4016, name: "calculate_string_length", file: !375, line: 1021)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !375, line: 1020, column: 56)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !375, line: 1020, column: 15)
!4018 = distinct !DILexicalBlock(scope: !3985, file: !375, line: 1014, column: 8)
!4019 = !DILocation(line: 0, scope: !3942)
!4020 = !DILocation(line: 919, column: 20, scope: !3942)
!4021 = !DILocation(line: 921, column: 27, scope: !3942)
!4022 = !DILocation(line: 921, column: 21, scope: !3942)
!4023 = !DILocation(line: 926, column: 18, scope: !3942)
!4024 = !DILocation(line: 926, column: 11, scope: !3942)
!4025 = !DILocation(line: 926, column: 34, scope: !3942)
!4026 = !DILocation(line: 931, column: 21, scope: !3942)
!4027 = !DILocation(line: 931, column: 12, scope: !3942)
!4028 = !DILocation(line: 932, column: 11, scope: !3942)
!4029 = !DILocation(line: 932, column: 19, scope: !3942)
!4030 = !DILocation(line: 938, column: 21, scope: !3942)
!4031 = !DILocation(line: 938, column: 12, scope: !3942)
!4032 = !DILocation(line: 939, column: 19, scope: !3942)
!4033 = !DILocation(line: 939, column: 23, scope: !3942)
!4034 = !DILocation(line: 946, column: 14, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 946, column: 6)
!4036 = !DILocation(line: 947, column: 7, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !375, line: 947, column: 7)
!4038 = distinct !DILexicalBlock(scope: !4035, file: !375, line: 946, column: 26)
!4039 = !DILocation(line: 947, column: 7, scope: !4038)
!4040 = !DILocation(line: 948, column: 4, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4037, file: !375, line: 947, column: 11)
!4042 = !DILocation(line: 949, column: 3, scope: !4041)
!4043 = !DILocation(line: 958, column: 23, scope: !3942)
!4044 = !DILocation(line: 958, column: 14, scope: !3942)
!4045 = !DILocation(line: 958, column: 27, scope: !3942)
!4046 = !DILocation(line: 965, column: 41, scope: !3942)
!4047 = !DILocation(line: 965, column: 20, scope: !3942)
!4048 = !DILocation(line: 966, column: 22, scope: !3942)
!4049 = !DILocation(line: 970, column: 9, scope: !3976)
!4050 = !DILocation(line: 970, column: 6, scope: !3942)
!4051 = !DILocation(line: 972, column: 7, scope: !3975)
!4052 = !DILocation(line: 0, scope: !3972)
!4053 = !DILocation(line: 973, column: 4, scope: !3972)
!4054 = !DILocation(line: 974, column: 46, scope: !3978)
!4055 = !DILocation(line: 974, column: 40, scope: !3978)
!4056 = !DILocation(line: 974, column: 23, scope: !3978)
!4057 = !DILocation(line: 0, scope: !3978)
!4058 = !DILocation(line: 975, column: 15, scope: !3978)
!4059 = !DILocation(line: 978, column: 14, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !3978, file: !375, line: 978, column: 9)
!4061 = !DILocation(line: 979, column: 25, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4060, file: !375, line: 978, column: 38)
!4063 = !DILocation(line: 979, column: 19, scope: !4062)
!4064 = !DILocation(line: 979, column: 6, scope: !4062)
!4065 = !DILocation(line: 979, column: 23, scope: !4062)
!4066 = !DILocation(line: 980, column: 5, scope: !4062)
!4067 = !DILocation(line: 981, column: 13, scope: !3978)
!4068 = !DILocation(line: 982, column: 12, scope: !3978)
!4069 = !DILocation(line: 973, column: 34, scope: !3979)
!4070 = !DILocation(line: 973, column: 22, scope: !3979)
!4071 = distinct !{!4071, !4053, !4072}
!4072 = !DILocation(line: 983, column: 4, scope: !3972)
!4073 = !DILocation(line: 985, column: 16, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !375, line: 985, column: 8)
!4075 = distinct !DILexicalBlock(scope: !3974, file: !375, line: 984, column: 10)
!4076 = !DILocation(line: 967, column: 9, scope: !3942)
!4077 = !DILocation(line: 971, column: 11, scope: !3975)
!4078 = !DILocation(line: 0, scope: !3975)
!4079 = !DILocation(line: 0, scope: !3983)
!4080 = !DILocation(line: 995, column: 21, scope: !3986)
!4081 = !DILocation(line: 995, column: 3, scope: !3983)
!4082 = !DILocation(line: 990, column: 34, scope: !3975)
!4083 = !DILocation(line: 990, column: 26, scope: !3975)
!4084 = !DILocation(line: 996, column: 30, scope: !3985)
!4085 = !DILocation(line: 0, scope: !3985)
!4086 = !DILocation(line: 997, column: 30, scope: !3985)
!4087 = !DILocation(line: 997, column: 22, scope: !3985)
!4088 = !DILocation(line: 998, column: 39, scope: !3985)
!4089 = !DILocation(line: 998, column: 22, scope: !3985)
!4090 = !DILocation(line: 999, column: 17, scope: !3985)
!4091 = !DILocation(line: 1002, column: 20, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !3985, file: !375, line: 1002, column: 8)
!4093 = !DILocation(line: 996, column: 22, scope: !3985)
!4094 = !DILocation(line: 1002, column: 35, scope: !4092)
!4095 = !DILocation(line: 1002, column: 23, scope: !4092)
!4096 = !DILocation(line: 1002, column: 8, scope: !3985)
!4097 = !DILocation(line: 1003, column: 5, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !375, line: 1003, column: 5)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !375, line: 1003, column: 5)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !375, line: 1003, column: 5)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !375, line: 1003, column: 5)
!4102 = distinct !DILexicalBlock(scope: !4092, file: !375, line: 1002, column: 45)
!4103 = !DILocation(line: 1010, column: 13, scope: !4102)
!4104 = !DILocation(line: 1011, column: 5, scope: !4102)
!4105 = !DILocation(line: 1014, column: 8, scope: !3985)
!4106 = !DILocation(line: 1015, column: 9, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4018, file: !375, line: 1014, column: 15)
!4108 = !DILocation(line: 1018, column: 14, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !375, line: 1017, column: 12)
!4110 = distinct !DILexicalBlock(scope: !4107, file: !375, line: 1015, column: 9)
!4111 = !DILocation(line: 1020, column: 4, scope: !4107)
!4112 = !DILocation(line: 1020, column: 15, scope: !4018)
!4113 = !DILocation(line: 1021, column: 1, scope: !4016)
!4114 = !DILocation(line: 1022, column: 11, scope: !4016)
!4115 = !DILocation(line: 1025, column: 14, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4016, file: !375, line: 1025, column: 9)
!4117 = !DILocation(line: 1026, column: 25, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4116, file: !375, line: 1025, column: 38)
!4119 = !DILocation(line: 1026, column: 19, scope: !4118)
!4120 = !DILocation(line: 1026, column: 6, scope: !4118)
!4121 = !DILocation(line: 1026, column: 23, scope: !4118)
!4122 = !DILocation(line: 1027, column: 5, scope: !4118)
!4123 = !DILocation(line: 1031, column: 21, scope: !4016)
!4124 = !DILocation(line: 1031, column: 13, scope: !4016)
!4125 = !DILocation(line: 1032, column: 4, scope: !4016)
!4126 = !DILocation(line: 995, column: 33, scope: !3986)
!4127 = distinct !{!4127, !4081, !4128}
!4128 = !DILocation(line: 1033, column: 3, scope: !3983)
!4129 = !DILocation(line: 1040, column: 10, scope: !3942)
!4130 = !DILocation(line: 1042, column: 10, scope: !3942)
!4131 = !DILocation(line: 1052, column: 6, scope: !3942)
!4132 = !DILocation(line: 1055, column: 9, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !375, line: 1052, column: 14)
!4134 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 1052, column: 6)
!4135 = !DILocation(line: 1056, column: 2, scope: !4133)
!4136 = !DILocation(line: 1056, column: 21, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4134, file: !375, line: 1056, column: 13)
!4138 = !DILocation(line: 1066, column: 3, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !375, line: 1065, column: 11)
!4140 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 1065, column: 6)
!4141 = !DILocation(line: 1067, column: 2, scope: !4139)
!4142 = !DILocation(line: 1068, column: 10, scope: !3942)
!4143 = !DILocation(line: 0, scope: !3999)
!4144 = !DILocation(line: 1074, column: 20, scope: !4002)
!4145 = !DILocation(line: 1074, column: 2, scope: !3999)
!4146 = !DILocation(line: 1110, column: 24, scope: !3942)
!4147 = !DILocation(line: 1053, column: 12, scope: !4133)
!4148 = !DILocation(line: 1054, column: 12, scope: !4133)
!4149 = !DILocation(line: 1108, column: 30, scope: !3942)
!4150 = !DILocation(line: 1108, column: 40, scope: !3942)
!4151 = !DILocation(line: 1108, column: 38, scope: !3942)
!4152 = !DILocation(line: 1109, column: 31, scope: !3942)
!4153 = !DILocation(line: 1109, column: 24, scope: !3942)
!4154 = !DILocation(line: 1110, column: 31, scope: !3942)
!4155 = !DILocation(line: 1114, column: 31, scope: !3942)
!4156 = !DILocation(line: 1114, column: 48, scope: !3942)
!4157 = !DILocation(line: 1115, column: 13, scope: !3942)
!4158 = !DILocation(line: 1118, column: 7, scope: !3942)
!4159 = !DILocation(line: 1119, column: 9, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 1119, column: 6)
!4161 = !DILocation(line: 1119, column: 6, scope: !3942)
!4162 = !DILocation(line: 1075, column: 29, scope: !4001)
!4163 = !DILocation(line: 1075, column: 21, scope: !4001)
!4164 = !DILocation(line: 0, scope: !4001)
!4165 = !DILocation(line: 1076, column: 29, scope: !4001)
!4166 = !DILocation(line: 1076, column: 21, scope: !4001)
!4167 = !DILocation(line: 1077, column: 38, scope: !4001)
!4168 = !DILocation(line: 1077, column: 21, scope: !4001)
!4169 = !DILocation(line: 1078, column: 16, scope: !4001)
!4170 = !DILocation(line: 1080, column: 19, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4001, file: !375, line: 1080, column: 7)
!4172 = !DILocation(line: 1080, column: 34, scope: !4171)
!4173 = !DILocation(line: 1080, column: 22, scope: !4171)
!4174 = !DILocation(line: 1080, column: 7, scope: !4001)
!4175 = !DILocation(line: 1084, column: 7, scope: !4001)
!4176 = !DILocation(line: 1085, column: 8, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !375, line: 1084, column: 14)
!4178 = distinct !DILexicalBlock(scope: !4001, file: !375, line: 1084, column: 7)
!4179 = !DILocation(line: 1087, column: 25, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !375, line: 1085, column: 49)
!4181 = distinct !DILexicalBlock(scope: !4177, file: !375, line: 1085, column: 8)
!4182 = !DILocation(line: 1088, column: 4, scope: !4180)
!4183 = !DILocation(line: 1088, column: 15, scope: !4181)
!4184 = !DILocation(line: 1090, column: 26, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !375, line: 1088, column: 61)
!4186 = distinct !DILexicalBlock(scope: !4181, file: !375, line: 1088, column: 15)
!4187 = !DILocation(line: 1091, column: 4, scope: !4185)
!4188 = !DILocation(line: 1095, column: 8, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4178, file: !375, line: 1094, column: 10)
!4190 = !DILocation(line: 1097, column: 25, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !375, line: 1095, column: 49)
!4192 = distinct !DILexicalBlock(scope: !4189, file: !375, line: 1095, column: 8)
!4193 = !DILocation(line: 1098, column: 4, scope: !4191)
!4194 = !DILocation(line: 1100, column: 26, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4192, file: !375, line: 1098, column: 11)
!4196 = !DILocation(line: 1100, column: 5, scope: !4195)
!4197 = !DILocation(line: 1100, column: 30, scope: !4195)
!4198 = !DILocation(line: 1101, column: 26, scope: !4195)
!4199 = !DILocation(line: 0, scope: !4178)
!4200 = !DILocation(line: 1074, column: 32, scope: !4002)
!4201 = distinct !{!4201, !4145, !4202}
!4202 = !DILocation(line: 1104, column: 2, scope: !3999)
!4203 = !DILocation(line: 1124, column: 13, scope: !3942)
!4204 = !DILocation(line: 1127, column: 10, scope: !3942)
!4205 = !DILocation(line: 1127, column: 7, scope: !3942)
!4206 = !DILocation(line: 1128, column: 9, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 1128, column: 6)
!4208 = !DILocation(line: 1128, column: 6, scope: !3942)
!4209 = !DILocation(line: 1134, column: 27, scope: !3942)
!4210 = !DILocation(line: 1136, column: 7, scope: !3942)
!4211 = !DILocation(line: 1137, column: 9, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !3942, file: !375, line: 1137, column: 6)
!4213 = !DILocation(line: 1137, column: 6, scope: !3942)
!4214 = !DILocation(line: 1131, column: 10, scope: !3942)
!4215 = !DILocation(line: 1140, column: 10, scope: !3942)
!4216 = !DILocation(line: 0, scope: !4009)
!4217 = !DILocation(line: 1143, column: 20, scope: !4012)
!4218 = !DILocation(line: 1143, column: 2, scope: !4009)
!4219 = !DILocation(line: 1144, column: 3, scope: !4011)
!4220 = !DILocation(line: 1144, column: 17, scope: !4011)
!4221 = !DILocation(line: 0, scope: !4011)
!4222 = !DILocation(line: 1144, column: 11, scope: !4011)
!4223 = !DILocation(line: 1145, column: 38, scope: !4011)
!4224 = !DILocation(line: 1145, column: 21, scope: !4011)
!4225 = !DILocation(line: 1146, column: 22, scope: !4011)
!4226 = !DILocation(line: 1146, column: 29, scope: !4011)
!4227 = !DILocation(line: 1148, column: 8, scope: !4011)
!4228 = !DILocation(line: 1149, column: 10, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4011, file: !375, line: 1149, column: 7)
!4230 = !DILocation(line: 1149, column: 7, scope: !4011)
!4231 = !DILocation(line: 1154, column: 8, scope: !4011)
!4232 = !DILocation(line: 1155, column: 10, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4011, file: !375, line: 1155, column: 7)
!4234 = !DILocation(line: 1155, column: 7, scope: !4011)
!4235 = !DILocation(line: 1159, column: 2, scope: !4012)
!4236 = !DILocation(line: 1152, column: 11, scope: !4011)
!4237 = !DILocation(line: 1158, column: 11, scope: !4011)
!4238 = !DILocation(line: 1143, column: 33, scope: !4012)
!4239 = distinct !{!4239, !4218, !4240}
!4240 = !DILocation(line: 1159, column: 2, scope: !4009)
!4241 = !DILocation(line: 1162, column: 8, scope: !3942)
!4242 = !DILocation(line: 1164, column: 2, scope: !3942)
!4243 = !DILocation(line: 1165, column: 1, scope: !3942)
!4244 = distinct !DISubprogram(name: "get_package_len", scope: !375, file: !375, line: 196, type: !4245, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !4247)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!132, !102}
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253, !4254}
!4248 = !DILocalVariable(name: "packaged", arg: 1, scope: !4244, file: !375, line: 196, type: !102)
!4249 = !DILocalVariable(name: "buf", scope: !4244, file: !375, line: 200, type: !373)
!4250 = !DILocalVariable(name: "start", scope: !4244, file: !375, line: 201, type: !373)
!4251 = !DILocalVariable(name: "args_size", scope: !4244, file: !375, line: 202, type: !32)
!4252 = !DILocalVariable(name: "s_nbr", scope: !4244, file: !375, line: 202, type: !32)
!4253 = !DILocalVariable(name: "ros_nbr", scope: !4244, file: !375, line: 202, type: !32)
!4254 = !DILocalVariable(name: "i", scope: !4255, file: !375, line: 215, type: !103)
!4255 = distinct !DILexicalBlock(scope: !4244, file: !375, line: 215, column: 2)
!4256 = !DILocation(line: 0, scope: !4244)
!4257 = !DILocation(line: 204, column: 14, scope: !4244)
!4258 = !DILocation(line: 204, column: 21, scope: !4244)
!4259 = !DILocation(line: 205, column: 14, scope: !4244)
!4260 = !DILocation(line: 206, column: 14, scope: !4244)
!4261 = !DILocation(line: 209, column: 6, scope: !4244)
!4262 = !DILocation(line: 212, column: 6, scope: !4244)
!4263 = !DILocation(line: 0, scope: !4255)
!4264 = !DILocation(line: 215, column: 20, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4255, file: !375, line: 215, column: 2)
!4266 = !DILocation(line: 215, column: 2, scope: !4255)
!4267 = !DILocation(line: 220, column: 33, scope: !4244)
!4268 = !DILocation(line: 220, column: 2, scope: !4244)
!4269 = !DILocation(line: 216, column: 6, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4265, file: !375, line: 215, column: 34)
!4271 = !DILocation(line: 217, column: 10, scope: !4270)
!4272 = !DILocation(line: 217, column: 36, scope: !4270)
!4273 = !DILocation(line: 217, column: 7, scope: !4270)
!4274 = !DILocation(line: 215, column: 30, scope: !4265)
!4275 = distinct !{!4275, !4266, !4276}
!4276 = !DILocation(line: 218, column: 2, scope: !4255)
!4277 = distinct !DISubprogram(name: "append_string", scope: !375, file: !375, line: 223, type: !4278, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !4280)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!103, !3945, !102, !331, !121}
!4280 = !{!4281, !4282, !4283, !4284}
!4281 = !DILocalVariable(name: "cb", arg: 1, scope: !4277, file: !375, line: 223, type: !3945)
!4282 = !DILocalVariable(name: "ctx", arg: 2, scope: !4277, file: !375, line: 223, type: !102)
!4283 = !DILocalVariable(name: "str", arg: 3, scope: !4277, file: !375, line: 223, type: !331)
!4284 = !DILocalVariable(name: "strl", arg: 4, scope: !4277, file: !375, line: 223, type: !121)
!4285 = !DILocation(line: 0, scope: !4277)
!4286 = !DILocation(line: 225, column: 9, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4277, file: !375, line: 225, column: 6)
!4288 = !DILocation(line: 225, column: 6, scope: !4277)
!4289 = !DILocation(line: 226, column: 14, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4287, file: !375, line: 225, column: 18)
!4291 = !DILocation(line: 226, column: 12, scope: !4290)
!4292 = !DILocation(line: 226, column: 3, scope: !4290)
!4293 = !DILocation(line: 229, column: 14, scope: !4277)
!4294 = !DILocation(line: 229, column: 9, scope: !4277)
!4295 = !DILocation(line: 229, column: 27, scope: !4277)
!4296 = !DILocation(line: 229, column: 39, scope: !4277)
!4297 = !DILocation(line: 230, column: 17, scope: !4277)
!4298 = !DILocation(line: 230, column: 9, scope: !4277)
!4299 = !DILocation(line: 230, column: 2, scope: !4277)
!4300 = !DILocation(line: 231, column: 1, scope: !4277)
!4301 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !388, file: !388, line: 45, type: !390, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4302)
!4302 = !{!4303}
!4303 = !DILocalVariable(name: "c", arg: 1, scope: !4301, file: !388, line: 45, type: !103)
!4304 = !DILocation(line: 0, scope: !4301)
!4305 = !DILocation(line: 50, column: 2, scope: !4301)
!4306 = distinct !DISubprogram(name: "__printk_hook_install", scope: !388, file: !388, line: 63, type: !4307, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4309)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{null, !389}
!4309 = !{!4310}
!4310 = !DILocalVariable(name: "fn", arg: 1, scope: !4306, file: !388, line: 63, type: !389)
!4311 = !DILocation(line: 0, scope: !4306)
!4312 = !DILocation(line: 65, column: 12, scope: !4306)
!4313 = !DILocation(line: 66, column: 1, scope: !4306)
!4314 = distinct !DISubprogram(name: "__printk_get_hook", scope: !388, file: !388, line: 76, type: !4315, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !245)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!102}
!4317 = !DILocation(line: 78, column: 9, scope: !4314)
!4318 = !DILocation(line: 78, column: 2, scope: !4314)
!4319 = distinct !DISubprogram(name: "vprintk", scope: !388, file: !388, line: 113, type: !4320, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4328)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{null, !331, !4322}
!4322 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3452, line: 99, baseType: !4323)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3452, line: 40, baseType: !4324)
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !388, baseType: !4325)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4326)
!4326 = !{!4327}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4325, file: !388, line: 79, baseType: !102, size: 32)
!4328 = !{!4329, !4330, !4331}
!4329 = !DILocalVariable(name: "fmt", arg: 1, scope: !4319, file: !388, line: 113, type: !331)
!4330 = !DILocalVariable(name: "ap", arg: 2, scope: !4319, file: !388, line: 113, type: !4322)
!4331 = !DILocalVariable(name: "ctx", scope: !4332, file: !388, line: 121, type: !4334)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !388, line: 120, column: 27)
!4333 = distinct !DILexicalBlock(scope: !4319, file: !388, line: 120, column: 6)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !388, line: 81, size: 32, elements: !4335)
!4335 = !{!4336, !4337}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4334, file: !388, line: 85, baseType: !32, size: 32)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4334, file: !388, line: 86, baseType: !4338, offset: 32)
!4338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, elements: !2444)
!4339 = !DILocation(line: 0, scope: !4319)
!4340 = !DILocation(line: 148, column: 3, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4333, file: !388, line: 138, column: 9)
!4342 = !DILocation(line: 155, column: 1, scope: !4319)
!4343 = distinct !DISubprogram(name: "char_out", scope: !388, file: !388, line: 107, type: !4344, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4346)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!103, !103, !102}
!4346 = !{!4347, !4348}
!4347 = !DILocalVariable(name: "c", arg: 1, scope: !4343, file: !388, line: 107, type: !103)
!4348 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4343, file: !388, line: 107, type: !102)
!4349 = !DILocation(line: 0, scope: !4343)
!4350 = !DILocation(line: 110, column: 9, scope: !4343)
!4351 = !DILocation(line: 110, column: 2, scope: !4343)
!4352 = distinct !DISubprogram(name: "cbvprintf", scope: !3484, file: !3484, line: 739, type: !4353, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4355)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!103, !3813, !102, !331, !4322}
!4355 = !{!4356, !4357, !4358, !4359}
!4356 = !DILocalVariable(name: "out", arg: 1, scope: !4352, file: !3484, line: 739, type: !3813)
!4357 = !DILocalVariable(name: "ctx", arg: 2, scope: !4352, file: !3484, line: 739, type: !102)
!4358 = !DILocalVariable(name: "format", arg: 3, scope: !4352, file: !3484, line: 739, type: !331)
!4359 = !DILocalVariable(name: "ap", arg: 4, scope: !4352, file: !3484, line: 739, type: !4322)
!4360 = !DILocation(line: 0, scope: !4352)
!4361 = !DILocation(line: 741, column: 9, scope: !4352)
!4362 = !DILocation(line: 741, column: 2, scope: !4352)
!4363 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !388, file: !388, line: 157, type: !4364, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4366)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !271, !132}
!4366 = !{!4367, !4368, !4369}
!4367 = !DILocalVariable(name: "c", arg: 1, scope: !4363, file: !388, line: 157, type: !271)
!4368 = !DILocalVariable(name: "n", arg: 2, scope: !4363, file: !388, line: 157, type: !132)
!4369 = !DILocalVariable(name: "i", scope: !4363, file: !388, line: 159, type: !132)
!4370 = !DILocation(line: 0, scope: !4363)
!4371 = !DILocation(line: 164, column: 16, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !388, line: 164, column: 2)
!4373 = distinct !DILexicalBlock(scope: !4363, file: !388, line: 164, column: 2)
!4374 = !DILocation(line: 164, column: 2, scope: !4373)
!4375 = !DILocation(line: 165, column: 3, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4372, file: !388, line: 164, column: 26)
!4377 = !DILocation(line: 165, column: 13, scope: !4376)
!4378 = !DILocation(line: 164, column: 22, scope: !4372)
!4379 = distinct !{!4379, !4374, !4380}
!4380 = !DILocation(line: 166, column: 2, scope: !4373)
!4381 = !DILocation(line: 171, column: 1, scope: !4363)
!4382 = distinct !DISubprogram(name: "printk", scope: !388, file: !388, line: 203, type: !4383, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4385)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{null, !331, null}
!4385 = !{!4386, !4387}
!4386 = !DILocalVariable(name: "fmt", arg: 1, scope: !4382, file: !388, line: 203, type: !331)
!4387 = !DILocalVariable(name: "ap", scope: !4382, file: !388, line: 205, type: !4322)
!4388 = !DILocation(line: 0, scope: !4382)
!4389 = !DILocation(line: 205, column: 2, scope: !4382)
!4390 = !DILocation(line: 205, column: 10, scope: !4382)
!4391 = !DILocation(line: 207, column: 2, scope: !4382)
!4392 = !DILocation(line: 209, column: 2, scope: !4382)
!4393 = !DILocation(line: 211, column: 2, scope: !4382)
!4394 = !DILocation(line: 212, column: 1, scope: !4382)
!4395 = distinct !DISubprogram(name: "snprintk", scope: !388, file: !388, line: 239, type: !4396, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4398)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!103, !271, !132, !331, null}
!4398 = !{!4399, !4400, !4401, !4402, !4403}
!4399 = !DILocalVariable(name: "str", arg: 1, scope: !4395, file: !388, line: 239, type: !271)
!4400 = !DILocalVariable(name: "size", arg: 2, scope: !4395, file: !388, line: 239, type: !132)
!4401 = !DILocalVariable(name: "fmt", arg: 3, scope: !4395, file: !388, line: 239, type: !331)
!4402 = !DILocalVariable(name: "ap", scope: !4395, file: !388, line: 241, type: !4322)
!4403 = !DILocalVariable(name: "ret", scope: !4395, file: !388, line: 242, type: !103)
!4404 = !DILocation(line: 0, scope: !4395)
!4405 = !DILocation(line: 241, column: 2, scope: !4395)
!4406 = !DILocation(line: 241, column: 10, scope: !4395)
!4407 = !DILocation(line: 244, column: 2, scope: !4395)
!4408 = !DILocation(line: 245, column: 8, scope: !4395)
!4409 = !DILocation(line: 246, column: 2, scope: !4395)
!4410 = !DILocation(line: 249, column: 1, scope: !4395)
!4411 = !DILocation(line: 248, column: 2, scope: !4395)
!4412 = distinct !DISubprogram(name: "vsnprintk", scope: !388, file: !388, line: 251, type: !4413, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4415)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!103, !271, !132, !331, !4322}
!4415 = !{!4416, !4417, !4418, !4419, !4420}
!4416 = !DILocalVariable(name: "str", arg: 1, scope: !4412, file: !388, line: 251, type: !271)
!4417 = !DILocalVariable(name: "size", arg: 2, scope: !4412, file: !388, line: 251, type: !132)
!4418 = !DILocalVariable(name: "fmt", arg: 3, scope: !4412, file: !388, line: 251, type: !331)
!4419 = !DILocalVariable(name: "ap", arg: 4, scope: !4412, file: !388, line: 251, type: !4322)
!4420 = !DILocalVariable(name: "ctx", scope: !4412, file: !388, line: 253, type: !4421)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !388, line: 217, size: 96, elements: !4422)
!4422 = !{!4423, !4424, !4425}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4421, file: !388, line: 218, baseType: !271, size: 32)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4421, file: !388, line: 219, baseType: !103, size: 32, offset: 32)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4421, file: !388, line: 220, baseType: !103, size: 32, offset: 64)
!4426 = !DILocation(line: 0, scope: !4412)
!4427 = !DILocation(line: 253, column: 2, scope: !4412)
!4428 = !DILocation(line: 253, column: 21, scope: !4412)
!4429 = !DILocation(line: 253, column: 27, scope: !4412)
!4430 = !DILocation(line: 255, column: 2, scope: !4412)
!4431 = !DILocation(line: 257, column: 10, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4412, file: !388, line: 257, column: 6)
!4433 = !DILocation(line: 257, column: 22, scope: !4432)
!4434 = !DILocation(line: 257, column: 16, scope: !4432)
!4435 = !DILocation(line: 257, column: 6, scope: !4412)
!4436 = !DILocation(line: 258, column: 3, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4432, file: !388, line: 257, column: 27)
!4438 = !DILocation(line: 258, column: 18, scope: !4437)
!4439 = !DILocation(line: 259, column: 2, scope: !4437)
!4440 = !DILocation(line: 262, column: 1, scope: !4412)
!4441 = !DILocation(line: 261, column: 2, scope: !4412)
!4442 = distinct !DISubprogram(name: "str_out", scope: !388, file: !388, line: 223, type: !4443, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !384, retainedNodes: !4446)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{!103, !103, !4445}
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 32)
!4446 = !{!4447, !4448}
!4447 = !DILocalVariable(name: "c", arg: 1, scope: !4442, file: !388, line: 223, type: !103)
!4448 = !DILocalVariable(name: "ctx", arg: 2, scope: !4442, file: !388, line: 223, type: !4445)
!4449 = !DILocation(line: 0, scope: !4442)
!4450 = !DILocation(line: 225, column: 11, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4442, file: !388, line: 225, column: 6)
!4452 = !DILocation(line: 225, column: 15, scope: !4451)
!4453 = !DILocation(line: 0, scope: !4451)
!4454 = !DILocation(line: 225, column: 23, scope: !4451)
!4455 = !DILocation(line: 225, column: 45, scope: !4451)
!4456 = !DILocation(line: 225, column: 37, scope: !4451)
!4457 = !DILocation(line: 225, column: 6, scope: !4442)
!4458 = !DILocation(line: 226, column: 8, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4451, file: !388, line: 225, column: 50)
!4460 = !DILocation(line: 226, column: 13, scope: !4459)
!4461 = !DILocation(line: 227, column: 3, scope: !4459)
!4462 = !DILocation(line: 230, column: 29, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4442, file: !388, line: 230, column: 6)
!4464 = !DILocation(line: 230, column: 17, scope: !4463)
!4465 = !DILocation(line: 230, column: 6, scope: !4442)
!4466 = !DILocation(line: 231, column: 22, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !388, line: 230, column: 34)
!4468 = !DILocation(line: 231, column: 3, scope: !4467)
!4469 = !DILocation(line: 231, column: 26, scope: !4467)
!4470 = !DILocation(line: 232, column: 2, scope: !4467)
!4471 = !DILocation(line: 233, column: 28, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4463, file: !388, line: 232, column: 9)
!4473 = !DILocation(line: 233, column: 22, scope: !4472)
!4474 = !DILocation(line: 233, column: 3, scope: !4472)
!4475 = !DILocation(line: 233, column: 26, scope: !4472)
!4476 = !DILocation(line: 237, column: 1, scope: !4442)
!4477 = distinct !DISubprogram(name: "z_thread_entry", scope: !4478, file: !4478, line: 30, type: !4479, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !4481)
!4478 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4479 = !DISubroutineType(types: !4480)
!4480 = !{null, !315, !102, !102, !102}
!4481 = !{!4482, !4483, !4484, !4485}
!4482 = !DILocalVariable(name: "entry", arg: 1, scope: !4477, file: !4478, line: 30, type: !315)
!4483 = !DILocalVariable(name: "p1", arg: 2, scope: !4477, file: !4478, line: 31, type: !102)
!4484 = !DILocalVariable(name: "p2", arg: 3, scope: !4477, file: !4478, line: 31, type: !102)
!4485 = !DILocalVariable(name: "p3", arg: 4, scope: !4477, file: !4478, line: 31, type: !102)
!4486 = !DILocation(line: 0, scope: !4477)
!4487 = !DILocation(line: 36, column: 2, scope: !4477)
!4488 = !DILocation(line: 38, column: 17, scope: !4477)
!4489 = !DILocation(line: 38, column: 2, scope: !4477)
!4490 = !DILocation(line: 45, column: 2, scope: !4477)
!4491 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !4492, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !245)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!4494}
!4494 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !4495)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 32)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !4497)
!4497 = !{!4498, !4556, !4568, !4569, !4570, !4571, !4584}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4496, file: !163, line: 247, baseType: !4499, size: 384)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !4500)
!4500 = !{!4501, !4525, !4532, !4533, !4534, !4543, !4544, !4545}
!4501 = !DIDerivedType(tag: DW_TAG_member, scope: !4499, file: !163, line: 60, baseType: !4502, size: 64)
!4502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4499, file: !163, line: 60, size: 64, elements: !4503)
!4503 = !{!4504, !4519}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4502, file: !163, line: 61, baseType: !4505, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !4506)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !4507)
!4507 = !{!4508, !4514}
!4508 = !DIDerivedType(tag: DW_TAG_member, scope: !4506, file: !146, line: 38, baseType: !4509, size: 32)
!4509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4506, file: !146, line: 38, size: 32, elements: !4510)
!4510 = !{!4511, !4513}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4509, file: !146, line: 39, baseType: !4512, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4509, file: !146, line: 40, baseType: !4512, size: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, scope: !4506, file: !146, line: 42, baseType: !4515, size: 32, offset: 32)
!4515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4506, file: !146, line: 42, size: 32, elements: !4516)
!4516 = !{!4517, !4518}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4515, file: !146, line: 43, baseType: !4512, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4515, file: !146, line: 44, baseType: !4512, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4502, file: !163, line: 62, baseType: !4520, size: 64)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !4521)
!4521 = !{!4522}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4520, file: !175, line: 50, baseType: !4523, size: 64)
!4523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4524, size: 64, elements: !180)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4499, file: !163, line: 68, baseType: !4526, size: 32, offset: 64)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 32)
!4527 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !4528)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !4529)
!4529 = !{!4530}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4528, file: !141, line: 232, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !4506)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4499, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4499, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!4534 = !DIDerivedType(tag: DW_TAG_member, scope: !4499, file: !163, line: 90, baseType: !4535, size: 16, offset: 112)
!4535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4499, file: !163, line: 90, size: 16, elements: !4536)
!4536 = !{!4537, !4542}
!4537 = !DIDerivedType(tag: DW_TAG_member, scope: !4535, file: !163, line: 91, baseType: !4538, size: 16)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4535, file: !163, line: 91, size: 16, elements: !4539)
!4539 = !{!4540, !4541}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4538, file: !163, line: 96, baseType: !195, size: 8)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4538, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4535, file: !163, line: 100, baseType: !121, size: 16)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4499, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4499, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4499, file: !163, line: 131, baseType: !4546, size: 192, offset: 192)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !4547)
!4547 = !{!4548, !4549, !4555}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4546, file: !141, line: 245, baseType: !4505, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4546, file: !141, line: 246, baseType: !4550, size: 32, offset: 64)
!4550 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !4551)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 32)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{null, !4554}
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 32)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4546, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4496, file: !163, line: 250, baseType: !4557, size: 288, offset: 384)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !4558)
!4558 = !{!4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4557, file: !214, line: 26, baseType: !108, size: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4557, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4557, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4557, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4557, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4557, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4557, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4557, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4557, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4496, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4496, file: !163, line: 256, baseType: !4527, size: 64, offset: 704)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4496, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4496, file: !163, line: 325, baseType: !4572, size: 32, offset: 800)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 32)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !4574)
!4574 = !{!4575, !4581, !4582}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4573, file: !137, line: 5074, baseType: !4576, size: 96)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !4577)
!4577 = !{!4578, !4579, !4580}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4576, file: !234, line: 57, baseType: !237, size: 32)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4576, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4576, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4573, file: !137, line: 5075, baseType: !4527, size: 64, offset: 96)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4573, file: !137, line: 5076, baseType: !4583, offset: 160)
!4583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4496, file: !163, line: 343, baseType: !4585, size: 64, offset: 832)
!4585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !4586)
!4586 = !{!4587, !4588}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4585, file: !214, line: 63, baseType: !108, size: 32)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4585, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!4589 = !DILocation(line: 535, column: 9, scope: !4491)
!4590 = !DILocation(line: 535, column: 2, scope: !4491)
!4591 = distinct !DISubprogram(name: "k_thread_abort", scope: !3413, file: !3413, line: 188, type: !4592, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !4594)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{null, !4494}
!4594 = !{!4595}
!4595 = !DILocalVariable(name: "thread", arg: 1, scope: !4591, file: !3413, line: 188, type: !4494)
!4596 = !DILocation(line: 0, scope: !4591)
!4597 = !DILocation(line: 197, column: 2, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4591, file: !3413, line: 197, column: 2)
!4599 = !{i64 2151034866}
!4600 = !DILocation(line: 198, column: 2, scope: !4591)
!4601 = !DILocation(line: 199, column: 1, scope: !4591)
!4602 = distinct !DISubprogram(name: "z_current_get", scope: !3413, file: !3413, line: 173, type: !4492, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !245)
!4603 = !DILocation(line: 180, column: 2, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4602, file: !3413, line: 180, column: 2)
!4605 = !{i64 2151034798}
!4606 = !DILocation(line: 181, column: 9, scope: !4602)
!4607 = !DILocation(line: 181, column: 2, scope: !4602)
!4608 = distinct !DISubprogram(name: "sys_heap_free", scope: !4609, file: !4609, line: 163, type: !4610, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4618)
!4609 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !4612, !102}
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 32)
!4613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !4614)
!4614 = !{!4615, !4616, !4617}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4613, file: !234, line: 57, baseType: !2431, size: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4613, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4613, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!4618 = !{!4619, !4620, !4621, !4622}
!4619 = !DILocalVariable(name: "heap", arg: 1, scope: !4608, file: !4609, line: 163, type: !4612)
!4620 = !DILocalVariable(name: "mem", arg: 2, scope: !4608, file: !4609, line: 163, type: !102)
!4621 = !DILocalVariable(name: "h", scope: !4608, file: !4609, line: 168, type: !2431)
!4622 = !DILocalVariable(name: "c", scope: !4608, file: !4609, line: 169, type: !2436)
!4623 = !DILocation(line: 0, scope: !4608)
!4624 = !DILocation(line: 165, column: 10, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4608, file: !4609, line: 165, column: 6)
!4626 = !DILocation(line: 165, column: 6, scope: !4608)
!4627 = !DILocation(line: 168, column: 27, scope: !4608)
!4628 = !DILocation(line: 169, column: 16, scope: !4608)
!4629 = !{i32 0, i32 536870912}
!4630 = !DILocation(line: 187, column: 2, scope: !4608)
!4631 = !DILocation(line: 197, column: 2, scope: !4608)
!4632 = !DILocation(line: 198, column: 1, scope: !4608)
!4633 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4609, file: !4609, line: 157, type: !4634, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4636)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!2436, !2431, !102}
!4636 = !{!4637, !4638, !4639, !4640}
!4637 = !DILocalVariable(name: "h", arg: 1, scope: !4633, file: !4609, line: 157, type: !2431)
!4638 = !DILocalVariable(name: "p", arg: 2, scope: !4633, file: !4609, line: 157, type: !102)
!4639 = !DILocalVariable(name: "mem", scope: !4633, file: !4609, line: 159, type: !373)
!4640 = !DILocalVariable(name: "base", scope: !4633, file: !4609, line: 159, type: !373)
!4641 = !DILocation(line: 0, scope: !4633)
!4642 = !DILocation(line: 159, column: 39, scope: !4633)
!4643 = !DILocation(line: 160, column: 14, scope: !4633)
!4644 = !DILocation(line: 160, column: 38, scope: !4633)
!4645 = !DILocation(line: 160, column: 46, scope: !4633)
!4646 = !DILocation(line: 160, column: 2, scope: !4633)
!4647 = distinct !DISubprogram(name: "set_chunk_used", scope: !2418, file: !2418, line: 147, type: !4648, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4650)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{null, !2431, !2436, !131}
!4650 = !{!4651, !4652, !4653, !4654, !4655}
!4651 = !DILocalVariable(name: "h", arg: 1, scope: !4647, file: !2418, line: 147, type: !2431)
!4652 = !DILocalVariable(name: "c", arg: 2, scope: !4647, file: !2418, line: 147, type: !2436)
!4653 = !DILocalVariable(name: "used", arg: 3, scope: !4647, file: !2418, line: 147, type: !131)
!4654 = !DILocalVariable(name: "buf", scope: !4647, file: !2418, line: 149, type: !2425)
!4655 = !DILocalVariable(name: "cmem", scope: !4647, file: !2418, line: 150, type: !102)
!4656 = !DILocation(line: 0, scope: !4647)
!4657 = !DILocation(line: 149, column: 22, scope: !4647)
!4658 = !DILocation(line: 0, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !2418, line: 159, column: 7)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2418, line: 158, column: 9)
!4661 = distinct !DILexicalBlock(scope: !4647, file: !2418, line: 152, column: 6)
!4662 = !DILocation(line: 159, column: 7, scope: !4660)
!4663 = !DILocation(line: 165, column: 1, scope: !4647)
!4664 = distinct !DISubprogram(name: "free_chunk", scope: !4609, file: !4609, line: 133, type: !4665, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4667)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{null, !2431, !2436}
!4667 = !{!4668, !4669}
!4668 = !DILocalVariable(name: "h", arg: 1, scope: !4664, file: !4609, line: 133, type: !2431)
!4669 = !DILocalVariable(name: "c", arg: 2, scope: !4664, file: !4609, line: 133, type: !2436)
!4670 = !DILocation(line: 0, scope: !4664)
!4671 = !DILocation(line: 136, column: 21, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !4609, line: 136, column: 6)
!4673 = !DILocation(line: 136, column: 7, scope: !4672)
!4674 = !DILocation(line: 136, column: 6, scope: !4664)
!4675 = !DILocation(line: 137, column: 3, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4672, file: !4609, line: 136, column: 41)
!4677 = !DILocation(line: 138, column: 22, scope: !4676)
!4678 = !DILocation(line: 138, column: 3, scope: !4676)
!4679 = !DILocation(line: 139, column: 2, scope: !4676)
!4680 = !DILocation(line: 142, column: 21, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4664, file: !4609, line: 142, column: 6)
!4682 = !{i32 -65535, i32 536903678}
!4683 = !DILocation(line: 142, column: 7, scope: !4681)
!4684 = !DILocation(line: 142, column: 6, scope: !4664)
!4685 = !DILocation(line: 143, column: 3, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4681, file: !4609, line: 142, column: 40)
!4687 = !DILocation(line: 144, column: 19, scope: !4686)
!4688 = !DILocation(line: 144, column: 3, scope: !4686)
!4689 = !DILocation(line: 145, column: 7, scope: !4686)
!4690 = !DILocation(line: 146, column: 2, scope: !4686)
!4691 = !DILocation(line: 148, column: 2, scope: !4664)
!4692 = !DILocation(line: 149, column: 1, scope: !4664)
!4693 = distinct !DISubprogram(name: "right_chunk", scope: !2418, file: !2418, line: 204, type: !4694, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4696)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!2436, !2431, !2436}
!4696 = !{!4697, !4698}
!4697 = !DILocalVariable(name: "h", arg: 1, scope: !4693, file: !2418, line: 204, type: !2431)
!4698 = !DILocalVariable(name: "c", arg: 2, scope: !4693, file: !2418, line: 204, type: !2436)
!4699 = !DILocation(line: 0, scope: !4693)
!4700 = !DILocation(line: 206, column: 13, scope: !4693)
!4701 = !DILocation(line: 206, column: 11, scope: !4693)
!4702 = !DILocation(line: 206, column: 2, scope: !4693)
!4703 = distinct !DISubprogram(name: "chunk_used", scope: !2418, file: !2418, line: 137, type: !4704, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4706)
!4704 = !DISubroutineType(types: !4705)
!4705 = !{!131, !2431, !2436}
!4706 = !{!4707, !4708}
!4707 = !DILocalVariable(name: "h", arg: 1, scope: !4703, file: !2418, line: 137, type: !2431)
!4708 = !DILocalVariable(name: "c", arg: 2, scope: !4703, file: !2418, line: 137, type: !2436)
!4709 = !DILocation(line: 0, scope: !4703)
!4710 = !DILocation(line: 139, column: 9, scope: !4703)
!4711 = !DILocation(line: 139, column: 42, scope: !4703)
!4712 = !DILocation(line: 139, column: 2, scope: !4703)
!4713 = distinct !DISubprogram(name: "free_list_remove", scope: !4609, file: !4609, line: 60, type: !4665, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4714)
!4714 = !{!4715, !4716, !4717}
!4715 = !DILocalVariable(name: "h", arg: 1, scope: !4713, file: !4609, line: 60, type: !2431)
!4716 = !DILocalVariable(name: "c", arg: 2, scope: !4713, file: !4609, line: 60, type: !2436)
!4717 = !DILocalVariable(name: "bidx", scope: !4718, file: !4609, line: 63, type: !103)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !4609, line: 62, column: 31)
!4719 = distinct !DILexicalBlock(scope: !4713, file: !4609, line: 62, column: 6)
!4720 = !DILocation(line: 0, scope: !4713)
!4721 = !DILocation(line: 63, column: 28, scope: !4718)
!4722 = !{i32 0, i32 32768}
!4723 = !DILocation(line: 63, column: 14, scope: !4718)
!4724 = !DILocation(line: 0, scope: !4718)
!4725 = !DILocation(line: 64, column: 3, scope: !4718)
!4726 = !DILocation(line: 66, column: 1, scope: !4713)
!4727 = distinct !DISubprogram(name: "merge_chunks", scope: !4609, file: !4609, line: 125, type: !4728, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4730)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{null, !2431, !2436, !2436}
!4730 = !{!4731, !4732, !4733, !4734}
!4731 = !DILocalVariable(name: "h", arg: 1, scope: !4727, file: !4609, line: 125, type: !2431)
!4732 = !DILocalVariable(name: "lc", arg: 2, scope: !4727, file: !4609, line: 125, type: !2436)
!4733 = !DILocalVariable(name: "rc", arg: 3, scope: !4727, file: !4609, line: 125, type: !2436)
!4734 = !DILocalVariable(name: "newsz", scope: !4727, file: !4609, line: 127, type: !4735)
!4735 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2418, line: 62, baseType: !108)
!4736 = !DILocation(line: 0, scope: !4727)
!4737 = !DILocation(line: 127, column: 20, scope: !4727)
!4738 = !DILocation(line: 127, column: 40, scope: !4727)
!4739 = !DILocation(line: 127, column: 38, scope: !4727)
!4740 = !DILocation(line: 129, column: 2, scope: !4727)
!4741 = !DILocation(line: 130, column: 25, scope: !4727)
!4742 = !DILocation(line: 130, column: 2, scope: !4727)
!4743 = !DILocation(line: 131, column: 1, scope: !4727)
!4744 = distinct !DISubprogram(name: "left_chunk", scope: !2418, file: !2418, line: 199, type: !4694, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4745)
!4745 = !{!4746, !4747}
!4746 = !DILocalVariable(name: "h", arg: 1, scope: !4744, file: !2418, line: 199, type: !2431)
!4747 = !DILocalVariable(name: "c", arg: 2, scope: !4744, file: !2418, line: 199, type: !2436)
!4748 = !DILocation(line: 0, scope: !4744)
!4749 = !DILocation(line: 201, column: 13, scope: !4744)
!4750 = !DILocation(line: 201, column: 11, scope: !4744)
!4751 = !DILocation(line: 201, column: 2, scope: !4744)
!4752 = distinct !DISubprogram(name: "free_list_add", scope: !4609, file: !4609, line: 98, type: !4665, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4753)
!4753 = !{!4754, !4755, !4756}
!4754 = !DILocalVariable(name: "h", arg: 1, scope: !4752, file: !4609, line: 98, type: !2431)
!4755 = !DILocalVariable(name: "c", arg: 2, scope: !4752, file: !4609, line: 98, type: !2436)
!4756 = !DILocalVariable(name: "bidx", scope: !4757, file: !4609, line: 101, type: !103)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !4609, line: 100, column: 31)
!4758 = distinct !DILexicalBlock(scope: !4752, file: !4609, line: 100, column: 6)
!4759 = !DILocation(line: 0, scope: !4752)
!4760 = !DILocation(line: 101, column: 28, scope: !4757)
!4761 = !DILocation(line: 101, column: 14, scope: !4757)
!4762 = !DILocation(line: 0, scope: !4757)
!4763 = !DILocation(line: 102, column: 3, scope: !4757)
!4764 = !DILocation(line: 104, column: 1, scope: !4752)
!4765 = distinct !DISubprogram(name: "chunk_size", scope: !2418, file: !2418, line: 142, type: !4766, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4768)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!4735, !2431, !2436}
!4768 = !{!4769, !4770}
!4769 = !DILocalVariable(name: "h", arg: 1, scope: !4765, file: !2418, line: 142, type: !2431)
!4770 = !DILocalVariable(name: "c", arg: 2, scope: !4765, file: !2418, line: 142, type: !2436)
!4771 = !DILocation(line: 0, scope: !4765)
!4772 = !DILocation(line: 144, column: 9, scope: !4765)
!4773 = !DILocation(line: 144, column: 42, scope: !4765)
!4774 = !DILocation(line: 144, column: 2, scope: !4765)
!4775 = distinct !DISubprogram(name: "bucket_idx", scope: !2418, file: !2418, line: 250, type: !4776, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4778)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{!103, !2431, !4735}
!4778 = !{!4779, !4780, !4781}
!4779 = !DILocalVariable(name: "h", arg: 1, scope: !4775, file: !2418, line: 250, type: !2431)
!4780 = !DILocalVariable(name: "sz", arg: 2, scope: !4775, file: !2418, line: 250, type: !4735)
!4781 = !DILocalVariable(name: "usable_sz", scope: !4775, file: !2418, line: 252, type: !32)
!4782 = !DILocation(line: 0, scope: !4775)
!4783 = !DILocation(line: 252, column: 32, scope: !4775)
!4784 = !DILocation(line: 252, column: 30, scope: !4775)
!4785 = !DILocation(line: 252, column: 50, scope: !4775)
!4786 = !DILocation(line: 253, column: 14, scope: !4775)
!4787 = !{i32 0, i32 33}
!4788 = !DILocation(line: 253, column: 12, scope: !4775)
!4789 = !DILocation(line: 253, column: 2, scope: !4775)
!4790 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4609, file: !4609, line: 68, type: !4791, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4793)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{null, !2431, !2436, !103}
!4793 = !{!4794, !4795, !4796, !4797, !4799, !4802}
!4794 = !DILocalVariable(name: "h", arg: 1, scope: !4790, file: !4609, line: 68, type: !2431)
!4795 = !DILocalVariable(name: "c", arg: 2, scope: !4790, file: !4609, line: 68, type: !2436)
!4796 = !DILocalVariable(name: "bidx", arg: 3, scope: !4790, file: !4609, line: 68, type: !103)
!4797 = !DILocalVariable(name: "b", scope: !4790, file: !4609, line: 70, type: !4798)
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!4799 = !DILocalVariable(name: "second", scope: !4800, file: !4609, line: 84, type: !2436)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !4609, line: 80, column: 9)
!4801 = distinct !DILexicalBlock(scope: !4790, file: !4609, line: 72, column: 6)
!4802 = !DILocalVariable(name: "first", scope: !4800, file: !4609, line: 85, type: !2436)
!4803 = !DILocation(line: 0, scope: !4790)
!4804 = !DILocation(line: 72, column: 9, scope: !4801)
!4805 = !DILocation(line: 72, column: 14, scope: !4801)
!4806 = !DILocation(line: 72, column: 6, scope: !4790)
!4807 = !DILocation(line: 76, column: 23, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4801, file: !4609, line: 72, column: 21)
!4809 = !DILocation(line: 76, column: 6, scope: !4808)
!4810 = !DILocation(line: 76, column: 20, scope: !4808)
!4811 = !DILocation(line: 77, column: 11, scope: !4808)
!4812 = !DILocation(line: 78, column: 3, scope: !4808)
!4813 = !DILocation(line: 79, column: 3, scope: !4808)
!4814 = !DILocation(line: 80, column: 2, scope: !4808)
!4815 = !DILocation(line: 0, scope: !4800)
!4816 = !DILocation(line: 85, column: 21, scope: !4800)
!4817 = !{i32 0, i32 65536}
!4818 = !DILocation(line: 87, column: 3, scope: !4800)
!4819 = !DILocation(line: 88, column: 3, scope: !4800)
!4820 = !DILocation(line: 89, column: 3, scope: !4800)
!4821 = !DILocation(line: 90, column: 3, scope: !4800)
!4822 = !DILocation(line: 96, column: 1, scope: !4790)
!4823 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2418, file: !2418, line: 187, type: !4728, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4824)
!4824 = !{!4825, !4826, !4827}
!4825 = !DILocalVariable(name: "h", arg: 1, scope: !4823, file: !2418, line: 187, type: !2431)
!4826 = !DILocalVariable(name: "c", arg: 2, scope: !4823, file: !2418, line: 187, type: !2436)
!4827 = !DILocalVariable(name: "prev", arg: 3, scope: !4823, file: !2418, line: 188, type: !2436)
!4828 = !DILocation(line: 0, scope: !4823)
!4829 = !DILocation(line: 190, column: 2, scope: !4823)
!4830 = !DILocation(line: 191, column: 1, scope: !4823)
!4831 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2418, file: !2418, line: 193, type: !4728, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4832)
!4832 = !{!4833, !4834, !4835}
!4833 = !DILocalVariable(name: "h", arg: 1, scope: !4831, file: !2418, line: 193, type: !2431)
!4834 = !DILocalVariable(name: "c", arg: 2, scope: !4831, file: !2418, line: 193, type: !2436)
!4835 = !DILocalVariable(name: "next", arg: 3, scope: !4831, file: !2418, line: 194, type: !2436)
!4836 = !DILocation(line: 0, scope: !4831)
!4837 = !DILocation(line: 196, column: 2, scope: !4831)
!4838 = !DILocation(line: 197, column: 1, scope: !4831)
!4839 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2418, file: !2418, line: 177, type: !4694, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4840)
!4840 = !{!4841, !4842}
!4841 = !DILocalVariable(name: "h", arg: 1, scope: !4839, file: !2418, line: 177, type: !2431)
!4842 = !DILocalVariable(name: "c", arg: 2, scope: !4839, file: !2418, line: 177, type: !2436)
!4843 = !DILocation(line: 0, scope: !4839)
!4844 = !DILocation(line: 179, column: 9, scope: !4839)
!4845 = !DILocation(line: 179, column: 2, scope: !4839)
!4846 = distinct !DISubprogram(name: "chunk_field", scope: !2418, file: !2418, line: 107, type: !4847, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4849)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!2436, !2431, !2436, !2417}
!4849 = !{!4850, !4851, !4852, !4853, !4854}
!4850 = !DILocalVariable(name: "h", arg: 1, scope: !4846, file: !2418, line: 107, type: !2431)
!4851 = !DILocalVariable(name: "c", arg: 2, scope: !4846, file: !2418, line: 107, type: !2436)
!4852 = !DILocalVariable(name: "f", arg: 3, scope: !4846, file: !2418, line: 108, type: !2417)
!4853 = !DILocalVariable(name: "buf", scope: !4846, file: !2418, line: 110, type: !2425)
!4854 = !DILocalVariable(name: "cmem", scope: !4846, file: !2418, line: 111, type: !102)
!4855 = !DILocation(line: 0, scope: !4846)
!4856 = !DILocation(line: 110, column: 22, scope: !4846)
!4857 = !DILocation(line: 111, column: 15, scope: !4846)
!4858 = !DILocation(line: 116, column: 11, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !2418, line: 115, column: 9)
!4860 = distinct !DILexicalBlock(scope: !4846, file: !2418, line: 113, column: 6)
!4861 = !DILocation(line: 116, column: 10, scope: !4859)
!4862 = !DILocation(line: 118, column: 1, scope: !4846)
!4863 = distinct !DISubprogram(name: "chunk_buf", scope: !2418, file: !2418, line: 101, type: !4864, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4866)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!2425, !2431}
!4866 = !{!4867}
!4867 = !DILocalVariable(name: "h", arg: 1, scope: !4863, file: !2418, line: 101, type: !2431)
!4868 = !DILocation(line: 0, scope: !4863)
!4869 = !DILocation(line: 104, column: 9, scope: !4863)
!4870 = !DILocation(line: 104, column: 2, scope: !4863)
!4871 = distinct !DISubprogram(name: "chunk_set", scope: !2418, file: !2418, line: 120, type: !4872, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4874)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{null, !2431, !2436, !2417, !2436}
!4874 = !{!4875, !4876, !4877, !4878, !4879, !4880}
!4875 = !DILocalVariable(name: "h", arg: 1, scope: !4871, file: !2418, line: 120, type: !2431)
!4876 = !DILocalVariable(name: "c", arg: 2, scope: !4871, file: !2418, line: 120, type: !2436)
!4877 = !DILocalVariable(name: "f", arg: 3, scope: !4871, file: !2418, line: 121, type: !2417)
!4878 = !DILocalVariable(name: "val", arg: 4, scope: !4871, file: !2418, line: 121, type: !2436)
!4879 = !DILocalVariable(name: "buf", scope: !4871, file: !2418, line: 125, type: !2425)
!4880 = !DILocalVariable(name: "cmem", scope: !4871, file: !2418, line: 126, type: !102)
!4881 = !DILocation(line: 0, scope: !4871)
!4882 = !DILocation(line: 125, column: 22, scope: !4871)
!4883 = !DILocation(line: 126, column: 15, scope: !4871)
!4884 = !DILocation(line: 133, column: 27, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !2418, line: 131, column: 9)
!4886 = distinct !DILexicalBlock(scope: !4871, file: !2418, line: 128, column: 6)
!4887 = !DILocation(line: 133, column: 4, scope: !4885)
!4888 = !DILocation(line: 133, column: 3, scope: !4885)
!4889 = !DILocation(line: 133, column: 25, scope: !4885)
!4890 = !DILocation(line: 135, column: 1, scope: !4871)
!4891 = distinct !DISubprogram(name: "min_chunk_size", scope: !2418, file: !2418, line: 240, type: !4892, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4894)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{!4735, !2431}
!4894 = !{!4895}
!4895 = !DILocalVariable(name: "h", arg: 1, scope: !4891, file: !2418, line: 240, type: !2431)
!4896 = !DILocation(line: 0, scope: !4891)
!4897 = !DILocation(line: 242, column: 9, scope: !4891)
!4898 = !DILocation(line: 242, column: 2, scope: !4891)
!4899 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2418, file: !2418, line: 235, type: !4900, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4902)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!4735, !2431, !132}
!4902 = !{!4903, !4904}
!4903 = !DILocalVariable(name: "h", arg: 1, scope: !4899, file: !2418, line: 235, type: !2431)
!4904 = !DILocalVariable(name: "bytes", arg: 2, scope: !4899, file: !2418, line: 235, type: !132)
!4905 = !DILocation(line: 0, scope: !4899)
!4906 = !DILocation(line: 237, column: 39, scope: !4899)
!4907 = !DILocation(line: 237, column: 9, scope: !4899)
!4908 = !DILocation(line: 237, column: 2, scope: !4899)
!4909 = distinct !DISubprogram(name: "chunksz", scope: !2418, file: !2418, line: 230, type: !4910, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4912)
!4910 = !DISubroutineType(types: !4911)
!4911 = !{!4735, !132}
!4912 = !{!4913}
!4913 = !DILocalVariable(name: "bytes", arg: 1, scope: !4909, file: !2418, line: 230, type: !132)
!4914 = !DILocation(line: 0, scope: !4909)
!4915 = !DILocation(line: 232, column: 29, scope: !4909)
!4916 = !DILocation(line: 232, column: 35, scope: !4909)
!4917 = !DILocation(line: 232, column: 2, scope: !4909)
!4918 = distinct !DISubprogram(name: "set_chunk_size", scope: !2418, file: !2418, line: 172, type: !4919, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4921)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{null, !2431, !2436, !4735}
!4921 = !{!4922, !4923, !4924}
!4922 = !DILocalVariable(name: "h", arg: 1, scope: !4918, file: !2418, line: 172, type: !2431)
!4923 = !DILocalVariable(name: "c", arg: 2, scope: !4918, file: !2418, line: 172, type: !2436)
!4924 = !DILocalVariable(name: "size", arg: 3, scope: !4918, file: !2418, line: 172, type: !4735)
!4925 = !DILocation(line: 0, scope: !4918)
!4926 = !DILocation(line: 174, column: 38, scope: !4918)
!4927 = !DILocation(line: 174, column: 2, scope: !4918)
!4928 = !DILocation(line: 175, column: 1, scope: !4918)
!4929 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2418, file: !2418, line: 209, type: !4919, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4930)
!4930 = !{!4931, !4932, !4933}
!4931 = !DILocalVariable(name: "h", arg: 1, scope: !4929, file: !2418, line: 209, type: !2431)
!4932 = !DILocalVariable(name: "c", arg: 2, scope: !4929, file: !2418, line: 209, type: !2436)
!4933 = !DILocalVariable(name: "size", arg: 3, scope: !4929, file: !2418, line: 210, type: !4735)
!4934 = !DILocation(line: 0, scope: !4929)
!4935 = !DILocation(line: 212, column: 2, scope: !4929)
!4936 = !DILocation(line: 213, column: 1, scope: !4929)
!4937 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4609, file: !4609, line: 34, type: !4791, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4938)
!4938 = !{!4939, !4940, !4941, !4942, !4943, !4946}
!4939 = !DILocalVariable(name: "h", arg: 1, scope: !4937, file: !4609, line: 34, type: !2431)
!4940 = !DILocalVariable(name: "c", arg: 2, scope: !4937, file: !4609, line: 34, type: !2436)
!4941 = !DILocalVariable(name: "bidx", arg: 3, scope: !4937, file: !4609, line: 34, type: !103)
!4942 = !DILocalVariable(name: "b", scope: !4937, file: !4609, line: 36, type: !4798)
!4943 = !DILocalVariable(name: "first", scope: !4944, file: !4609, line: 47, type: !2436)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !4609, line: 46, column: 9)
!4945 = distinct !DILexicalBlock(scope: !4937, file: !4609, line: 42, column: 6)
!4946 = !DILocalVariable(name: "second", scope: !4944, file: !4609, line: 48, type: !2436)
!4947 = !DILocation(line: 0, scope: !4937)
!4948 = !DILocation(line: 36, column: 29, scope: !4937)
!4949 = !DILocation(line: 42, column: 6, scope: !4945)
!4950 = !DILocation(line: 42, column: 28, scope: !4945)
!4951 = !DILocation(line: 42, column: 6, scope: !4937)
!4952 = !DILocation(line: 44, column: 24, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4945, file: !4609, line: 42, column: 34)
!4954 = !DILocation(line: 44, column: 23, scope: !4953)
!4955 = !DILocation(line: 44, column: 6, scope: !4953)
!4956 = !DILocation(line: 44, column: 20, scope: !4953)
!4957 = !DILocation(line: 45, column: 6, scope: !4953)
!4958 = !DILocation(line: 45, column: 11, scope: !4953)
!4959 = !DILocation(line: 46, column: 2, scope: !4953)
!4960 = !DILocation(line: 47, column: 21, scope: !4944)
!4961 = !DILocation(line: 0, scope: !4944)
!4962 = !DILocation(line: 50, column: 6, scope: !4944)
!4963 = !DILocation(line: 50, column: 11, scope: !4944)
!4964 = !DILocation(line: 51, column: 3, scope: !4944)
!4965 = !DILocation(line: 52, column: 3, scope: !4944)
!4966 = !DILocation(line: 58, column: 1, scope: !4937)
!4967 = distinct !DISubprogram(name: "next_free_chunk", scope: !2418, file: !2418, line: 182, type: !4694, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4968)
!4968 = !{!4969, !4970}
!4969 = !DILocalVariable(name: "h", arg: 1, scope: !4967, file: !2418, line: 182, type: !2431)
!4970 = !DILocalVariable(name: "c", arg: 2, scope: !4967, file: !2418, line: 182, type: !2436)
!4971 = !DILocation(line: 0, scope: !4967)
!4972 = !DILocation(line: 184, column: 9, scope: !4967)
!4973 = !DILocation(line: 184, column: 2, scope: !4967)
!4974 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4609, file: !4609, line: 200, type: !4975, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4977)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!132, !4612, !102}
!4977 = !{!4978, !4979, !4980, !4981, !4982, !4983, !4984}
!4978 = !DILocalVariable(name: "heap", arg: 1, scope: !4974, file: !4609, line: 200, type: !4612)
!4979 = !DILocalVariable(name: "mem", arg: 2, scope: !4974, file: !4609, line: 200, type: !102)
!4980 = !DILocalVariable(name: "h", scope: !4974, file: !4609, line: 202, type: !2431)
!4981 = !DILocalVariable(name: "c", scope: !4974, file: !4609, line: 203, type: !2436)
!4982 = !DILocalVariable(name: "addr", scope: !4974, file: !4609, line: 204, type: !132)
!4983 = !DILocalVariable(name: "chunk_base", scope: !4974, file: !4609, line: 205, type: !132)
!4984 = !DILocalVariable(name: "chunk_sz", scope: !4974, file: !4609, line: 206, type: !132)
!4985 = !DILocation(line: 0, scope: !4974)
!4986 = !DILocation(line: 202, column: 27, scope: !4974)
!4987 = !DILocation(line: 203, column: 16, scope: !4974)
!4988 = !DILocation(line: 204, column: 16, scope: !4974)
!4989 = !DILocation(line: 205, column: 31, scope: !4974)
!4990 = !DILocation(line: 205, column: 22, scope: !4974)
!4991 = !DILocation(line: 206, column: 20, scope: !4974)
!4992 = !DILocation(line: 206, column: 37, scope: !4974)
!4993 = !DILocation(line: 208, column: 26, scope: !4974)
!4994 = !DILocation(line: 208, column: 18, scope: !4974)
!4995 = !DILocation(line: 208, column: 2, scope: !4974)
!4996 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4609, file: !4609, line: 263, type: !4997, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!102, !4612, !132}
!4999 = !{!5000, !5001, !5002, !5003, !5004, !5005}
!5000 = !DILocalVariable(name: "heap", arg: 1, scope: !4996, file: !4609, line: 263, type: !4612)
!5001 = !DILocalVariable(name: "bytes", arg: 2, scope: !4996, file: !4609, line: 263, type: !132)
!5002 = !DILocalVariable(name: "h", scope: !4996, file: !4609, line: 265, type: !2431)
!5003 = !DILocalVariable(name: "mem", scope: !4996, file: !4609, line: 266, type: !102)
!5004 = !DILocalVariable(name: "chunk_sz", scope: !4996, file: !4609, line: 272, type: !4735)
!5005 = !DILocalVariable(name: "c", scope: !4996, file: !4609, line: 273, type: !2436)
!5006 = !DILocation(line: 0, scope: !4996)
!5007 = !DILocation(line: 265, column: 27, scope: !4996)
!5008 = !DILocation(line: 268, column: 12, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4996, file: !4609, line: 268, column: 6)
!5010 = !DILocation(line: 268, column: 18, scope: !5009)
!5011 = !DILocation(line: 268, column: 21, scope: !5009)
!5012 = !DILocation(line: 268, column: 6, scope: !4996)
!5013 = !DILocation(line: 272, column: 23, scope: !4996)
!5014 = !DILocation(line: 273, column: 16, scope: !4996)
!5015 = !DILocation(line: 274, column: 8, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4996, file: !4609, line: 274, column: 6)
!5017 = !DILocation(line: 274, column: 6, scope: !4996)
!5018 = !DILocation(line: 279, column: 6, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4996, file: !4609, line: 279, column: 6)
!5020 = !DILocation(line: 279, column: 23, scope: !5019)
!5021 = !DILocation(line: 279, column: 6, scope: !4996)
!5022 = !DILocation(line: 280, column: 24, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !4609, line: 279, column: 35)
!5024 = !DILocation(line: 280, column: 3, scope: !5023)
!5025 = !DILocation(line: 281, column: 3, scope: !5023)
!5026 = !DILocation(line: 282, column: 2, scope: !5023)
!5027 = !DILocation(line: 284, column: 2, scope: !4996)
!5028 = !DILocation(line: 286, column: 8, scope: !4996)
!5029 = !DILocation(line: 298, column: 2, scope: !4996)
!5030 = !DILocation(line: 299, column: 1, scope: !4996)
!5031 = distinct !DISubprogram(name: "size_too_big", scope: !2418, file: !2418, line: 256, type: !5032, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5034)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{!131, !2431, !132}
!5034 = !{!5035, !5036}
!5035 = !DILocalVariable(name: "h", arg: 1, scope: !5031, file: !2418, line: 256, type: !2431)
!5036 = !DILocalVariable(name: "bytes", arg: 2, scope: !5031, file: !2418, line: 256, type: !132)
!5037 = !DILocation(line: 0, scope: !5031)
!5038 = !DILocation(line: 262, column: 16, scope: !5031)
!5039 = !DILocation(line: 262, column: 36, scope: !5031)
!5040 = !DILocation(line: 262, column: 30, scope: !5031)
!5041 = !DILocation(line: 262, column: 2, scope: !5031)
!5042 = distinct !DISubprogram(name: "alloc_chunk", scope: !4609, file: !4609, line: 211, type: !5043, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5045)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!2436, !2431, !4735}
!5045 = !{!5046, !5047, !5048, !5049, !5050, !5053, !5054, !5056, !5057, !5060}
!5046 = !DILocalVariable(name: "h", arg: 1, scope: !5042, file: !4609, line: 211, type: !2431)
!5047 = !DILocalVariable(name: "sz", arg: 2, scope: !5042, file: !4609, line: 211, type: !4735)
!5048 = !DILocalVariable(name: "bi", scope: !5042, file: !4609, line: 213, type: !103)
!5049 = !DILocalVariable(name: "b", scope: !5042, file: !4609, line: 214, type: !4798)
!5050 = !DILocalVariable(name: "first", scope: !5051, file: !4609, line: 233, type: !2436)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !4609, line: 232, column: 15)
!5052 = distinct !DILexicalBlock(scope: !5042, file: !4609, line: 232, column: 6)
!5053 = !DILocalVariable(name: "i", scope: !5051, file: !4609, line: 234, type: !103)
!5054 = !DILocalVariable(name: "c", scope: !5055, file: !4609, line: 236, type: !2436)
!5055 = distinct !DILexicalBlock(scope: !5051, file: !4609, line: 235, column: 6)
!5056 = !DILocalVariable(name: "bmask", scope: !5042, file: !4609, line: 249, type: !108)
!5057 = !DILocalVariable(name: "minbucket", scope: !5058, file: !4609, line: 252, type: !103)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !4609, line: 251, column: 19)
!5059 = distinct !DILexicalBlock(scope: !5042, file: !4609, line: 251, column: 6)
!5060 = !DILocalVariable(name: "c", scope: !5058, file: !4609, line: 253, type: !2436)
!5061 = !DILocation(line: 0, scope: !5042)
!5062 = !DILocation(line: 213, column: 11, scope: !5042)
!5063 = !DILocation(line: 232, column: 9, scope: !5052)
!5064 = !DILocation(line: 232, column: 6, scope: !5052)
!5065 = !DILocation(line: 232, column: 6, scope: !5042)
!5066 = !DILocation(line: 236, column: 21, scope: !5055)
!5067 = !DILocation(line: 0, scope: !5051)
!5068 = !DILocation(line: 0, scope: !5055)
!5069 = !DILocation(line: 237, column: 8, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5055, file: !4609, line: 237, column: 8)
!5071 = !DILocation(line: 237, column: 25, scope: !5070)
!5072 = !DILocation(line: 237, column: 8, scope: !5055)
!5073 = !DILocation(line: 238, column: 5, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5070, file: !4609, line: 237, column: 32)
!5075 = !DILocation(line: 241, column: 14, scope: !5055)
!5076 = !DILocation(line: 241, column: 12, scope: !5055)
!5077 = !DILocation(line: 243, column: 12, scope: !5051)
!5078 = !DILocation(line: 243, column: 16, scope: !5051)
!5079 = distinct !{!5079, !5080, !5081}
!5080 = !DILocation(line: 235, column: 3, scope: !5051)
!5081 = !DILocation(line: 243, column: 35, scope: !5051)
!5082 = !DILocation(line: 249, column: 22, scope: !5042)
!5083 = !DILocation(line: 249, column: 39, scope: !5042)
!5084 = !DILocation(line: 249, column: 36, scope: !5042)
!5085 = !DILocation(line: 251, column: 12, scope: !5059)
!5086 = !DILocation(line: 251, column: 6, scope: !5042)
!5087 = !DILocation(line: 252, column: 19, scope: !5058)
!5088 = !DILocation(line: 0, scope: !5058)
!5089 = !DILocation(line: 253, column: 39, scope: !5058)
!5090 = !DILocation(line: 255, column: 3, scope: !5058)
!5091 = !DILocation(line: 261, column: 1, scope: !5042)
!5092 = distinct !DISubprogram(name: "split_chunks", scope: !4609, file: !4609, line: 109, type: !4728, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5093)
!5093 = !{!5094, !5095, !5096, !5097, !5098, !5099}
!5094 = !DILocalVariable(name: "h", arg: 1, scope: !5092, file: !4609, line: 109, type: !2431)
!5095 = !DILocalVariable(name: "lc", arg: 2, scope: !5092, file: !4609, line: 109, type: !2436)
!5096 = !DILocalVariable(name: "rc", arg: 3, scope: !5092, file: !4609, line: 109, type: !2436)
!5097 = !DILocalVariable(name: "sz0", scope: !5092, file: !4609, line: 114, type: !4735)
!5098 = !DILocalVariable(name: "lsz", scope: !5092, file: !4609, line: 115, type: !4735)
!5099 = !DILocalVariable(name: "rsz", scope: !5092, file: !4609, line: 116, type: !4735)
!5100 = !DILocation(line: 0, scope: !5092)
!5101 = !DILocation(line: 114, column: 18, scope: !5092)
!5102 = !DILocation(line: 115, column: 21, scope: !5092)
!5103 = !DILocation(line: 116, column: 22, scope: !5092)
!5104 = !DILocation(line: 118, column: 2, scope: !5092)
!5105 = !DILocation(line: 119, column: 2, scope: !5092)
!5106 = !DILocation(line: 120, column: 2, scope: !5092)
!5107 = !DILocation(line: 121, column: 25, scope: !5092)
!5108 = !DILocation(line: 121, column: 2, scope: !5092)
!5109 = !DILocation(line: 122, column: 1, scope: !5092)
!5110 = distinct !DISubprogram(name: "chunk_mem", scope: !4609, file: !4609, line: 24, type: !5111, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5113)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!102, !2431, !2436}
!5113 = !{!5114, !5115, !5116, !5117}
!5114 = !DILocalVariable(name: "h", arg: 1, scope: !5110, file: !4609, line: 24, type: !2431)
!5115 = !DILocalVariable(name: "c", arg: 2, scope: !5110, file: !4609, line: 24, type: !2436)
!5116 = !DILocalVariable(name: "buf", scope: !5110, file: !4609, line: 26, type: !2425)
!5117 = !DILocalVariable(name: "ret", scope: !5110, file: !4609, line: 27, type: !373)
!5118 = !DILocation(line: 0, scope: !5110)
!5119 = !DILocation(line: 26, column: 22, scope: !5110)
!5120 = !DILocation(line: 27, column: 38, scope: !5110)
!5121 = !DILocation(line: 31, column: 2, scope: !5110)
!5122 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4609, file: !4609, line: 301, type: !5123, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5125)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{!102, !4612, !132, !132}
!5125 = !{!5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137}
!5126 = !DILocalVariable(name: "heap", arg: 1, scope: !5122, file: !4609, line: 301, type: !4612)
!5127 = !DILocalVariable(name: "align", arg: 2, scope: !5122, file: !4609, line: 301, type: !132)
!5128 = !DILocalVariable(name: "bytes", arg: 3, scope: !5122, file: !4609, line: 301, type: !132)
!5129 = !DILocalVariable(name: "h", scope: !5122, file: !4609, line: 303, type: !2431)
!5130 = !DILocalVariable(name: "gap", scope: !5122, file: !4609, line: 304, type: !132)
!5131 = !DILocalVariable(name: "rew", scope: !5122, file: !4609, line: 304, type: !132)
!5132 = !DILocalVariable(name: "padded_sz", scope: !5122, file: !4609, line: 335, type: !4735)
!5133 = !DILocalVariable(name: "c0", scope: !5122, file: !4609, line: 336, type: !2436)
!5134 = !DILocalVariable(name: "mem", scope: !5122, file: !4609, line: 341, type: !373)
!5135 = !DILocalVariable(name: "end", scope: !5122, file: !4609, line: 345, type: !2425)
!5136 = !DILocalVariable(name: "c", scope: !5122, file: !4609, line: 348, type: !2436)
!5137 = !DILocalVariable(name: "c_end", scope: !5122, file: !4609, line: 349, type: !2436)
!5138 = !DILocation(line: 0, scope: !5122)
!5139 = !DILocation(line: 303, column: 27, scope: !5122)
!5140 = !DILocation(line: 313, column: 16, scope: !5122)
!5141 = !DILocation(line: 313, column: 14, scope: !5122)
!5142 = !DILocation(line: 314, column: 12, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5122, file: !4609, line: 314, column: 6)
!5144 = !DILocation(line: 314, column: 6, scope: !5122)
!5145 = !DILocation(line: 315, column: 9, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5143, file: !4609, line: 314, column: 20)
!5147 = !DILocation(line: 316, column: 9, scope: !5146)
!5148 = !DILocation(line: 318, column: 13, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !4609, line: 318, column: 7)
!5150 = distinct !DILexicalBlock(scope: !5143, file: !4609, line: 317, column: 9)
!5151 = !DILocation(line: 318, column: 7, scope: !5150)
!5152 = !DILocation(line: 319, column: 11, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5149, file: !4609, line: 318, column: 39)
!5154 = !DILocation(line: 319, column: 4, scope: !5153)
!5155 = !DILocation(line: 0, scope: !5143)
!5156 = !DILocation(line: 326, column: 12, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5122, file: !4609, line: 326, column: 6)
!5158 = !DILocation(line: 326, column: 17, scope: !5157)
!5159 = !DILocation(line: 326, column: 20, scope: !5157)
!5160 = !DILocation(line: 326, column: 6, scope: !5122)
!5161 = !DILocation(line: 335, column: 50, scope: !5122)
!5162 = !DILocation(line: 335, column: 58, scope: !5122)
!5163 = !DILocation(line: 335, column: 24, scope: !5122)
!5164 = !DILocation(line: 336, column: 17, scope: !5122)
!5165 = !DILocation(line: 338, column: 9, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5122, file: !4609, line: 338, column: 6)
!5167 = !DILocation(line: 338, column: 6, scope: !5122)
!5168 = !DILocation(line: 341, column: 17, scope: !5122)
!5169 = !DILocation(line: 344, column: 20, scope: !5122)
!5170 = !DILocation(line: 344, column: 8, scope: !5122)
!5171 = !DILocation(line: 344, column: 47, scope: !5122)
!5172 = !DILocation(line: 345, column: 39, scope: !5122)
!5173 = !DILocation(line: 348, column: 16, scope: !5122)
!5174 = !DILocation(line: 349, column: 26, scope: !5122)
!5175 = !DILocation(line: 349, column: 24, scope: !5122)
!5176 = !DILocation(line: 353, column: 8, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5122, file: !4609, line: 353, column: 6)
!5178 = !DILocation(line: 353, column: 6, scope: !5122)
!5179 = !DILocation(line: 354, column: 3, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5177, file: !4609, line: 353, column: 14)
!5181 = !DILocation(line: 355, column: 3, scope: !5180)
!5182 = !DILocation(line: 356, column: 2, scope: !5180)
!5183 = !DILocation(line: 359, column: 6, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5122, file: !4609, line: 359, column: 6)
!5185 = !DILocation(line: 359, column: 24, scope: !5184)
!5186 = !DILocation(line: 359, column: 6, scope: !5122)
!5187 = !DILocation(line: 360, column: 3, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !4609, line: 359, column: 33)
!5189 = !DILocation(line: 361, column: 3, scope: !5188)
!5190 = !DILocation(line: 362, column: 2, scope: !5188)
!5191 = !DILocation(line: 364, column: 2, scope: !5122)
!5192 = !DILocation(line: 377, column: 1, scope: !5122)
!5193 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4609, file: !4609, line: 379, type: !5194, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5196)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{!102, !4612, !102, !132, !132}
!5196 = !{!5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5212, !5213}
!5197 = !DILocalVariable(name: "heap", arg: 1, scope: !5193, file: !4609, line: 379, type: !4612)
!5198 = !DILocalVariable(name: "ptr", arg: 2, scope: !5193, file: !4609, line: 379, type: !102)
!5199 = !DILocalVariable(name: "align", arg: 3, scope: !5193, file: !4609, line: 380, type: !132)
!5200 = !DILocalVariable(name: "bytes", arg: 4, scope: !5193, file: !4609, line: 380, type: !132)
!5201 = !DILocalVariable(name: "h", scope: !5193, file: !4609, line: 382, type: !2431)
!5202 = !DILocalVariable(name: "c", scope: !5193, file: !4609, line: 399, type: !2436)
!5203 = !DILocalVariable(name: "rc", scope: !5193, file: !4609, line: 400, type: !2436)
!5204 = !DILocalVariable(name: "align_gap", scope: !5193, file: !4609, line: 401, type: !132)
!5205 = !DILocalVariable(name: "chunks_need", scope: !5193, file: !4609, line: 402, type: !4735)
!5206 = !DILocalVariable(name: "split_size", scope: !5207, file: !4609, line: 435, type: !4735)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !4609, line: 433, column: 61)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !4609, line: 432, column: 13)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !4609, line: 409, column: 13)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !4609, line: 406, column: 13)
!5211 = distinct !DILexicalBlock(scope: !5193, file: !4609, line: 404, column: 6)
!5212 = !DILocalVariable(name: "ptr2", scope: !5193, file: !4609, line: 474, type: !102)
!5213 = !DILocalVariable(name: "prev_size", scope: !5214, file: !4609, line: 477, type: !132)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !4609, line: 476, column: 20)
!5215 = distinct !DILexicalBlock(scope: !5193, file: !4609, line: 476, column: 6)
!5216 = !DILocation(line: 0, scope: !5193)
!5217 = !DILocation(line: 382, column: 27, scope: !5193)
!5218 = !DILocation(line: 385, column: 10, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5193, file: !4609, line: 385, column: 6)
!5220 = !DILocation(line: 385, column: 6, scope: !5193)
!5221 = !DILocation(line: 386, column: 10, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5219, file: !4609, line: 385, column: 19)
!5223 = !DILocation(line: 386, column: 3, scope: !5222)
!5224 = !DILocation(line: 388, column: 12, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5193, file: !4609, line: 388, column: 6)
!5226 = !DILocation(line: 388, column: 6, scope: !5193)
!5227 = !DILocation(line: 389, column: 3, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5225, file: !4609, line: 388, column: 18)
!5229 = !DILocation(line: 390, column: 3, scope: !5228)
!5230 = !DILocation(line: 395, column: 6, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5193, file: !4609, line: 395, column: 6)
!5232 = !DILocation(line: 395, column: 6, scope: !5193)
!5233 = !DILocation(line: 399, column: 16, scope: !5193)
!5234 = !DILocation(line: 400, column: 17, scope: !5193)
!5235 = !DILocation(line: 401, column: 49, scope: !5193)
!5236 = !DILocation(line: 401, column: 36, scope: !5193)
!5237 = !DILocation(line: 402, column: 52, scope: !5193)
!5238 = !DILocation(line: 402, column: 26, scope: !5193)
!5239 = !DILocation(line: 404, column: 6, scope: !5211)
!5240 = !DILocation(line: 404, column: 12, scope: !5211)
!5241 = !DILocation(line: 404, column: 40, scope: !5211)
!5242 = !DILocation(line: 404, column: 31, scope: !5211)
!5243 = !DILocation(line: 404, column: 6, scope: !5193)
!5244 = !DILocation(line: 406, column: 13, scope: !5210)
!5245 = !DILocation(line: 406, column: 30, scope: !5210)
!5246 = !DILocation(line: 406, column: 13, scope: !5211)
!5247 = !DILocation(line: 409, column: 30, scope: !5209)
!5248 = !DILocation(line: 409, column: 13, scope: !5210)
!5249 = !DILocation(line: 420, column: 24, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5209, file: !4609, line: 409, column: 45)
!5251 = !DILocation(line: 420, column: 3, scope: !5250)
!5252 = !DILocation(line: 421, column: 3, scope: !5250)
!5253 = !DILocation(line: 422, column: 3, scope: !5250)
!5254 = !DILocation(line: 431, column: 3, scope: !5250)
!5255 = !DILocation(line: 432, column: 14, scope: !5208)
!5256 = !DILocation(line: 432, column: 32, scope: !5208)
!5257 = !DILocation(line: 433, column: 26, scope: !5208)
!5258 = !DILocation(line: 433, column: 24, scope: !5208)
!5259 = !DILocation(line: 433, column: 44, scope: !5208)
!5260 = !DILocation(line: 432, column: 13, scope: !5209)
!5261 = !DILocation(line: 435, column: 38, scope: !5207)
!5262 = !DILocation(line: 0, scope: !5207)
!5263 = !DILocation(line: 445, column: 3, scope: !5207)
!5264 = !DILocation(line: 447, column: 20, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5207, file: !4609, line: 447, column: 7)
!5266 = !DILocation(line: 447, column: 18, scope: !5265)
!5267 = !DILocation(line: 447, column: 7, scope: !5207)
!5268 = !DILocation(line: 448, column: 27, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5265, file: !4609, line: 447, column: 39)
!5270 = !DILocation(line: 448, column: 4, scope: !5269)
!5271 = !DILocation(line: 449, column: 4, scope: !5269)
!5272 = !DILocation(line: 450, column: 3, scope: !5269)
!5273 = !DILocation(line: 452, column: 3, scope: !5207)
!5274 = !DILocation(line: 453, column: 3, scope: !5207)
!5275 = !DILocation(line: 474, column: 15, scope: !5193)
!5276 = !DILocation(line: 476, column: 11, scope: !5215)
!5277 = !DILocation(line: 476, column: 6, scope: !5193)
!5278 = !DILocation(line: 477, column: 42, scope: !5214)
!5279 = !DILocation(line: 477, column: 22, scope: !5214)
!5280 = !DILocation(line: 477, column: 60, scope: !5214)
!5281 = !DILocation(line: 0, scope: !5214)
!5282 = !DILocation(line: 479, column: 21, scope: !5214)
!5283 = !DILocation(line: 479, column: 3, scope: !5214)
!5284 = !DILocation(line: 480, column: 3, scope: !5214)
!5285 = !DILocation(line: 481, column: 2, scope: !5214)
!5286 = !DILocation(line: 483, column: 1, scope: !5193)
!5287 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2418, file: !2418, line: 245, type: !5288, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5290)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{!132, !2431, !4735}
!5290 = !{!5291, !5292}
!5291 = !DILocalVariable(name: "h", arg: 1, scope: !5287, file: !2418, line: 245, type: !2431)
!5292 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5287, file: !2418, line: 245, type: !4735)
!5293 = !DILocation(line: 0, scope: !5287)
!5294 = !DILocation(line: 247, column: 20, scope: !5287)
!5295 = !DILocation(line: 247, column: 33, scope: !5287)
!5296 = !DILocation(line: 247, column: 2, scope: !5287)
!5297 = distinct !DISubprogram(name: "sys_heap_init", scope: !4609, file: !4609, line: 485, type: !5298, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5300)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{null, !4612, !102, !132}
!5300 = !{!5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310}
!5301 = !DILocalVariable(name: "heap", arg: 1, scope: !5297, file: !4609, line: 485, type: !4612)
!5302 = !DILocalVariable(name: "mem", arg: 2, scope: !5297, file: !4609, line: 485, type: !102)
!5303 = !DILocalVariable(name: "bytes", arg: 3, scope: !5297, file: !4609, line: 485, type: !132)
!5304 = !DILocalVariable(name: "addr", scope: !5297, file: !4609, line: 502, type: !22)
!5305 = !DILocalVariable(name: "end", scope: !5297, file: !4609, line: 503, type: !22)
!5306 = !DILocalVariable(name: "heap_sz", scope: !5297, file: !4609, line: 504, type: !4735)
!5307 = !DILocalVariable(name: "h", scope: !5297, file: !4609, line: 509, type: !2431)
!5308 = !DILocalVariable(name: "nb_buckets", scope: !5297, file: !4609, line: 520, type: !103)
!5309 = !DILocalVariable(name: "chunk0_size", scope: !5297, file: !4609, line: 521, type: !4735)
!5310 = !DILocalVariable(name: "i", scope: !5311, file: !4609, line: 526, type: !103)
!5311 = distinct !DILexicalBlock(scope: !5297, file: !4609, line: 526, column: 2)
!5312 = !DILocation(line: 0, scope: !5297)
!5313 = !DILocation(line: 499, column: 8, scope: !5297)
!5314 = !DILocation(line: 502, column: 19, scope: !5297)
!5315 = !DILocation(line: 503, column: 18, scope: !5297)
!5316 = !DILocation(line: 504, column: 27, scope: !5297)
!5317 = !DILocation(line: 504, column: 35, scope: !5297)
!5318 = !DILocation(line: 509, column: 21, scope: !5297)
!5319 = !DILocation(line: 510, column: 8, scope: !5297)
!5320 = !DILocation(line: 510, column: 13, scope: !5297)
!5321 = !DILocation(line: 511, column: 5, scope: !5297)
!5322 = !DILocation(line: 511, column: 15, scope: !5297)
!5323 = !DILocation(line: 512, column: 5, scope: !5297)
!5324 = !DILocation(line: 512, column: 19, scope: !5297)
!5325 = !DILocation(line: 520, column: 19, scope: !5297)
!5326 = !DILocation(line: 522, column: 21, scope: !5297)
!5327 = !DILocation(line: 521, column: 56, scope: !5297)
!5328 = !DILocation(line: 521, column: 26, scope: !5297)
!5329 = !DILocation(line: 0, scope: !5311)
!5330 = !DILocation(line: 526, column: 20, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5311, file: !4609, line: 526, column: 2)
!5332 = !DILocation(line: 526, column: 2, scope: !5311)
!5333 = !DILocation(line: 531, column: 2, scope: !5297)
!5334 = !DILocation(line: 532, column: 2, scope: !5297)
!5335 = !DILocation(line: 533, column: 2, scope: !5297)
!5336 = !DILocation(line: 536, column: 41, scope: !5297)
!5337 = !DILocation(line: 536, column: 2, scope: !5297)
!5338 = !DILocation(line: 537, column: 2, scope: !5297)
!5339 = !DILocation(line: 540, column: 2, scope: !5297)
!5340 = !DILocation(line: 541, column: 2, scope: !5297)
!5341 = !DILocation(line: 542, column: 2, scope: !5297)
!5342 = !DILocation(line: 544, column: 2, scope: !5297)
!5343 = !DILocation(line: 545, column: 1, scope: !5297)
!5344 = !DILocation(line: 527, column: 17, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5331, file: !4609, line: 526, column: 39)
!5346 = !DILocation(line: 527, column: 22, scope: !5345)
!5347 = !DILocation(line: 526, column: 35, scope: !5331)
!5348 = distinct !{!5348, !5332, !5349}
!5349 = !DILocation(line: 528, column: 2, scope: !5311)
!5350 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2451, file: !2451, line: 1338, type: !5351, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5359)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{!103, !3813, !102, !331, !5353, !108}
!5353 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3452, line: 99, baseType: !5354)
!5354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3452, line: 40, baseType: !5355)
!5355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2451, baseType: !5356)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5357)
!5357 = !{!5358}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5356, file: !2451, baseType: !102, size: 32)
!5359 = !{!5360, !5361, !5362, !5363, !5364, !5365, !5369, !5370, !5371, !5373, !5378, !5421, !5424, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5436, !5437, !5438, !5442, !5445, !5447, !5450, !5451, !5452, !5457, !5463, !5466, !5470, !5476, !5480, !5483, !5485, !5488}
!5360 = !DILocalVariable(name: "out", arg: 1, scope: !5350, file: !2451, line: 1338, type: !3813)
!5361 = !DILocalVariable(name: "ctx", arg: 2, scope: !5350, file: !2451, line: 1338, type: !102)
!5362 = !DILocalVariable(name: "fp", arg: 3, scope: !5350, file: !2451, line: 1338, type: !331)
!5363 = !DILocalVariable(name: "ap", arg: 4, scope: !5350, file: !2451, line: 1339, type: !5353)
!5364 = !DILocalVariable(name: "flags", arg: 5, scope: !5350, file: !2451, line: 1339, type: !108)
!5365 = !DILocalVariable(name: "buf", scope: !5350, file: !2451, line: 1341, type: !5366)
!5366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 176, elements: !5367)
!5367 = !{!5368}
!5368 = !DISubrange(count: 22)
!5369 = !DILocalVariable(name: "count", scope: !5350, file: !2451, line: 1342, type: !132)
!5370 = !DILocalVariable(name: "sint", scope: !5350, file: !2451, line: 1343, type: !2470)
!5371 = !DILocalVariable(name: "tagged_ap", scope: !5350, file: !2451, line: 1345, type: !5372)
!5372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5373 = !DILocalVariable(name: "rc", scope: !5374, file: !2451, line: 1377, type: !103)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !2451, line: 1377, column: 4)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !2451, line: 1376, column: 19)
!5376 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1376, column: 7)
!5377 = distinct !DILexicalBlock(scope: !5350, file: !2451, line: 1375, column: 19)
!5378 = !DILocalVariable(name: "state", scope: !5377, file: !2451, line: 1395, type: !5379)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5350, file: !2451, line: 1392, size: 192, elements: !5380)
!5380 = !{!5381, !5389}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5379, file: !2451, line: 1393, baseType: !5382, size: 64)
!5382 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2451, line: 166, size: 64, elements: !5383)
!5383 = !{!5384, !5385, !5386, !5387, !5388}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5382, file: !2451, line: 168, baseType: !2470, size: 64)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5382, file: !2451, line: 171, baseType: !2473, size: 64)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5382, file: !2451, line: 174, baseType: !366, size: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5382, file: !2451, line: 177, baseType: !364, size: 64)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5382, file: !2451, line: 180, baseType: !102, size: 32)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5379, file: !2451, line: 1394, baseType: !5390, size: 96, offset: 64)
!5390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2451, line: 189, size: 96, elements: !5391)
!5391 = !{!5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5416}
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5390, file: !2451, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5390, file: !2451, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5390, file: !2451, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5390, file: !2451, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5390, file: !2451, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5390, file: !2451, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5390, file: !2451, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5390, file: !2451, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5390, file: !2451, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5390, file: !2451, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5390, file: !2451, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5390, file: !2451, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5390, file: !2451, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5390, file: !2451, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5390, file: !2451, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5390, file: !2451, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5390, file: !2451, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5390, file: !2451, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5390, file: !2451, line: 260, baseType: !186, size: 8, offset: 24)
!5411 = !DIDerivedType(tag: DW_TAG_member, scope: !5390, file: !2451, line: 262, baseType: !5412, size: 32, offset: 32)
!5412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5390, file: !2451, line: 262, size: 32, elements: !5413)
!5413 = !{!5414, !5415}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5412, file: !2451, line: 267, baseType: !103, size: 32)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5412, file: !2451, line: 289, baseType: !103, size: 32)
!5416 = !DIDerivedType(tag: DW_TAG_member, scope: !5390, file: !2451, line: 292, baseType: !5417, size: 32, offset: 64)
!5417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5390, file: !2451, line: 292, size: 32, elements: !5418)
!5418 = !{!5419, !5420}
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5417, file: !2451, line: 297, baseType: !103, size: 32)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5417, file: !2451, line: 306, baseType: !103, size: 32)
!5421 = !DILocalVariable(name: "conv", scope: !5377, file: !2451, line: 1400, type: !5422)
!5422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5423)
!5423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5390, size: 32)
!5424 = !DILocalVariable(name: "value", scope: !5377, file: !2451, line: 1401, type: !5425)
!5425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5426)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 32)
!5427 = !DILocalVariable(name: "sp", scope: !5377, file: !2451, line: 1402, type: !331)
!5428 = !DILocalVariable(name: "width", scope: !5377, file: !2451, line: 1403, type: !103)
!5429 = !DILocalVariable(name: "precision", scope: !5377, file: !2451, line: 1404, type: !103)
!5430 = !DILocalVariable(name: "bps", scope: !5377, file: !2451, line: 1405, type: !331)
!5431 = !DILocalVariable(name: "bpe", scope: !5377, file: !2451, line: 1406, type: !331)
!5432 = !DILocalVariable(name: "sign", scope: !5377, file: !2451, line: 1407, type: !272)
!5433 = !DILocalVariable(name: "arg", scope: !5434, file: !2451, line: 1432, type: !103)
!5434 = distinct !DILexicalBlock(scope: !5435, file: !2451, line: 1431, column: 24)
!5435 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1431, column: 7)
!5436 = !DILocalVariable(name: "specifier_cat", scope: !5377, file: !2451, line: 1468, type: !2450)
!5437 = !DILocalVariable(name: "length_mod", scope: !5377, file: !2451, line: 1470, type: !2458)
!5438 = !DILocalVariable(name: "rc", scope: !5439, file: !2451, line: 1575, type: !103)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !2451, line: 1575, column: 4)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !2451, line: 1574, column: 43)
!5441 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1574, column: 7)
!5442 = !DILocalVariable(name: "rc", scope: !5443, file: !2451, line: 1584, type: !103)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !2451, line: 1584, column: 4)
!5444 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1582, column: 28)
!5445 = !DILocalVariable(name: "len", scope: !5446, file: !2451, line: 1589, type: !132)
!5446 = distinct !DILexicalBlock(scope: !5444, file: !2451, line: 1586, column: 13)
!5447 = !DILocalVariable(name: "len", scope: !5448, file: !2451, line: 1641, type: !132)
!5448 = distinct !DILexicalBlock(scope: !5449, file: !2451, line: 1640, column: 24)
!5449 = distinct !DILexicalBlock(scope: !5444, file: !2451, line: 1640, column: 8)
!5450 = !DILocalVariable(name: "nj_len", scope: !5377, file: !2451, line: 1722, type: !132)
!5451 = !DILocalVariable(name: "pad_len", scope: !5377, file: !2451, line: 1723, type: !103)
!5452 = !DILocalVariable(name: "pad", scope: !5453, file: !2451, line: 1751, type: !272)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !2451, line: 1750, column: 26)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !2451, line: 1750, column: 8)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !2451, line: 1747, column: 18)
!5456 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1747, column: 7)
!5457 = !DILocalVariable(name: "rc", scope: !5458, file: !2451, line: 1758, type: !103)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !2451, line: 1758, column: 7)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !2451, line: 1757, column: 21)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !2451, line: 1757, column: 10)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !2451, line: 1756, column: 26)
!5462 = distinct !DILexicalBlock(scope: !5453, file: !2451, line: 1756, column: 9)
!5463 = !DILocalVariable(name: "rc", scope: !5464, file: !2451, line: 1765, type: !103)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !2451, line: 1765, column: 6)
!5465 = distinct !DILexicalBlock(scope: !5453, file: !2451, line: 1764, column: 25)
!5466 = !DILocalVariable(name: "rc", scope: !5467, file: !2451, line: 1774, type: !103)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !2451, line: 1774, column: 4)
!5468 = distinct !DILexicalBlock(scope: !5469, file: !2451, line: 1773, column: 18)
!5469 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1773, column: 7)
!5470 = !DILocalVariable(name: "rc", scope: !5471, file: !2451, line: 1819, type: !103)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !2451, line: 1819, column: 5)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !2451, line: 1818, column: 44)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !2451, line: 1818, column: 8)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !2451, line: 1817, column: 10)
!5475 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1777, column: 7)
!5476 = !DILocalVariable(name: "rc", scope: !5477, file: !2451, line: 1823, type: !103)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !2451, line: 1823, column: 5)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !2451, line: 1822, column: 26)
!5479 = distinct !DILexicalBlock(scope: !5474, file: !2451, line: 1822, column: 8)
!5480 = !DILocalVariable(name: "rc", scope: !5481, file: !2451, line: 1828, type: !103)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !2451, line: 1828, column: 5)
!5482 = distinct !DILexicalBlock(scope: !5474, file: !2451, line: 1827, column: 26)
!5483 = !DILocalVariable(name: "rc", scope: !5484, file: !2451, line: 1831, type: !103)
!5484 = distinct !DILexicalBlock(scope: !5474, file: !2451, line: 1831, column: 4)
!5485 = !DILocalVariable(name: "rc", scope: !5486, file: !2451, line: 1836, type: !103)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !2451, line: 1836, column: 4)
!5487 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1835, column: 21)
!5488 = !DILabel(scope: !5444, name: "prec_int_pad0", file: !2451, line: 1634)
!5489 = !DILocation(line: 0, scope: !5350)
!5490 = !DILocation(line: 1341, column: 2, scope: !5350)
!5491 = !DILocation(line: 1341, column: 7, scope: !5350)
!5492 = !DILocation(line: 1375, column: 2, scope: !5350)
!5493 = !DILocation(line: 1342, column: 9, scope: !5350)
!5494 = !DILocation(line: 1375, column: 9, scope: !5350)
!5495 = !DILocation(line: 1377, column: 4, scope: !5374)
!5496 = !DILocation(line: 0, scope: !5374)
!5497 = !DILocation(line: 1377, column: 4, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5374, file: !2451, line: 1377, column: 4)
!5499 = distinct !{!5499, !5492, !5500}
!5500 = !DILocation(line: 1839, column: 2, scope: !5350)
!5501 = !DILocation(line: 1392, column: 3, scope: !5377)
!5502 = !DILocation(line: 1395, column: 5, scope: !5377)
!5503 = !DILocation(line: 0, scope: !5377)
!5504 = !DILocation(line: 1409, column: 8, scope: !5377)
!5505 = !DILocation(line: 1414, column: 13, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1414, column: 7)
!5507 = !DILocation(line: 1414, column: 7, scope: !5377)
!5508 = !DILocation(line: 1415, column: 12, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !2451, line: 1414, column: 25)
!5510 = !DILocation(line: 1417, column: 14, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5509, file: !2451, line: 1417, column: 8)
!5512 = !DILocation(line: 1417, column: 8, scope: !5509)
!5513 = !DILocation(line: 1418, column: 21, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5511, file: !2451, line: 1417, column: 19)
!5515 = !DILocation(line: 1419, column: 13, scope: !5514)
!5516 = !DILocation(line: 1420, column: 4, scope: !5514)
!5517 = !DILocation(line: 1421, column: 20, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5506, file: !2451, line: 1421, column: 14)
!5519 = !DILocation(line: 1421, column: 14, scope: !5506)
!5520 = !DILocation(line: 1431, column: 13, scope: !5435)
!5521 = !DILocation(line: 1431, column: 7, scope: !5377)
!5522 = !DILocation(line: 1432, column: 14, scope: !5434)
!5523 = !DILocation(line: 0, scope: !5434)
!5524 = !DILocation(line: 1434, column: 12, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5434, file: !2451, line: 1434, column: 8)
!5526 = !DILocation(line: 1434, column: 8, scope: !5434)
!5527 = !DILocation(line: 1435, column: 24, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5525, file: !2451, line: 1434, column: 17)
!5529 = !DILocation(line: 1436, column: 4, scope: !5528)
!5530 = !DILocation(line: 1439, column: 20, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5435, file: !2451, line: 1439, column: 14)
!5532 = !DILocation(line: 1439, column: 14, scope: !5435)
!5533 = !DILocation(line: 1469, column: 37, scope: !5377)
!5534 = !DILocation(line: 1448, column: 20, scope: !5377)
!5535 = !DILocation(line: 1449, column: 22, scope: !5377)
!5536 = !DILocation(line: 1471, column: 34, scope: !5377)
!5537 = !DILocation(line: 1478, column: 7, scope: !5377)
!5538 = !DILocation(line: 1479, column: 4, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !2451, line: 1478, column: 40)
!5540 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1478, column: 7)
!5541 = !DILocation(line: 1484, column: 19, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5539, file: !2451, line: 1479, column: 24)
!5543 = !DILocation(line: 1484, column: 17, scope: !5542)
!5544 = !DILocation(line: 1485, column: 5, scope: !5542)
!5545 = !DILocation(line: 1492, column: 20, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5547, file: !2451, line: 1491, column: 12)
!5547 = distinct !DILexicalBlock(scope: !5542, file: !2451, line: 1487, column: 9)
!5548 = !DILocation(line: 1492, column: 18, scope: !5546)
!5549 = !DILocation(line: 1494, column: 5, scope: !5542)
!5550 = !DILocation(line: 1497, column: 23, scope: !5542)
!5551 = !DILocation(line: 1496, column: 17, scope: !5542)
!5552 = !DILocation(line: 1498, column: 5, scope: !5542)
!5553 = !DILocation(line: 1501, column: 23, scope: !5542)
!5554 = !DILocation(line: 1500, column: 17, scope: !5542)
!5555 = !DILocation(line: 1502, column: 5, scope: !5542)
!5556 = !DILocation(line: 1513, column: 23, scope: !5542)
!5557 = !DILocation(line: 1513, column: 6, scope: !5542)
!5558 = !DILocation(line: 1512, column: 17, scope: !5542)
!5559 = !DILocation(line: 1514, column: 5, scope: !5542)
!5560 = !DILocation(line: 0, scope: !5542)
!5561 = !DILocation(line: 1516, column: 8, scope: !5539)
!5562 = !DILocation(line: 1517, column: 19, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !2451, line: 1516, column: 33)
!5564 = distinct !DILexicalBlock(scope: !5539, file: !2451, line: 1516, column: 8)
!5565 = !DILocation(line: 1517, column: 17, scope: !5563)
!5566 = !DILocation(line: 1518, column: 4, scope: !5563)
!5567 = !DILocation(line: 1519, column: 19, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !2451, line: 1518, column: 39)
!5569 = distinct !DILexicalBlock(scope: !5564, file: !2451, line: 1518, column: 15)
!5570 = !DILocation(line: 1519, column: 17, scope: !5568)
!5571 = !DILocation(line: 1520, column: 4, scope: !5568)
!5572 = !DILocation(line: 1522, column: 4, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5574, file: !2451, line: 1521, column: 47)
!5574 = distinct !DILexicalBlock(scope: !5540, file: !2451, line: 1521, column: 14)
!5575 = !DILocation(line: 1527, column: 19, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5573, file: !2451, line: 1522, column: 24)
!5577 = !DILocation(line: 1527, column: 17, scope: !5576)
!5578 = !DILocation(line: 1528, column: 5, scope: !5576)
!5579 = !DILocation(line: 0, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !2451, line: 1530, column: 9)
!5581 = !DILocation(line: 1540, column: 23, scope: !5576)
!5582 = !DILocation(line: 1539, column: 17, scope: !5576)
!5583 = !DILocation(line: 1542, column: 5, scope: !5576)
!5584 = !DILocation(line: 1545, column: 23, scope: !5576)
!5585 = !DILocation(line: 1544, column: 17, scope: !5576)
!5586 = !DILocation(line: 1547, column: 5, scope: !5576)
!5587 = !DILocation(line: 1551, column: 23, scope: !5576)
!5588 = !DILocation(line: 1551, column: 6, scope: !5576)
!5589 = !DILocation(line: 1550, column: 17, scope: !5576)
!5590 = !DILocation(line: 1552, column: 5, scope: !5576)
!5591 = !DILocation(line: 0, scope: !5576)
!5592 = !DILocation(line: 1554, column: 8, scope: !5573)
!5593 = !DILocation(line: 1555, column: 19, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !2451, line: 1554, column: 33)
!5595 = distinct !DILexicalBlock(scope: !5573, file: !2451, line: 1554, column: 8)
!5596 = !DILocation(line: 1555, column: 17, scope: !5594)
!5597 = !DILocation(line: 1556, column: 4, scope: !5594)
!5598 = !DILocation(line: 1557, column: 19, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !2451, line: 1556, column: 39)
!5600 = distinct !DILexicalBlock(scope: !5595, file: !2451, line: 1556, column: 15)
!5601 = !DILocation(line: 1557, column: 17, scope: !5599)
!5602 = !DILocation(line: 1558, column: 4, scope: !5599)
!5603 = !DILocation(line: 0, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5605, file: !2451, line: 1560, column: 8)
!5605 = distinct !DILexicalBlock(scope: !5606, file: !2451, line: 1559, column: 45)
!5606 = distinct !DILexicalBlock(scope: !5574, file: !2451, line: 1559, column: 14)
!5607 = !DILocation(line: 1566, column: 17, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5609, file: !2451, line: 1565, column: 46)
!5609 = distinct !DILexicalBlock(scope: !5606, file: !2451, line: 1565, column: 14)
!5610 = !DILocation(line: 1566, column: 15, scope: !5608)
!5611 = !DILocation(line: 1567, column: 3, scope: !5608)
!5612 = !DILocation(line: 1574, column: 21, scope: !5441)
!5613 = !DILocation(line: 1575, column: 4, scope: !5439)
!5614 = !DILocation(line: 0, scope: !5439)
!5615 = !DILocation(line: 1575, column: 4, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5439, file: !2451, line: 1575, column: 4)
!5617 = !DILocation(line: 1582, column: 17, scope: !5377)
!5618 = !DILocation(line: 1582, column: 3, scope: !5377)
!5619 = !DILocation(line: 1584, column: 4, scope: !5443)
!5620 = !DILocation(line: 0, scope: !5443)
!5621 = !DILocation(line: 1584, column: 4, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5443, file: !2451, line: 1584, column: 4)
!5623 = !DILocation(line: 1587, column: 31, scope: !5446)
!5624 = !DILocation(line: 1591, column: 18, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5446, file: !2451, line: 1591, column: 8)
!5626 = !DILocation(line: 1591, column: 8, scope: !5446)
!5627 = !DILocation(line: 1592, column: 11, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5625, file: !2451, line: 1591, column: 24)
!5629 = !DILocation(line: 0, scope: !5446)
!5630 = !DILocation(line: 1593, column: 4, scope: !5628)
!5631 = !DILocation(line: 1594, column: 11, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5625, file: !2451, line: 1593, column: 11)
!5633 = !DILocation(line: 1604, column: 51, scope: !5444)
!5634 = !DILocation(line: 1604, column: 13, scope: !5444)
!5635 = !DILocation(line: 1604, column: 11, scope: !5444)
!5636 = !DILocation(line: 1606, column: 4, scope: !5444)
!5637 = !DILocation(line: 1609, column: 14, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5444, file: !2451, line: 1609, column: 8)
!5639 = !DILocation(line: 1609, column: 8, scope: !5444)
!5640 = !DILocation(line: 1619, column: 18, scope: !5444)
!5641 = !DILocation(line: 1620, column: 13, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5444, file: !2451, line: 1620, column: 8)
!5643 = !DILocation(line: 1620, column: 8, scope: !5444)
!5644 = !DILocation(line: 1622, column: 36, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5642, file: !2451, line: 1620, column: 18)
!5646 = !DILocation(line: 1622, column: 17, scope: !5645)
!5647 = !DILocation(line: 1623, column: 4, scope: !5645)
!5648 = !DILocation(line: 1632, column: 29, scope: !5444)
!5649 = !DILocation(line: 1632, column: 10, scope: !5444)
!5650 = !DILocation(line: 1632, column: 4, scope: !5444)
!5651 = !DILocation(line: 1407, column: 8, scope: !5377)
!5652 = !DILocation(line: 0, scope: !5444)
!5653 = !DILocation(line: 1634, column: 3, scope: !5444)
!5654 = !DILocation(line: 1640, column: 18, scope: !5449)
!5655 = !DILocation(line: 1640, column: 8, scope: !5444)
!5656 = !DILocation(line: 1729, column: 13, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1729, column: 7)
!5658 = !DILocation(line: 1641, column: 22, scope: !5448)
!5659 = !DILocation(line: 0, scope: !5448)
!5660 = !DILocation(line: 1646, column: 21, scope: !5448)
!5661 = !DILocation(line: 1649, column: 13, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5448, file: !2451, line: 1649, column: 9)
!5663 = !DILocation(line: 1649, column: 9, scope: !5448)
!5664 = !DILocation(line: 1650, column: 35, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5662, file: !2451, line: 1649, column: 34)
!5666 = !DILocation(line: 1650, column: 23, scope: !5665)
!5667 = !DILocation(line: 1651, column: 5, scope: !5665)
!5668 = !DILocation(line: 1660, column: 15, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5444, file: !2451, line: 1660, column: 8)
!5670 = !DILocation(line: 1660, column: 19, scope: !5669)
!5671 = !DILocation(line: 1660, column: 8, scope: !5444)
!5672 = !DILocation(line: 1661, column: 23, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5669, file: !2451, line: 1660, column: 28)
!5674 = !DILocation(line: 1661, column: 11, scope: !5673)
!5675 = !DILocation(line: 1665, column: 22, scope: !5673)
!5676 = !DILocation(line: 1666, column: 21, scope: !5673)
!5677 = !DILocation(line: 1668, column: 5, scope: !5673)
!5678 = !DILocation(line: 1677, column: 30, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !2451, line: 1676, column: 49)
!5680 = distinct !DILexicalBlock(scope: !5444, file: !2451, line: 1676, column: 8)
!5681 = !DILocation(line: 1677, column: 5, scope: !5679)
!5682 = !DILocation(line: 1680, column: 4, scope: !5444)
!5683 = !DILocation(line: 0, scope: !5625)
!5684 = !DILocation(line: 1597, column: 14, scope: !5446)
!5685 = !DILocation(line: 1699, column: 11, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1699, column: 7)
!5687 = !DILocation(line: 1699, column: 7, scope: !5377)
!5688 = !DILocation(line: 1725, column: 7, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1725, column: 7)
!5690 = !DILocation(line: 1725, column: 12, scope: !5689)
!5691 = !DILocation(line: 1747, column: 13, scope: !5456)
!5692 = !DILocation(line: 1747, column: 7, scope: !5377)
!5693 = !DILocation(line: 1722, column: 24, scope: !5377)
!5694 = !DILocation(line: 1725, column: 7, scope: !5377)
!5695 = !DILocation(line: 1729, column: 7, scope: !5377)
!5696 = !DILocation(line: 1736, column: 13, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5377, file: !2451, line: 1736, column: 7)
!5698 = !DILocation(line: 1735, column: 19, scope: !5377)
!5699 = !DILocation(line: 1736, column: 7, scope: !5377)
!5700 = !DILocation(line: 1748, column: 10, scope: !5455)
!5701 = !DILocation(line: 1750, column: 15, scope: !5454)
!5702 = !DILocation(line: 1750, column: 8, scope: !5455)
!5703 = !DILocation(line: 0, scope: !5453)
!5704 = !DILocation(line: 1756, column: 15, scope: !5462)
!5705 = !DILocation(line: 1756, column: 9, scope: !5453)
!5706 = !DILocation(line: 1758, column: 7, scope: !5458)
!5707 = !DILocation(line: 0, scope: !5458)
!5708 = !DILocation(line: 1758, column: 7, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5458, file: !2451, line: 1758, column: 7)
!5710 = !DILocation(line: 1764, column: 5, scope: !5453)
!5711 = !DILocation(line: 0, scope: !5455)
!5712 = !DILocation(line: 1764, column: 20, scope: !5453)
!5713 = !DILocation(line: 1764, column: 17, scope: !5453)
!5714 = !DILocation(line: 1765, column: 6, scope: !5464)
!5715 = !DILocation(line: 0, scope: !5464)
!5716 = !DILocation(line: 1765, column: 6, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5464, file: !2451, line: 1765, column: 6)
!5718 = distinct !{!5718, !5710, !5719}
!5719 = !DILocation(line: 1766, column: 5, scope: !5453)
!5720 = !DILocation(line: 1773, column: 12, scope: !5469)
!5721 = !DILocation(line: 1773, column: 7, scope: !5377)
!5722 = !DILocation(line: 1773, column: 7, scope: !5469)
!5723 = !DILocation(line: 1774, column: 4, scope: !5467)
!5724 = !DILocation(line: 0, scope: !5467)
!5725 = !DILocation(line: 1774, column: 4, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5467, file: !2451, line: 1774, column: 4)
!5727 = !DILocation(line: 1818, column: 8, scope: !5473)
!5728 = !DILocation(line: 1818, column: 27, scope: !5473)
!5729 = !DILocation(line: 1818, column: 25, scope: !5473)
!5730 = !DILocation(line: 1818, column: 8, scope: !5474)
!5731 = !DILocation(line: 1819, column: 5, scope: !5471)
!5732 = !DILocation(line: 0, scope: !5471)
!5733 = !DILocation(line: 1819, column: 5, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5471, file: !2451, line: 1819, column: 5)
!5735 = !DILocation(line: 1822, column: 14, scope: !5479)
!5736 = !DILocation(line: 1822, column: 8, scope: !5474)
!5737 = !DILocation(line: 1823, column: 5, scope: !5477)
!5738 = !DILocation(line: 0, scope: !5477)
!5739 = !DILocation(line: 1823, column: 5, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5477, file: !2451, line: 1823, column: 5)
!5741 = !DILocation(line: 1826, column: 20, scope: !5474)
!5742 = !DILocation(line: 1827, column: 4, scope: !5474)
!5743 = !DILocation(line: 0, scope: !5474)
!5744 = !DILocation(line: 1827, column: 21, scope: !5474)
!5745 = !DILocation(line: 1827, column: 18, scope: !5474)
!5746 = !DILocation(line: 1828, column: 5, scope: !5481)
!5747 = !DILocation(line: 0, scope: !5481)
!5748 = !DILocation(line: 1828, column: 5, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5481, file: !2451, line: 1828, column: 5)
!5750 = distinct !{!5750, !5742, !5751}
!5751 = !DILocation(line: 1829, column: 4, scope: !5474)
!5752 = !DILocation(line: 1831, column: 4, scope: !5484)
!5753 = !DILocation(line: 0, scope: !5484)
!5754 = !DILocation(line: 1831, column: 4, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5484, file: !2451, line: 1831, column: 4)
!5756 = !DILocation(line: 1835, column: 16, scope: !5377)
!5757 = !DILocation(line: 1835, column: 3, scope: !5377)
!5758 = !DILocation(line: 1836, column: 4, scope: !5486)
!5759 = !DILocation(line: 0, scope: !5486)
!5760 = !DILocation(line: 1836, column: 4, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5486, file: !2451, line: 1836, column: 4)
!5762 = !DILocation(line: 1837, column: 4, scope: !5487)
!5763 = distinct !{!5763, !5757, !5764}
!5764 = !DILocation(line: 1838, column: 3, scope: !5377)
!5765 = !DILocation(line: 1844, column: 1, scope: !5350)
!5766 = distinct !DISubprogram(name: "extract_conversion", scope: !2451, file: !2451, line: 642, type: !5767, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!331, !5423, !331}
!5769 = !{!5770, !5771}
!5770 = !DILocalVariable(name: "conv", arg: 1, scope: !5766, file: !2451, line: 642, type: !5423)
!5771 = !DILocalVariable(name: "sp", arg: 2, scope: !5766, file: !2451, line: 643, type: !331)
!5772 = !DILocation(line: 0, scope: !5766)
!5773 = !DILocation(line: 645, column: 10, scope: !5766)
!5774 = !DILocation(line: 653, column: 2, scope: !5766)
!5775 = !DILocation(line: 654, column: 6, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5766, file: !2451, line: 654, column: 6)
!5777 = !DILocation(line: 654, column: 10, scope: !5776)
!5778 = !DILocation(line: 654, column: 6, scope: !5766)
!5779 = !DILocation(line: 655, column: 24, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5776, file: !2451, line: 654, column: 18)
!5781 = !DILocation(line: 655, column: 19, scope: !5780)
!5782 = !DILocation(line: 656, column: 3, scope: !5780)
!5783 = !DILocation(line: 659, column: 7, scope: !5766)
!5784 = !DILocation(line: 660, column: 7, scope: !5766)
!5785 = !DILocation(line: 661, column: 7, scope: !5766)
!5786 = !DILocation(line: 662, column: 7, scope: !5766)
!5787 = !DILocation(line: 663, column: 7, scope: !5766)
!5788 = !DILocation(line: 665, column: 2, scope: !5766)
!5789 = !DILocation(line: 666, column: 1, scope: !5766)
!5790 = distinct !DISubprogram(name: "outs", scope: !2451, file: !2451, line: 1319, type: !5791, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5793)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!103, !3813, !102, !331, !331}
!5793 = !{!5794, !5795, !5796, !5797, !5798, !5799}
!5794 = !DILocalVariable(name: "out", arg: 1, scope: !5790, file: !2451, line: 1319, type: !3813)
!5795 = !DILocalVariable(name: "ctx", arg: 2, scope: !5790, file: !2451, line: 1320, type: !102)
!5796 = !DILocalVariable(name: "sp", arg: 3, scope: !5790, file: !2451, line: 1321, type: !331)
!5797 = !DILocalVariable(name: "ep", arg: 4, scope: !5790, file: !2451, line: 1322, type: !331)
!5798 = !DILocalVariable(name: "count", scope: !5790, file: !2451, line: 1324, type: !132)
!5799 = !DILocalVariable(name: "rc", scope: !5800, file: !2451, line: 1327, type: !103)
!5800 = distinct !DILexicalBlock(scope: !5790, file: !2451, line: 1326, column: 45)
!5801 = !DILocation(line: 0, scope: !5790)
!5802 = !DILocation(line: 1326, column: 2, scope: !5790)
!5803 = !DILocation(line: 1324, column: 9, scope: !5790)
!5804 = !DILocation(line: 1326, column: 13, scope: !5790)
!5805 = !DILocation(line: 1326, column: 19, scope: !5790)
!5806 = !DILocation(line: 1327, column: 21, scope: !5800)
!5807 = !DILocation(line: 1326, column: 36, scope: !5790)
!5808 = !DILocation(line: 1326, column: 39, scope: !5790)
!5809 = !DILocation(line: 1327, column: 24, scope: !5800)
!5810 = !DILocation(line: 1327, column: 16, scope: !5800)
!5811 = !DILocation(line: 1327, column: 12, scope: !5800)
!5812 = !DILocation(line: 0, scope: !5800)
!5813 = !DILocation(line: 1329, column: 10, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5800, file: !2451, line: 1329, column: 7)
!5815 = !DILocation(line: 1329, column: 7, scope: !5800)
!5816 = distinct !{!5816, !5802, !5817}
!5817 = !DILocation(line: 1333, column: 2, scope: !5790)
!5818 = !DILocation(line: 1336, column: 1, scope: !5790)
!5819 = distinct !DISubprogram(name: "encode_uint", scope: !2451, file: !2451, line: 788, type: !5820, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5822)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{!271, !2473, !5423, !271, !331}
!5822 = !{!5823, !5824, !5825, !5826, !5827, !5828, !5830, !5831}
!5823 = !DILocalVariable(name: "value", arg: 1, scope: !5819, file: !2451, line: 788, type: !2473)
!5824 = !DILocalVariable(name: "conv", arg: 2, scope: !5819, file: !2451, line: 789, type: !5423)
!5825 = !DILocalVariable(name: "bps", arg: 3, scope: !5819, file: !2451, line: 790, type: !271)
!5826 = !DILocalVariable(name: "bpe", arg: 4, scope: !5819, file: !2451, line: 791, type: !331)
!5827 = !DILocalVariable(name: "upcase", scope: !5819, file: !2451, line: 793, type: !131)
!5828 = !DILocalVariable(name: "radix", scope: !5819, file: !2451, line: 794, type: !5829)
!5829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5830 = !DILocalVariable(name: "bp", scope: !5819, file: !2451, line: 795, type: !271)
!5831 = !DILocalVariable(name: "lsv", scope: !5832, file: !2451, line: 798, type: !32)
!5832 = distinct !DILexicalBlock(scope: !5819, file: !2451, line: 797, column: 5)
!5833 = !DILocation(line: 0, scope: !5819)
!5834 = !DILocation(line: 793, column: 35, scope: !5819)
!5835 = !DILocation(line: 793, column: 24, scope: !5819)
!5836 = !DILocation(line: 793, column: 16, scope: !5819)
!5837 = !DILocation(line: 794, column: 29, scope: !5819)
!5838 = !DILocation(line: 795, column: 24, scope: !5819)
!5839 = !DILocation(line: 795, column: 17, scope: !5819)
!5840 = !DILocation(line: 797, column: 2, scope: !5819)
!5841 = !DILocation(line: 802, column: 9, scope: !5832)
!5842 = !DILocation(line: 798, column: 22, scope: !5832)
!5843 = !DILocation(line: 0, scope: !5832)
!5844 = !DILocation(line: 800, column: 16, scope: !5832)
!5845 = !DILocation(line: 800, column: 11, scope: !5832)
!5846 = !DILocation(line: 800, column: 4, scope: !5832)
!5847 = !DILocation(line: 800, column: 9, scope: !5832)
!5848 = !DILocation(line: 803, column: 18, scope: !5819)
!5849 = !DILocation(line: 803, column: 24, scope: !5819)
!5850 = !DILocation(line: 803, column: 2, scope: !5832)
!5851 = distinct !{!5851, !5840, !5852}
!5852 = !DILocation(line: 803, column: 37, scope: !5819)
!5853 = !DILocation(line: 808, column: 12, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5819, file: !2451, line: 808, column: 6)
!5855 = !DILocation(line: 808, column: 6, scope: !5819)
!5856 = !DILocation(line: 809, column: 7, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5854, file: !2451, line: 808, column: 23)
!5858 = !DILocation(line: 813, column: 3, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5860, file: !2451, line: 811, column: 27)
!5860 = distinct !DILexicalBlock(scope: !5861, file: !2451, line: 811, column: 14)
!5861 = distinct !DILexicalBlock(scope: !5857, file: !2451, line: 809, column: 7)
!5862 = !DILocation(line: 0, scope: !5861)
!5863 = !DILocation(line: 818, column: 2, scope: !5819)
!5864 = distinct !DISubprogram(name: "store_count", scope: !2451, file: !2451, line: 1280, type: !5865, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5869)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{null, !5867, !102, !103}
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 32)
!5868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5390)
!5869 = !{!5870, !5871, !5872}
!5870 = !DILocalVariable(name: "conv", arg: 1, scope: !5864, file: !2451, line: 1280, type: !5867)
!5871 = !DILocalVariable(name: "dp", arg: 2, scope: !5864, file: !2451, line: 1281, type: !102)
!5872 = !DILocalVariable(name: "count", arg: 3, scope: !5864, file: !2451, line: 1282, type: !103)
!5873 = !DILocation(line: 0, scope: !5864)
!5874 = !DILocation(line: 1284, column: 38, scope: !5864)
!5875 = !DILocation(line: 1284, column: 2, scope: !5864)
!5876 = !DILocation(line: 1286, column: 4, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5864, file: !2451, line: 1284, column: 50)
!5878 = !DILocation(line: 1286, column: 14, scope: !5877)
!5879 = !DILocation(line: 1287, column: 3, scope: !5877)
!5880 = !DILocation(line: 1289, column: 24, scope: !5877)
!5881 = !DILocation(line: 1289, column: 22, scope: !5877)
!5882 = !DILocation(line: 1290, column: 3, scope: !5877)
!5883 = !DILocation(line: 1292, column: 18, scope: !5877)
!5884 = !DILocation(line: 1292, column: 4, scope: !5877)
!5885 = !DILocation(line: 1292, column: 16, scope: !5877)
!5886 = !DILocation(line: 1293, column: 3, scope: !5877)
!5887 = !DILocation(line: 1295, column: 4, scope: !5877)
!5888 = !DILocation(line: 1295, column: 15, scope: !5877)
!5889 = !DILocation(line: 1296, column: 3, scope: !5877)
!5890 = !DILocation(line: 1298, column: 22, scope: !5877)
!5891 = !DILocation(line: 1298, column: 4, scope: !5877)
!5892 = !DILocation(line: 1298, column: 20, scope: !5877)
!5893 = !DILocation(line: 1299, column: 3, scope: !5877)
!5894 = !DILocation(line: 1301, column: 21, scope: !5877)
!5895 = !DILocation(line: 1301, column: 4, scope: !5877)
!5896 = !DILocation(line: 1301, column: 19, scope: !5877)
!5897 = !DILocation(line: 1302, column: 3, scope: !5877)
!5898 = !DILocation(line: 1304, column: 4, scope: !5877)
!5899 = !DILocation(line: 1304, column: 17, scope: !5877)
!5900 = !DILocation(line: 1305, column: 3, scope: !5877)
!5901 = !DILocation(line: 1307, column: 4, scope: !5877)
!5902 = !DILocation(line: 1307, column: 20, scope: !5877)
!5903 = !DILocation(line: 1308, column: 3, scope: !5877)
!5904 = !DILocation(line: 1316, column: 1, scope: !5864)
!5905 = distinct !DISubprogram(name: "isupper", scope: !5906, file: !5906, line: 16, type: !390, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5907)
!5906 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5907 = !{!5908}
!5908 = !DILocalVariable(name: "a", arg: 1, scope: !5905, file: !5906, line: 16, type: !103)
!5909 = !DILocation(line: 0, scope: !5905)
!5910 = !DILocation(line: 18, column: 29, scope: !5905)
!5911 = !DILocation(line: 18, column: 45, scope: !5905)
!5912 = !DILocation(line: 18, column: 2, scope: !5905)
!5913 = distinct !DISubprogram(name: "conversion_radix", scope: !2451, file: !2451, line: 761, type: !5914, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5916)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!132, !272}
!5916 = !{!5917}
!5917 = !DILocalVariable(name: "specifier", arg: 1, scope: !5913, file: !2451, line: 761, type: !272)
!5918 = !DILocation(line: 0, scope: !5913)
!5919 = !DILocation(line: 763, column: 2, scope: !5913)
!5920 = !DILocation(line: 770, column: 3, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5913, file: !2451, line: 763, column: 21)
!5922 = !DILocation(line: 774, column: 3, scope: !5921)
!5923 = !DILocation(line: 0, scope: !5921)
!5924 = !DILocation(line: 776, column: 1, scope: !5913)
!5925 = distinct !DISubprogram(name: "extract_flags", scope: !2451, file: !2451, line: 339, type: !5767, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5926)
!5926 = !{!5927, !5928, !5929}
!5927 = !DILocalVariable(name: "conv", arg: 1, scope: !5925, file: !2451, line: 339, type: !5423)
!5928 = !DILocalVariable(name: "sp", arg: 2, scope: !5925, file: !2451, line: 340, type: !331)
!5929 = !DILocalVariable(name: "loop", scope: !5925, file: !2451, line: 342, type: !131)
!5930 = !DILocation(line: 0, scope: !5925)
!5931 = !DILocation(line: 344, column: 2, scope: !5925)
!5932 = !DILocation(line: 345, column: 11, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5925, file: !2451, line: 344, column: 5)
!5934 = !DILocation(line: 345, column: 3, scope: !5933)
!5935 = !DILocation(line: 351, column: 4, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5933, file: !2451, line: 345, column: 16)
!5937 = !DILocation(line: 354, column: 4, scope: !5936)
!5938 = !DILocation(line: 357, column: 4, scope: !5936)
!5939 = !DILocation(line: 360, column: 4, scope: !5936)
!5940 = !DILocation(line: 0, scope: !5936)
!5941 = !DILocation(line: 370, column: 12, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5925, file: !2451, line: 370, column: 6)
!5943 = !DILocation(line: 370, column: 22, scope: !5942)
!5944 = !DILocation(line: 371, column: 19, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5942, file: !2451, line: 370, column: 42)
!5946 = !DILocation(line: 372, column: 2, scope: !5945)
!5947 = !DILocation(line: 376, column: 2, scope: !5925)
!5948 = distinct !DISubprogram(name: "extract_width", scope: !2451, file: !2451, line: 388, type: !5767, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5949)
!5949 = !{!5950, !5951, !5952, !5953}
!5950 = !DILocalVariable(name: "conv", arg: 1, scope: !5948, file: !2451, line: 388, type: !5423)
!5951 = !DILocalVariable(name: "sp", arg: 2, scope: !5948, file: !2451, line: 389, type: !331)
!5952 = !DILocalVariable(name: "wp", scope: !5948, file: !2451, line: 398, type: !331)
!5953 = !DILocalVariable(name: "width", scope: !5948, file: !2451, line: 399, type: !132)
!5954 = !DILocation(line: 0, scope: !5948)
!5955 = !DILocation(line: 391, column: 8, scope: !5948)
!5956 = !DILocation(line: 391, column: 22, scope: !5948)
!5957 = !DILocation(line: 393, column: 6, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5948, file: !2451, line: 393, column: 6)
!5959 = !DILocation(line: 393, column: 10, scope: !5958)
!5960 = !DILocation(line: 393, column: 6, scope: !5948)
!5961 = !DILocation(line: 394, column: 20, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5958, file: !2451, line: 393, column: 18)
!5963 = !DILocation(line: 395, column: 10, scope: !5962)
!5964 = !DILocation(line: 395, column: 3, scope: !5962)
!5965 = !DILocation(line: 399, column: 17, scope: !5948)
!5966 = !DILocation(line: 401, column: 6, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5948, file: !2451, line: 401, column: 6)
!5968 = !DILocation(line: 401, column: 9, scope: !5967)
!5969 = !DILocation(line: 401, column: 6, scope: !5948)
!5970 = !DILocation(line: 402, column: 23, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5967, file: !2451, line: 401, column: 16)
!5972 = !DILocation(line: 403, column: 9, scope: !5971)
!5973 = !DILocation(line: 403, column: 21, scope: !5971)
!5974 = !DILocation(line: 405, column: 11, scope: !5971)
!5975 = !DILocation(line: 404, column: 21, scope: !5971)
!5976 = !DILocation(line: 406, column: 2, scope: !5971)
!5977 = !DILocation(line: 409, column: 1, scope: !5948)
!5978 = distinct !DISubprogram(name: "extract_prec", scope: !2451, file: !2451, line: 420, type: !5767, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5979)
!5979 = !{!5980, !5981, !5982}
!5980 = !DILocalVariable(name: "conv", arg: 1, scope: !5978, file: !2451, line: 420, type: !5423)
!5981 = !DILocalVariable(name: "sp", arg: 2, scope: !5978, file: !2451, line: 421, type: !331)
!5982 = !DILocalVariable(name: "prec", scope: !5978, file: !2451, line: 435, type: !132)
!5983 = !DILocation(line: 0, scope: !5978)
!5984 = !DILocation(line: 423, column: 24, scope: !5978)
!5985 = !DILocation(line: 423, column: 28, scope: !5978)
!5986 = !DILocation(line: 423, column: 8, scope: !5978)
!5987 = !DILocation(line: 423, column: 21, scope: !5978)
!5988 = !DILocation(line: 425, column: 6, scope: !5978)
!5989 = !DILocation(line: 428, column: 2, scope: !5978)
!5990 = !DILocation(line: 430, column: 6, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5978, file: !2451, line: 430, column: 6)
!5992 = !DILocation(line: 430, column: 10, scope: !5991)
!5993 = !DILocation(line: 430, column: 6, scope: !5978)
!5994 = !DILocation(line: 431, column: 19, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5991, file: !2451, line: 430, column: 18)
!5996 = !DILocation(line: 432, column: 10, scope: !5995)
!5997 = !DILocation(line: 432, column: 3, scope: !5995)
!5998 = !DILocation(line: 435, column: 16, scope: !5978)
!5999 = !DILocation(line: 437, column: 8, scope: !5978)
!6000 = !DILocation(line: 437, column: 19, scope: !5978)
!6001 = !DILocation(line: 439, column: 10, scope: !5978)
!6002 = !DILocation(line: 438, column: 20, scope: !5978)
!6003 = !DILocation(line: 441, column: 9, scope: !5978)
!6004 = !DILocation(line: 442, column: 1, scope: !5978)
!6005 = distinct !DISubprogram(name: "extract_length", scope: !2451, file: !2451, line: 453, type: !5767, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !6006)
!6006 = !{!6007, !6008}
!6007 = !DILocalVariable(name: "conv", arg: 1, scope: !6005, file: !2451, line: 453, type: !5423)
!6008 = !DILocalVariable(name: "sp", arg: 2, scope: !6005, file: !2451, line: 454, type: !331)
!6009 = !DILocation(line: 0, scope: !6005)
!6010 = !DILocation(line: 456, column: 10, scope: !6005)
!6011 = !DILocation(line: 456, column: 2, scope: !6005)
!6012 = !DILocation(line: 458, column: 8, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !2451, line: 458, column: 7)
!6014 = distinct !DILexicalBlock(scope: !6005, file: !2451, line: 456, column: 15)
!6015 = !DILocation(line: 458, column: 7, scope: !6013)
!6016 = !DILocation(line: 458, column: 13, scope: !6013)
!6017 = !DILocation(line: 0, scope: !6013)
!6018 = !DILocation(line: 458, column: 7, scope: !6014)
!6019 = !DILocation(line: 459, column: 21, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6013, file: !2451, line: 458, column: 21)
!6021 = !DILocation(line: 460, column: 4, scope: !6020)
!6022 = !DILocation(line: 461, column: 3, scope: !6020)
!6023 = !DILocation(line: 462, column: 21, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6013, file: !2451, line: 461, column: 10)
!6025 = !DILocation(line: 466, column: 8, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6014, file: !2451, line: 466, column: 7)
!6027 = !DILocation(line: 466, column: 7, scope: !6026)
!6028 = !DILocation(line: 466, column: 13, scope: !6026)
!6029 = !DILocation(line: 0, scope: !6026)
!6030 = !DILocation(line: 466, column: 7, scope: !6014)
!6031 = !DILocation(line: 467, column: 21, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6026, file: !2451, line: 466, column: 21)
!6033 = !DILocation(line: 468, column: 4, scope: !6032)
!6034 = !DILocation(line: 469, column: 3, scope: !6032)
!6035 = !DILocation(line: 470, column: 21, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6026, file: !2451, line: 469, column: 10)
!6037 = !DILocation(line: 474, column: 9, scope: !6014)
!6038 = !DILocation(line: 474, column: 20, scope: !6014)
!6039 = !DILocation(line: 475, column: 3, scope: !6014)
!6040 = !DILocation(line: 476, column: 3, scope: !6014)
!6041 = !DILocation(line: 478, column: 9, scope: !6014)
!6042 = !DILocation(line: 478, column: 20, scope: !6014)
!6043 = !DILocation(line: 479, column: 3, scope: !6014)
!6044 = !DILocation(line: 480, column: 3, scope: !6014)
!6045 = !DILocation(line: 482, column: 9, scope: !6014)
!6046 = !DILocation(line: 482, column: 20, scope: !6014)
!6047 = !DILocation(line: 483, column: 3, scope: !6014)
!6048 = !DILocation(line: 484, column: 3, scope: !6014)
!6049 = !DILocation(line: 486, column: 9, scope: !6014)
!6050 = !DILocation(line: 486, column: 20, scope: !6014)
!6051 = !DILocation(line: 487, column: 3, scope: !6014)
!6052 = !DILocation(line: 492, column: 21, scope: !6014)
!6053 = !DILocation(line: 493, column: 3, scope: !6014)
!6054 = !DILocation(line: 495, column: 9, scope: !6014)
!6055 = !DILocation(line: 495, column: 20, scope: !6014)
!6056 = !DILocation(line: 496, column: 3, scope: !6014)
!6057 = !DILocation(line: 498, column: 2, scope: !6005)
!6058 = distinct !DISubprogram(name: "extract_specifier", scope: !2451, file: !2451, line: 513, type: !5767, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !6059)
!6059 = !{!6060, !6061, !6062, !6063}
!6060 = !DILocalVariable(name: "conv", arg: 1, scope: !6058, file: !2451, line: 513, type: !5423)
!6061 = !DILocalVariable(name: "sp", arg: 2, scope: !6058, file: !2451, line: 514, type: !331)
!6062 = !DILocalVariable(name: "unsupported", scope: !6058, file: !2451, line: 516, type: !131)
!6063 = !DILabel(scope: !6064, name: "int_conv", file: !2451, line: 526)
!6064 = distinct !DILexicalBlock(scope: !6058, file: !2451, line: 520, column: 27)
!6065 = !DILocation(line: 0, scope: !6058)
!6066 = !DILocation(line: 518, column: 20, scope: !6058)
!6067 = !DILocation(line: 518, column: 8, scope: !6058)
!6068 = !DILocation(line: 518, column: 18, scope: !6058)
!6069 = !DILocation(line: 520, column: 2, scope: !6058)
!6070 = !DILocation(line: 525, column: 3, scope: !6064)
!6071 = !DILocation(line: 0, scope: !6064)
!6072 = !DILocation(line: 526, column: 1, scope: !6064)
!6073 = !DILocation(line: 528, column: 24, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6064, file: !2451, line: 528, column: 7)
!6075 = !DILocation(line: 528, column: 7, scope: !6064)
!6076 = !DILocation(line: 535, column: 23, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6064, file: !2451, line: 535, column: 7)
!6078 = !DILocation(line: 535, column: 7, scope: !6064)
!6079 = !DILocation(line: 536, column: 36, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !2451, line: 535, column: 31)
!6081 = !DILocation(line: 537, column: 3, scope: !6080)
!6082 = !DILocation(line: 570, column: 9, scope: !6064)
!6083 = !DILocation(line: 570, column: 23, scope: !6064)
!6084 = !DILocation(line: 575, column: 4, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !2451, line: 573, column: 48)
!6086 = distinct !DILexicalBlock(scope: !6064, file: !2451, line: 573, column: 7)
!6087 = !DILocation(line: 603, column: 9, scope: !6064)
!6088 = !DILocation(line: 603, column: 23, scope: !6064)
!6089 = !DILocation(line: 605, column: 24, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6064, file: !2451, line: 605, column: 7)
!6091 = !DILocation(line: 605, column: 7, scope: !6064)
!6092 = !DILocation(line: 612, column: 9, scope: !6064)
!6093 = !DILocation(line: 612, column: 23, scope: !6064)
!6094 = !DILocation(line: 619, column: 24, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6064, file: !2451, line: 619, column: 7)
!6096 = !DILocation(line: 619, column: 7, scope: !6064)
!6097 = !DILocation(line: 625, column: 9, scope: !6064)
!6098 = !DILocation(line: 625, column: 17, scope: !6064)
!6099 = !DILocation(line: 626, column: 3, scope: !6064)
!6100 = !DILocation(line: 629, column: 20, scope: !6058)
!6101 = !DILocation(line: 629, column: 8, scope: !6058)
!6102 = !DILocation(line: 518, column: 23, scope: !6058)
!6103 = !DILocation(line: 631, column: 2, scope: !6058)
!6104 = distinct !DISubprogram(name: "extract_decimal", scope: !2451, file: !2451, line: 318, type: !6105, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !6107)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!132, !367}
!6107 = !{!6108, !6109, !6110}
!6108 = !DILocalVariable(name: "str", arg: 1, scope: !6104, file: !2451, line: 318, type: !367)
!6109 = !DILocalVariable(name: "sp", scope: !6104, file: !2451, line: 320, type: !331)
!6110 = !DILocalVariable(name: "val", scope: !6104, file: !2451, line: 321, type: !132)
!6111 = !DILocation(line: 0, scope: !6104)
!6112 = !DILocation(line: 320, column: 19, scope: !6104)
!6113 = !DILocation(line: 323, column: 37, scope: !6104)
!6114 = !DILocation(line: 323, column: 17, scope: !6104)
!6115 = !DILocation(line: 323, column: 9, scope: !6104)
!6116 = !DILocation(line: 323, column: 2, scope: !6104)
!6117 = !DILocation(line: 324, column: 13, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6104, file: !2451, line: 323, column: 43)
!6119 = !DILocation(line: 324, column: 24, scope: !6118)
!6120 = !DILocation(line: 324, column: 19, scope: !6118)
!6121 = !DILocation(line: 324, column: 27, scope: !6118)
!6122 = distinct !{!6122, !6116, !6123}
!6123 = !DILocation(line: 325, column: 2, scope: !6104)
!6124 = !DILocation(line: 326, column: 7, scope: !6104)
!6125 = !DILocation(line: 327, column: 2, scope: !6104)
!6126 = distinct !DISubprogram(name: "isdigit", scope: !5906, file: !5906, line: 43, type: !390, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !6127)
!6127 = !{!6128}
!6128 = !DILocalVariable(name: "a", arg: 1, scope: !6126, file: !5906, line: 43, type: !103)
!6129 = !DILocation(line: 0, scope: !6126)
!6130 = !DILocation(line: 45, column: 29, scope: !6126)
!6131 = !DILocation(line: 45, column: 45, scope: !6126)
!6132 = !DILocation(line: 45, column: 2, scope: !6126)
!6133 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6134, file: !6134, line: 9, type: !328, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !245)
!6134 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!6135 = !DILocation(line: 11, column: 1, scope: !6133)
!6136 = !{i64 2147559484, i64 2147559527, i64 2147559567}
!6137 = !DILocation(line: 12, column: 1, scope: !6133)
!6138 = !{i64 2147563746, i64 2147563789, i64 2147563829}
!6139 = !DILocation(line: 13, column: 1, scope: !6133)
!6140 = !{i64 2147563927, i64 2147563970, i64 2147564010}
!6141 = !DILocation(line: 14, column: 1, scope: !6133)
!6142 = !{i64 2147564093, i64 2147564136, i64 2147564176}
!6143 = !DILocation(line: 15, column: 1, scope: !6133)
!6144 = !{i64 2147564302, i64 2147564345, i64 2147564385}
!6145 = !DILocation(line: 16, column: 1, scope: !6133)
!6146 = !{i64 2147564519, i64 2147564562, i64 2147564602}
!6147 = !DILocation(line: 17, column: 1, scope: !6133)
!6148 = !{i64 2147564688, i64 2147564731, i64 2147564771}
!6149 = !DILocation(line: 18, column: 1, scope: !6133)
!6150 = !{i64 2147564873, i64 2147564916, i64 2147564956}
!6151 = !DILocation(line: 19, column: 1, scope: !6133)
!6152 = !{i64 2147565090, i64 2147565133, i64 2147565173}
!6153 = !DILocation(line: 20, column: 1, scope: !6133)
!6154 = !{i64 2147565253, i64 2147565296, i64 2147565336}
!6155 = !DILocation(line: 21, column: 1, scope: !6133)
!6156 = !{i64 2147565437, i64 2147565480, i64 2147565520}
!6157 = !DILocation(line: 22, column: 1, scope: !6133)
!6158 = !{i64 2147565617, i64 2147565660, i64 2147565700}
!6159 = !DILocation(line: 23, column: 1, scope: !6133)
!6160 = !{i64 2147565860, i64 2147565903, i64 2147565943}
!6161 = !DILocation(line: 24, column: 1, scope: !6133)
!6162 = !{i64 2147566096, i64 2147566139, i64 2147566179}
!6163 = !DILocation(line: 25, column: 1, scope: !6133)
!6164 = !{i64 2147566299, i64 2147566342, i64 2147566382}
!6165 = !DILocation(line: 26, column: 1, scope: !6133)
!6166 = !{i64 2147566502, i64 2147566545, i64 2147566585}
!6167 = !DILocation(line: 27, column: 1, scope: !6133)
!6168 = !{i64 2147566701, i64 2147566744, i64 2147566784}
!6169 = !DILocation(line: 28, column: 1, scope: !6133)
!6170 = !{i64 2147566876, i64 2147566919, i64 2147566959}
!6171 = !DILocation(line: 29, column: 1, scope: !6133)
!6172 = !{i64 2147567087, i64 2147567130, i64 2147567170}
!6173 = !DILocation(line: 30, column: 1, scope: !6133)
!6174 = !{i64 2147567291, i64 2147567334, i64 2147567374}
!6175 = !DILocation(line: 31, column: 1, scope: !6133)
!6176 = !{i64 2147567484, i64 2147567527, i64 2147567567}
!6177 = !DILocation(line: 32, column: 1, scope: !6133)
!6178 = !{i64 2147567686, i64 2147567729, i64 2147567769}
!6179 = !DILocation(line: 33, column: 1, scope: !6133)
!6180 = !{i64 2147567885, i64 2147567928, i64 2147567968}
!6181 = !DILocation(line: 34, column: 1, scope: !6133)
!6182 = !{i64 2147568112, i64 2147568155, i64 2147568195}
!6183 = !DILocation(line: 35, column: 1, scope: !6133)
!6184 = !{i64 2147568327, i64 2147568370, i64 2147568410}
!6185 = !DILocation(line: 36, column: 1, scope: !6133)
!6186 = !{i64 2147568514, i64 2147568557, i64 2147568597}
!6187 = !DILocation(line: 37, column: 1, scope: !6133)
!6188 = !{i64 2147568686, i64 2147568729, i64 2147568769}
!6189 = !DILocation(line: 38, column: 1, scope: !6133)
!6190 = !{i64 2147568888, i64 2147568931, i64 2147568971}
!6191 = !DILocation(line: 39, column: 1, scope: !6133)
!6192 = !{i64 2147569087, i64 2147569130, i64 2147569170}
!6193 = !DILocation(line: 40, column: 1, scope: !6133)
!6194 = !{i64 2147569262, i64 2147569305, i64 2147569345}
!6195 = !DILocation(line: 41, column: 1, scope: !6133)
!6196 = !{i64 2147569515, i64 2147569558, i64 2147569598}
!6197 = !DILocation(line: 42, column: 1, scope: !6133)
!6198 = !{i64 2147569753, i64 2147569796, i64 2147569836}
!6199 = !DILocation(line: 43, column: 1, scope: !6133)
!6200 = !{i64 2147569988, i64 2147570031, i64 2147570071}
!6201 = !DILocation(line: 44, column: 1, scope: !6133)
!6202 = !{i64 2147570214, i64 2147570257, i64 2147570297}
!6203 = !DILocation(line: 45, column: 1, scope: !6133)
!6204 = !{i64 2147570449, i64 2147570492, i64 2147570532}
!6205 = !DILocation(line: 46, column: 1, scope: !6133)
!6206 = !{i64 2147570684, i64 2147570727, i64 2147570767}
!6207 = !DILocation(line: 47, column: 1, scope: !6133)
!6208 = !{i64 2147570925, i64 2147570968, i64 2147571008}
!6209 = !DILocation(line: 48, column: 1, scope: !6133)
!6210 = !{i64 2147571160, i64 2147571203, i64 2147571243}
!6211 = !DILocation(line: 49, column: 1, scope: !6133)
!6212 = !{i64 2147571389, i64 2147571432, i64 2147571472}
!6213 = !DILocation(line: 50, column: 1, scope: !6133)
!6214 = !{i64 2147571624, i64 2147571667, i64 2147571707}
!6215 = !DILocation(line: 51, column: 1, scope: !6133)
!6216 = !{i64 2147571874, i64 2147571917, i64 2147571957}
!6217 = !DILocation(line: 52, column: 1, scope: !6133)
!6218 = !{i64 2147572103, i64 2147572146, i64 2147572186}
!6219 = !DILocation(line: 53, column: 1, scope: !6133)
!6220 = !{i64 2147572311, i64 2147572354, i64 2147572394}
!6221 = !DILocation(line: 54, column: 1, scope: !6133)
!6222 = !{i64 2147572522, i64 2147572565, i64 2147572605}
!6223 = !DILocation(line: 55, column: 1, scope: !6133)
!6224 = !{i64 2147576818, i64 2147576861, i64 2147576901}
!6225 = !DILocation(line: 56, column: 1, scope: !6133)
!6226 = !{i64 2147577047, i64 2147577090, i64 2147577130}
!6227 = !DILocation(line: 57, column: 1, scope: !6133)
!6228 = !{i64 2147577264, i64 2147577307, i64 2147577347}
!6229 = !DILocation(line: 58, column: 1, scope: !6133)
!6230 = !{i64 2147577493, i64 2147577536, i64 2147577576}
!6231 = !DILocation(line: 59, column: 1, scope: !6133)
!6232 = !{i64 2147577731, i64 2147577774, i64 2147577814}
!6233 = !DILocation(line: 60, column: 1, scope: !6133)
!6234 = !{i64 2147577963, i64 2147578006, i64 2147578046}
!6235 = !DILocation(line: 61, column: 1, scope: !6133)
!6236 = !{i64 2147578189, i64 2147578232, i64 2147578272}
!6237 = !DILocation(line: 62, column: 1, scope: !6133)
!6238 = !{i64 2147578406, i64 2147578449, i64 2147578489}
!6239 = !DILocation(line: 63, column: 1, scope: !6133)
!6240 = !{i64 2147578638, i64 2147578681, i64 2147578721}
!6241 = !DILocation(line: 64, column: 1, scope: !6133)
!6242 = !{i64 2147578864, i64 2147578907, i64 2147578947}
!6243 = !DILocation(line: 65, column: 1, scope: !6133)
!6244 = !{i64 2147579078, i64 2147579121, i64 2147579161}
!6245 = !DILocation(line: 66, column: 1, scope: !6133)
!6246 = !{i64 2147579298, i64 2147579341, i64 2147579381}
!6247 = !DILocation(line: 67, column: 1, scope: !6133)
!6248 = !{i64 2147579530, i64 2147579573, i64 2147579613}
!6249 = !DILocation(line: 68, column: 1, scope: !6133)
!6250 = !{i64 2147579738, i64 2147579781, i64 2147579821}
!6251 = !DILocation(line: 69, column: 1, scope: !6133)
!6252 = !{i64 2147579943, i64 2147579986, i64 2147580026}
!6253 = !DILocation(line: 70, column: 1, scope: !6133)
!6254 = !{i64 2147580160, i64 2147580203, i64 2147580243}
!6255 = !DILocation(line: 71, column: 1, scope: !6133)
!6256 = !{i64 2147580374, i64 2147580417, i64 2147580457}
!6257 = !DILocation(line: 72, column: 1, scope: !6133)
!6258 = !{i64 2147580600, i64 2147580643, i64 2147580683}
!6259 = !DILocation(line: 73, column: 1, scope: !6133)
!6260 = !{i64 2147580820, i64 2147580863, i64 2147580903}
!6261 = !DILocation(line: 74, column: 1, scope: !6133)
!6262 = !{i64 2147581025, i64 2147581068, i64 2147581108}
!6263 = !DILocation(line: 75, column: 1, scope: !6133)
!6264 = !{i64 2147581257, i64 2147581300, i64 2147581340}
!6265 = !DILocation(line: 76, column: 1, scope: !6133)
!6266 = !{i64 2147581492, i64 2147581535, i64 2147581575}
!6267 = !DILocation(line: 77, column: 1, scope: !6133)
!6268 = !{i64 2147581742, i64 2147581785, i64 2147581825}
!6269 = !DILocation(line: 78, column: 1, scope: !6133)
!6270 = !{i64 2147581992, i64 2147582035, i64 2147582075}
!6271 = !DILocation(line: 79, column: 1, scope: !6133)
!6272 = !{i64 2147582230, i64 2147582273, i64 2147582313}
!6273 = !DILocation(line: 80, column: 1, scope: !6133)
!6274 = !{i64 2147582441, i64 2147582484, i64 2147582524}
!6275 = !DILocation(line: 81, column: 1, scope: !6133)
!6276 = !{i64 2147582658, i64 2147582701, i64 2147582741}
!6277 = !DILocation(line: 82, column: 1, scope: !6133)
!6278 = !{i64 2147582854, i64 2147582897, i64 2147582937}
!6279 = !DILocation(line: 83, column: 1, scope: !6133)
!6280 = !{i64 2147583056, i64 2147583099, i64 2147583139}
!6281 = !DILocation(line: 84, column: 1, scope: !6133)
!6282 = !{i64 2147583243, i64 2147583286, i64 2147583326}
!6283 = !DILocation(line: 85, column: 1, scope: !6133)
!6284 = !{i64 2147583433, i64 2147583476, i64 2147583516}
!6285 = !DILocation(line: 86, column: 1, scope: !6133)
!6286 = !{i64 2147583620, i64 2147583663, i64 2147583703}
!6287 = !DILocation(line: 87, column: 1, scope: !6133)
!6288 = !{i64 2147583816, i64 2147583859, i64 2147583899}
!6289 = !DILocation(line: 88, column: 1, scope: !6133)
!6290 = !{i64 2147584012, i64 2147584055, i64 2147584095}
!6291 = !DILocation(line: 89, column: 1, scope: !6133)
!6292 = !{i64 2147584223, i64 2147584266, i64 2147584306}
!6293 = !DILocation(line: 90, column: 1, scope: !6133)
!6294 = !{i64 2147584431, i64 2147584474, i64 2147584514}
!6295 = !DILocation(line: 91, column: 1, scope: !6133)
!6296 = !{i64 2147584615, i64 2147584658, i64 2147584698}
!6297 = !DILocation(line: 92, column: 1, scope: !6133)
!6298 = !{i64 2147584811, i64 2147584854, i64 2147584894}
!6299 = !DILocation(line: 93, column: 1, scope: !6133)
!6300 = !{i64 2147585004, i64 2147585047, i64 2147585087}
!6301 = !DILocation(line: 94, column: 1, scope: !6133)
!6302 = !{i64 2147585251, i64 2147585294, i64 2147585334}
!6303 = !DILocation(line: 95, column: 1, scope: !6133)
!6304 = !{i64 2147589535, i64 2147589578, i64 2147589618}
!6305 = !DILocation(line: 96, column: 1, scope: !6133)
!6306 = !{i64 2147589740, i64 2147589783, i64 2147589823}
!6307 = !DILocation(line: 97, column: 1, scope: !6133)
!6308 = !{i64 2147589933, i64 2147589976, i64 2147590016}
!6309 = !DILocation(line: 98, column: 1, scope: !6133)
!6310 = !{i64 2147590099, i64 2147590142, i64 2147590182}
!6311 = !DILocation(line: 99, column: 1, scope: !6133)
!6312 = !{i64 2147590283, i64 2147590326, i64 2147590366}
!6313 = !DILocation(line: 100, column: 1, scope: !6133)
!6314 = !{i64 2147590473, i64 2147590516, i64 2147590556}
!6315 = !DILocation(line: 101, column: 1, scope: !6133)
!6316 = !{i64 2147590657, i64 2147590700, i64 2147590740}
!6317 = !DILocation(line: 102, column: 1, scope: !6133)
!6318 = !{i64 2147590871, i64 2147590914, i64 2147590954}
!6319 = !DILocation(line: 103, column: 1, scope: !6133)
!6320 = !{i64 2147591082, i64 2147591125, i64 2147591165}
!6321 = !DILocation(line: 104, column: 1, scope: !6133)
!6322 = !{i64 2147591305, i64 2147591348, i64 2147591388}
!6323 = !DILocation(line: 105, column: 1, scope: !6133)
!6324 = !{i64 2147591489, i64 2147591532, i64 2147591572}
!6325 = !DILocation(line: 106, column: 1, scope: !6133)
!6326 = !{i64 2147591655, i64 2147591698, i64 2147591738}
!6327 = !DILocation(line: 107, column: 1, scope: !6133)
!6328 = !{i64 2147591836, i64 2147591879, i64 2147591919}
!6329 = !DILocation(line: 108, column: 1, scope: !6133)
!6330 = !{i64 2147592029, i64 2147592072, i64 2147592112}
!6331 = !DILocation(line: 109, column: 1, scope: !6133)
!6332 = !{i64 2147592255, i64 2147592298, i64 2147592338}
!6333 = !DILocation(line: 110, column: 1, scope: !6133)
!6334 = !{i64 2147592469, i64 2147592512, i64 2147592552}
!6335 = !DILocation(line: 111, column: 1, scope: !6133)
!6336 = !{i64 2147592695, i64 2147592738, i64 2147592778}
!6337 = !DILocation(line: 112, column: 1, scope: !6133)
!6338 = !{i64 2147592912, i64 2147592955, i64 2147592995}
!6339 = !DILocation(line: 113, column: 1, scope: !6133)
!6340 = !{i64 2147593189, i64 2147593232, i64 2147593272}
!6341 = !DILocation(line: 114, column: 1, scope: !6133)
!6342 = !{i64 2147593415, i64 2147593458, i64 2147593498}
!6343 = !DILocation(line: 115, column: 1, scope: !6133)
!6344 = !{i64 2147593623, i64 2147593666, i64 2147593706}
!6345 = !DILocation(line: 116, column: 1, scope: !6133)
!6346 = !{i64 2147593819, i64 2147593862, i64 2147593902}
!6347 = !DILocation(line: 117, column: 1, scope: !6133)
!6348 = !{i64 2147594084, i64 2147594127, i64 2147594167}
!6349 = !DILocation(line: 118, column: 1, scope: !6133)
!6350 = !{i64 2147594298, i64 2147594341, i64 2147594381}
!6351 = !DILocation(line: 119, column: 1, scope: !6133)
!6352 = !{i64 2147594461, i64 2147594504, i64 2147594544}
!6353 = !DILocation(line: 120, column: 1, scope: !6133)
!6354 = !{i64 2147594648, i64 2147594691, i64 2147594731}
!6355 = !DILocation(line: 121, column: 1, scope: !6133)
!6356 = !{i64 2147594856, i64 2147594899, i64 2147594939}
!6357 = !DILocation(line: 122, column: 1, scope: !6133)
!6358 = !{i64 2147595052, i64 2147595095, i64 2147595135}
!6359 = !DILocation(line: 123, column: 1, scope: !6133)
!6360 = !{i64 2147595245, i64 2147595288, i64 2147595328}
!6361 = !DILocation(line: 124, column: 1, scope: !6133)
!6362 = !{i64 2147595427, i64 2147595470, i64 2147595510}
!6363 = !DILocation(line: 125, column: 1, scope: !6133)
!6364 = !{i64 2147595641, i64 2147595684, i64 2147595724}
!6365 = !DILocation(line: 126, column: 1, scope: !6133)
!6366 = !{i64 2147595840, i64 2147595883, i64 2147595923}
!6367 = !DILocation(line: 127, column: 1, scope: !6133)
!6368 = !{i64 2147596075, i64 2147596118, i64 2147596158}
!6369 = !DILocation(line: 128, column: 1, scope: !6133)
!6370 = !{i64 2147596325, i64 2147596368, i64 2147596408}
!6371 = !DILocation(line: 129, column: 1, scope: !6133)
!6372 = !{i64 2147596527, i64 2147596570, i64 2147596610}
!6373 = !DILocation(line: 130, column: 1, scope: !6133)
!6374 = !{i64 2147596750, i64 2147596793, i64 2147596833}
!6375 = !DILocation(line: 131, column: 1, scope: !6133)
!6376 = !{i64 2147596964, i64 2147597007, i64 2147597047}
!6377 = !DILocation(line: 132, column: 1, scope: !6133)
!6378 = !{i64 2147597208, i64 2147597251, i64 2147597291}
!6379 = !DILocation(line: 133, column: 1, scope: !6133)
!6380 = !{i64 2147597437, i64 2147597480, i64 2147597520}
!6381 = !DILocation(line: 134, column: 1, scope: !6133)
!6382 = !{i64 2147597663, i64 2147597706, i64 2147597746}
!6383 = !DILocation(line: 135, column: 1, scope: !6133)
!6384 = !{i64 2147597922, i64 2147597965, i64 2147598005}
!6385 = !DILocation(line: 136, column: 1, scope: !6133)
!6386 = !{i64 2147598142, i64 2147598185, i64 2147598225}
!6387 = !DILocation(line: 137, column: 1, scope: !6133)
!6388 = !{i64 2147598374, i64 2147598417, i64 2147598457}
!6389 = !DILocation(line: 138, column: 1, scope: !6133)
!6390 = !{i64 2147602676, i64 2147602719, i64 2147602759}
!6391 = !DILocation(line: 139, column: 1, scope: !6133)
!6392 = !{i64 2147602917, i64 2147602960, i64 2147603000}
!6393 = !DILocation(line: 140, column: 1, scope: !6133)
!6394 = !{i64 2147603140, i64 2147603183, i64 2147603223}
!6395 = !DILocation(line: 141, column: 1, scope: !6133)
!6396 = !{i64 2147603357, i64 2147603400, i64 2147603440}
!6397 = !DILocation(line: 142, column: 1, scope: !6133)
!6398 = !{i64 2147603598, i64 2147603641, i64 2147603681}
!6399 = !DILocation(line: 143, column: 1, scope: !6133)
!6400 = !{i64 2147603785, i64 2147603828, i64 2147603868}
!6401 = !DILocation(line: 144, column: 1, scope: !6133)
!6402 = !{i64 2147604014, i64 2147604057, i64 2147604097}
!6403 = !DILocation(line: 145, column: 1, scope: !6133)
!6404 = !{i64 2147604228, i64 2147604271, i64 2147604311}
!6405 = !DILocation(line: 146, column: 1, scope: !6133)
!6406 = !{i64 2147604430, i64 2147604473, i64 2147604513}
!6407 = !DILocation(line: 147, column: 1, scope: !6133)
!6408 = !{i64 2147604626, i64 2147604669, i64 2147604709}
!6409 = !DILocation(line: 148, column: 1, scope: !6133)
!6410 = !{i64 2147604838, i64 2147604881, i64 2147604921}
!6411 = !DILocation(line: 149, column: 1, scope: !6133)
!6412 = !{i64 2147605059, i64 2147605102, i64 2147605142}
!6413 = !DILocation(line: 150, column: 1, scope: !6133)
!6414 = !{i64 2147605273, i64 2147605316, i64 2147605356}
!6415 = !DILocation(line: 151, column: 1, scope: !6133)
!6416 = !{i64 2147605463, i64 2147605506, i64 2147605546}
!6417 = !DILocation(line: 152, column: 1, scope: !6133)
!6418 = !{i64 2147605662, i64 2147605705, i64 2147605745}
!6419 = !DILocation(line: 153, column: 1, scope: !6133)
!6420 = !{i64 2147605867, i64 2147605910, i64 2147605950}
!6421 = !DILocation(line: 154, column: 1, scope: !6133)
!6422 = !{i64 2147606087, i64 2147606130, i64 2147606170}
!6423 = !DILocation(line: 155, column: 1, scope: !6133)
!6424 = !{i64 2147606288, i64 2147606331, i64 2147606371}
!6425 = !DILocation(line: 156, column: 1, scope: !6133)
!6426 = !{i64 2147606487, i64 2147606530, i64 2147606570}
!6427 = !DILocation(line: 157, column: 1, scope: !6133)
!6428 = !{i64 2147606656, i64 2147606699, i64 2147606739}
!6429 = !DILocation(line: 158, column: 1, scope: !6133)
!6430 = !{i64 2147606840, i64 2147606883, i64 2147606923}
!6431 = !DILocation(line: 159, column: 1, scope: !6133)
!6432 = !{i64 2147607024, i64 2147607067, i64 2147607107}
!6433 = !DILocation(line: 160, column: 1, scope: !6133)
!6434 = !{i64 2147607211, i64 2147607254, i64 2147607294}
!6435 = !DILocation(line: 161, column: 1, scope: !6133)
!6436 = !{i64 2147607395, i64 2147607438, i64 2147607478}
!6437 = !DILocation(line: 162, column: 1, scope: !6133)
!6438 = !{i64 2147607633, i64 2147607676, i64 2147607716}
!6439 = !DILocation(line: 163, column: 1, scope: !6133)
!6440 = !{i64 2147607863, i64 2147607906, i64 2147607946}
!6441 = !DILocation(line: 164, column: 1, scope: !6133)
!6442 = !{i64 2147608092, i64 2147608135, i64 2147608175}
!6443 = !DILocation(line: 165, column: 1, scope: !6133)
!6444 = !{i64 2147608279, i64 2147608322, i64 2147608362}
!6445 = !DILocation(line: 166, column: 1, scope: !6133)
!6446 = !{i64 2147608475, i64 2147608518, i64 2147608558}
!6447 = !DILocation(line: 167, column: 1, scope: !6133)
!6448 = !{i64 2147608683, i64 2147608726, i64 2147608766}
!6449 = !DILocation(line: 168, column: 1, scope: !6133)
!6450 = !{i64 2147608895, i64 2147608938, i64 2147608978}
!6451 = !DILocation(line: 169, column: 1, scope: !6133)
!6452 = !{i64 2147609094, i64 2147609137, i64 2147609177}
!6453 = !DILocation(line: 170, column: 1, scope: !6133)
!6454 = !{i64 2147609332, i64 2147609375, i64 2147609415}
!6455 = !DILocation(line: 171, column: 1, scope: !6133)
!6456 = !{i64 2147609528, i64 2147609571, i64 2147609611}
!6457 = !DILocation(line: 172, column: 1, scope: !6133)
!6458 = !{i64 2147609730, i64 2147609773, i64 2147609813}
!6459 = !DILocation(line: 173, column: 1, scope: !6133)
!6460 = !{i64 2147609923, i64 2147609966, i64 2147610006}
!6461 = !DILocation(line: 174, column: 1, scope: !6133)
!6462 = !{i64 2147610157, i64 2147610200, i64 2147610240}
!6463 = !DILocation(line: 175, column: 1, scope: !6133)
!6464 = !{i64 2147610320, i64 2147610363, i64 2147610403}
!6465 = !DILocation(line: 176, column: 1, scope: !6133)
!6466 = !{i64 2147610559, i64 2147610602, i64 2147610642}
!6467 = !DILocation(line: 177, column: 1, scope: !6133)
!6468 = !{i64 2147610798, i64 2147610841, i64 2147610881}
!6469 = !DILocation(line: 178, column: 1, scope: !6133)
!6470 = !{i64 2147611034, i64 2147611077, i64 2147611117}
!6471 = !DILocation(line: 179, column: 1, scope: !6133)
!6472 = !{i64 2147611264, i64 2147611307, i64 2147611347}
!6473 = !DILocation(line: 180, column: 1, scope: !6133)
!6474 = !{i64 2147611451, i64 2147611494, i64 2147611534}
!6475 = !DILocation(line: 181, column: 1, scope: !6133)
!6476 = !{i64 2147615711, i64 2147615754, i64 2147615794}
!6477 = !DILocation(line: 182, column: 1, scope: !6133)
!6478 = !{i64 2147615982, i64 2147616025, i64 2147616065}
!6479 = !DILocation(line: 183, column: 1, scope: !6133)
!6480 = !{i64 2147616157, i64 2147616200, i64 2147616240}
!6481 = !DILocation(line: 184, column: 1, scope: !6133)
!6482 = !{i64 2147616391, i64 2147616434, i64 2147616474}
!6483 = !DILocation(line: 185, column: 1, scope: !6133)
!6484 = !{i64 2147616599, i64 2147616642, i64 2147616682}
!6485 = !DILocation(line: 186, column: 1, scope: !6133)
!6486 = !{i64 2147616817, i64 2147616860, i64 2147616900}
!6487 = !DILocation(line: 187, column: 1, scope: !6133)
!6488 = !{i64 2147617007, i64 2147617050, i64 2147617090}
!6489 = !DILocation(line: 188, column: 1, scope: !6133)
!6490 = !{i64 2147617239, i64 2147617282, i64 2147617322}
!6491 = !DILocation(line: 189, column: 1, scope: !6133)
!6492 = !{i64 2147617459, i64 2147617502, i64 2147617542}
!6493 = !DILocation(line: 190, column: 1, scope: !6133)
!6494 = !{i64 2147617655, i64 2147617698, i64 2147617738}
!6495 = !DILocation(line: 191, column: 1, scope: !6133)
!6496 = !{i64 2147617861, i64 2147617904, i64 2147617944}
!6497 = !DILocation(line: 192, column: 1, scope: !6133)
!6498 = !{i64 2147618066, i64 2147618109, i64 2147618149}
!6499 = !DILocation(line: 193, column: 1, scope: !6133)
!6500 = !{i64 2147618292, i64 2147618335, i64 2147618375}
!6501 = !DILocation(line: 194, column: 1, scope: !6133)
!6502 = !{i64 2147618500, i64 2147618543, i64 2147618583}
!6503 = !DILocation(line: 195, column: 1, scope: !6133)
!6504 = !{i64 2147618696, i64 2147618739, i64 2147618779}
!6505 = !DILocation(line: 196, column: 1, scope: !6133)
!6506 = !{i64 2147618928, i64 2147618971, i64 2147619011}
!6507 = !DILocation(line: 197, column: 1, scope: !6133)
!6508 = !{i64 2147619106, i64 2147619149, i64 2147619189}
!6509 = !DILocation(line: 198, column: 1, scope: !6133)
!6510 = !{i64 2147619315, i64 2147619358, i64 2147619398}
!6511 = !DILocation(line: 199, column: 1, scope: !6133)
!6512 = !{i64 2147619523, i64 2147619566, i64 2147619606}
!6513 = !DILocation(line: 200, column: 1, scope: !6133)
!6514 = !{i64 2147619719, i64 2147619762, i64 2147619802}
!6515 = !DILocation(line: 201, column: 1, scope: !6133)
!6516 = !{i64 2147619951, i64 2147619994, i64 2147620034}
!6517 = !DILocation(line: 202, column: 1, scope: !6133)
!6518 = !{i64 2147620153, i64 2147620196, i64 2147620236}
!6519 = !DILocation(line: 203, column: 1, scope: !6133)
!6520 = !{i64 2147620403, i64 2147620446, i64 2147620486}
!6521 = !DILocation(line: 204, column: 1, scope: !6133)
!6522 = !{i64 2147620641, i64 2147620684, i64 2147620724}
!6523 = !DILocation(line: 205, column: 1, scope: !6133)
!6524 = !{i64 2147620849, i64 2147620892, i64 2147620932}
!6525 = !DILocation(line: 206, column: 1, scope: !6133)
!6526 = !{i64 2147621045, i64 2147621088, i64 2147621128}
!6527 = !DILocation(line: 207, column: 1, scope: !6133)
!6528 = !{i64 2147621223, i64 2147621266, i64 2147621306}
!6529 = !DILocation(line: 208, column: 1, scope: !6133)
!6530 = !{i64 2147621440, i64 2147621483, i64 2147621523}
!6531 = !DILocation(line: 209, column: 1, scope: !6133)
!6532 = !{i64 2147621645, i64 2147621688, i64 2147621728}
!6533 = !DILocation(line: 210, column: 1, scope: !6133)
!6534 = !{i64 2147621880, i64 2147621923, i64 2147621963}
!6535 = !DILocation(line: 211, column: 1, scope: !6133)
!6536 = !{i64 2147622103, i64 2147622146, i64 2147622186}
!6537 = !DILocation(line: 212, column: 1, scope: !6133)
!6538 = !{i64 2147622320, i64 2147622363, i64 2147622403}
!6539 = !DILocation(line: 213, column: 1, scope: !6133)
!6540 = !{i64 2147622525, i64 2147622568, i64 2147622608}
!6541 = !DILocation(line: 214, column: 1, scope: !6133)
!6542 = !{i64 2147622733, i64 2147622776, i64 2147622816}
!6543 = !DILocation(line: 215, column: 1, scope: !6133)
!6544 = !{i64 2147622929, i64 2147622972, i64 2147623012}
!6545 = !DILocation(line: 216, column: 1, scope: !6133)
!6546 = !{i64 2147623143, i64 2147623186, i64 2147623226}
!6547 = !DILocation(line: 217, column: 1, scope: !6133)
!6548 = !{i64 2147623351, i64 2147623394, i64 2147623434}
!6549 = !DILocation(line: 218, column: 1, scope: !6133)
!6550 = !{i64 2147623541, i64 2147623584, i64 2147623624}
!6551 = !DILocation(line: 219, column: 1, scope: !6133)
!6552 = !{i64 2147623755, i64 2147623798, i64 2147623838}
!6553 = !DILocation(line: 220, column: 1, scope: !6133)
!6554 = !{i64 2147624017, i64 2147624060, i64 2147624100}
!6555 = !DILocation(line: 221, column: 1, scope: !6133)
!6556 = !{i64 2147624228, i64 2147624271, i64 2147624311}
!6557 = !DILocation(line: 222, column: 1, scope: !6133)
!6558 = !{i64 2147624472, i64 2147624515, i64 2147624555}
!6559 = !DILocation(line: 223, column: 1, scope: !6133)
!6560 = !{i64 2147628744, i64 2147628787, i64 2147628827}
!6561 = !DILocation(line: 224, column: 1, scope: !6133)
!6562 = !{i64 2147628973, i64 2147629016, i64 2147629056}
!6563 = !DILocation(line: 225, column: 1, scope: !6133)
!6564 = !{i64 2147629238, i64 2147629281, i64 2147629321}
!6565 = !DILocation(line: 226, column: 1, scope: !6133)
!6566 = !{i64 2147629443, i64 2147629486, i64 2147629526}
!6567 = !DILocation(line: 227, column: 1, scope: !6133)
!6568 = !{i64 2147629639, i64 2147629682, i64 2147629722}
!6569 = !DILocation(line: 228, column: 1, scope: !6133)
!6570 = !{i64 2147629862, i64 2147629905, i64 2147629945}
!6571 = !DILocation(line: 229, column: 1, scope: !6133)
!6572 = !{i64 2147630025, i64 2147630068, i64 2147630108}
!6573 = !DILocation(line: 230, column: 1, scope: !6133)
!6574 = !{i64 2147630230, i64 2147630273, i64 2147630313}
!6575 = !DILocation(line: 231, column: 1, scope: !6133)
!6576 = !{i64 2147630450, i64 2147630493, i64 2147630533}
!6577 = !DILocation(line: 232, column: 1, scope: !6133)
!6578 = !{i64 2147630664, i64 2147630707, i64 2147630747}
!6579 = !DILocation(line: 233, column: 1, scope: !6133)
!6580 = !{i64 2147630908, i64 2147630951, i64 2147630991}
!6581 = !DILocation(line: 234, column: 1, scope: !6133)
!6582 = !{i64 2147631140, i64 2147631183, i64 2147631223}
!6583 = !DILocation(line: 235, column: 1, scope: !6133)
!6584 = !{i64 2147631354, i64 2147631397, i64 2147631437}
!6585 = !DILocation(line: 236, column: 1, scope: !6133)
!6586 = !{i64 2147631565, i64 2147631608, i64 2147631648}
!6587 = !DILocation(line: 237, column: 1, scope: !6133)
!6588 = !{i64 2147631758, i64 2147631801, i64 2147631841}
!6589 = !DILocation(line: 238, column: 1, scope: !6133)
!6590 = !{i64 2147631957, i64 2147632000, i64 2147632040}
!6591 = !DILocation(line: 239, column: 1, scope: !6133)
!6592 = !{i64 2147632129, i64 2147632172, i64 2147632212}
!6593 = !DILocation(line: 240, column: 1, scope: !6133)
!6594 = !{i64 2147632322, i64 2147632365, i64 2147632405}
!6595 = !DILocation(line: 241, column: 1, scope: !6133)
!6596 = !{i64 2147632518, i64 2147632561, i64 2147632601}
!6597 = !DILocation(line: 242, column: 1, scope: !6133)
!6598 = !{i64 2147632681, i64 2147632724, i64 2147632764}
!6599 = !DILocation(line: 243, column: 1, scope: !6133)
!6600 = !{i64 2147632883, i64 2147632926, i64 2147632966}
!6601 = !DILocation(line: 244, column: 1, scope: !6133)
!6602 = !{i64 2147633088, i64 2147633131, i64 2147633171}
!6603 = !DILocation(line: 245, column: 1, scope: !6133)
!6604 = !{i64 2147633296, i64 2147633339, i64 2147633379}
!6605 = !DILocation(line: 246, column: 1, scope: !6133)
!6606 = !{i64 2147633489, i64 2147633532, i64 2147633572}
!6607 = !DILocation(line: 247, column: 1, scope: !6133)
!6608 = !{i64 2147633676, i64 2147633719, i64 2147633759}
!6609 = !DILocation(line: 248, column: 1, scope: !6133)
!6610 = !{i64 2147633903, i64 2147633946, i64 2147633986}
!6611 = !DILocation(line: 249, column: 1, scope: !6133)
!6612 = !{i64 2147634069, i64 2147634112, i64 2147634152}
!6613 = !DILocation(line: 250, column: 1, scope: !6133)
!6614 = !{i64 2147634307, i64 2147634350, i64 2147634390}
!6615 = !DILocation(line: 251, column: 1, scope: !6133)
!6616 = !{i64 2147634557, i64 2147634600, i64 2147634640}
!6617 = !DILocation(line: 252, column: 1, scope: !6133)
!6618 = !{i64 2147634765, i64 2147634808, i64 2147634848}
!6619 = !DILocation(line: 253, column: 1, scope: !6133)
!6620 = !{i64 2147634961, i64 2147635004, i64 2147635044}
!6621 = !DILocation(line: 254, column: 1, scope: !6133)
!6622 = !{i64 2147635178, i64 2147635221, i64 2147635261}
!6623 = !DILocation(line: 255, column: 1, scope: !6133)
!6624 = !{i64 2147635470, i64 2147635513, i64 2147635553}
!6625 = !DILocation(line: 256, column: 1, scope: !6133)
!6626 = !{i64 2147635702, i64 2147635745, i64 2147635785}
!6627 = !DILocation(line: 257, column: 1, scope: !6133)
!6628 = !{i64 2147635919, i64 2147635962, i64 2147636002}
!6629 = !DILocation(line: 258, column: 1, scope: !6133)
!6630 = !{i64 2147636126, i64 2147636169, i64 2147636209}
!6631 = !DILocation(line: 259, column: 1, scope: !6133)
!6632 = !{i64 2147636327, i64 2147636370, i64 2147636410}
!6633 = !DILocation(line: 260, column: 1, scope: !6133)
!6634 = !{i64 2147636559, i64 2147636602, i64 2147636642}
!6635 = !DILocation(line: 261, column: 1, scope: !6133)
!6636 = !{i64 2147636767, i64 2147636810, i64 2147636850}
!6637 = !DILocation(line: 262, column: 1, scope: !6133)
!6638 = !{i64 2147636957, i64 2147637000, i64 2147637040}
!6639 = !DILocation(line: 263, column: 1, scope: !6133)
!6640 = !{i64 2147637183, i64 2147637226, i64 2147637266}
!6641 = !DILocation(line: 264, column: 1, scope: !6133)
!6642 = !{i64 2147637372, i64 2147637415, i64 2147637455}
!6643 = !DILocation(line: 265, column: 1, scope: !6133)
!6644 = !{i64 2147641704, i64 2147641747, i64 2147641787}
!6645 = !DILocation(line: 266, column: 1, scope: !6133)
!6646 = !{i64 2147641924, i64 2147641967, i64 2147642007}
!6647 = !DILocation(line: 267, column: 1, scope: !6133)
!6648 = !{i64 2147642177, i64 2147642220, i64 2147642260}
!6649 = !DILocation(line: 268, column: 1, scope: !6133)
!6650 = !{i64 2147642385, i64 2147642428, i64 2147642468}
!6651 = !DILocation(line: 269, column: 1, scope: !6133)
!6652 = !{i64 2147642617, i64 2147642660, i64 2147642700}
!6653 = !DILocation(line: 270, column: 1, scope: !6133)
!6654 = !{i64 2147642828, i64 2147642871, i64 2147642911}
!6655 = !DILocation(line: 271, column: 1, scope: !6133)
!6656 = !{i64 2147643018, i64 2147643061, i64 2147643101}
!6657 = !DILocation(line: 272, column: 1, scope: !6133)
!6658 = !{i64 2147643232, i64 2147643275, i64 2147643315}
!6659 = !DILocation(line: 273, column: 1, scope: !6133)
!6660 = !{i64 2147643431, i64 2147643474, i64 2147643514}
!6661 = !DILocation(line: 274, column: 1, scope: !6133)
!6662 = !{i64 2147643618, i64 2147643661, i64 2147643701}
!6663 = !DILocation(line: 275, column: 1, scope: !6133)
!6664 = !{i64 2147643826, i64 2147643869, i64 2147643909}
!6665 = !DILocation(line: 276, column: 1, scope: !6133)
!6666 = !{i64 2147644055, i64 2147644098, i64 2147644138}
!6667 = !DILocation(line: 277, column: 1, scope: !6133)
!6668 = !{i64 2147644257, i64 2147644300, i64 2147644340}
!6669 = !DILocation(line: 278, column: 1, scope: !6133)
!6670 = !{i64 2147644456, i64 2147644499, i64 2147644539}
!6671 = !DILocation(line: 279, column: 1, scope: !6133)
!6672 = !{i64 2147644673, i64 2147644716, i64 2147644756}
!6673 = !DILocation(line: 281, column: 1, scope: !6133)
!6674 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !808, file: !808, line: 225, type: !815, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !6675)
!6675 = !{!6676}
!6676 = !DILocalVariable(name: "arg", arg: 1, scope: !6674, file: !808, line: 225, type: !817)
!6677 = !DILocation(line: 0, scope: !6674)
!6678 = !DILocation(line: 230, column: 2, scope: !6674)
!6679 = !DILocation(line: 233, column: 2, scope: !6674)
!6680 = !DILocation(line: 236, column: 2, scope: !6674)
!6681 = !DILocation(line: 255, column: 2, scope: !6674)
!6682 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !808, file: !808, line: 50, type: !328, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !245)
!6683 = !DILocation(line: 53, column: 2, scope: !6682)
!6684 = !DILocation(line: 54, column: 1, scope: !6682)
!6685 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !808, file: !808, line: 14, type: !328, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !245)
!6686 = !DILocation(line: 23, column: 2, scope: !6685)
!6687 = !DILocation(line: 24, column: 2, scope: !6685)
!6688 = !DILocation(line: 25, column: 2, scope: !6685)
!6689 = !DILocation(line: 27, column: 2, scope: !6685)
!6690 = !DILocation(line: 31, column: 2, scope: !6685)
!6691 = !DILocation(line: 33, column: 2, scope: !6685)
!6692 = !DILocation(line: 36, column: 2, scope: !6685)
!6693 = !DILocation(line: 37, column: 2, scope: !6685)
!6694 = !DILocation(line: 40, column: 2, scope: !6685)
!6695 = !DILocation(line: 41, column: 2, scope: !6685)
!6696 = !DILocation(line: 42, column: 2, scope: !6685)
!6697 = !DILocation(line: 43, column: 2, scope: !6685)
!6698 = !DILocation(line: 44, column: 2, scope: !6685)
!6699 = !DILocation(line: 47, column: 2, scope: !6685)
!6700 = !DILocation(line: 48, column: 1, scope: !6685)
!6701 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !808, file: !808, line: 57, type: !328, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !245)
!6702 = !DILocation(line: 61, column: 2, scope: !6701)
!6703 = !DILocation(line: 63, column: 2, scope: !6701)
!6704 = !DILocation(line: 80, column: 1, scope: !6701)
!6705 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !6706, file: !6706, line: 164, type: !6707, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !6709)
!6706 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6707 = !DISubroutineType(types: !6708)
!6708 = !{null, !752, !108, !185, !131, !131}
!6709 = !{!6710, !6711, !6712, !6713, !6714}
!6710 = !DILocalVariable(name: "base", arg: 1, scope: !6705, file: !6706, line: 164, type: !752)
!6711 = !DILocalVariable(name: "pdap", arg: 2, scope: !6705, file: !6706, line: 164, type: !108)
!6712 = !DILocalVariable(name: "perm", arg: 3, scope: !6705, file: !6706, line: 164, type: !185)
!6713 = !DILocalVariable(name: "sreq", arg: 4, scope: !6705, file: !6706, line: 164, type: !131)
!6714 = !DILocalVariable(name: "lock", arg: 5, scope: !6705, file: !6706, line: 164, type: !131)
!6715 = !DILocation(line: 0, scope: !6705)
!6716 = !DILocation(line: 166, column: 24, scope: !6705)
!6717 = !DILocation(line: 166, column: 5, scope: !6705)
!6718 = !DILocation(line: 166, column: 22, scope: !6705)
!6719 = !DILocation(line: 167, column: 1, scope: !6705)
!6720 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !398, file: !398, line: 454, type: !6721, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !6723)
!6721 = !DISubroutineType(types: !6722)
!6722 = !{null, !680, !108, !108}
!6723 = !{!6724, !6725, !6726}
!6724 = !DILocalVariable(name: "base", arg: 1, scope: !6720, file: !398, line: 454, type: !680)
!6725 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !6720, file: !398, line: 454, type: !108)
!6726 = !DILocalVariable(name: "control", arg: 3, scope: !6720, file: !398, line: 454, type: !108)
!6727 = !DILocation(line: 0, scope: !6720)
!6728 = !DILocation(line: 456, column: 5, scope: !6720)
!6729 = !DILocation(line: 456, column: 22, scope: !6720)
!6730 = !DILocation(line: 457, column: 1, scope: !6720)
!6731 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !398, file: !398, line: 379, type: !6732, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !6734)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{null, !680, !108}
!6734 = !{!6735, !6736}
!6735 = !DILocalVariable(name: "base", arg: 1, scope: !6731, file: !398, line: 379, type: !680)
!6736 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !6731, file: !398, line: 379, type: !108)
!6737 = !DILocation(line: 0, scope: !6731)
!6738 = !DILocation(line: 381, column: 26, scope: !6731)
!6739 = !DILocation(line: 382, column: 1, scope: !6731)
!6740 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !6741, file: !6741, line: 136, type: !6742, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !6744)
!6741 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6742 = !DISubroutineType(types: !6743)
!6743 = !{null, !795}
!6744 = !{!6745}
!6745 = !DILocalVariable(name: "base", arg: 1, scope: !6740, file: !6741, line: 136, type: !795)
!6746 = !DILocation(line: 0, scope: !6740)
!6747 = !DILocation(line: 138, column: 16, scope: !6740)
!6748 = !DILocation(line: 139, column: 1, scope: !6740)
!6749 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !6706, file: !6706, line: 136, type: !6750, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !6752)
!6750 = !DISubroutineType(types: !6751)
!6751 = !{null, !752, !108, !108, !131}
!6752 = !{!6753, !6754, !6755, !6756}
!6753 = !DILocalVariable(name: "base", arg: 1, scope: !6749, file: !6706, line: 136, type: !752)
!6754 = !DILocalVariable(name: "mda", arg: 2, scope: !6749, file: !6706, line: 136, type: !108)
!6755 = !DILocalVariable(name: "domainId", arg: 3, scope: !6749, file: !6706, line: 136, type: !108)
!6756 = !DILocalVariable(name: "lock", arg: 4, scope: !6749, file: !6706, line: 136, type: !131)
!6757 = !DILocation(line: 0, scope: !6749)
!6758 = !DILocation(line: 140, column: 20, scope: !6749)
!6759 = !DILocation(line: 141, column: 1, scope: !6749)
!6760 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6761, file: !6761, line: 14, type: !4383, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !6762)
!6761 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6762 = !{!6763, !6764}
!6763 = !DILocalVariable(name: "fmt", arg: 1, scope: !6760, file: !6761, line: 14, type: !331)
!6764 = !DILocalVariable(name: "ap", scope: !6760, file: !6761, line: 16, type: !6765)
!6765 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3452, line: 99, baseType: !6766)
!6766 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3452, line: 40, baseType: !6767)
!6767 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6761, baseType: !6768)
!6768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6769)
!6769 = !{!6770}
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6768, file: !6761, line: 16, baseType: !102, size: 32)
!6771 = !DILocation(line: 0, scope: !6760)
!6772 = !DILocation(line: 16, column: 2, scope: !6760)
!6773 = !DILocation(line: 16, column: 10, scope: !6760)
!6774 = !DILocation(line: 18, column: 2, scope: !6760)
!6775 = !DILocation(line: 19, column: 2, scope: !6760)
!6776 = !DILocation(line: 20, column: 2, scope: !6760)
!6777 = !DILocation(line: 21, column: 1, scope: !6760)
!6778 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6761, file: !6761, line: 23, type: !6779, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !6781)
!6779 = !DISubroutineType(types: !6780)
!6780 = !{null, !331, !6765}
!6781 = !{!6782, !6783}
!6782 = !DILocalVariable(name: "fmt", arg: 1, scope: !6778, file: !6761, line: 23, type: !331)
!6783 = !DILocalVariable(name: "ap", arg: 2, scope: !6778, file: !6761, line: 23, type: !6765)
!6784 = !DILocation(line: 0, scope: !6778)
!6785 = !DILocation(line: 25, column: 2, scope: !6778)
!6786 = !DILocation(line: 26, column: 1, scope: !6778)
!6787 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6761, file: !6761, line: 52, type: !6788, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !6790)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{null, !103, !13, !132}
!6790 = !{!6791, !6792, !6793, !6794}
!6791 = !DILocalVariable(name: "level", arg: 1, scope: !6787, file: !6761, line: 52, type: !103)
!6792 = !DILocalVariable(name: "data", arg: 2, scope: !6787, file: !6761, line: 52, type: !13)
!6793 = !DILocalVariable(name: "size", arg: 3, scope: !6787, file: !6761, line: 52, type: !132)
!6794 = !DILocalVariable(name: "data_buffer", scope: !6787, file: !6761, line: 54, type: !331)
!6795 = !DILocation(line: 0, scope: !6787)
!6796 = !DILocation(line: 55, column: 14, scope: !6787)
!6797 = !DILocation(line: 55, column: 2, scope: !6787)
!6798 = !DILocation(line: 56, column: 3, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6787, file: !6761, line: 55, column: 20)
!6800 = !DILocation(line: 57, column: 3, scope: !6799)
!6801 = !DILocation(line: 59, column: 7, scope: !6799)
!6802 = distinct !{!6802, !6797, !6803}
!6803 = !DILocation(line: 65, column: 2, scope: !6787)
!6804 = !DILocation(line: 66, column: 1, scope: !6787)
!6805 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3384, file: !3384, line: 175, type: !3385, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !6806)
!6806 = !{!6807}
!6807 = !DILocalVariable(name: "level", arg: 1, scope: !6805, file: !3384, line: 175, type: !103)
!6808 = !DILocation(line: 0, scope: !6805)
!6809 = !DILocation(line: 177, column: 2, scope: !6805)
!6810 = !DILocation(line: 189, column: 1, scope: !6805)
!6811 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6761, file: !6761, line: 28, type: !6812, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !6814)
!6812 = !DISubroutineType(types: !6813)
!6813 = !{null, !331, !132}
!6814 = !{!6815, !6816, !6817, !6819, !6821}
!6815 = !DILocalVariable(name: "data", arg: 1, scope: !6811, file: !6761, line: 28, type: !331)
!6816 = !DILocalVariable(name: "length", arg: 2, scope: !6811, file: !6761, line: 28, type: !132)
!6817 = !DILocalVariable(name: "i", scope: !6818, file: !6761, line: 30, type: !132)
!6818 = distinct !DILexicalBlock(scope: !6811, file: !6761, line: 30, column: 2)
!6819 = !DILocalVariable(name: "i", scope: !6820, file: !6761, line: 40, type: !132)
!6820 = distinct !DILexicalBlock(scope: !6811, file: !6761, line: 40, column: 2)
!6821 = !DILocalVariable(name: "c", scope: !6822, file: !6761, line: 42, type: !186)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6761, line: 41, column: 19)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6761, line: 41, column: 7)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6761, line: 40, column: 54)
!6825 = distinct !DILexicalBlock(scope: !6820, file: !6761, line: 40, column: 2)
!6826 = !DILocation(line: 0, scope: !6811)
!6827 = !DILocation(line: 0, scope: !6818)
!6828 = !DILocation(line: 30, column: 2, scope: !6818)
!6829 = !DILocation(line: 38, column: 2, scope: !6811)
!6830 = !DILocation(line: 0, scope: !6820)
!6831 = !DILocation(line: 40, column: 2, scope: !6820)
!6832 = !DILocation(line: 31, column: 9, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6761, line: 31, column: 7)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6761, line: 30, column: 54)
!6835 = distinct !DILexicalBlock(scope: !6818, file: !6761, line: 30, column: 2)
!6836 = !DILocation(line: 31, column: 7, scope: !6834)
!6837 = !DILocation(line: 32, column: 35, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !6761, line: 31, column: 19)
!6839 = !DILocation(line: 32, column: 20, scope: !6838)
!6840 = !DILocation(line: 32, column: 4, scope: !6838)
!6841 = !DILocation(line: 33, column: 3, scope: !6838)
!6842 = !DILocation(line: 34, column: 4, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6833, file: !6761, line: 33, column: 10)
!6844 = !DILocation(line: 30, column: 50, scope: !6835)
!6845 = !DILocation(line: 30, column: 24, scope: !6835)
!6846 = distinct !{!6846, !6828, !6847}
!6847 = !DILocation(line: 36, column: 2, scope: !6818)
!6848 = !DILocation(line: 49, column: 2, scope: !6811)
!6849 = !DILocation(line: 50, column: 1, scope: !6811)
!6850 = !DILocation(line: 41, column: 9, scope: !6823)
!6851 = !DILocation(line: 41, column: 7, scope: !6824)
!6852 = !DILocation(line: 42, column: 22, scope: !6822)
!6853 = !DILocation(line: 0, scope: !6822)
!6854 = !DILocation(line: 44, column: 25, scope: !6822)
!6855 = !DILocation(line: 44, column: 17, scope: !6822)
!6856 = !DILocation(line: 44, column: 33, scope: !6822)
!6857 = !DILocation(line: 44, column: 4, scope: !6822)
!6858 = !DILocation(line: 45, column: 3, scope: !6822)
!6859 = !DILocation(line: 46, column: 4, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6823, file: !6761, line: 45, column: 10)
!6861 = !DILocation(line: 40, column: 50, scope: !6825)
!6862 = !DILocation(line: 40, column: 24, scope: !6825)
!6863 = distinct !{!6863, !6831, !6864}
!6864 = !DILocation(line: 48, column: 2, scope: !6820)
!6865 = distinct !DISubprogram(name: "isprint", scope: !5906, file: !5906, line: 37, type: !390, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !6866)
!6866 = !{!6867}
!6867 = !DILocalVariable(name: "c", arg: 1, scope: !6865, file: !5906, line: 37, type: !103)
!6868 = !DILocation(line: 0, scope: !6865)
!6869 = !DILocation(line: 39, column: 38, scope: !6865)
!6870 = !DILocation(line: 39, column: 2, scope: !6865)
!6871 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6872, file: !6872, line: 57, type: !6873, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6919)
!6872 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6873 = !DISubroutineType(types: !6874)
!6874 = !{null, !32, !6875}
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6876, size: 32)
!6876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6877)
!6877 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2607, line: 141, baseType: !6878)
!6878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2607, line: 97, size: 256, elements: !6879)
!6879 = !{!6880}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6878, file: !2607, line: 107, baseType: !6881, size: 256)
!6881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2607, line: 98, size: 256, elements: !6882)
!6882 = !{!6883, !6888, !6893, !6898, !6903, !6908, !6913, !6918}
!6883 = !DIDerivedType(tag: DW_TAG_member, scope: !6881, file: !2607, line: 99, baseType: !6884, size: 32)
!6884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6881, file: !2607, line: 99, size: 32, elements: !6885)
!6885 = !{!6886, !6887}
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6884, file: !2607, line: 99, baseType: !108, size: 32)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6884, file: !2607, line: 99, baseType: !108, size: 32)
!6888 = !DIDerivedType(tag: DW_TAG_member, scope: !6881, file: !2607, line: 100, baseType: !6889, size: 32, offset: 32)
!6889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6881, file: !2607, line: 100, size: 32, elements: !6890)
!6890 = !{!6891, !6892}
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6889, file: !2607, line: 100, baseType: !108, size: 32)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6889, file: !2607, line: 100, baseType: !108, size: 32)
!6893 = !DIDerivedType(tag: DW_TAG_member, scope: !6881, file: !2607, line: 101, baseType: !6894, size: 32, offset: 64)
!6894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6881, file: !2607, line: 101, size: 32, elements: !6895)
!6895 = !{!6896, !6897}
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6894, file: !2607, line: 101, baseType: !108, size: 32)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6894, file: !2607, line: 101, baseType: !108, size: 32)
!6898 = !DIDerivedType(tag: DW_TAG_member, scope: !6881, file: !2607, line: 102, baseType: !6899, size: 32, offset: 96)
!6899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6881, file: !2607, line: 102, size: 32, elements: !6900)
!6900 = !{!6901, !6902}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6899, file: !2607, line: 102, baseType: !108, size: 32)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6899, file: !2607, line: 102, baseType: !108, size: 32)
!6903 = !DIDerivedType(tag: DW_TAG_member, scope: !6881, file: !2607, line: 103, baseType: !6904, size: 32, offset: 128)
!6904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6881, file: !2607, line: 103, size: 32, elements: !6905)
!6905 = !{!6906, !6907}
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6904, file: !2607, line: 103, baseType: !108, size: 32)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6904, file: !2607, line: 103, baseType: !108, size: 32)
!6908 = !DIDerivedType(tag: DW_TAG_member, scope: !6881, file: !2607, line: 104, baseType: !6909, size: 32, offset: 160)
!6909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6881, file: !2607, line: 104, size: 32, elements: !6910)
!6910 = !{!6911, !6912}
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6909, file: !2607, line: 104, baseType: !108, size: 32)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6909, file: !2607, line: 104, baseType: !108, size: 32)
!6913 = !DIDerivedType(tag: DW_TAG_member, scope: !6881, file: !2607, line: 105, baseType: !6914, size: 32, offset: 192)
!6914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6881, file: !2607, line: 105, size: 32, elements: !6915)
!6915 = !{!6916, !6917}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6914, file: !2607, line: 105, baseType: !108, size: 32)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6914, file: !2607, line: 105, baseType: !108, size: 32)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6881, file: !2607, line: 106, baseType: !108, size: 32, offset: 224)
!6919 = !{!6920, !6921}
!6920 = !DILocalVariable(name: "reason", arg: 1, scope: !6871, file: !6872, line: 57, type: !32)
!6921 = !DILocalVariable(name: "esf", arg: 2, scope: !6871, file: !6872, line: 57, type: !6875)
!6922 = !DILocation(line: 0, scope: !6871)
!6923 = !DILocation(line: 60, column: 10, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6871, file: !6872, line: 60, column: 6)
!6925 = !DILocation(line: 60, column: 6, scope: !6871)
!6926 = !DILocation(line: 61, column: 3, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6924, file: !6872, line: 60, column: 19)
!6928 = !DILocation(line: 62, column: 2, scope: !6927)
!6929 = !DILocation(line: 63, column: 2, scope: !6871)
!6930 = !DILocation(line: 64, column: 1, scope: !6871)
!6931 = distinct !DISubprogram(name: "esf_dump", scope: !6872, file: !6872, line: 20, type: !6932, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6934)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{null, !6875}
!6934 = !{!6935}
!6935 = !DILocalVariable(name: "esf", arg: 1, scope: !6931, file: !6872, line: 20, type: !6875)
!6936 = !DILocation(line: 0, scope: !6931)
!6937 = !DILocation(line: 22, column: 2, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6872, line: 22, column: 2)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6872, line: 22, column: 2)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6872, line: 22, column: 2)
!6941 = distinct !DILexicalBlock(scope: !6931, file: !6872, line: 22, column: 2)
!6942 = !DILocation(line: 24, column: 2, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6872, line: 24, column: 2)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6872, line: 24, column: 2)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6872, line: 24, column: 2)
!6946 = distinct !DILexicalBlock(scope: !6931, file: !6872, line: 24, column: 2)
!6947 = !DILocation(line: 26, column: 2, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6872, line: 26, column: 2)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6872, line: 26, column: 2)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6872, line: 26, column: 2)
!6951 = distinct !DILexicalBlock(scope: !6931, file: !6872, line: 26, column: 2)
!6952 = !DILocation(line: 53, column: 2, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !6872, line: 53, column: 2)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6872, line: 53, column: 2)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6872, line: 53, column: 2)
!6956 = distinct !DILexicalBlock(scope: !6931, file: !6872, line: 53, column: 2)
!6957 = !DILocation(line: 55, column: 1, scope: !6931)
!6958 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6872, file: !6872, line: 82, type: !6959, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6974)
!6959 = !DISubroutineType(types: !6960)
!6960 = !{null, !6875, !6961}
!6961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6962, size: 32)
!6962 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !6963)
!6963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !6964)
!6964 = !{!6965, !6966, !6967, !6968, !6969, !6970, !6971, !6972, !6973}
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6963, file: !214, line: 26, baseType: !108, size: 32)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6963, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6963, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6963, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6963, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6963, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6963, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6963, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6963, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!6974 = !{!6975, !6976, !6977}
!6975 = !DILocalVariable(name: "esf", arg: 1, scope: !6958, file: !6872, line: 82, type: !6875)
!6976 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6958, file: !6872, line: 82, type: !6961)
!6977 = !DILocalVariable(name: "reason", scope: !6958, file: !6872, line: 88, type: !32)
!6978 = !DILocation(line: 0, scope: !6958)
!6979 = !DILocation(line: 88, column: 35, scope: !6958)
!6980 = !DILocation(line: 108, column: 2, scope: !6958)
!6981 = !DILocation(line: 131, column: 1, scope: !6958)
!6982 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6872, file: !6872, line: 133, type: !6983, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6985)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{null, !102}
!6985 = !{!6986, !6987, !6988}
!6986 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6982, file: !6872, line: 133, type: !102)
!6987 = !DILocalVariable(name: "ssf_contents", scope: !6982, file: !6872, line: 135, type: !1378)
!6988 = !DILocalVariable(name: "oops_esf", scope: !6982, file: !6872, line: 136, type: !6877)
!6989 = !DILocation(line: 0, scope: !6982)
!6990 = !DILocation(line: 136, column: 2, scope: !6982)
!6991 = !DILocation(line: 136, column: 15, scope: !6982)
!6992 = !DILocation(line: 139, column: 22, scope: !6982)
!6993 = !DILocation(line: 139, column: 17, scope: !6982)
!6994 = !DILocation(line: 139, column: 20, scope: !6982)
!6995 = !DILocation(line: 141, column: 2, scope: !6982)
!6996 = !DILocation(line: 142, column: 2, scope: !6982)
!6997 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6998, file: !6998, line: 40, type: !6999, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7001)
!6998 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6999 = !DISubroutineType(types: !7000)
!7000 = !{null, !32}
!7001 = !{!7002}
!7002 = !DILocalVariable(name: "irq", arg: 1, scope: !6997, file: !6998, line: 40, type: !32)
!7003 = !DILocation(line: 0, scope: !6997)
!7004 = !DILocation(line: 42, column: 2, scope: !6997)
!7005 = !DILocation(line: 43, column: 1, scope: !6997)
!7006 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1573, file: !1573, line: 1684, type: !7007, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7009)
!7007 = !DISubroutineType(types: !7008)
!7008 = !{null, !2501}
!7009 = !{!7010}
!7010 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7006, file: !1573, line: 1684, type: !2501)
!7011 = !DILocation(line: 0, scope: !7006)
!7012 = !DILocation(line: 1686, column: 23, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7006, file: !1573, line: 1686, column: 7)
!7014 = !DILocation(line: 1686, column: 7, scope: !7006)
!7015 = !DILocation(line: 1688, column: 5, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !1573, line: 1687, column: 3)
!7017 = !{i64 2154445201}
!7018 = !DILocation(line: 1689, column: 81, scope: !7016)
!7019 = !DILocation(line: 1689, column: 60, scope: !7016)
!7020 = !DILocation(line: 1689, column: 34, scope: !7016)
!7021 = !DILocation(line: 1689, column: 5, scope: !7016)
!7022 = !DILocation(line: 1689, column: 43, scope: !7016)
!7023 = !DILocation(line: 1690, column: 5, scope: !7016)
!7024 = !{i64 2154445315}
!7025 = !DILocation(line: 1691, column: 3, scope: !7016)
!7026 = !DILocation(line: 1692, column: 1, scope: !7006)
!7027 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6998, file: !6998, line: 45, type: !6999, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7028)
!7028 = !{!7029}
!7029 = !DILocalVariable(name: "irq", arg: 1, scope: !7027, file: !6998, line: 45, type: !32)
!7030 = !DILocation(line: 0, scope: !7027)
!7031 = !DILocation(line: 47, column: 2, scope: !7027)
!7032 = !DILocation(line: 48, column: 1, scope: !7027)
!7033 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1573, file: !1573, line: 1722, type: !7007, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7034)
!7034 = !{!7035}
!7035 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7033, file: !1573, line: 1722, type: !2501)
!7036 = !DILocation(line: 0, scope: !7033)
!7037 = !DILocation(line: 1724, column: 23, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !1573, line: 1724, column: 7)
!7039 = !DILocation(line: 1724, column: 7, scope: !7033)
!7040 = !DILocation(line: 1726, column: 81, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7038, file: !1573, line: 1725, column: 3)
!7042 = !DILocation(line: 1726, column: 60, scope: !7041)
!7043 = !DILocation(line: 1726, column: 34, scope: !7041)
!7044 = !DILocation(line: 1726, column: 5, scope: !7041)
!7045 = !DILocation(line: 1726, column: 43, scope: !7041)
!7046 = !DILocation(line: 271, column: 3, scope: !7047, inlinedAt: !7049)
!7047 = distinct !DISubprogram(name: "__DSB", scope: !7048, file: !7048, line: 269, type: !328, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !245)
!7048 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7049 = distinct !DILocation(line: 1727, column: 5, scope: !7041)
!7050 = !{i64 6899588}
!7051 = !DILocation(line: 260, column: 3, scope: !7052, inlinedAt: !7053)
!7052 = distinct !DISubprogram(name: "__ISB", scope: !7048, file: !7048, line: 258, type: !328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !245)
!7053 = distinct !DILocation(line: 1728, column: 5, scope: !7041)
!7054 = !{i64 6899305}
!7055 = !DILocation(line: 1729, column: 3, scope: !7041)
!7056 = !DILocation(line: 1730, column: 1, scope: !7033)
!7057 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6998, file: !6998, line: 50, type: !7058, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7060)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{!103, !32}
!7060 = !{!7061}
!7061 = !DILocalVariable(name: "irq", arg: 1, scope: !7057, file: !6998, line: 50, type: !32)
!7062 = !DILocation(line: 0, scope: !7057)
!7063 = !DILocation(line: 52, column: 20, scope: !7057)
!7064 = !DILocation(line: 52, column: 9, scope: !7057)
!7065 = !DILocation(line: 52, column: 41, scope: !7057)
!7066 = !DILocation(line: 52, column: 39, scope: !7057)
!7067 = !DILocation(line: 52, column: 2, scope: !7057)
!7068 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6998, file: !6998, line: 64, type: !7069, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7071)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{null, !32, !32, !108}
!7071 = !{!7072, !7073, !7074}
!7072 = !DILocalVariable(name: "irq", arg: 1, scope: !7068, file: !6998, line: 64, type: !32)
!7073 = !DILocalVariable(name: "prio", arg: 2, scope: !7068, file: !6998, line: 64, type: !32)
!7074 = !DILocalVariable(name: "flags", arg: 3, scope: !7068, file: !6998, line: 64, type: !108)
!7075 = !DILocation(line: 0, scope: !7068)
!7076 = !DILocation(line: 83, column: 8, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !6998, line: 82, column: 9)
!7078 = distinct !DILexicalBlock(scope: !7068, file: !6998, line: 76, column: 6)
!7079 = !DILocation(line: 95, column: 2, scope: !7068)
!7080 = !DILocation(line: 96, column: 1, scope: !7068)
!7081 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1573, file: !1573, line: 1814, type: !7082, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7084)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{null, !2501, !108}
!7084 = !{!7085, !7086}
!7085 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7081, file: !1573, line: 1814, type: !2501)
!7086 = !DILocalVariable(name: "priority", arg: 2, scope: !7081, file: !1573, line: 1814, type: !108)
!7087 = !DILocation(line: 0, scope: !7081)
!7088 = !DILocation(line: 0, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7081, file: !1573, line: 1816, column: 7)
!7090 = !DILocation(line: 1816, column: 7, scope: !7081)
!7091 = !DILocation(line: 1824, column: 1, scope: !7081)
!7092 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6998, file: !6998, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !7093)
!7093 = !{!7094}
!7094 = !DILocalVariable(name: "unused", arg: 1, scope: !7092, file: !6998, line: 155, type: !13)
!7095 = !DILocation(line: 0, scope: !7092)
!7096 = !DILocation(line: 159, column: 2, scope: !7092)
!7097 = !DILocation(line: 160, column: 1, scope: !7092)
!7098 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7099, file: !7099, line: 87, type: !328, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !245)
!7099 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7100 = !DILocation(line: 89, column: 2, scope: !7098)
!7101 = !DILocation(line: 90, column: 2, scope: !7098)
!7102 = !DILocation(line: 91, column: 1, scope: !7098)
!7103 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7099, file: !7099, line: 23, type: !328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!7104 = !DISubprogram(name: "z_arm_int_exit", scope: !7105, file: !7105, line: 153, type: !328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!7105 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7106 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7107, file: !7107, line: 256, type: !328, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !245)
!7107 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7108 = !DILocation(line: 258, column: 2, scope: !7106)
!7109 = !DILocation(line: 260, column: 2, scope: !7106)
!7110 = !DILocation(line: 262, column: 2, scope: !7106)
!7111 = !DILocation(line: 263, column: 2, scope: !7106)
!7112 = !DILocation(line: 267, column: 2, scope: !7106)
!7113 = !DILocation(line: 268, column: 2, scope: !7106)
!7114 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7107, file: !7107, line: 53, type: !328, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !245)
!7115 = !DILocation(line: 55, column: 12, scope: !7114)
!7116 = !DILocation(line: 271, column: 3, scope: !7117, inlinedAt: !7118)
!7117 = distinct !DISubprogram(name: "__DSB", scope: !7048, file: !7048, line: 269, type: !328, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !245)
!7118 = distinct !DILocation(line: 56, column: 2, scope: !7114)
!7119 = !{i64 6935362}
!7120 = !DILocation(line: 260, column: 3, scope: !7121, inlinedAt: !7122)
!7121 = distinct !DISubprogram(name: "__ISB", scope: !7048, file: !7048, line: 258, type: !328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !245)
!7122 = distinct !DILocation(line: 57, column: 2, scope: !7114)
!7123 = !{i64 6935079}
!7124 = !DILocation(line: 58, column: 1, scope: !7114)
!7125 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7107, file: !7107, line: 96, type: !328, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !245)
!7126 = !DILocation(line: 103, column: 13, scope: !7125)
!7127 = !DILocation(line: 975, column: 3, scope: !7128, inlinedAt: !7131)
!7128 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7048, file: !7048, line: 971, type: !3393, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !7129)
!7129 = !{!7130}
!7130 = !DILocalVariable(name: "result", scope: !7128, file: !7048, line: 973, type: !108)
!7131 = distinct !DILocation(line: 189, column: 16, scope: !7125)
!7132 = !{i64 6956192}
!7133 = !DILocation(line: 0, scope: !7128, inlinedAt: !7131)
!7134 = !DILocation(line: 189, column: 32, scope: !7125)
!7135 = !DILocalVariable(name: "control", arg: 1, scope: !7136, file: !7048, line: 1001, type: !108)
!7136 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7048, file: !7048, line: 1001, type: !7137, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !7139)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{null, !108}
!7139 = !{!7135}
!7140 = !DILocation(line: 0, scope: !7136, inlinedAt: !7141)
!7141 = distinct !DILocation(line: 189, column: 2, scope: !7125)
!7142 = !DILocation(line: 1003, column: 3, scope: !7136, inlinedAt: !7141)
!7143 = !{i64 6956912}
!7144 = !DILocation(line: 260, column: 3, scope: !7121, inlinedAt: !7145)
!7145 = distinct !DILocation(line: 1004, column: 3, scope: !7136, inlinedAt: !7141)
!7146 = !DILocation(line: 191, column: 1, scope: !7125)
!7147 = distinct !DISubprogram(name: "arch_swap", scope: !7148, file: !7148, line: 33, type: !7058, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !7149)
!7148 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7149 = !{!7150}
!7150 = !DILocalVariable(name: "key", arg: 1, scope: !7147, file: !7148, line: 33, type: !32)
!7151 = !DILocation(line: 0, scope: !7147)
!7152 = !DILocation(line: 36, column: 2, scope: !7147)
!7153 = !DILocation(line: 36, column: 17, scope: !7147)
!7154 = !DILocation(line: 36, column: 25, scope: !7147)
!7155 = !DILocation(line: 37, column: 37, scope: !7147)
!7156 = !DILocation(line: 37, column: 17, scope: !7147)
!7157 = !DILocation(line: 37, column: 35, scope: !7147)
!7158 = !DILocation(line: 41, column: 12, scope: !7147)
!7159 = !DILocalVariable(name: "key", arg: 1, scope: !7160, file: !7161, line: 84, type: !32)
!7160 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !7162)
!7161 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7162 = !{!7159}
!7163 = !DILocation(line: 0, scope: !7160, inlinedAt: !7164)
!7164 = distinct !DILocation(line: 44, column: 2, scope: !7147)
!7165 = !DILocation(line: 95, column: 2, scope: !7160, inlinedAt: !7164)
!7166 = !{i64 2841857}
!7167 = !DILocation(line: 53, column: 9, scope: !7147)
!7168 = !DILocation(line: 53, column: 24, scope: !7147)
!7169 = !DILocation(line: 53, column: 2, scope: !7147)
!7170 = distinct !DISubprogram(name: "arch_new_thread", scope: !7171, file: !7171, line: 56, type: !7172, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !7273)
!7171 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7172 = !DISubroutineType(types: !7173)
!7173 = !{null, !7174, !7268, !271, !315, !102, !102, !102}
!7174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7175, size: 32)
!7175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !7176)
!7176 = !{!7177, !7235, !7247, !7248, !7249, !7250, !7263}
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7175, file: !163, line: 247, baseType: !7178, size: 384)
!7178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7179)
!7179 = !{!7180, !7204, !7211, !7212, !7213, !7222, !7223, !7224}
!7180 = !DIDerivedType(tag: DW_TAG_member, scope: !7178, file: !163, line: 60, baseType: !7181, size: 64)
!7181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7178, file: !163, line: 60, size: 64, elements: !7182)
!7182 = !{!7183, !7198}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7181, file: !163, line: 61, baseType: !7184, size: 64)
!7184 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7185)
!7185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7186)
!7186 = !{!7187, !7193}
!7187 = !DIDerivedType(tag: DW_TAG_member, scope: !7185, file: !146, line: 38, baseType: !7188, size: 32)
!7188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7185, file: !146, line: 38, size: 32, elements: !7189)
!7189 = !{!7190, !7192}
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7188, file: !146, line: 39, baseType: !7191, size: 32)
!7191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7185, size: 32)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7188, file: !146, line: 40, baseType: !7191, size: 32)
!7193 = !DIDerivedType(tag: DW_TAG_member, scope: !7185, file: !146, line: 42, baseType: !7194, size: 32, offset: 32)
!7194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7185, file: !146, line: 42, size: 32, elements: !7195)
!7195 = !{!7196, !7197}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7194, file: !146, line: 43, baseType: !7191, size: 32)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7194, file: !146, line: 44, baseType: !7191, size: 32)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7181, file: !163, line: 62, baseType: !7199, size: 64)
!7199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7200)
!7200 = !{!7201}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7199, file: !175, line: 50, baseType: !7202, size: 64)
!7202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7203, size: 64, elements: !180)
!7203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7199, size: 32)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7178, file: !163, line: 68, baseType: !7205, size: 32, offset: 64)
!7205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7206, size: 32)
!7206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7207)
!7207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7208)
!7208 = !{!7209}
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7207, file: !141, line: 232, baseType: !7210, size: 64)
!7210 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7185)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7178, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7178, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7213 = !DIDerivedType(tag: DW_TAG_member, scope: !7178, file: !163, line: 90, baseType: !7214, size: 16, offset: 112)
!7214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7178, file: !163, line: 90, size: 16, elements: !7215)
!7215 = !{!7216, !7221}
!7216 = !DIDerivedType(tag: DW_TAG_member, scope: !7214, file: !163, line: 91, baseType: !7217, size: 16)
!7217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7214, file: !163, line: 91, size: 16, elements: !7218)
!7218 = !{!7219, !7220}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7217, file: !163, line: 96, baseType: !195, size: 8)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7217, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7214, file: !163, line: 100, baseType: !121, size: 16)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7178, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7178, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7178, file: !163, line: 131, baseType: !7225, size: 192, offset: 192)
!7225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7226)
!7226 = !{!7227, !7228, !7234}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7225, file: !141, line: 245, baseType: !7184, size: 64)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7225, file: !141, line: 246, baseType: !7229, size: 32, offset: 64)
!7229 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7230)
!7230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7231, size: 32)
!7231 = !DISubroutineType(types: !7232)
!7232 = !{null, !7233}
!7233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7225, size: 32)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7225, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7175, file: !163, line: 250, baseType: !7236, size: 288, offset: 384)
!7236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7237)
!7237 = !{!7238, !7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7236, file: !214, line: 26, baseType: !108, size: 32)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7236, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7236, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7236, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7236, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7236, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7236, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7236, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7236, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7175, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7175, file: !163, line: 256, baseType: !7206, size: 64, offset: 704)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7175, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7175, file: !163, line: 325, baseType: !7251, size: 32, offset: 800)
!7251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7252, size: 32)
!7252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7253)
!7253 = !{!7254, !7260, !7261}
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7252, file: !137, line: 5074, baseType: !7255, size: 96)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !7256)
!7256 = !{!7257, !7258, !7259}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7255, file: !234, line: 57, baseType: !237, size: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7255, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7255, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7252, file: !137, line: 5075, baseType: !7206, size: 64, offset: 96)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7252, file: !137, line: 5076, baseType: !7262, offset: 160)
!7262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7175, file: !163, line: 343, baseType: !7264, size: 64, offset: 832)
!7264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7265)
!7265 = !{!7266, !7267}
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7264, file: !214, line: 63, baseType: !108, size: 32)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7264, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7269, size: 32)
!7269 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !308, line: 44, baseType: !7270)
!7270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !310, line: 47, size: 8, elements: !7271)
!7271 = !{!7272}
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7270, file: !310, line: 48, baseType: !272, size: 8)
!7273 = !{!7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281}
!7274 = !DILocalVariable(name: "thread", arg: 1, scope: !7170, file: !7171, line: 56, type: !7174)
!7275 = !DILocalVariable(name: "stack", arg: 2, scope: !7170, file: !7171, line: 56, type: !7268)
!7276 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7170, file: !7171, line: 57, type: !271)
!7277 = !DILocalVariable(name: "entry", arg: 4, scope: !7170, file: !7171, line: 57, type: !315)
!7278 = !DILocalVariable(name: "p1", arg: 5, scope: !7170, file: !7171, line: 58, type: !102)
!7279 = !DILocalVariable(name: "p2", arg: 6, scope: !7170, file: !7171, line: 58, type: !102)
!7280 = !DILocalVariable(name: "p3", arg: 7, scope: !7170, file: !7171, line: 58, type: !102)
!7281 = !DILocalVariable(name: "iframe", scope: !7170, file: !7171, line: 60, type: !2605)
!7282 = !DILocation(line: 0, scope: !7170)
!7283 = !DILocation(line: 85, column: 11, scope: !7170)
!7284 = !DILocation(line: 93, column: 10, scope: !7170)
!7285 = !DILocation(line: 98, column: 13, scope: !7170)
!7286 = !DILocation(line: 100, column: 15, scope: !7170)
!7287 = !DILocation(line: 100, column: 10, scope: !7170)
!7288 = !DILocation(line: 100, column: 13, scope: !7170)
!7289 = !DILocation(line: 101, column: 15, scope: !7170)
!7290 = !DILocation(line: 101, column: 10, scope: !7170)
!7291 = !DILocation(line: 101, column: 13, scope: !7170)
!7292 = !DILocation(line: 102, column: 15, scope: !7170)
!7293 = !DILocation(line: 102, column: 10, scope: !7170)
!7294 = !DILocation(line: 102, column: 13, scope: !7170)
!7295 = !DILocation(line: 103, column: 15, scope: !7170)
!7296 = !DILocation(line: 103, column: 10, scope: !7170)
!7297 = !DILocation(line: 103, column: 13, scope: !7170)
!7298 = !DILocation(line: 106, column: 10, scope: !7170)
!7299 = !DILocation(line: 106, column: 15, scope: !7170)
!7300 = !DILocation(line: 122, column: 29, scope: !7170)
!7301 = !DILocation(line: 122, column: 23, scope: !7170)
!7302 = !DILocation(line: 122, column: 27, scope: !7170)
!7303 = !DILocation(line: 123, column: 15, scope: !7170)
!7304 = !DILocation(line: 123, column: 23, scope: !7170)
!7305 = !DILocation(line: 143, column: 1, scope: !7170)
!7306 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7171, file: !7171, line: 530, type: !7307, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !7309)
!7307 = !DISubroutineType(types: !7308)
!7308 = !{null, !7174, !271, !315}
!7309 = !{!7310, !7311, !7312}
!7310 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7306, file: !7171, line: 530, type: !7174)
!7311 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7306, file: !7171, line: 530, type: !271)
!7312 = !DILocalVariable(name: "_main", arg: 3, scope: !7306, file: !7171, line: 531, type: !315)
!7313 = !DILocation(line: 0, scope: !7306)
!7314 = !DILocation(line: 535, column: 11, scope: !7306)
!7315 = !DILocation(line: 576, column: 2, scope: !7306)
!7316 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7317 = !DILocation(line: 603, column: 2, scope: !7306)
!7318 = distinct !DISubprogram(name: "z_arm_fault", scope: !7319, file: !7319, line: 1036, type: !7320, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7335)
!7319 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7320 = !DISubroutineType(types: !7321)
!7321 = !{null, !108, !108, !108, !7322}
!7322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7323, size: 32)
!7323 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7324)
!7324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7325)
!7325 = !{!7326, !7327, !7328, !7329, !7330, !7331, !7332, !7333, !7334}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7324, file: !214, line: 26, baseType: !108, size: 32)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7324, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7324, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7324, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7324, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7324, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7324, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7324, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7324, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7335 = !{!7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345}
!7336 = !DILocalVariable(name: "msp", arg: 1, scope: !7318, file: !7319, line: 1036, type: !108)
!7337 = !DILocalVariable(name: "psp", arg: 2, scope: !7318, file: !7319, line: 1036, type: !108)
!7338 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7318, file: !7319, line: 1036, type: !108)
!7339 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7318, file: !7319, line: 1037, type: !7322)
!7340 = !DILocalVariable(name: "reason", scope: !7318, file: !7319, line: 1039, type: !108)
!7341 = !DILocalVariable(name: "fault", scope: !7318, file: !7319, line: 1040, type: !103)
!7342 = !DILocalVariable(name: "recoverable", scope: !7318, file: !7319, line: 1041, type: !131)
!7343 = !DILocalVariable(name: "nested_exc", scope: !7318, file: !7319, line: 1041, type: !131)
!7344 = !DILocalVariable(name: "esf", scope: !7318, file: !7319, line: 1042, type: !2673)
!7345 = !DILocalVariable(name: "esf_copy", scope: !7318, file: !7319, line: 1047, type: !2674)
!7346 = !DILocation(line: 0, scope: !7318)
!7347 = !DILocation(line: 1040, column: 19, scope: !7318)
!7348 = !DILocation(line: 1040, column: 24, scope: !7318)
!7349 = !DILocation(line: 1041, column: 2, scope: !7318)
!7350 = !DILocation(line: 1047, column: 2, scope: !7318)
!7351 = !DILocation(line: 1047, column: 15, scope: !7318)
!7352 = !DILocalVariable(name: "key", arg: 1, scope: !7353, file: !7161, line: 84, type: !32)
!7353 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7354)
!7354 = !{!7352}
!7355 = !DILocation(line: 0, scope: !7353, inlinedAt: !7356)
!7356 = distinct !DILocation(line: 1050, column: 2, scope: !7318)
!7357 = !DILocation(line: 95, column: 2, scope: !7353, inlinedAt: !7356)
!7358 = !{i64 2875101}
!7359 = !DILocation(line: 1055, column: 9, scope: !7318)
!7360 = !DILocation(line: 1063, column: 11, scope: !7318)
!7361 = !DILocation(line: 1064, column: 6, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7318, file: !7319, line: 1064, column: 6)
!7363 = !{i8 0, i8 2}
!7364 = !DILocation(line: 1064, column: 6, scope: !7318)
!7365 = !DILocation(line: 1070, column: 20, scope: !7318)
!7366 = !DILocation(line: 1070, column: 2, scope: !7318)
!7367 = !DILocation(line: 1089, column: 6, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7318, file: !7319, line: 1089, column: 6)
!7369 = !DILocation(line: 0, scope: !7368)
!7370 = !DILocation(line: 1089, column: 6, scope: !7318)
!7371 = !DILocation(line: 1090, column: 28, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7373, file: !7319, line: 1090, column: 7)
!7373 = distinct !DILexicalBlock(scope: !7368, file: !7319, line: 1089, column: 18)
!7374 = !DILocation(line: 1090, column: 44, scope: !7372)
!7375 = !DILocation(line: 1090, column: 7, scope: !7373)
!7376 = !DILocation(line: 1091, column: 24, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7372, file: !7319, line: 1090, column: 50)
!7378 = !DILocation(line: 1092, column: 3, scope: !7377)
!7379 = !DILocation(line: 1094, column: 23, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7368, file: !7319, line: 1093, column: 9)
!7381 = !DILocation(line: 1097, column: 2, scope: !7318)
!7382 = !DILocation(line: 1098, column: 1, scope: !7318)
!7383 = distinct !DISubprogram(name: "get_esf", scope: !7319, file: !7319, line: 894, type: !7384, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7387)
!7384 = !DISubroutineType(types: !7385)
!7385 = !{!2673, !108, !108, !108, !7386}
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!7387 = !{!7388, !7389, !7390, !7391, !7392, !7393}
!7388 = !DILocalVariable(name: "msp", arg: 1, scope: !7383, file: !7319, line: 894, type: !108)
!7389 = !DILocalVariable(name: "psp", arg: 2, scope: !7383, file: !7319, line: 894, type: !108)
!7390 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7383, file: !7319, line: 894, type: !108)
!7391 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7383, file: !7319, line: 895, type: !7386)
!7392 = !DILocalVariable(name: "alternative_state_exc", scope: !7383, file: !7319, line: 897, type: !131)
!7393 = !DILocalVariable(name: "ptr_esf", scope: !7383, file: !7319, line: 898, type: !2673)
!7394 = !DILocation(line: 0, scope: !7383)
!7395 = !DILocation(line: 900, column: 14, scope: !7383)
!7396 = !DILocation(line: 902, column: 49, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7383, file: !7319, line: 902, column: 6)
!7398 = !DILocation(line: 902, column: 6, scope: !7383)
!7399 = !DILocation(line: 983, column: 44, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7383, file: !7319, line: 983, column: 6)
!7401 = !DILocation(line: 985, column: 3, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !7319, line: 985, column: 3)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !7319, line: 985, column: 3)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !7319, line: 985, column: 3)
!7405 = distinct !DILexicalBlock(scope: !7406, file: !7319, line: 985, column: 3)
!7406 = distinct !DILexicalBlock(scope: !7400, file: !7319, line: 984, column: 47)
!7407 = !DILocation(line: 986, column: 3, scope: !7406)
!7408 = !DILocation(line: 983, column: 18, scope: !7400)
!7409 = !DILocation(line: 991, column: 7, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7411, file: !7319, line: 990, column: 30)
!7411 = distinct !DILexicalBlock(scope: !7383, file: !7319, line: 990, column: 6)
!7412 = !DILocation(line: 998, column: 16, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !7319, line: 995, column: 10)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !7319, line: 991, column: 7)
!7415 = !DILocation(line: 1002, column: 2, scope: !7383)
!7416 = !DILocation(line: 1003, column: 1, scope: !7383)
!7417 = distinct !DISubprogram(name: "fault_handle", scope: !7319, file: !7319, line: 786, type: !7418, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7420)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{!108, !2673, !103, !7386}
!7420 = !{!7421, !7422, !7423, !7424}
!7421 = !DILocalVariable(name: "esf", arg: 1, scope: !7417, file: !7319, line: 786, type: !2673)
!7422 = !DILocalVariable(name: "fault", arg: 2, scope: !7417, file: !7319, line: 786, type: !103)
!7423 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7417, file: !7319, line: 786, type: !7386)
!7424 = !DILocalVariable(name: "reason", scope: !7417, file: !7319, line: 788, type: !108)
!7425 = !DILocation(line: 0, scope: !7417)
!7426 = !DILocation(line: 790, column: 15, scope: !7417)
!7427 = !DILocation(line: 792, column: 2, scope: !7417)
!7428 = !DILocation(line: 794, column: 12, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7417, file: !7319, line: 792, column: 17)
!7430 = !DILocation(line: 795, column: 3, scope: !7429)
!7431 = !DILocation(line: 800, column: 12, scope: !7429)
!7432 = !DILocation(line: 801, column: 3, scope: !7429)
!7433 = !DILocation(line: 803, column: 12, scope: !7429)
!7434 = !DILocation(line: 804, column: 3, scope: !7429)
!7435 = !DILocation(line: 806, column: 12, scope: !7429)
!7436 = !DILocation(line: 807, column: 3, scope: !7429)
!7437 = !DILocation(line: 814, column: 3, scope: !7429)
!7438 = !DILocation(line: 815, column: 3, scope: !7429)
!7439 = !DILocation(line: 820, column: 3, scope: !7429)
!7440 = !DILocation(line: 821, column: 3, scope: !7429)
!7441 = !DILocation(line: 829, column: 2, scope: !7417)
!7442 = distinct !DISubprogram(name: "hard_fault", scope: !7319, file: !7319, line: 709, type: !7443, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7445)
!7443 = !DISubroutineType(types: !7444)
!7444 = !{!108, !2673, !7386}
!7445 = !{!7446, !7447, !7448}
!7446 = !DILocalVariable(name: "esf", arg: 1, scope: !7442, file: !7319, line: 709, type: !2673)
!7447 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7442, file: !7319, line: 709, type: !7386)
!7448 = !DILocalVariable(name: "reason", scope: !7442, file: !7319, line: 711, type: !108)
!7449 = !DILocation(line: 0, scope: !7442)
!7450 = !DILocation(line: 713, column: 2, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !7319, line: 713, column: 2)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !7319, line: 713, column: 2)
!7453 = distinct !DILexicalBlock(scope: !7454, file: !7319, line: 713, column: 2)
!7454 = distinct !DILexicalBlock(scope: !7442, file: !7319, line: 713, column: 2)
!7455 = !DILocation(line: 732, column: 15, scope: !7442)
!7456 = !DILocation(line: 734, column: 12, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7442, file: !7319, line: 734, column: 6)
!7458 = !DILocation(line: 734, column: 17, scope: !7457)
!7459 = !DILocation(line: 734, column: 41, scope: !7457)
!7460 = !DILocation(line: 734, column: 6, scope: !7442)
!7461 = !DILocation(line: 735, column: 3, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !7319, line: 735, column: 3)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !7319, line: 735, column: 3)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !7319, line: 735, column: 3)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !7319, line: 735, column: 3)
!7466 = distinct !DILexicalBlock(scope: !7457, file: !7319, line: 734, column: 47)
!7467 = !DILocation(line: 736, column: 2, scope: !7466)
!7468 = !DILocation(line: 736, column: 19, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7457, file: !7319, line: 736, column: 13)
!7470 = !DILocation(line: 736, column: 49, scope: !7469)
!7471 = !DILocation(line: 736, column: 13, scope: !7457)
!7472 = !DILocation(line: 737, column: 3, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !7319, line: 737, column: 3)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !7319, line: 737, column: 3)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7319, line: 737, column: 3)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !7319, line: 737, column: 3)
!7477 = distinct !DILexicalBlock(scope: !7469, file: !7319, line: 736, column: 55)
!7478 = !DILocation(line: 738, column: 2, scope: !7477)
!7479 = !DILocation(line: 738, column: 19, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7469, file: !7319, line: 738, column: 13)
!7481 = !DILocation(line: 738, column: 24, scope: !7480)
!7482 = !DILocation(line: 738, column: 47, scope: !7480)
!7483 = !DILocation(line: 738, column: 13, scope: !7469)
!7484 = !DILocation(line: 739, column: 3, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !7319, line: 739, column: 3)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !7319, line: 739, column: 3)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !7319, line: 739, column: 3)
!7488 = distinct !DILexicalBlock(scope: !7489, file: !7319, line: 739, column: 3)
!7489 = distinct !DILexicalBlock(scope: !7480, file: !7319, line: 738, column: 53)
!7490 = !DILocation(line: 740, column: 7, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7489, file: !7319, line: 740, column: 7)
!7492 = !DILocation(line: 740, column: 7, scope: !7489)
!7493 = !DILocation(line: 741, column: 4, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !7319, line: 741, column: 4)
!7495 = distinct !DILexicalBlock(scope: !7496, file: !7319, line: 741, column: 4)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !7319, line: 741, column: 4)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !7319, line: 741, column: 4)
!7498 = distinct !DILexicalBlock(scope: !7491, file: !7319, line: 740, column: 38)
!7499 = !DILocation(line: 742, column: 24, scope: !7498)
!7500 = !DILocation(line: 743, column: 3, scope: !7498)
!7501 = !DILocation(line: 743, column: 20, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7491, file: !7319, line: 743, column: 14)
!7503 = !DILocation(line: 743, column: 25, scope: !7502)
!7504 = !DILocation(line: 743, column: 52, scope: !7502)
!7505 = !DILocation(line: 743, column: 14, scope: !7491)
!7506 = !DILocation(line: 744, column: 13, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7502, file: !7319, line: 743, column: 58)
!7508 = !DILocation(line: 745, column: 3, scope: !7507)
!7509 = !DILocation(line: 745, column: 20, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7502, file: !7319, line: 745, column: 14)
!7511 = !DILocation(line: 745, column: 25, scope: !7510)
!7512 = !DILocation(line: 745, column: 52, scope: !7510)
!7513 = !DILocation(line: 745, column: 14, scope: !7502)
!7514 = !DILocation(line: 746, column: 13, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !7319, line: 745, column: 58)
!7516 = !DILocation(line: 747, column: 3, scope: !7515)
!7517 = !DILocation(line: 747, column: 20, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7510, file: !7319, line: 747, column: 14)
!7519 = !DILocation(line: 747, column: 52, scope: !7518)
!7520 = !DILocation(line: 747, column: 14, scope: !7510)
!7521 = !DILocation(line: 748, column: 13, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7518, file: !7319, line: 747, column: 58)
!7523 = !DILocation(line: 753, column: 3, scope: !7522)
!7524 = !DILocation(line: 766, column: 2, scope: !7442)
!7525 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7319, file: !7319, line: 229, type: !7418, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7526)
!7526 = !{!7527, !7528, !7529, !7530, !7531, !7532}
!7527 = !DILocalVariable(name: "esf", arg: 1, scope: !7525, file: !7319, line: 229, type: !2673)
!7528 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7525, file: !7319, line: 229, type: !103)
!7529 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7525, file: !7319, line: 230, type: !7386)
!7530 = !DILocalVariable(name: "reason", scope: !7525, file: !7319, line: 232, type: !108)
!7531 = !DILocalVariable(name: "mmfar", scope: !7525, file: !7319, line: 233, type: !108)
!7532 = !DILocalVariable(name: "temp", scope: !7533, file: !7319, line: 254, type: !108)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !7319, line: 244, column: 48)
!7534 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 244, column: 6)
!7535 = !DILocation(line: 0, scope: !7525)
!7536 = !DILocation(line: 235, column: 2, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !7319, line: 235, column: 2)
!7538 = distinct !DILexicalBlock(scope: !7539, file: !7319, line: 235, column: 2)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !7319, line: 235, column: 2)
!7540 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 235, column: 2)
!7541 = !DILocation(line: 237, column: 12, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 237, column: 6)
!7543 = !DILocation(line: 237, column: 17, scope: !7542)
!7544 = !DILocation(line: 237, column: 41, scope: !7542)
!7545 = !DILocation(line: 237, column: 6, scope: !7525)
!7546 = !DILocation(line: 238, column: 3, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !7319, line: 238, column: 3)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !7319, line: 238, column: 3)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !7319, line: 238, column: 3)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !7319, line: 238, column: 3)
!7551 = distinct !DILexicalBlock(scope: !7542, file: !7319, line: 237, column: 47)
!7552 = !DILocation(line: 240, column: 2, scope: !7551)
!7553 = !DILocation(line: 241, column: 12, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 241, column: 6)
!7555 = !DILocation(line: 241, column: 17, scope: !7554)
!7556 = !DILocation(line: 241, column: 43, scope: !7554)
!7557 = !DILocation(line: 241, column: 6, scope: !7525)
!7558 = !DILocation(line: 242, column: 3, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !7319, line: 242, column: 3)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !7319, line: 242, column: 3)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !7319, line: 242, column: 3)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !7319, line: 242, column: 3)
!7563 = distinct !DILexicalBlock(scope: !7554, file: !7319, line: 241, column: 49)
!7564 = !DILocation(line: 243, column: 2, scope: !7563)
!7565 = !DILocation(line: 244, column: 12, scope: !7534)
!7566 = !DILocation(line: 244, column: 17, scope: !7534)
!7567 = !DILocation(line: 244, column: 42, scope: !7534)
!7568 = !DILocation(line: 244, column: 6, scope: !7525)
!7569 = !DILocation(line: 245, column: 3, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !7319, line: 245, column: 3)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !7319, line: 245, column: 3)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !7319, line: 245, column: 3)
!7573 = distinct !DILexicalBlock(scope: !7533, file: !7319, line: 245, column: 3)
!7574 = !DILocation(line: 254, column: 24, scope: !7533)
!7575 = !DILocation(line: 0, scope: !7533)
!7576 = !DILocation(line: 256, column: 13, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7533, file: !7319, line: 256, column: 7)
!7578 = !DILocation(line: 256, column: 18, scope: !7577)
!7579 = !DILocation(line: 256, column: 44, scope: !7577)
!7580 = !DILocation(line: 256, column: 7, scope: !7533)
!7581 = !DILocation(line: 258, column: 4, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !7319, line: 258, column: 4)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !7319, line: 258, column: 4)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !7319, line: 258, column: 4)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !7319, line: 258, column: 4)
!7586 = distinct !DILexicalBlock(scope: !7577, file: !7319, line: 256, column: 50)
!7587 = !DILocation(line: 259, column: 24, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7586, file: !7319, line: 259, column: 8)
!7589 = !DILocation(line: 259, column: 8, scope: !7586)
!7590 = !DILocation(line: 261, column: 15, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7588, file: !7319, line: 259, column: 30)
!7592 = !DILocation(line: 262, column: 4, scope: !7591)
!7593 = !DILocation(line: 265, column: 12, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 265, column: 6)
!7595 = !DILocation(line: 265, column: 17, scope: !7594)
!7596 = !DILocation(line: 265, column: 42, scope: !7594)
!7597 = !DILocation(line: 265, column: 6, scope: !7525)
!7598 = !DILocation(line: 266, column: 3, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !7319, line: 266, column: 3)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !7319, line: 266, column: 3)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !7319, line: 266, column: 3)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !7319, line: 266, column: 3)
!7603 = distinct !DILexicalBlock(scope: !7594, file: !7319, line: 265, column: 48)
!7604 = !DILocation(line: 267, column: 2, scope: !7603)
!7605 = !DILocation(line: 269, column: 12, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 269, column: 6)
!7607 = !DILocation(line: 269, column: 17, scope: !7606)
!7608 = !DILocation(line: 269, column: 41, scope: !7606)
!7609 = !DILocation(line: 269, column: 6, scope: !7525)
!7610 = !DILocation(line: 270, column: 3, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !7319, line: 270, column: 3)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !7319, line: 270, column: 3)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !7319, line: 270, column: 3)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !7319, line: 270, column: 3)
!7615 = distinct !DILexicalBlock(scope: !7606, file: !7319, line: 269, column: 47)
!7616 = !DILocation(line: 272, column: 2, scope: !7615)
!7617 = !DILocation(line: 288, column: 12, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 288, column: 6)
!7619 = !DILocation(line: 288, column: 17, scope: !7618)
!7620 = !DILocation(line: 288, column: 41, scope: !7618)
!7621 = !DILocation(line: 289, column: 9, scope: !7618)
!7622 = !DILocation(line: 288, column: 6, scope: !7525)
!7623 = !DILocation(line: 360, column: 12, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7525, file: !7319, line: 360, column: 6)
!7625 = !DILocation(line: 360, column: 17, scope: !7624)
!7626 = !DILocation(line: 360, column: 41, scope: !7624)
!7627 = !DILocation(line: 360, column: 6, scope: !7525)
!7628 = !DILocation(line: 361, column: 14, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7624, file: !7319, line: 360, column: 47)
!7630 = !DILocation(line: 362, column: 2, scope: !7629)
!7631 = !DILocation(line: 366, column: 12, scope: !7525)
!7632 = !DILocation(line: 369, column: 15, scope: !7525)
!7633 = !DILocation(line: 371, column: 2, scope: !7525)
!7634 = distinct !DISubprogram(name: "bus_fault", scope: !7319, file: !7319, line: 383, type: !7635, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7637)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!103, !2673, !103, !7386}
!7637 = !{!7638, !7639, !7640, !7641, !7642}
!7638 = !DILocalVariable(name: "esf", arg: 1, scope: !7634, file: !7319, line: 383, type: !2673)
!7639 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7634, file: !7319, line: 383, type: !103)
!7640 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7634, file: !7319, line: 383, type: !7386)
!7641 = !DILocalVariable(name: "reason", scope: !7634, file: !7319, line: 385, type: !108)
!7642 = !DILocalVariable(name: "bfar", scope: !7643, file: !7319, line: 405, type: !108)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7319, line: 395, column: 42)
!7644 = distinct !DILexicalBlock(scope: !7634, file: !7319, line: 395, column: 6)
!7645 = !DILocation(line: 0, scope: !7634)
!7646 = !DILocation(line: 387, column: 2, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !7319, line: 387, column: 2)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7319, line: 387, column: 2)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !7319, line: 387, column: 2)
!7650 = distinct !DILexicalBlock(scope: !7634, file: !7319, line: 387, column: 2)
!7651 = !DILocation(line: 389, column: 11, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7634, file: !7319, line: 389, column: 6)
!7653 = !DILocation(line: 389, column: 16, scope: !7652)
!7654 = !DILocation(line: 389, column: 6, scope: !7634)
!7655 = !DILocation(line: 390, column: 3, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !7319, line: 390, column: 3)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !7319, line: 390, column: 3)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !7319, line: 390, column: 3)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !7319, line: 390, column: 3)
!7660 = distinct !DILexicalBlock(scope: !7652, file: !7319, line: 389, column: 39)
!7661 = !DILocation(line: 391, column: 2, scope: !7660)
!7662 = !DILocation(line: 392, column: 11, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7634, file: !7319, line: 392, column: 6)
!7664 = !DILocation(line: 392, column: 16, scope: !7663)
!7665 = !DILocation(line: 392, column: 6, scope: !7634)
!7666 = !DILocation(line: 393, column: 3, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !7319, line: 393, column: 3)
!7668 = distinct !DILexicalBlock(scope: !7669, file: !7319, line: 393, column: 3)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !7319, line: 393, column: 3)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !7319, line: 393, column: 3)
!7671 = distinct !DILexicalBlock(scope: !7663, file: !7319, line: 392, column: 41)
!7672 = !DILocation(line: 394, column: 2, scope: !7671)
!7673 = !DILocation(line: 395, column: 11, scope: !7644)
!7674 = !DILocation(line: 395, column: 16, scope: !7644)
!7675 = !DILocation(line: 395, column: 6, scope: !7634)
!7676 = !DILocation(line: 396, column: 3, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !7319, line: 396, column: 3)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !7319, line: 396, column: 3)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !7319, line: 396, column: 3)
!7680 = distinct !DILexicalBlock(scope: !7643, file: !7319, line: 396, column: 3)
!7681 = !DILocation(line: 405, column: 3, scope: !7643)
!7682 = !DILocation(line: 0, scope: !7643)
!7683 = !DILocation(line: 407, column: 13, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7643, file: !7319, line: 407, column: 7)
!7685 = !DILocation(line: 407, column: 18, scope: !7684)
!7686 = !DILocation(line: 407, column: 44, scope: !7684)
!7687 = !DILocation(line: 407, column: 7, scope: !7643)
!7688 = !DILocation(line: 408, column: 4, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !7319, line: 408, column: 4)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7319, line: 408, column: 4)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !7319, line: 408, column: 4)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !7319, line: 408, column: 4)
!7693 = distinct !DILexicalBlock(scope: !7684, file: !7319, line: 407, column: 50)
!7694 = !DILocation(line: 409, column: 24, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7693, file: !7319, line: 409, column: 8)
!7696 = !DILocation(line: 409, column: 8, scope: !7693)
!7697 = !DILocation(line: 411, column: 15, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7695, file: !7319, line: 409, column: 30)
!7699 = !DILocation(line: 412, column: 4, scope: !7698)
!7700 = !DILocation(line: 415, column: 11, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7634, file: !7319, line: 415, column: 6)
!7702 = !DILocation(line: 415, column: 16, scope: !7701)
!7703 = !DILocation(line: 415, column: 6, scope: !7634)
!7704 = !DILocation(line: 416, column: 3, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !7319, line: 416, column: 3)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7319, line: 416, column: 3)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !7319, line: 416, column: 3)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !7319, line: 416, column: 3)
!7709 = distinct !DILexicalBlock(scope: !7701, file: !7319, line: 415, column: 44)
!7710 = !DILocation(line: 417, column: 2, scope: !7709)
!7711 = !DILocation(line: 418, column: 12, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7634, file: !7319, line: 418, column: 6)
!7713 = !DILocation(line: 418, column: 17, scope: !7712)
!7714 = !DILocation(line: 418, column: 41, scope: !7712)
!7715 = !DILocation(line: 418, column: 6, scope: !7634)
!7716 = !DILocation(line: 423, column: 18, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7712, file: !7319, line: 423, column: 13)
!7718 = !DILocation(line: 423, column: 23, scope: !7717)
!7719 = !DILocation(line: 423, column: 13, scope: !7712)
!7720 = !DILocation(line: 0, scope: !7712)
!7721 = !DILocation(line: 524, column: 12, scope: !7634)
!7722 = !DILocation(line: 526, column: 15, scope: !7634)
!7723 = !DILocation(line: 528, column: 2, scope: !7634)
!7724 = distinct !DISubprogram(name: "usage_fault", scope: !7319, file: !7319, line: 539, type: !7725, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7729)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!108, !7727}
!7727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7728, size: 32)
!7728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2674)
!7729 = !{!7730, !7731}
!7730 = !DILocalVariable(name: "esf", arg: 1, scope: !7724, file: !7319, line: 539, type: !7727)
!7731 = !DILocalVariable(name: "reason", scope: !7724, file: !7319, line: 541, type: !108)
!7732 = !DILocation(line: 0, scope: !7724)
!7733 = !DILocation(line: 543, column: 2, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !7319, line: 543, column: 2)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7319, line: 543, column: 2)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7319, line: 543, column: 2)
!7737 = distinct !DILexicalBlock(scope: !7724, file: !7319, line: 543, column: 2)
!7738 = !DILocation(line: 546, column: 12, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7724, file: !7319, line: 546, column: 6)
!7740 = !DILocation(line: 546, column: 17, scope: !7739)
!7741 = !DILocation(line: 546, column: 43, scope: !7739)
!7742 = !DILocation(line: 546, column: 6, scope: !7724)
!7743 = !DILocation(line: 547, column: 3, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !7319, line: 547, column: 3)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7319, line: 547, column: 3)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7319, line: 547, column: 3)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7319, line: 547, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7739, file: !7319, line: 546, column: 49)
!7749 = !DILocation(line: 548, column: 2, scope: !7748)
!7750 = !DILocation(line: 549, column: 12, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7724, file: !7319, line: 549, column: 6)
!7752 = !DILocation(line: 549, column: 17, scope: !7751)
!7753 = !DILocation(line: 549, column: 43, scope: !7751)
!7754 = !DILocation(line: 549, column: 6, scope: !7724)
!7755 = !DILocation(line: 550, column: 3, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7319, line: 550, column: 3)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7319, line: 550, column: 3)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7319, line: 550, column: 3)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7319, line: 550, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7751, file: !7319, line: 549, column: 49)
!7761 = !DILocation(line: 551, column: 2, scope: !7760)
!7762 = !DILocation(line: 567, column: 12, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7724, file: !7319, line: 567, column: 6)
!7764 = !DILocation(line: 567, column: 17, scope: !7763)
!7765 = !DILocation(line: 567, column: 38, scope: !7763)
!7766 = !DILocation(line: 567, column: 6, scope: !7724)
!7767 = !DILocation(line: 568, column: 3, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !7319, line: 568, column: 3)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !7319, line: 568, column: 3)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7319, line: 568, column: 3)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !7319, line: 568, column: 3)
!7772 = distinct !DILexicalBlock(scope: !7763, file: !7319, line: 567, column: 44)
!7773 = !DILocation(line: 569, column: 2, scope: !7772)
!7774 = !DILocation(line: 570, column: 12, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7724, file: !7319, line: 570, column: 6)
!7776 = !DILocation(line: 570, column: 17, scope: !7775)
!7777 = !DILocation(line: 570, column: 39, scope: !7775)
!7778 = !DILocation(line: 570, column: 6, scope: !7724)
!7779 = !DILocation(line: 571, column: 3, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7319, line: 571, column: 3)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !7319, line: 571, column: 3)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !7319, line: 571, column: 3)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !7319, line: 571, column: 3)
!7784 = distinct !DILexicalBlock(scope: !7775, file: !7319, line: 570, column: 45)
!7785 = !DILocation(line: 572, column: 2, scope: !7784)
!7786 = !DILocation(line: 573, column: 12, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7724, file: !7319, line: 573, column: 6)
!7788 = !DILocation(line: 573, column: 17, scope: !7787)
!7789 = !DILocation(line: 573, column: 42, scope: !7787)
!7790 = !DILocation(line: 573, column: 6, scope: !7724)
!7791 = !DILocation(line: 574, column: 3, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !7319, line: 574, column: 3)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !7319, line: 574, column: 3)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !7319, line: 574, column: 3)
!7795 = distinct !DILexicalBlock(scope: !7796, file: !7319, line: 574, column: 3)
!7796 = distinct !DILexicalBlock(scope: !7787, file: !7319, line: 573, column: 48)
!7797 = !DILocation(line: 575, column: 2, scope: !7796)
!7798 = !DILocation(line: 576, column: 12, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7724, file: !7319, line: 576, column: 6)
!7800 = !DILocation(line: 576, column: 17, scope: !7799)
!7801 = !DILocation(line: 576, column: 44, scope: !7799)
!7802 = !DILocation(line: 576, column: 6, scope: !7724)
!7803 = !DILocation(line: 577, column: 3, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !7319, line: 577, column: 3)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !7319, line: 577, column: 3)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !7319, line: 577, column: 3)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !7319, line: 577, column: 3)
!7808 = distinct !DILexicalBlock(scope: !7799, file: !7319, line: 576, column: 50)
!7809 = !DILocation(line: 578, column: 2, scope: !7808)
!7810 = !DILocation(line: 581, column: 12, scope: !7724)
!7811 = !DILocation(line: 583, column: 2, scope: !7724)
!7812 = distinct !DISubprogram(name: "debug_monitor", scope: !7319, file: !7319, line: 632, type: !7813, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7815)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{null, !2673, !7386}
!7815 = !{!7816, !7817}
!7816 = !DILocalVariable(name: "esf", arg: 1, scope: !7812, file: !7319, line: 632, type: !2673)
!7817 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7812, file: !7319, line: 632, type: !7386)
!7818 = !DILocation(line: 0, scope: !7812)
!7819 = !DILocation(line: 634, column: 15, scope: !7812)
!7820 = !DILocation(line: 636, column: 2, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7319, line: 636, column: 2)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7319, line: 636, column: 2)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !7319, line: 636, column: 2)
!7824 = distinct !DILexicalBlock(scope: !7812, file: !7319, line: 636, column: 2)
!7825 = !DILocation(line: 652, column: 1, scope: !7812)
!7826 = distinct !DISubprogram(name: "reserved_exception", scope: !7319, file: !7319, line: 776, type: !7827, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7829)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{null, !7727, !103}
!7829 = !{!7830, !7831}
!7830 = !DILocalVariable(name: "esf", arg: 1, scope: !7826, file: !7319, line: 776, type: !7727)
!7831 = !DILocalVariable(name: "fault", arg: 2, scope: !7826, file: !7319, line: 776, type: !103)
!7832 = !DILocation(line: 0, scope: !7826)
!7833 = !DILocation(line: 780, column: 2, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !7319, line: 780, column: 2)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !7319, line: 780, column: 2)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !7319, line: 780, column: 2)
!7837 = distinct !DILexicalBlock(scope: !7826, file: !7319, line: 780, column: 2)
!7838 = !DILocation(line: 783, column: 1, scope: !7826)
!7839 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7319, file: !7319, line: 658, type: !7840, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !7842)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!131, !2673}
!7842 = !{!7843, !7844, !7845}
!7843 = !DILocalVariable(name: "esf", arg: 1, scope: !7839, file: !7319, line: 658, type: !2673)
!7844 = !DILocalVariable(name: "ret_addr", scope: !7839, file: !7319, line: 660, type: !2446)
!7845 = !DILocalVariable(name: "fault_insn", scope: !7839, file: !7319, line: 686, type: !121)
!7846 = !DILocation(line: 0, scope: !7839)
!7847 = !DILocation(line: 660, column: 46, scope: !7839)
!7848 = !DILocation(line: 660, column: 23, scope: !7839)
!7849 = !DILocation(line: 682, column: 11, scope: !7839)
!7850 = !DILocation(line: 271, column: 3, scope: !7851, inlinedAt: !7852)
!7851 = distinct !DISubprogram(name: "__DSB", scope: !7048, file: !7048, line: 269, type: !328, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !245)
!7852 = distinct !DILocation(line: 683, column: 2, scope: !7839)
!7853 = !{i64 6962466}
!7854 = !DILocation(line: 260, column: 3, scope: !7855, inlinedAt: !7856)
!7855 = distinct !DISubprogram(name: "__ISB", scope: !7048, file: !7048, line: 258, type: !328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !245)
!7856 = distinct !DILocation(line: 684, column: 2, scope: !7839)
!7857 = !{i64 6962183}
!7858 = !DILocation(line: 686, column: 35, scope: !7839)
!7859 = !DILocation(line: 686, column: 24, scope: !7839)
!7860 = !DILocation(line: 688, column: 11, scope: !7839)
!7861 = !DILocation(line: 271, column: 3, scope: !7851, inlinedAt: !7862)
!7862 = distinct !DILocation(line: 689, column: 2, scope: !7839)
!7863 = !DILocation(line: 260, column: 3, scope: !7855, inlinedAt: !7864)
!7864 = distinct !DILocation(line: 690, column: 2, scope: !7839)
!7865 = !DILocation(line: 693, column: 45, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7839, file: !7319, line: 693, column: 6)
!7867 = !DILocation(line: 699, column: 1, scope: !7839)
!7868 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7319, file: !7319, line: 1107, type: !328, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !245)
!7869 = !DILocation(line: 1111, column: 11, scope: !7868)
!7870 = !DILocation(line: 1136, column: 1, scope: !7868)
!7871 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7872, file: !7872, line: 26, type: !328, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7873)
!7872 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7873 = !{!7874}
!7874 = !DILocalVariable(name: "irq", scope: !7871, file: !7872, line: 28, type: !103)
!7875 = !DILocation(line: 0, scope: !7871)
!7876 = !DILocation(line: 30, column: 2, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7871, file: !7872, line: 30, column: 2)
!7878 = !DILocation(line: 31, column: 3, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !7872, line: 30, column: 39)
!7880 = distinct !DILexicalBlock(scope: !7877, file: !7872, line: 30, column: 2)
!7881 = !DILocation(line: 30, column: 35, scope: !7880)
!7882 = !DILocation(line: 30, column: 13, scope: !7880)
!7883 = distinct !{!7883, !7876, !7884}
!7884 = !DILocation(line: 32, column: 2, scope: !7877)
!7885 = !DILocation(line: 33, column: 1, scope: !7871)
!7886 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1573, file: !1573, line: 1814, type: !7082, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !7887)
!7887 = !{!7888, !7889}
!7888 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7886, file: !1573, line: 1814, type: !2501)
!7889 = !DILocalVariable(name: "priority", arg: 2, scope: !7886, file: !1573, line: 1814, type: !108)
!7890 = !DILocation(line: 0, scope: !7886)
!7891 = !DILocation(line: 1816, column: 7, scope: !7886)
!7892 = !DILocation(line: 0, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7886, file: !1573, line: 1816, column: 7)
!7894 = !DILocation(line: 1824, column: 1, scope: !7886)
!7895 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7896, file: !7896, line: 27, type: !7897, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2761, retainedNodes: !7994)
!7896 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7897 = !DISubroutineType(types: !7898)
!7898 = !{null, !7899}
!7899 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !7900)
!7900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7901, size: 32)
!7901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !7902)
!7902 = !{!7903, !7961, !7973, !7974, !7975, !7976, !7989}
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7901, file: !163, line: 247, baseType: !7904, size: 384)
!7904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7905)
!7905 = !{!7906, !7930, !7937, !7938, !7939, !7948, !7949, !7950}
!7906 = !DIDerivedType(tag: DW_TAG_member, scope: !7904, file: !163, line: 60, baseType: !7907, size: 64)
!7907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7904, file: !163, line: 60, size: 64, elements: !7908)
!7908 = !{!7909, !7924}
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7907, file: !163, line: 61, baseType: !7910, size: 64)
!7910 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7911)
!7911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7912)
!7912 = !{!7913, !7919}
!7913 = !DIDerivedType(tag: DW_TAG_member, scope: !7911, file: !146, line: 38, baseType: !7914, size: 32)
!7914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7911, file: !146, line: 38, size: 32, elements: !7915)
!7915 = !{!7916, !7918}
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7914, file: !146, line: 39, baseType: !7917, size: 32)
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7911, size: 32)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7914, file: !146, line: 40, baseType: !7917, size: 32)
!7919 = !DIDerivedType(tag: DW_TAG_member, scope: !7911, file: !146, line: 42, baseType: !7920, size: 32, offset: 32)
!7920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7911, file: !146, line: 42, size: 32, elements: !7921)
!7921 = !{!7922, !7923}
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7920, file: !146, line: 43, baseType: !7917, size: 32)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7920, file: !146, line: 44, baseType: !7917, size: 32)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7907, file: !163, line: 62, baseType: !7925, size: 64)
!7925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7926)
!7926 = !{!7927}
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7925, file: !175, line: 50, baseType: !7928, size: 64)
!7928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7929, size: 64, elements: !180)
!7929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7925, size: 32)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7904, file: !163, line: 68, baseType: !7931, size: 32, offset: 64)
!7931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7932, size: 32)
!7932 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7933)
!7933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7934)
!7934 = !{!7935}
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7933, file: !141, line: 232, baseType: !7936, size: 64)
!7936 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7911)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7904, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7904, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7939 = !DIDerivedType(tag: DW_TAG_member, scope: !7904, file: !163, line: 90, baseType: !7940, size: 16, offset: 112)
!7940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7904, file: !163, line: 90, size: 16, elements: !7941)
!7941 = !{!7942, !7947}
!7942 = !DIDerivedType(tag: DW_TAG_member, scope: !7940, file: !163, line: 91, baseType: !7943, size: 16)
!7943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7940, file: !163, line: 91, size: 16, elements: !7944)
!7944 = !{!7945, !7946}
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7943, file: !163, line: 96, baseType: !195, size: 8)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7943, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7940, file: !163, line: 100, baseType: !121, size: 16)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7904, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7904, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7904, file: !163, line: 131, baseType: !7951, size: 192, offset: 192)
!7951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7952)
!7952 = !{!7953, !7954, !7960}
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7951, file: !141, line: 245, baseType: !7910, size: 64)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7951, file: !141, line: 246, baseType: !7955, size: 32, offset: 64)
!7955 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7956)
!7956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7957, size: 32)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{null, !7959}
!7959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7951, size: 32)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7951, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7901, file: !163, line: 250, baseType: !7962, size: 288, offset: 384)
!7962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7963)
!7963 = !{!7964, !7965, !7966, !7967, !7968, !7969, !7970, !7971, !7972}
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7962, file: !214, line: 26, baseType: !108, size: 32)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7962, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7962, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7962, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7962, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7962, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7962, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7962, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7962, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7901, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7901, file: !163, line: 256, baseType: !7932, size: 64, offset: 704)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7901, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7901, file: !163, line: 325, baseType: !7977, size: 32, offset: 800)
!7977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7978, size: 32)
!7978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7979)
!7979 = !{!7980, !7986, !7987}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7978, file: !137, line: 5074, baseType: !7981, size: 96)
!7981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !7982)
!7982 = !{!7983, !7984, !7985}
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7981, file: !234, line: 57, baseType: !237, size: 32)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7981, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7981, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7978, file: !137, line: 5075, baseType: !7932, size: 64, offset: 96)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7978, file: !137, line: 5076, baseType: !7988, offset: 160)
!7988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7901, file: !163, line: 343, baseType: !7990, size: 64, offset: 832)
!7990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7991)
!7991 = !{!7992, !7993}
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7990, file: !214, line: 63, baseType: !108, size: 32)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7990, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7994 = !{!7995}
!7995 = !DILocalVariable(name: "thread", arg: 1, scope: !7895, file: !7896, line: 27, type: !7899)
!7996 = !DILocation(line: 0, scope: !7895)
!7997 = !DILocation(line: 29, column: 6, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7895, file: !7896, line: 29, column: 6)
!7999 = !DILocation(line: 29, column: 15, scope: !7998)
!8000 = !DILocation(line: 29, column: 6, scope: !7895)
!8001 = !DILocation(line: 1031, column: 3, scope: !8002, inlinedAt: !8005)
!8002 = distinct !DISubprogram(name: "__get_IPSR", scope: !7048, file: !7048, line: 1027, type: !3393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2761, retainedNodes: !8003)
!8003 = !{!8004}
!8004 = !DILocalVariable(name: "result", scope: !8002, file: !7048, line: 1029, type: !108)
!8005 = distinct !DILocation(line: 48, column: 10, scope: !8006, inlinedAt: !8010)
!8006 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8007, file: !8007, line: 46, type: !8008, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2761, retainedNodes: !245)
!8007 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!131}
!8010 = distinct !DILocation(line: 30, column: 7, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !7896, line: 30, column: 7)
!8012 = distinct !DILexicalBlock(scope: !7998, file: !7896, line: 29, column: 26)
!8013 = !{i64 6963690}
!8014 = !DILocation(line: 0, scope: !8002, inlinedAt: !8005)
!8015 = !DILocation(line: 48, column: 9, scope: !8006, inlinedAt: !8010)
!8016 = !DILocation(line: 30, column: 7, scope: !8012)
!8017 = !DILocation(line: 42, column: 14, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8011, file: !7896, line: 30, column: 25)
!8019 = !DILocation(line: 48, column: 15, scope: !8018)
!8020 = !DILocation(line: 49, column: 3, scope: !8018)
!8021 = !DILocation(line: 52, column: 2, scope: !7895)
!8022 = !DILocation(line: 53, column: 1, scope: !7895)
!8023 = distinct !DISubprogram(name: "strcpy", scope: !8024, file: !8024, line: 20, type: !8025, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8029)
!8024 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!271, !8027, !8028}
!8027 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !271)
!8028 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !331)
!8029 = !{!8030, !8031, !8032}
!8030 = !DILocalVariable(name: "d", arg: 1, scope: !8023, file: !8024, line: 20, type: !8027)
!8031 = !DILocalVariable(name: "s", arg: 2, scope: !8023, file: !8024, line: 20, type: !8028)
!8032 = !DILocalVariable(name: "dest", scope: !8023, file: !8024, line: 22, type: !271)
!8033 = !DILocation(line: 0, scope: !8023)
!8034 = !DILocation(line: 24, column: 9, scope: !8023)
!8035 = !DILocation(line: 24, column: 12, scope: !8023)
!8036 = !DILocation(line: 24, column: 2, scope: !8023)
!8037 = !DILocation(line: 25, column: 6, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8023, file: !8024, line: 24, column: 21)
!8039 = !DILocation(line: 26, column: 4, scope: !8038)
!8040 = !DILocation(line: 27, column: 4, scope: !8038)
!8041 = distinct !{!8041, !8036, !8042}
!8042 = !DILocation(line: 28, column: 2, scope: !8023)
!8043 = !DILocation(line: 30, column: 5, scope: !8023)
!8044 = !DILocation(line: 32, column: 2, scope: !8023)
!8045 = distinct !DISubprogram(name: "strncpy", scope: !8024, file: !8024, line: 42, type: !8046, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8048)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{!271, !8027, !8028, !132}
!8048 = !{!8049, !8050, !8051, !8052}
!8049 = !DILocalVariable(name: "d", arg: 1, scope: !8045, file: !8024, line: 42, type: !8027)
!8050 = !DILocalVariable(name: "s", arg: 2, scope: !8045, file: !8024, line: 42, type: !8028)
!8051 = !DILocalVariable(name: "n", arg: 3, scope: !8045, file: !8024, line: 42, type: !132)
!8052 = !DILocalVariable(name: "dest", scope: !8045, file: !8024, line: 44, type: !271)
!8053 = !DILocation(line: 0, scope: !8045)
!8054 = !DILocation(line: 46, column: 12, scope: !8045)
!8055 = !DILocation(line: 46, column: 17, scope: !8045)
!8056 = !DILocation(line: 46, column: 20, scope: !8045)
!8057 = !DILocation(line: 46, column: 23, scope: !8045)
!8058 = !DILocation(line: 46, column: 2, scope: !8045)
!8059 = !DILocation(line: 47, column: 6, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8045, file: !8024, line: 46, column: 32)
!8061 = !DILocation(line: 48, column: 4, scope: !8060)
!8062 = !DILocation(line: 49, column: 4, scope: !8060)
!8063 = !DILocation(line: 50, column: 4, scope: !8060)
!8064 = distinct !{!8064, !8058, !8065}
!8065 = !DILocation(line: 51, column: 2, scope: !8045)
!8066 = !DILocation(line: 54, column: 6, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8045, file: !8024, line: 53, column: 16)
!8068 = !DILocation(line: 55, column: 4, scope: !8067)
!8069 = !DILocation(line: 56, column: 4, scope: !8067)
!8070 = !DILocation(line: 53, column: 11, scope: !8045)
!8071 = !DILocation(line: 53, column: 2, scope: !8045)
!8072 = distinct !{!8072, !8071, !8073}
!8073 = !DILocation(line: 57, column: 2, scope: !8045)
!8074 = !DILocation(line: 59, column: 2, scope: !8045)
!8075 = distinct !DISubprogram(name: "strchr", scope: !8024, file: !8024, line: 69, type: !8076, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8078)
!8076 = !DISubroutineType(types: !8077)
!8077 = !{!271, !331, !103}
!8078 = !{!8079, !8080, !8081}
!8079 = !DILocalVariable(name: "s", arg: 1, scope: !8075, file: !8024, line: 69, type: !331)
!8080 = !DILocalVariable(name: "c", arg: 2, scope: !8075, file: !8024, line: 69, type: !103)
!8081 = !DILocalVariable(name: "tmp", scope: !8075, file: !8024, line: 71, type: !272)
!8082 = !DILocation(line: 0, scope: !8075)
!8083 = !DILocation(line: 73, column: 2, scope: !8075)
!8084 = !DILocation(line: 73, column: 10, scope: !8075)
!8085 = !DILocation(line: 73, column: 13, scope: !8075)
!8086 = !DILocation(line: 73, column: 21, scope: !8075)
!8087 = !DILocation(line: 74, column: 4, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8075, file: !8024, line: 73, column: 38)
!8089 = distinct !{!8089, !8083, !8090}
!8090 = !DILocation(line: 75, column: 2, scope: !8075)
!8091 = !DILocation(line: 77, column: 9, scope: !8075)
!8092 = !DILocation(line: 77, column: 2, scope: !8075)
!8093 = distinct !DISubprogram(name: "strrchr", scope: !8024, file: !8024, line: 87, type: !8076, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8094)
!8094 = !{!8095, !8096, !8097}
!8095 = !DILocalVariable(name: "s", arg: 1, scope: !8093, file: !8024, line: 87, type: !331)
!8096 = !DILocalVariable(name: "c", arg: 2, scope: !8093, file: !8024, line: 87, type: !103)
!8097 = !DILocalVariable(name: "match", scope: !8093, file: !8024, line: 89, type: !271)
!8098 = !DILocation(line: 0, scope: !8093)
!8099 = !DILocation(line: 91, column: 2, scope: !8093)
!8100 = !DILocation(line: 92, column: 7, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !8024, line: 92, column: 7)
!8102 = distinct !DILexicalBlock(scope: !8093, file: !8024, line: 91, column: 5)
!8103 = !DILocation(line: 92, column: 10, scope: !8101)
!8104 = !DILocation(line: 92, column: 7, scope: !8102)
!8105 = !DILocation(line: 95, column: 13, scope: !8093)
!8106 = !DILocation(line: 95, column: 2, scope: !8102)
!8107 = distinct !{!8107, !8099, !8108}
!8108 = !DILocation(line: 95, column: 15, scope: !8093)
!8109 = !DILocation(line: 97, column: 2, scope: !8093)
!8110 = distinct !DISubprogram(name: "strlen", scope: !8024, file: !8024, line: 107, type: !8111, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8113)
!8111 = !DISubroutineType(types: !8112)
!8112 = !{!132, !331}
!8113 = !{!8114, !8115}
!8114 = !DILocalVariable(name: "s", arg: 1, scope: !8110, file: !8024, line: 107, type: !331)
!8115 = !DILocalVariable(name: "n", scope: !8110, file: !8024, line: 109, type: !132)
!8116 = !DILocation(line: 0, scope: !8110)
!8117 = !DILocation(line: 111, column: 9, scope: !8110)
!8118 = !DILocation(line: 111, column: 12, scope: !8110)
!8119 = !DILocation(line: 111, column: 2, scope: !8110)
!8120 = !DILocation(line: 112, column: 4, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8110, file: !8024, line: 111, column: 21)
!8122 = !DILocation(line: 113, column: 4, scope: !8121)
!8123 = distinct !{!8123, !8119, !8124}
!8124 = !DILocation(line: 114, column: 2, scope: !8110)
!8125 = !DILocation(line: 116, column: 2, scope: !8110)
!8126 = distinct !DISubprogram(name: "strnlen", scope: !8024, file: !8024, line: 126, type: !8127, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8129)
!8127 = !DISubroutineType(types: !8128)
!8128 = !{!132, !331, !132}
!8129 = !{!8130, !8131, !8132}
!8130 = !DILocalVariable(name: "s", arg: 1, scope: !8126, file: !8024, line: 126, type: !331)
!8131 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8126, file: !8024, line: 126, type: !132)
!8132 = !DILocalVariable(name: "n", scope: !8126, file: !8024, line: 128, type: !132)
!8133 = !DILocation(line: 0, scope: !8126)
!8134 = !DILocation(line: 130, column: 9, scope: !8126)
!8135 = !DILocation(line: 130, column: 12, scope: !8126)
!8136 = !DILocation(line: 130, column: 20, scope: !8126)
!8137 = !DILocation(line: 130, column: 2, scope: !8126)
!8138 = !DILocation(line: 131, column: 4, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8126, file: !8024, line: 130, column: 35)
!8140 = !DILocation(line: 132, column: 4, scope: !8139)
!8141 = distinct !{!8141, !8137, !8142}
!8142 = !DILocation(line: 133, column: 2, scope: !8126)
!8143 = !DILocation(line: 135, column: 2, scope: !8126)
!8144 = distinct !DISubprogram(name: "strcmp", scope: !8024, file: !8024, line: 145, type: !8145, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8147)
!8145 = !DISubroutineType(types: !8146)
!8146 = !{!103, !331, !331}
!8147 = !{!8148, !8149}
!8148 = !DILocalVariable(name: "s1", arg: 1, scope: !8144, file: !8024, line: 145, type: !331)
!8149 = !DILocalVariable(name: "s2", arg: 2, scope: !8144, file: !8024, line: 145, type: !331)
!8150 = !DILocation(line: 0, scope: !8144)
!8151 = !DILocation(line: 147, column: 10, scope: !8144)
!8152 = !DILocation(line: 147, column: 17, scope: !8144)
!8153 = !DILocation(line: 147, column: 14, scope: !8144)
!8154 = !DILocation(line: 147, column: 22, scope: !8144)
!8155 = !DILocation(line: 148, column: 5, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8144, file: !8024, line: 147, column: 40)
!8157 = !DILocation(line: 149, column: 5, scope: !8156)
!8158 = distinct !{!8158, !8159, !8160}
!8159 = !DILocation(line: 147, column: 2, scope: !8144)
!8160 = !DILocation(line: 150, column: 2, scope: !8144)
!8161 = !DILocation(line: 152, column: 9, scope: !8144)
!8162 = !DILocation(line: 152, column: 15, scope: !8144)
!8163 = !DILocation(line: 152, column: 13, scope: !8144)
!8164 = !DILocation(line: 152, column: 2, scope: !8144)
!8165 = distinct !DISubprogram(name: "strncmp", scope: !8024, file: !8024, line: 162, type: !8166, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8168)
!8166 = !DISubroutineType(types: !8167)
!8167 = !{!103, !331, !331, !132}
!8168 = !{!8169, !8170, !8171}
!8169 = !DILocalVariable(name: "s1", arg: 1, scope: !8165, file: !8024, line: 162, type: !331)
!8170 = !DILocalVariable(name: "s2", arg: 2, scope: !8165, file: !8024, line: 162, type: !331)
!8171 = !DILocalVariable(name: "n", arg: 3, scope: !8165, file: !8024, line: 162, type: !132)
!8172 = !DILocation(line: 0, scope: !8165)
!8173 = !DILocation(line: 164, column: 17, scope: !8165)
!8174 = !DILocation(line: 164, column: 21, scope: !8165)
!8175 = !DILocation(line: 164, column: 28, scope: !8165)
!8176 = !DILocation(line: 164, column: 25, scope: !8165)
!8177 = !DILocation(line: 164, column: 33, scope: !8165)
!8178 = !DILocation(line: 165, column: 5, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8165, file: !8024, line: 164, column: 51)
!8180 = !DILocation(line: 166, column: 5, scope: !8179)
!8181 = !DILocation(line: 167, column: 4, scope: !8179)
!8182 = distinct !{!8182, !8183, !8184}
!8183 = !DILocation(line: 164, column: 2, scope: !8165)
!8184 = !DILocation(line: 168, column: 2, scope: !8165)
!8185 = !DILocation(line: 170, column: 25, scope: !8165)
!8186 = !DILocation(line: 170, column: 31, scope: !8165)
!8187 = !DILocation(line: 170, column: 29, scope: !8165)
!8188 = !DILocation(line: 170, column: 9, scope: !8165)
!8189 = !DILocation(line: 170, column: 2, scope: !8165)
!8190 = distinct !DISubprogram(name: "strtok_r", scope: !8024, file: !8024, line: 180, type: !8191, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8193)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{!271, !271, !331, !372}
!8193 = !{!8194, !8195, !8196, !8197, !8198}
!8194 = !DILocalVariable(name: "str", arg: 1, scope: !8190, file: !8024, line: 180, type: !271)
!8195 = !DILocalVariable(name: "sep", arg: 2, scope: !8190, file: !8024, line: 180, type: !331)
!8196 = !DILocalVariable(name: "state", arg: 3, scope: !8190, file: !8024, line: 180, type: !372)
!8197 = !DILocalVariable(name: "start", scope: !8190, file: !8024, line: 182, type: !271)
!8198 = !DILocalVariable(name: "end", scope: !8190, file: !8024, line: 182, type: !271)
!8199 = !DILocation(line: 0, scope: !8190)
!8200 = !DILocation(line: 184, column: 10, scope: !8190)
!8201 = !DILocation(line: 184, column: 22, scope: !8190)
!8202 = !DILocation(line: 187, column: 9, scope: !8190)
!8203 = !DILocation(line: 187, column: 16, scope: !8190)
!8204 = !DILocation(line: 187, column: 19, scope: !8190)
!8205 = !DILocation(line: 187, column: 2, scope: !8190)
!8206 = !DILocation(line: 188, column: 8, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8190, file: !8024, line: 187, column: 40)
!8208 = distinct !{!8208, !8205, !8209}
!8209 = !DILocation(line: 189, column: 2, scope: !8190)
!8210 = !DILocation(line: 198, column: 9, scope: !8190)
!8211 = !DILocation(line: 198, column: 18, scope: !8190)
!8212 = !DILocation(line: 198, column: 17, scope: !8190)
!8213 = !DILocation(line: 198, column: 2, scope: !8190)
!8214 = !DILocation(line: 199, column: 6, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8190, file: !8024, line: 198, column: 37)
!8216 = !DILocation(line: 198, column: 14, scope: !8190)
!8217 = distinct !{!8217, !8213, !8218}
!8218 = !DILocation(line: 200, column: 2, scope: !8190)
!8219 = !DILocation(line: 203, column: 8, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !8024, line: 202, column: 20)
!8221 = distinct !DILexicalBlock(scope: !8190, file: !8024, line: 202, column: 6)
!8222 = !DILocation(line: 204, column: 16, scope: !8220)
!8223 = !DILocation(line: 205, column: 2, scope: !8220)
!8224 = !DILocation(line: 210, column: 1, scope: !8190)
!8225 = distinct !DISubprogram(name: "strcat", scope: !8024, file: !8024, line: 212, type: !8025, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8226)
!8226 = !{!8227, !8228}
!8227 = !DILocalVariable(name: "dest", arg: 1, scope: !8225, file: !8024, line: 212, type: !8027)
!8228 = !DILocalVariable(name: "src", arg: 2, scope: !8225, file: !8024, line: 212, type: !8028)
!8229 = !DILocation(line: 0, scope: !8225)
!8230 = !DILocation(line: 214, column: 16, scope: !8225)
!8231 = !DILocation(line: 214, column: 14, scope: !8225)
!8232 = !DILocation(line: 214, column: 2, scope: !8225)
!8233 = !DILocation(line: 215, column: 2, scope: !8225)
!8234 = distinct !DISubprogram(name: "strncat", scope: !8024, file: !8024, line: 218, type: !8046, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8235)
!8235 = !{!8236, !8237, !8238, !8239, !8240}
!8236 = !DILocalVariable(name: "dest", arg: 1, scope: !8234, file: !8024, line: 218, type: !8027)
!8237 = !DILocalVariable(name: "src", arg: 2, scope: !8234, file: !8024, line: 218, type: !8028)
!8238 = !DILocalVariable(name: "n", arg: 3, scope: !8234, file: !8024, line: 219, type: !132)
!8239 = !DILocalVariable(name: "orig_dest", scope: !8234, file: !8024, line: 221, type: !271)
!8240 = !DILocalVariable(name: "len", scope: !8234, file: !8024, line: 222, type: !132)
!8241 = !DILocation(line: 0, scope: !8234)
!8242 = !DILocation(line: 222, column: 15, scope: !8234)
!8243 = !DILocation(line: 224, column: 7, scope: !8234)
!8244 = !DILocation(line: 225, column: 14, scope: !8234)
!8245 = !DILocation(line: 225, column: 19, scope: !8234)
!8246 = !DILocation(line: 225, column: 11, scope: !8234)
!8247 = !DILocation(line: 225, column: 23, scope: !8234)
!8248 = !DILocation(line: 225, column: 28, scope: !8234)
!8249 = !DILocation(line: 225, column: 2, scope: !8234)
!8250 = !DILocation(line: 226, column: 17, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8234, file: !8024, line: 225, column: 38)
!8252 = !DILocation(line: 226, column: 8, scope: !8251)
!8253 = !DILocation(line: 226, column: 11, scope: !8251)
!8254 = distinct !{!8254, !8249, !8255}
!8255 = !DILocation(line: 227, column: 2, scope: !8234)
!8256 = !DILocation(line: 228, column: 8, scope: !8234)
!8257 = !DILocation(line: 230, column: 2, scope: !8234)
!8258 = distinct !DISubprogram(name: "memcmp", scope: !8024, file: !8024, line: 239, type: !8259, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8261)
!8259 = !DISubroutineType(types: !8260)
!8260 = !{!103, !13, !13, !132}
!8261 = !{!8262, !8263, !8264, !8265, !8266}
!8262 = !DILocalVariable(name: "m1", arg: 1, scope: !8258, file: !8024, line: 239, type: !13)
!8263 = !DILocalVariable(name: "m2", arg: 2, scope: !8258, file: !8024, line: 239, type: !13)
!8264 = !DILocalVariable(name: "n", arg: 3, scope: !8258, file: !8024, line: 239, type: !132)
!8265 = !DILocalVariable(name: "c1", scope: !8258, file: !8024, line: 241, type: !331)
!8266 = !DILocalVariable(name: "c2", scope: !8258, file: !8024, line: 242, type: !331)
!8267 = !DILocation(line: 0, scope: !8258)
!8268 = !DILocation(line: 244, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8258, file: !8024, line: 244, column: 6)
!8270 = !DILocation(line: 244, column: 6, scope: !8258)
!8271 = !DILocation(line: 248, column: 10, scope: !8258)
!8272 = !DILocation(line: 248, column: 14, scope: !8258)
!8273 = !DILocation(line: 248, column: 19, scope: !8258)
!8274 = !DILocation(line: 248, column: 2, scope: !8258)
!8275 = !DILocation(line: 248, column: 23, scope: !8258)
!8276 = !DILocation(line: 248, column: 30, scope: !8258)
!8277 = !DILocation(line: 248, column: 27, scope: !8258)
!8278 = !DILocation(line: 249, column: 5, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8258, file: !8024, line: 248, column: 36)
!8280 = !DILocation(line: 250, column: 5, scope: !8279)
!8281 = distinct !{!8281, !8274, !8282}
!8282 = !DILocation(line: 251, column: 2, scope: !8258)
!8283 = !DILocation(line: 253, column: 9, scope: !8258)
!8284 = !DILocation(line: 253, column: 15, scope: !8258)
!8285 = !DILocation(line: 253, column: 13, scope: !8258)
!8286 = !DILocation(line: 253, column: 2, scope: !8258)
!8287 = !DILocation(line: 254, column: 1, scope: !8258)
!8288 = distinct !DISubprogram(name: "memmove", scope: !8024, file: !8024, line: 263, type: !8289, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8291)
!8289 = !DISubroutineType(types: !8290)
!8290 = !{!102, !102, !13, !132}
!8291 = !{!8292, !8293, !8294, !8295, !8296}
!8292 = !DILocalVariable(name: "d", arg: 1, scope: !8288, file: !8024, line: 263, type: !102)
!8293 = !DILocalVariable(name: "s", arg: 2, scope: !8288, file: !8024, line: 263, type: !13)
!8294 = !DILocalVariable(name: "n", arg: 3, scope: !8288, file: !8024, line: 263, type: !132)
!8295 = !DILocalVariable(name: "dest", scope: !8288, file: !8024, line: 265, type: !271)
!8296 = !DILocalVariable(name: "src", scope: !8288, file: !8024, line: 266, type: !331)
!8297 = !DILocation(line: 0, scope: !8288)
!8298 = !DILocation(line: 268, column: 21, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8288, file: !8024, line: 268, column: 6)
!8300 = !DILocation(line: 268, column: 28, scope: !8299)
!8301 = !DILocation(line: 268, column: 6, scope: !8288)
!8302 = !DILocation(line: 280, column: 12, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8299, file: !8024, line: 278, column: 9)
!8304 = !DILocation(line: 280, column: 3, scope: !8303)
!8305 = !DILocation(line: 275, column: 5, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !8024, line: 274, column: 17)
!8307 = distinct !DILexicalBlock(scope: !8299, file: !8024, line: 268, column: 33)
!8308 = !DILocation(line: 276, column: 14, scope: !8306)
!8309 = !DILocation(line: 276, column: 4, scope: !8306)
!8310 = !DILocation(line: 276, column: 12, scope: !8306)
!8311 = !DILocation(line: 274, column: 12, scope: !8307)
!8312 = !DILocation(line: 274, column: 3, scope: !8307)
!8313 = distinct !{!8313, !8312, !8314}
!8314 = !DILocation(line: 277, column: 3, scope: !8307)
!8315 = !DILocation(line: 281, column: 12, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8303, file: !8024, line: 280, column: 17)
!8317 = !DILocation(line: 281, column: 10, scope: !8316)
!8318 = !DILocation(line: 282, column: 8, scope: !8316)
!8319 = !DILocation(line: 283, column: 7, scope: !8316)
!8320 = !DILocation(line: 284, column: 5, scope: !8316)
!8321 = distinct !{!8321, !8304, !8322}
!8322 = !DILocation(line: 285, column: 3, scope: !8303)
!8323 = !DILocation(line: 288, column: 2, scope: !8288)
!8324 = distinct !DISubprogram(name: "memcpy", scope: !8024, file: !8024, line: 298, type: !8325, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8329)
!8325 = !DISubroutineType(types: !8326)
!8326 = !{!102, !8327, !8328, !132}
!8327 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8328 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8329 = !{!8330, !8331, !8332, !8333, !8334}
!8330 = !DILocalVariable(name: "d", arg: 1, scope: !8324, file: !8024, line: 298, type: !8327)
!8331 = !DILocalVariable(name: "s", arg: 2, scope: !8324, file: !8024, line: 298, type: !8328)
!8332 = !DILocalVariable(name: "n", arg: 3, scope: !8324, file: !8024, line: 298, type: !132)
!8333 = !DILocalVariable(name: "d_byte", scope: !8324, file: !8024, line: 302, type: !878)
!8334 = !DILocalVariable(name: "s_byte", scope: !8324, file: !8024, line: 303, type: !2792)
!8335 = !DILocation(line: 0, scope: !8324)
!8336 = !DILocation(line: 337, column: 11, scope: !8324)
!8337 = !DILocation(line: 337, column: 2, scope: !8324)
!8338 = !DILocation(line: 338, column: 25, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8324, file: !8024, line: 337, column: 16)
!8340 = !DILocation(line: 338, column: 17, scope: !8339)
!8341 = !DILocation(line: 338, column: 11, scope: !8339)
!8342 = !DILocation(line: 338, column: 15, scope: !8339)
!8343 = !DILocation(line: 339, column: 4, scope: !8339)
!8344 = distinct !{!8344, !8337, !8345}
!8345 = !DILocation(line: 340, column: 2, scope: !8324)
!8346 = !DILocation(line: 342, column: 2, scope: !8324)
!8347 = distinct !DISubprogram(name: "memset", scope: !8024, file: !8024, line: 352, type: !8348, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8350)
!8348 = !DISubroutineType(types: !8349)
!8349 = !{!102, !102, !103, !132}
!8350 = !{!8351, !8352, !8353, !8354, !8355}
!8351 = !DILocalVariable(name: "buf", arg: 1, scope: !8347, file: !8024, line: 352, type: !102)
!8352 = !DILocalVariable(name: "c", arg: 2, scope: !8347, file: !8024, line: 352, type: !103)
!8353 = !DILocalVariable(name: "n", arg: 3, scope: !8347, file: !8024, line: 352, type: !132)
!8354 = !DILocalVariable(name: "d_byte", scope: !8347, file: !8024, line: 356, type: !878)
!8355 = !DILocalVariable(name: "c_byte", scope: !8347, file: !8024, line: 357, type: !186)
!8356 = !DILocation(line: 0, scope: !8347)
!8357 = !DILocation(line: 357, column: 25, scope: !8347)
!8358 = !DILocation(line: 389, column: 11, scope: !8347)
!8359 = !DILocation(line: 389, column: 2, scope: !8347)
!8360 = !DILocation(line: 390, column: 11, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8347, file: !8024, line: 389, column: 16)
!8362 = !DILocation(line: 390, column: 15, scope: !8361)
!8363 = !DILocation(line: 391, column: 4, scope: !8361)
!8364 = distinct !{!8364, !8359, !8365}
!8365 = !DILocation(line: 392, column: 2, scope: !8347)
!8366 = !DILocation(line: 394, column: 2, scope: !8347)
!8367 = distinct !DISubprogram(name: "memchr", scope: !8024, file: !8024, line: 404, type: !8368, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !8370)
!8368 = !DISubroutineType(types: !8369)
!8369 = !{!102, !13, !103, !132}
!8370 = !{!8371, !8372, !8373, !8374}
!8371 = !DILocalVariable(name: "s", arg: 1, scope: !8367, file: !8024, line: 404, type: !13)
!8372 = !DILocalVariable(name: "c", arg: 2, scope: !8367, file: !8024, line: 404, type: !103)
!8373 = !DILocalVariable(name: "n", arg: 3, scope: !8367, file: !8024, line: 404, type: !132)
!8374 = !DILocalVariable(name: "p", scope: !8375, file: !8024, line: 407, type: !2792)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !8024, line: 406, column: 14)
!8376 = distinct !DILexicalBlock(scope: !8367, file: !8024, line: 406, column: 6)
!8377 = !DILocation(line: 0, scope: !8367)
!8378 = !DILocation(line: 406, column: 8, scope: !8376)
!8379 = !DILocation(line: 406, column: 6, scope: !8367)
!8380 = !DILocation(line: 409, column: 3, scope: !8375)
!8381 = !DILocation(line: 0, scope: !8375)
!8382 = !DILocation(line: 410, column: 8, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !8024, line: 410, column: 8)
!8384 = distinct !DILexicalBlock(scope: !8375, file: !8024, line: 409, column: 6)
!8385 = !DILocation(line: 410, column: 13, scope: !8383)
!8386 = !DILocation(line: 410, column: 8, scope: !8384)
!8387 = distinct !{!8387, !8380, !8388}
!8388 = !DILocation(line: 414, column: 20, scope: !8375)
!8389 = !DILocation(line: 417, column: 2, scope: !8367)
!8390 = !DILocation(line: 418, column: 1, scope: !8367)
!8391 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !830, file: !830, line: 23, type: !4307, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8392)
!8392 = !{!8393}
!8393 = !DILocalVariable(name: "hook", arg: 1, scope: !8391, file: !830, line: 23, type: !389)
!8394 = !DILocation(line: 0, scope: !8391)
!8395 = !DILocation(line: 25, column: 15, scope: !8391)
!8396 = !DILocation(line: 26, column: 1, scope: !8391)
!8397 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !830, file: !830, line: 14, type: !390, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8398)
!8398 = !{!8399}
!8399 = !DILocalVariable(name: "c", arg: 1, scope: !8397, file: !830, line: 14, type: !103)
!8400 = !DILocation(line: 0, scope: !8397)
!8401 = !DILocation(line: 18, column: 2, scope: !8397)
!8402 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !830, file: !830, line: 28, type: !8403, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8405)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{!103, !103, !826}
!8405 = !{!8406, !8407}
!8406 = !DILocalVariable(name: "c", arg: 1, scope: !8402, file: !830, line: 28, type: !103)
!8407 = !DILocalVariable(name: "stream", arg: 2, scope: !8402, file: !830, line: 28, type: !826)
!8408 = !DILocation(line: 0, scope: !8402)
!8409 = !DILocation(line: 30, column: 27, scope: !8402)
!8410 = !DILocation(line: 30, column: 50, scope: !8402)
!8411 = !DILocation(line: 30, column: 9, scope: !8402)
!8412 = !DILocation(line: 30, column: 2, scope: !8402)
!8413 = distinct !DISubprogram(name: "fputc", scope: !830, file: !830, line: 41, type: !8403, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8414)
!8414 = !{!8415, !8416}
!8415 = !DILocalVariable(name: "c", arg: 1, scope: !8413, file: !830, line: 41, type: !103)
!8416 = !DILocalVariable(name: "stream", arg: 2, scope: !8413, file: !830, line: 41, type: !826)
!8417 = !DILocation(line: 0, scope: !8413)
!8418 = !DILocation(line: 43, column: 9, scope: !8413)
!8419 = !DILocation(line: 43, column: 2, scope: !8413)
!8420 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8421, file: !8421, line: 72, type: !8403, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8422)
!8421 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!8422 = !{!8423, !8424}
!8423 = !DILocalVariable(name: "c", arg: 1, scope: !8420, file: !8421, line: 72, type: !103)
!8424 = !DILocalVariable(name: "stream", arg: 2, scope: !8420, file: !8421, line: 72, type: !826)
!8425 = !DILocation(line: 0, scope: !8420)
!8426 = !DILocation(line: 81, column: 2, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8420, file: !8421, line: 81, column: 2)
!8428 = !{i64 2151100235}
!8429 = !DILocation(line: 82, column: 9, scope: !8420)
!8430 = !DILocation(line: 82, column: 2, scope: !8420)
!8431 = distinct !DISubprogram(name: "fputs", scope: !830, file: !830, line: 46, type: !8432, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8435)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{!103, !8028, !8434}
!8434 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !826)
!8435 = !{!8436, !8437, !8438, !8439}
!8436 = !DILocalVariable(name: "s", arg: 1, scope: !8431, file: !830, line: 46, type: !8028)
!8437 = !DILocalVariable(name: "stream", arg: 2, scope: !8431, file: !830, line: 46, type: !8434)
!8438 = !DILocalVariable(name: "len", scope: !8431, file: !830, line: 48, type: !103)
!8439 = !DILocalVariable(name: "ret", scope: !8431, file: !830, line: 49, type: !103)
!8440 = !DILocation(line: 0, scope: !8431)
!8441 = !DILocation(line: 48, column: 12, scope: !8431)
!8442 = !DILocation(line: 51, column: 8, scope: !8431)
!8443 = !DILocation(line: 53, column: 13, scope: !8431)
!8444 = !DILocation(line: 53, column: 9, scope: !8431)
!8445 = !DILocation(line: 53, column: 2, scope: !8431)
!8446 = distinct !DISubprogram(name: "fwrite", scope: !830, file: !830, line: 99, type: !8447, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8449)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!132, !8328, !132, !132, !8434}
!8449 = !{!8450, !8451, !8452, !8453}
!8450 = !DILocalVariable(name: "ptr", arg: 1, scope: !8446, file: !830, line: 99, type: !8328)
!8451 = !DILocalVariable(name: "size", arg: 2, scope: !8446, file: !830, line: 99, type: !132)
!8452 = !DILocalVariable(name: "nitems", arg: 3, scope: !8446, file: !830, line: 99, type: !132)
!8453 = !DILocalVariable(name: "stream", arg: 4, scope: !8446, file: !830, line: 100, type: !8434)
!8454 = !DILocation(line: 0, scope: !8446)
!8455 = !DILocation(line: 102, column: 9, scope: !8446)
!8456 = !DILocation(line: 102, column: 2, scope: !8446)
!8457 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8421, file: !8421, line: 96, type: !8447, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8458)
!8458 = !{!8459, !8460, !8461, !8462}
!8459 = !DILocalVariable(name: "ptr", arg: 1, scope: !8457, file: !8421, line: 96, type: !8328)
!8460 = !DILocalVariable(name: "size", arg: 2, scope: !8457, file: !8421, line: 96, type: !132)
!8461 = !DILocalVariable(name: "nitems", arg: 3, scope: !8457, file: !8421, line: 96, type: !132)
!8462 = !DILocalVariable(name: "stream", arg: 4, scope: !8457, file: !8421, line: 96, type: !8434)
!8463 = !DILocation(line: 0, scope: !8457)
!8464 = !DILocation(line: 107, column: 2, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8457, file: !8421, line: 107, column: 2)
!8466 = !{i64 2151100339}
!8467 = !DILocation(line: 108, column: 9, scope: !8457)
!8468 = !DILocation(line: 108, column: 2, scope: !8457)
!8469 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !830, file: !830, line: 56, type: !8447, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8470)
!8470 = !{!8471, !8472, !8473, !8474, !8475, !8476, !8477, !8478}
!8471 = !DILocalVariable(name: "ptr", arg: 1, scope: !8469, file: !830, line: 56, type: !8328)
!8472 = !DILocalVariable(name: "size", arg: 2, scope: !8469, file: !830, line: 56, type: !132)
!8473 = !DILocalVariable(name: "nitems", arg: 3, scope: !8469, file: !830, line: 57, type: !132)
!8474 = !DILocalVariable(name: "stream", arg: 4, scope: !8469, file: !830, line: 57, type: !8434)
!8475 = !DILocalVariable(name: "i", scope: !8469, file: !830, line: 59, type: !132)
!8476 = !DILocalVariable(name: "j", scope: !8469, file: !830, line: 60, type: !132)
!8477 = !DILocalVariable(name: "p", scope: !8469, file: !830, line: 61, type: !2792)
!8478 = !DILabel(scope: !8469, name: "done", file: !830, line: 82)
!8479 = !DILocation(line: 0, scope: !8469)
!8480 = !DILocation(line: 63, column: 14, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8469, file: !830, line: 63, column: 6)
!8482 = !DILocation(line: 63, column: 24, scope: !8481)
!8483 = !DILocation(line: 72, column: 3, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8469, file: !830, line: 70, column: 5)
!8485 = !DILocation(line: 0, scope: !8484)
!8486 = !DILocation(line: 73, column: 8, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !830, line: 73, column: 8)
!8488 = distinct !DILexicalBlock(scope: !8484, file: !830, line: 72, column: 6)
!8489 = !DILocation(line: 73, column: 29, scope: !8487)
!8490 = !DILocation(line: 73, column: 27, scope: !8487)
!8491 = !DILocation(line: 73, column: 21, scope: !8487)
!8492 = !DILocation(line: 73, column: 33, scope: !8487)
!8493 = !DILocation(line: 73, column: 8, scope: !8488)
!8494 = !DILocation(line: 76, column: 5, scope: !8488)
!8495 = !DILocation(line: 77, column: 14, scope: !8484)
!8496 = !DILocation(line: 77, column: 3, scope: !8488)
!8497 = distinct !{!8497, !8483, !8498}
!8498 = !DILocation(line: 77, column: 17, scope: !8484)
!8499 = !DILocation(line: 79, column: 4, scope: !8484)
!8500 = !DILocation(line: 80, column: 13, scope: !8469)
!8501 = !DILocation(line: 80, column: 2, scope: !8484)
!8502 = distinct !{!8502, !8503, !8504}
!8503 = !DILocation(line: 70, column: 2, scope: !8469)
!8504 = !DILocation(line: 80, column: 16, scope: !8469)
!8505 = !DILocation(line: 82, column: 1, scope: !8469)
!8506 = !DILocation(line: 83, column: 17, scope: !8469)
!8507 = !DILocation(line: 83, column: 2, scope: !8469)
!8508 = !DILocation(line: 84, column: 1, scope: !8469)
!8509 = distinct !DISubprogram(name: "puts", scope: !830, file: !830, line: 106, type: !8510, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8512)
!8510 = !DISubroutineType(types: !8511)
!8511 = !{!103, !331}
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "s", arg: 1, scope: !8509, file: !830, line: 106, type: !331)
!8514 = !DILocation(line: 0, scope: !8509)
!8515 = !DILocation(line: 108, column: 6, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8509, file: !830, line: 108, column: 6)
!8517 = !DILocation(line: 108, column: 23, scope: !8516)
!8518 = !DILocation(line: 108, column: 6, scope: !8509)
!8519 = !DILocation(line: 112, column: 9, scope: !8509)
!8520 = !DILocation(line: 112, column: 29, scope: !8509)
!8521 = !DILocation(line: 112, column: 2, scope: !8509)
!8522 = !DILocation(line: 113, column: 1, scope: !8509)
!8523 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !837, file: !837, line: 12, type: !8524, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8530)
!8524 = !DISubroutineType(types: !8525)
!8525 = !{!8526, !109}
!8526 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !8527)
!8527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !8528)
!8528 = !{!8529}
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8527, file: !105, line: 66, baseType: !104, size: 64)
!8530 = !{!8531, !8532}
!8531 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !8523, file: !837, line: 12, type: !109)
!8532 = !DILocalVariable(name: "now_ticks", scope: !8523, file: !837, line: 14, type: !106)
!8533 = !DILocation(line: 0, scope: !8523)
!8534 = !DILocation(line: 14, column: 22, scope: !8523)
!8535 = !DILocation(line: 16, column: 9, scope: !8523)
!8536 = !DILocation(line: 17, column: 1, scope: !8523)
!8537 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !837, file: !837, line: 103, type: !8538, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8678)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!103, !8540, !13, !8526}
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8541, size: 32)
!8541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8542)
!8542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !8543)
!8543 = !{!8544, !8545, !8546, !8547, !8548, !8650}
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !8542, file: !117, line: 35, baseType: !120, size: 16)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !8542, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !8542, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !8542, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !8542, file: !117, line: 56, baseType: !8549, size: 32, offset: 128)
!8549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8550, size: 32)
!8550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !8551)
!8551 = !{!8552, !8571, !8648, !8649}
!8552 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8550, file: !137, line: 2722, baseType: !8553, size: 64)
!8553 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8554)
!8554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8555)
!8555 = !{!8556}
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8554, file: !141, line: 232, baseType: !8557, size: 64)
!8557 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8558)
!8558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8559)
!8559 = !{!8560, !8566}
!8560 = !DIDerivedType(tag: DW_TAG_member, scope: !8558, file: !146, line: 38, baseType: !8561, size: 32)
!8561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8558, file: !146, line: 38, size: 32, elements: !8562)
!8562 = !{!8563, !8565}
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8561, file: !146, line: 39, baseType: !8564, size: 32)
!8564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8558, size: 32)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8561, file: !146, line: 40, baseType: !8564, size: 32)
!8566 = !DIDerivedType(tag: DW_TAG_member, scope: !8558, file: !146, line: 42, baseType: !8567, size: 32, offset: 32)
!8567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8558, file: !146, line: 42, size: 32, elements: !8568)
!8568 = !{!8569, !8570}
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8567, file: !146, line: 43, baseType: !8564, size: 32)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8567, file: !146, line: 44, baseType: !8564, size: 32)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8550, file: !137, line: 2724, baseType: !8572, size: 32, offset: 64)
!8572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8573, size: 32)
!8573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !8574)
!8574 = !{!8575, !8615, !8627, !8628, !8629, !8630, !8643}
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8573, file: !163, line: 247, baseType: !8576, size: 384)
!8576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !8577)
!8577 = !{!8578, !8589, !8591, !8592, !8593, !8602, !8603, !8604}
!8578 = !DIDerivedType(tag: DW_TAG_member, scope: !8576, file: !163, line: 60, baseType: !8579, size: 64)
!8579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8576, file: !163, line: 60, size: 64, elements: !8580)
!8580 = !{!8581, !8583}
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8579, file: !163, line: 61, baseType: !8582, size: 64)
!8582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !8558)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8579, file: !163, line: 62, baseType: !8584, size: 64)
!8584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !8585)
!8585 = !{!8586}
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8584, file: !175, line: 50, baseType: !8587, size: 64)
!8587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8588, size: 64, elements: !180)
!8588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8584, size: 32)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8576, file: !163, line: 68, baseType: !8590, size: 32, offset: 64)
!8590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8553, size: 32)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8576, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8576, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!8593 = !DIDerivedType(tag: DW_TAG_member, scope: !8576, file: !163, line: 90, baseType: !8594, size: 16, offset: 112)
!8594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8576, file: !163, line: 90, size: 16, elements: !8595)
!8595 = !{!8596, !8601}
!8596 = !DIDerivedType(tag: DW_TAG_member, scope: !8594, file: !163, line: 91, baseType: !8597, size: 16)
!8597 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8594, file: !163, line: 91, size: 16, elements: !8598)
!8598 = !{!8599, !8600}
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8597, file: !163, line: 96, baseType: !195, size: 8)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8597, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8594, file: !163, line: 100, baseType: !121, size: 16)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8576, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8576, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8576, file: !163, line: 131, baseType: !8605, size: 192, offset: 192)
!8605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !8606)
!8606 = !{!8607, !8608, !8614}
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8605, file: !141, line: 245, baseType: !8582, size: 64)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8605, file: !141, line: 246, baseType: !8609, size: 32, offset: 64)
!8609 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !8610)
!8610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8611, size: 32)
!8611 = !DISubroutineType(types: !8612)
!8612 = !{null, !8613}
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8605, size: 32)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8605, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8573, file: !163, line: 250, baseType: !8616, size: 288, offset: 384)
!8616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !8617)
!8617 = !{!8618, !8619, !8620, !8621, !8622, !8623, !8624, !8625, !8626}
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8616, file: !214, line: 26, baseType: !108, size: 32)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8616, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8616, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8616, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8616, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8616, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8616, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8616, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8616, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8573, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8573, file: !163, line: 256, baseType: !8553, size: 64, offset: 704)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8573, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8573, file: !163, line: 325, baseType: !8631, size: 32, offset: 800)
!8631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8632, size: 32)
!8632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !8633)
!8633 = !{!8634, !8640, !8641}
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8632, file: !137, line: 5074, baseType: !8635, size: 96)
!8635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !8636)
!8636 = !{!8637, !8638, !8639}
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8635, file: !234, line: 57, baseType: !237, size: 32)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8635, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8635, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8632, file: !137, line: 5075, baseType: !8553, size: 64, offset: 96)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8632, file: !137, line: 5076, baseType: !8642, offset: 160)
!8642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8573, file: !163, line: 343, baseType: !8644, size: 64, offset: 832)
!8644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !8645)
!8645 = !{!8646, !8647}
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8644, file: !214, line: 63, baseType: !108, size: 32)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8644, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !8550, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !8550, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !8542, file: !117, line: 67, baseType: !8651, size: 32, offset: 160)
!8651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8652, size: 32)
!8652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8653)
!8653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8654, size: 32)
!8654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8655)
!8655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !8656)
!8656 = !{!8657, !8658, !8673}
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !8655, file: !117, line: 91, baseType: !131, size: 8)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !8655, file: !117, line: 93, baseType: !8659, size: 32, offset: 32)
!8659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8660)
!8660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8661, size: 32)
!8661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !8662)
!8662 = !{!8663, !8664, !8665, !8666, !8667, !8668, !8669, !8670, !8671, !8672}
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8661, file: !137, line: 4206, baseType: !8553, size: 64)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8661, file: !137, line: 4208, baseType: !8642, offset: 64)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !8661, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !8661, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !8661, file: !137, line: 4214, baseType: !271, size: 32, offset: 128)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !8661, file: !137, line: 4216, baseType: !271, size: 32, offset: 160)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !8661, file: !137, line: 4218, baseType: !271, size: 32, offset: 192)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !8661, file: !137, line: 4220, baseType: !271, size: 32, offset: 224)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !8661, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8661, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !8655, file: !117, line: 96, baseType: !8674, size: 32, offset: 64)
!8674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8675)
!8675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8676, size: 32)
!8676 = !DISubroutineType(types: !8677)
!8677 = !{null, !8540}
!8678 = !{!8679, !8680, !8681, !8682, !8683}
!8679 = !DILocalVariable(name: "chan", arg: 1, scope: !8537, file: !837, line: 103, type: !8540)
!8680 = !DILocalVariable(name: "msg", arg: 2, scope: !8537, file: !837, line: 103, type: !13)
!8681 = !DILocalVariable(name: "timeout", arg: 3, scope: !8537, file: !837, line: 103, type: !8526)
!8682 = !DILocalVariable(name: "err", scope: !8537, file: !837, line: 105, type: !103)
!8683 = !DILocalVariable(name: "end_ticks", scope: !8537, file: !837, line: 106, type: !109)
!8684 = !DILocation(line: 0, scope: !8537)
!8685 = !DILocation(line: 106, column: 23, scope: !8537)
!8686 = !DILocation(line: 112, column: 12, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8537, file: !837, line: 112, column: 6)
!8688 = !DILocation(line: 112, column: 22, scope: !8687)
!8689 = !DILocation(line: 112, column: 30, scope: !8687)
!8690 = !DILocation(line: 112, column: 61, scope: !8687)
!8691 = !DILocation(line: 112, column: 55, scope: !8687)
!8692 = !DILocation(line: 112, column: 34, scope: !8687)
!8693 = !DILocation(line: 112, column: 6, scope: !8537)
!8694 = !DILocation(line: 116, column: 27, scope: !8537)
!8695 = !DILocation(line: 116, column: 8, scope: !8537)
!8696 = !DILocation(line: 117, column: 6, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8537, file: !837, line: 117, column: 6)
!8698 = !DILocation(line: 117, column: 6, scope: !8537)
!8699 = !DILocation(line: 121, column: 15, scope: !8537)
!8700 = !DILocation(line: 121, column: 35, scope: !8537)
!8701 = !DILocation(line: 121, column: 29, scope: !8537)
!8702 = !DILocation(line: 121, column: 2, scope: !8537)
!8703 = !DILocation(line: 123, column: 8, scope: !8537)
!8704 = !DILocation(line: 125, column: 23, scope: !8537)
!8705 = !DILocation(line: 125, column: 2, scope: !8537)
!8706 = !DILocation(line: 127, column: 2, scope: !8537)
!8707 = !DILocation(line: 128, column: 1, scope: !8537)
!8708 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3413, file: !3413, line: 927, type: !8709, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!103, !8549, !8526}
!8711 = !{!8712, !8713}
!8712 = !DILocalVariable(name: "mutex", arg: 1, scope: !8708, file: !3413, line: 927, type: !8549)
!8713 = !DILocalVariable(name: "timeout", arg: 2, scope: !8708, file: !3413, line: 927, type: !8526)
!8714 = !DILocation(line: 0, scope: !8708)
!8715 = !DILocation(line: 936, column: 2, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8708, file: !3413, line: 936, column: 2)
!8717 = !{i64 2151041976}
!8718 = !DILocation(line: 937, column: 9, scope: !8708)
!8719 = !DILocation(line: 937, column: 2, scope: !8708)
!8720 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !837, file: !837, line: 66, type: !8721, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8723)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!103, !8540, !109}
!8723 = !{!8724, !8725, !8726, !8727, !8728, !8730}
!8724 = !DILocalVariable(name: "chan", arg: 1, scope: !8720, file: !837, line: 66, type: !8540)
!8725 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !8720, file: !837, line: 66, type: !109)
!8726 = !DILocalVariable(name: "last_error", scope: !8720, file: !837, line: 68, type: !103)
!8727 = !DILocalVariable(name: "err", scope: !8720, file: !837, line: 68, type: !103)
!8728 = !DILocalVariable(name: "obs", scope: !8729, file: !837, line: 70, type: !8651)
!8729 = distinct !DILexicalBlock(scope: !8720, file: !837, line: 70, column: 2)
!8730 = !DILocalVariable(name: "obs", scope: !8731, file: !837, line: 81, type: !8651)
!8731 = distinct !DILexicalBlock(scope: !8720, file: !837, line: 81, column: 2)
!8732 = !DILocation(line: 0, scope: !8720)
!8733 = !DILocation(line: 70, column: 54, scope: !8729)
!8734 = !DILocation(line: 0, scope: !8729)
!8735 = !DILocation(line: 70, column: 65, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8729, file: !837, line: 70, column: 2)
!8737 = !DILocation(line: 70, column: 70, scope: !8736)
!8738 = !DILocation(line: 70, column: 2, scope: !8729)
!8739 = !DILocation(line: 81, column: 54, scope: !8731)
!8740 = !DILocation(line: 81, column: 65, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8731, file: !837, line: 81, column: 2)
!8742 = !DILocation(line: 0, scope: !8731)
!8743 = !DILocation(line: 81, column: 70, scope: !8741)
!8744 = !DILocation(line: 81, column: 2, scope: !8731)
!8745 = !DILocation(line: 71, column: 15, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !837, line: 71, column: 7)
!8747 = distinct !DILexicalBlock(scope: !8736, file: !837, line: 70, column: 86)
!8748 = !DILocation(line: 71, column: 23, scope: !8746)
!8749 = !DILocation(line: 71, column: 35, scope: !8746)
!8750 = !DILocation(line: 71, column: 44, scope: !8746)
!8751 = !DILocation(line: 71, column: 7, scope: !8747)
!8752 = !DILocation(line: 72, column: 4, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8746, file: !837, line: 71, column: 54)
!8754 = !DILocation(line: 73, column: 3, scope: !8753)
!8755 = !DILocation(line: 70, column: 79, scope: !8736)
!8756 = distinct !{!8756, !8738, !8757}
!8757 = !DILocation(line: 74, column: 2, scope: !8729)
!8758 = !DILocation(line: 100, column: 2, scope: !8720)
!8759 = !DILocation(line: 82, column: 15, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !837, line: 82, column: 7)
!8761 = distinct !DILexicalBlock(scope: !8741, file: !837, line: 81, column: 86)
!8762 = !DILocation(line: 82, column: 23, scope: !8760)
!8763 = !DILocation(line: 82, column: 35, scope: !8760)
!8764 = !DILocation(line: 82, column: 41, scope: !8760)
!8765 = !DILocation(line: 82, column: 7, scope: !8761)
!8766 = !DILocation(line: 83, column: 43, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8760, file: !837, line: 82, column: 51)
!8768 = !DILocation(line: 83, column: 10, scope: !8767)
!8769 = !DILocation(line: 86, column: 8, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8767, file: !837, line: 86, column: 8)
!8771 = !DILocation(line: 86, column: 8, scope: !8767)
!8772 = !DILocation(line: 87, column: 5, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !837, line: 87, column: 5)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !837, line: 87, column: 5)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !837, line: 87, column: 5)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !837, line: 87, column: 5)
!8777 = distinct !DILexicalBlock(scope: !8770, file: !837, line: 86, column: 13)
!8778 = !DILocation(line: 90, column: 4, scope: !8777)
!8779 = !DILocation(line: 81, column: 79, scope: !8741)
!8780 = distinct !{!8780, !8744, !8781}
!8781 = !DILocation(line: 92, column: 2, scope: !8731)
!8782 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3413, file: !3413, line: 944, type: !8783, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8785)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{!103, !8549}
!8785 = !{!8786}
!8786 = !DILocalVariable(name: "mutex", arg: 1, scope: !8782, file: !3413, line: 944, type: !8549)
!8787 = !DILocation(line: 0, scope: !8782)
!8788 = !DILocation(line: 952, column: 2, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8782, file: !3413, line: 952, column: 2)
!8790 = !{i64 2151042044}
!8791 = !DILocation(line: 953, column: 9, scope: !8782)
!8792 = !DILocation(line: 953, column: 2, scope: !8782)
!8793 = distinct !DISubprogram(name: "k_msgq_put", scope: !3413, file: !3413, line: 1129, type: !8794, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!103, !8660, !13, !8526}
!8796 = !{!8797, !8798, !8799}
!8797 = !DILocalVariable(name: "msgq", arg: 1, scope: !8793, file: !3413, line: 1129, type: !8660)
!8798 = !DILocalVariable(name: "data", arg: 2, scope: !8793, file: !3413, line: 1129, type: !13)
!8799 = !DILocalVariable(name: "timeout", arg: 3, scope: !8793, file: !3413, line: 1129, type: !8526)
!8800 = !DILocation(line: 0, scope: !8793)
!8801 = !DILocation(line: 1139, column: 2, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8793, file: !3413, line: 1139, column: 2)
!8803 = !{i64 2151042792}
!8804 = !DILocation(line: 1140, column: 9, scope: !8793)
!8805 = !DILocation(line: 1140, column: 2, scope: !8793)
!8806 = distinct !DISubprogram(name: "zbus_chan_read", scope: !837, file: !837, line: 130, type: !8807, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8809)
!8807 = !DISubroutineType(types: !8808)
!8808 = !{!103, !8540, !102, !8526}
!8809 = !{!8810, !8811, !8812, !8813}
!8810 = !DILocalVariable(name: "chan", arg: 1, scope: !8806, file: !837, line: 130, type: !8540)
!8811 = !DILocalVariable(name: "msg", arg: 2, scope: !8806, file: !837, line: 130, type: !102)
!8812 = !DILocalVariable(name: "timeout", arg: 3, scope: !8806, file: !837, line: 130, type: !8526)
!8813 = !DILocalVariable(name: "err", scope: !8806, file: !837, line: 132, type: !103)
!8814 = !DILocation(line: 0, scope: !8806)
!8815 = !DILocation(line: 138, column: 27, scope: !8806)
!8816 = !DILocation(line: 138, column: 8, scope: !8806)
!8817 = !DILocation(line: 139, column: 6, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8806, file: !837, line: 139, column: 6)
!8819 = !DILocation(line: 139, column: 6, scope: !8806)
!8820 = !DILocation(line: 143, column: 20, scope: !8806)
!8821 = !DILocation(line: 143, column: 35, scope: !8806)
!8822 = !DILocation(line: 143, column: 29, scope: !8806)
!8823 = !DILocation(line: 143, column: 2, scope: !8806)
!8824 = !DILocation(line: 145, column: 30, scope: !8806)
!8825 = !DILocation(line: 145, column: 9, scope: !8806)
!8826 = !DILocation(line: 145, column: 2, scope: !8806)
!8827 = !DILocation(line: 146, column: 1, scope: !8806)
!8828 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !837, file: !837, line: 148, type: !8829, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!103, !8540, !8526}
!8831 = !{!8832, !8833, !8834, !8835}
!8832 = !DILocalVariable(name: "chan", arg: 1, scope: !8828, file: !837, line: 148, type: !8540)
!8833 = !DILocalVariable(name: "timeout", arg: 2, scope: !8828, file: !837, line: 148, type: !8526)
!8834 = !DILocalVariable(name: "err", scope: !8828, file: !837, line: 150, type: !103)
!8835 = !DILocalVariable(name: "end_ticks", scope: !8828, file: !837, line: 151, type: !109)
!8836 = !DILocation(line: 0, scope: !8828)
!8837 = !DILocation(line: 151, column: 23, scope: !8828)
!8838 = !DILocation(line: 156, column: 27, scope: !8828)
!8839 = !DILocation(line: 156, column: 8, scope: !8828)
!8840 = !DILocation(line: 157, column: 6, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8828, file: !837, line: 157, column: 6)
!8842 = !DILocation(line: 157, column: 6, scope: !8828)
!8843 = !DILocation(line: 161, column: 8, scope: !8828)
!8844 = !DILocation(line: 163, column: 23, scope: !8828)
!8845 = !DILocation(line: 163, column: 2, scope: !8828)
!8846 = !DILocation(line: 165, column: 2, scope: !8828)
!8847 = !DILocation(line: 166, column: 1, scope: !8828)
!8848 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !837, file: !837, line: 168, type: !8829, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8849)
!8849 = !{!8850, !8851, !8852}
!8850 = !DILocalVariable(name: "chan", arg: 1, scope: !8848, file: !837, line: 168, type: !8540)
!8851 = !DILocalVariable(name: "timeout", arg: 2, scope: !8848, file: !837, line: 168, type: !8526)
!8852 = !DILocalVariable(name: "err", scope: !8848, file: !837, line: 173, type: !103)
!8853 = !DILocation(line: 0, scope: !8848)
!8854 = !DILocation(line: 173, column: 31, scope: !8848)
!8855 = !DILocation(line: 173, column: 12, scope: !8848)
!8856 = !DILocation(line: 180, column: 1, scope: !8848)
!8857 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !837, file: !837, line: 182, type: !8858, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8860)
!8858 = !DISubroutineType(types: !8859)
!8859 = !{!103, !8540}
!8860 = !{!8861, !8862}
!8861 = !DILocalVariable(name: "chan", arg: 1, scope: !8857, file: !837, line: 182, type: !8540)
!8862 = !DILocalVariable(name: "err", scope: !8857, file: !837, line: 187, type: !103)
!8863 = !DILocation(line: 0, scope: !8857)
!8864 = !DILocation(line: 187, column: 33, scope: !8857)
!8865 = !DILocation(line: 187, column: 12, scope: !8857)
!8866 = !DILocation(line: 189, column: 2, scope: !8857)
!8867 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !837, file: !837, line: 192, type: !8868, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8871)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{!103, !8653, !8870, !8526}
!8870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8540, size: 32)
!8871 = !{!8872, !8873, !8874}
!8872 = !DILocalVariable(name: "sub", arg: 1, scope: !8867, file: !837, line: 192, type: !8653)
!8873 = !DILocalVariable(name: "chan", arg: 2, scope: !8867, file: !837, line: 192, type: !8870)
!8874 = !DILocalVariable(name: "timeout", arg: 3, scope: !8867, file: !837, line: 193, type: !8526)
!8875 = !DILocation(line: 0, scope: !8867)
!8876 = !DILocation(line: 199, column: 11, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8867, file: !837, line: 199, column: 6)
!8878 = !DILocation(line: 199, column: 17, scope: !8877)
!8879 = !DILocation(line: 199, column: 6, scope: !8867)
!8880 = !DILocation(line: 203, column: 32, scope: !8867)
!8881 = !DILocation(line: 203, column: 9, scope: !8867)
!8882 = !DILocation(line: 203, column: 2, scope: !8867)
!8883 = !DILocation(line: 204, column: 1, scope: !8867)
!8884 = distinct !DISubprogram(name: "k_msgq_get", scope: !3413, file: !3413, line: 1147, type: !8885, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8887)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!103, !8660, !102, !8526}
!8887 = !{!8888, !8889, !8890}
!8888 = !DILocalVariable(name: "msgq", arg: 1, scope: !8884, file: !3413, line: 1147, type: !8660)
!8889 = !DILocalVariable(name: "data", arg: 2, scope: !8884, file: !3413, line: 1147, type: !102)
!8890 = !DILocalVariable(name: "timeout", arg: 3, scope: !8884, file: !3413, line: 1147, type: !8526)
!8891 = !DILocation(line: 0, scope: !8884)
!8892 = !DILocation(line: 1157, column: 2, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8884, file: !3413, line: 1157, column: 2)
!8894 = !{i64 2151042860}
!8895 = !DILocation(line: 1158, column: 9, scope: !8884)
!8896 = !DILocation(line: 1158, column: 2, scope: !8884)
!8897 = distinct !DISubprogram(name: "uart_console_init", scope: !941, file: !941, line: 588, type: !885, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !8898)
!8898 = !{!8899}
!8899 = !DILocalVariable(name: "arg", arg: 1, scope: !8897, file: !941, line: 588, type: !857)
!8900 = !DILocation(line: 0, scope: !8897)
!8901 = !DILocation(line: 593, column: 7, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8897, file: !941, line: 593, column: 6)
!8903 = !DILocation(line: 593, column: 6, scope: !8897)
!8904 = !DILocation(line: 597, column: 2, scope: !8897)
!8905 = !DILocation(line: 599, column: 2, scope: !8897)
!8906 = !DILocation(line: 600, column: 1, scope: !8897)
!8907 = distinct !DISubprogram(name: "device_is_ready", scope: !8908, file: !8908, line: 47, type: !8909, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !8911)
!8908 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!8909 = !DISubroutineType(types: !8910)
!8910 = !{!131, !857}
!8911 = !{!8912}
!8912 = !DILocalVariable(name: "dev", arg: 1, scope: !8907, file: !8908, line: 47, type: !857)
!8913 = !DILocation(line: 0, scope: !8907)
!8914 = !DILocation(line: 55, column: 2, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8907, file: !8908, line: 55, column: 2)
!8916 = !{i64 2151369909}
!8917 = !DILocation(line: 56, column: 9, scope: !8907)
!8918 = !DILocation(line: 56, column: 2, scope: !8907)
!8919 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !941, file: !941, line: 573, type: !328, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !245)
!8920 = !DILocation(line: 576, column: 2, scope: !8919)
!8921 = !DILocation(line: 579, column: 2, scope: !8919)
!8922 = !DILocation(line: 581, column: 1, scope: !8919)
!8923 = distinct !DISubprogram(name: "console_out", scope: !941, file: !941, line: 77, type: !390, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !8924)
!8924 = !{!8925}
!8925 = !DILocalVariable(name: "c", arg: 1, scope: !8923, file: !941, line: 77, type: !103)
!8926 = !DILocation(line: 0, scope: !8923)
!8927 = !DILocation(line: 89, column: 11, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8923, file: !941, line: 89, column: 6)
!8929 = !DILocation(line: 89, column: 6, scope: !8923)
!8930 = !DILocation(line: 90, column: 3, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8928, file: !941, line: 89, column: 17)
!8932 = !DILocation(line: 91, column: 2, scope: !8931)
!8933 = !DILocation(line: 92, column: 34, scope: !8923)
!8934 = !DILocation(line: 92, column: 2, scope: !8923)
!8935 = !DILocation(line: 94, column: 2, scope: !8923)
!8936 = distinct !DISubprogram(name: "uart_poll_out", scope: !8937, file: !8937, line: 95, type: !881, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !8938)
!8937 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/benchmark")
!8938 = !{!8939, !8940}
!8939 = !DILocalVariable(name: "dev", arg: 1, scope: !8936, file: !8937, line: 95, type: !857)
!8940 = !DILocalVariable(name: "out_char", arg: 2, scope: !8936, file: !8937, line: 95, type: !186)
!8941 = !DILocation(line: 0, scope: !8936)
!8942 = !DILocation(line: 105, column: 2, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8936, file: !8937, line: 105, column: 2)
!8944 = !{i64 2151453154}
!8945 = !DILocation(line: 106, column: 2, scope: !8936)
!8946 = !DILocation(line: 107, column: 1, scope: !8936)
!8947 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !851, file: !851, line: 574, type: !881, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !8948)
!8948 = !{!8949, !8950, !8951}
!8949 = !DILocalVariable(name: "dev", arg: 1, scope: !8947, file: !851, line: 574, type: !857)
!8950 = !DILocalVariable(name: "out_char", arg: 2, scope: !8947, file: !851, line: 575, type: !186)
!8951 = !DILocalVariable(name: "api", scope: !8947, file: !851, line: 577, type: !848)
!8952 = !DILocation(line: 0, scope: !8947)
!8953 = !DILocation(line: 578, column: 40, scope: !8947)
!8954 = !DILocation(line: 580, column: 7, scope: !8947)
!8955 = !DILocation(line: 580, column: 2, scope: !8947)
!8956 = !DILocation(line: 581, column: 1, scope: !8947)
!8957 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !860, file: !860, line: 730, type: !8909, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !8958)
!8958 = !{!8959}
!8959 = !DILocalVariable(name: "dev", arg: 1, scope: !8957, file: !860, line: 730, type: !857)
!8960 = !DILocation(line: 0, scope: !8957)
!8961 = !DILocation(line: 732, column: 9, scope: !8957)
!8962 = !DILocation(line: 732, column: 2, scope: !8957)
!8963 = distinct !DISubprogram(name: "uart_register_input", scope: !941, file: !941, line: 560, type: !8964, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !845, retainedNodes: !9009)
!8964 = !DISubroutineType(types: !8965)
!8965 = !{null, !8966, !8966, !9006}
!8966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8967, size: 32)
!8967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !137, line: 2208, size: 128, elements: !8968)
!8968 = !{!8969}
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8967, file: !137, line: 2209, baseType: !8970, size: 128)
!8970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !137, line: 1709, size: 128, elements: !8971)
!8971 = !{!8972, !8985, !8987}
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8970, file: !137, line: 1710, baseType: !8973, size: 64)
!8973 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8974, line: 46, baseType: !8975)
!8974 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8974, line: 41, size: 64, elements: !8976)
!8976 = !{!8977, !8984}
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8975, file: !8974, line: 42, baseType: !8978, size: 32)
!8978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8979, size: 32)
!8979 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8974, line: 39, baseType: !8980)
!8980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8974, line: 35, size: 32, elements: !8981)
!8981 = !{!8982}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8980, file: !8974, line: 36, baseType: !8983, size: 32)
!8983 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8974, line: 32, baseType: !108)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8975, file: !8974, line: 43, baseType: !8978, size: 32, offset: 32)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8970, file: !137, line: 1711, baseType: !8986, offset: 64)
!8986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8970, file: !137, line: 1712, baseType: !8988, size: 64, offset: 64)
!8988 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8989)
!8989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8990)
!8990 = !{!8991}
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8989, file: !141, line: 232, baseType: !8992, size: 64)
!8992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8993)
!8993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8994)
!8994 = !{!8995, !9001}
!8995 = !DIDerivedType(tag: DW_TAG_member, scope: !8993, file: !146, line: 38, baseType: !8996, size: 32)
!8996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8993, file: !146, line: 38, size: 32, elements: !8997)
!8997 = !{!8998, !9000}
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8996, file: !146, line: 39, baseType: !8999, size: 32)
!8999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8993, size: 32)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8996, file: !146, line: 40, baseType: !8999, size: 32)
!9001 = !DIDerivedType(tag: DW_TAG_member, scope: !8993, file: !146, line: 42, baseType: !9002, size: 32, offset: 32)
!9002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8993, file: !146, line: 42, size: 32, elements: !9003)
!9003 = !{!9004, !9005}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9002, file: !146, line: 43, baseType: !8999, size: 32)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9002, file: !146, line: 44, baseType: !8999, size: 32)
!9006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9007, size: 32)
!9007 = !DISubroutineType(types: !9008)
!9008 = !{!185, !271, !185}
!9009 = !{!9010, !9011, !9012}
!9010 = !DILocalVariable(name: "avail", arg: 1, scope: !8963, file: !941, line: 560, type: !8966)
!9011 = !DILocalVariable(name: "lines", arg: 2, scope: !8963, file: !941, line: 560, type: !8966)
!9012 = !DILocalVariable(name: "completion", arg: 3, scope: !8963, file: !941, line: 561, type: !9006)
!9013 = !DILocation(line: 0, scope: !8963)
!9014 = !DILocation(line: 566, column: 1, scope: !8963)
!9015 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1054, file: !1054, line: 40, type: !976, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9016)
!9016 = !{!9017, !9018, !9019, !9020, !9022, !9023, !9028, !9029}
!9017 = !DILocalVariable(name: "port", arg: 1, scope: !9015, file: !1054, line: 40, type: !978)
!9018 = !DILocalVariable(name: "pin", arg: 2, scope: !9015, file: !1054, line: 40, type: !993)
!9019 = !DILocalVariable(name: "flags", arg: 3, scope: !9015, file: !1054, line: 41, type: !994)
!9020 = !DILocalVariable(name: "config", scope: !9015, file: !1054, line: 43, type: !9021)
!9021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!9022 = !DILocalVariable(name: "base", scope: !9015, file: !1054, line: 44, type: !1091)
!9023 = !DILocalVariable(name: "pin_cfg", scope: !9015, file: !1054, line: 52, type: !9024)
!9024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1107, line: 59, size: 160, elements: !9025)
!9025 = !{!9026, !9027}
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9024, file: !1107, line: 60, baseType: !1106, size: 128)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9024, file: !1107, line: 61, baseType: !108, size: 32, offset: 128)
!9028 = !DILocalVariable(name: "gpio_cfg_reg", scope: !9015, file: !1054, line: 54, type: !806)
!9029 = !DILocalVariable(name: "reg", scope: !9015, file: !1054, line: 56, type: !108)
!9030 = !DILocation(line: 0, scope: !9015)
!9031 = !DILocation(line: 43, column: 47, scope: !9015)
!9032 = !DILocation(line: 44, column: 28, scope: !9015)
!9033 = !DILocation(line: 46, column: 35, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9015, file: !1054, line: 46, column: 6)
!9035 = !DILocation(line: 52, column: 2, scope: !9015)
!9036 = !DILocation(line: 52, column: 25, scope: !9015)
!9037 = !DILocation(line: 55, column: 32, scope: !9015)
!9038 = !DILocation(line: 55, column: 24, scope: !9015)
!9039 = !DILocation(line: 55, column: 47, scope: !9015)
!9040 = !DILocation(line: 55, column: 3, scope: !9015)
!9041 = !DILocation(line: 56, column: 17, scope: !9015)
!9042 = !DILocation(line: 66, column: 13, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9015, file: !1054, line: 66, column: 6)
!9044 = !DILocation(line: 66, column: 34, scope: !9043)
!9045 = !DILocation(line: 66, column: 6, scope: !9015)
!9046 = !DILocation(line: 70, column: 36, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9015, file: !1054, line: 70, column: 6)
!9048 = !DILocation(line: 70, column: 14, scope: !9047)
!9049 = !DILocation(line: 70, column: 30, scope: !9047)
!9050 = !DILocation(line: 72, column: 7, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9047, file: !1054, line: 70, column: 72)
!9052 = !DILocation(line: 73, column: 8, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !1054, line: 72, column: 38)
!9054 = distinct !DILexicalBlock(scope: !9051, file: !1054, line: 72, column: 7)
!9055 = !DILocation(line: 74, column: 3, scope: !9053)
!9056 = !DILocation(line: 75, column: 8, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9054, file: !1054, line: 74, column: 10)
!9058 = !DILocation(line: 79, column: 7, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9047, file: !1054, line: 77, column: 9)
!9060 = !DILocation(line: 0, scope: !9047)
!9061 = !DILocation(line: 84, column: 27, scope: !9015)
!9062 = !DILocation(line: 84, column: 26, scope: !9015)
!9063 = !DILocation(line: 84, column: 2, scope: !9015)
!9064 = !DILocation(line: 86, column: 10, scope: !9015)
!9065 = !DILocation(line: 86, column: 25, scope: !9015)
!9066 = !DILocation(line: 87, column: 2, scope: !9015)
!9067 = !DILocation(line: 98, column: 2, scope: !9015)
!9068 = !DILocation(line: 99, column: 2, scope: !9015)
!9069 = !DILocation(line: 101, column: 6, scope: !9015)
!9070 = !DILocation(line: 103, column: 14, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9072, file: !1054, line: 103, column: 7)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !1054, line: 101, column: 35)
!9073 = distinct !DILexicalBlock(scope: !9015, file: !1054, line: 101, column: 6)
!9074 = !DILocation(line: 103, column: 38, scope: !9071)
!9075 = !DILocation(line: 103, column: 7, scope: !9072)
!9076 = !DILocation(line: 105, column: 21, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9071, file: !1054, line: 105, column: 14)
!9078 = !DILocation(line: 105, column: 46, scope: !9077)
!9079 = !DILocation(line: 105, column: 14, scope: !9071)
!9080 = !DILocation(line: 0, scope: !9071)
!9081 = !DILocation(line: 110, column: 3, scope: !9072)
!9082 = !DILocation(line: 111, column: 2, scope: !9072)
!9083 = !DILocation(line: 113, column: 3, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9073, file: !1054, line: 111, column: 9)
!9085 = !DILocation(line: 117, column: 1, scope: !9015)
!9086 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1054, file: !1054, line: 119, type: !9087, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!103, !978, !1378}
!9089 = !{!9090, !9091, !9092, !9093}
!9090 = !DILocalVariable(name: "port", arg: 1, scope: !9086, file: !1054, line: 119, type: !978)
!9091 = !DILocalVariable(name: "value", arg: 2, scope: !9086, file: !1054, line: 119, type: !1378)
!9092 = !DILocalVariable(name: "config", scope: !9086, file: !1054, line: 121, type: !9021)
!9093 = !DILocalVariable(name: "base", scope: !9086, file: !1054, line: 122, type: !1091)
!9094 = !DILocation(line: 0, scope: !9086)
!9095 = !DILocation(line: 121, column: 47, scope: !9086)
!9096 = !DILocation(line: 122, column: 28, scope: !9086)
!9097 = !DILocation(line: 124, column: 11, scope: !9086)
!9098 = !DILocation(line: 124, column: 9, scope: !9086)
!9099 = !DILocation(line: 126, column: 2, scope: !9086)
!9100 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1054, file: !1054, line: 129, type: !1003, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9101)
!9101 = !{!9102, !9103, !9104, !9105, !9106}
!9102 = !DILocalVariable(name: "port", arg: 1, scope: !9100, file: !1054, line: 129, type: !978)
!9103 = !DILocalVariable(name: "mask", arg: 2, scope: !9100, file: !1054, line: 130, type: !1005)
!9104 = !DILocalVariable(name: "value", arg: 3, scope: !9100, file: !1054, line: 131, type: !1000)
!9105 = !DILocalVariable(name: "config", scope: !9100, file: !1054, line: 133, type: !9021)
!9106 = !DILocalVariable(name: "base", scope: !9100, file: !1054, line: 134, type: !1091)
!9107 = !DILocation(line: 0, scope: !9100)
!9108 = !DILocation(line: 133, column: 47, scope: !9100)
!9109 = !DILocation(line: 134, column: 28, scope: !9100)
!9110 = !DILocation(line: 137, column: 5, scope: !9100)
!9111 = !DILocation(line: 137, column: 32, scope: !9100)
!9112 = !DILocation(line: 137, column: 30, scope: !9100)
!9113 = !DILocation(line: 137, column: 48, scope: !9100)
!9114 = !DILocation(line: 137, column: 39, scope: !9100)
!9115 = !DILocation(line: 136, column: 2, scope: !9100)
!9116 = !DILocation(line: 139, column: 2, scope: !9100)
!9117 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1054, file: !1054, line: 142, type: !1008, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9118)
!9118 = !{!9119, !9120, !9121, !9122}
!9119 = !DILocalVariable(name: "port", arg: 1, scope: !9117, file: !1054, line: 142, type: !978)
!9120 = !DILocalVariable(name: "pins", arg: 2, scope: !9117, file: !1054, line: 143, type: !1005)
!9121 = !DILocalVariable(name: "config", scope: !9117, file: !1054, line: 145, type: !9021)
!9122 = !DILocalVariable(name: "base", scope: !9117, file: !1054, line: 146, type: !1091)
!9123 = !DILocation(line: 0, scope: !9117)
!9124 = !DILocation(line: 145, column: 47, scope: !9117)
!9125 = !DILocation(line: 146, column: 28, scope: !9117)
!9126 = !DILocation(line: 148, column: 29, scope: !9117)
!9127 = !DILocation(line: 148, column: 54, scope: !9117)
!9128 = !DILocation(line: 148, column: 2, scope: !9117)
!9129 = !DILocation(line: 150, column: 2, scope: !9117)
!9130 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1054, file: !1054, line: 153, type: !1008, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9131)
!9131 = !{!9132, !9133, !9134, !9135}
!9132 = !DILocalVariable(name: "port", arg: 1, scope: !9130, file: !1054, line: 153, type: !978)
!9133 = !DILocalVariable(name: "pins", arg: 2, scope: !9130, file: !1054, line: 154, type: !1005)
!9134 = !DILocalVariable(name: "config", scope: !9130, file: !1054, line: 156, type: !9021)
!9135 = !DILocalVariable(name: "base", scope: !9130, file: !1054, line: 157, type: !1091)
!9136 = !DILocation(line: 0, scope: !9130)
!9137 = !DILocation(line: 156, column: 47, scope: !9130)
!9138 = !DILocation(line: 157, column: 28, scope: !9130)
!9139 = !DILocation(line: 159, column: 29, scope: !9130)
!9140 = !DILocation(line: 159, column: 56, scope: !9130)
!9141 = !DILocation(line: 159, column: 54, scope: !9130)
!9142 = !DILocation(line: 159, column: 2, scope: !9130)
!9143 = !DILocation(line: 161, column: 2, scope: !9130)
!9144 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1054, file: !1054, line: 164, type: !1008, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9145)
!9145 = !{!9146, !9147, !9148, !9149}
!9146 = !DILocalVariable(name: "port", arg: 1, scope: !9144, file: !1054, line: 164, type: !978)
!9147 = !DILocalVariable(name: "pins", arg: 2, scope: !9144, file: !1054, line: 165, type: !1005)
!9148 = !DILocalVariable(name: "config", scope: !9144, file: !1054, line: 167, type: !9021)
!9149 = !DILocalVariable(name: "base", scope: !9144, file: !1054, line: 168, type: !1091)
!9150 = !DILocation(line: 0, scope: !9144)
!9151 = !DILocation(line: 167, column: 47, scope: !9144)
!9152 = !DILocation(line: 168, column: 28, scope: !9144)
!9153 = !DILocation(line: 170, column: 29, scope: !9144)
!9154 = !DILocation(line: 170, column: 54, scope: !9144)
!9155 = !DILocation(line: 170, column: 2, scope: !9144)
!9156 = !DILocation(line: 172, column: 2, scope: !9144)
!9157 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1054, file: !1054, line: 175, type: !1014, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9158)
!9158 = !{!9159, !9160, !9161, !9162, !9163, !9164, !9165, !9166, !9167, !9168}
!9159 = !DILocalVariable(name: "port", arg: 1, scope: !9157, file: !1054, line: 175, type: !978)
!9160 = !DILocalVariable(name: "pin", arg: 2, scope: !9157, file: !1054, line: 176, type: !993)
!9161 = !DILocalVariable(name: "mode", arg: 3, scope: !9157, file: !1054, line: 177, type: !953)
!9162 = !DILocalVariable(name: "trig", arg: 4, scope: !9157, file: !1054, line: 178, type: !959)
!9163 = !DILocalVariable(name: "config", scope: !9157, file: !1054, line: 180, type: !9021)
!9164 = !DILocalVariable(name: "base", scope: !9157, file: !1054, line: 181, type: !1091)
!9165 = !DILocalVariable(name: "icr_reg", scope: !9157, file: !1054, line: 182, type: !806)
!9166 = !DILocalVariable(name: "key", scope: !9157, file: !1054, line: 183, type: !32)
!9167 = !DILocalVariable(name: "icr_val", scope: !9157, file: !1054, line: 184, type: !108)
!9168 = !DILocalVariable(name: "shift", scope: !9157, file: !1054, line: 185, type: !185)
!9169 = !DILocation(line: 0, scope: !9157)
!9170 = !DILocation(line: 180, column: 47, scope: !9157)
!9171 = !DILocation(line: 181, column: 28, scope: !9157)
!9172 = !DILocation(line: 187, column: 14, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9157, file: !1054, line: 187, column: 6)
!9174 = !DILocation(line: 187, column: 21, scope: !9173)
!9175 = !DILocation(line: 187, column: 19, scope: !9173)
!9176 = !DILocation(line: 187, column: 31, scope: !9173)
!9177 = !DILocation(line: 188, column: 6, scope: !9173)
!9178 = !DILocation(line: 193, column: 12, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9157, file: !1054, line: 193, column: 6)
!9180 = !DILocation(line: 193, column: 35, scope: !9179)
!9181 = !DILocation(line: 195, column: 42, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9179, file: !1054, line: 195, column: 13)
!9183 = !DILocation(line: 198, column: 19, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9182, file: !1054, line: 198, column: 13)
!9185 = !DILocation(line: 198, column: 43, scope: !9184)
!9186 = !DILocation(line: 0, scope: !9179)
!9187 = !DILocation(line: 205, column: 10, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9157, file: !1054, line: 205, column: 6)
!9189 = !DILocation(line: 205, column: 6, scope: !9157)
!9190 = !DILocation(line: 206, column: 14, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9188, file: !1054, line: 205, column: 17)
!9192 = !DILocation(line: 207, column: 21, scope: !9191)
!9193 = !DILocation(line: 208, column: 2, scope: !9191)
!9194 = !DILocation(line: 208, column: 17, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9188, file: !1054, line: 208, column: 13)
!9196 = !DILocation(line: 208, column: 13, scope: !9188)
!9197 = !DILocation(line: 209, column: 14, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9195, file: !1054, line: 208, column: 24)
!9199 = !DILocation(line: 210, column: 21, scope: !9198)
!9200 = !DILocation(line: 0, scope: !9188)
!9201 = !DILocation(line: 55, column: 2, scope: !9202, inlinedAt: !9208)
!9202 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9205)
!9203 = !DISubroutineType(types: !9204)
!9204 = !{!32}
!9205 = !{!9206, !9207}
!9206 = !DILocalVariable(name: "key", scope: !9202, file: !7161, line: 44, type: !32)
!9207 = !DILocalVariable(name: "tmp", scope: !9202, file: !7161, line: 53, type: !32)
!9208 = distinct !DILocation(line: 215, column: 8, scope: !9157)
!9209 = !{i64 3016438}
!9210 = !DILocation(line: 0, scope: !9202, inlinedAt: !9208)
!9211 = !DILocation(line: 217, column: 14, scope: !9157)
!9212 = !DILocation(line: 217, column: 33, scope: !9157)
!9213 = !DILocation(line: 217, column: 30, scope: !9157)
!9214 = !DILocation(line: 217, column: 25, scope: !9157)
!9215 = !DILocation(line: 217, column: 23, scope: !9157)
!9216 = !DILocation(line: 217, column: 52, scope: !9157)
!9217 = !DILocation(line: 217, column: 41, scope: !9157)
!9218 = !DILocation(line: 217, column: 11, scope: !9157)
!9219 = !DILocation(line: 219, column: 2, scope: !9157)
!9220 = !DILocation(line: 220, column: 2, scope: !9157)
!9221 = !DILocation(line: 221, column: 2, scope: !9157)
!9222 = !DILocalVariable(name: "key", arg: 1, scope: !9223, file: !7161, line: 84, type: !32)
!9223 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9224)
!9224 = !{!9222}
!9225 = !DILocation(line: 0, scope: !9223, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 223, column: 2, scope: !9157)
!9227 = !DILocation(line: 95, column: 2, scope: !9223, inlinedAt: !9226)
!9228 = !{i64 3017255}
!9229 = !DILocation(line: 225, column: 2, scope: !9157)
!9230 = !DILocation(line: 226, column: 1, scope: !9157)
!9231 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1054, file: !1054, line: 228, type: !1018, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9232)
!9232 = !{!9233, !9234, !9235, !9236}
!9233 = !DILocalVariable(name: "port", arg: 1, scope: !9231, file: !1054, line: 228, type: !978)
!9234 = !DILocalVariable(name: "cb", arg: 2, scope: !9231, file: !1054, line: 229, type: !1020)
!9235 = !DILocalVariable(name: "set", arg: 3, scope: !9231, file: !1054, line: 229, type: !131)
!9236 = !DILocalVariable(name: "data", scope: !9231, file: !1054, line: 231, type: !9237)
!9237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!9238 = !DILocation(line: 0, scope: !9231)
!9239 = !DILocation(line: 231, column: 37, scope: !9231)
!9240 = !DILocation(line: 233, column: 37, scope: !9231)
!9241 = !DILocation(line: 233, column: 9, scope: !9231)
!9242 = !DILocation(line: 233, column: 2, scope: !9231)
!9243 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9244, file: !9244, line: 38, type: !9245, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9248)
!9244 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9245 = !DISubroutineType(types: !9246)
!9246 = !{!103, !9247, !1020, !131}
!9247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!9248 = !{!9249, !9250, !9251}
!9249 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9243, file: !9244, line: 38, type: !9247)
!9250 = !DILocalVariable(name: "callback", arg: 2, scope: !9243, file: !9244, line: 39, type: !1020)
!9251 = !DILocalVariable(name: "set", arg: 3, scope: !9243, file: !9244, line: 40, type: !131)
!9252 = !DILocation(line: 0, scope: !9243)
!9253 = !DILocation(line: 45, column: 7, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9243, file: !9244, line: 45, column: 6)
!9255 = !DILocation(line: 45, column: 6, scope: !9243)
!9256 = !DILocation(line: 46, column: 56, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !9244, line: 46, column: 7)
!9258 = distinct !DILexicalBlock(scope: !9254, file: !9244, line: 45, column: 38)
!9259 = !DILocation(line: 46, column: 8, scope: !9257)
!9260 = !DILocation(line: 46, column: 7, scope: !9258)
!9261 = !DILocation(line: 51, column: 13, scope: !9254)
!9262 = !DILocation(line: 56, column: 43, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !9244, line: 55, column: 11)
!9264 = distinct !DILexicalBlock(scope: !9243, file: !9244, line: 55, column: 6)
!9265 = !DILocation(line: 56, column: 3, scope: !9263)
!9266 = !DILocation(line: 57, column: 2, scope: !9263)
!9267 = !DILocation(line: 60, column: 1, scope: !9243)
!9268 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1025, file: !1025, line: 261, type: !9269, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{!131, !9247}
!9271 = !{!9272}
!9272 = !DILocalVariable(name: "list", arg: 1, scope: !9268, file: !1025, line: 261, type: !9247)
!9273 = !DILocation(line: 0, scope: !9268)
!9274 = !DILocation(line: 261, column: 1, scope: !9268)
!9275 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1025, file: !1025, line: 417, type: !9276, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9278)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{!131, !9247, !1080}
!9278 = !{!9279, !9280, !9281, !9282}
!9279 = !DILocalVariable(name: "list", arg: 1, scope: !9275, file: !1025, line: 417, type: !9247)
!9280 = !DILocalVariable(name: "node", arg: 2, scope: !9275, file: !1025, line: 417, type: !1080)
!9281 = !DILocalVariable(name: "prev", scope: !9275, file: !1025, line: 417, type: !1080)
!9282 = !DILocalVariable(name: "test", scope: !9275, file: !1025, line: 417, type: !1080)
!9283 = !DILocation(line: 0, scope: !9275)
!9284 = !DILocation(line: 417, column: 1, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9275, file: !1025, line: 417, column: 1)
!9286 = !DILocation(line: 417, column: 1, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9285, file: !1025, line: 417, column: 1)
!9288 = !DILocation(line: 417, column: 1, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !1025, line: 417, column: 1)
!9290 = distinct !DILexicalBlock(scope: !9287, file: !1025, line: 417, column: 1)
!9291 = !DILocation(line: 417, column: 1, scope: !9290)
!9292 = distinct !{!9292, !9284, !9284}
!9293 = !DILocation(line: 417, column: 1, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9289, file: !1025, line: 417, column: 1)
!9295 = !DILocation(line: 417, column: 1, scope: !9275)
!9296 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1025, file: !1025, line: 298, type: !9297, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9299)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{null, !9247, !1080}
!9299 = !{!9300, !9301}
!9300 = !DILocalVariable(name: "list", arg: 1, scope: !9296, file: !1025, line: 298, type: !9247)
!9301 = !DILocalVariable(name: "node", arg: 2, scope: !9296, file: !1025, line: 298, type: !1080)
!9302 = !DILocation(line: 0, scope: !9296)
!9303 = !DILocation(line: 298, column: 1, scope: !9296)
!9304 = !DILocation(line: 298, column: 1, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9296, file: !1025, line: 298, column: 1)
!9306 = !DILocation(line: 298, column: 1, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9305, file: !1025, line: 298, column: 1)
!9308 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1025, file: !1025, line: 231, type: !9309, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9311)
!9309 = !DISubroutineType(types: !9310)
!9310 = !{!1080, !9247}
!9311 = !{!9312}
!9312 = !DILocalVariable(name: "list", arg: 1, scope: !9308, file: !1025, line: 231, type: !9247)
!9313 = !DILocation(line: 0, scope: !9308)
!9314 = !DILocation(line: 233, column: 15, scope: !9308)
!9315 = !DILocation(line: 233, column: 2, scope: !9308)
!9316 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1025, file: !1025, line: 209, type: !9317, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9319)
!9317 = !DISubroutineType(types: !9318)
!9318 = !{null, !1080, !1080}
!9319 = !{!9320, !9321}
!9320 = !DILocalVariable(name: "parent", arg: 1, scope: !9316, file: !1025, line: 209, type: !1080)
!9321 = !DILocalVariable(name: "child", arg: 2, scope: !9316, file: !1025, line: 209, type: !1080)
!9322 = !DILocation(line: 0, scope: !9316)
!9323 = !DILocation(line: 211, column: 10, scope: !9316)
!9324 = !DILocation(line: 211, column: 15, scope: !9316)
!9325 = !DILocation(line: 212, column: 1, scope: !9316)
!9326 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1025, file: !1025, line: 214, type: !9297, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9327)
!9327 = !{!9328, !9329}
!9328 = !DILocalVariable(name: "list", arg: 1, scope: !9326, file: !1025, line: 214, type: !9247)
!9329 = !DILocalVariable(name: "node", arg: 2, scope: !9326, file: !1025, line: 214, type: !1080)
!9330 = !DILocation(line: 0, scope: !9326)
!9331 = !DILocation(line: 216, column: 8, scope: !9326)
!9332 = !DILocation(line: 216, column: 13, scope: !9326)
!9333 = !DILocation(line: 217, column: 1, scope: !9326)
!9334 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1025, file: !1025, line: 243, type: !9309, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9335)
!9335 = !{!9336}
!9336 = !DILocalVariable(name: "list", arg: 1, scope: !9334, file: !1025, line: 243, type: !9247)
!9337 = !DILocation(line: 0, scope: !9334)
!9338 = !DILocation(line: 245, column: 15, scope: !9334)
!9339 = !DILocation(line: 245, column: 2, scope: !9334)
!9340 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1025, file: !1025, line: 219, type: !9297, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9341)
!9341 = !{!9342, !9343}
!9342 = !DILocalVariable(name: "list", arg: 1, scope: !9340, file: !1025, line: 219, type: !9247)
!9343 = !DILocalVariable(name: "node", arg: 2, scope: !9340, file: !1025, line: 219, type: !1080)
!9344 = !DILocation(line: 0, scope: !9340)
!9345 = !DILocation(line: 221, column: 8, scope: !9340)
!9346 = !DILocation(line: 221, column: 13, scope: !9340)
!9347 = !DILocation(line: 222, column: 1, scope: !9340)
!9348 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1025, file: !1025, line: 401, type: !9349, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9351)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{null, !9247, !1080, !1080}
!9351 = !{!9352, !9353, !9354}
!9352 = !DILocalVariable(name: "list", arg: 1, scope: !9348, file: !1025, line: 401, type: !9247)
!9353 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9348, file: !1025, line: 401, type: !1080)
!9354 = !DILocalVariable(name: "node", arg: 3, scope: !9348, file: !1025, line: 401, type: !1080)
!9355 = !DILocation(line: 0, scope: !9348)
!9356 = !DILocation(line: 401, column: 1, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9348, file: !1025, line: 401, column: 1)
!9358 = !DILocation(line: 0, scope: !9357)
!9359 = !DILocation(line: 401, column: 1, scope: !9348)
!9360 = !DILocation(line: 401, column: 1, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9357, file: !1025, line: 401, column: 1)
!9362 = !DILocation(line: 401, column: 1, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9361, file: !1025, line: 401, column: 1)
!9364 = !DILocation(line: 401, column: 1, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9363, file: !1025, line: 401, column: 1)
!9366 = !DILocation(line: 401, column: 1, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9357, file: !1025, line: 401, column: 1)
!9368 = !DILocation(line: 401, column: 1, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9367, file: !1025, line: 401, column: 1)
!9370 = !DILocation(line: 401, column: 1, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9369, file: !1025, line: 401, column: 1)
!9372 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1025, file: !1025, line: 285, type: !9373, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9375)
!9373 = !DISubroutineType(types: !9374)
!9374 = !{!1080, !1080}
!9375 = !{!9376}
!9376 = !DILocalVariable(name: "node", arg: 1, scope: !9372, file: !1025, line: 285, type: !1080)
!9377 = !DILocation(line: 0, scope: !9372)
!9378 = !DILocation(line: 285, column: 1, scope: !9372)
!9379 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1025, file: !1025, line: 274, type: !9373, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9380)
!9380 = !{!9381}
!9381 = !DILocalVariable(name: "node", arg: 1, scope: !9379, file: !1025, line: 274, type: !1080)
!9382 = !DILocation(line: 0, scope: !9379)
!9383 = !DILocation(line: 274, column: 1, scope: !9379)
!9384 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1025, file: !1025, line: 204, type: !9373, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9385)
!9385 = !{!9386}
!9386 = !DILocalVariable(name: "node", arg: 1, scope: !9384, file: !1025, line: 204, type: !1080)
!9387 = !DILocation(line: 0, scope: !9384)
!9388 = !DILocation(line: 206, column: 15, scope: !9384)
!9389 = !DILocation(line: 206, column: 2, scope: !9384)
!9390 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !965, file: !965, line: 131, type: !9391, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9393)
!9391 = !DISubroutineType(types: !9392)
!9392 = !{!108, !1091}
!9393 = !{!9394}
!9394 = !DILocalVariable(name: "base", arg: 1, scope: !9390, file: !965, line: 131, type: !1091)
!9395 = !DILocation(line: 0, scope: !9390)
!9396 = !DILocation(line: 133, column: 12, scope: !9390)
!9397 = !DILocation(line: 133, column: 5, scope: !9390)
!9398 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !965, file: !965, line: 178, type: !9399, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9401)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{null, !1091, !108}
!9401 = !{!9402, !9403}
!9402 = !DILocalVariable(name: "base", arg: 1, scope: !9398, file: !965, line: 178, type: !1091)
!9403 = !DILocalVariable(name: "portVal", arg: 2, scope: !9398, file: !965, line: 178, type: !108)
!9404 = !DILocation(line: 0, scope: !9398)
!9405 = !DILocation(line: 180, column: 5, scope: !9398)
!9406 = !DILocation(line: 180, column: 23, scope: !9398)
!9407 = !DILocation(line: 181, column: 1, scope: !9398)
!9408 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1054, file: !1054, line: 236, type: !9409, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9411)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{null, !978}
!9411 = !{!9412, !9413, !9414, !9415}
!9412 = !DILocalVariable(name: "port", arg: 1, scope: !9408, file: !1054, line: 236, type: !978)
!9413 = !DILocalVariable(name: "config", scope: !9408, file: !1054, line: 238, type: !9021)
!9414 = !DILocalVariable(name: "data", scope: !9408, file: !1054, line: 239, type: !9237)
!9415 = !DILocalVariable(name: "int_status", scope: !9408, file: !1054, line: 240, type: !108)
!9416 = !DILocation(line: 0, scope: !9408)
!9417 = !DILocation(line: 238, column: 47, scope: !9408)
!9418 = !DILocation(line: 239, column: 37, scope: !9408)
!9419 = !DILocation(line: 242, column: 23, scope: !9408)
!9420 = !DILocation(line: 242, column: 29, scope: !9408)
!9421 = !DILocation(line: 244, column: 20, scope: !9408)
!9422 = !DILocation(line: 246, column: 29, scope: !9408)
!9423 = !DILocation(line: 246, column: 2, scope: !9408)
!9424 = !DILocation(line: 247, column: 1, scope: !9408)
!9425 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9244, file: !9244, line: 69, type: !9426, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9428)
!9426 = !DISubroutineType(types: !9427)
!9427 = !{null, !9247, !978, !108}
!9428 = !{!9429, !9430, !9431, !9432, !9433}
!9429 = !DILocalVariable(name: "list", arg: 1, scope: !9425, file: !9244, line: 69, type: !9247)
!9430 = !DILocalVariable(name: "port", arg: 2, scope: !9425, file: !9244, line: 70, type: !978)
!9431 = !DILocalVariable(name: "pins", arg: 3, scope: !9425, file: !9244, line: 71, type: !108)
!9432 = !DILocalVariable(name: "cb", scope: !9425, file: !9244, line: 73, type: !1020)
!9433 = !DILocalVariable(name: "tmp", scope: !9425, file: !9244, line: 73, type: !1020)
!9434 = !DILocation(line: 0, scope: !9425)
!9435 = !DILocation(line: 75, column: 2, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9425, file: !9244, line: 75, column: 2)
!9437 = !DILocation(line: 0, scope: !9436)
!9438 = !DILocation(line: 76, column: 11, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9440, file: !9244, line: 76, column: 7)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !9244, line: 75, column: 57)
!9441 = distinct !DILexicalBlock(scope: !9436, file: !9244, line: 75, column: 2)
!9442 = !DILocation(line: 76, column: 20, scope: !9439)
!9443 = !DILocation(line: 76, column: 7, scope: !9440)
!9444 = !DILocation(line: 78, column: 8, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9439, file: !9244, line: 76, column: 28)
!9446 = !DILocation(line: 78, column: 4, scope: !9445)
!9447 = !DILocation(line: 79, column: 3, scope: !9445)
!9448 = !DILocation(line: 75, column: 2, scope: !9441)
!9449 = !DILocation(line: 81, column: 1, scope: !9425)
!9450 = !DILocation(line: 0, scope: !1119)
!9451 = !DILocation(line: 318, column: 1, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !1119, file: !1054, line: 318, column: 1)
!9453 = !DILocation(line: 318, column: 1, scope: !1119)
!9454 = !DILocation(line: 318, column: 1, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !1119, file: !1054, line: 318, column: 1)
!9456 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1343, file: !1343, line: 114, type: !1241, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9457)
!9457 = !{!9458, !9459, !9460, !9461}
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9456, file: !1343, line: 114, type: !1243)
!9459 = !DILocalVariable(name: "c", arg: 2, scope: !9456, file: !1343, line: 114, type: !878)
!9460 = !DILocalVariable(name: "uart", scope: !9456, file: !1343, line: 116, type: !1314)
!9461 = !DILocalVariable(name: "ret", scope: !9456, file: !1343, line: 117, type: !103)
!9462 = !DILocation(line: 0, scope: !9456)
!9463 = !DILocation(line: 116, column: 20, scope: !9456)
!9464 = !DILocation(line: 119, column: 6, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9456, file: !1343, line: 119, column: 6)
!9466 = !DILocation(line: 119, column: 6, scope: !9456)
!9467 = !DILocation(line: 120, column: 8, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9465, file: !1343, line: 119, column: 55)
!9469 = !DILocation(line: 120, column: 6, scope: !9468)
!9470 = !DILocation(line: 122, column: 7, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9468, file: !1343, line: 122, column: 7)
!9472 = !DILocation(line: 122, column: 7, scope: !9468)
!9473 = !DILocation(line: 123, column: 4, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9471, file: !1343, line: 122, column: 54)
!9475 = !DILocation(line: 124, column: 3, scope: !9474)
!9476 = !DILocation(line: 128, column: 2, scope: !9456)
!9477 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1343, file: !1343, line: 105, type: !1260, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9478)
!9478 = !{!9479, !9480, !9481}
!9479 = !DILocalVariable(name: "dev", arg: 1, scope: !9477, file: !1343, line: 105, type: !1243)
!9480 = !DILocalVariable(name: "c", arg: 2, scope: !9477, file: !1343, line: 105, type: !186)
!9481 = !DILocalVariable(name: "uart", scope: !9477, file: !1343, line: 107, type: !1314)
!9482 = !DILocation(line: 0, scope: !9477)
!9483 = !DILocation(line: 107, column: 20, scope: !9477)
!9484 = !DILocation(line: 109, column: 2, scope: !9477)
!9485 = !DILocation(line: 109, column: 10, scope: !9477)
!9486 = distinct !{!9486, !9484, !9487}
!9487 = !DILocation(line: 110, column: 2, scope: !9477)
!9488 = !DILocation(line: 111, column: 2, scope: !9477)
!9489 = !DILocation(line: 112, column: 1, scope: !9477)
!9490 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1343, file: !1343, line: 133, type: !1286, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9491)
!9491 = !{!9492, !9493, !9494, !9495, !9496}
!9492 = !DILocalVariable(name: "dev", arg: 1, scope: !9490, file: !1343, line: 133, type: !1243)
!9493 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9490, file: !1343, line: 134, type: !909)
!9494 = !DILocalVariable(name: "size", arg: 3, scope: !9490, file: !1343, line: 135, type: !103)
!9495 = !DILocalVariable(name: "uart", scope: !9490, file: !1343, line: 137, type: !1314)
!9496 = !DILocalVariable(name: "num_tx", scope: !9490, file: !1343, line: 138, type: !32)
!9497 = !DILocation(line: 0, scope: !9490)
!9498 = !DILocation(line: 137, column: 20, scope: !9490)
!9499 = !DILocation(line: 140, column: 26, scope: !9490)
!9500 = !DILocation(line: 140, column: 31, scope: !9490)
!9501 = !DILocation(line: 141, column: 6, scope: !9490)
!9502 = !DILocation(line: 140, column: 2, scope: !9490)
!9503 = !DILocation(line: 143, column: 22, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9490, file: !1343, line: 141, column: 51)
!9505 = !DILocation(line: 143, column: 3, scope: !9504)
!9506 = !DILocation(line: 144, column: 9, scope: !9504)
!9507 = distinct !{!9507, !9502, !9508}
!9508 = !DILocation(line: 145, column: 2, scope: !9490)
!9509 = !DILocation(line: 147, column: 2, scope: !9490)
!9510 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1343, file: !1343, line: 150, type: !1290, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514, !9515, !9516}
!9512 = !DILocalVariable(name: "dev", arg: 1, scope: !9510, file: !1343, line: 150, type: !1243)
!9513 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9510, file: !1343, line: 150, type: !373)
!9514 = !DILocalVariable(name: "size", arg: 3, scope: !9510, file: !1343, line: 151, type: !915)
!9515 = !DILocalVariable(name: "uart", scope: !9510, file: !1343, line: 153, type: !1314)
!9516 = !DILocalVariable(name: "num_rx", scope: !9510, file: !1343, line: 154, type: !32)
!9517 = !DILocation(line: 0, scope: !9510)
!9518 = !DILocation(line: 153, column: 20, scope: !9510)
!9519 = !DILocation(line: 156, column: 26, scope: !9510)
!9520 = !DILocation(line: 156, column: 31, scope: !9510)
!9521 = !DILocation(line: 157, column: 6, scope: !9510)
!9522 = !DILocation(line: 156, column: 2, scope: !9510)
!9523 = !DILocation(line: 159, column: 23, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9510, file: !1343, line: 157, column: 51)
!9525 = !DILocation(line: 159, column: 17, scope: !9524)
!9526 = !DILocation(line: 159, column: 3, scope: !9524)
!9527 = !DILocation(line: 159, column: 21, scope: !9524)
!9528 = distinct !{!9528, !9522, !9529}
!9529 = !DILocation(line: 160, column: 2, scope: !9510)
!9530 = !DILocation(line: 162, column: 6, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9510, file: !1343, line: 162, column: 6)
!9532 = !DILocation(line: 162, column: 6, scope: !9510)
!9533 = !DILocation(line: 163, column: 3, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9531, file: !1343, line: 162, column: 53)
!9535 = !DILocation(line: 164, column: 2, scope: !9534)
!9536 = !DILocation(line: 166, column: 2, scope: !9510)
!9537 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1343, file: !1343, line: 169, type: !1294, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9538)
!9538 = !{!9539, !9540}
!9539 = !DILocalVariable(name: "dev", arg: 1, scope: !9537, file: !1343, line: 169, type: !1243)
!9540 = !DILocalVariable(name: "uart", scope: !9537, file: !1343, line: 171, type: !1314)
!9541 = !DILocation(line: 0, scope: !9537)
!9542 = !DILocation(line: 171, column: 20, scope: !9537)
!9543 = !DILocation(line: 173, column: 2, scope: !9537)
!9544 = !DILocation(line: 174, column: 1, scope: !9537)
!9545 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1343, file: !1343, line: 176, type: !1294, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9546)
!9546 = !{!9547, !9548}
!9547 = !DILocalVariable(name: "dev", arg: 1, scope: !9545, file: !1343, line: 176, type: !1243)
!9548 = !DILocalVariable(name: "uart", scope: !9545, file: !1343, line: 178, type: !1314)
!9549 = !DILocation(line: 0, scope: !9545)
!9550 = !DILocation(line: 178, column: 20, scope: !9545)
!9551 = !DILocation(line: 180, column: 2, scope: !9545)
!9552 = !DILocation(line: 181, column: 1, scope: !9545)
!9553 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1343, file: !1343, line: 183, type: !1264, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9554)
!9554 = !{!9555, !9556}
!9555 = !DILocalVariable(name: "dev", arg: 1, scope: !9553, file: !1343, line: 183, type: !1243)
!9556 = !DILocalVariable(name: "uart", scope: !9553, file: !1343, line: 185, type: !1314)
!9557 = !DILocation(line: 0, scope: !9553)
!9558 = !DILocation(line: 185, column: 20, scope: !9553)
!9559 = !DILocation(line: 187, column: 9, scope: !9553)
!9560 = !DILocation(line: 187, column: 2, scope: !9553)
!9561 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1343, file: !1343, line: 190, type: !1294, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9562)
!9562 = !{!9563, !9564}
!9563 = !DILocalVariable(name: "dev", arg: 1, scope: !9561, file: !1343, line: 190, type: !1243)
!9564 = !DILocalVariable(name: "uart", scope: !9561, file: !1343, line: 192, type: !1314)
!9565 = !DILocation(line: 0, scope: !9561)
!9566 = !DILocation(line: 192, column: 20, scope: !9561)
!9567 = !DILocation(line: 194, column: 2, scope: !9561)
!9568 = !DILocation(line: 195, column: 1, scope: !9561)
!9569 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1343, file: !1343, line: 197, type: !1294, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9570)
!9570 = !{!9571, !9572}
!9571 = !DILocalVariable(name: "dev", arg: 1, scope: !9569, file: !1343, line: 197, type: !1243)
!9572 = !DILocalVariable(name: "uart", scope: !9569, file: !1343, line: 199, type: !1314)
!9573 = !DILocation(line: 0, scope: !9569)
!9574 = !DILocation(line: 199, column: 20, scope: !9569)
!9575 = !DILocation(line: 201, column: 2, scope: !9569)
!9576 = !DILocation(line: 202, column: 1, scope: !9569)
!9577 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1343, file: !1343, line: 204, type: !1264, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9578)
!9578 = !{!9579, !9580}
!9579 = !DILocalVariable(name: "dev", arg: 1, scope: !9577, file: !1343, line: 204, type: !1243)
!9580 = !DILocalVariable(name: "uart", scope: !9577, file: !1343, line: 206, type: !1314)
!9581 = !DILocation(line: 0, scope: !9577)
!9582 = !DILocation(line: 206, column: 20, scope: !9577)
!9583 = !DILocation(line: 208, column: 9, scope: !9577)
!9584 = !DILocation(line: 208, column: 2, scope: !9577)
!9585 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1343, file: !1343, line: 211, type: !1294, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9586)
!9586 = !{!9587, !9588}
!9587 = !DILocalVariable(name: "dev", arg: 1, scope: !9585, file: !1343, line: 211, type: !1243)
!9588 = !DILocalVariable(name: "uart", scope: !9585, file: !1343, line: 213, type: !1314)
!9589 = !DILocation(line: 0, scope: !9585)
!9590 = !DILocation(line: 213, column: 20, scope: !9585)
!9591 = !DILocation(line: 215, column: 2, scope: !9585)
!9592 = !DILocation(line: 216, column: 2, scope: !9585)
!9593 = !DILocation(line: 217, column: 1, scope: !9585)
!9594 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1343, file: !1343, line: 219, type: !1294, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9595)
!9595 = !{!9596, !9597}
!9596 = !DILocalVariable(name: "dev", arg: 1, scope: !9594, file: !1343, line: 219, type: !1243)
!9597 = !DILocalVariable(name: "uart", scope: !9594, file: !1343, line: 221, type: !1314)
!9598 = !DILocation(line: 0, scope: !9594)
!9599 = !DILocation(line: 221, column: 20, scope: !9594)
!9600 = !DILocation(line: 223, column: 2, scope: !9594)
!9601 = !DILocation(line: 224, column: 2, scope: !9594)
!9602 = !DILocation(line: 225, column: 1, scope: !9594)
!9603 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1343, file: !1343, line: 227, type: !1264, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9604)
!9604 = !{!9605, !9606}
!9605 = !DILocalVariable(name: "dev", arg: 1, scope: !9603, file: !1343, line: 227, type: !1243)
!9606 = !DILocalVariable(name: "uart", scope: !9603, file: !1343, line: 229, type: !1314)
!9607 = !DILocation(line: 0, scope: !9603)
!9608 = !DILocation(line: 229, column: 20, scope: !9603)
!9609 = !DILocation(line: 231, column: 9, scope: !9603)
!9610 = !DILocation(line: 231, column: 53, scope: !9603)
!9611 = !DILocation(line: 232, column: 3, scope: !9603)
!9612 = !DILocation(line: 231, column: 2, scope: !9603)
!9613 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1343, file: !1343, line: 235, type: !1264, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9614)
!9614 = !{!9615}
!9615 = !DILocalVariable(name: "dev", arg: 1, scope: !9613, file: !1343, line: 235, type: !1243)
!9616 = !DILocation(line: 0, scope: !9613)
!9617 = !DILocation(line: 237, column: 2, scope: !9613)
!9618 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1343, file: !1343, line: 240, type: !1308, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9619)
!9619 = !{!9620, !9621, !9622, !9623}
!9620 = !DILocalVariable(name: "dev", arg: 1, scope: !9618, file: !1343, line: 240, type: !1243)
!9621 = !DILocalVariable(name: "cb", arg: 2, scope: !9618, file: !1343, line: 241, type: !1310)
!9622 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9618, file: !1343, line: 242, type: !102)
!9623 = !DILocalVariable(name: "data", scope: !9618, file: !1343, line: 244, type: !9624)
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!9625 = !DILocation(line: 0, scope: !9618)
!9626 = !DILocation(line: 244, column: 36, scope: !9618)
!9627 = !DILocation(line: 246, column: 8, scope: !9618)
!9628 = !DILocation(line: 246, column: 17, scope: !9618)
!9629 = !DILocation(line: 247, column: 8, scope: !9618)
!9630 = !DILocation(line: 247, column: 16, scope: !9618)
!9631 = !DILocation(line: 248, column: 1, scope: !9618)
!9632 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1150, file: !1150, line: 392, type: !9633, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9635)
!9633 = !DISubroutineType(types: !9634)
!9634 = !{!131, !1314, !108}
!9635 = !{!9636, !9637, !9638}
!9636 = !DILocalVariable(name: "base", arg: 1, scope: !9632, file: !1150, line: 392, type: !1314)
!9637 = !DILocalVariable(name: "flag", arg: 2, scope: !9632, file: !1150, line: 392, type: !108)
!9638 = !DILocalVariable(name: "uart_reg", scope: !9632, file: !1150, line: 393, type: !806)
!9639 = !DILocation(line: 0, scope: !9632)
!9640 = !DILocation(line: 395, column: 29, scope: !9632)
!9641 = !DILocation(line: 395, column: 52, scope: !9632)
!9642 = !DILocation(line: 395, column: 44, scope: !9632)
!9643 = !DILocation(line: 395, column: 16, scope: !9632)
!9644 = !DILocation(line: 396, column: 20, scope: !9632)
!9645 = !DILocation(line: 396, column: 39, scope: !9632)
!9646 = !DILocation(line: 396, column: 12, scope: !9632)
!9647 = !DILocation(line: 396, column: 5, scope: !9632)
!9648 = distinct !DISubprogram(name: "UART_Getchar", scope: !1150, file: !1150, line: 358, type: !9649, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9651)
!9649 = !DISubroutineType(types: !9650)
!9650 = !{!185, !1314}
!9651 = !{!9652}
!9652 = !DILocalVariable(name: "base", arg: 1, scope: !9648, file: !1150, line: 358, type: !1314)
!9653 = !DILocation(line: 0, scope: !9648)
!9654 = !DILocation(line: 360, column: 22, scope: !9648)
!9655 = !DILocation(line: 360, column: 12, scope: !9648)
!9656 = !DILocation(line: 360, column: 5, scope: !9648)
!9657 = distinct !DISubprogram(name: "UART_Putchar", scope: !1150, file: !1150, line: 346, type: !9658, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9660)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{null, !1314, !185}
!9660 = !{!9661, !9662}
!9661 = !DILocalVariable(name: "base", arg: 1, scope: !9657, file: !1150, line: 346, type: !1314)
!9662 = !DILocalVariable(name: "data", arg: 2, scope: !9657, file: !1150, line: 346, type: !185)
!9663 = !DILocation(line: 0, scope: !9657)
!9664 = !DILocation(line: 348, column: 28, scope: !9657)
!9665 = !DILocation(line: 348, column: 5, scope: !9657)
!9666 = !DILocation(line: 348, column: 25, scope: !9657)
!9667 = !DILocation(line: 349, column: 1, scope: !9657)
!9668 = !DILocation(line: 0, scope: !1416)
!9669 = !DILocation(line: 339, column: 1, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !1416, file: !1343, line: 339, column: 1)
!9671 = !DILocation(line: 339, column: 1, scope: !1416)
!9672 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1343, file: !1343, line: 260, type: !1294, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9673)
!9673 = !{!9674, !9675}
!9674 = !DILocalVariable(name: "dev", arg: 1, scope: !9672, file: !1343, line: 260, type: !1243)
!9675 = !DILocalVariable(name: "data", scope: !9672, file: !1343, line: 262, type: !9624)
!9676 = !DILocation(line: 0, scope: !9672)
!9677 = !DILocation(line: 262, column: 36, scope: !9672)
!9678 = !DILocation(line: 264, column: 12, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9672, file: !1343, line: 264, column: 6)
!9680 = !DILocation(line: 264, column: 6, scope: !9679)
!9681 = !DILocation(line: 264, column: 6, scope: !9672)
!9682 = !DILocation(line: 265, column: 29, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9679, file: !1343, line: 264, column: 22)
!9684 = !DILocation(line: 265, column: 3, scope: !9683)
!9685 = !DILocation(line: 266, column: 2, scope: !9683)
!9686 = !DILocation(line: 267, column: 1, scope: !9672)
!9687 = distinct !DISubprogram(name: "uart_imx_init", scope: !1343, file: !1343, line: 56, type: !1264, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9688)
!9688 = !{!9689, !9690, !9691, !9692, !9693, !9694}
!9689 = !DILocalVariable(name: "dev", arg: 1, scope: !9687, file: !1343, line: 56, type: !1243)
!9690 = !DILocalVariable(name: "uart", scope: !9687, file: !1343, line: 58, type: !1314)
!9691 = !DILocalVariable(name: "config", scope: !9687, file: !1343, line: 59, type: !1340)
!9692 = !DILocalVariable(name: "old_level", scope: !9687, file: !1343, line: 60, type: !32)
!9693 = !DILocalVariable(name: "err", scope: !9687, file: !1343, line: 61, type: !103)
!9694 = !DILocalVariable(name: "initConfig", scope: !9687, file: !1343, line: 67, type: !9695)
!9695 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1150, line: 57, baseType: !9696)
!9696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1150, line: 49, size: 192, elements: !9697)
!9697 = !{!9698, !9699, !9700, !9701, !9702, !9703}
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9696, file: !1150, line: 51, baseType: !108, size: 32)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9696, file: !1150, line: 52, baseType: !108, size: 32, offset: 32)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9696, file: !1150, line: 53, baseType: !108, size: 32, offset: 64)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9696, file: !1150, line: 54, baseType: !108, size: 32, offset: 96)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9696, file: !1150, line: 55, baseType: !108, size: 32, offset: 128)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9696, file: !1150, line: 56, baseType: !108, size: 32, offset: 160)
!9704 = !DILocation(line: 0, scope: !9687)
!9705 = !DILocation(line: 58, column: 20, scope: !9687)
!9706 = !DILocation(line: 55, column: 2, scope: !9707, inlinedAt: !9711)
!9707 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9708)
!9708 = !{!9709, !9710}
!9709 = !DILocalVariable(name: "key", scope: !9707, file: !7161, line: 44, type: !32)
!9710 = !DILocalVariable(name: "tmp", scope: !9707, file: !7161, line: 53, type: !32)
!9711 = distinct !DILocation(line: 64, column: 14, scope: !9687)
!9712 = !{i64 2847467}
!9713 = !DILocation(line: 0, scope: !9707, inlinedAt: !9711)
!9714 = !DILocation(line: 67, column: 2, scope: !9687)
!9715 = !DILocation(line: 67, column: 21, scope: !9687)
!9716 = !DILocation(line: 67, column: 34, scope: !9687)
!9717 = !DILocation(line: 68, column: 23, scope: !9687)
!9718 = !DILocation(line: 75, column: 36, scope: !9687)
!9719 = !DILocation(line: 75, column: 8, scope: !9687)
!9720 = !DILocation(line: 76, column: 6, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9687, file: !1343, line: 76, column: 6)
!9722 = !DILocation(line: 76, column: 6, scope: !9687)
!9723 = !DILocation(line: 81, column: 26, scope: !9687)
!9724 = !DILocation(line: 81, column: 24, scope: !9687)
!9725 = !DILocation(line: 83, column: 2, scope: !9687)
!9726 = !DILocation(line: 86, column: 2, scope: !9687)
!9727 = !DILocation(line: 87, column: 2, scope: !9687)
!9728 = !DILocalVariable(name: "key", arg: 1, scope: !9729, file: !7161, line: 84, type: !32)
!9729 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9730)
!9730 = !{!9728}
!9731 = !DILocation(line: 0, scope: !9729, inlinedAt: !9732)
!9732 = distinct !DILocation(line: 90, column: 2, scope: !9687)
!9733 = !DILocation(line: 95, column: 2, scope: !9729, inlinedAt: !9732)
!9734 = !{i64 2848284}
!9735 = !DILocation(line: 93, column: 10, scope: !9687)
!9736 = !DILocation(line: 93, column: 2, scope: !9687)
!9737 = !DILocation(line: 97, column: 34, scope: !9687)
!9738 = !DILocation(line: 97, column: 26, scope: !9687)
!9739 = !DILocation(line: 97, column: 2, scope: !9687)
!9740 = !DILocation(line: 100, column: 2, scope: !9687)
!9741 = !DILocation(line: 102, column: 2, scope: !9687)
!9742 = !DILocation(line: 103, column: 1, scope: !9687)
!9743 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1352, file: !1352, line: 342, type: !9744, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9746)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!103, !1349, !185}
!9746 = !{!9747, !9748, !9749, !9750}
!9747 = !DILocalVariable(name: "config", arg: 1, scope: !9743, file: !1352, line: 342, type: !1349)
!9748 = !DILocalVariable(name: "id", arg: 2, scope: !9743, file: !1352, line: 343, type: !185)
!9749 = !DILocalVariable(name: "ret", scope: !9743, file: !1352, line: 345, type: !103)
!9750 = !DILocalVariable(name: "state", scope: !9743, file: !1352, line: 346, type: !1355)
!9751 = !DILocation(line: 0, scope: !9743)
!9752 = !DILocation(line: 346, column: 2, scope: !9743)
!9753 = !DILocation(line: 348, column: 8, scope: !9743)
!9754 = !DILocation(line: 349, column: 10, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9743, file: !1352, line: 349, column: 6)
!9756 = !DILocation(line: 349, column: 6, scope: !9743)
!9757 = !DILocation(line: 353, column: 44, scope: !9743)
!9758 = !DILocation(line: 353, column: 9, scope: !9743)
!9759 = !DILocation(line: 353, column: 2, scope: !9743)
!9760 = !DILocation(line: 354, column: 1, scope: !9743)
!9761 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1150, file: !1150, line: 444, type: !9658, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9762)
!9762 = !{!9763, !9764}
!9763 = !DILocalVariable(name: "base", arg: 1, scope: !9761, file: !1150, line: 444, type: !1314)
!9764 = !DILocalVariable(name: "watermark", arg: 2, scope: !9761, file: !1150, line: 444, type: !185)
!9765 = !DILocation(line: 0, scope: !9761)
!9766 = !DILocation(line: 447, column: 28, scope: !9761)
!9767 = !DILocation(line: 447, column: 48, scope: !9761)
!9768 = !DILocation(line: 447, column: 72, scope: !9761)
!9769 = !DILocation(line: 447, column: 25, scope: !9761)
!9770 = !DILocation(line: 448, column: 1, scope: !9761)
!9771 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1150, file: !1150, line: 458, type: !9658, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9772)
!9772 = !{!9773, !9774}
!9773 = !DILocalVariable(name: "base", arg: 1, scope: !9771, file: !1150, line: 458, type: !1314)
!9774 = !DILocalVariable(name: "watermark", arg: 2, scope: !9771, file: !1150, line: 458, type: !185)
!9775 = !DILocation(line: 0, scope: !9771)
!9776 = !DILocation(line: 461, column: 28, scope: !9771)
!9777 = !DILocation(line: 461, column: 48, scope: !9771)
!9778 = !DILocation(line: 461, column: 72, scope: !9771)
!9779 = !DILocation(line: 461, column: 25, scope: !9771)
!9780 = !DILocation(line: 462, column: 1, scope: !9771)
!9781 = distinct !DISubprogram(name: "UART_Enable", scope: !1150, file: !1150, line: 242, type: !9782, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9784)
!9782 = !DISubroutineType(types: !9783)
!9783 = !{null, !1314}
!9784 = !{!9785}
!9785 = !DILocalVariable(name: "base", arg: 1, scope: !9781, file: !1150, line: 242, type: !1314)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 244, column: 5, scope: !9781)
!9788 = !DILocation(line: 244, column: 25, scope: !9781)
!9789 = !DILocation(line: 245, column: 1, scope: !9781)
!9790 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1352, file: !1352, line: 316, type: !9791, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !9793)
!9791 = !DISubroutineType(types: !9792)
!9792 = !{!103, !1349, !1355}
!9793 = !{!9794, !9795, !9796}
!9794 = !DILocalVariable(name: "config", arg: 1, scope: !9790, file: !1352, line: 317, type: !1349)
!9795 = !DILocalVariable(name: "state", arg: 2, scope: !9790, file: !1352, line: 318, type: !1355)
!9796 = !DILocalVariable(name: "reg", scope: !9790, file: !1352, line: 320, type: !22)
!9797 = !DILocation(line: 0, scope: !9790)
!9798 = !DILocation(line: 329, column: 39, scope: !9790)
!9799 = !DILocation(line: 329, column: 52, scope: !9790)
!9800 = !DILocation(line: 329, column: 9, scope: !9790)
!9801 = !DILocation(line: 329, column: 2, scope: !9790)
!9802 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1652, file: !1652, line: 270, type: !1658, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9803)
!9803 = !{!9804}
!9804 = !DILocalVariable(name: "dev", arg: 1, scope: !9802, file: !1652, line: 270, type: !1660)
!9805 = !DILocation(line: 0, scope: !9802)
!9806 = !DILocation(line: 274, column: 2, scope: !9802)
!9807 = !DILocation(line: 275, column: 12, scope: !9802)
!9808 = !DILocation(line: 276, column: 15, scope: !9802)
!9809 = !DILocation(line: 277, column: 16, scope: !9802)
!9810 = !DILocation(line: 278, column: 15, scope: !9802)
!9811 = !DILocation(line: 279, column: 16, scope: !9802)
!9812 = !DILocation(line: 282, column: 2, scope: !9802)
!9813 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1573, file: !1573, line: 1814, type: !7082, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9814)
!9814 = !{!9815, !9816}
!9815 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9813, file: !1573, line: 1814, type: !2501)
!9816 = !DILocalVariable(name: "priority", arg: 2, scope: !9813, file: !1573, line: 1814, type: !108)
!9817 = !DILocation(line: 0, scope: !9813)
!9818 = !DILocation(line: 1822, column: 46, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !1573, line: 1821, column: 3)
!9820 = distinct !DILexicalBlock(scope: !9813, file: !1573, line: 1816, column: 7)
!9821 = !DILocation(line: 1824, column: 1, scope: !9813)
!9822 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1652, file: !1652, line: 118, type: !6983, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9823)
!9823 = !{!9824, !9825}
!9824 = !DILocalVariable(name: "arg", arg: 1, scope: !9822, file: !1652, line: 118, type: !102)
!9825 = !DILocalVariable(name: "dticks", scope: !9822, file: !1652, line: 121, type: !108)
!9826 = !DILocation(line: 0, scope: !9822)
!9827 = !DILocation(line: 124, column: 2, scope: !9822)
!9828 = !DILocation(line: 129, column: 17, scope: !9822)
!9829 = !DILocation(line: 129, column: 14, scope: !9822)
!9830 = !DILocation(line: 130, column: 15, scope: !9822)
!9831 = !DILocation(line: 145, column: 27, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9833, file: !1652, line: 132, column: 16)
!9833 = distinct !DILexicalBlock(scope: !9822, file: !1652, line: 132, column: 6)
!9834 = !DILocation(line: 145, column: 25, scope: !9832)
!9835 = !DILocation(line: 145, column: 45, scope: !9832)
!9836 = !DILocation(line: 146, column: 30, scope: !9832)
!9837 = !DILocation(line: 146, column: 20, scope: !9832)
!9838 = !DILocation(line: 147, column: 3, scope: !9832)
!9839 = !DILocation(line: 151, column: 2, scope: !9822)
!9840 = !DILocation(line: 152, column: 1, scope: !9822)
!9841 = distinct !DISubprogram(name: "elapsed", scope: !1652, file: !1652, line: 85, type: !3393, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9842)
!9842 = !{!9843, !9844, !9845}
!9843 = !DILocalVariable(name: "val1", scope: !9841, file: !1652, line: 87, type: !108)
!9844 = !DILocalVariable(name: "ctrl", scope: !9841, file: !1652, line: 88, type: !108)
!9845 = !DILocalVariable(name: "val2", scope: !9841, file: !1652, line: 89, type: !108)
!9846 = !DILocation(line: 87, column: 27, scope: !9841)
!9847 = !DILocation(line: 0, scope: !9841)
!9848 = !DILocation(line: 88, column: 27, scope: !9841)
!9849 = !DILocation(line: 89, column: 27, scope: !9841)
!9850 = !DILocation(line: 105, column: 12, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9841, file: !1652, line: 105, column: 6)
!9852 = !DILocation(line: 106, column: 6, scope: !9851)
!9853 = !DILocation(line: 107, column: 16, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9851, file: !1652, line: 106, column: 24)
!9855 = !DILocation(line: 111, column: 18, scope: !9854)
!9856 = !DILocation(line: 112, column: 2, scope: !9854)
!9857 = !DILocation(line: 114, column: 20, scope: !9841)
!9858 = !DILocation(line: 114, column: 30, scope: !9841)
!9859 = !DILocation(line: 114, column: 28, scope: !9841)
!9860 = !DILocation(line: 114, column: 2, scope: !9841)
!9861 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1652, file: !1652, line: 154, type: !9862, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9864)
!9862 = !DISubroutineType(types: !9863)
!9863 = !{null, !325, !131}
!9864 = !{!9865, !9866, !9867, !9868, !9869, !9870, !9871, !9876, !9877}
!9865 = !DILocalVariable(name: "ticks", arg: 1, scope: !9861, file: !1652, line: 154, type: !325)
!9866 = !DILocalVariable(name: "idle", arg: 2, scope: !9861, file: !1652, line: 154, type: !131)
!9867 = !DILocalVariable(name: "delay", scope: !9861, file: !1652, line: 169, type: !108)
!9868 = !DILocalVariable(name: "val1", scope: !9861, file: !1652, line: 170, type: !108)
!9869 = !DILocalVariable(name: "val2", scope: !9861, file: !1652, line: 170, type: !108)
!9870 = !DILocalVariable(name: "last_load_", scope: !9861, file: !1652, line: 171, type: !108)
!9871 = !DILocalVariable(name: "key", scope: !9861, file: !1652, line: 176, type: !9872)
!9872 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !9873)
!9873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !9874)
!9874 = !{!9875}
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9873, file: !244, line: 33, baseType: !103, size: 32)
!9876 = !DILocalVariable(name: "pending", scope: !9861, file: !1652, line: 178, type: !108)
!9877 = !DILocalVariable(name: "unannounced", scope: !9861, file: !1652, line: 185, type: !108)
!9878 = !DILocation(line: 0, scope: !9861)
!9879 = !DILocation(line: 162, column: 49, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9861, file: !1652, line: 162, column: 6)
!9881 = !DILocation(line: 163, column: 17, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9880, file: !1652, line: 162, column: 78)
!9883 = !DILocation(line: 164, column: 13, scope: !9882)
!9884 = !DILocation(line: 165, column: 3, scope: !9882)
!9885 = !DILocation(line: 171, column: 24, scope: !9861)
!9886 = !DILocation(line: 173, column: 10, scope: !9861)
!9887 = !DILocation(line: 174, column: 10, scope: !9861)
!9888 = !DILocalVariable(name: "l", arg: 1, scope: !9889, file: !244, line: 136, type: !9892)
!9889 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !9890, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9893)
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!9872, !9892}
!9892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!9893 = !{!9888, !9894}
!9894 = !DILocalVariable(name: "k", scope: !9889, file: !244, line: 139, type: !9872)
!9895 = !DILocation(line: 0, scope: !9889, inlinedAt: !9896)
!9896 = distinct !DILocation(line: 176, column: 25, scope: !9861)
!9897 = !DILocation(line: 55, column: 2, scope: !9898, inlinedAt: !9902)
!9898 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "key", scope: !9898, file: !7161, line: 44, type: !32)
!9901 = !DILocalVariable(name: "tmp", scope: !9898, file: !7161, line: 53, type: !32)
!9902 = distinct !DILocation(line: 145, column: 10, scope: !9889, inlinedAt: !9896)
!9903 = !{i64 2949471}
!9904 = !DILocation(line: 0, scope: !9898, inlinedAt: !9902)
!9905 = !DILocation(line: 178, column: 21, scope: !9861)
!9906 = !DILocation(line: 180, column: 18, scope: !9861)
!9907 = !DILocation(line: 182, column: 14, scope: !9861)
!9908 = !DILocation(line: 183, column: 15, scope: !9861)
!9909 = !DILocation(line: 185, column: 39, scope: !9861)
!9910 = !DILocation(line: 185, column: 37, scope: !9861)
!9911 = !DILocation(line: 187, column: 27, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9861, file: !1652, line: 187, column: 6)
!9913 = !DILocation(line: 187, column: 6, scope: !9861)
!9914 = !DILocation(line: 202, column: 27, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9912, file: !1652, line: 195, column: 9)
!9916 = !DILocation(line: 202, column: 48, scope: !9915)
!9917 = !DILocation(line: 203, column: 9, scope: !9915)
!9918 = !DILocation(line: 204, column: 11, scope: !9915)
!9919 = !DILocation(line: 205, column: 13, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !1652, line: 205, column: 7)
!9921 = !DILocation(line: 205, column: 7, scope: !9915)
!9922 = !DILocation(line: 0, scope: !9912)
!9923 = !DILocation(line: 212, column: 18, scope: !9861)
!9924 = !DILocation(line: 214, column: 28, scope: !9861)
!9925 = !DILocation(line: 214, column: 16, scope: !9861)
!9926 = !DILocation(line: 215, column: 15, scope: !9861)
!9927 = !DILocation(line: 227, column: 11, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9861, file: !1652, line: 227, column: 6)
!9929 = !DILocation(line: 227, column: 6, scope: !9861)
!9930 = !DILocation(line: 228, column: 15, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9928, file: !1652, line: 227, column: 19)
!9932 = !DILocation(line: 228, column: 38, scope: !9931)
!9933 = !DILocation(line: 228, column: 24, scope: !9931)
!9934 = !DILocation(line: 229, column: 2, scope: !9931)
!9935 = !DILocation(line: 230, column: 24, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9928, file: !1652, line: 229, column: 9)
!9937 = !DILocation(line: 230, column: 15, scope: !9936)
!9938 = !DILocation(line: 0, scope: !9928)
!9939 = !DILocalVariable(name: "key", arg: 2, scope: !9940, file: !244, line: 190, type: !9872)
!9940 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !9941, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{null, !9892, !9872}
!9943 = !{!9944, !9939}
!9944 = !DILocalVariable(name: "l", arg: 1, scope: !9940, file: !244, line: 189, type: !9892)
!9945 = !DILocation(line: 0, scope: !9940, inlinedAt: !9946)
!9946 = distinct !DILocation(line: 232, column: 2, scope: !9861)
!9947 = !DILocalVariable(name: "key", arg: 1, scope: !9948, file: !7161, line: 84, type: !32)
!9948 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9949)
!9949 = !{!9947}
!9950 = !DILocation(line: 0, scope: !9948, inlinedAt: !9951)
!9951 = distinct !DILocation(line: 215, column: 2, scope: !9940, inlinedAt: !9946)
!9952 = !DILocation(line: 95, column: 2, scope: !9948, inlinedAt: !9951)
!9953 = !{i64 2950288}
!9954 = !DILocation(line: 234, column: 1, scope: !9861)
!9955 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1652, file: !1652, line: 236, type: !3393, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9956)
!9956 = !{!9957, !9958}
!9957 = !DILocalVariable(name: "key", scope: !9955, file: !1652, line: 242, type: !9872)
!9958 = !DILocalVariable(name: "cyc", scope: !9955, file: !1652, line: 243, type: !108)
!9959 = !DILocation(line: 0, scope: !9889, inlinedAt: !9960)
!9960 = distinct !DILocation(line: 242, column: 25, scope: !9955)
!9961 = !DILocation(line: 55, column: 2, scope: !9898, inlinedAt: !9962)
!9962 = distinct !DILocation(line: 145, column: 10, scope: !9889, inlinedAt: !9960)
!9963 = !DILocation(line: 0, scope: !9898, inlinedAt: !9962)
!9964 = !DILocation(line: 0, scope: !9955)
!9965 = !DILocation(line: 243, column: 17, scope: !9955)
!9966 = !DILocation(line: 243, column: 29, scope: !9955)
!9967 = !DILocation(line: 243, column: 27, scope: !9955)
!9968 = !DILocation(line: 243, column: 43, scope: !9955)
!9969 = !DILocation(line: 243, column: 41, scope: !9955)
!9970 = !DILocation(line: 0, scope: !9940, inlinedAt: !9971)
!9971 = distinct !DILocation(line: 245, column: 2, scope: !9955)
!9972 = !DILocation(line: 0, scope: !9948, inlinedAt: !9973)
!9973 = distinct !DILocation(line: 215, column: 2, scope: !9940, inlinedAt: !9971)
!9974 = !DILocation(line: 95, column: 2, scope: !9948, inlinedAt: !9973)
!9975 = !DILocation(line: 246, column: 13, scope: !9955)
!9976 = !DILocation(line: 246, column: 2, scope: !9955)
!9977 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1652, file: !1652, line: 249, type: !3393, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !9978)
!9978 = !{!9979, !9980}
!9979 = !DILocalVariable(name: "key", scope: !9977, file: !1652, line: 251, type: !9872)
!9980 = !DILocalVariable(name: "ret", scope: !9977, file: !1652, line: 252, type: !108)
!9981 = !DILocation(line: 0, scope: !9889, inlinedAt: !9982)
!9982 = distinct !DILocation(line: 251, column: 25, scope: !9977)
!9983 = !DILocation(line: 55, column: 2, scope: !9898, inlinedAt: !9984)
!9984 = distinct !DILocation(line: 145, column: 10, scope: !9889, inlinedAt: !9982)
!9985 = !DILocation(line: 0, scope: !9898, inlinedAt: !9984)
!9986 = !DILocation(line: 0, scope: !9977)
!9987 = !DILocation(line: 252, column: 17, scope: !9977)
!9988 = !DILocation(line: 252, column: 29, scope: !9977)
!9989 = !DILocation(line: 252, column: 27, scope: !9977)
!9990 = !DILocation(line: 0, scope: !9940, inlinedAt: !9991)
!9991 = distinct !DILocation(line: 254, column: 2, scope: !9977)
!9992 = !DILocation(line: 0, scope: !9948, inlinedAt: !9993)
!9993 = distinct !DILocation(line: 215, column: 2, scope: !9940, inlinedAt: !9991)
!9994 = !DILocation(line: 95, column: 2, scope: !9948, inlinedAt: !9993)
!9995 = !DILocation(line: 255, column: 2, scope: !9977)
!9996 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1652, file: !1652, line: 258, type: !328, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !245)
!9997 = !DILocation(line: 260, column: 6, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9996, file: !1652, line: 260, column: 6)
!9999 = !DILocation(line: 260, column: 16, scope: !9998)
!10000 = !DILocation(line: 260, column: 6, scope: !9996)
!10001 = !DILocation(line: 261, column: 17, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9998, file: !1652, line: 260, column: 34)
!10003 = !DILocation(line: 262, column: 2, scope: !10002)
!10004 = !DILocation(line: 263, column: 1, scope: !9996)
!10005 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1652, file: !1652, line: 265, type: !328, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !245)
!10006 = !DILocation(line: 267, column: 16, scope: !10005)
!10007 = !DILocation(line: 268, column: 1, scope: !10005)
!10008 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10009, file: !10009, line: 9, type: !10010, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !10040)
!10009 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10010 = !DISubroutineType(types: !10011)
!10011 = !{!103, !10012, !185, !10039}
!10012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10013, size: 32)
!10013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10014)
!10014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1352, line: 60, size: 64, elements: !10015)
!10015 = !{!10016, !10038}
!10016 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10014, file: !1352, line: 69, baseType: !10017, size: 32)
!10017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10018, size: 32)
!10018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10019)
!10019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1352, line: 50, size: 64, elements: !10020)
!10020 = !{!10021, !10036, !10037}
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10019, file: !1352, line: 52, baseType: !10022, size: 32)
!10022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10023, size: 32)
!10023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10024)
!10024 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1107, line: 64, baseType: !10025)
!10025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1107, line: 59, size: 160, elements: !10026)
!10026 = !{!10027, !10035}
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10025, file: !1107, line: 60, baseType: !10028, size: 128)
!10028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1107, line: 51, size: 128, elements: !10029)
!10029 = !{!10030, !10031, !10032, !10033, !10034}
!10030 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10028, file: !1107, line: 52, baseType: !108, size: 32)
!10031 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10028, file: !1107, line: 53, baseType: !108, size: 32, offset: 32)
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10028, file: !1107, line: 54, baseType: !108, size: 32, offset: 64)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10028, file: !1107, line: 55, baseType: !185, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10028, file: !1107, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10025, file: !1107, line: 61, baseType: !108, size: 32, offset: 128)
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10019, file: !1352, line: 54, baseType: !185, size: 8, offset: 32)
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10019, file: !1352, line: 56, baseType: !185, size: 8, offset: 40)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10014, file: !1352, line: 71, baseType: !185, size: 8, offset: 32)
!10039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10017, size: 32)
!10040 = !{!10041, !10042, !10043}
!10041 = !DILocalVariable(name: "config", arg: 1, scope: !10008, file: !10009, line: 9, type: !10012)
!10042 = !DILocalVariable(name: "id", arg: 2, scope: !10008, file: !10009, line: 9, type: !185)
!10043 = !DILocalVariable(name: "state", arg: 3, scope: !10008, file: !10009, line: 10, type: !10039)
!10044 = !DILocation(line: 0, scope: !10008)
!10045 = !DILocation(line: 12, column: 20, scope: !10008)
!10046 = !DILocation(line: 13, column: 27, scope: !10008)
!10047 = !DILocation(line: 13, column: 42, scope: !10008)
!10048 = !DILocation(line: 13, column: 19, scope: !10008)
!10049 = !DILocation(line: 13, column: 16, scope: !10008)
!10050 = !DILocation(line: 13, column: 2, scope: !10008)
!10051 = distinct !{!10051, !10050, !10052}
!10052 = !DILocation(line: 19, column: 2, scope: !10008)
!10053 = !DILocation(line: 14, column: 23, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !10009, line: 14, column: 7)
!10055 = distinct !DILexicalBlock(scope: !10008, file: !10009, line: 13, column: 54)
!10056 = !DILocation(line: 14, column: 10, scope: !10054)
!10057 = !DILocation(line: 18, column: 11, scope: !10055)
!10058 = !DILocation(line: 14, column: 7, scope: !10055)
!10059 = !DILocation(line: 22, column: 1, scope: !10008)
!10060 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1691, file: !1691, line: 51, type: !1697, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !10061)
!10061 = !{!10062}
!10062 = !DILocalVariable(name: "dev", arg: 1, scope: !10060, file: !1691, line: 51, type: !1699)
!10063 = !DILocation(line: 0, scope: !10060)
!10064 = !DILocation(line: 66, column: 2, scope: !10060)
!10065 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1691, file: !1691, line: 10, type: !10066, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !10082)
!10066 = !DISubroutineType(types: !10067)
!10067 = !{!103, !10068, !185, !22}
!10068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10069, size: 32)
!10069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10070)
!10070 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1107, line: 64, baseType: !10071)
!10071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1107, line: 59, size: 160, elements: !10072)
!10072 = !{!10073, !10081}
!10073 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10071, file: !1107, line: 60, baseType: !10074, size: 128)
!10074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1107, line: 51, size: 128, elements: !10075)
!10075 = !{!10076, !10077, !10078, !10079, !10080}
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10074, file: !1107, line: 52, baseType: !108, size: 32)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10074, file: !1107, line: 53, baseType: !108, size: 32, offset: 32)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10074, file: !1107, line: 54, baseType: !108, size: 32, offset: 64)
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10074, file: !1107, line: 55, baseType: !185, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10074, file: !1107, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10071, file: !1107, line: 61, baseType: !108, size: 32, offset: 128)
!10082 = !{!10083, !10084, !10085, !10086, !10088, !10091, !10092, !10093, !10094, !10095}
!10083 = !DILocalVariable(name: "pins", arg: 1, scope: !10065, file: !1691, line: 10, type: !10068)
!10084 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10065, file: !1691, line: 10, type: !185)
!10085 = !DILocalVariable(name: "reg", arg: 3, scope: !10065, file: !1691, line: 11, type: !22)
!10086 = !DILocalVariable(name: "i", scope: !10087, file: !1691, line: 14, type: !185)
!10087 = distinct !DILexicalBlock(scope: !10065, file: !1691, line: 14, column: 2)
!10088 = !DILocalVariable(name: "mux_register", scope: !10089, file: !1691, line: 15, type: !108)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !1691, line: 14, column: 41)
!10090 = distinct !DILexicalBlock(scope: !10087, file: !1691, line: 14, column: 2)
!10091 = !DILocalVariable(name: "mux_mode", scope: !10089, file: !1691, line: 16, type: !108)
!10092 = !DILocalVariable(name: "input_register", scope: !10089, file: !1691, line: 17, type: !108)
!10093 = !DILocalVariable(name: "input_daisy", scope: !10089, file: !1691, line: 18, type: !108)
!10094 = !DILocalVariable(name: "config_register", scope: !10089, file: !1691, line: 19, type: !108)
!10095 = !DILocalVariable(name: "pin_ctrl_flags", scope: !10089, file: !1691, line: 20, type: !108)
!10096 = !DILocation(line: 0, scope: !10065)
!10097 = !DILocation(line: 0, scope: !10087)
!10098 = !DILocation(line: 14, column: 25, scope: !10090)
!10099 = !DILocation(line: 14, column: 2, scope: !10087)
!10100 = !DILocation(line: 48, column: 2, scope: !10065)
!10101 = !DILocation(line: 15, column: 42, scope: !10089)
!10102 = !DILocation(line: 0, scope: !10089)
!10103 = !DILocation(line: 16, column: 38, scope: !10089)
!10104 = !DILocation(line: 17, column: 44, scope: !10089)
!10105 = !DILocation(line: 19, column: 45, scope: !10089)
!10106 = !DILocation(line: 20, column: 37, scope: !10089)
!10107 = !DILocation(line: 35, column: 4, scope: !10089)
!10108 = !DILocation(line: 36, column: 4, scope: !10089)
!10109 = !DILocation(line: 35, column: 45, scope: !10089)
!10110 = !DILocation(line: 34, column: 5, scope: !10089)
!10111 = !DILocation(line: 34, column: 53, scope: !10089)
!10112 = !DILocation(line: 37, column: 7, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10089, file: !1691, line: 37, column: 7)
!10114 = !DILocation(line: 37, column: 7, scope: !10089)
!10115 = !DILocation(line: 18, column: 41, scope: !10089)
!10116 = !DILocation(line: 39, column: 5, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10113, file: !1691, line: 37, column: 23)
!10118 = !DILocation(line: 38, column: 6, scope: !10117)
!10119 = !DILocation(line: 38, column: 56, scope: !10117)
!10120 = !DILocation(line: 40, column: 3, scope: !10117)
!10121 = !DILocation(line: 41, column: 7, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10089, file: !1691, line: 41, column: 7)
!10123 = !DILocation(line: 41, column: 7, scope: !10089)
!10124 = !DILocation(line: 43, column: 20, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10122, file: !1691, line: 41, column: 24)
!10126 = !DILocation(line: 42, column: 6, scope: !10125)
!10127 = !DILocation(line: 42, column: 57, scope: !10125)
!10128 = !DILocation(line: 44, column: 3, scope: !10125)
!10129 = !DILocation(line: 14, column: 37, scope: !10090)
!10130 = distinct !{!10130, !10099, !10131}
!10131 = !DILocation(line: 47, column: 2, scope: !10087)
!10132 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !10133, file: !10133, line: 43, type: !10134, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !10188)
!10133 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10134 = !DISubroutineType(types: !10135)
!10135 = !{null, !10136, !108, !108, !108}
!10136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10137, size: 32)
!10137 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !682, line: 4575, baseType: !10138)
!10138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 4532, size: 390144, elements: !10139)
!10139 = !{!10140, !10141, !10142, !10143, !10144, !10145, !10153, !10154, !10162, !10163}
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !10138, file: !682, line: 4533, baseType: !686, size: 32)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !10138, file: !682, line: 4534, baseType: !686, size: 32, offset: 32)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !10138, file: !682, line: 4535, baseType: !686, size: 32, offset: 64)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !10138, file: !682, line: 4536, baseType: !686, size: 32, offset: 96)
!10144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10138, file: !682, line: 4537, baseType: !691, size: 16256, offset: 128)
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10138, file: !682, line: 4543, baseType: !10146, size: 4224, offset: 16384)
!10146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10147, size: 4224, elements: !702)
!10147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10138, file: !682, line: 4538, size: 128, elements: !10148)
!10148 = !{!10149, !10150, !10151, !10152}
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10147, file: !682, line: 4539, baseType: !686, size: 32)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !10147, file: !682, line: 4540, baseType: !686, size: 32, offset: 32)
!10151 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !10147, file: !682, line: 4541, baseType: !686, size: 32, offset: 64)
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !10147, file: !682, line: 4542, baseType: !686, size: 32, offset: 96)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10138, file: !682, line: 4544, baseType: !705, size: 110464, offset: 20608)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10138, file: !682, line: 4550, baseType: !10155, size: 24448, offset: 131072)
!10155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10156, size: 24448, elements: !716)
!10156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10138, file: !682, line: 4545, size: 128, elements: !10157)
!10157 = !{!10158, !10159, !10160, !10161}
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10156, file: !682, line: 4546, baseType: !686, size: 32)
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !10156, file: !682, line: 4547, baseType: !686, size: 32, offset: 32)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !10156, file: !682, line: 4548, baseType: !686, size: 32, offset: 64)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !10156, file: !682, line: 4549, baseType: !686, size: 32, offset: 96)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10138, file: !682, line: 4551, baseType: !719, size: 106624, offset: 155520)
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10138, file: !682, line: 4574, baseType: !10164, size: 128000, offset: 262144)
!10164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10165, size: 128000, elements: !750)
!10165 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10138, file: !682, line: 4552, size: 1024, elements: !10166)
!10166 = !{!10167, !10168, !10169, !10170, !10171, !10172, !10173, !10174, !10175, !10176, !10177, !10178, !10179, !10180, !10181, !10182, !10183, !10184, !10185, !10186, !10187}
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !10165, file: !682, line: 4553, baseType: !686, size: 32)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !10165, file: !682, line: 4554, baseType: !686, size: 32, offset: 32)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !10165, file: !682, line: 4555, baseType: !686, size: 32, offset: 64)
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !10165, file: !682, line: 4556, baseType: !686, size: 32, offset: 96)
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !10165, file: !682, line: 4557, baseType: !686, size: 32, offset: 128)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !10165, file: !682, line: 4558, baseType: !686, size: 32, offset: 160)
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !10165, file: !682, line: 4559, baseType: !686, size: 32, offset: 192)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !10165, file: !682, line: 4560, baseType: !686, size: 32, offset: 224)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !10165, file: !682, line: 4561, baseType: !686, size: 32, offset: 256)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !10165, file: !682, line: 4562, baseType: !686, size: 32, offset: 288)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !10165, file: !682, line: 4563, baseType: !686, size: 32, offset: 320)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !10165, file: !682, line: 4564, baseType: !686, size: 32, offset: 352)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !10165, file: !682, line: 4565, baseType: !686, size: 32, offset: 384)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !10165, file: !682, line: 4566, baseType: !686, size: 32, offset: 416)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !10165, file: !682, line: 4567, baseType: !686, size: 32, offset: 448)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !10165, file: !682, line: 4568, baseType: !686, size: 32, offset: 480)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10165, file: !682, line: 4569, baseType: !743, size: 384, offset: 512)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !10165, file: !682, line: 4570, baseType: !686, size: 32, offset: 896)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !10165, file: !682, line: 4571, baseType: !686, size: 32, offset: 928)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !10165, file: !682, line: 4572, baseType: !686, size: 32, offset: 960)
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10165, file: !682, line: 4573, baseType: !686, size: 32, offset: 992)
!10188 = !{!10189, !10190, !10191, !10192}
!10189 = !DILocalVariable(name: "base", arg: 1, scope: !10132, file: !10133, line: 43, type: !10136)
!10190 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10132, file: !10133, line: 43, type: !108)
!10191 = !DILocalVariable(name: "pre", arg: 3, scope: !10132, file: !10133, line: 43, type: !108)
!10192 = !DILocalVariable(name: "post", arg: 4, scope: !10132, file: !10133, line: 43, type: !108)
!10193 = !DILocation(line: 0, scope: !10132)
!10194 = !DILocation(line: 48, column: 25, scope: !10132)
!10195 = !DILocation(line: 48, column: 42, scope: !10132)
!10196 = !DILocation(line: 50, column: 24, scope: !10132)
!10197 = !DILocation(line: 50, column: 56, scope: !10132)
!10198 = !DILocation(line: 49, column: 94, scope: !10132)
!10199 = !DILocation(line: 50, column: 54, scope: !10132)
!10200 = !DILocation(line: 48, column: 22, scope: !10132)
!10201 = !DILocation(line: 51, column: 1, scope: !10132)
!10202 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !10133, file: !10133, line: 59, type: !10203, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !10205)
!10203 = !DISubroutineType(types: !10204)
!10204 = !{null, !10136, !108, !1378, !1378}
!10205 = !{!10206, !10207, !10208, !10209}
!10206 = !DILocalVariable(name: "base", arg: 1, scope: !10202, file: !10133, line: 59, type: !10136)
!10207 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10202, file: !10133, line: 59, type: !108)
!10208 = !DILocalVariable(name: "pre", arg: 3, scope: !10202, file: !10133, line: 59, type: !1378)
!10209 = !DILocalVariable(name: "post", arg: 4, scope: !10202, file: !10133, line: 59, type: !1378)
!10210 = !DILocation(line: 0, scope: !10202)
!10211 = !DILocation(line: 63, column: 13, scope: !10202)
!10212 = !DILocation(line: 63, column: 63, scope: !10202)
!10213 = !DILocation(line: 63, column: 10, scope: !10202)
!10214 = !DILocation(line: 64, column: 14, scope: !10202)
!10215 = !DILocation(line: 64, column: 31, scope: !10202)
!10216 = !DILocation(line: 64, column: 11, scope: !10202)
!10217 = !DILocation(line: 65, column: 1, scope: !10202)
!10218 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !10133, file: !10133, line: 73, type: !10219, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !10221)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{null, !10136, !108, !108, !108, !108}
!10221 = !{!10222, !10223, !10224, !10225, !10226}
!10222 = !DILocalVariable(name: "base", arg: 1, scope: !10218, file: !10133, line: 73, type: !10136)
!10223 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10218, file: !10133, line: 73, type: !108)
!10224 = !DILocalVariable(name: "mux", arg: 3, scope: !10218, file: !10133, line: 73, type: !108)
!10225 = !DILocalVariable(name: "pre", arg: 4, scope: !10218, file: !10133, line: 73, type: !108)
!10226 = !DILocalVariable(name: "post", arg: 5, scope: !10218, file: !10133, line: 73, type: !108)
!10227 = !DILocation(line: 0, scope: !10218)
!10228 = !DILocation(line: 78, column: 25, scope: !10218)
!10229 = !DILocation(line: 78, column: 42, scope: !10218)
!10230 = !DILocation(line: 80, column: 24, scope: !10218)
!10231 = !DILocation(line: 80, column: 51, scope: !10218)
!10232 = !DILocation(line: 80, column: 83, scope: !10218)
!10233 = !DILocation(line: 79, column: 121, scope: !10218)
!10234 = !DILocation(line: 80, column: 49, scope: !10218)
!10235 = !DILocation(line: 80, column: 81, scope: !10218)
!10236 = !DILocation(line: 78, column: 22, scope: !10218)
!10237 = !DILocation(line: 81, column: 1, scope: !10218)
!10238 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !10239, file: !10239, line: 43, type: !10240, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10242)
!10239 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10240 = !DISubroutineType(types: !10241)
!10241 = !{!108, !2812}
!10242 = !{!10243}
!10243 = !DILocalVariable(name: "base", arg: 1, scope: !10238, file: !10239, line: 43, type: !2812)
!10244 = !DILocation(line: 0, scope: !10238)
!10245 = !DILocation(line: 45, column: 9, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10238, file: !10239, line: 45, column: 9)
!10247 = !DILocation(line: 45, column: 9, scope: !10238)
!10248 = !DILocation(line: 48, column: 26, scope: !10238)
!10249 = !DILocation(line: 48, column: 45, scope: !10238)
!10250 = !DILocation(line: 48, column: 23, scope: !10238)
!10251 = !DILocation(line: 48, column: 5, scope: !10238)
!10252 = !DILocation(line: 49, column: 1, scope: !10238)
!10253 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2803, file: !2803, line: 220, type: !10254, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10256)
!10254 = !DISubroutineType(types: !10255)
!10255 = !{!131, !2812, !108}
!10256 = !{!10257, !10258}
!10257 = !DILocalVariable(name: "base", arg: 1, scope: !10253, file: !2803, line: 220, type: !2812)
!10258 = !DILocalVariable(name: "pllControl", arg: 2, scope: !10253, file: !2803, line: 220, type: !108)
!10259 = !DILocation(line: 0, scope: !10253)
!10260 = !DILocation(line: 222, column: 19, scope: !10253)
!10261 = !DILocation(line: 222, column: 58, scope: !10253)
!10262 = !DILocation(line: 222, column: 12, scope: !10253)
!10263 = !DILocation(line: 222, column: 5, scope: !10253)
!10264 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !10239, file: !10239, line: 57, type: !10240, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10265)
!10265 = !{!10266}
!10266 = !DILocalVariable(name: "base", arg: 1, scope: !10264, file: !10239, line: 57, type: !2812)
!10267 = !DILocation(line: 0, scope: !10264)
!10268 = !DILocation(line: 59, column: 9, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10264, file: !10239, line: 59, column: 9)
!10270 = !DILocation(line: 59, column: 9, scope: !10264)
!10271 = !DILocation(line: 62, column: 9, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10264, file: !10239, line: 62, column: 9)
!10273 = !DILocation(line: 62, column: 28, scope: !10272)
!10274 = !DILocation(line: 0, scope: !10272)
!10275 = !DILocation(line: 66, column: 1, scope: !10264)
!10276 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !10239, file: !10239, line: 74, type: !10240, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10277)
!10277 = !{!10278, !10279, !10280, !10281}
!10278 = !DILocalVariable(name: "base", arg: 1, scope: !10276, file: !10239, line: 74, type: !2812)
!10279 = !DILocalVariable(name: "divSelect", scope: !10276, file: !10239, line: 76, type: !185)
!10280 = !DILocalVariable(name: "divTestSelect", scope: !10276, file: !10239, line: 76, type: !185)
!10281 = !DILocalVariable(name: "factor", scope: !10276, file: !10239, line: 77, type: !2875)
!10282 = !DILocation(line: 0, scope: !10276)
!10283 = !DILocation(line: 79, column: 9, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10276, file: !10239, line: 79, column: 9)
!10285 = !DILocation(line: 79, column: 9, scope: !10276)
!10286 = !DILocation(line: 82, column: 17, scope: !10276)
!10287 = !DILocation(line: 83, column: 22, scope: !10276)
!10288 = !DILocation(line: 83, column: 100, scope: !10276)
!10289 = !DILocation(line: 83, column: 21, scope: !10276)
!10290 = !DILocation(line: 86, column: 5, scope: !10276)
!10291 = !DILocation(line: 100, column: 9, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10276, file: !10239, line: 100, column: 9)
!10293 = !DILocation(line: 100, column: 41, scope: !10292)
!10294 = !DILocation(line: 100, column: 9, scope: !10276)
!10295 = !DILocation(line: 102, column: 27, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10292, file: !10239, line: 101, column: 5)
!10297 = !DILocation(line: 102, column: 59, scope: !10296)
!10298 = !DILocation(line: 102, column: 19, scope: !10296)
!10299 = !DILocation(line: 103, column: 27, scope: !10296)
!10300 = !DILocation(line: 103, column: 62, scope: !10296)
!10301 = !DILocation(line: 103, column: 19, scope: !10296)
!10302 = !DILocation(line: 102, column: 95, scope: !10296)
!10303 = !DILocation(line: 104, column: 27, scope: !10296)
!10304 = !DILocation(line: 104, column: 60, scope: !10296)
!10305 = !DILocation(line: 104, column: 19, scope: !10296)
!10306 = !DILocation(line: 103, column: 98, scope: !10296)
!10307 = !DILocation(line: 105, column: 39, scope: !10296)
!10308 = !DILocation(line: 105, column: 27, scope: !10296)
!10309 = !DILocation(line: 105, column: 60, scope: !10296)
!10310 = !DILocation(line: 105, column: 70, scope: !10296)
!10311 = !DILocation(line: 105, column: 57, scope: !10296)
!10312 = !DILocation(line: 105, column: 16, scope: !10296)
!10313 = !DILocation(line: 105, column: 9, scope: !10296)
!10314 = !DILocation(line: 109, column: 28, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10292, file: !10239, line: 108, column: 5)
!10316 = !DILocation(line: 109, column: 48, scope: !10315)
!10317 = !DILocation(line: 109, column: 46, scope: !10315)
!10318 = !DILocation(line: 109, column: 9, scope: !10315)
!10319 = !DILocation(line: 111, column: 1, scope: !10276)
!10320 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !10239, file: !10239, line: 119, type: !10240, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10321)
!10321 = !{!10322}
!10322 = !DILocalVariable(name: "base", arg: 1, scope: !10320, file: !10239, line: 119, type: !2812)
!10323 = !DILocation(line: 0, scope: !10320)
!10324 = !DILocation(line: 121, column: 9, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10320, file: !10239, line: 121, column: 9)
!10326 = !DILocation(line: 125, column: 1, scope: !10320)
!10327 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !10239, file: !10239, line: 133, type: !10240, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10328)
!10328 = !{!10329, !10330, !10331, !10332, !10333}
!10329 = !DILocalVariable(name: "base", arg: 1, scope: !10327, file: !10239, line: 133, type: !2812)
!10330 = !DILocalVariable(name: "divSelect", scope: !10327, file: !10239, line: 135, type: !185)
!10331 = !DILocalVariable(name: "divPostSelect", scope: !10327, file: !10239, line: 135, type: !185)
!10332 = !DILocalVariable(name: "divTestSelect", scope: !10327, file: !10239, line: 135, type: !185)
!10333 = !DILocalVariable(name: "factor", scope: !10327, file: !10239, line: 136, type: !2875)
!10334 = !DILocation(line: 0, scope: !10327)
!10335 = !DILocation(line: 138, column: 9, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10327, file: !10239, line: 138, column: 9)
!10337 = !DILocation(line: 138, column: 9, scope: !10327)
!10338 = !DILocation(line: 141, column: 17, scope: !10327)
!10339 = !DILocation(line: 142, column: 22, scope: !10327)
!10340 = !DILocation(line: 142, column: 101, scope: !10327)
!10341 = !DILocation(line: 142, column: 21, scope: !10327)
!10342 = !DILocation(line: 144, column: 22, scope: !10327)
!10343 = !DILocation(line: 144, column: 104, scope: !10327)
!10344 = !DILocation(line: 144, column: 21, scope: !10327)
!10345 = !DILocation(line: 147, column: 5, scope: !10327)
!10346 = !DILocation(line: 161, column: 5, scope: !10327)
!10347 = !DILocation(line: 175, column: 9, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10327, file: !10239, line: 175, column: 9)
!10349 = !DILocation(line: 175, column: 43, scope: !10348)
!10350 = !DILocation(line: 175, column: 9, scope: !10327)
!10351 = !DILocation(line: 177, column: 27, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10348, file: !10239, line: 176, column: 5)
!10353 = !DILocation(line: 177, column: 61, scope: !10352)
!10354 = !DILocation(line: 177, column: 19, scope: !10352)
!10355 = !DILocation(line: 178, column: 27, scope: !10352)
!10356 = !DILocation(line: 178, column: 64, scope: !10352)
!10357 = !DILocation(line: 178, column: 19, scope: !10352)
!10358 = !DILocation(line: 177, column: 99, scope: !10352)
!10359 = !DILocation(line: 179, column: 27, scope: !10352)
!10360 = !DILocation(line: 179, column: 62, scope: !10352)
!10361 = !DILocation(line: 179, column: 19, scope: !10352)
!10362 = !DILocation(line: 178, column: 102, scope: !10352)
!10363 = !DILocation(line: 180, column: 40, scope: !10352)
!10364 = !DILocation(line: 180, column: 58, scope: !10352)
!10365 = !DILocation(line: 180, column: 27, scope: !10352)
!10366 = !DILocation(line: 180, column: 79, scope: !10352)
!10367 = !DILocation(line: 180, column: 89, scope: !10352)
!10368 = !DILocation(line: 180, column: 76, scope: !10352)
!10369 = !DILocation(line: 180, column: 16, scope: !10352)
!10370 = !DILocation(line: 180, column: 9, scope: !10352)
!10371 = !DILocation(line: 184, column: 29, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10348, file: !10239, line: 183, column: 5)
!10373 = !DILocation(line: 184, column: 47, scope: !10372)
!10374 = !DILocation(line: 184, column: 67, scope: !10372)
!10375 = !DILocation(line: 184, column: 65, scope: !10372)
!10376 = !DILocation(line: 184, column: 9, scope: !10372)
!10377 = !DILocation(line: 186, column: 1, scope: !10327)
!10378 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !10239, file: !10239, line: 194, type: !10240, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10379)
!10379 = !{!10380, !10381, !10382, !10383, !10384}
!10380 = !DILocalVariable(name: "base", arg: 1, scope: !10378, file: !10239, line: 194, type: !2812)
!10381 = !DILocalVariable(name: "divSelect", scope: !10378, file: !10239, line: 196, type: !185)
!10382 = !DILocalVariable(name: "divPostSelect", scope: !10378, file: !10239, line: 196, type: !185)
!10383 = !DILocalVariable(name: "divTestSelect", scope: !10378, file: !10239, line: 196, type: !185)
!10384 = !DILocalVariable(name: "factor", scope: !10378, file: !10239, line: 197, type: !2875)
!10385 = !DILocation(line: 0, scope: !10378)
!10386 = !DILocation(line: 199, column: 9, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10378, file: !10239, line: 199, column: 9)
!10388 = !DILocation(line: 199, column: 9, scope: !10378)
!10389 = !DILocation(line: 202, column: 17, scope: !10378)
!10390 = !DILocation(line: 203, column: 22, scope: !10378)
!10391 = !DILocation(line: 203, column: 101, scope: !10378)
!10392 = !DILocation(line: 203, column: 21, scope: !10378)
!10393 = !DILocation(line: 205, column: 22, scope: !10378)
!10394 = !DILocation(line: 205, column: 104, scope: !10378)
!10395 = !DILocation(line: 205, column: 21, scope: !10378)
!10396 = !DILocation(line: 208, column: 5, scope: !10378)
!10397 = !DILocation(line: 222, column: 5, scope: !10378)
!10398 = !DILocation(line: 236, column: 9, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10378, file: !10239, line: 236, column: 9)
!10400 = !DILocation(line: 236, column: 43, scope: !10399)
!10401 = !DILocation(line: 236, column: 9, scope: !10378)
!10402 = !DILocation(line: 238, column: 27, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10399, file: !10239, line: 237, column: 5)
!10404 = !DILocation(line: 238, column: 61, scope: !10403)
!10405 = !DILocation(line: 238, column: 19, scope: !10403)
!10406 = !DILocation(line: 239, column: 27, scope: !10403)
!10407 = !DILocation(line: 239, column: 64, scope: !10403)
!10408 = !DILocation(line: 239, column: 19, scope: !10403)
!10409 = !DILocation(line: 238, column: 99, scope: !10403)
!10410 = !DILocation(line: 240, column: 27, scope: !10403)
!10411 = !DILocation(line: 240, column: 62, scope: !10403)
!10412 = !DILocation(line: 240, column: 19, scope: !10403)
!10413 = !DILocation(line: 239, column: 102, scope: !10403)
!10414 = !DILocation(line: 241, column: 40, scope: !10403)
!10415 = !DILocation(line: 241, column: 58, scope: !10403)
!10416 = !DILocation(line: 241, column: 27, scope: !10403)
!10417 = !DILocation(line: 241, column: 79, scope: !10403)
!10418 = !DILocation(line: 241, column: 89, scope: !10403)
!10419 = !DILocation(line: 241, column: 76, scope: !10403)
!10420 = !DILocation(line: 241, column: 16, scope: !10403)
!10421 = !DILocation(line: 241, column: 9, scope: !10403)
!10422 = !DILocation(line: 245, column: 29, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10399, file: !10239, line: 244, column: 5)
!10424 = !DILocation(line: 245, column: 47, scope: !10423)
!10425 = !DILocation(line: 245, column: 67, scope: !10423)
!10426 = !DILocation(line: 245, column: 65, scope: !10423)
!10427 = !DILocation(line: 245, column: 9, scope: !10423)
!10428 = !DILocation(line: 247, column: 1, scope: !10378)
!10429 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !10239, file: !10239, line: 255, type: !10430, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10432)
!10430 = !DISubroutineType(types: !10431)
!10431 = !{!108, !2812, !108}
!10432 = !{!10433, !10434, !10435, !10436}
!10433 = !DILocalVariable(name: "base", arg: 1, scope: !10429, file: !10239, line: 255, type: !2812)
!10434 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10429, file: !10239, line: 255, type: !108)
!10435 = !DILocalVariable(name: "main", scope: !10429, file: !10239, line: 257, type: !108)
!10436 = !DILocalVariable(name: "frac", scope: !10429, file: !10239, line: 257, type: !108)
!10437 = !DILocation(line: 0, scope: !10429)
!10438 = !DILocation(line: 262, column: 12, scope: !10429)
!10439 = !DILocation(line: 263, column: 12, scope: !10429)
!10440 = !DILocation(line: 265, column: 17, scope: !10429)
!10441 = !DILocation(line: 265, column: 24, scope: !10429)
!10442 = !DILocation(line: 265, column: 5, scope: !10429)
!10443 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2803, file: !2803, line: 373, type: !10430, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10444)
!10444 = !{!10445, !10446}
!10445 = !DILocalVariable(name: "base", arg: 1, scope: !10443, file: !2803, line: 373, type: !2812)
!10446 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10443, file: !2803, line: 373, type: !108)
!10447 = !DILocation(line: 0, scope: !10443)
!10448 = !DILocation(line: 375, column: 13, scope: !10443)
!10449 = !DILocation(line: 375, column: 52, scope: !10443)
!10450 = !DILocation(line: 375, column: 49, scope: !10443)
!10451 = !DILocation(line: 375, column: 85, scope: !10443)
!10452 = !DILocation(line: 375, column: 5, scope: !10443)
!10453 = distinct !DISubprogram(name: "GPIO_Init", scope: !10454, file: !10454, line: 47, type: !10455, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !10479)
!10454 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10455 = !DISubroutineType(types: !10456)
!10456 = !{null, !10457, !10469}
!10457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10458, size: 32)
!10458 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !682, line: 19729, baseType: !10459)
!10459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 19720, size: 256, elements: !10460)
!10460 = !{!10461, !10462, !10463, !10464, !10465, !10466, !10467, !10468}
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !10459, file: !682, line: 19721, baseType: !686, size: 32)
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !10459, file: !682, line: 19722, baseType: !686, size: 32, offset: 32)
!10463 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !10459, file: !682, line: 19723, baseType: !757, size: 32, offset: 64)
!10464 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10459, file: !682, line: 19724, baseType: !686, size: 32, offset: 96)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10459, file: !682, line: 19725, baseType: !686, size: 32, offset: 128)
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !10459, file: !682, line: 19726, baseType: !686, size: 32, offset: 160)
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !10459, file: !682, line: 19727, baseType: !686, size: 32, offset: 192)
!10468 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !10459, file: !682, line: 19728, baseType: !686, size: 32, offset: 224)
!10469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10470, size: 32)
!10470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10471)
!10471 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !965, line: 78, baseType: !10472)
!10472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !965, line: 73, size: 96, elements: !10473)
!10473 = !{!10474, !10475, !10477}
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10472, file: !965, line: 75, baseType: !108, size: 32)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10472, file: !965, line: 76, baseType: !10476, size: 32, offset: 32)
!10476 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !965, line: 53, baseType: !2879)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !10472, file: !965, line: 77, baseType: !10478, size: 32, offset: 64)
!10478 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !965, line: 63, baseType: !2883)
!10479 = !{!10480, !10481, !10482, !10483}
!10480 = !DILocalVariable(name: "base", arg: 1, scope: !10453, file: !10454, line: 47, type: !10457)
!10481 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10453, file: !10454, line: 47, type: !10469)
!10482 = !DILocalVariable(name: "pin", scope: !10453, file: !10454, line: 49, type: !108)
!10483 = !DILocalVariable(name: "icr", scope: !10453, file: !10454, line: 50, type: !806)
!10484 = !DILocation(line: 0, scope: !10453)
!10485 = !DILocation(line: 53, column: 5, scope: !10453)
!10486 = !DILocation(line: 53, column: 24, scope: !10453)
!10487 = !DILocation(line: 54, column: 2, scope: !10453)
!10488 = !DILocation(line: 54, column: 26, scope: !10453)
!10489 = !DILocation(line: 57, column: 23, scope: !10453)
!10490 = !DILocation(line: 60, column: 21, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10453, file: !10454, line: 60, column: 9)
!10492 = !DILocation(line: 60, column: 31, scope: !10491)
!10493 = !DILocation(line: 0, scope: !10491)
!10494 = !DILocation(line: 60, column: 9, scope: !10453)
!10495 = !DILocation(line: 61, column: 9, scope: !10491)
!10496 = !DILocation(line: 61, column: 29, scope: !10491)
!10497 = !DILocation(line: 63, column: 32, scope: !10491)
!10498 = !DILocation(line: 63, column: 9, scope: !10491)
!10499 = !DILocation(line: 63, column: 29, scope: !10491)
!10500 = !DILocation(line: 66, column: 12, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10453, file: !10454, line: 66, column: 8)
!10502 = !DILocation(line: 66, column: 8, scope: !10453)
!10503 = !DILocation(line: 73, column: 24, scope: !10453)
!10504 = !DILocation(line: 73, column: 5, scope: !10453)
!10505 = !DILocation(line: 77, column: 30, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10507, file: !10454, line: 76, column: 9)
!10507 = distinct !DILexicalBlock(scope: !10453, file: !10454, line: 74, column: 5)
!10508 = !DILocation(line: 77, column: 26, scope: !10506)
!10509 = !DILocation(line: 77, column: 21, scope: !10506)
!10510 = !DILocation(line: 77, column: 18, scope: !10506)
!10511 = !DILocation(line: 78, column: 13, scope: !10506)
!10512 = !DILocation(line: 82, column: 21, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10507, file: !10454, line: 81, column: 9)
!10514 = !DILocation(line: 82, column: 38, scope: !10513)
!10515 = !DILocation(line: 82, column: 34, scope: !10513)
!10516 = !DILocation(line: 82, column: 29, scope: !10513)
!10517 = !DILocation(line: 82, column: 26, scope: !10513)
!10518 = !DILocation(line: 82, column: 53, scope: !10513)
!10519 = !DILocation(line: 82, column: 47, scope: !10513)
!10520 = !DILocation(line: 83, column: 13, scope: !10513)
!10521 = !DILocation(line: 87, column: 21, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10507, file: !10454, line: 86, column: 9)
!10523 = !DILocation(line: 87, column: 38, scope: !10522)
!10524 = !DILocation(line: 87, column: 34, scope: !10522)
!10525 = !DILocation(line: 87, column: 29, scope: !10522)
!10526 = !DILocation(line: 87, column: 26, scope: !10522)
!10527 = !DILocation(line: 87, column: 53, scope: !10522)
!10528 = !DILocation(line: 87, column: 47, scope: !10522)
!10529 = !DILocation(line: 88, column: 13, scope: !10522)
!10530 = !DILocation(line: 92, column: 29, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10507, file: !10454, line: 91, column: 9)
!10532 = !DILocation(line: 92, column: 25, scope: !10531)
!10533 = !DILocation(line: 92, column: 18, scope: !10531)
!10534 = !DILocation(line: 93, column: 13, scope: !10531)
!10535 = !DILocation(line: 0, scope: !10507)
!10536 = !DILocation(line: 100, column: 1, scope: !10453)
!10537 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !10454, file: !10454, line: 111, type: !10538, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !10541)
!10538 = !DISubroutineType(types: !10539)
!10539 = !{null, !10457, !108, !10540}
!10540 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !965, line: 70, baseType: !964)
!10541 = !{!10542, !10543, !10544}
!10542 = !DILocalVariable(name: "base", arg: 1, scope: !10537, file: !10454, line: 111, type: !10457)
!10543 = !DILocalVariable(name: "pin", arg: 2, scope: !10537, file: !10454, line: 111, type: !108)
!10544 = !DILocalVariable(name: "pinVal", arg: 3, scope: !10537, file: !10454, line: 111, type: !10540)
!10545 = !DILocation(line: 0, scope: !10537)
!10546 = !DILocation(line: 114, column: 16, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10537, file: !10454, line: 114, column: 9)
!10548 = !DILocation(line: 0, scope: !10547)
!10549 = !DILocation(line: 114, column: 9, scope: !10537)
!10550 = !DILocation(line: 116, column: 9, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10547, file: !10454, line: 115, column: 5)
!10552 = !DILocation(line: 116, column: 27, scope: !10551)
!10553 = !DILocation(line: 117, column: 5, scope: !10551)
!10554 = !DILocation(line: 120, column: 30, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10547, file: !10454, line: 119, column: 5)
!10556 = !DILocation(line: 120, column: 9, scope: !10555)
!10557 = !DILocation(line: 120, column: 27, scope: !10555)
!10558 = !DILocation(line: 122, column: 1, scope: !10537)
!10559 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !10454, file: !10454, line: 133, type: !10560, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !10562)
!10560 = !DISubroutineType(types: !10561)
!10561 = !{null, !10457, !108, !131}
!10562 = !{!10563, !10564, !10565}
!10563 = !DILocalVariable(name: "base", arg: 1, scope: !10559, file: !10454, line: 133, type: !10457)
!10564 = !DILocalVariable(name: "pin", arg: 2, scope: !10559, file: !10454, line: 133, type: !108)
!10565 = !DILocalVariable(name: "enable", arg: 3, scope: !10559, file: !10454, line: 133, type: !131)
!10566 = !DILocation(line: 0, scope: !10559)
!10567 = !DILocation(line: 0, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10559, file: !10454, line: 137, column: 8)
!10569 = !DILocation(line: 137, column: 8, scope: !10559)
!10570 = !DILocation(line: 138, column: 9, scope: !10568)
!10571 = !DILocation(line: 138, column: 28, scope: !10568)
!10572 = !DILocation(line: 140, column: 31, scope: !10568)
!10573 = !DILocation(line: 140, column: 9, scope: !10568)
!10574 = !DILocation(line: 140, column: 28, scope: !10568)
!10575 = !DILocation(line: 141, column: 1, scope: !10559)
!10576 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !10454, file: !10454, line: 150, type: !10560, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !10577)
!10577 = !{!10578, !10579, !10580}
!10578 = !DILocalVariable(name: "base", arg: 1, scope: !10576, file: !10454, line: 150, type: !10457)
!10579 = !DILocalVariable(name: "pin", arg: 2, scope: !10576, file: !10454, line: 150, type: !108)
!10580 = !DILocalVariable(name: "enable", arg: 3, scope: !10576, file: !10454, line: 150, type: !131)
!10581 = !DILocation(line: 0, scope: !10576)
!10582 = !DILocation(line: 0, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10576, file: !10454, line: 154, column: 8)
!10584 = !DILocation(line: 154, column: 8, scope: !10576)
!10585 = !DILocation(line: 155, column: 9, scope: !10583)
!10586 = !DILocation(line: 155, column: 33, scope: !10583)
!10587 = !DILocation(line: 157, column: 36, scope: !10583)
!10588 = !DILocation(line: 157, column: 9, scope: !10583)
!10589 = !DILocation(line: 157, column: 33, scope: !10583)
!10590 = !DILocation(line: 158, column: 1, scope: !10576)
!10591 = distinct !DISubprogram(name: "UART_Init", scope: !10592, file: !10592, line: 47, type: !10593, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10629)
!10592 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10593 = !DISubroutineType(types: !10594)
!10594 = !{null, !10595, !10618}
!10595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10596, size: 32)
!10596 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !682, line: 41342, baseType: !10597)
!10597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 41322, size: 1504, elements: !10598)
!10598 = !{!10599, !10600, !10601, !10602, !10603, !10604, !10605, !10606, !10607, !10608, !10609, !10610, !10611, !10612, !10613, !10614, !10615, !10616, !10617}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10597, file: !682, line: 41323, baseType: !757, size: 32)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10597, file: !682, line: 41324, baseType: !1320, size: 480, offset: 32)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10597, file: !682, line: 41325, baseType: !686, size: 32, offset: 512)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10597, file: !682, line: 41326, baseType: !1320, size: 480, offset: 544)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10597, file: !682, line: 41327, baseType: !686, size: 32, offset: 1024)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10597, file: !682, line: 41328, baseType: !686, size: 32, offset: 1056)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10597, file: !682, line: 41329, baseType: !686, size: 32, offset: 1088)
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10597, file: !682, line: 41330, baseType: !686, size: 32, offset: 1120)
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10597, file: !682, line: 41331, baseType: !686, size: 32, offset: 1152)
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10597, file: !682, line: 41332, baseType: !686, size: 32, offset: 1184)
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10597, file: !682, line: 41333, baseType: !686, size: 32, offset: 1216)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10597, file: !682, line: 41334, baseType: !686, size: 32, offset: 1248)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10597, file: !682, line: 41335, baseType: !686, size: 32, offset: 1280)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10597, file: !682, line: 41336, baseType: !686, size: 32, offset: 1312)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10597, file: !682, line: 41337, baseType: !686, size: 32, offset: 1344)
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10597, file: !682, line: 41338, baseType: !757, size: 32, offset: 1376)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10597, file: !682, line: 41339, baseType: !686, size: 32, offset: 1408)
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10597, file: !682, line: 41340, baseType: !686, size: 32, offset: 1440)
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10597, file: !682, line: 41341, baseType: !686, size: 32, offset: 1472)
!10618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10619, size: 32)
!10619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10620)
!10620 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1150, line: 57, baseType: !10621)
!10621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1150, line: 49, size: 192, elements: !10622)
!10622 = !{!10623, !10624, !10625, !10626, !10627, !10628}
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10621, file: !1150, line: 51, baseType: !108, size: 32)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10621, file: !1150, line: 52, baseType: !108, size: 32, offset: 32)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10621, file: !1150, line: 53, baseType: !108, size: 32, offset: 64)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10621, file: !1150, line: 54, baseType: !108, size: 32, offset: 96)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10621, file: !1150, line: 55, baseType: !108, size: 32, offset: 128)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10621, file: !1150, line: 56, baseType: !108, size: 32, offset: 160)
!10629 = !{!10630, !10631}
!10630 = !DILocalVariable(name: "base", arg: 1, scope: !10591, file: !10592, line: 47, type: !10595)
!10631 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10591, file: !10592, line: 47, type: !10618)
!10632 = !DILocation(line: 0, scope: !10591)
!10633 = !DILocation(line: 52, column: 5, scope: !10591)
!10634 = !DILocation(line: 52, column: 25, scope: !10591)
!10635 = !DILocation(line: 55, column: 5, scope: !10591)
!10636 = !DILocation(line: 60, column: 41, scope: !10591)
!10637 = !DILocation(line: 61, column: 41, scope: !10591)
!10638 = !DILocation(line: 62, column: 41, scope: !10591)
!10639 = !DILocation(line: 63, column: 41, scope: !10591)
!10640 = !DILocation(line: 60, column: 5, scope: !10591)
!10641 = !DILocation(line: 60, column: 25, scope: !10591)
!10642 = !DILocation(line: 61, column: 52, scope: !10591)
!10643 = !DILocation(line: 62, column: 52, scope: !10591)
!10644 = !DILocation(line: 63, column: 52, scope: !10591)
!10645 = !DILocation(line: 68, column: 5, scope: !10591)
!10646 = !DILocation(line: 68, column: 25, scope: !10591)
!10647 = !DILocation(line: 72, column: 40, scope: !10591)
!10648 = !DILocation(line: 72, column: 63, scope: !10591)
!10649 = !DILocation(line: 72, column: 5, scope: !10591)
!10650 = !DILocation(line: 73, column: 1, scope: !10591)
!10651 = distinct !DISubprogram(name: "UART_Deinit", scope: !10592, file: !10592, line: 82, type: !10652, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10654)
!10652 = !DISubroutineType(types: !10653)
!10653 = !{null, !10595}
!10654 = !{!10655}
!10655 = !DILocalVariable(name: "base", arg: 1, scope: !10651, file: !10592, line: 82, type: !10595)
!10656 = !DILocation(line: 0, scope: !10651)
!10657 = !DILocation(line: 85, column: 5, scope: !10651)
!10658 = !DILocation(line: 85, column: 25, scope: !10651)
!10659 = !DILocation(line: 88, column: 26, scope: !10651)
!10660 = !DILocation(line: 89, column: 5, scope: !10651)
!10661 = !DILocation(line: 89, column: 26, scope: !10651)
!10662 = !DILocation(line: 90, column: 5, scope: !10651)
!10663 = !DILocation(line: 90, column: 26, scope: !10651)
!10664 = !DILocation(line: 93, column: 5, scope: !10651)
!10665 = !DILocation(line: 93, column: 26, scope: !10651)
!10666 = !DILocation(line: 94, column: 5, scope: !10651)
!10667 = !DILocation(line: 94, column: 26, scope: !10651)
!10668 = !DILocation(line: 95, column: 5, scope: !10651)
!10669 = !DILocation(line: 95, column: 26, scope: !10651)
!10670 = !DILocation(line: 96, column: 5, scope: !10651)
!10671 = !DILocation(line: 96, column: 26, scope: !10651)
!10672 = !DILocation(line: 97, column: 5, scope: !10651)
!10673 = !DILocation(line: 97, column: 26, scope: !10651)
!10674 = !DILocation(line: 98, column: 5, scope: !10651)
!10675 = !DILocation(line: 98, column: 26, scope: !10651)
!10676 = !DILocation(line: 99, column: 5, scope: !10651)
!10677 = !DILocation(line: 99, column: 26, scope: !10651)
!10678 = !DILocation(line: 103, column: 25, scope: !10651)
!10679 = !DILocation(line: 104, column: 5, scope: !10651)
!10680 = !DILocation(line: 104, column: 14, scope: !10651)
!10681 = !DILocation(line: 104, column: 34, scope: !10651)
!10682 = !DILocation(line: 104, column: 12, scope: !10651)
!10683 = distinct !{!10683, !10679, !10684}
!10684 = !DILocation(line: 104, column: 57, scope: !10651)
!10685 = !DILocation(line: 105, column: 1, scope: !10651)
!10686 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !10592, file: !10592, line: 113, type: !10687, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10689)
!10687 = !DISubroutineType(types: !10688)
!10688 = !{null, !10595, !108, !108}
!10689 = !{!10690, !10691, !10692, !10693, !10694, !10695, !10696, !10697, !10698, !10701, !10702}
!10690 = !DILocalVariable(name: "base", arg: 1, scope: !10686, file: !10592, line: 113, type: !10595)
!10691 = !DILocalVariable(name: "clockRate", arg: 2, scope: !10686, file: !10592, line: 113, type: !108)
!10692 = !DILocalVariable(name: "baudRate", arg: 3, scope: !10686, file: !10592, line: 113, type: !108)
!10693 = !DILocalVariable(name: "numerator", scope: !10686, file: !10592, line: 115, type: !108)
!10694 = !DILocalVariable(name: "denominator", scope: !10686, file: !10592, line: 116, type: !108)
!10695 = !DILocalVariable(name: "divisor", scope: !10686, file: !10592, line: 117, type: !108)
!10696 = !DILocalVariable(name: "refFreqDiv", scope: !10686, file: !10592, line: 118, type: !108)
!10697 = !DILocalVariable(name: "divider", scope: !10686, file: !10592, line: 119, type: !108)
!10698 = !DILocalVariable(name: "m", scope: !10699, file: !10592, line: 141, type: !108)
!10699 = distinct !DILexicalBlock(scope: !10700, file: !10592, line: 140, column: 5)
!10700 = distinct !DILexicalBlock(scope: !10686, file: !10592, line: 138, column: 9)
!10701 = !DILocalVariable(name: "n", scope: !10699, file: !10592, line: 142, type: !108)
!10702 = !DILocalVariable(name: "max", scope: !10699, file: !10592, line: 143, type: !108)
!10703 = !DILocation(line: 0, scope: !10686)
!10704 = !DILocation(line: 123, column: 28, scope: !10686)
!10705 = !DILocation(line: 126, column: 24, scope: !10686)
!10706 = !DILocation(line: 126, column: 5, scope: !10686)
!10707 = !DILocation(line: 129, column: 33, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10686, file: !10592, line: 127, column: 5)
!10709 = distinct !{!10709, !10706, !10710}
!10710 = !DILocation(line: 131, column: 5, scope: !10686)
!10711 = !DILocation(line: 133, column: 27, scope: !10686)
!10712 = !DILocation(line: 134, column: 35, scope: !10686)
!10713 = !DILocation(line: 138, column: 20, scope: !10700)
!10714 = !DILocation(line: 138, column: 48, scope: !10700)
!10715 = !DILocation(line: 141, column: 33, scope: !10699)
!10716 = !DILocation(line: 141, column: 38, scope: !10699)
!10717 = !DILocation(line: 141, column: 65, scope: !10699)
!10718 = !DILocation(line: 0, scope: !10699)
!10719 = !DILocation(line: 142, column: 35, scope: !10699)
!10720 = !DILocation(line: 142, column: 40, scope: !10699)
!10721 = !DILocation(line: 142, column: 61, scope: !10699)
!10722 = !DILocation(line: 143, column: 26, scope: !10699)
!10723 = !DILocation(line: 143, column: 24, scope: !10699)
!10724 = !DILocation(line: 144, column: 19, scope: !10699)
!10725 = !DILocation(line: 145, column: 21, scope: !10699)
!10726 = !DILocation(line: 146, column: 15, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10699, file: !10592, line: 146, column: 13)
!10728 = !DILocation(line: 146, column: 13, scope: !10699)
!10729 = !DILocation(line: 148, column: 15, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10699, file: !10592, line: 148, column: 13)
!10731 = !DILocation(line: 148, column: 13, scope: !10699)
!10732 = !DILocation(line: 150, column: 5, scope: !10699)
!10733 = !DILocation(line: 151, column: 26, scope: !10686)
!10734 = !DILocation(line: 151, column: 31, scope: !10686)
!10735 = !DILocation(line: 151, column: 52, scope: !10686)
!10736 = !DILocation(line: 153, column: 5, scope: !10686)
!10737 = !DILocation(line: 0, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10686, file: !10592, line: 154, column: 5)
!10739 = !DILocation(line: 180, column: 5, scope: !10686)
!10740 = !DILocation(line: 180, column: 25, scope: !10686)
!10741 = !DILocation(line: 181, column: 25, scope: !10686)
!10742 = !DILocation(line: 182, column: 27, scope: !10686)
!10743 = !DILocation(line: 182, column: 5, scope: !10686)
!10744 = !DILocation(line: 182, column: 25, scope: !10686)
!10745 = !DILocation(line: 183, column: 27, scope: !10686)
!10746 = !DILocation(line: 183, column: 5, scope: !10686)
!10747 = !DILocation(line: 183, column: 25, scope: !10686)
!10748 = !DILocation(line: 184, column: 28, scope: !10686)
!10749 = !DILocation(line: 184, column: 5, scope: !10686)
!10750 = !DILocation(line: 184, column: 26, scope: !10686)
!10751 = !DILocation(line: 185, column: 1, scope: !10686)
!10752 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !10592, file: !10592, line: 194, type: !10753, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10755)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{null, !10595, !108, !131}
!10755 = !{!10756, !10757, !10758}
!10756 = !DILocalVariable(name: "base", arg: 1, scope: !10752, file: !10592, line: 194, type: !10595)
!10757 = !DILocalVariable(name: "direction", arg: 2, scope: !10752, file: !10592, line: 194, type: !108)
!10758 = !DILocalVariable(name: "invert", arg: 3, scope: !10752, file: !10592, line: 194, type: !131)
!10759 = !DILocation(line: 0, scope: !10752)
!10760 = !DILocation(line: 0, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10752, file: !10592, line: 198, column: 9)
!10762 = !DILocation(line: 198, column: 9, scope: !10752)
!10763 = !DILocation(line: 200, column: 13, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10761, file: !10592, line: 199, column: 5)
!10765 = !DILocation(line: 201, column: 13, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10764, file: !10592, line: 200, column: 13)
!10767 = !DILocation(line: 201, column: 33, scope: !10766)
!10768 = !DILocation(line: 202, column: 23, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10764, file: !10592, line: 202, column: 13)
!10770 = !DILocation(line: 202, column: 13, scope: !10764)
!10771 = !DILocation(line: 203, column: 13, scope: !10769)
!10772 = !DILocation(line: 203, column: 33, scope: !10769)
!10773 = !DILocation(line: 207, column: 13, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10761, file: !10592, line: 206, column: 5)
!10775 = !DILocation(line: 208, column: 13, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10774, file: !10592, line: 207, column: 13)
!10777 = !DILocation(line: 208, column: 33, scope: !10776)
!10778 = !DILocation(line: 209, column: 23, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10774, file: !10592, line: 209, column: 13)
!10780 = !DILocation(line: 209, column: 13, scope: !10774)
!10781 = !DILocation(line: 210, column: 13, scope: !10779)
!10782 = !DILocation(line: 210, column: 33, scope: !10779)
!10783 = !DILocation(line: 212, column: 1, scope: !10752)
!10784 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !10592, file: !10592, line: 224, type: !10785, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10787)
!10785 = !DISubroutineType(types: !10786)
!10786 = !{null, !10595, !131}
!10787 = !{!10788, !10789}
!10788 = !DILocalVariable(name: "base", arg: 1, scope: !10784, file: !10592, line: 224, type: !10595)
!10789 = !DILocalVariable(name: "enable", arg: 2, scope: !10784, file: !10592, line: 224, type: !131)
!10790 = !DILocation(line: 0, scope: !10784)
!10791 = !DILocation(line: 0, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10784, file: !10592, line: 226, column: 9)
!10793 = !DILocation(line: 226, column: 9, scope: !10784)
!10794 = !DILocation(line: 230, column: 1, scope: !10784)
!10795 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !10592, file: !10592, line: 239, type: !10785, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10796)
!10796 = !{!10797, !10798}
!10797 = !DILocalVariable(name: "base", arg: 1, scope: !10795, file: !10592, line: 239, type: !10595)
!10798 = !DILocalVariable(name: "enable", arg: 2, scope: !10795, file: !10592, line: 239, type: !131)
!10799 = !DILocation(line: 0, scope: !10795)
!10800 = !DILocation(line: 0, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10795, file: !10592, line: 241, column: 9)
!10802 = !DILocation(line: 241, column: 9, scope: !10795)
!10803 = !DILocation(line: 245, column: 1, scope: !10795)
!10804 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !10592, file: !10592, line: 258, type: !10753, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10805)
!10805 = !{!10806, !10807, !10808, !10809, !10810}
!10806 = !DILocalVariable(name: "base", arg: 1, scope: !10804, file: !10592, line: 258, type: !10595)
!10807 = !DILocalVariable(name: "intSource", arg: 2, scope: !10804, file: !10592, line: 258, type: !108)
!10808 = !DILocalVariable(name: "enable", arg: 3, scope: !10804, file: !10592, line: 258, type: !131)
!10809 = !DILocalVariable(name: "uart_reg", scope: !10804, file: !10592, line: 260, type: !806)
!10810 = !DILocalVariable(name: "uart_mask", scope: !10804, file: !10592, line: 261, type: !108)
!10811 = !DILocation(line: 0, scope: !10804)
!10812 = !DILocation(line: 263, column: 29, scope: !10804)
!10813 = !DILocation(line: 263, column: 57, scope: !10804)
!10814 = !DILocation(line: 263, column: 44, scope: !10804)
!10815 = !DILocation(line: 263, column: 16, scope: !10804)
!10816 = !DILocation(line: 264, column: 34, scope: !10804)
!10817 = !DILocation(line: 264, column: 20, scope: !10804)
!10818 = !DILocation(line: 266, column: 9, scope: !10804)
!10819 = !DILocation(line: 267, column: 19, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10804, file: !10592, line: 266, column: 9)
!10821 = !DILocation(line: 267, column: 9, scope: !10820)
!10822 = !DILocation(line: 269, column: 22, scope: !10820)
!10823 = !DILocation(line: 269, column: 19, scope: !10820)
!10824 = !DILocation(line: 0, scope: !10820)
!10825 = !DILocation(line: 270, column: 1, scope: !10804)
!10826 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !10592, file: !10592, line: 299, type: !10827, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10829)
!10827 = !DISubroutineType(types: !10828)
!10828 = !{null, !10595, !108}
!10829 = !{!10830, !10831, !10832, !10833}
!10830 = !DILocalVariable(name: "base", arg: 1, scope: !10826, file: !10592, line: 299, type: !10595)
!10831 = !DILocalVariable(name: "flag", arg: 2, scope: !10826, file: !10592, line: 299, type: !108)
!10832 = !DILocalVariable(name: "uart_reg", scope: !10826, file: !10592, line: 301, type: !806)
!10833 = !DILocalVariable(name: "uart_mask", scope: !10826, file: !10592, line: 302, type: !108)
!10834 = !DILocation(line: 0, scope: !10826)
!10835 = !DILocation(line: 304, column: 29, scope: !10826)
!10836 = !DILocation(line: 304, column: 52, scope: !10826)
!10837 = !DILocation(line: 304, column: 44, scope: !10826)
!10838 = !DILocation(line: 304, column: 16, scope: !10826)
!10839 = !DILocation(line: 305, column: 29, scope: !10826)
!10840 = !DILocation(line: 305, column: 20, scope: !10826)
!10841 = !DILocation(line: 308, column: 15, scope: !10826)
!10842 = !DILocation(line: 309, column: 1, scope: !10826)
!10843 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !10592, file: !10592, line: 322, type: !10753, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10844)
!10844 = !{!10845, !10846, !10847, !10848, !10849}
!10845 = !DILocalVariable(name: "base", arg: 1, scope: !10843, file: !10592, line: 322, type: !10595)
!10846 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !10843, file: !10592, line: 322, type: !108)
!10847 = !DILocalVariable(name: "enable", arg: 3, scope: !10843, file: !10592, line: 322, type: !131)
!10848 = !DILocalVariable(name: "uart_reg", scope: !10843, file: !10592, line: 324, type: !806)
!10849 = !DILocalVariable(name: "uart_mask", scope: !10843, file: !10592, line: 325, type: !108)
!10850 = !DILocation(line: 0, scope: !10843)
!10851 = !DILocation(line: 327, column: 29, scope: !10843)
!10852 = !DILocation(line: 327, column: 57, scope: !10843)
!10853 = !DILocation(line: 327, column: 44, scope: !10843)
!10854 = !DILocation(line: 327, column: 16, scope: !10843)
!10855 = !DILocation(line: 328, column: 34, scope: !10843)
!10856 = !DILocation(line: 328, column: 20, scope: !10843)
!10857 = !DILocation(line: 329, column: 9, scope: !10843)
!10858 = !DILocation(line: 330, column: 19, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10843, file: !10592, line: 329, column: 9)
!10860 = !DILocation(line: 330, column: 9, scope: !10859)
!10861 = !DILocation(line: 332, column: 22, scope: !10859)
!10862 = !DILocation(line: 332, column: 19, scope: !10859)
!10863 = !DILocation(line: 0, scope: !10859)
!10864 = !DILocation(line: 333, column: 1, scope: !10843)
!10865 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !10592, file: !10592, line: 345, type: !10785, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10866)
!10866 = !{!10867, !10868}
!10867 = !DILocalVariable(name: "base", arg: 1, scope: !10865, file: !10592, line: 345, type: !10595)
!10868 = !DILocalVariable(name: "enable", arg: 2, scope: !10865, file: !10592, line: 345, type: !131)
!10869 = !DILocation(line: 0, scope: !10865)
!10870 = !DILocation(line: 0, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10865, file: !10592, line: 347, column: 9)
!10872 = !DILocation(line: 347, column: 9, scope: !10865)
!10873 = !DILocation(line: 351, column: 1, scope: !10865)
!10874 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !10592, file: !10592, line: 362, type: !10785, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10875)
!10875 = !{!10876, !10877}
!10876 = !DILocalVariable(name: "base", arg: 1, scope: !10874, file: !10592, line: 362, type: !10595)
!10877 = !DILocalVariable(name: "enable", arg: 2, scope: !10874, file: !10592, line: 362, type: !131)
!10878 = !DILocation(line: 0, scope: !10874)
!10879 = !DILocation(line: 0, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10874, file: !10592, line: 364, column: 9)
!10881 = !DILocation(line: 364, column: 9, scope: !10874)
!10882 = !DILocation(line: 368, column: 1, scope: !10874)
!10883 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !10592, file: !10592, line: 379, type: !10785, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10884)
!10884 = !{!10885, !10886}
!10885 = !DILocalVariable(name: "base", arg: 1, scope: !10883, file: !10592, line: 379, type: !10595)
!10886 = !DILocalVariable(name: "active", arg: 2, scope: !10883, file: !10592, line: 379, type: !131)
!10887 = !DILocation(line: 0, scope: !10883)
!10888 = !DILocation(line: 0, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10883, file: !10592, line: 381, column: 9)
!10890 = !DILocation(line: 381, column: 9, scope: !10883)
!10891 = !DILocation(line: 385, column: 1, scope: !10883)
!10892 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !10592, file: !10592, line: 394, type: !10827, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10893)
!10893 = !{!10894, !10895}
!10894 = !DILocalVariable(name: "base", arg: 1, scope: !10892, file: !10592, line: 394, type: !10595)
!10895 = !DILocalVariable(name: "mode", arg: 2, scope: !10892, file: !10592, line: 394, type: !108)
!10896 = !DILocation(line: 0, scope: !10892)
!10897 = !DILocation(line: 398, column: 26, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10892, file: !10592, line: 398, column: 9)
!10899 = !DILocation(line: 0, scope: !10898)
!10900 = !DILocation(line: 398, column: 9, scope: !10892)
!10901 = !DILocation(line: 402, column: 1, scope: !10892)
!10902 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !10592, file: !10592, line: 412, type: !10785, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10903)
!10903 = !{!10904, !10905}
!10904 = !DILocalVariable(name: "base", arg: 1, scope: !10902, file: !10592, line: 412, type: !10595)
!10905 = !DILocalVariable(name: "active", arg: 2, scope: !10902, file: !10592, line: 412, type: !131)
!10906 = !DILocation(line: 0, scope: !10902)
!10907 = !DILocation(line: 0, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10902, file: !10592, line: 414, column: 9)
!10909 = !DILocation(line: 414, column: 9, scope: !10902)
!10910 = !DILocation(line: 418, column: 1, scope: !10902)
!10911 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !10592, file: !10592, line: 427, type: !10785, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10912)
!10912 = !{!10913, !10914}
!10913 = !DILocalVariable(name: "base", arg: 1, scope: !10911, file: !10592, line: 427, type: !10595)
!10914 = !DILocalVariable(name: "active", arg: 2, scope: !10911, file: !10592, line: 427, type: !131)
!10915 = !DILocation(line: 0, scope: !10911)
!10916 = !DILocation(line: 0, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10911, file: !10592, line: 429, column: 9)
!10918 = !DILocation(line: 429, column: 9, scope: !10911)
!10919 = !DILocation(line: 433, column: 1, scope: !10911)
!10920 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !10592, file: !10592, line: 442, type: !10785, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10921)
!10921 = !{!10922, !10923}
!10922 = !DILocalVariable(name: "base", arg: 1, scope: !10920, file: !10592, line: 442, type: !10595)
!10923 = !DILocalVariable(name: "active", arg: 2, scope: !10920, file: !10592, line: 442, type: !131)
!10924 = !DILocation(line: 0, scope: !10920)
!10925 = !DILocation(line: 0, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10920, file: !10592, line: 444, column: 9)
!10927 = !DILocation(line: 444, column: 9, scope: !10920)
!10928 = !DILocation(line: 448, column: 1, scope: !10920)
!10929 = distinct !DISubprogram(name: "UART_Putchar9", scope: !10592, file: !10592, line: 460, type: !10930, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10932)
!10930 = !DISubroutineType(types: !10931)
!10931 = !{null, !10595, !121}
!10932 = !{!10933, !10934}
!10933 = !DILocalVariable(name: "base", arg: 1, scope: !10929, file: !10592, line: 460, type: !10595)
!10934 = !DILocalVariable(name: "data", arg: 2, scope: !10929, file: !10592, line: 460, type: !121)
!10935 = !DILocation(line: 0, scope: !10929)
!10936 = !DILocation(line: 464, column: 9, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10929, file: !10592, line: 464, column: 9)
!10938 = !DILocation(line: 0, scope: !10937)
!10939 = !DILocation(line: 464, column: 9, scope: !10929)
!10940 = !DILocation(line: 468, column: 33, scope: !10929)
!10941 = !DILocation(line: 468, column: 5, scope: !10929)
!10942 = !DILocation(line: 468, column: 25, scope: !10929)
!10943 = !DILocation(line: 469, column: 1, scope: !10929)
!10944 = distinct !DISubprogram(name: "UART_Getchar9", scope: !10592, file: !10592, line: 478, type: !10945, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10947)
!10945 = !DISubroutineType(types: !10946)
!10946 = !{!121, !10595}
!10947 = !{!10948, !10949}
!10948 = !DILocalVariable(name: "base", arg: 1, scope: !10944, file: !10592, line: 478, type: !10595)
!10949 = !DILocalVariable(name: "rxData", scope: !10944, file: !10592, line: 480, type: !121)
!10950 = !DILocation(line: 0, scope: !10944)
!10951 = !DILocation(line: 480, column: 23, scope: !10944)
!10952 = !DILocation(line: 482, column: 9, scope: !10944)
!10953 = !DILocation(line: 491, column: 5, scope: !10944)
!10954 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !10592, file: !10592, line: 501, type: !10785, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10955)
!10955 = !{!10956, !10957}
!10956 = !DILocalVariable(name: "base", arg: 1, scope: !10954, file: !10592, line: 501, type: !10595)
!10957 = !DILocalVariable(name: "enable", arg: 2, scope: !10954, file: !10592, line: 501, type: !131)
!10958 = !DILocation(line: 0, scope: !10954)
!10959 = !DILocation(line: 0, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10954, file: !10592, line: 503, column: 9)
!10961 = !DILocation(line: 503, column: 9, scope: !10954)
!10962 = !DILocation(line: 507, column: 1, scope: !10954)
!10963 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !10592, file: !10592, line: 516, type: !10785, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10964)
!10964 = !{!10965, !10966}
!10965 = !DILocalVariable(name: "base", arg: 1, scope: !10963, file: !10592, line: 516, type: !10595)
!10966 = !DILocalVariable(name: "enable", arg: 2, scope: !10963, file: !10592, line: 516, type: !131)
!10967 = !DILocation(line: 0, scope: !10963)
!10968 = !DILocation(line: 0, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10963, file: !10592, line: 518, column: 9)
!10970 = !DILocation(line: 518, column: 9, scope: !10963)
!10971 = !DILocation(line: 522, column: 1, scope: !10963)
!10972 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !10592, file: !10592, line: 534, type: !10785, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10973)
!10973 = !{!10974, !10975}
!10974 = !DILocalVariable(name: "base", arg: 1, scope: !10972, file: !10592, line: 534, type: !10595)
!10975 = !DILocalVariable(name: "enable", arg: 2, scope: !10972, file: !10592, line: 534, type: !131)
!10976 = !DILocation(line: 0, scope: !10972)
!10977 = !DILocation(line: 0, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10972, file: !10592, line: 536, column: 9)
!10979 = !DILocation(line: 536, column: 9, scope: !10972)
!10980 = !DILocation(line: 540, column: 1, scope: !10972)
!10981 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !10592, file: !10592, line: 550, type: !10827, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10982)
!10982 = !{!10983, !10984}
!10983 = !DILocalVariable(name: "base", arg: 1, scope: !10981, file: !10592, line: 550, type: !10595)
!10984 = !DILocalVariable(name: "voteClock", arg: 2, scope: !10981, file: !10592, line: 550, type: !108)
!10985 = !DILocation(line: 0, scope: !10981)
!10986 = !DILocation(line: 555, column: 35, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10981, file: !10592, line: 555, column: 9)
!10988 = !DILocation(line: 0, scope: !10987)
!10989 = !DILocation(line: 555, column: 9, scope: !10981)
!10990 = !DILocation(line: 559, column: 1, scope: !10981)
!10991 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !10592, file: !10592, line: 571, type: !10785, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !10992)
!10992 = !{!10993, !10994}
!10993 = !DILocalVariable(name: "base", arg: 1, scope: !10991, file: !10592, line: 571, type: !10595)
!10994 = !DILocalVariable(name: "enable", arg: 2, scope: !10991, file: !10592, line: 571, type: !131)
!10995 = !DILocation(line: 0, scope: !10991)
!10996 = !DILocation(line: 0, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10991, file: !10592, line: 573, column: 9)
!10998 = !DILocation(line: 573, column: 9, scope: !10991)
!10999 = !DILocation(line: 577, column: 1, scope: !10991)
!11000 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !10592, file: !10592, line: 587, type: !10785, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !11001)
!11001 = !{!11002, !11003}
!11002 = !DILocalVariable(name: "base", arg: 1, scope: !11000, file: !10592, line: 587, type: !10595)
!11003 = !DILocalVariable(name: "active", arg: 2, scope: !11000, file: !10592, line: 587, type: !131)
!11004 = !DILocation(line: 0, scope: !11000)
!11005 = !DILocation(line: 0, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11000, file: !10592, line: 589, column: 9)
!11007 = !DILocation(line: 589, column: 9, scope: !11000)
!11008 = !DILocation(line: 593, column: 1, scope: !11000)
!11009 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !10592, file: !10592, line: 602, type: !10785, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !11010)
!11010 = !{!11011, !11012}
!11011 = !DILocalVariable(name: "base", arg: 1, scope: !11009, file: !10592, line: 602, type: !10595)
!11012 = !DILocalVariable(name: "enable", arg: 2, scope: !11009, file: !10592, line: 602, type: !131)
!11013 = !DILocation(line: 0, scope: !11009)
!11014 = !DILocation(line: 0, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11009, file: !10592, line: 604, column: 9)
!11016 = !DILocation(line: 604, column: 9, scope: !11009)
!11017 = !DILocation(line: 608, column: 1, scope: !11009)
!11018 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !11019, file: !11019, line: 42, type: !11020, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11036)
!11019 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11020 = !DISubroutineType(types: !11021)
!11021 = !{!108, !11022}
!11022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11023, size: 32)
!11023 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !682, line: 20831, baseType: !11024)
!11024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 20820, size: 320, elements: !11025)
!11025 = !{!11026, !11027, !11028, !11029, !11030, !11031, !11032, !11033, !11034, !11035}
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !11024, file: !682, line: 20821, baseType: !686, size: 32)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !11024, file: !682, line: 20822, baseType: !686, size: 32, offset: 32)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !11024, file: !682, line: 20823, baseType: !686, size: 32, offset: 64)
!11029 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !11024, file: !682, line: 20824, baseType: !686, size: 32, offset: 96)
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !11024, file: !682, line: 20825, baseType: !686, size: 32, offset: 128)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !11024, file: !682, line: 20826, baseType: !686, size: 32, offset: 160)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !11024, file: !682, line: 20827, baseType: !686, size: 32, offset: 192)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11024, file: !682, line: 20828, baseType: !757, size: 32, offset: 224)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11024, file: !682, line: 20829, baseType: !757, size: 32, offset: 256)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !11024, file: !682, line: 20830, baseType: !757, size: 32, offset: 288)
!11036 = !{!11037, !11038, !11039, !11040, !11041}
!11037 = !DILocalVariable(name: "base", arg: 1, scope: !11018, file: !11019, line: 42, type: !11022)
!11038 = !DILocalVariable(name: "root", scope: !11018, file: !11019, line: 44, type: !108)
!11039 = !DILocalVariable(name: "hz", scope: !11018, file: !11019, line: 45, type: !108)
!11040 = !DILocalVariable(name: "pre", scope: !11018, file: !11019, line: 46, type: !108)
!11041 = !DILocalVariable(name: "post", scope: !11018, file: !11019, line: 46, type: !108)
!11042 = !DILocation(line: 0, scope: !11018)
!11043 = !DILocation(line: 46, column: 2, scope: !11018)
!11044 = !DILocation(line: 48, column: 10, scope: !11018)
!11045 = !DILocation(line: 48, column: 2, scope: !11018)
!11046 = !DILocation(line: 56, column: 3, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11018, file: !11019, line: 48, column: 26)
!11048 = !DILocation(line: 0, scope: !11047)
!11049 = !DILocation(line: 61, column: 2, scope: !11018)
!11050 = !DILocation(line: 66, column: 8, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11018, file: !11019, line: 61, column: 16)
!11052 = !DILocation(line: 67, column: 3, scope: !11051)
!11053 = !DILocation(line: 0, scope: !11051)
!11054 = !DILocation(line: 72, column: 15, scope: !11018)
!11055 = !DILocation(line: 72, column: 19, scope: !11018)
!11056 = !DILocation(line: 72, column: 12, scope: !11018)
!11057 = !DILocation(line: 72, column: 27, scope: !11018)
!11058 = !DILocation(line: 72, column: 32, scope: !11018)
!11059 = !DILocation(line: 72, column: 24, scope: !11018)
!11060 = !DILocation(line: 72, column: 2, scope: !11018)
!11061 = !DILocation(line: 73, column: 1, scope: !11018)
!11062 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !398, file: !398, line: 368, type: !11063, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11065)
!11063 = !DISubroutineType(types: !11064)
!11064 = !{!108, !2916, !108}
!11065 = !{!11066, !11067}
!11066 = !DILocalVariable(name: "base", arg: 1, scope: !11062, file: !398, line: 368, type: !2916)
!11067 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11062, file: !398, line: 368, type: !108)
!11068 = !DILocation(line: 0, scope: !11062)
!11069 = !DILocation(line: 370, column: 13, scope: !11062)
!11070 = !DILocation(line: 370, column: 58, scope: !11062)
!11071 = !DILocation(line: 370, column: 5, scope: !11062)
!11072 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !11019, file: !11019, line: 81, type: !11073, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11093)
!11073 = !DISubroutineType(types: !11074)
!11074 = !{!108, !11075}
!11075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11076, size: 32)
!11076 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !682, line: 12462, baseType: !11077)
!11077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 12450, size: 544, elements: !11078)
!11078 = !{!11079, !11080, !11081, !11082, !11083, !11084, !11085, !11086, !11087, !11088, !11092}
!11079 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !11077, file: !682, line: 12451, baseType: !757, size: 32)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !11077, file: !682, line: 12452, baseType: !686, size: 32, offset: 32)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !11077, file: !682, line: 12453, baseType: !686, size: 32, offset: 64)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !11077, file: !682, line: 12454, baseType: !686, size: 32, offset: 96)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !11077, file: !682, line: 12455, baseType: !686, size: 32, offset: 128)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !11077, file: !682, line: 12456, baseType: !686, size: 32, offset: 160)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !11077, file: !682, line: 12457, baseType: !686, size: 32, offset: 192)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !11077, file: !682, line: 12458, baseType: !686, size: 32, offset: 224)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !11077, file: !682, line: 12459, baseType: !686, size: 32, offset: 256)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11077, file: !682, line: 12460, baseType: !11089, size: 224, offset: 288)
!11089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 224, elements: !11090)
!11090 = !{!11091}
!11091 = !DISubrange(count: 28)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !11077, file: !682, line: 12461, baseType: !686, size: 32, offset: 512)
!11093 = !{!11094, !11095, !11096, !11097, !11098}
!11094 = !DILocalVariable(name: "base", arg: 1, scope: !11072, file: !11019, line: 81, type: !11075)
!11095 = !DILocalVariable(name: "root", scope: !11072, file: !11019, line: 83, type: !108)
!11096 = !DILocalVariable(name: "hz", scope: !11072, file: !11019, line: 84, type: !108)
!11097 = !DILocalVariable(name: "pre", scope: !11072, file: !11019, line: 85, type: !108)
!11098 = !DILocalVariable(name: "post", scope: !11072, file: !11019, line: 85, type: !108)
!11099 = !DILocation(line: 0, scope: !11072)
!11100 = !DILocation(line: 85, column: 2, scope: !11072)
!11101 = !DILocation(line: 87, column: 10, scope: !11072)
!11102 = !DILocation(line: 87, column: 2, scope: !11072)
!11103 = !DILocation(line: 95, column: 3, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11072, file: !11019, line: 87, column: 26)
!11105 = !DILocation(line: 0, scope: !11104)
!11106 = !DILocation(line: 100, column: 2, scope: !11072)
!11107 = !DILocation(line: 105, column: 8, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11072, file: !11019, line: 100, column: 16)
!11109 = !DILocation(line: 106, column: 3, scope: !11108)
!11110 = !DILocation(line: 0, scope: !11108)
!11111 = !DILocation(line: 111, column: 15, scope: !11072)
!11112 = !DILocation(line: 111, column: 19, scope: !11072)
!11113 = !DILocation(line: 111, column: 12, scope: !11072)
!11114 = !DILocation(line: 111, column: 27, scope: !11072)
!11115 = !DILocation(line: 111, column: 32, scope: !11072)
!11116 = !DILocation(line: 111, column: 24, scope: !11072)
!11117 = !DILocation(line: 111, column: 2, scope: !11072)
!11118 = !DILocation(line: 112, column: 1, scope: !11072)
!11119 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !11019, file: !11019, line: 120, type: !11120, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11164)
!11120 = !DISubroutineType(types: !11121)
!11121 = !{!108, !11122}
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11123, size: 32)
!11123 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !682, line: 3477, baseType: !11124)
!11124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 3446, size: 20256, elements: !11125)
!11125 = !{!11126, !11127, !11128, !11129, !11131, !11132, !11133, !11134, !11135, !11136, !11137, !11138, !11139, !11140, !11141, !11142, !11144, !11145, !11146, !11147, !11148, !11158, !11160, !11162, !11163}
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !11124, file: !682, line: 3447, baseType: !686, size: 32)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !11124, file: !682, line: 3448, baseType: !686, size: 32, offset: 32)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !11124, file: !682, line: 3449, baseType: !686, size: 32, offset: 64)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11124, file: !682, line: 3450, baseType: !11130, size: 32, offset: 96)
!11130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 32, elements: !1640)
!11131 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !11124, file: !682, line: 3451, baseType: !686, size: 32, offset: 128)
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !11124, file: !682, line: 3452, baseType: !686, size: 32, offset: 160)
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !11124, file: !682, line: 3453, baseType: !686, size: 32, offset: 192)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !11124, file: !682, line: 3454, baseType: !686, size: 32, offset: 224)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !11124, file: !682, line: 3455, baseType: !686, size: 32, offset: 256)
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !11124, file: !682, line: 3456, baseType: !686, size: 32, offset: 288)
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !11124, file: !682, line: 3457, baseType: !686, size: 32, offset: 320)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !11124, file: !682, line: 3458, baseType: !686, size: 32, offset: 352)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !11124, file: !682, line: 3459, baseType: !686, size: 32, offset: 384)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !11124, file: !682, line: 3460, baseType: !686, size: 32, offset: 416)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !11124, file: !682, line: 3461, baseType: !757, size: 32, offset: 448)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11124, file: !682, line: 3462, baseType: !11143, size: 64, offset: 480)
!11143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 64, elements: !1586)
!11144 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !11124, file: !682, line: 3463, baseType: !757, size: 32, offset: 544)
!11145 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !11124, file: !682, line: 3464, baseType: !686, size: 32, offset: 576)
!11146 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !11124, file: !682, line: 3465, baseType: !757, size: 32, offset: 608)
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11124, file: !682, line: 3466, baseType: !743, size: 384, offset: 640)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !11124, file: !682, line: 3472, baseType: !11149, size: 8192, offset: 1024)
!11149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11150, size: 8192, elements: !11156)
!11150 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11124, file: !682, line: 3467, size: 128, elements: !11151)
!11151 = !{!11152, !11153, !11154, !11155}
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !11150, file: !682, line: 3468, baseType: !686, size: 32)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !11150, file: !682, line: 3469, baseType: !686, size: 32, offset: 32)
!11154 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !11150, file: !682, line: 3470, baseType: !686, size: 32, offset: 64)
!11155 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !11150, file: !682, line: 3471, baseType: !686, size: 32, offset: 96)
!11156 = !{!11157}
!11157 = !DISubrange(count: 64)
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11124, file: !682, line: 3473, baseType: !11159, size: 8192, offset: 9216)
!11159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 8192, elements: !340)
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !11124, file: !682, line: 3474, baseType: !11161, size: 2048, offset: 17408)
!11161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 2048, elements: !11156)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !11124, file: !682, line: 3475, baseType: !2817, size: 768, offset: 19456)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !11124, file: !682, line: 3476, baseType: !686, size: 32, offset: 20224)
!11164 = !{!11165, !11166, !11167, !11168, !11169}
!11165 = !DILocalVariable(name: "base", arg: 1, scope: !11119, file: !11019, line: 120, type: !11122)
!11166 = !DILocalVariable(name: "root", scope: !11119, file: !11019, line: 122, type: !108)
!11167 = !DILocalVariable(name: "hz", scope: !11119, file: !11019, line: 123, type: !108)
!11168 = !DILocalVariable(name: "pre", scope: !11119, file: !11019, line: 124, type: !108)
!11169 = !DILocalVariable(name: "post", scope: !11119, file: !11019, line: 124, type: !108)
!11170 = !DILocation(line: 0, scope: !11119)
!11171 = !DILocation(line: 124, column: 2, scope: !11119)
!11172 = !DILocation(line: 126, column: 10, scope: !11119)
!11173 = !DILocation(line: 126, column: 2, scope: !11119)
!11174 = !DILocation(line: 134, column: 3, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11119, file: !11019, line: 126, column: 26)
!11176 = !DILocation(line: 0, scope: !11175)
!11177 = !DILocation(line: 139, column: 2, scope: !11119)
!11178 = !DILocation(line: 144, column: 8, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11119, file: !11019, line: 139, column: 16)
!11180 = !DILocation(line: 144, column: 45, scope: !11179)
!11181 = !DILocation(line: 145, column: 3, scope: !11179)
!11182 = !DILocation(line: 147, column: 8, scope: !11179)
!11183 = !DILocation(line: 148, column: 3, scope: !11179)
!11184 = !DILocation(line: 0, scope: !11179)
!11185 = !DILocation(line: 153, column: 15, scope: !11119)
!11186 = !DILocation(line: 153, column: 19, scope: !11119)
!11187 = !DILocation(line: 153, column: 12, scope: !11119)
!11188 = !DILocation(line: 153, column: 27, scope: !11119)
!11189 = !DILocation(line: 153, column: 32, scope: !11119)
!11190 = !DILocation(line: 153, column: 24, scope: !11119)
!11191 = !DILocation(line: 153, column: 2, scope: !11119)
!11192 = !DILocation(line: 154, column: 1, scope: !11119)
!11193 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !11019, file: !11019, line: 162, type: !11194, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11210)
!11194 = !DISubroutineType(types: !11195)
!11195 = !{!108, !11196}
!11196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11197, size: 32)
!11197 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !682, line: 21082, baseType: !11198)
!11198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 21072, size: 144, elements: !11199)
!11199 = !{!11200, !11201, !11203, !11204, !11205, !11206, !11207, !11208, !11209}
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !11198, file: !682, line: 21073, baseType: !800, size: 16)
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11198, file: !682, line: 21074, baseType: !11202, size: 16, offset: 16)
!11202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 16, elements: !180)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !11198, file: !682, line: 21075, baseType: !800, size: 16, offset: 32)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11198, file: !682, line: 21076, baseType: !11202, size: 16, offset: 48)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !11198, file: !682, line: 21077, baseType: !800, size: 16, offset: 64)
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11198, file: !682, line: 21078, baseType: !11202, size: 16, offset: 80)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !11198, file: !682, line: 21079, baseType: !800, size: 16, offset: 96)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11198, file: !682, line: 21080, baseType: !11202, size: 16, offset: 112)
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !11198, file: !682, line: 21081, baseType: !800, size: 16, offset: 128)
!11210 = !{!11211, !11212, !11213, !11214, !11215}
!11211 = !DILocalVariable(name: "base", arg: 1, scope: !11193, file: !11019, line: 162, type: !11196)
!11212 = !DILocalVariable(name: "root", scope: !11193, file: !11019, line: 164, type: !108)
!11213 = !DILocalVariable(name: "hz", scope: !11193, file: !11019, line: 165, type: !108)
!11214 = !DILocalVariable(name: "pre", scope: !11193, file: !11019, line: 166, type: !108)
!11215 = !DILocalVariable(name: "post", scope: !11193, file: !11019, line: 166, type: !108)
!11216 = !DILocation(line: 0, scope: !11193)
!11217 = !DILocation(line: 166, column: 2, scope: !11193)
!11218 = !DILocation(line: 168, column: 10, scope: !11193)
!11219 = !DILocation(line: 168, column: 2, scope: !11193)
!11220 = !DILocation(line: 0, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11193, file: !11019, line: 168, column: 26)
!11222 = !DILocation(line: 189, column: 2, scope: !11193)
!11223 = !DILocation(line: 194, column: 8, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11193, file: !11019, line: 189, column: 16)
!11225 = !DILocation(line: 194, column: 45, scope: !11224)
!11226 = !DILocation(line: 195, column: 3, scope: !11224)
!11227 = !DILocation(line: 0, scope: !11224)
!11228 = !DILocation(line: 200, column: 15, scope: !11193)
!11229 = !DILocation(line: 200, column: 19, scope: !11193)
!11230 = !DILocation(line: 200, column: 12, scope: !11193)
!11231 = !DILocation(line: 200, column: 27, scope: !11193)
!11232 = !DILocation(line: 200, column: 32, scope: !11193)
!11233 = !DILocation(line: 200, column: 24, scope: !11193)
!11234 = !DILocation(line: 200, column: 2, scope: !11193)
!11235 = !DILocation(line: 201, column: 1, scope: !11193)
!11236 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !11019, file: !11019, line: 209, type: !11237, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11262)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{!108, !11239}
!11239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11240, size: 32)
!11240 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !682, line: 41342, baseType: !11241)
!11241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 41322, size: 1504, elements: !11242)
!11242 = !{!11243, !11244, !11245, !11246, !11247, !11248, !11249, !11250, !11251, !11252, !11253, !11254, !11255, !11256, !11257, !11258, !11259, !11260, !11261}
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11241, file: !682, line: 41323, baseType: !757, size: 32)
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11241, file: !682, line: 41324, baseType: !1320, size: 480, offset: 32)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11241, file: !682, line: 41325, baseType: !686, size: 32, offset: 512)
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11241, file: !682, line: 41326, baseType: !1320, size: 480, offset: 544)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11241, file: !682, line: 41327, baseType: !686, size: 32, offset: 1024)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11241, file: !682, line: 41328, baseType: !686, size: 32, offset: 1056)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11241, file: !682, line: 41329, baseType: !686, size: 32, offset: 1088)
!11250 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11241, file: !682, line: 41330, baseType: !686, size: 32, offset: 1120)
!11251 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11241, file: !682, line: 41331, baseType: !686, size: 32, offset: 1152)
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11241, file: !682, line: 41332, baseType: !686, size: 32, offset: 1184)
!11253 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11241, file: !682, line: 41333, baseType: !686, size: 32, offset: 1216)
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11241, file: !682, line: 41334, baseType: !686, size: 32, offset: 1248)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11241, file: !682, line: 41335, baseType: !686, size: 32, offset: 1280)
!11256 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11241, file: !682, line: 41336, baseType: !686, size: 32, offset: 1312)
!11257 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11241, file: !682, line: 41337, baseType: !686, size: 32, offset: 1344)
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11241, file: !682, line: 41338, baseType: !757, size: 32, offset: 1376)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11241, file: !682, line: 41339, baseType: !686, size: 32, offset: 1408)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11241, file: !682, line: 41340, baseType: !686, size: 32, offset: 1440)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11241, file: !682, line: 41341, baseType: !686, size: 32, offset: 1472)
!11262 = !{!11263, !11264, !11265, !11266, !11267}
!11263 = !DILocalVariable(name: "base", arg: 1, scope: !11236, file: !11019, line: 209, type: !11239)
!11264 = !DILocalVariable(name: "root", scope: !11236, file: !11019, line: 211, type: !108)
!11265 = !DILocalVariable(name: "hz", scope: !11236, file: !11019, line: 212, type: !108)
!11266 = !DILocalVariable(name: "pre", scope: !11236, file: !11019, line: 213, type: !108)
!11267 = !DILocalVariable(name: "post", scope: !11236, file: !11019, line: 213, type: !108)
!11268 = !DILocation(line: 0, scope: !11236)
!11269 = !DILocation(line: 213, column: 2, scope: !11236)
!11270 = !DILocation(line: 215, column: 10, scope: !11236)
!11271 = !DILocation(line: 215, column: 2, scope: !11236)
!11272 = !DILocation(line: 223, column: 3, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11236, file: !11019, line: 215, column: 26)
!11274 = !DILocation(line: 227, column: 3, scope: !11273)
!11275 = !DILocation(line: 231, column: 3, scope: !11273)
!11276 = !DILocation(line: 235, column: 3, scope: !11273)
!11277 = !DILocation(line: 239, column: 3, scope: !11273)
!11278 = !DILocation(line: 243, column: 3, scope: !11273)
!11279 = !DILocation(line: 0, scope: !11273)
!11280 = !DILocation(line: 248, column: 2, scope: !11236)
!11281 = !DILocation(line: 253, column: 8, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11236, file: !11019, line: 248, column: 16)
!11283 = !DILocation(line: 253, column: 45, scope: !11282)
!11284 = !DILocation(line: 254, column: 3, scope: !11282)
!11285 = !DILocation(line: 256, column: 8, scope: !11282)
!11286 = !DILocation(line: 257, column: 3, scope: !11282)
!11287 = !DILocation(line: 0, scope: !11282)
!11288 = !DILocation(line: 262, column: 15, scope: !11236)
!11289 = !DILocation(line: 262, column: 19, scope: !11236)
!11290 = !DILocation(line: 262, column: 12, scope: !11236)
!11291 = !DILocation(line: 262, column: 27, scope: !11236)
!11292 = !DILocation(line: 262, column: 32, scope: !11236)
!11293 = !DILocation(line: 262, column: 24, scope: !11236)
!11294 = !DILocation(line: 262, column: 2, scope: !11236)
!11295 = !DILocation(line: 263, column: 1, scope: !11236)
!11296 = distinct !DISubprogram(name: "z_device_state_init", scope: !11297, file: !11297, line: 23, type: !328, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11298)
!11297 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11298 = !{!11299}
!11299 = !DILocalVariable(name: "dev", scope: !11296, file: !11297, line: 25, type: !11300)
!11300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11301, size: 32)
!11301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11302)
!11302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !860, line: 378, size: 192, elements: !11303)
!11303 = !{!11304, !11305, !11306, !11307, !11313, !11314}
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11302, file: !860, line: 380, baseType: !331, size: 32)
!11305 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11302, file: !860, line: 382, baseType: !13, size: 32, offset: 32)
!11306 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11302, file: !860, line: 384, baseType: !13, size: 32, offset: 64)
!11307 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11302, file: !860, line: 386, baseType: !11308, size: 32, offset: 96)
!11308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11309, size: 32)
!11309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !860, line: 351, size: 16, elements: !11310)
!11310 = !{!11311, !11312}
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11309, file: !860, line: 359, baseType: !185, size: 8)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11309, file: !860, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11302, file: !860, line: 388, baseType: !102, size: 32, offset: 128)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11302, file: !860, line: 396, baseType: !873, size: 32, offset: 160)
!11315 = !DILocation(line: 0, scope: !11296)
!11316 = !DILocation(line: 31, column: 1, scope: !11296)
!11317 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11297, file: !11297, line: 33, type: !11318, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11320)
!11318 = !DISubroutineType(types: !11319)
!11319 = !{!11300, !331}
!11320 = !{!11321, !11322}
!11321 = !DILocalVariable(name: "name", arg: 1, scope: !11317, file: !11297, line: 33, type: !331)
!11322 = !DILocalVariable(name: "dev", scope: !11317, file: !11297, line: 35, type: !11300)
!11323 = !DILocation(line: 0, scope: !11317)
!11324 = !DILocation(line: 40, column: 12, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11317, file: !11297, line: 40, column: 6)
!11326 = !DILocation(line: 40, column: 21, scope: !11325)
!11327 = !DILocation(line: 40, column: 25, scope: !11325)
!11328 = !DILocation(line: 40, column: 33, scope: !11325)
!11329 = !DILocation(line: 40, column: 6, scope: !11317)
!11330 = !DILocation(line: 55, column: 2, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11317, file: !11297, line: 55, column: 2)
!11332 = !DILocation(line: 50, column: 7, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !11297, line: 50, column: 7)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !11297, line: 49, column: 57)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !11297, line: 49, column: 2)
!11336 = distinct !DILexicalBlock(scope: !11317, file: !11297, line: 49, column: 2)
!11337 = !DILocation(line: 50, column: 30, scope: !11333)
!11338 = !DILocation(line: 50, column: 39, scope: !11333)
!11339 = !DILocation(line: 50, column: 44, scope: !11333)
!11340 = !DILocation(line: 50, column: 7, scope: !11334)
!11341 = !DILocation(line: 49, column: 53, scope: !11335)
!11342 = !DILocation(line: 49, column: 33, scope: !11335)
!11343 = !DILocation(line: 49, column: 2, scope: !11336)
!11344 = distinct !{!11344, !11343, !11345}
!11345 = !DILocation(line: 53, column: 2, scope: !11336)
!11346 = !DILocation(line: 56, column: 7, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !11297, line: 56, column: 7)
!11348 = distinct !DILexicalBlock(scope: !11349, file: !11297, line: 55, column: 57)
!11349 = distinct !DILexicalBlock(scope: !11331, file: !11297, line: 55, column: 2)
!11350 = !DILocation(line: 56, column: 30, scope: !11347)
!11351 = !DILocation(line: 56, column: 52, scope: !11347)
!11352 = !DILocation(line: 56, column: 34, scope: !11347)
!11353 = !DILocation(line: 56, column: 58, scope: !11347)
!11354 = !DILocation(line: 56, column: 7, scope: !11348)
!11355 = !DILocation(line: 55, column: 53, scope: !11349)
!11356 = !DILocation(line: 55, column: 33, scope: !11349)
!11357 = distinct !{!11357, !11330, !11358}
!11358 = !DILocation(line: 59, column: 2, scope: !11331)
!11359 = !DILocation(line: 62, column: 1, scope: !11317)
!11360 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11297, file: !11297, line: 93, type: !11361, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11363)
!11361 = !DISubroutineType(types: !11362)
!11362 = !{!131, !11300}
!11363 = !{!11364}
!11364 = !DILocalVariable(name: "dev", arg: 1, scope: !11360, file: !11297, line: 93, type: !11300)
!11365 = !DILocation(line: 0, scope: !11360)
!11366 = !DILocation(line: 99, column: 10, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11360, file: !11297, line: 99, column: 6)
!11368 = !DILocation(line: 99, column: 6, scope: !11360)
!11369 = !DILocation(line: 103, column: 14, scope: !11360)
!11370 = !DILocation(line: 103, column: 21, scope: !11360)
!11371 = !DILocation(line: 103, column: 33, scope: !11360)
!11372 = !DILocation(line: 103, column: 49, scope: !11360)
!11373 = !DILocation(line: 103, column: 58, scope: !11360)
!11374 = !DILocation(line: 104, column: 1, scope: !11360)
!11375 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11297, file: !11297, line: 87, type: !11376, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11379)
!11376 = !DISubroutineType(types: !11377)
!11377 = !{!132, !11378}
!11378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11300, size: 32)
!11379 = !{!11380}
!11380 = !DILocalVariable(name: "devices", arg: 1, scope: !11375, file: !11297, line: 87, type: !11378)
!11381 = !DILocation(line: 0, scope: !11375)
!11382 = !DILocation(line: 89, column: 11, scope: !11375)
!11383 = !DILocation(line: 90, column: 2, scope: !11375)
!11384 = distinct !DISubprogram(name: "device_required_foreach", scope: !11297, file: !11297, line: 125, type: !11385, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11391)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{!103, !11300, !11387, !102}
!11387 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !860, line: 471, baseType: !11388)
!11388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11389, size: 32)
!11389 = !DISubroutineType(types: !11390)
!11390 = !{!103, !11300, !102}
!11391 = !{!11392, !11393, !11394, !11395, !11396}
!11392 = !DILocalVariable(name: "dev", arg: 1, scope: !11384, file: !11297, line: 125, type: !11300)
!11393 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11384, file: !11297, line: 126, type: !11387)
!11394 = !DILocalVariable(name: "context", arg: 3, scope: !11384, file: !11297, line: 127, type: !102)
!11395 = !DILocalVariable(name: "handle_count", scope: !11384, file: !11297, line: 129, type: !132)
!11396 = !DILocalVariable(name: "handles", scope: !11384, file: !11297, line: 130, type: !873)
!11397 = !DILocation(line: 0, scope: !11384)
!11398 = !DILocation(line: 129, column: 2, scope: !11384)
!11399 = !DILocation(line: 129, column: 9, scope: !11384)
!11400 = !DILocation(line: 130, column: 35, scope: !11384)
!11401 = !DILocation(line: 132, column: 33, scope: !11384)
!11402 = !DILocation(line: 132, column: 9, scope: !11384)
!11403 = !DILocation(line: 133, column: 1, scope: !11384)
!11404 = !DILocation(line: 132, column: 2, scope: !11384)
!11405 = distinct !DISubprogram(name: "device_required_handles_get", scope: !860, file: !860, line: 493, type: !11406, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11408)
!11406 = !DISubroutineType(types: !11407)
!11407 = !{!873, !11300, !2478}
!11408 = !{!11409, !11410, !11411, !11412}
!11409 = !DILocalVariable(name: "dev", arg: 1, scope: !11405, file: !860, line: 493, type: !11300)
!11410 = !DILocalVariable(name: "count", arg: 2, scope: !11405, file: !860, line: 493, type: !2478)
!11411 = !DILocalVariable(name: "rv", scope: !11405, file: !860, line: 495, type: !873)
!11412 = !DILocalVariable(name: "i", scope: !11413, file: !860, line: 498, type: !132)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !860, line: 497, column: 18)
!11414 = distinct !DILexicalBlock(scope: !11405, file: !860, line: 497, column: 6)
!11415 = !DILocation(line: 0, scope: !11405)
!11416 = !DILocation(line: 495, column: 35, scope: !11405)
!11417 = !DILocation(line: 497, column: 9, scope: !11414)
!11418 = !DILocation(line: 497, column: 6, scope: !11405)
!11419 = !DILocation(line: 0, scope: !11413)
!11420 = !DILocation(line: 500, column: 11, scope: !11413)
!11421 = !DILocation(line: 500, column: 40, scope: !11413)
!11422 = !DILocation(line: 502, column: 4, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11413, file: !860, line: 501, column: 40)
!11424 = distinct !{!11424, !11425, !11426}
!11425 = !DILocation(line: 500, column: 3, scope: !11413)
!11426 = !DILocation(line: 503, column: 3, scope: !11413)
!11427 = !DILocation(line: 504, column: 10, scope: !11413)
!11428 = !DILocation(line: 505, column: 2, scope: !11413)
!11429 = !DILocation(line: 507, column: 2, scope: !11405)
!11430 = distinct !DISubprogram(name: "device_visitor", scope: !11297, file: !11297, line: 106, type: !11431, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11433)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{!103, !873, !132, !11387, !102}
!11433 = !{!11434, !11435, !11436, !11437, !11438, !11440, !11443, !11444}
!11434 = !DILocalVariable(name: "handles", arg: 1, scope: !11430, file: !11297, line: 106, type: !873)
!11435 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11430, file: !11297, line: 107, type: !132)
!11436 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11430, file: !11297, line: 108, type: !11387)
!11437 = !DILocalVariable(name: "context", arg: 4, scope: !11430, file: !11297, line: 109, type: !102)
!11438 = !DILocalVariable(name: "i", scope: !11439, file: !11297, line: 112, type: !132)
!11439 = distinct !DILexicalBlock(scope: !11430, file: !11297, line: 112, column: 2)
!11440 = !DILocalVariable(name: "dh", scope: !11441, file: !11297, line: 113, type: !875)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !11297, line: 112, column: 44)
!11442 = distinct !DILexicalBlock(scope: !11439, file: !11297, line: 112, column: 2)
!11443 = !DILocalVariable(name: "rdev", scope: !11441, file: !11297, line: 114, type: !11300)
!11444 = !DILocalVariable(name: "rc", scope: !11441, file: !11297, line: 115, type: !103)
!11445 = !DILocation(line: 0, scope: !11430)
!11446 = !DILocation(line: 0, scope: !11439)
!11447 = !DILocation(line: 112, column: 23, scope: !11442)
!11448 = !DILocation(line: 112, column: 2, scope: !11439)
!11449 = distinct !{!11449, !11448, !11450}
!11450 = !DILocation(line: 120, column: 2, scope: !11439)
!11451 = !DILocation(line: 113, column: 24, scope: !11441)
!11452 = !DILocation(line: 0, scope: !11441)
!11453 = !DILocation(line: 114, column: 31, scope: !11441)
!11454 = !DILocation(line: 115, column: 12, scope: !11441)
!11455 = !DILocation(line: 117, column: 10, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11441, file: !11297, line: 117, column: 7)
!11457 = !DILocation(line: 112, column: 39, scope: !11442)
!11458 = !DILocation(line: 123, column: 1, scope: !11430)
!11459 = distinct !DISubprogram(name: "device_from_handle", scope: !860, file: !860, line: 439, type: !11460, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11462)
!11460 = !DISubroutineType(types: !11461)
!11461 = !{!11300, !875}
!11462 = !{!11463, !11464, !11465}
!11463 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11459, file: !860, line: 439, type: !875)
!11464 = !DILocalVariable(name: "dev", scope: !11459, file: !860, line: 443, type: !11300)
!11465 = !DILocalVariable(name: "numdev", scope: !11459, file: !860, line: 444, type: !132)
!11466 = !DILocation(line: 0, scope: !11459)
!11467 = !DILocation(line: 446, column: 7, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11459, file: !860, line: 446, column: 6)
!11469 = !DILocation(line: 446, column: 18, scope: !11468)
!11470 = !DILocation(line: 446, column: 23, scope: !11468)
!11471 = !DILocation(line: 450, column: 2, scope: !11459)
!11472 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11297, file: !11297, line: 135, type: !11385, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11473)
!11473 = !{!11474, !11475, !11476, !11477, !11478}
!11474 = !DILocalVariable(name: "dev", arg: 1, scope: !11472, file: !11297, line: 135, type: !11300)
!11475 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11472, file: !11297, line: 136, type: !11387)
!11476 = !DILocalVariable(name: "context", arg: 3, scope: !11472, file: !11297, line: 137, type: !102)
!11477 = !DILocalVariable(name: "handle_count", scope: !11472, file: !11297, line: 139, type: !132)
!11478 = !DILocalVariable(name: "handles", scope: !11472, file: !11297, line: 140, type: !873)
!11479 = !DILocation(line: 0, scope: !11472)
!11480 = !DILocation(line: 139, column: 2, scope: !11472)
!11481 = !DILocation(line: 139, column: 9, scope: !11472)
!11482 = !DILocation(line: 140, column: 35, scope: !11472)
!11483 = !DILocation(line: 142, column: 33, scope: !11472)
!11484 = !DILocation(line: 142, column: 9, scope: !11472)
!11485 = !DILocation(line: 143, column: 1, scope: !11472)
!11486 = !DILocation(line: 142, column: 2, scope: !11472)
!11487 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !860, file: !860, line: 573, type: !11406, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11488)
!11488 = !{!11489, !11490, !11491, !11492, !11493}
!11489 = !DILocalVariable(name: "dev", arg: 1, scope: !11487, file: !860, line: 573, type: !11300)
!11490 = !DILocalVariable(name: "count", arg: 2, scope: !11487, file: !860, line: 573, type: !2478)
!11491 = !DILocalVariable(name: "rv", scope: !11487, file: !860, line: 575, type: !873)
!11492 = !DILocalVariable(name: "region", scope: !11487, file: !860, line: 576, type: !132)
!11493 = !DILocalVariable(name: "i", scope: !11487, file: !860, line: 577, type: !132)
!11494 = !DILocation(line: 0, scope: !11487)
!11495 = !DILocation(line: 575, column: 35, scope: !11487)
!11496 = !DILocation(line: 579, column: 9, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11487, file: !860, line: 579, column: 6)
!11498 = !DILocation(line: 579, column: 6, scope: !11487)
!11499 = !DILocation(line: 582, column: 8, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !860, line: 582, column: 8)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !860, line: 581, column: 23)
!11502 = distinct !DILexicalBlock(scope: !11497, file: !860, line: 579, column: 18)
!11503 = !DILocation(line: 582, column: 12, scope: !11500)
!11504 = !DILocation(line: 585, column: 6, scope: !11501)
!11505 = !DILocation(line: 0, scope: !11502)
!11506 = !DILocation(line: 581, column: 17, scope: !11502)
!11507 = !DILocation(line: 581, column: 3, scope: !11502)
!11508 = !DILocation(line: 588, column: 10, scope: !11502)
!11509 = !DILocation(line: 588, column: 16, scope: !11502)
!11510 = !DILocation(line: 589, column: 4, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11502, file: !860, line: 588, column: 39)
!11512 = !DILocation(line: 588, column: 3, scope: !11502)
!11513 = distinct !{!11513, !11512, !11514}
!11514 = !DILocation(line: 590, column: 3, scope: !11502)
!11515 = !DILocation(line: 591, column: 10, scope: !11502)
!11516 = !DILocation(line: 592, column: 2, scope: !11502)
!11517 = !DILocation(line: 575, column: 25, scope: !11487)
!11518 = !DILocation(line: 594, column: 2, scope: !11487)
!11519 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1720, file: !1720, line: 49, type: !11520, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1717, retainedNodes: !245)
!11520 = !DISubroutineType(types: !11521)
!11521 = !{!368}
!11522 = !DILocation(line: 51, column: 10, scope: !11519)
!11523 = !DILocation(line: 51, column: 20, scope: !11519)
!11524 = !DILocation(line: 51, column: 2, scope: !11519)
!11525 = distinct !DISubprogram(name: "coredump", scope: !3034, file: !3034, line: 209, type: !11526, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11666)
!11526 = !DISubroutineType(types: !11527)
!11527 = !{null, !32, !11528, !11572}
!11528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11529, size: 32)
!11529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11530)
!11530 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2607, line: 141, baseType: !11531)
!11531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2607, line: 97, size: 256, elements: !11532)
!11532 = !{!11533}
!11533 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11531, file: !2607, line: 107, baseType: !11534, size: 256)
!11534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2607, line: 98, size: 256, elements: !11535)
!11535 = !{!11536, !11541, !11546, !11551, !11556, !11561, !11566, !11571}
!11536 = !DIDerivedType(tag: DW_TAG_member, scope: !11534, file: !2607, line: 99, baseType: !11537, size: 32)
!11537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11534, file: !2607, line: 99, size: 32, elements: !11538)
!11538 = !{!11539, !11540}
!11539 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11537, file: !2607, line: 99, baseType: !108, size: 32)
!11540 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11537, file: !2607, line: 99, baseType: !108, size: 32)
!11541 = !DIDerivedType(tag: DW_TAG_member, scope: !11534, file: !2607, line: 100, baseType: !11542, size: 32, offset: 32)
!11542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11534, file: !2607, line: 100, size: 32, elements: !11543)
!11543 = !{!11544, !11545}
!11544 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11542, file: !2607, line: 100, baseType: !108, size: 32)
!11545 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11542, file: !2607, line: 100, baseType: !108, size: 32)
!11546 = !DIDerivedType(tag: DW_TAG_member, scope: !11534, file: !2607, line: 101, baseType: !11547, size: 32, offset: 64)
!11547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11534, file: !2607, line: 101, size: 32, elements: !11548)
!11548 = !{!11549, !11550}
!11549 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11547, file: !2607, line: 101, baseType: !108, size: 32)
!11550 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11547, file: !2607, line: 101, baseType: !108, size: 32)
!11551 = !DIDerivedType(tag: DW_TAG_member, scope: !11534, file: !2607, line: 102, baseType: !11552, size: 32, offset: 96)
!11552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11534, file: !2607, line: 102, size: 32, elements: !11553)
!11553 = !{!11554, !11555}
!11554 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11552, file: !2607, line: 102, baseType: !108, size: 32)
!11555 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11552, file: !2607, line: 102, baseType: !108, size: 32)
!11556 = !DIDerivedType(tag: DW_TAG_member, scope: !11534, file: !2607, line: 103, baseType: !11557, size: 32, offset: 128)
!11557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11534, file: !2607, line: 103, size: 32, elements: !11558)
!11558 = !{!11559, !11560}
!11559 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11557, file: !2607, line: 103, baseType: !108, size: 32)
!11560 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11557, file: !2607, line: 103, baseType: !108, size: 32)
!11561 = !DIDerivedType(tag: DW_TAG_member, scope: !11534, file: !2607, line: 104, baseType: !11562, size: 32, offset: 160)
!11562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11534, file: !2607, line: 104, size: 32, elements: !11563)
!11563 = !{!11564, !11565}
!11564 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11562, file: !2607, line: 104, baseType: !108, size: 32)
!11565 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11562, file: !2607, line: 104, baseType: !108, size: 32)
!11566 = !DIDerivedType(tag: DW_TAG_member, scope: !11534, file: !2607, line: 105, baseType: !11567, size: 32, offset: 192)
!11567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11534, file: !2607, line: 105, size: 32, elements: !11568)
!11568 = !{!11569, !11570}
!11569 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11567, file: !2607, line: 105, baseType: !108, size: 32)
!11570 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11567, file: !2607, line: 105, baseType: !108, size: 32)
!11571 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11534, file: !2607, line: 106, baseType: !108, size: 32, offset: 224)
!11572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11573, size: 32)
!11573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !11574)
!11574 = !{!11575, !11633, !11645, !11646, !11647, !11648, !11661}
!11575 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11573, file: !163, line: 247, baseType: !11576, size: 384)
!11576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !11577)
!11577 = !{!11578, !11602, !11609, !11610, !11611, !11620, !11621, !11622}
!11578 = !DIDerivedType(tag: DW_TAG_member, scope: !11576, file: !163, line: 60, baseType: !11579, size: 64)
!11579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11576, file: !163, line: 60, size: 64, elements: !11580)
!11580 = !{!11581, !11596}
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11579, file: !163, line: 61, baseType: !11582, size: 64)
!11582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !11583)
!11583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !11584)
!11584 = !{!11585, !11591}
!11585 = !DIDerivedType(tag: DW_TAG_member, scope: !11583, file: !146, line: 38, baseType: !11586, size: 32)
!11586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11583, file: !146, line: 38, size: 32, elements: !11587)
!11587 = !{!11588, !11590}
!11588 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11586, file: !146, line: 39, baseType: !11589, size: 32)
!11589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11583, size: 32)
!11590 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11586, file: !146, line: 40, baseType: !11589, size: 32)
!11591 = !DIDerivedType(tag: DW_TAG_member, scope: !11583, file: !146, line: 42, baseType: !11592, size: 32, offset: 32)
!11592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11583, file: !146, line: 42, size: 32, elements: !11593)
!11593 = !{!11594, !11595}
!11594 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11592, file: !146, line: 43, baseType: !11589, size: 32)
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11592, file: !146, line: 44, baseType: !11589, size: 32)
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11579, file: !163, line: 62, baseType: !11597, size: 64)
!11597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !11598)
!11598 = !{!11599}
!11599 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11597, file: !175, line: 50, baseType: !11600, size: 64)
!11600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11601, size: 64, elements: !180)
!11601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11597, size: 32)
!11602 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11576, file: !163, line: 68, baseType: !11603, size: 32, offset: 64)
!11603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11604, size: 32)
!11604 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !11605)
!11605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !11606)
!11606 = !{!11607}
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11605, file: !141, line: 232, baseType: !11608, size: 64)
!11608 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !11583)
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11576, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!11610 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11576, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!11611 = !DIDerivedType(tag: DW_TAG_member, scope: !11576, file: !163, line: 90, baseType: !11612, size: 16, offset: 112)
!11612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11576, file: !163, line: 90, size: 16, elements: !11613)
!11613 = !{!11614, !11619}
!11614 = !DIDerivedType(tag: DW_TAG_member, scope: !11612, file: !163, line: 91, baseType: !11615, size: 16)
!11615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11612, file: !163, line: 91, size: 16, elements: !11616)
!11616 = !{!11617, !11618}
!11617 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11615, file: !163, line: 96, baseType: !195, size: 8)
!11618 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11615, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!11619 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11612, file: !163, line: 100, baseType: !121, size: 16)
!11620 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11576, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!11621 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11576, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!11622 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11576, file: !163, line: 131, baseType: !11623, size: 192, offset: 192)
!11623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !11624)
!11624 = !{!11625, !11626, !11632}
!11625 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11623, file: !141, line: 245, baseType: !11582, size: 64)
!11626 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11623, file: !141, line: 246, baseType: !11627, size: 32, offset: 64)
!11627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !11628)
!11628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11629, size: 32)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{null, !11631}
!11631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11623, size: 32)
!11632 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11623, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!11633 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11573, file: !163, line: 250, baseType: !11634, size: 288, offset: 384)
!11634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !11635)
!11635 = !{!11636, !11637, !11638, !11639, !11640, !11641, !11642, !11643, !11644}
!11636 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11634, file: !214, line: 26, baseType: !108, size: 32)
!11637 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11634, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!11638 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11634, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!11639 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11634, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!11640 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11634, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!11641 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11634, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!11642 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11634, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!11643 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11634, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!11644 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11634, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!11645 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11573, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!11646 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11573, file: !163, line: 256, baseType: !11604, size: 64, offset: 704)
!11647 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11573, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!11648 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11573, file: !163, line: 325, baseType: !11649, size: 32, offset: 800)
!11649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11650, size: 32)
!11650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !11651)
!11651 = !{!11652, !11658, !11659}
!11652 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11650, file: !137, line: 5074, baseType: !11653, size: 96)
!11653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !11654)
!11654 = !{!11655, !11656, !11657}
!11655 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11653, file: !234, line: 57, baseType: !237, size: 32)
!11656 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11653, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!11657 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11653, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!11658 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11650, file: !137, line: 5075, baseType: !11604, size: 64, offset: 96)
!11659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11650, file: !137, line: 5076, baseType: !11660, offset: 160)
!11660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!11661 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11573, file: !163, line: 343, baseType: !11662, size: 64, offset: 832)
!11662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !11663)
!11663 = !{!11664, !11665}
!11664 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11662, file: !214, line: 63, baseType: !108, size: 32)
!11665 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11662, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!11666 = !{!11667, !11668, !11669}
!11667 = !DILocalVariable(name: "reason", arg: 1, scope: !11525, file: !3034, line: 209, type: !32)
!11668 = !DILocalVariable(name: "esf", arg: 2, scope: !11525, file: !3034, line: 209, type: !11528)
!11669 = !DILocalVariable(name: "thread", arg: 3, scope: !11525, file: !3034, line: 210, type: !11572)
!11670 = !DILocation(line: 0, scope: !11525)
!11671 = !DILocation(line: 212, column: 1, scope: !11525)
!11672 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3034, file: !3034, line: 214, type: !11673, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11675)
!11673 = !DISubroutineType(types: !11674)
!11674 = !{null, !22, !22}
!11675 = !{!11676, !11677}
!11676 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11672, file: !3034, line: 214, type: !22)
!11677 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11672, file: !3034, line: 214, type: !22)
!11678 = !DILocation(line: 0, scope: !11672)
!11679 = !DILocation(line: 216, column: 1, scope: !11672)
!11680 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3034, file: !3034, line: 218, type: !11681, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11683)
!11681 = !DISubroutineType(types: !11682)
!11682 = !{null, !373, !132}
!11683 = !{!11684, !11685}
!11684 = !DILocalVariable(name: "buf", arg: 1, scope: !11680, file: !3034, line: 218, type: !373)
!11685 = !DILocalVariable(name: "buflen", arg: 2, scope: !11680, file: !3034, line: 218, type: !132)
!11686 = !DILocation(line: 0, scope: !11680)
!11687 = !DILocation(line: 220, column: 1, scope: !11680)
!11688 = distinct !DISubprogram(name: "coredump_query", scope: !3034, file: !3034, line: 222, type: !11689, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11691)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!103, !3033, !102}
!11691 = !{!11692, !11693}
!11692 = !DILocalVariable(name: "query_id", arg: 1, scope: !11688, file: !3034, line: 222, type: !3033)
!11693 = !DILocalVariable(name: "arg", arg: 2, scope: !11688, file: !3034, line: 222, type: !102)
!11694 = !DILocation(line: 0, scope: !11688)
!11695 = !DILocation(line: 224, column: 2, scope: !11688)
!11696 = distinct !DISubprogram(name: "coredump_cmd", scope: !3034, file: !3034, line: 227, type: !11697, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11699)
!11697 = !DISubroutineType(types: !11698)
!11698 = !{!103, !3040, !102}
!11699 = !{!11700, !11701}
!11700 = !DILocalVariable(name: "query_id", arg: 1, scope: !11696, file: !3034, line: 227, type: !3040)
!11701 = !DILocalVariable(name: "arg", arg: 2, scope: !11696, file: !3034, line: 227, type: !102)
!11702 = !DILocation(line: 0, scope: !11696)
!11703 = !DILocation(line: 229, column: 2, scope: !11696)
!11704 = distinct !DISubprogram(name: "arch_system_halt", scope: !11705, file: !11705, line: 23, type: !6999, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11706)
!11705 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11706 = !{!11707}
!11707 = !DILocalVariable(name: "reason", arg: 1, scope: !11704, file: !11705, line: 23, type: !32)
!11708 = !DILocation(line: 0, scope: !11704)
!11709 = !DILocation(line: 55, column: 2, scope: !11710, inlinedAt: !11714)
!11710 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11711)
!11711 = !{!11712, !11713}
!11712 = !DILocalVariable(name: "key", scope: !11710, file: !7161, line: 44, type: !32)
!11713 = !DILocalVariable(name: "tmp", scope: !11710, file: !7161, line: 53, type: !32)
!11714 = distinct !DILocation(line: 31, column: 8, scope: !11704)
!11715 = !{i64 2844018}
!11716 = !DILocation(line: 0, scope: !11710, inlinedAt: !11714)
!11717 = !DILocation(line: 32, column: 2, scope: !11704)
!11718 = !DILocation(line: 32, column: 2, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11720, file: !11705, line: 32, column: 2)
!11720 = distinct !DILexicalBlock(scope: !11704, file: !11705, line: 32, column: 2)
!11721 = distinct !{!11721, !11722, !11723}
!11722 = !DILocation(line: 32, column: 2, scope: !11720)
!11723 = !DILocation(line: 34, column: 2, scope: !11720)
!11724 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11705, file: !11705, line: 39, type: !11725, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11727)
!11725 = !DISubroutineType(types: !11726)
!11726 = !{null, !32, !11528}
!11727 = !{!11728, !11729}
!11728 = !DILocalVariable(name: "reason", arg: 1, scope: !11724, file: !11705, line: 39, type: !32)
!11729 = !DILocalVariable(name: "esf", arg: 2, scope: !11724, file: !11705, line: 40, type: !11528)
!11730 = !DILocation(line: 0, scope: !11724)
!11731 = !DILocation(line: 45, column: 2, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !11705, line: 45, column: 2)
!11733 = distinct !DILexicalBlock(scope: !11734, file: !11705, line: 45, column: 2)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !11705, line: 45, column: 2)
!11735 = distinct !DILexicalBlock(scope: !11724, file: !11705, line: 45, column: 2)
!11736 = !DILocation(line: 46, column: 2, scope: !11724)
!11737 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11705, file: !11705, line: 81, type: !6999, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11738)
!11738 = !{!11739}
!11739 = !DILocalVariable(name: "reason", arg: 1, scope: !11737, file: !11705, line: 81, type: !32)
!11740 = !DILocation(line: 0, scope: !11737)
!11741 = !DILocation(line: 83, column: 2, scope: !11737)
!11742 = distinct !DISubprogram(name: "z_fatal_error", scope: !11705, file: !11705, line: 96, type: !11725, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11743)
!11743 = !{!11744, !11745, !11746, !11747}
!11744 = !DILocalVariable(name: "reason", arg: 1, scope: !11742, file: !11705, line: 96, type: !32)
!11745 = !DILocalVariable(name: "esf", arg: 2, scope: !11742, file: !11705, line: 96, type: !11528)
!11746 = !DILocalVariable(name: "key", scope: !11742, file: !11705, line: 102, type: !32)
!11747 = !DILocalVariable(name: "thread", scope: !11742, file: !11705, line: 103, type: !11572)
!11748 = !DILocation(line: 0, scope: !11742)
!11749 = !DILocation(line: 55, column: 2, scope: !11710, inlinedAt: !11750)
!11750 = distinct !DILocation(line: 102, column: 21, scope: !11742)
!11751 = !DILocation(line: 0, scope: !11710, inlinedAt: !11750)
!11752 = !DILocation(line: 104, column: 4, scope: !11742)
!11753 = !DILocation(line: 109, column: 2, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !11705, line: 109, column: 2)
!11755 = distinct !DILexicalBlock(scope: !11756, file: !11705, line: 109, column: 2)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !11705, line: 109, column: 2)
!11757 = distinct !DILexicalBlock(scope: !11742, file: !11705, line: 109, column: 2)
!11758 = !DILocation(line: 119, column: 11, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11742, file: !11705, line: 119, column: 6)
!11760 = !DILocation(line: 119, column: 20, scope: !11759)
!11761 = !DILocalVariable(name: "esf", arg: 1, scope: !11762, file: !8007, line: 71, type: !11528)
!11762 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8007, file: !8007, line: 71, type: !11763, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11765)
!11763 = !DISubroutineType(types: !11764)
!11764 = !{!131, !11528}
!11765 = !{!11761}
!11766 = !DILocation(line: 0, scope: !11762, inlinedAt: !11767)
!11767 = distinct !DILocation(line: 119, column: 23, scope: !11759)
!11768 = !DILocation(line: 73, column: 21, scope: !11762, inlinedAt: !11767)
!11769 = !DILocation(line: 73, column: 26, scope: !11762, inlinedAt: !11767)
!11770 = !DILocation(line: 73, column: 9, scope: !11762, inlinedAt: !11767)
!11771 = !DILocation(line: 119, column: 6, scope: !11742)
!11772 = !DILocation(line: 120, column: 3, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !11705, line: 120, column: 3)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !11705, line: 120, column: 3)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !11705, line: 120, column: 3)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !11705, line: 120, column: 3)
!11777 = distinct !DILexicalBlock(scope: !11759, file: !11705, line: 119, column: 57)
!11778 = !DILocation(line: 121, column: 2, scope: !11777)
!11779 = !DILocation(line: 124, column: 2, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !11705, line: 124, column: 2)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !11705, line: 124, column: 2)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !11705, line: 124, column: 2)
!11783 = distinct !DILexicalBlock(scope: !11742, file: !11705, line: 124, column: 2)
!11784 = !DILocation(line: 131, column: 2, scope: !11742)
!11785 = !DILocation(line: 0, scope: !11762, inlinedAt: !11786)
!11786 = distinct !DILocation(line: 151, column: 24, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !11705, line: 151, column: 7)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !11705, line: 146, column: 32)
!11789 = distinct !DILexicalBlock(scope: !11742, file: !11705, line: 146, column: 6)
!11790 = !DILocation(line: 151, column: 7, scope: !11788)
!11791 = !DILocation(line: 151, column: 21, scope: !11787)
!11792 = !DILocalVariable(name: "key", arg: 1, scope: !11793, file: !7161, line: 84, type: !32)
!11793 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11794)
!11794 = !{!11792}
!11795 = !DILocation(line: 0, scope: !11793, inlinedAt: !11796)
!11796 = distinct !DILocation(line: 186, column: 2, scope: !11742)
!11797 = !DILocation(line: 95, column: 2, scope: !11793, inlinedAt: !11796)
!11798 = !{i64 2844835}
!11799 = !DILocation(line: 189, column: 3, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !11705, line: 188, column: 41)
!11801 = distinct !DILexicalBlock(scope: !11742, file: !11705, line: 188, column: 6)
!11802 = !DILocation(line: 191, column: 1, scope: !11742)
!11803 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !11804, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !245)
!11804 = !DISubroutineType(types: !11805)
!11805 = !{!11806}
!11806 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !11572)
!11807 = !DILocation(line: 535, column: 9, scope: !11803)
!11808 = !DILocation(line: 535, column: 2, scope: !11803)
!11809 = distinct !DISubprogram(name: "reason_to_str", scope: !11705, file: !11705, line: 62, type: !11810, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11812)
!11810 = !DISubroutineType(types: !11811)
!11811 = !{!331, !32}
!11812 = !{!11813}
!11813 = !DILocalVariable(name: "reason", arg: 1, scope: !11809, file: !11705, line: 62, type: !32)
!11814 = !DILocation(line: 0, scope: !11809)
!11815 = !DILocation(line: 64, column: 2, scope: !11809)
!11816 = !DILocation(line: 0, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11809, file: !11705, line: 64, column: 18)
!11818 = !DILocation(line: 78, column: 1, scope: !11809)
!11819 = distinct !DISubprogram(name: "thread_name_get", scope: !11705, file: !11705, line: 51, type: !11820, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11822)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{!331, !11572}
!11822 = !{!11823, !11824}
!11823 = !DILocalVariable(name: "thread", arg: 1, scope: !11819, file: !11705, line: 51, type: !11572)
!11824 = !DILocalVariable(name: "thread_name", scope: !11819, file: !11705, line: 53, type: !331)
!11825 = !DILocation(line: 0, scope: !11819)
!11826 = !DILocation(line: 53, column: 36, scope: !11819)
!11827 = !DILocation(line: 53, column: 28, scope: !11819)
!11828 = !DILocation(line: 53, column: 47, scope: !11819)
!11829 = !DILocation(line: 55, column: 19, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11819, file: !11705, line: 55, column: 6)
!11831 = !DILocation(line: 55, column: 28, scope: !11830)
!11832 = !DILocation(line: 55, column: 32, scope: !11830)
!11833 = !DILocation(line: 55, column: 47, scope: !11830)
!11834 = !DILocation(line: 55, column: 6, scope: !11819)
!11835 = !DILocation(line: 57, column: 2, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11830, file: !11705, line: 55, column: 57)
!11837 = !DILocation(line: 59, column: 2, scope: !11819)
!11838 = distinct !DISubprogram(name: "k_thread_abort", scope: !3413, file: !3413, line: 188, type: !11839, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{null, !11806}
!11841 = !{!11842}
!11842 = !DILocalVariable(name: "thread", arg: 1, scope: !11838, file: !3413, line: 188, type: !11806)
!11843 = !DILocation(line: 0, scope: !11838)
!11844 = !DILocation(line: 197, column: 2, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11838, file: !3413, line: 197, column: 2)
!11846 = !{i64 2151038571}
!11847 = !DILocation(line: 198, column: 2, scope: !11838)
!11848 = !DILocation(line: 199, column: 1, scope: !11838)
!11849 = distinct !DISubprogram(name: "z_current_get", scope: !3413, file: !3413, line: 173, type: !11804, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !245)
!11850 = !DILocation(line: 180, column: 2, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11849, file: !3413, line: 180, column: 2)
!11852 = !{i64 2151038503}
!11853 = !DILocation(line: 181, column: 9, scope: !11849)
!11854 = !DILocation(line: 181, column: 2, scope: !11849)
!11855 = distinct !DISubprogram(name: "z_early_memset", scope: !1727, file: !1727, line: 108, type: !11856, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11858)
!11856 = !DISubroutineType(types: !11857)
!11857 = !{null, !102, !103, !132}
!11858 = !{!11859, !11860, !11861}
!11859 = !DILocalVariable(name: "dst", arg: 1, scope: !11855, file: !1727, line: 108, type: !102)
!11860 = !DILocalVariable(name: "c", arg: 2, scope: !11855, file: !1727, line: 108, type: !103)
!11861 = !DILocalVariable(name: "n", arg: 3, scope: !11855, file: !1727, line: 108, type: !132)
!11862 = !DILocation(line: 0, scope: !11855)
!11863 = !DILocation(line: 110, column: 9, scope: !11855)
!11864 = !DILocation(line: 111, column: 1, scope: !11855)
!11865 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1727, file: !1727, line: 121, type: !11866, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11868)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{null, !102, !13, !132}
!11868 = !{!11869, !11870, !11871}
!11869 = !DILocalVariable(name: "dst", arg: 1, scope: !11865, file: !1727, line: 121, type: !102)
!11870 = !DILocalVariable(name: "src", arg: 2, scope: !11865, file: !1727, line: 121, type: !13)
!11871 = !DILocalVariable(name: "n", arg: 3, scope: !11865, file: !1727, line: 121, type: !132)
!11872 = !DILocation(line: 0, scope: !11865)
!11873 = !DILocation(line: 123, column: 9, scope: !11865)
!11874 = !DILocation(line: 124, column: 1, scope: !11865)
!11875 = distinct !DISubprogram(name: "z_bss_zero", scope: !1727, file: !1727, line: 132, type: !328, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !245)
!11876 = !DILocation(line: 143, column: 2, scope: !11875)
!11877 = !DILocation(line: 168, column: 1, scope: !11875)
!11878 = distinct !DISubprogram(name: "z_init_cpu", scope: !1727, file: !1727, line: 372, type: !11879, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11881)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{null, !103}
!11881 = !{!11882}
!11882 = !DILocalVariable(name: "id", arg: 1, scope: !11878, file: !1727, line: 372, type: !103)
!11883 = !DILocation(line: 0, scope: !11878)
!11884 = !DILocation(line: 374, column: 2, scope: !11878)
!11885 = !DILocation(line: 375, column: 34, scope: !11878)
!11886 = !DILocation(line: 375, column: 19, scope: !11878)
!11887 = !DILocation(line: 375, column: 31, scope: !11878)
!11888 = !DILocation(line: 376, column: 24, scope: !11878)
!11889 = !DILocation(line: 376, column: 19, scope: !11878)
!11890 = !DILocation(line: 376, column: 22, scope: !11878)
!11891 = !DILocation(line: 378, column: 26, scope: !11878)
!11892 = !DILocation(line: 378, column: 4, scope: !11878)
!11893 = !DILocation(line: 378, column: 50, scope: !11878)
!11894 = !DILocation(line: 377, column: 19, scope: !11878)
!11895 = !DILocation(line: 377, column: 29, scope: !11878)
!11896 = !DILocation(line: 384, column: 1, scope: !11878)
!11897 = distinct !DISubprogram(name: "init_idle_thread", scope: !1727, file: !1727, line: 343, type: !11879, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11898)
!11898 = !{!11899, !11900, !11901, !11904}
!11899 = !DILocalVariable(name: "i", arg: 1, scope: !11897, file: !1727, line: 343, type: !103)
!11900 = !DILocalVariable(name: "thread", scope: !11897, file: !1727, line: 345, type: !1819)
!11901 = !DILocalVariable(name: "stack", scope: !11897, file: !1727, line: 346, type: !11902)
!11902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11903, size: 32)
!11903 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !308, line: 44, baseType: !1927)
!11904 = !DILocalVariable(name: "tname", scope: !11897, file: !1727, line: 358, type: !271)
!11905 = !DILocation(line: 0, scope: !11897)
!11906 = !DILocation(line: 345, column: 29, scope: !11897)
!11907 = !DILocation(line: 346, column: 28, scope: !11897)
!11908 = !DILocation(line: 362, column: 37, scope: !11897)
!11909 = !DILocation(line: 362, column: 36, scope: !11897)
!11910 = !DILocation(line: 361, column: 2, scope: !11897)
!11911 = !DILocation(line: 365, column: 2, scope: !11897)
!11912 = !DILocation(line: 370, column: 1, scope: !11897)
!11913 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !310, file: !310, line: 331, type: !11914, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11916)
!11914 = !DISubroutineType(types: !11915)
!11915 = !{!271, !11902}
!11916 = !{!11917}
!11917 = !DILocalVariable(name: "sym", arg: 1, scope: !11913, file: !310, line: 331, type: !11902)
!11918 = !DILocation(line: 0, scope: !11913)
!11919 = !DILocation(line: 333, column: 9, scope: !11913)
!11920 = !DILocation(line: 333, column: 2, scope: !11913)
!11921 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11922, file: !11922, line: 155, type: !11923, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11925)
!11922 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11923 = !DISubroutineType(types: !11924)
!11924 = !{null, !1819}
!11925 = !{!11926}
!11926 = !DILocalVariable(name: "thread", arg: 1, scope: !11921, file: !11922, line: 155, type: !1819)
!11927 = !DILocation(line: 0, scope: !11921)
!11928 = !DILocation(line: 157, column: 15, scope: !11921)
!11929 = !DILocation(line: 157, column: 28, scope: !11921)
!11930 = !DILocation(line: 158, column: 1, scope: !11921)
!11931 = distinct !DISubprogram(name: "z_cstart", scope: !1727, file: !1727, line: 501, type: !328, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11932)
!11932 = !{!11933}
!11933 = !DILocalVariable(name: "dummy_thread", scope: !11931, file: !1727, line: 518, type: !1820)
!11934 = !DILocation(line: 507, column: 2, scope: !11931)
!11935 = !DILocation(line: 43, column: 14, scope: !11936, inlinedAt: !11940)
!11936 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11937, file: !11937, line: 40, type: !328, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11938)
!11937 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11938 = !{!11939}
!11939 = !DILocalVariable(name: "msp", scope: !11936, file: !11937, line: 42, type: !108)
!11940 = distinct !DILocation(line: 44, column: 2, scope: !11941, inlinedAt: !11943)
!11941 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11942, file: !11942, line: 42, type: !328, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !245)
!11942 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11943 = distinct !DILocation(line: 510, column: 2, scope: !11931)
!11944 = !DILocation(line: 43, column: 3, scope: !11936, inlinedAt: !11940)
!11945 = !DILocation(line: 43, column: 60, scope: !11936, inlinedAt: !11940)
!11946 = !DILocation(line: 0, scope: !11936, inlinedAt: !11940)
!11947 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11948, file: !7048, line: 1153, type: !108)
!11948 = distinct !DISubprogram(name: "__set_MSP", scope: !7048, file: !7048, line: 1153, type: !7137, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !11949)
!11949 = !{!11947}
!11950 = !DILocation(line: 0, scope: !11948, inlinedAt: !11951)
!11951 = distinct !DILocation(line: 46, column: 2, scope: !11936, inlinedAt: !11940)
!11952 = !DILocation(line: 1155, column: 3, scope: !11948, inlinedAt: !11951)
!11953 = !{i64 7499211}
!11954 = !DILocation(line: 62, column: 11, scope: !11936, inlinedAt: !11940)
!11955 = !DILocation(line: 102, column: 2, scope: !11956, inlinedAt: !11957)
!11956 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8007, file: !8007, line: 97, type: !328, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !245)
!11957 = distinct !DILocation(line: 45, column: 2, scope: !11941, inlinedAt: !11943)
!11958 = !DILocation(line: 108, column: 2, scope: !11956, inlinedAt: !11957)
!11959 = !DILocation(line: 112, column: 2, scope: !11956, inlinedAt: !11957)
!11960 = !DILocation(line: 113, column: 2, scope: !11956, inlinedAt: !11957)
!11961 = !DILocation(line: 114, column: 2, scope: !11956, inlinedAt: !11957)
!11962 = !DILocation(line: 116, column: 2, scope: !11956, inlinedAt: !11957)
!11963 = !DILocation(line: 123, column: 13, scope: !11956, inlinedAt: !11957)
!11964 = !DILocation(line: 46, column: 2, scope: !11941, inlinedAt: !11943)
!11965 = !DILocation(line: 47, column: 2, scope: !11941, inlinedAt: !11943)
!11966 = !DILocation(line: 174, column: 12, scope: !11967, inlinedAt: !11968)
!11967 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8007, file: !8007, line: 169, type: !328, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !245)
!11968 = distinct !DILocation(line: 48, column: 2, scope: !11941, inlinedAt: !11943)
!11969 = !DILocation(line: 179, column: 12, scope: !11967, inlinedAt: !11968)
!11970 = !DILocation(line: 518, column: 2, scope: !11931)
!11971 = !DILocation(line: 518, column: 18, scope: !11931)
!11972 = !DILocation(line: 520, column: 2, scope: !11931)
!11973 = !DILocation(line: 523, column: 2, scope: !11931)
!11974 = !DILocation(line: 526, column: 2, scope: !11931)
!11975 = !DILocation(line: 527, column: 2, scope: !11931)
!11976 = !DILocation(line: 543, column: 24, scope: !11931)
!11977 = !DILocation(line: 543, column: 2, scope: !11931)
!11978 = !DILocation(line: 0, scope: !1949)
!11979 = !DILocation(line: 246, column: 15, scope: !1967)
!11980 = !DILocation(line: 246, column: 36, scope: !1966)
!11981 = !DILocation(line: 246, column: 2, scope: !1967)
!11982 = !DILocation(line: 247, column: 37, scope: !1965)
!11983 = !DILocation(line: 0, scope: !1965)
!11984 = !DILocation(line: 248, column: 19, scope: !1965)
!11985 = !DILocation(line: 248, column: 12, scope: !1965)
!11986 = !DILocation(line: 250, column: 11, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !1965, file: !1727, line: 250, column: 7)
!11988 = !DILocation(line: 250, column: 7, scope: !1965)
!11989 = !DILocation(line: 254, column: 11, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11991, file: !1727, line: 254, column: 8)
!11991 = distinct !DILexicalBlock(scope: !11987, file: !1727, line: 250, column: 20)
!11992 = !DILocation(line: 254, column: 8, scope: !11991)
!11993 = !DILocation(line: 255, column: 9, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11990, file: !1727, line: 254, column: 17)
!11995 = !DILocation(line: 258, column: 9, scope: !11994)
!11996 = !DILocation(line: 261, column: 28, scope: !11994)
!11997 = !DILocation(line: 261, column: 10, scope: !11994)
!11998 = !DILocation(line: 261, column: 17, scope: !11994)
!11999 = !DILocation(line: 261, column: 26, scope: !11994)
!12000 = !DILocation(line: 262, column: 4, scope: !11994)
!12001 = !DILocation(line: 263, column: 9, scope: !11991)
!12002 = !DILocation(line: 263, column: 16, scope: !11991)
!12003 = !DILocation(line: 263, column: 28, scope: !11991)
!12004 = !DILocation(line: 264, column: 3, scope: !11991)
!12005 = !DILocation(line: 246, column: 60, scope: !1966)
!12006 = distinct !{!12006, !11981, !12007}
!12007 = !DILocation(line: 265, column: 2, scope: !1967)
!12008 = !DILocation(line: 266, column: 1, scope: !1949)
!12009 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1573, file: !1573, line: 1814, type: !7082, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !12010)
!12010 = !{!12011, !12012}
!12011 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12009, file: !1573, line: 1814, type: !2501)
!12012 = !DILocalVariable(name: "priority", arg: 2, scope: !12009, file: !1573, line: 1814, type: !108)
!12013 = !DILocation(line: 0, scope: !12009)
!12014 = !DILocation(line: 1822, column: 48, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !1573, line: 1821, column: 3)
!12016 = distinct !DILexicalBlock(scope: !12009, file: !1573, line: 1816, column: 7)
!12017 = !DILocation(line: 1822, column: 32, scope: !12015)
!12018 = !DILocation(line: 1822, column: 40, scope: !12015)
!12019 = !DILocation(line: 1822, column: 5, scope: !12015)
!12020 = !DILocation(line: 1822, column: 46, scope: !12015)
!12021 = !DILocation(line: 1824, column: 1, scope: !12009)
!12022 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11942, file: !11942, line: 32, type: !328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!12023 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12024, file: !12024, line: 215, type: !11923, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !12025)
!12024 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12025 = !{!12026}
!12026 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12023, file: !12024, line: 215, type: !1819)
!12027 = !DILocation(line: 0, scope: !12023)
!12028 = !DILocation(line: 217, column: 21, scope: !12023)
!12029 = !DILocation(line: 217, column: 34, scope: !12023)
!12030 = !DILocation(line: 221, column: 21, scope: !12023)
!12031 = !DILocation(line: 221, column: 34, scope: !12023)
!12032 = !DILocation(line: 230, column: 2, scope: !12023)
!12033 = !DILocation(line: 239, column: 24, scope: !12023)
!12034 = !DILocation(line: 240, column: 1, scope: !12023)
!12035 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1727, file: !1727, line: 399, type: !12036, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !12038)
!12036 = !DISubroutineType(types: !12037)
!12037 = !{!271}
!12038 = !{!12039}
!12039 = !DILocalVariable(name: "stack_ptr", scope: !12035, file: !1727, line: 401, type: !271)
!12040 = !DILocation(line: 404, column: 2, scope: !12035)
!12041 = !DILocation(line: 416, column: 24, scope: !12035)
!12042 = !DILocation(line: 418, column: 14, scope: !12035)
!12043 = !DILocation(line: 0, scope: !12035)
!12044 = !DILocation(line: 423, column: 2, scope: !12035)
!12045 = !DILocation(line: 424, column: 2, scope: !12035)
!12046 = !DILocation(line: 426, column: 2, scope: !12035)
!12047 = !DILocation(line: 428, column: 2, scope: !12035)
!12048 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1727, file: !1727, line: 432, type: !12049, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !12051)
!12049 = !DISubroutineType(types: !12050)
!12050 = !{null, !271}
!12051 = !{!12052}
!12052 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12048, file: !1727, line: 432, type: !271)
!12053 = !DILocation(line: 0, scope: !12048)
!12054 = !DILocation(line: 435, column: 2, scope: !12048)
!12055 = !DILocation(line: 445, column: 2, scope: !12048)
!12056 = distinct !DISubprogram(name: "bg_thread_main", scope: !1727, file: !1727, line: 277, type: !317, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1723, retainedNodes: !12057)
!12057 = !{!12058, !12059, !12060}
!12058 = !DILocalVariable(name: "unused1", arg: 1, scope: !12056, file: !1727, line: 277, type: !102)
!12059 = !DILocalVariable(name: "unused2", arg: 2, scope: !12056, file: !1727, line: 277, type: !102)
!12060 = !DILocalVariable(name: "unused3", arg: 3, scope: !12056, file: !1727, line: 277, type: !102)
!12061 = !DILocation(line: 0, scope: !12056)
!12062 = !DILocation(line: 291, column: 20, scope: !12056)
!12063 = !DILocation(line: 293, column: 2, scope: !12056)
!12064 = !DILocation(line: 297, column: 2, scope: !12056)
!12065 = !DILocation(line: 305, column: 2, scope: !12056)
!12066 = !DILocation(line: 307, column: 2, scope: !12056)
!12067 = !DILocation(line: 330, column: 8, scope: !12056)
!12068 = !DILocation(line: 333, column: 34, scope: !12056)
!12069 = !DILocation(line: 339, column: 1, scope: !12056)
!12070 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1978, file: !1978, line: 45, type: !12071, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12079)
!12071 = !DISubroutineType(types: !12072)
!12072 = !{null, !12073, !102}
!12073 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !137, line: 103, baseType: !12074)
!12074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12075, size: 32)
!12075 = !DISubroutineType(types: !12076)
!12076 = !{null, !12077, !102}
!12077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12078, size: 32)
!12078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1983)
!12079 = !{!12080, !12081}
!12080 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12070, file: !1978, line: 45, type: !12073)
!12081 = !DILocalVariable(name: "user_data", arg: 2, scope: !12070, file: !1978, line: 45, type: !102)
!12082 = !DILocation(line: 0, scope: !12070)
!12083 = !DILocation(line: 71, column: 1, scope: !12070)
!12084 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1978, file: !1978, line: 73, type: !12071, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12085)
!12085 = !{!12086, !12087}
!12086 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12084, file: !1978, line: 73, type: !12073)
!12087 = !DILocalVariable(name: "user_data", arg: 2, scope: !12084, file: !1978, line: 73, type: !102)
!12088 = !DILocation(line: 0, scope: !12084)
!12089 = !DILocation(line: 95, column: 1, scope: !12084)
!12090 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1978, file: !1978, line: 97, type: !8008, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !245)
!12091 = !DILocation(line: 1031, column: 3, scope: !12092, inlinedAt: !12095)
!12092 = distinct !DISubprogram(name: "__get_IPSR", scope: !7048, file: !7048, line: 1027, type: !3393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12093)
!12093 = !{!12094}
!12094 = !DILocalVariable(name: "result", scope: !12092, file: !7048, line: 1029, type: !108)
!12095 = distinct !DILocation(line: 48, column: 10, scope: !12096, inlinedAt: !12097)
!12096 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8007, file: !8007, line: 46, type: !8008, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !245)
!12097 = distinct !DILocation(line: 99, column: 9, scope: !12090)
!12098 = !{i64 7014031}
!12099 = !DILocation(line: 0, scope: !12092, inlinedAt: !12095)
!12100 = !DILocation(line: 48, column: 9, scope: !12096, inlinedAt: !12097)
!12101 = !DILocation(line: 99, column: 2, scope: !12090)
!12102 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1978, file: !1978, line: 106, type: !328, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !245)
!12103 = !DILocation(line: 108, column: 2, scope: !12102)
!12104 = !DILocation(line: 108, column: 17, scope: !12102)
!12105 = !DILocation(line: 108, column: 30, scope: !12102)
!12106 = !DILocation(line: 109, column: 1, scope: !12102)
!12107 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1978, file: !1978, line: 116, type: !328, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !245)
!12108 = !DILocation(line: 118, column: 2, scope: !12107)
!12109 = !DILocation(line: 118, column: 17, scope: !12107)
!12110 = !DILocation(line: 118, column: 30, scope: !12107)
!12111 = !DILocation(line: 119, column: 1, scope: !12107)
!12112 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1978, file: !1978, line: 126, type: !8008, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !245)
!12113 = !DILocation(line: 128, column: 10, scope: !12112)
!12114 = !DILocation(line: 128, column: 25, scope: !12112)
!12115 = !DILocation(line: 128, column: 38, scope: !12112)
!12116 = !DILocation(line: 128, column: 53, scope: !12112)
!12117 = !DILocation(line: 128, column: 2, scope: !12112)
!12118 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1978, file: !1978, line: 187, type: !12119, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12121)
!12119 = !DISubroutineType(types: !12120)
!12120 = !{!103, !1982, !331}
!12121 = !{!12122, !12123}
!12122 = !DILocalVariable(name: "thread", arg: 1, scope: !12118, file: !1978, line: 187, type: !1982)
!12123 = !DILocalVariable(name: "value", arg: 2, scope: !12118, file: !1978, line: 187, type: !331)
!12124 = !DILocation(line: 0, scope: !12118)
!12125 = !DILocation(line: 206, column: 2, scope: !12118)
!12126 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1978, file: !1978, line: 238, type: !12127, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12129)
!12127 = !DISubroutineType(types: !12128)
!12128 = !{!331, !1982}
!12129 = !{!12130}
!12130 = !DILocalVariable(name: "thread", arg: 1, scope: !12126, file: !1978, line: 238, type: !1982)
!12131 = !DILocation(line: 0, scope: !12126)
!12132 = !DILocation(line: 244, column: 2, scope: !12126)
!12133 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1978, file: !1978, line: 248, type: !12134, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12136)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{!103, !1981, !271, !132}
!12136 = !{!12137, !12138, !12139}
!12137 = !DILocalVariable(name: "thread", arg: 1, scope: !12133, file: !1978, line: 248, type: !1981)
!12138 = !DILocalVariable(name: "buf", arg: 2, scope: !12133, file: !1978, line: 248, type: !271)
!12139 = !DILocalVariable(name: "size", arg: 3, scope: !12133, file: !1978, line: 248, type: !132)
!12140 = !DILocation(line: 0, scope: !12133)
!12141 = !DILocation(line: 257, column: 2, scope: !12133)
!12142 = !DILocation(line: 0, scope: !1977)
!12143 = !DILocation(line: 281, column: 11, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 281, column: 6)
!12145 = !DILocation(line: 281, column: 20, scope: !12144)
!12146 = !DILocation(line: 275, column: 45, scope: !1977)
!12147 = !DILocation(line: 285, column: 10, scope: !1977)
!12148 = !DILocation(line: 0, scope: !2093)
!12149 = !DILocation(line: 293, column: 39, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !2093, file: !1978, line: 293, column: 2)
!12151 = !DILocation(line: 293, column: 2, scope: !2093)
!12152 = !DILocation(line: 273, column: 14, scope: !1977)
!12153 = !DILocation(line: 309, column: 2, scope: !1977)
!12154 = !DILocation(line: 309, column: 11, scope: !1977)
!12155 = !DILocation(line: 311, column: 2, scope: !1977)
!12156 = !DILocation(line: 293, column: 26, scope: !12150)
!12157 = !DILocation(line: 294, column: 9, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12150, file: !1978, line: 293, column: 54)
!12159 = !DILocation(line: 295, column: 21, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12158, file: !1978, line: 295, column: 7)
!12161 = !DILocation(line: 295, column: 28, scope: !12160)
!12162 = !DILocation(line: 295, column: 7, scope: !12158)
!12163 = !DILocation(line: 299, column: 25, scope: !12158)
!12164 = !DILocation(line: 299, column: 41, scope: !12158)
!12165 = !DILocation(line: 300, column: 7, scope: !12158)
!12166 = !DILocation(line: 300, column: 26, scope: !12158)
!12167 = !DILocation(line: 299, column: 10, scope: !12158)
!12168 = !DILocation(line: 299, column: 7, scope: !12158)
!12169 = !DILocation(line: 302, column: 16, scope: !12158)
!12170 = !DILocation(line: 304, column: 20, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12158, file: !1978, line: 304, column: 7)
!12172 = !DILocation(line: 304, column: 7, scope: !12158)
!12173 = !DILocation(line: 305, column: 26, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12171, file: !1978, line: 304, column: 26)
!12175 = !DILocation(line: 305, column: 42, scope: !12174)
!12176 = !DILocation(line: 305, column: 11, scope: !12174)
!12177 = !DILocation(line: 305, column: 8, scope: !12174)
!12178 = !DILocation(line: 306, column: 3, scope: !12174)
!12179 = !DILocation(line: 293, column: 50, scope: !12150)
!12180 = !DILocation(line: 312, column: 1, scope: !1977)
!12181 = distinct !DISubprogram(name: "copy_bytes", scope: !1978, file: !1978, line: 261, type: !12182, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12184)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{!132, !271, !132, !331, !132}
!12184 = !{!12185, !12186, !12187, !12188, !12189}
!12185 = !DILocalVariable(name: "dest", arg: 1, scope: !12181, file: !1978, line: 261, type: !271)
!12186 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12181, file: !1978, line: 261, type: !132)
!12187 = !DILocalVariable(name: "src", arg: 3, scope: !12181, file: !1978, line: 261, type: !331)
!12188 = !DILocalVariable(name: "src_size", arg: 4, scope: !12181, file: !1978, line: 261, type: !132)
!12189 = !DILocalVariable(name: "bytes_to_copy", scope: !12181, file: !1978, line: 263, type: !132)
!12190 = !DILocation(line: 0, scope: !12181)
!12191 = !DILocation(line: 265, column: 18, scope: !12181)
!12192 = !DILocation(line: 266, column: 2, scope: !12181)
!12193 = !DILocation(line: 268, column: 2, scope: !12181)
!12194 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1978, file: !1978, line: 383, type: !12195, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12197)
!12195 = !DISubroutineType(types: !12196)
!12196 = !{null, !1982}
!12197 = !{!12198}
!12198 = !DILocalVariable(name: "thread", arg: 1, scope: !12194, file: !1978, line: 383, type: !1982)
!12199 = !DILocation(line: 0, scope: !12194)
!12200 = !DILocation(line: 387, column: 2, scope: !12194)
!12201 = !DILocation(line: 388, column: 1, scope: !12194)
!12202 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1978, file: !1978, line: 528, type: !12203, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12210)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!271, !1982, !12205, !132, !315, !102, !102, !102, !103, !108, !331}
!12205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12206, size: 32)
!12206 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !308, line: 44, baseType: !12207)
!12207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !310, line: 47, size: 8, elements: !12208)
!12208 = !{!12209}
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12207, file: !310, line: 48, baseType: !272, size: 8)
!12210 = !{!12211, !12212, !12213, !12214, !12215, !12216, !12217, !12218, !12219, !12220, !12221}
!12211 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12202, file: !1978, line: 528, type: !1982)
!12212 = !DILocalVariable(name: "stack", arg: 2, scope: !12202, file: !1978, line: 529, type: !12205)
!12213 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12202, file: !1978, line: 529, type: !132)
!12214 = !DILocalVariable(name: "entry", arg: 4, scope: !12202, file: !1978, line: 530, type: !315)
!12215 = !DILocalVariable(name: "p1", arg: 5, scope: !12202, file: !1978, line: 531, type: !102)
!12216 = !DILocalVariable(name: "p2", arg: 6, scope: !12202, file: !1978, line: 531, type: !102)
!12217 = !DILocalVariable(name: "p3", arg: 7, scope: !12202, file: !1978, line: 531, type: !102)
!12218 = !DILocalVariable(name: "prio", arg: 8, scope: !12202, file: !1978, line: 532, type: !103)
!12219 = !DILocalVariable(name: "options", arg: 9, scope: !12202, file: !1978, line: 532, type: !108)
!12220 = !DILocalVariable(name: "name", arg: 10, scope: !12202, file: !1978, line: 532, type: !331)
!12221 = !DILocalVariable(name: "stack_ptr", scope: !12202, file: !1978, line: 534, type: !271)
!12222 = !DILocation(line: 0, scope: !12202)
!12223 = !DILocation(line: 550, column: 28, scope: !12202)
!12224 = !DILocation(line: 550, column: 2, scope: !12202)
!12225 = !DILocation(line: 553, column: 34, scope: !12202)
!12226 = !DILocation(line: 553, column: 2, scope: !12202)
!12227 = !DILocation(line: 554, column: 14, scope: !12202)
!12228 = !DILocation(line: 564, column: 2, scope: !12202)
!12229 = !DILocation(line: 567, column: 14, scope: !12202)
!12230 = !DILocation(line: 567, column: 24, scope: !12202)
!12231 = !DILocation(line: 612, column: 7, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12202, file: !1978, line: 612, column: 6)
!12233 = !DILocation(line: 612, column: 6, scope: !12202)
!12234 = !DILocation(line: 627, column: 40, scope: !12202)
!12235 = !DILocation(line: 637, column: 2, scope: !12202)
!12236 = !DILocation(line: 613, column: 15, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12232, file: !1978, line: 612, column: 17)
!12238 = !DILocation(line: 613, column: 29, scope: !12237)
!12239 = !DILocation(line: 638, column: 1, scope: !12202)
!12240 = distinct !DISubprogram(name: "z_waitq_init", scope: !12241, file: !12241, line: 47, type: !12242, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12244)
!12241 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12242 = !DISubroutineType(types: !12243)
!12243 = !{null, !2013}
!12244 = !{!12245}
!12245 = !DILocalVariable(name: "w", arg: 1, scope: !12240, file: !12241, line: 47, type: !2013)
!12246 = !DILocation(line: 0, scope: !12240)
!12247 = !DILocation(line: 49, column: 21, scope: !12240)
!12248 = !DILocation(line: 49, column: 2, scope: !12240)
!12249 = !DILocation(line: 50, column: 1, scope: !12240)
!12250 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1978, file: !1978, line: 791, type: !12251, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12254)
!12251 = !DISubroutineType(types: !12252)
!12252 = !{null, !12253, !103, !108, !32}
!12253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!12254 = !{!12255, !12256, !12257, !12258}
!12255 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12250, file: !1978, line: 791, type: !12253)
!12256 = !DILocalVariable(name: "priority", arg: 2, scope: !12250, file: !1978, line: 791, type: !103)
!12257 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12250, file: !1978, line: 792, type: !108)
!12258 = !DILocalVariable(name: "options", arg: 4, scope: !12250, file: !1978, line: 792, type: !32)
!12259 = !DILocation(line: 0, scope: !12250)
!12260 = !DILocation(line: 795, column: 15, scope: !12250)
!12261 = !DILocation(line: 795, column: 25, scope: !12250)
!12262 = !DILocation(line: 796, column: 30, scope: !12250)
!12263 = !DILocation(line: 796, column: 15, scope: !12250)
!12264 = !DILocation(line: 796, column: 28, scope: !12250)
!12265 = !DILocation(line: 797, column: 30, scope: !12250)
!12266 = !DILocation(line: 797, column: 15, scope: !12250)
!12267 = !DILocation(line: 797, column: 28, scope: !12250)
!12268 = !DILocation(line: 799, column: 22, scope: !12250)
!12269 = !DILocation(line: 799, column: 15, scope: !12250)
!12270 = !DILocation(line: 799, column: 20, scope: !12250)
!12271 = !DILocation(line: 801, column: 15, scope: !12250)
!12272 = !DILocation(line: 801, column: 28, scope: !12250)
!12273 = !DILocation(line: 814, column: 2, scope: !12250)
!12274 = !DILocation(line: 815, column: 1, scope: !12250)
!12275 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1978, file: !1978, line: 449, type: !12276, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12278)
!12276 = !DISubroutineType(types: !12277)
!12277 = !{!271, !1982, !12205, !132}
!12278 = !{!12279, !12280, !12281, !12282, !12283, !12284, !12285, !12286}
!12279 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12275, file: !1978, line: 449, type: !1982)
!12280 = !DILocalVariable(name: "stack", arg: 2, scope: !12275, file: !1978, line: 450, type: !12205)
!12281 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12275, file: !1978, line: 450, type: !132)
!12282 = !DILocalVariable(name: "stack_obj_size", scope: !12275, file: !1978, line: 452, type: !132)
!12283 = !DILocalVariable(name: "stack_buf_size", scope: !12275, file: !1978, line: 452, type: !132)
!12284 = !DILocalVariable(name: "stack_ptr", scope: !12275, file: !1978, line: 453, type: !271)
!12285 = !DILocalVariable(name: "stack_buf_start", scope: !12275, file: !1978, line: 453, type: !271)
!12286 = !DILocalVariable(name: "delta", scope: !12275, file: !1978, line: 454, type: !132)
!12287 = !DILocation(line: 0, scope: !12275)
!12288 = !DILocation(line: 465, column: 20, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12275, file: !1978, line: 463, column: 2)
!12290 = !DILocation(line: 473, column: 28, scope: !12275)
!12291 = !DILocation(line: 520, column: 2, scope: !12275)
!12292 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12293, file: !12293, line: 40, type: !12294, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12296)
!12293 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12294 = !DISubroutineType(types: !12295)
!12295 = !{null, !12253}
!12296 = !{!12297}
!12297 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12292, file: !12293, line: 40, type: !12253)
!12298 = !DILocation(line: 0, scope: !12292)
!12299 = !DILocation(line: 42, column: 31, scope: !12292)
!12300 = !DILocation(line: 42, column: 2, scope: !12292)
!12301 = !DILocation(line: 43, column: 1, scope: !12292)
!12302 = distinct !DISubprogram(name: "z_init_timeout", scope: !12293, file: !12293, line: 25, type: !2039, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12303)
!12303 = !{!12304}
!12304 = !DILocalVariable(name: "to", arg: 1, scope: !12302, file: !12293, line: 25, type: !2041)
!12305 = !DILocation(line: 0, scope: !12302)
!12306 = !DILocation(line: 27, column: 22, scope: !12302)
!12307 = !DILocation(line: 27, column: 2, scope: !12302)
!12308 = !DILocation(line: 28, column: 1, scope: !12302)
!12309 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !12310, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12312)
!12310 = !DISubroutineType(types: !12311)
!12311 = !{null, !2079}
!12312 = !{!12313}
!12313 = !DILocalVariable(name: "node", arg: 1, scope: !12309, file: !146, line: 211, type: !2079)
!12314 = !DILocation(line: 0, scope: !12309)
!12315 = !DILocation(line: 213, column: 8, scope: !12309)
!12316 = !DILocation(line: 213, column: 13, scope: !12309)
!12317 = !DILocation(line: 214, column: 8, scope: !12309)
!12318 = !DILocation(line: 214, column: 13, scope: !12309)
!12319 = !DILocation(line: 215, column: 1, scope: !12309)
!12320 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !12321, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12324)
!12321 = !DISubroutineType(types: !12322)
!12322 = !{null, !12323}
!12323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!12324 = !{!12325}
!12325 = !DILocalVariable(name: "list", arg: 1, scope: !12320, file: !146, line: 197, type: !12323)
!12326 = !DILocation(line: 0, scope: !12320)
!12327 = !DILocation(line: 199, column: 8, scope: !12320)
!12328 = !DILocation(line: 199, column: 13, scope: !12320)
!12329 = !DILocation(line: 200, column: 8, scope: !12320)
!12330 = !DILocation(line: 200, column: 13, scope: !12320)
!12331 = !DILocation(line: 201, column: 1, scope: !12320)
!12332 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1978, file: !1978, line: 641, type: !12333, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12339)
!12333 = !DISubroutineType(types: !12334)
!12334 = !{!1981, !1982, !12205, !132, !315, !102, !102, !102, !103, !108, !12335}
!12335 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !12336)
!12336 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !12337)
!12337 = !{!12338}
!12338 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12336, file: !105, line: 66, baseType: !104, size: 64)
!12339 = !{!12340, !12341, !12342, !12343, !12344, !12345, !12346, !12347, !12348, !12349}
!12340 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12332, file: !1978, line: 641, type: !1982)
!12341 = !DILocalVariable(name: "stack", arg: 2, scope: !12332, file: !1978, line: 642, type: !12205)
!12342 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12332, file: !1978, line: 643, type: !132)
!12343 = !DILocalVariable(name: "entry", arg: 4, scope: !12332, file: !1978, line: 643, type: !315)
!12344 = !DILocalVariable(name: "p1", arg: 5, scope: !12332, file: !1978, line: 644, type: !102)
!12345 = !DILocalVariable(name: "p2", arg: 6, scope: !12332, file: !1978, line: 644, type: !102)
!12346 = !DILocalVariable(name: "p3", arg: 7, scope: !12332, file: !1978, line: 644, type: !102)
!12347 = !DILocalVariable(name: "prio", arg: 8, scope: !12332, file: !1978, line: 645, type: !103)
!12348 = !DILocalVariable(name: "options", arg: 9, scope: !12332, file: !1978, line: 645, type: !108)
!12349 = !DILocalVariable(name: "delay", arg: 10, scope: !12332, file: !1978, line: 645, type: !12335)
!12350 = !DILocation(line: 0, scope: !12332)
!12351 = !DILocation(line: 649, column: 2, scope: !12332)
!12352 = !DILocation(line: 652, column: 7, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12332, file: !1978, line: 652, column: 6)
!12354 = !DILocation(line: 652, column: 6, scope: !12332)
!12355 = !DILocation(line: 653, column: 3, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12353, file: !1978, line: 652, column: 39)
!12357 = !DILocation(line: 654, column: 2, scope: !12356)
!12358 = !DILocation(line: 656, column: 2, scope: !12332)
!12359 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1978, file: !1978, line: 401, type: !12360, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12362)
!12360 = !DISubroutineType(types: !12361)
!12361 = !{null, !1982, !12335}
!12362 = !{!12363, !12364}
!12363 = !DILocalVariable(name: "thread", arg: 1, scope: !12359, file: !1978, line: 401, type: !1982)
!12364 = !DILocalVariable(name: "delay", arg: 2, scope: !12359, file: !1978, line: 401, type: !12335)
!12365 = !DILocation(line: 0, scope: !12359)
!12366 = !DILocation(line: 404, column: 6, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12359, file: !1978, line: 404, column: 6)
!12368 = !DILocation(line: 404, column: 6, scope: !12359)
!12369 = !DILocation(line: 405, column: 3, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12367, file: !1978, line: 404, column: 38)
!12371 = !DILocation(line: 406, column: 2, scope: !12370)
!12372 = !DILocation(line: 407, column: 3, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12367, file: !1978, line: 406, column: 9)
!12374 = !DILocation(line: 413, column: 1, scope: !12359)
!12375 = distinct !DISubprogram(name: "k_thread_start", scope: !3413, file: !3413, line: 205, type: !12376, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12378)
!12376 = !DISubroutineType(types: !12377)
!12377 = !{null, !1981}
!12378 = !{!12379}
!12379 = !DILocalVariable(name: "thread", arg: 1, scope: !12375, file: !3413, line: 205, type: !1981)
!12380 = !DILocation(line: 0, scope: !12375)
!12381 = !DILocation(line: 214, column: 2, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12375, file: !3413, line: 214, column: 2)
!12383 = !{i64 2151063795}
!12384 = !DILocation(line: 215, column: 2, scope: !12375)
!12385 = !DILocation(line: 216, column: 1, scope: !12375)
!12386 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12293, file: !12293, line: 47, type: !12360, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12387)
!12387 = !{!12388, !12389}
!12388 = !DILocalVariable(name: "thread", arg: 1, scope: !12386, file: !12293, line: 47, type: !1982)
!12389 = !DILocalVariable(name: "ticks", arg: 2, scope: !12386, file: !12293, line: 47, type: !12335)
!12390 = !DILocation(line: 0, scope: !12386)
!12391 = !DILocation(line: 49, column: 30, scope: !12386)
!12392 = !DILocation(line: 49, column: 2, scope: !12386)
!12393 = !DILocation(line: 50, column: 1, scope: !12386)
!12394 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1978, file: !1978, line: 748, type: !328, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12395)
!12395 = !{!12396, !12413}
!12396 = !DILocalVariable(name: "thread_data", scope: !12397, file: !1978, line: 750, type: !12398)
!12397 = distinct !DILexicalBlock(scope: !12394, file: !1978, line: 750, column: 2)
!12398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12399, size: 32)
!12399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !12400)
!12400 = !{!12401, !12402, !12403, !12404, !12405, !12406, !12407, !12408, !12409, !12410, !12411, !12412}
!12401 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12399, file: !137, line: 621, baseType: !1982, size: 32)
!12402 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12399, file: !137, line: 622, baseType: !12205, size: 32, offset: 32)
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12399, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12399, file: !137, line: 624, baseType: !315, size: 32, offset: 96)
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12399, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!12406 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12399, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!12407 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12399, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12399, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!12409 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12399, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!12410 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12399, file: !137, line: 630, baseType: !325, size: 32, offset: 288)
!12411 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12399, file: !137, line: 631, baseType: !327, size: 32, offset: 320)
!12412 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12399, file: !137, line: 632, baseType: !331, size: 32, offset: 352)
!12413 = !DILocalVariable(name: "thread_data", scope: !12414, file: !1978, line: 781, type: !12398)
!12414 = distinct !DILexicalBlock(scope: !12394, file: !1978, line: 781, column: 2)
!12415 = !DILocation(line: 0, scope: !12397)
!12416 = !DILocation(line: 750, column: 2, scope: !12397)
!12417 = !DILocation(line: 780, column: 2, scope: !12394)
!12418 = !DILocation(line: 0, scope: !12414)
!12419 = !DILocation(line: 781, column: 2, scope: !12414)
!12420 = !DILocation(line: 752, column: 17, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !1978, line: 750, column: 38)
!12422 = distinct !DILexicalBlock(scope: !12397, file: !1978, line: 750, column: 2)
!12423 = !DILocation(line: 753, column: 17, scope: !12421)
!12424 = !DILocation(line: 754, column: 17, scope: !12421)
!12425 = !DILocation(line: 755, column: 17, scope: !12421)
!12426 = !DILocation(line: 756, column: 17, scope: !12421)
!12427 = !DILocation(line: 757, column: 17, scope: !12421)
!12428 = !DILocation(line: 758, column: 17, scope: !12421)
!12429 = !DILocation(line: 759, column: 17, scope: !12421)
!12430 = !DILocation(line: 760, column: 17, scope: !12421)
!12431 = !DILocation(line: 751, column: 3, scope: !12421)
!12432 = !DILocation(line: 763, column: 16, scope: !12421)
!12433 = !DILocation(line: 763, column: 29, scope: !12421)
!12434 = !DILocation(line: 763, column: 39, scope: !12421)
!12435 = !DILocation(line: 750, column: 2, scope: !12422)
!12436 = !DILocation(line: 750, column: 2, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12422, file: !1978, line: 750, column: 2)
!12438 = distinct !{!12438, !12416, !12439}
!12439 = !DILocation(line: 764, column: 2, scope: !12397)
!12440 = !DILocation(line: 787, column: 2, scope: !12394)
!12441 = !DILocation(line: 788, column: 1, scope: !12394)
!12442 = !DILocation(line: 782, column: 20, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12444, file: !1978, line: 782, column: 7)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !1978, line: 781, column: 38)
!12445 = distinct !DILexicalBlock(scope: !12414, file: !1978, line: 781, column: 2)
!12446 = !DILocation(line: 782, column: 31, scope: !12443)
!12447 = !DILocation(line: 782, column: 7, scope: !12444)
!12448 = !DILocation(line: 783, column: 37, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12443, file: !1978, line: 782, column: 51)
!12450 = !DILocation(line: 784, column: 10, scope: !12449)
!12451 = !DILocation(line: 783, column: 4, scope: !12449)
!12452 = !DILocation(line: 785, column: 3, scope: !12449)
!12453 = !DILocation(line: 781, column: 2, scope: !12445)
!12454 = !DILocation(line: 781, column: 2, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12445, file: !1978, line: 781, column: 2)
!12456 = distinct !{!12456, !12419, !12457}
!12457 = !DILocation(line: 786, column: 2, scope: !12414)
!12458 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3399, file: !3399, line: 403, type: !3400, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12459)
!12459 = !{!12460}
!12460 = !DILocalVariable(name: "t", arg: 1, scope: !12458, file: !3399, line: 403, type: !109)
!12461 = !DILocation(line: 0, scope: !12458)
!12462 = !DILocalVariable(name: "t", arg: 1, scope: !12463, file: !3399, line: 102, type: !109)
!12463 = distinct !DISubprogram(name: "z_tmcvt", scope: !3399, file: !3399, line: 102, type: !3425, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12464)
!12464 = !{!12462, !12465, !12466, !12467, !12468, !12469, !12470, !12471, !12472, !12473, !12474}
!12465 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12463, file: !3399, line: 102, type: !108)
!12466 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12463, file: !3399, line: 103, type: !108)
!12467 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12463, file: !3399, line: 103, type: !131)
!12468 = !DILocalVariable(name: "result32", arg: 5, scope: !12463, file: !3399, line: 104, type: !131)
!12469 = !DILocalVariable(name: "round_up", arg: 6, scope: !12463, file: !3399, line: 104, type: !131)
!12470 = !DILocalVariable(name: "round_off", arg: 7, scope: !12463, file: !3399, line: 105, type: !131)
!12471 = !DILocalVariable(name: "mul_ratio", scope: !12463, file: !3399, line: 107, type: !131)
!12472 = !DILocalVariable(name: "div_ratio", scope: !12463, file: !3399, line: 109, type: !131)
!12473 = !DILocalVariable(name: "off", scope: !12463, file: !3399, line: 116, type: !109)
!12474 = !DILocalVariable(name: "rdivisor", scope: !12475, file: !3399, line: 119, type: !108)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !3399, line: 118, column: 18)
!12476 = distinct !DILexicalBlock(scope: !12463, file: !3399, line: 118, column: 6)
!12477 = !DILocation(line: 0, scope: !12463, inlinedAt: !12478)
!12478 = distinct !DILocation(line: 406, column: 9, scope: !12458)
!12479 = !DILocation(line: 145, column: 13, scope: !12480, inlinedAt: !12478)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !3399, line: 144, column: 10)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !3399, line: 142, column: 7)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !3399, line: 141, column: 24)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !3399, line: 141, column: 13)
!12484 = distinct !DILexicalBlock(scope: !12463, file: !3399, line: 134, column: 6)
!12485 = !DILocation(line: 406, column: 2, scope: !12458)
!12486 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1978, file: !1978, line: 817, type: !4479, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12487)
!12487 = !{!12488, !12489, !12490, !12491}
!12488 = !DILocalVariable(name: "entry", arg: 1, scope: !12486, file: !1978, line: 817, type: !315)
!12489 = !DILocalVariable(name: "p1", arg: 2, scope: !12486, file: !1978, line: 818, type: !102)
!12490 = !DILocalVariable(name: "p2", arg: 3, scope: !12486, file: !1978, line: 818, type: !102)
!12491 = !DILocalVariable(name: "p3", arg: 4, scope: !12486, file: !1978, line: 818, type: !102)
!12492 = !DILocation(line: 0, scope: !12486)
!12493 = !DILocation(line: 822, column: 2, scope: !12486)
!12494 = !DILocation(line: 822, column: 17, scope: !12486)
!12495 = !DILocation(line: 822, column: 30, scope: !12486)
!12496 = !DILocation(line: 823, column: 2, scope: !12486)
!12497 = !DILocation(line: 845, column: 2, scope: !12486)
!12498 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1978, file: !1978, line: 888, type: !12499, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12501)
!12499 = !DISubroutineType(types: !12500)
!12500 = !{!103, !1982}
!12501 = !{!12502}
!12502 = !DILocalVariable(name: "thread", arg: 1, scope: !12498, file: !1978, line: 888, type: !1982)
!12503 = !DILocation(line: 0, scope: !12498)
!12504 = !DILocation(line: 893, column: 2, scope: !12498)
!12505 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1978, file: !1978, line: 897, type: !12506, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12508)
!12506 = !DISubroutineType(types: !12507)
!12507 = !{!103, !1982, !32}
!12508 = !{!12509, !12510}
!12509 = !DILocalVariable(name: "thread", arg: 1, scope: !12505, file: !1978, line: 897, type: !1982)
!12510 = !DILocalVariable(name: "options", arg: 2, scope: !12505, file: !1978, line: 897, type: !32)
!12511 = !DILocation(line: 0, scope: !12505)
!12512 = !DILocation(line: 902, column: 2, scope: !12505)
!12513 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1978, file: !1978, line: 1072, type: !12514, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12519)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{!103, !1981, !12516}
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12517, size: 32)
!12517 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !163, line: 234, baseType: !12518)
!12518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !163, line: 192, elements: !245)
!12519 = !{!12520, !12521}
!12520 = !DILocalVariable(name: "thread", arg: 1, scope: !12513, file: !1978, line: 1072, type: !1981)
!12521 = !DILocalVariable(name: "stats", arg: 2, scope: !12513, file: !1978, line: 1073, type: !12516)
!12522 = !DILocation(line: 0, scope: !12513)
!12523 = !DILocation(line: 1075, column: 14, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12513, file: !1978, line: 1075, column: 6)
!12525 = !DILocation(line: 1075, column: 23, scope: !12524)
!12526 = !DILocation(line: 1086, column: 1, scope: !12513)
!12527 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1978, file: !1978, line: 1088, type: !12528, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2076, retainedNodes: !12530)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{!103, !12516}
!12530 = !{!12531}
!12531 = !DILocalVariable(name: "stats", arg: 1, scope: !12527, file: !1978, line: 1088, type: !12516)
!12532 = !DILocation(line: 0, scope: !12527)
!12533 = !DILocation(line: 1094, column: 12, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12527, file: !1978, line: 1094, column: 6)
!12535 = !DILocation(line: 1120, column: 1, scope: !12527)
!12536 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12537, file: !12537, line: 20, type: !328, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !245)
!12537 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12538 = !DILocation(line: 30, column: 2, scope: !12536)
!12539 = !DILocation(line: 31, column: 1, scope: !12536)
!12540 = distinct !DISubprogram(name: "idle", scope: !12537, file: !12537, line: 33, type: !317, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12541)
!12541 = !{!12542, !12543, !12544}
!12542 = !DILocalVariable(name: "unused1", arg: 1, scope: !12540, file: !12537, line: 33, type: !102)
!12543 = !DILocalVariable(name: "unused2", arg: 2, scope: !12540, file: !12537, line: 33, type: !102)
!12544 = !DILocalVariable(name: "unused3", arg: 3, scope: !12540, file: !12537, line: 33, type: !102)
!12545 = !DILocation(line: 0, scope: !12540)
!12546 = !DILocation(line: 41, column: 2, scope: !12540)
!12547 = !DILocation(line: 55, column: 2, scope: !12548, inlinedAt: !12552)
!12548 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12549)
!12549 = !{!12550, !12551}
!12550 = !DILocalVariable(name: "key", scope: !12548, file: !7161, line: 44, type: !32)
!12551 = !DILocalVariable(name: "tmp", scope: !12548, file: !7161, line: 53, type: !32)
!12552 = distinct !DILocation(line: 62, column: 10, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12540, file: !12537, line: 41, column: 15)
!12554 = !{i64 2842360}
!12555 = !DILocation(line: 0, scope: !12548, inlinedAt: !12552)
!12556 = !DILocation(line: 86, column: 3, scope: !12553)
!12557 = distinct !{!12557, !12546, !12558}
!12558 = !DILocation(line: 105, column: 2, scope: !12540)
!12559 = distinct !DISubprogram(name: "k_cpu_idle", scope: !137, file: !137, line: 5627, type: !328, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !245)
!12560 = !DILocation(line: 5629, column: 2, scope: !12559)
!12561 = !DILocation(line: 5630, column: 1, scope: !12559)
!12562 = !DISubprogram(name: "arch_cpu_idle", scope: !308, file: !308, line: 167, type: !328, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!12563 = distinct !DISubprogram(name: "k_msgq_init", scope: !12564, file: !12564, line: 35, type: !12565, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12580)
!12564 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12565 = !DISubroutineType(types: !12566)
!12566 = !{null, !12567, !271, !132, !108}
!12567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12568, size: 32)
!12568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !12569)
!12569 = !{!12570, !12571, !12572, !12573, !12574, !12575, !12576, !12577, !12578, !12579}
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12568, file: !137, line: 4206, baseType: !3086, size: 64)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12568, file: !137, line: 4208, baseType: !3142, offset: 64)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !12568, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !12568, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !12568, file: !137, line: 4214, baseType: !271, size: 32, offset: 128)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !12568, file: !137, line: 4216, baseType: !271, size: 32, offset: 160)
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !12568, file: !137, line: 4218, baseType: !271, size: 32, offset: 192)
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !12568, file: !137, line: 4220, baseType: !271, size: 32, offset: 224)
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !12568, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12568, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!12580 = !{!12581, !12582, !12583, !12584}
!12581 = !DILocalVariable(name: "msgq", arg: 1, scope: !12563, file: !12564, line: 35, type: !12567)
!12582 = !DILocalVariable(name: "buffer", arg: 2, scope: !12563, file: !12564, line: 35, type: !271)
!12583 = !DILocalVariable(name: "msg_size", arg: 3, scope: !12563, file: !12564, line: 35, type: !132)
!12584 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !12563, file: !12564, line: 36, type: !108)
!12585 = !DILocation(line: 0, scope: !12563)
!12586 = !DILocation(line: 38, column: 8, scope: !12563)
!12587 = !DILocation(line: 38, column: 17, scope: !12563)
!12588 = !DILocation(line: 39, column: 8, scope: !12563)
!12589 = !DILocation(line: 39, column: 17, scope: !12563)
!12590 = !DILocation(line: 40, column: 8, scope: !12563)
!12591 = !DILocation(line: 40, column: 21, scope: !12563)
!12592 = !DILocation(line: 41, column: 40, scope: !12563)
!12593 = !DILocation(line: 41, column: 28, scope: !12563)
!12594 = !DILocation(line: 41, column: 8, scope: !12563)
!12595 = !DILocation(line: 41, column: 19, scope: !12563)
!12596 = !DILocation(line: 42, column: 8, scope: !12563)
!12597 = !DILocation(line: 42, column: 17, scope: !12563)
!12598 = !DILocation(line: 43, column: 8, scope: !12563)
!12599 = !DILocation(line: 43, column: 18, scope: !12563)
!12600 = !DILocation(line: 44, column: 8, scope: !12563)
!12601 = !DILocation(line: 44, column: 18, scope: !12563)
!12602 = !DILocation(line: 45, column: 8, scope: !12563)
!12603 = !DILocation(line: 45, column: 14, scope: !12563)
!12604 = !DILocation(line: 46, column: 22, scope: !12563)
!12605 = !DILocation(line: 46, column: 2, scope: !12563)
!12606 = !DILocation(line: 55, column: 1, scope: !12563)
!12607 = distinct !DISubprogram(name: "z_waitq_init", scope: !12241, file: !12241, line: 47, type: !12608, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12610)
!12608 = !DISubroutineType(types: !12609)
!12609 = !{null, !3085}
!12610 = !{!12611}
!12611 = !DILocalVariable(name: "w", arg: 1, scope: !12607, file: !12241, line: 47, type: !3085)
!12612 = !DILocation(line: 0, scope: !12607)
!12613 = !DILocation(line: 49, column: 21, scope: !12607)
!12614 = !DILocation(line: 49, column: 2, scope: !12607)
!12615 = !DILocation(line: 50, column: 1, scope: !12607)
!12616 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !12617, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12620)
!12617 = !DISubroutineType(types: !12618)
!12618 = !{null, !12619}
!12619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 32)
!12620 = !{!12621}
!12621 = !DILocalVariable(name: "list", arg: 1, scope: !12616, file: !146, line: 197, type: !12619)
!12622 = !DILocation(line: 0, scope: !12616)
!12623 = !DILocation(line: 199, column: 8, scope: !12616)
!12624 = !DILocation(line: 199, column: 13, scope: !12616)
!12625 = !DILocation(line: 200, column: 8, scope: !12616)
!12626 = !DILocation(line: 200, column: 13, scope: !12616)
!12627 = !DILocation(line: 201, column: 1, scope: !12616)
!12628 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !12564, file: !12564, line: 57, type: !12629, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12631)
!12629 = !DISubroutineType(types: !12630)
!12630 = !{!103, !12567, !132, !108}
!12631 = !{!12632, !12633, !12634, !12635, !12636, !12637}
!12632 = !DILocalVariable(name: "msgq", arg: 1, scope: !12628, file: !12564, line: 57, type: !12567)
!12633 = !DILocalVariable(name: "msg_size", arg: 2, scope: !12628, file: !12564, line: 57, type: !132)
!12634 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !12628, file: !12564, line: 58, type: !108)
!12635 = !DILocalVariable(name: "buffer", scope: !12628, file: !12564, line: 60, type: !102)
!12636 = !DILocalVariable(name: "ret", scope: !12628, file: !12564, line: 61, type: !103)
!12637 = !DILocalVariable(name: "total_size", scope: !12628, file: !12564, line: 62, type: !132)
!12638 = !DILocation(line: 0, scope: !12628)
!12639 = !DILocation(line: 62, column: 2, scope: !12628)
!12640 = !DILocation(line: 66, column: 6, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12628, file: !12564, line: 66, column: 6)
!12642 = !DILocation(line: 66, column: 6, scope: !12628)
!12643 = !DILocation(line: 69, column: 28, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12641, file: !12564, line: 68, column: 9)
!12645 = !DILocation(line: 69, column: 12, scope: !12644)
!12646 = !DILocation(line: 70, column: 14, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12644, file: !12564, line: 70, column: 7)
!12648 = !DILocation(line: 70, column: 7, scope: !12644)
!12649 = !DILocation(line: 71, column: 4, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12647, file: !12564, line: 70, column: 23)
!12651 = !DILocation(line: 72, column: 10, scope: !12650)
!12652 = !DILocation(line: 72, column: 16, scope: !12650)
!12653 = !DILocation(line: 74, column: 3, scope: !12650)
!12654 = !DILocation(line: 0, scope: !12641)
!12655 = !DILocation(line: 82, column: 1, scope: !12628)
!12656 = !DILocation(line: 81, column: 2, scope: !12628)
!12657 = distinct !DISubprogram(name: "size_mul_overflow", scope: !12658, file: !12658, line: 105, type: !12659, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12661)
!12658 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12659 = !DISubroutineType(types: !12660)
!12660 = !{!131, !132, !132, !2478}
!12661 = !{!12662, !12663, !12664}
!12662 = !DILocalVariable(name: "a", arg: 1, scope: !12657, file: !12658, line: 105, type: !132)
!12663 = !DILocalVariable(name: "b", arg: 2, scope: !12657, file: !12658, line: 105, type: !132)
!12664 = !DILocalVariable(name: "result", arg: 3, scope: !12657, file: !12658, line: 105, type: !2478)
!12665 = !DILocation(line: 0, scope: !12657)
!12666 = !DILocation(line: 107, column: 9, scope: !12657)
!12667 = !DILocation(line: 107, column: 2, scope: !12657)
!12668 = distinct !DISubprogram(name: "z_thread_malloc", scope: !12669, file: !12669, line: 102, type: !12670, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12671)
!12669 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12670 = !DISubroutineType(types: !3029)
!12671 = !{!12672}
!12672 = !DILocalVariable(name: "size", arg: 1, scope: !12668, file: !12669, line: 102, type: !132)
!12673 = !DILocation(line: 0, scope: !12668)
!12674 = !DILocation(line: 104, column: 9, scope: !12668)
!12675 = !DILocation(line: 104, column: 2, scope: !12668)
!12676 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !12564, file: !12564, line: 95, type: !12677, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!103, !12567}
!12679 = !{!12680}
!12680 = !DILocalVariable(name: "msgq", arg: 1, scope: !12676, file: !12564, line: 95, type: !12567)
!12681 = !DILocation(line: 0, scope: !12676)
!12682 = !DILocation(line: 99, column: 2, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12676, file: !12564, line: 99, column: 2)
!12684 = !DILocation(line: 99, column: 2, scope: !12676)
!12685 = !DILocation(line: 105, column: 13, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12676, file: !12564, line: 105, column: 6)
!12687 = !DILocation(line: 105, column: 19, scope: !12686)
!12688 = !DILocation(line: 105, column: 40, scope: !12686)
!12689 = !DILocation(line: 105, column: 6, scope: !12676)
!12690 = !DILocation(line: 106, column: 16, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12686, file: !12564, line: 105, column: 47)
!12692 = !DILocation(line: 106, column: 3, scope: !12691)
!12693 = !DILocation(line: 107, column: 15, scope: !12691)
!12694 = !DILocation(line: 108, column: 2, scope: !12691)
!12695 = !DILocation(line: 113, column: 1, scope: !12676)
!12696 = distinct !DISubprogram(name: "z_waitq_head", scope: !12241, file: !12241, line: 52, type: !12697, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12699)
!12697 = !DISubroutineType(types: !12698)
!12698 = !{!3068, !3085}
!12699 = !{!12700}
!12700 = !DILocalVariable(name: "w", arg: 1, scope: !12696, file: !12241, line: 52, type: !3085)
!12701 = !DILocation(line: 0, scope: !12696)
!12702 = !DILocation(line: 54, column: 52, scope: !12696)
!12703 = !DILocation(line: 54, column: 28, scope: !12696)
!12704 = !DILocation(line: 54, column: 9, scope: !12696)
!12705 = !DILocation(line: 54, column: 2, scope: !12696)
!12706 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !12707, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12709)
!12707 = !DISubroutineType(types: !12708)
!12708 = !{!3053, !12619}
!12709 = !{!12710}
!12710 = !DILocalVariable(name: "list", arg: 1, scope: !12706, file: !146, line: 294, type: !12619)
!12711 = !DILocation(line: 0, scope: !12706)
!12712 = !DILocation(line: 296, column: 9, scope: !12706)
!12713 = !DILocation(line: 296, column: 49, scope: !12706)
!12714 = !DILocation(line: 296, column: 2, scope: !12706)
!12715 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !12716, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12718)
!12716 = !DISubroutineType(types: !12717)
!12717 = !{!131, !12619}
!12718 = !{!12719}
!12719 = !DILocalVariable(name: "list", arg: 1, scope: !12715, file: !146, line: 266, type: !12619)
!12720 = !DILocation(line: 0, scope: !12715)
!12721 = !DILocation(line: 268, column: 15, scope: !12715)
!12722 = !DILocation(line: 268, column: 20, scope: !12715)
!12723 = !DILocation(line: 268, column: 2, scope: !12715)
!12724 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !12564, file: !12564, line: 116, type: !12725, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12731)
!12725 = !DISubroutineType(types: !12726)
!12726 = !{!103, !12567, !13, !12727}
!12727 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !12728)
!12728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !12729)
!12729 = !{!12730}
!12730 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12728, file: !105, line: 66, baseType: !104, size: 64)
!12731 = !{!12732, !12733, !12734, !12735, !12736, !12741}
!12732 = !DILocalVariable(name: "msgq", arg: 1, scope: !12724, file: !12564, line: 116, type: !12567)
!12733 = !DILocalVariable(name: "data", arg: 2, scope: !12724, file: !12564, line: 116, type: !13)
!12734 = !DILocalVariable(name: "timeout", arg: 3, scope: !12724, file: !12564, line: 116, type: !12727)
!12735 = !DILocalVariable(name: "pending_thread", scope: !12724, file: !12564, line: 120, type: !3068)
!12736 = !DILocalVariable(name: "key", scope: !12724, file: !12564, line: 121, type: !12737)
!12737 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !12738)
!12738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !12739)
!12739 = !{!12740}
!12740 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12738, file: !244, line: 33, baseType: !103, size: 32)
!12741 = !DILocalVariable(name: "result", scope: !12724, file: !12564, line: 122, type: !103)
!12742 = !DILocation(line: 0, scope: !12724)
!12743 = !DILocation(line: 124, column: 27, scope: !12724)
!12744 = !DILocalVariable(name: "l", arg: 1, scope: !12745, file: !244, line: 136, type: !12748)
!12745 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !12746, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12749)
!12746 = !DISubroutineType(types: !12747)
!12747 = !{!12737, !12748}
!12748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!12749 = !{!12744, !12750}
!12750 = !DILocalVariable(name: "k", scope: !12745, file: !244, line: 139, type: !12737)
!12751 = !DILocation(line: 0, scope: !12745, inlinedAt: !12752)
!12752 = distinct !DILocation(line: 124, column: 8, scope: !12724)
!12753 = !DILocation(line: 55, column: 2, scope: !12754, inlinedAt: !12758)
!12754 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12755)
!12755 = !{!12756, !12757}
!12756 = !DILocalVariable(name: "key", scope: !12754, file: !7161, line: 44, type: !32)
!12757 = !DILocalVariable(name: "tmp", scope: !12754, file: !7161, line: 53, type: !32)
!12758 = distinct !DILocation(line: 145, column: 10, scope: !12745, inlinedAt: !12752)
!12759 = !{i64 2848497}
!12760 = !DILocation(line: 0, scope: !12754, inlinedAt: !12758)
!12761 = !DILocation(line: 128, column: 12, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12724, file: !12564, line: 128, column: 6)
!12763 = !DILocation(line: 128, column: 30, scope: !12762)
!12764 = !DILocation(line: 128, column: 22, scope: !12762)
!12765 = !DILocation(line: 128, column: 6, scope: !12724)
!12766 = !DILocation(line: 130, column: 49, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12762, file: !12564, line: 128, column: 40)
!12768 = !DILocation(line: 130, column: 20, scope: !12767)
!12769 = !DILocation(line: 131, column: 22, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12767, file: !12564, line: 131, column: 7)
!12771 = !DILocation(line: 131, column: 7, scope: !12767)
!12772 = !DILocation(line: 135, column: 38, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12770, file: !12564, line: 131, column: 31)
!12774 = !DILocation(line: 136, column: 17, scope: !12773)
!12775 = !DILocation(line: 135, column: 10, scope: !12773)
!12776 = !DILocalVariable(name: "thread", arg: 1, scope: !12777, file: !11942, line: 65, type: !3068)
!12777 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11942, file: !11942, line: 65, type: !12778, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12780)
!12778 = !DISubroutineType(types: !12779)
!12779 = !{null, !3068, !32}
!12780 = !{!12776, !12781}
!12781 = !DILocalVariable(name: "value", arg: 2, scope: !12777, file: !11942, line: 65, type: !32)
!12782 = !DILocation(line: 0, scope: !12777, inlinedAt: !12783)
!12783 = distinct !DILocation(line: 138, column: 4, scope: !12773)
!12784 = !DILocation(line: 67, column: 15, scope: !12777, inlinedAt: !12783)
!12785 = !DILocation(line: 67, column: 33, scope: !12777, inlinedAt: !12783)
!12786 = !DILocation(line: 139, column: 4, scope: !12773)
!12787 = !DILocation(line: 140, column: 4, scope: !12773)
!12788 = !DILocation(line: 141, column: 4, scope: !12773)
!12789 = !DILocation(line: 144, column: 23, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12770, file: !12564, line: 142, column: 10)
!12791 = !DILocation(line: 144, column: 46, scope: !12790)
!12792 = !DILocation(line: 144, column: 10, scope: !12790)
!12793 = !DILocation(line: 145, column: 29, scope: !12790)
!12794 = !DILocation(line: 145, column: 20, scope: !12790)
!12795 = !DILocation(line: 146, column: 33, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12790, file: !12564, line: 146, column: 8)
!12797 = !DILocation(line: 146, column: 24, scope: !12796)
!12798 = !DILocation(line: 146, column: 8, scope: !12790)
!12799 = !DILocation(line: 147, column: 29, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12796, file: !12564, line: 146, column: 45)
!12801 = !DILocation(line: 147, column: 21, scope: !12800)
!12802 = !DILocation(line: 148, column: 4, scope: !12800)
!12803 = !DILocation(line: 149, column: 19, scope: !12790)
!12804 = !DILocation(line: 155, column: 2, scope: !12767)
!12805 = !DILocation(line: 155, column: 13, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12762, file: !12564, line: 155, column: 13)
!12807 = !DILocation(line: 155, column: 13, scope: !12762)
!12808 = !DILocation(line: 162, column: 3, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12806, file: !12564, line: 158, column: 9)
!12810 = !DILocation(line: 162, column: 18, scope: !12809)
!12811 = !DILocation(line: 162, column: 28, scope: !12809)
!12812 = !DILocation(line: 164, column: 49, scope: !12809)
!12813 = !DILocation(line: 164, column: 12, scope: !12809)
!12814 = !DILocation(line: 166, column: 3, scope: !12809)
!12815 = !DILocation(line: 0, scope: !12762)
!12816 = !DILocalVariable(name: "key", arg: 2, scope: !12817, file: !244, line: 190, type: !12737)
!12817 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !12818, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12820)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{null, !12748, !12737}
!12820 = !{!12821, !12816}
!12821 = !DILocalVariable(name: "l", arg: 1, scope: !12817, file: !244, line: 189, type: !12748)
!12822 = !DILocation(line: 0, scope: !12817, inlinedAt: !12823)
!12823 = distinct !DILocation(line: 171, column: 2, scope: !12724)
!12824 = !DILocalVariable(name: "key", arg: 1, scope: !12825, file: !7161, line: 84, type: !32)
!12825 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12826)
!12826 = !{!12824}
!12827 = !DILocation(line: 0, scope: !12825, inlinedAt: !12828)
!12828 = distinct !DILocation(line: 215, column: 2, scope: !12817, inlinedAt: !12823)
!12829 = !DILocation(line: 95, column: 2, scope: !12825, inlinedAt: !12828)
!12830 = !{i64 2849314}
!12831 = !DILocation(line: 173, column: 2, scope: !12724)
!12832 = !DILocation(line: 174, column: 1, scope: !12724)
!12833 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !12564, file: !12564, line: 188, type: !12834, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12842)
!12834 = !DISubroutineType(types: !12835)
!12835 = !{null, !12567, !12836}
!12836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12837, size: 32)
!12837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !137, line: 4259, size: 96, elements: !12838)
!12838 = !{!12839, !12840, !12841}
!12839 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !12837, file: !137, line: 4261, baseType: !132, size: 32)
!12840 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !12837, file: !137, line: 4263, baseType: !108, size: 32, offset: 32)
!12841 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !12837, file: !137, line: 4265, baseType: !108, size: 32, offset: 64)
!12842 = !{!12843, !12844}
!12843 = !DILocalVariable(name: "msgq", arg: 1, scope: !12833, file: !12564, line: 188, type: !12567)
!12844 = !DILocalVariable(name: "attrs", arg: 2, scope: !12833, file: !12564, line: 188, type: !12836)
!12845 = !DILocation(line: 0, scope: !12833)
!12846 = !DILocation(line: 190, column: 26, scope: !12833)
!12847 = !DILocation(line: 190, column: 9, scope: !12833)
!12848 = !DILocation(line: 190, column: 18, scope: !12833)
!12849 = !DILocation(line: 191, column: 26, scope: !12833)
!12850 = !DILocation(line: 191, column: 9, scope: !12833)
!12851 = !DILocation(line: 191, column: 18, scope: !12833)
!12852 = !DILocation(line: 192, column: 27, scope: !12833)
!12853 = !DILocation(line: 192, column: 9, scope: !12833)
!12854 = !DILocation(line: 192, column: 19, scope: !12833)
!12855 = !DILocation(line: 193, column: 1, scope: !12833)
!12856 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !12564, file: !12564, line: 206, type: !12857, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12859)
!12857 = !DISubroutineType(types: !12858)
!12858 = !{!103, !12567, !102, !12727}
!12859 = !{!12860, !12861, !12862, !12863, !12864, !12865}
!12860 = !DILocalVariable(name: "msgq", arg: 1, scope: !12856, file: !12564, line: 206, type: !12567)
!12861 = !DILocalVariable(name: "data", arg: 2, scope: !12856, file: !12564, line: 206, type: !102)
!12862 = !DILocalVariable(name: "timeout", arg: 3, scope: !12856, file: !12564, line: 206, type: !12727)
!12863 = !DILocalVariable(name: "key", scope: !12856, file: !12564, line: 210, type: !12737)
!12864 = !DILocalVariable(name: "pending_thread", scope: !12856, file: !12564, line: 211, type: !3068)
!12865 = !DILocalVariable(name: "result", scope: !12856, file: !12564, line: 212, type: !103)
!12866 = !DILocation(line: 0, scope: !12856)
!12867 = !DILocation(line: 214, column: 27, scope: !12856)
!12868 = !DILocation(line: 0, scope: !12745, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 214, column: 8, scope: !12856)
!12870 = !DILocation(line: 55, column: 2, scope: !12754, inlinedAt: !12871)
!12871 = distinct !DILocation(line: 145, column: 10, scope: !12745, inlinedAt: !12869)
!12872 = !DILocation(line: 0, scope: !12754, inlinedAt: !12871)
!12873 = !DILocation(line: 218, column: 12, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12856, file: !12564, line: 218, column: 6)
!12875 = !DILocation(line: 218, column: 22, scope: !12874)
!12876 = !DILocation(line: 218, column: 6, scope: !12856)
!12877 = !DILocation(line: 220, column: 28, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12874, file: !12564, line: 218, column: 28)
!12879 = !DILocation(line: 220, column: 44, scope: !12878)
!12880 = !DILocation(line: 220, column: 9, scope: !12878)
!12881 = !DILocation(line: 221, column: 27, scope: !12878)
!12882 = !DILocation(line: 221, column: 18, scope: !12878)
!12883 = !DILocation(line: 222, column: 31, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12878, file: !12564, line: 222, column: 7)
!12885 = !DILocation(line: 222, column: 22, scope: !12884)
!12886 = !DILocation(line: 222, column: 7, scope: !12878)
!12887 = !DILocation(line: 223, column: 27, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12884, file: !12564, line: 222, column: 43)
!12889 = !DILocation(line: 223, column: 19, scope: !12888)
!12890 = !DILocation(line: 224, column: 3, scope: !12888)
!12891 = !DILocation(line: 225, column: 18, scope: !12878)
!12892 = !DILocation(line: 228, column: 49, scope: !12878)
!12893 = !DILocation(line: 228, column: 20, scope: !12878)
!12894 = !DILocation(line: 229, column: 22, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12878, file: !12564, line: 229, column: 7)
!12896 = !DILocation(line: 229, column: 7, scope: !12878)
!12897 = !DILocation(line: 233, column: 23, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12895, file: !12564, line: 229, column: 31)
!12899 = !DILocation(line: 233, column: 55, scope: !12898)
!12900 = !DILocation(line: 234, column: 17, scope: !12898)
!12901 = !DILocation(line: 233, column: 10, scope: !12898)
!12902 = !DILocation(line: 235, column: 29, scope: !12898)
!12903 = !DILocation(line: 235, column: 20, scope: !12898)
!12904 = !DILocation(line: 236, column: 33, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12898, file: !12564, line: 236, column: 8)
!12906 = !DILocation(line: 236, column: 24, scope: !12905)
!12907 = !DILocation(line: 236, column: 8, scope: !12898)
!12908 = !DILocation(line: 237, column: 29, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12905, file: !12564, line: 236, column: 45)
!12910 = !DILocation(line: 237, column: 21, scope: !12909)
!12911 = !DILocation(line: 238, column: 4, scope: !12909)
!12912 = !DILocation(line: 239, column: 19, scope: !12898)
!12913 = !DILocation(line: 0, scope: !12777, inlinedAt: !12914)
!12914 = distinct !DILocation(line: 242, column: 4, scope: !12898)
!12915 = !DILocation(line: 67, column: 15, scope: !12777, inlinedAt: !12914)
!12916 = !DILocation(line: 67, column: 33, scope: !12777, inlinedAt: !12914)
!12917 = !DILocation(line: 243, column: 4, scope: !12898)
!12918 = !DILocation(line: 244, column: 4, scope: !12898)
!12919 = !DILocation(line: 248, column: 4, scope: !12898)
!12920 = !DILocation(line: 251, column: 13, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12874, file: !12564, line: 251, column: 13)
!12922 = !DILocation(line: 251, column: 13, scope: !12874)
!12923 = !DILocation(line: 258, column: 3, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12921, file: !12564, line: 254, column: 9)
!12925 = !DILocation(line: 258, column: 18, scope: !12924)
!12926 = !DILocation(line: 258, column: 28, scope: !12924)
!12927 = !DILocation(line: 260, column: 49, scope: !12924)
!12928 = !DILocation(line: 260, column: 12, scope: !12924)
!12929 = !DILocation(line: 262, column: 3, scope: !12924)
!12930 = !DILocation(line: 0, scope: !12874)
!12931 = !DILocation(line: 0, scope: !12817, inlinedAt: !12932)
!12932 = distinct !DILocation(line: 267, column: 2, scope: !12856)
!12933 = !DILocation(line: 0, scope: !12825, inlinedAt: !12934)
!12934 = distinct !DILocation(line: 215, column: 2, scope: !12817, inlinedAt: !12932)
!12935 = !DILocation(line: 95, column: 2, scope: !12825, inlinedAt: !12934)
!12936 = !DILocation(line: 269, column: 2, scope: !12856)
!12937 = !DILocation(line: 270, column: 1, scope: !12856)
!12938 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !12564, file: !12564, line: 284, type: !12939, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12941)
!12939 = !DISubroutineType(types: !12940)
!12940 = !{!103, !12567, !102}
!12941 = !{!12942, !12943, !12944, !12945}
!12942 = !DILocalVariable(name: "msgq", arg: 1, scope: !12938, file: !12564, line: 284, type: !12567)
!12943 = !DILocalVariable(name: "data", arg: 2, scope: !12938, file: !12564, line: 284, type: !102)
!12944 = !DILocalVariable(name: "key", scope: !12938, file: !12564, line: 286, type: !12737)
!12945 = !DILocalVariable(name: "result", scope: !12938, file: !12564, line: 287, type: !103)
!12946 = !DILocation(line: 0, scope: !12938)
!12947 = !DILocation(line: 0, scope: !12745, inlinedAt: !12948)
!12948 = distinct !DILocation(line: 289, column: 8, scope: !12938)
!12949 = !DILocation(line: 55, column: 2, scope: !12754, inlinedAt: !12950)
!12950 = distinct !DILocation(line: 145, column: 10, scope: !12745, inlinedAt: !12948)
!12951 = !DILocation(line: 0, scope: !12754, inlinedAt: !12950)
!12952 = !DILocation(line: 291, column: 12, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12938, file: !12564, line: 291, column: 6)
!12954 = !DILocation(line: 291, column: 22, scope: !12953)
!12955 = !DILocation(line: 291, column: 6, scope: !12938)
!12956 = !DILocation(line: 293, column: 28, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12953, file: !12564, line: 291, column: 28)
!12958 = !DILocation(line: 293, column: 44, scope: !12957)
!12959 = !DILocation(line: 293, column: 9, scope: !12957)
!12960 = !DILocation(line: 295, column: 2, scope: !12957)
!12961 = !DILocation(line: 0, scope: !12953)
!12962 = !DILocation(line: 0, scope: !12817, inlinedAt: !12963)
!12963 = distinct !DILocation(line: 302, column: 2, scope: !12938)
!12964 = !DILocation(line: 0, scope: !12825, inlinedAt: !12965)
!12965 = distinct !DILocation(line: 215, column: 2, scope: !12817, inlinedAt: !12963)
!12966 = !DILocation(line: 95, column: 2, scope: !12825, inlinedAt: !12965)
!12967 = !DILocation(line: 304, column: 2, scope: !12938)
!12968 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !12564, file: !12564, line: 318, type: !12969, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12971)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{null, !12567}
!12971 = !{!12972, !12973, !12974}
!12972 = !DILocalVariable(name: "msgq", arg: 1, scope: !12968, file: !12564, line: 318, type: !12567)
!12973 = !DILocalVariable(name: "key", scope: !12968, file: !12564, line: 320, type: !12737)
!12974 = !DILocalVariable(name: "pending_thread", scope: !12968, file: !12564, line: 321, type: !3068)
!12975 = !DILocation(line: 0, scope: !12968)
!12976 = !DILocation(line: 0, scope: !12745, inlinedAt: !12977)
!12977 = distinct !DILocation(line: 323, column: 8, scope: !12968)
!12978 = !DILocation(line: 55, column: 2, scope: !12754, inlinedAt: !12979)
!12979 = distinct !DILocation(line: 145, column: 10, scope: !12745, inlinedAt: !12977)
!12980 = !DILocation(line: 0, scope: !12754, inlinedAt: !12979)
!12981 = !DILocation(line: 328, column: 27, scope: !12968)
!12982 = !DILocation(line: 328, column: 65, scope: !12968)
!12983 = !DILocation(line: 328, column: 2, scope: !12968)
!12984 = !DILocation(line: 0, scope: !12777, inlinedAt: !12985)
!12985 = distinct !DILocation(line: 329, column: 3, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12968, file: !12564, line: 328, column: 74)
!12987 = !DILocation(line: 67, column: 15, scope: !12777, inlinedAt: !12985)
!12988 = !DILocation(line: 67, column: 33, scope: !12777, inlinedAt: !12985)
!12989 = !DILocation(line: 330, column: 3, scope: !12986)
!12990 = distinct !{!12990, !12983, !12991}
!12991 = !DILocation(line: 331, column: 2, scope: !12968)
!12992 = !DILocation(line: 323, column: 27, scope: !12968)
!12993 = !DILocation(line: 333, column: 8, scope: !12968)
!12994 = !DILocation(line: 333, column: 18, scope: !12968)
!12995 = !DILocation(line: 334, column: 25, scope: !12968)
!12996 = !DILocation(line: 334, column: 8, scope: !12968)
!12997 = !DILocation(line: 334, column: 17, scope: !12968)
!12998 = !DILocation(line: 336, column: 2, scope: !12968)
!12999 = !DILocation(line: 337, column: 1, scope: !12968)
!13000 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2196, file: !2196, line: 49, type: !13001, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13010)
!13001 = !DISubroutineType(types: !13002)
!13002 = !{!103, !13003}
!13003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13004, size: 32)
!13004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !13005)
!13005 = !{!13006, !13007, !13008, !13009}
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13004, file: !137, line: 2722, baseType: !2133, size: 64)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13004, file: !137, line: 2724, baseType: !2115, size: 32, offset: 64)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13004, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13004, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!13010 = !{!13011}
!13011 = !DILocalVariable(name: "mutex", arg: 1, scope: !13000, file: !2196, line: 49, type: !13003)
!13012 = !DILocation(line: 0, scope: !13000)
!13013 = !DILocation(line: 51, column: 9, scope: !13000)
!13014 = !DILocation(line: 51, column: 15, scope: !13000)
!13015 = !DILocation(line: 52, column: 9, scope: !13000)
!13016 = !DILocation(line: 52, column: 20, scope: !13000)
!13017 = !DILocation(line: 54, column: 23, scope: !13000)
!13018 = !DILocation(line: 54, column: 2, scope: !13000)
!13019 = !DILocation(line: 60, column: 2, scope: !13000)
!13020 = distinct !DISubprogram(name: "z_waitq_init", scope: !12241, file: !12241, line: 47, type: !13021, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13023)
!13021 = !DISubroutineType(types: !13022)
!13022 = !{null, !2132}
!13023 = !{!13024}
!13024 = !DILocalVariable(name: "w", arg: 1, scope: !13020, file: !12241, line: 47, type: !2132)
!13025 = !DILocation(line: 0, scope: !13020)
!13026 = !DILocation(line: 49, column: 21, scope: !13020)
!13027 = !DILocation(line: 49, column: 2, scope: !13020)
!13028 = !DILocation(line: 50, column: 1, scope: !13020)
!13029 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !13030, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13033)
!13030 = !DISubroutineType(types: !13031)
!13031 = !{null, !13032}
!13032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!13033 = !{!13034}
!13034 = !DILocalVariable(name: "list", arg: 1, scope: !13029, file: !146, line: 197, type: !13032)
!13035 = !DILocation(line: 0, scope: !13029)
!13036 = !DILocation(line: 199, column: 8, scope: !13029)
!13037 = !DILocation(line: 199, column: 13, scope: !13029)
!13038 = !DILocation(line: 200, column: 8, scope: !13029)
!13039 = !DILocation(line: 200, column: 13, scope: !13029)
!13040 = !DILocation(line: 201, column: 1, scope: !13029)
!13041 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2196, file: !2196, line: 95, type: !13042, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13048)
!13042 = !DISubroutineType(types: !13043)
!13043 = !{!103, !13003, !13044}
!13044 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13045)
!13045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13046)
!13046 = !{!13047}
!13047 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13045, file: !105, line: 66, baseType: !104, size: 64)
!13048 = !{!13049, !13050, !13051, !13052, !13057, !13058, !13059}
!13049 = !DILocalVariable(name: "mutex", arg: 1, scope: !13041, file: !2196, line: 95, type: !13003)
!13050 = !DILocalVariable(name: "timeout", arg: 2, scope: !13041, file: !2196, line: 95, type: !13044)
!13051 = !DILocalVariable(name: "new_prio", scope: !13041, file: !2196, line: 97, type: !103)
!13052 = !DILocalVariable(name: "key", scope: !13041, file: !2196, line: 98, type: !13053)
!13053 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !13054)
!13054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !13055)
!13055 = !{!13056}
!13056 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13054, file: !244, line: 33, baseType: !103, size: 32)
!13057 = !DILocalVariable(name: "resched", scope: !13041, file: !2196, line: 99, type: !131)
!13058 = !DILocalVariable(name: "got_mutex", scope: !13041, file: !2196, line: 146, type: !103)
!13059 = !DILocalVariable(name: "waiter", scope: !13060, file: !2196, line: 169, type: !2115)
!13060 = distinct !DILexicalBlock(scope: !13061, file: !2196, line: 168, column: 36)
!13061 = distinct !DILexicalBlock(scope: !13041, file: !2196, line: 168, column: 6)
!13062 = !DILocation(line: 0, scope: !13041)
!13063 = !DILocalVariable(name: "l", arg: 1, scope: !13064, file: !244, line: 136, type: !13067)
!13064 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !13065, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13068)
!13065 = !DISubroutineType(types: !13066)
!13066 = !{!13053, !13067}
!13067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!13068 = !{!13063, !13069}
!13069 = !DILocalVariable(name: "k", scope: !13064, file: !244, line: 139, type: !13053)
!13070 = !DILocation(line: 0, scope: !13064, inlinedAt: !13071)
!13071 = distinct !DILocation(line: 105, column: 8, scope: !13041)
!13072 = !DILocation(line: 55, column: 2, scope: !13073, inlinedAt: !13077)
!13073 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13074)
!13074 = !{!13075, !13076}
!13075 = !DILocalVariable(name: "key", scope: !13073, file: !7161, line: 44, type: !32)
!13076 = !DILocalVariable(name: "tmp", scope: !13073, file: !7161, line: 53, type: !32)
!13077 = distinct !DILocation(line: 145, column: 10, scope: !13064, inlinedAt: !13071)
!13078 = !{i64 2846768}
!13079 = !DILocation(line: 0, scope: !13073, inlinedAt: !13077)
!13080 = !DILocation(line: 107, column: 6, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13041, file: !2196, line: 107, column: 6)
!13082 = !DILocation(line: 107, column: 6, scope: !13041)
!13083 = !{!"branch_weights", i32 2000, i32 1}
!13084 = !DILocation(line: 110, column: 6, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13081, file: !2196, line: 107, column: 71)
!13086 = !DILocation(line: 110, column: 21, scope: !13085)
!13087 = !DILocation(line: 109, column: 28, scope: !13085)
!13088 = !DILocation(line: 111, column: 13, scope: !13085)
!13089 = !DILocation(line: 114, column: 18, scope: !13085)
!13090 = !DILocation(line: 109, column: 10, scope: !13085)
!13091 = !DILocation(line: 109, column: 26, scope: !13085)
!13092 = !DILocation(line: 113, column: 20, scope: !13085)
!13093 = !DILocation(line: 114, column: 10, scope: !13085)
!13094 = !DILocation(line: 114, column: 16, scope: !13085)
!13095 = !DILocalVariable(name: "key", arg: 2, scope: !13096, file: !244, line: 190, type: !13053)
!13096 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !13097, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{null, !13067, !13053}
!13099 = !{!13100, !13095}
!13100 = !DILocalVariable(name: "l", arg: 1, scope: !13096, file: !244, line: 189, type: !13067)
!13101 = !DILocation(line: 0, scope: !13096, inlinedAt: !13102)
!13102 = distinct !DILocation(line: 120, column: 3, scope: !13085)
!13103 = !DILocalVariable(name: "key", arg: 1, scope: !13104, file: !7161, line: 84, type: !32)
!13104 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13105)
!13105 = !{!13103}
!13106 = !DILocation(line: 0, scope: !13104, inlinedAt: !13107)
!13107 = distinct !DILocation(line: 215, column: 2, scope: !13096, inlinedAt: !13102)
!13108 = !DILocation(line: 95, column: 2, scope: !13104, inlinedAt: !13107)
!13109 = !{i64 2847585}
!13110 = !DILocation(line: 124, column: 3, scope: !13085)
!13111 = !DILocation(line: 127, column: 6, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13041, file: !2196, line: 127, column: 6)
!13113 = !DILocation(line: 127, column: 6, scope: !13041)
!13114 = !{!"branch_weights", i32 1, i32 2000}
!13115 = !DILocation(line: 0, scope: !13096, inlinedAt: !13116)
!13116 = distinct !DILocation(line: 128, column: 3, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13112, file: !2196, line: 127, column: 50)
!13118 = !DILocation(line: 0, scope: !13104, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 215, column: 2, scope: !13096, inlinedAt: !13116)
!13120 = !DILocation(line: 95, column: 2, scope: !13104, inlinedAt: !13119)
!13121 = !DILocation(line: 132, column: 3, scope: !13117)
!13122 = !DILocation(line: 137, column: 53, scope: !13041)
!13123 = !DILocation(line: 137, column: 38, scope: !13041)
!13124 = !DILocation(line: 138, column: 29, scope: !13041)
!13125 = !DILocation(line: 138, column: 10, scope: !13041)
!13126 = !DILocation(line: 137, column: 13, scope: !13041)
!13127 = !DILocation(line: 142, column: 6, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13041, file: !2196, line: 142, column: 6)
!13129 = !DILocation(line: 142, column: 6, scope: !13041)
!13130 = !DILocation(line: 143, column: 13, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13128, file: !2196, line: 142, column: 59)
!13132 = !DILocation(line: 144, column: 2, scope: !13131)
!13133 = !DILocation(line: 146, column: 50, scope: !13041)
!13134 = !DILocation(line: 146, column: 18, scope: !13041)
!13135 = !DILocation(line: 153, column: 16, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13041, file: !2196, line: 153, column: 6)
!13137 = !DILocation(line: 153, column: 6, scope: !13041)
!13138 = !DILocation(line: 0, scope: !13064, inlinedAt: !13139)
!13139 = distinct !DILocation(line: 162, column: 8, scope: !13041)
!13140 = !DILocation(line: 55, column: 2, scope: !13073, inlinedAt: !13141)
!13141 = distinct !DILocation(line: 145, column: 10, scope: !13064, inlinedAt: !13139)
!13142 = !DILocation(line: 0, scope: !13073, inlinedAt: !13141)
!13143 = !DILocation(line: 168, column: 6, scope: !13061)
!13144 = !DILocation(line: 168, column: 6, scope: !13041)
!13145 = !DILocation(line: 169, column: 29, scope: !13060)
!13146 = !DILocation(line: 0, scope: !13060)
!13147 = !DILocation(line: 171, column: 22, scope: !13060)
!13148 = !DILocation(line: 171, column: 14, scope: !13060)
!13149 = !DILocation(line: 172, column: 42, scope: !13060)
!13150 = !DILocation(line: 172, column: 29, scope: !13060)
!13151 = !DILocation(line: 172, column: 55, scope: !13060)
!13152 = !DILocation(line: 172, column: 4, scope: !13060)
!13153 = !DILocation(line: 173, column: 11, scope: !13060)
!13154 = !DILocation(line: 177, column: 13, scope: !13060)
!13155 = !DILocation(line: 177, column: 48, scope: !13060)
!13156 = !DILocation(line: 180, column: 6, scope: !13041)
!13157 = !DILocation(line: 181, column: 3, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13159, file: !2196, line: 180, column: 15)
!13159 = distinct !DILexicalBlock(scope: !13041, file: !2196, line: 180, column: 6)
!13160 = !DILocation(line: 182, column: 2, scope: !13158)
!13161 = !DILocation(line: 0, scope: !13096, inlinedAt: !13162)
!13162 = distinct !DILocation(line: 183, column: 3, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13159, file: !2196, line: 182, column: 9)
!13164 = !DILocation(line: 0, scope: !13104, inlinedAt: !13165)
!13165 = distinct !DILocation(line: 215, column: 2, scope: !13096, inlinedAt: !13162)
!13166 = !DILocation(line: 95, column: 2, scope: !13104, inlinedAt: !13165)
!13167 = !DILocation(line: 189, column: 1, scope: !13041)
!13168 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2196, file: !2196, line: 72, type: !13169, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13171)
!13169 = !DISubroutineType(types: !13170)
!13170 = !{!325, !325, !325}
!13171 = !{!13172, !13173, !13174}
!13172 = !DILocalVariable(name: "target", arg: 1, scope: !13168, file: !2196, line: 72, type: !325)
!13173 = !DILocalVariable(name: "limit", arg: 2, scope: !13168, file: !2196, line: 72, type: !325)
!13174 = !DILocalVariable(name: "new_prio", scope: !13168, file: !2196, line: 74, type: !103)
!13175 = !DILocation(line: 0, scope: !13168)
!13176 = !DILocation(line: 74, column: 17, scope: !13168)
!13177 = !DILocation(line: 76, column: 13, scope: !13168)
!13178 = !DILocation(line: 78, column: 2, scope: !13168)
!13179 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11922, file: !11922, line: 211, type: !13180, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13182)
!13180 = !DISubroutineType(types: !13181)
!13181 = !{!131, !103, !103}
!13182 = !{!13183, !13184}
!13183 = !DILocalVariable(name: "prio", arg: 1, scope: !13179, file: !11922, line: 211, type: !103)
!13184 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13179, file: !11922, line: 211, type: !103)
!13185 = !DILocation(line: 0, scope: !13179)
!13186 = !DILocation(line: 213, column: 9, scope: !13179)
!13187 = !DILocation(line: 213, column: 2, scope: !13179)
!13188 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2196, file: !2196, line: 81, type: !13189, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13191)
!13189 = !DISubroutineType(types: !13190)
!13190 = !{!131, !13003, !325}
!13191 = !{!13192, !13193}
!13192 = !DILocalVariable(name: "mutex", arg: 1, scope: !13188, file: !2196, line: 81, type: !13003)
!13193 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13188, file: !2196, line: 81, type: !325)
!13194 = !DILocation(line: 0, scope: !13188)
!13195 = !DILocation(line: 83, column: 13, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13188, file: !2196, line: 83, column: 6)
!13197 = !DILocation(line: 83, column: 25, scope: !13196)
!13198 = !DILocation(line: 83, column: 6, scope: !13196)
!13199 = !DILocation(line: 83, column: 30, scope: !13196)
!13200 = !DILocation(line: 83, column: 6, scope: !13188)
!13201 = !DILocation(line: 90, column: 10, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13196, file: !2196, line: 83, column: 43)
!13203 = !DILocation(line: 90, column: 3, scope: !13202)
!13204 = !DILocation(line: 93, column: 1, scope: !13188)
!13205 = distinct !DISubprogram(name: "z_waitq_head", scope: !12241, file: !12241, line: 52, type: !13206, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13208)
!13206 = !DISubroutineType(types: !13207)
!13207 = !{!2115, !2132}
!13208 = !{!13209}
!13209 = !DILocalVariable(name: "w", arg: 1, scope: !13205, file: !12241, line: 52, type: !2132)
!13210 = !DILocation(line: 0, scope: !13205)
!13211 = !DILocation(line: 54, column: 52, scope: !13205)
!13212 = !DILocation(line: 54, column: 28, scope: !13205)
!13213 = !DILocation(line: 54, column: 9, scope: !13205)
!13214 = !DILocation(line: 54, column: 2, scope: !13205)
!13215 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !13216, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13218)
!13216 = !DISubroutineType(types: !13217)
!13217 = !{!2100, !13032}
!13218 = !{!13219}
!13219 = !DILocalVariable(name: "list", arg: 1, scope: !13215, file: !146, line: 294, type: !13032)
!13220 = !DILocation(line: 0, scope: !13215)
!13221 = !DILocation(line: 296, column: 9, scope: !13215)
!13222 = !DILocation(line: 296, column: 49, scope: !13215)
!13223 = !DILocation(line: 296, column: 2, scope: !13215)
!13224 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !13225, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13227)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{!131, !13032}
!13227 = !{!13228}
!13228 = !DILocalVariable(name: "list", arg: 1, scope: !13224, file: !146, line: 266, type: !13032)
!13229 = !DILocation(line: 0, scope: !13224)
!13230 = !DILocation(line: 268, column: 15, scope: !13224)
!13231 = !DILocation(line: 268, column: 20, scope: !13224)
!13232 = !DILocation(line: 268, column: 2, scope: !13224)
!13233 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11922, file: !11922, line: 206, type: !13180, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13234)
!13234 = !{!13235, !13236}
!13235 = !DILocalVariable(name: "prio1", arg: 1, scope: !13233, file: !11922, line: 206, type: !103)
!13236 = !DILocalVariable(name: "prio2", arg: 2, scope: !13233, file: !11922, line: 206, type: !103)
!13237 = !DILocation(line: 0, scope: !13233)
!13238 = !DILocation(line: 208, column: 15, scope: !13233)
!13239 = !DILocation(line: 208, column: 2, scope: !13233)
!13240 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !11922, file: !11922, line: 186, type: !390, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13241)
!13241 = !{!13242}
!13242 = !DILocalVariable(name: "prio", arg: 1, scope: !13240, file: !11922, line: 186, type: !103)
!13243 = !DILocation(line: 0, scope: !13240)
!13244 = !DILocation(line: 188, column: 9, scope: !13240)
!13245 = !DILocation(line: 188, column: 2, scope: !13240)
!13246 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !11922, file: !11922, line: 181, type: !13247, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13249)
!13247 = !DISubroutineType(types: !13248)
!13248 = !{!131, !103}
!13249 = !{!13250}
!13250 = !DILocalVariable(name: "prio", arg: 1, scope: !13246, file: !11922, line: 181, type: !103)
!13251 = !DILocation(line: 0, scope: !13246)
!13252 = !DILocation(line: 183, column: 14, scope: !13246)
!13253 = !DILocation(line: 183, column: 2, scope: !13246)
!13254 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2196, file: !2196, line: 201, type: !13001, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13255)
!13255 = !{!13256, !13257, !13258, !13259}
!13256 = !DILocalVariable(name: "mutex", arg: 1, scope: !13254, file: !2196, line: 201, type: !13003)
!13257 = !DILocalVariable(name: "new_owner", scope: !13254, file: !2196, line: 203, type: !2115)
!13258 = !DILocalVariable(name: "key", scope: !13254, file: !2196, line: 242, type: !13053)
!13259 = !DILabel(scope: !13254, name: "k_mutex_unlock_return", file: !2196, line: 270)
!13260 = !DILocation(line: 0, scope: !13254)
!13261 = !DILocation(line: 209, column: 2, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13254, file: !2196, line: 209, column: 2)
!13263 = !DILocation(line: 209, column: 2, scope: !13254)
!13264 = !DILocation(line: 217, column: 2, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13254, file: !2196, line: 217, column: 2)
!13266 = !DILocation(line: 217, column: 2, scope: !13254)
!13267 = !DILocation(line: 237, column: 13, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13254, file: !2196, line: 237, column: 6)
!13269 = !DILocation(line: 237, column: 24, scope: !13268)
!13270 = !DILocation(line: 237, column: 6, scope: !13254)
!13271 = !DILocation(line: 238, column: 20, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13268, file: !2196, line: 237, column: 30)
!13273 = !DILocation(line: 239, column: 3, scope: !13272)
!13274 = !DILocation(line: 0, scope: !13064, inlinedAt: !13275)
!13275 = distinct !DILocation(line: 242, column: 25, scope: !13254)
!13276 = !DILocation(line: 55, column: 2, scope: !13073, inlinedAt: !13277)
!13277 = distinct !DILocation(line: 145, column: 10, scope: !13064, inlinedAt: !13275)
!13278 = !DILocation(line: 0, scope: !13073, inlinedAt: !13277)
!13279 = !DILocation(line: 244, column: 34, scope: !13254)
!13280 = !DILocation(line: 244, column: 2, scope: !13254)
!13281 = !DILocation(line: 247, column: 44, scope: !13254)
!13282 = !DILocation(line: 247, column: 14, scope: !13254)
!13283 = !DILocation(line: 249, column: 15, scope: !13254)
!13284 = !DILocation(line: 254, column: 16, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13254, file: !2196, line: 254, column: 6)
!13286 = !DILocation(line: 254, column: 6, scope: !13254)
!13287 = !DILocation(line: 260, column: 44, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13285, file: !2196, line: 254, column: 25)
!13289 = !DILocation(line: 260, column: 28, scope: !13288)
!13290 = !DILocation(line: 260, column: 26, scope: !13288)
!13291 = !DILocalVariable(name: "thread", arg: 1, scope: !13292, file: !11942, line: 65, type: !2115)
!13292 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11942, file: !11942, line: 65, type: !13293, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2097, retainedNodes: !13295)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{null, !2115, !32}
!13295 = !{!13291, !13296}
!13296 = !DILocalVariable(name: "value", arg: 2, scope: !13292, file: !11942, line: 65, type: !32)
!13297 = !DILocation(line: 0, scope: !13292, inlinedAt: !13298)
!13298 = distinct !DILocation(line: 261, column: 3, scope: !13288)
!13299 = !DILocation(line: 67, column: 15, scope: !13292, inlinedAt: !13298)
!13300 = !DILocation(line: 67, column: 33, scope: !13292, inlinedAt: !13298)
!13301 = !DILocation(line: 262, column: 3, scope: !13288)
!13302 = !DILocation(line: 263, column: 3, scope: !13288)
!13303 = !DILocation(line: 264, column: 2, scope: !13288)
!13304 = !DILocation(line: 265, column: 21, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13285, file: !2196, line: 264, column: 9)
!13306 = !DILocation(line: 0, scope: !13096, inlinedAt: !13307)
!13307 = distinct !DILocation(line: 266, column: 3, scope: !13305)
!13308 = !DILocation(line: 0, scope: !13104, inlinedAt: !13309)
!13309 = distinct !DILocation(line: 215, column: 2, scope: !13096, inlinedAt: !13307)
!13310 = !DILocation(line: 95, column: 2, scope: !13104, inlinedAt: !13309)
!13311 = !DILocation(line: 274, column: 1, scope: !13254)
!13312 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2301, file: !2301, line: 93, type: !13313, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13315)
!13313 = !DISubroutineType(types: !13314)
!13314 = !{!325, !2202, !2202}
!13315 = !{!13316, !13317, !13318, !13319}
!13316 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13312, file: !2301, line: 93, type: !2202)
!13317 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13312, file: !2301, line: 94, type: !2202)
!13318 = !DILocalVariable(name: "b1", scope: !13312, file: !2301, line: 97, type: !325)
!13319 = !DILocalVariable(name: "b2", scope: !13312, file: !2301, line: 98, type: !325)
!13320 = !DILocation(line: 0, scope: !13312)
!13321 = !DILocation(line: 97, column: 30, scope: !13312)
!13322 = !DILocation(line: 98, column: 30, scope: !13312)
!13323 = !DILocation(line: 100, column: 9, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13312, file: !2301, line: 100, column: 6)
!13325 = !DILocation(line: 100, column: 6, scope: !13312)
!13326 = !DILocation(line: 125, column: 1, scope: !13312)
!13327 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2301, file: !2301, line: 428, type: !13328, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13330)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{null, !2202}
!13330 = !{!13331}
!13331 = !DILocalVariable(name: "curr", arg: 1, scope: !13327, file: !2301, line: 428, type: !2202)
!13332 = !DILocation(line: 0, scope: !13327)
!13333 = !DILocation(line: 434, column: 6, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13327, file: !2301, line: 434, column: 6)
!13335 = !DILocation(line: 434, column: 23, scope: !13334)
!13336 = !DILocation(line: 434, column: 6, scope: !13327)
!13337 = !DILocation(line: 435, column: 50, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13334, file: !2301, line: 434, column: 29)
!13339 = !DILocation(line: 435, column: 48, scope: !13338)
!13340 = !DILocation(line: 435, column: 29, scope: !13338)
!13341 = !DILocation(line: 436, column: 24, scope: !13338)
!13342 = !DILocation(line: 436, column: 3, scope: !13338)
!13343 = !DILocation(line: 437, column: 2, scope: !13338)
!13344 = !DILocation(line: 438, column: 1, scope: !13327)
!13345 = distinct !DISubprogram(name: "slice_time", scope: !2301, file: !2301, line: 407, type: !13346, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13348)
!13346 = !DISubroutineType(types: !13347)
!13347 = !{!103, !2202}
!13348 = !{!13349, !13350}
!13349 = !DILocalVariable(name: "curr", arg: 1, scope: !13345, file: !2301, line: 407, type: !2202)
!13350 = !DILocalVariable(name: "ret", scope: !13345, file: !2301, line: 409, type: !103)
!13351 = !DILocation(line: 0, scope: !13345)
!13352 = !DILocation(line: 409, column: 12, scope: !13345)
!13353 = !DILocation(line: 416, column: 2, scope: !13345)
!13354 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2301, file: !2301, line: 440, type: !13355, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13357)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{null, !325, !103}
!13357 = !{!13358, !13359, !13360, !13366}
!13358 = !DILocalVariable(name: "slice", arg: 1, scope: !13354, file: !2301, line: 440, type: !325)
!13359 = !DILocalVariable(name: "prio", arg: 2, scope: !13354, file: !2301, line: 440, type: !103)
!13360 = !DILocalVariable(name: "__i", scope: !13361, file: !2301, line: 442, type: !13362)
!13361 = distinct !DILexicalBlock(scope: !13354, file: !2301, line: 442, column: 2)
!13362 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !13363)
!13363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !13364)
!13364 = !{!13365}
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13363, file: !244, line: 33, baseType: !103, size: 32)
!13366 = !DILocalVariable(name: "__key", scope: !13361, file: !2301, line: 442, type: !13362)
!13367 = !DILocation(line: 0, scope: !13354)
!13368 = !DILocation(line: 0, scope: !13361)
!13369 = !DILocalVariable(name: "l", arg: 1, scope: !13370, file: !244, line: 136, type: !13373)
!13370 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !13371, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13374)
!13371 = !DISubroutineType(types: !13372)
!13372 = !{!13362, !13373}
!13373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!13374 = !{!13369, !13375}
!13375 = !DILocalVariable(name: "k", scope: !13370, file: !244, line: 139, type: !13362)
!13376 = !DILocation(line: 0, scope: !13370, inlinedAt: !13377)
!13377 = distinct !DILocation(line: 442, column: 2, scope: !13361)
!13378 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13383)
!13379 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13380)
!13380 = !{!13381, !13382}
!13381 = !DILocalVariable(name: "key", scope: !13379, file: !7161, line: 44, type: !32)
!13382 = !DILocalVariable(name: "tmp", scope: !13379, file: !7161, line: 53, type: !32)
!13383 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13377)
!13384 = !{i64 2886331}
!13385 = !DILocation(line: 0, scope: !13379, inlinedAt: !13383)
!13386 = !DILocation(line: 443, column: 29, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !2301, line: 442, column: 26)
!13388 = distinct !DILexicalBlock(scope: !13361, file: !2301, line: 442, column: 2)
!13389 = !DILocation(line: 444, column: 17, scope: !13387)
!13390 = !DILocation(line: 445, column: 51, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13387, file: !2301, line: 445, column: 7)
!13392 = !DILocation(line: 445, column: 7, scope: !13387)
!13393 = !DILocation(line: 0, scope: !13387)
!13394 = !DILocation(line: 451, column: 18, scope: !13387)
!13395 = !DILocation(line: 452, column: 3, scope: !13387)
!13396 = !DILocalVariable(name: "key", arg: 2, scope: !13397, file: !244, line: 190, type: !13362)
!13397 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !13398, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13400)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{null, !13373, !13362}
!13400 = !{!13401, !13396}
!13401 = !DILocalVariable(name: "l", arg: 1, scope: !13397, file: !244, line: 189, type: !13373)
!13402 = !DILocation(line: 0, scope: !13397, inlinedAt: !13403)
!13403 = distinct !DILocation(line: 442, column: 2, scope: !13388)
!13404 = !DILocalVariable(name: "key", arg: 1, scope: !13405, file: !7161, line: 84, type: !32)
!13405 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13406)
!13406 = !{!13404}
!13407 = !DILocation(line: 0, scope: !13405, inlinedAt: !13408)
!13408 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !13403)
!13409 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !13408)
!13410 = !{i64 2887148}
!13411 = !DILocation(line: 454, column: 1, scope: !13354)
!13412 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3399, file: !3399, line: 389, type: !13413, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13415)
!13413 = !DISubroutineType(types: !13414)
!13414 = !{!108, !108}
!13415 = !{!13416}
!13416 = !DILocalVariable(name: "t", arg: 1, scope: !13412, file: !3399, line: 389, type: !108)
!13417 = !DILocation(line: 0, scope: !13412)
!13418 = !DILocalVariable(name: "t", arg: 1, scope: !13419, file: !3399, line: 102, type: !109)
!13419 = distinct !DISubprogram(name: "z_tmcvt", scope: !3399, file: !3399, line: 102, type: !3425, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13420)
!13420 = !{!13418, !13421, !13422, !13423, !13424, !13425, !13426, !13427, !13428, !13429, !13430}
!13421 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13419, file: !3399, line: 102, type: !108)
!13422 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13419, file: !3399, line: 103, type: !108)
!13423 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13419, file: !3399, line: 103, type: !131)
!13424 = !DILocalVariable(name: "result32", arg: 5, scope: !13419, file: !3399, line: 104, type: !131)
!13425 = !DILocalVariable(name: "round_up", arg: 6, scope: !13419, file: !3399, line: 104, type: !131)
!13426 = !DILocalVariable(name: "round_off", arg: 7, scope: !13419, file: !3399, line: 105, type: !131)
!13427 = !DILocalVariable(name: "mul_ratio", scope: !13419, file: !3399, line: 107, type: !131)
!13428 = !DILocalVariable(name: "div_ratio", scope: !13419, file: !3399, line: 109, type: !131)
!13429 = !DILocalVariable(name: "off", scope: !13419, file: !3399, line: 116, type: !109)
!13430 = !DILocalVariable(name: "rdivisor", scope: !13431, file: !3399, line: 119, type: !108)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !3399, line: 118, column: 18)
!13432 = distinct !DILexicalBlock(scope: !13419, file: !3399, line: 118, column: 6)
!13433 = !DILocation(line: 0, scope: !13419, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 392, column: 9, scope: !13412)
!13435 = !DILocation(line: 143, column: 25, scope: !13436, inlinedAt: !13434)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !3399, line: 142, column: 17)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !3399, line: 142, column: 7)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !3399, line: 141, column: 24)
!13439 = distinct !DILexicalBlock(scope: !13440, file: !3399, line: 141, column: 13)
!13440 = distinct !DILexicalBlock(scope: !13419, file: !3399, line: 134, column: 6)
!13441 = !DILocation(line: 392, column: 2, scope: !13412)
!13442 = distinct !DISubprogram(name: "z_time_slice", scope: !2301, file: !2301, line: 502, type: !11879, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13443)
!13443 = !{!13444, !13445}
!13444 = !DILocalVariable(name: "ticks", arg: 1, scope: !13442, file: !2301, line: 502, type: !103)
!13445 = !DILocalVariable(name: "key", scope: !13442, file: !2301, line: 511, type: !13362)
!13446 = !DILocation(line: 0, scope: !13442)
!13447 = !DILocation(line: 0, scope: !13370, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 511, column: 25, scope: !13442)
!13449 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13448)
!13451 = !DILocation(line: 0, scope: !13379, inlinedAt: !13450)
!13452 = !DILocation(line: 514, column: 6, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13442, file: !2301, line: 514, column: 6)
!13454 = !DILocation(line: 514, column: 25, scope: !13453)
!13455 = !DILocation(line: 514, column: 22, scope: !13453)
!13456 = !DILocation(line: 514, column: 6, scope: !13442)
!13457 = !DILocation(line: 515, column: 3, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13453, file: !2301, line: 514, column: 35)
!13459 = !DILocation(line: 0, scope: !13397, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 516, column: 3, scope: !13458)
!13461 = !DILocation(line: 0, scope: !13405, inlinedAt: !13462)
!13462 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !13460)
!13463 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !13462)
!13464 = !DILocation(line: 517, column: 3, scope: !13458)
!13465 = !DILocation(line: 519, column: 18, scope: !13442)
!13466 = !DILocation(line: 522, column: 6, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13442, file: !2301, line: 522, column: 6)
!13468 = !DILocation(line: 522, column: 27, scope: !13467)
!13469 = !DILocation(line: 522, column: 30, scope: !13467)
!13470 = !DILocation(line: 522, column: 6, scope: !13442)
!13471 = !DILocation(line: 523, column: 30, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !2301, line: 523, column: 7)
!13473 = distinct !DILexicalBlock(scope: !13467, file: !2301, line: 522, column: 51)
!13474 = !DILocation(line: 523, column: 13, scope: !13472)
!13475 = !DILocation(line: 523, column: 7, scope: !13473)
!13476 = !DILocation(line: 530, column: 10, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13472, file: !2301, line: 523, column: 43)
!13478 = !DILocation(line: 531, column: 3, scope: !13477)
!13479 = !DILocation(line: 532, column: 30, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13472, file: !2301, line: 531, column: 10)
!13481 = !DILocation(line: 535, column: 29, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13467, file: !2301, line: 534, column: 9)
!13483 = !DILocation(line: 0, scope: !13397, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 537, column: 2, scope: !13442)
!13485 = !DILocation(line: 0, scope: !13405, inlinedAt: !13486)
!13486 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !13484)
!13487 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !13486)
!13488 = !DILocation(line: 538, column: 1, scope: !13442)
!13489 = distinct !DISubprogram(name: "sliceable", scope: !2301, file: !2301, line: 468, type: !13490, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13492)
!13490 = !DISubroutineType(types: !13491)
!13491 = !{!131, !2202}
!13492 = !{!13493, !13494}
!13493 = !DILocalVariable(name: "thread", arg: 1, scope: !13489, file: !2301, line: 468, type: !2202)
!13494 = !DILocalVariable(name: "ret", scope: !13489, file: !2301, line: 470, type: !131)
!13495 = !DILocation(line: 0, scope: !13489)
!13496 = !DILocation(line: 470, column: 13, scope: !13489)
!13497 = !DILocation(line: 471, column: 3, scope: !13489)
!13498 = !DILocation(line: 471, column: 7, scope: !13489)
!13499 = !DILocation(line: 472, column: 3, scope: !13489)
!13500 = !DILocation(line: 472, column: 37, scope: !13489)
!13501 = !DILocation(line: 472, column: 24, scope: !13489)
!13502 = !DILocation(line: 472, column: 43, scope: !13489)
!13503 = !DILocation(line: 472, column: 7, scope: !13489)
!13504 = !DILocation(line: 473, column: 3, scope: !13489)
!13505 = !DILocation(line: 473, column: 7, scope: !13489)
!13506 = !DILocation(line: 473, column: 6, scope: !13489)
!13507 = !DILocation(line: 479, column: 2, scope: !13489)
!13508 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2301, file: !2301, line: 482, type: !13509, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13511)
!13509 = !DISubroutineType(types: !13510)
!13510 = !{!13362, !13362}
!13511 = !{!13512, !13513}
!13512 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13508, file: !2301, line: 482, type: !13362)
!13513 = !DILocalVariable(name: "curr", scope: !13508, file: !2301, line: 484, type: !2202)
!13514 = !DILocation(line: 0, scope: !13508)
!13515 = !DILocation(line: 484, column: 26, scope: !13508)
!13516 = !DILocation(line: 493, column: 7, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13508, file: !2301, line: 493, column: 6)
!13518 = !DILocation(line: 493, column: 6, scope: !13508)
!13519 = !DILocation(line: 494, column: 3, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13517, file: !2301, line: 493, column: 49)
!13521 = !DILocation(line: 495, column: 2, scope: !13520)
!13522 = !DILocation(line: 496, column: 2, scope: !13508)
!13523 = !DILocation(line: 499, column: 1, scope: !13508)
!13524 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11922, file: !11922, line: 106, type: !13490, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13525)
!13525 = !{!13526, !13527}
!13526 = !DILocalVariable(name: "thread", arg: 1, scope: !13524, file: !11922, line: 106, type: !2202)
!13527 = !DILocalVariable(name: "state", scope: !13524, file: !11922, line: 108, type: !185)
!13528 = !DILocation(line: 0, scope: !13524)
!13529 = !DILocation(line: 108, column: 31, scope: !13524)
!13530 = !DILocation(line: 110, column: 16, scope: !13524)
!13531 = !DILocation(line: 111, column: 41, scope: !13524)
!13532 = !DILocation(line: 110, column: 2, scope: !13524)
!13533 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2301, file: !2301, line: 393, type: !13328, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13534)
!13534 = !{!13535}
!13535 = !DILocalVariable(name: "thread", arg: 1, scope: !13533, file: !2301, line: 393, type: !2202)
!13536 = !DILocation(line: 0, scope: !13533)
!13537 = !DILocation(line: 395, column: 6, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13533, file: !2301, line: 395, column: 6)
!13539 = !DILocation(line: 395, column: 6, scope: !13533)
!13540 = !DILocalVariable(name: "thread", arg: 1, scope: !13541, file: !2301, line: 264, type: !2202)
!13541 = distinct !DISubprogram(name: "dequeue_thread", scope: !2301, file: !2301, line: 264, type: !13328, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13542)
!13542 = !{!13540}
!13543 = !DILocation(line: 0, scope: !13541, inlinedAt: !13544)
!13544 = distinct !DILocation(line: 396, column: 3, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13538, file: !2301, line: 395, column: 34)
!13546 = !DILocation(line: 266, column: 15, scope: !13541, inlinedAt: !13544)
!13547 = !DILocation(line: 266, column: 28, scope: !13541, inlinedAt: !13544)
!13548 = !DILocalVariable(name: "thread", arg: 1, scope: !13549, file: !2301, line: 232, type: !2202)
!13549 = distinct !DISubprogram(name: "runq_remove", scope: !2301, file: !2301, line: 232, type: !13328, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13550)
!13550 = !{!13548}
!13551 = !DILocation(line: 0, scope: !13549, inlinedAt: !13552)
!13552 = distinct !DILocation(line: 268, column: 3, scope: !13553, inlinedAt: !13544)
!13553 = distinct !DILexicalBlock(scope: !13554, file: !2301, line: 267, column: 35)
!13554 = distinct !DILexicalBlock(scope: !13541, file: !2301, line: 267, column: 6)
!13555 = !DILocation(line: 234, column: 2, scope: !13549, inlinedAt: !13552)
!13556 = !DILocation(line: 397, column: 2, scope: !13545)
!13557 = !DILocalVariable(name: "thread", arg: 1, scope: !13558, file: !2301, line: 250, type: !2202)
!13558 = distinct !DISubprogram(name: "queue_thread", scope: !2301, file: !2301, line: 250, type: !13328, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13559)
!13559 = !{!13557}
!13560 = !DILocation(line: 0, scope: !13558, inlinedAt: !13561)
!13561 = distinct !DILocation(line: 398, column: 2, scope: !13533)
!13562 = !DILocation(line: 252, column: 15, scope: !13558, inlinedAt: !13561)
!13563 = !DILocation(line: 252, column: 28, scope: !13558, inlinedAt: !13561)
!13564 = !DILocalVariable(name: "thread", arg: 1, scope: !13565, file: !2301, line: 227, type: !2202)
!13565 = distinct !DISubprogram(name: "runq_add", scope: !2301, file: !2301, line: 227, type: !13328, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13566)
!13566 = !{!13564}
!13567 = !DILocation(line: 0, scope: !13565, inlinedAt: !13568)
!13568 = distinct !DILocation(line: 254, column: 3, scope: !13569, inlinedAt: !13561)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !2301, line: 253, column: 35)
!13570 = distinct !DILexicalBlock(scope: !13558, file: !2301, line: 253, column: 6)
!13571 = !DILocalVariable(name: "pq", arg: 1, scope: !13572, file: !2301, line: 181, type: !13575)
!13572 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2301, file: !2301, line: 181, type: !13573, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13576)
!13573 = !DISubroutineType(types: !13574)
!13574 = !{null, !13575, !2202}
!13575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!13576 = !{!13571, !13577, !13578}
!13577 = !DILocalVariable(name: "thread", arg: 2, scope: !13572, file: !2301, line: 182, type: !2202)
!13578 = !DILocalVariable(name: "t", scope: !13572, file: !2301, line: 184, type: !2202)
!13579 = !DILocation(line: 0, scope: !13572, inlinedAt: !13580)
!13580 = distinct !DILocation(line: 229, column: 2, scope: !13565, inlinedAt: !13568)
!13581 = !DILocation(line: 188, column: 2, scope: !13582, inlinedAt: !13580)
!13582 = distinct !DILexicalBlock(scope: !13572, file: !2301, line: 188, column: 2)
!13583 = !DILocation(line: 188, column: 2, scope: !13584, inlinedAt: !13580)
!13584 = distinct !DILexicalBlock(scope: !13582, file: !2301, line: 188, column: 2)
!13585 = !DILocation(line: 0, scope: !13582, inlinedAt: !13580)
!13586 = !DILocation(line: 189, column: 7, scope: !13587, inlinedAt: !13580)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !2301, line: 189, column: 7)
!13588 = distinct !DILexicalBlock(scope: !13584, file: !2301, line: 188, column: 56)
!13589 = !DILocation(line: 189, column: 35, scope: !13587, inlinedAt: !13580)
!13590 = !DILocation(line: 189, column: 7, scope: !13588, inlinedAt: !13580)
!13591 = !DILocation(line: 191, column: 21, scope: !13592, inlinedAt: !13580)
!13592 = distinct !DILexicalBlock(scope: !13587, file: !2301, line: 189, column: 40)
!13593 = !DILocation(line: 190, column: 4, scope: !13592, inlinedAt: !13580)
!13594 = !DILocation(line: 192, column: 4, scope: !13592, inlinedAt: !13580)
!13595 = distinct !{!13595, !13581, !13596}
!13596 = !DILocation(line: 194, column: 2, scope: !13582, inlinedAt: !13580)
!13597 = !DILocation(line: 196, column: 37, scope: !13572, inlinedAt: !13580)
!13598 = !DILocation(line: 196, column: 2, scope: !13572, inlinedAt: !13580)
!13599 = !DILocation(line: 197, column: 1, scope: !13572, inlinedAt: !13580)
!13600 = !DILocation(line: 399, column: 25, scope: !13533)
!13601 = !DILocation(line: 399, column: 22, scope: !13533)
!13602 = !DILocation(line: 399, column: 2, scope: !13533)
!13603 = !DILocation(line: 400, column: 1, scope: !13533)
!13604 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11922, file: !11922, line: 136, type: !13490, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13605)
!13605 = !{!13606}
!13606 = !DILocalVariable(name: "thread", arg: 1, scope: !13604, file: !11922, line: 136, type: !2202)
!13607 = !DILocation(line: 0, scope: !13604)
!13608 = !DILocation(line: 138, column: 9, scope: !13604)
!13609 = !DILocation(line: 138, column: 2, scope: !13604)
!13610 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2301, file: !2301, line: 1137, type: !13573, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13611)
!13611 = !{!13612, !13613}
!13612 = !DILocalVariable(name: "pq", arg: 1, scope: !13610, file: !2301, line: 1137, type: !13575)
!13613 = !DILocalVariable(name: "thread", arg: 2, scope: !13610, file: !2301, line: 1137, type: !2202)
!13614 = !DILocation(line: 0, scope: !13610)
!13615 = !DILocation(line: 1141, column: 33, scope: !13610)
!13616 = !DILocation(line: 1141, column: 2, scope: !13610)
!13617 = !DILocation(line: 1142, column: 1, scope: !13610)
!13618 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !13619, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13621)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{!2297, !13575}
!13621 = !{!13622}
!13622 = !DILocalVariable(name: "list", arg: 1, scope: !13618, file: !146, line: 294, type: !13575)
!13623 = !DILocation(line: 0, scope: !13618)
!13624 = !DILocation(line: 296, column: 9, scope: !13618)
!13625 = !DILocation(line: 296, column: 49, scope: !13618)
!13626 = !DILocation(line: 296, column: 2, scope: !13618)
!13627 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !13628, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13630)
!13628 = !DISubroutineType(types: !13629)
!13629 = !{null, !2297, !2297}
!13630 = !{!13631, !13632, !13633}
!13631 = !DILocalVariable(name: "successor", arg: 1, scope: !13627, file: !146, line: 443, type: !2297)
!13632 = !DILocalVariable(name: "node", arg: 2, scope: !13627, file: !146, line: 443, type: !2297)
!13633 = !DILocalVariable(name: "prev", scope: !13627, file: !146, line: 445, type: !13634)
!13634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2297)
!13635 = !DILocation(line: 0, scope: !13627)
!13636 = !DILocation(line: 445, column: 39, scope: !13627)
!13637 = !DILocation(line: 447, column: 8, scope: !13627)
!13638 = !DILocation(line: 447, column: 13, scope: !13627)
!13639 = !DILocation(line: 448, column: 8, scope: !13627)
!13640 = !DILocation(line: 448, column: 13, scope: !13627)
!13641 = !DILocation(line: 449, column: 8, scope: !13627)
!13642 = !DILocation(line: 449, column: 13, scope: !13627)
!13643 = !DILocation(line: 450, column: 18, scope: !13627)
!13644 = !DILocation(line: 451, column: 1, scope: !13627)
!13645 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !13646, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13648)
!13646 = !DISubroutineType(types: !13647)
!13647 = !{!2297, !13575, !2297}
!13648 = !{!13649, !13650}
!13649 = !DILocalVariable(name: "list", arg: 1, scope: !13645, file: !146, line: 341, type: !13575)
!13650 = !DILocalVariable(name: "node", arg: 2, scope: !13645, file: !146, line: 342, type: !2297)
!13651 = !DILocation(line: 0, scope: !13645)
!13652 = !DILocation(line: 344, column: 15, scope: !13645)
!13653 = !DILocation(line: 344, column: 9, scope: !13645)
!13654 = !DILocation(line: 344, column: 26, scope: !13645)
!13655 = !DILocation(line: 344, column: 2, scope: !13645)
!13656 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !13657, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13659)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{null, !13575, !2297}
!13659 = !{!13660, !13661, !13662}
!13660 = !DILocalVariable(name: "list", arg: 1, scope: !13656, file: !146, line: 404, type: !13575)
!13661 = !DILocalVariable(name: "node", arg: 2, scope: !13656, file: !146, line: 404, type: !2297)
!13662 = !DILocalVariable(name: "tail", scope: !13656, file: !146, line: 406, type: !13634)
!13663 = !DILocation(line: 0, scope: !13656)
!13664 = !DILocation(line: 406, column: 34, scope: !13656)
!13665 = !DILocation(line: 408, column: 8, scope: !13656)
!13666 = !DILocation(line: 408, column: 13, scope: !13656)
!13667 = !DILocation(line: 409, column: 8, scope: !13656)
!13668 = !DILocation(line: 409, column: 13, scope: !13656)
!13669 = !DILocation(line: 411, column: 8, scope: !13656)
!13670 = !DILocation(line: 411, column: 13, scope: !13656)
!13671 = !DILocation(line: 412, column: 13, scope: !13656)
!13672 = !DILocation(line: 413, column: 1, scope: !13656)
!13673 = distinct !DISubprogram(name: "update_cache", scope: !2301, file: !2301, line: 559, type: !11879, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13674)
!13674 = !{!13675, !13676}
!13675 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13673, file: !2301, line: 559, type: !103)
!13676 = !DILocalVariable(name: "thread", scope: !13673, file: !2301, line: 562, type: !2202)
!13677 = !DILocation(line: 0, scope: !13673)
!13678 = !DILocation(line: 239, column: 9, scope: !13679, inlinedAt: !13682)
!13679 = distinct !DISubprogram(name: "runq_best", scope: !2301, file: !2301, line: 237, type: !13680, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!13680 = !DISubroutineType(types: !13681)
!13681 = !{!2202}
!13682 = distinct !DILocation(line: 314, column: 28, scope: !13683, inlinedAt: !13686)
!13683 = distinct !DISubprogram(name: "next_up", scope: !2301, file: !2301, line: 312, type: !13680, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13684)
!13684 = !{!13685}
!13685 = !DILocalVariable(name: "thread", scope: !13683, file: !2301, line: 314, type: !2202)
!13686 = distinct !DILocation(line: 562, column: 28, scope: !13673)
!13687 = !DILocation(line: 0, scope: !13683, inlinedAt: !13686)
!13688 = !DILocation(line: 340, column: 17, scope: !13683, inlinedAt: !13686)
!13689 = !DILocation(line: 340, column: 9, scope: !13683, inlinedAt: !13686)
!13690 = !DILocalVariable(name: "thread", arg: 1, scope: !13691, file: !2301, line: 127, type: !2202)
!13691 = distinct !DISubprogram(name: "should_preempt", scope: !2301, file: !2301, line: 127, type: !13692, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13694)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!131, !2202, !103}
!13694 = !{!13690, !13695}
!13695 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13691, file: !2301, line: 128, type: !103)
!13696 = !DILocation(line: 0, scope: !13691, inlinedAt: !13697)
!13697 = distinct !DILocation(line: 564, column: 6, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13673, file: !2301, line: 564, column: 6)
!13699 = !DILocation(line: 133, column: 17, scope: !13700, inlinedAt: !13697)
!13700 = distinct !DILexicalBlock(scope: !13691, file: !2301, line: 133, column: 6)
!13701 = !DILocation(line: 0, scope: !13698)
!13702 = !DILocation(line: 133, column: 6, scope: !13691, inlinedAt: !13697)
!13703 = !DILocation(line: 140, column: 6, scope: !13704, inlinedAt: !13697)
!13704 = distinct !DILexicalBlock(scope: !13691, file: !2301, line: 140, column: 6)
!13705 = !DILocation(line: 140, column: 6, scope: !13691, inlinedAt: !13697)
!13706 = !DILocation(line: 150, column: 9, scope: !13707, inlinedAt: !13697)
!13707 = distinct !DILexicalBlock(scope: !13691, file: !2301, line: 149, column: 6)
!13708 = !DILocation(line: 149, column: 6, scope: !13691, inlinedAt: !13697)
!13709 = !DILocation(line: 157, column: 6, scope: !13710, inlinedAt: !13697)
!13710 = distinct !DILexicalBlock(scope: !13691, file: !2301, line: 157, column: 6)
!13711 = !DILocation(line: 564, column: 6, scope: !13673)
!13712 = !DILocation(line: 566, column: 14, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13714, file: !2301, line: 566, column: 7)
!13714 = distinct !DILexicalBlock(scope: !13698, file: !2301, line: 564, column: 42)
!13715 = !DILocation(line: 566, column: 7, scope: !13714)
!13716 = !DILocation(line: 567, column: 4, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13713, file: !2301, line: 566, column: 27)
!13718 = !DILocation(line: 568, column: 3, scope: !13717)
!13719 = !DILocation(line: 585, column: 1, scope: !13673)
!13720 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2301, file: !2301, line: 1144, type: !13721, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13723)
!13721 = !DISubroutineType(types: !13722)
!13722 = !{!2202, !13575}
!13723 = !{!13724, !13725, !13726}
!13724 = !DILocalVariable(name: "pq", arg: 1, scope: !13720, file: !2301, line: 1144, type: !13575)
!13725 = !DILocalVariable(name: "thread", scope: !13720, file: !2301, line: 1146, type: !2202)
!13726 = !DILocalVariable(name: "n", scope: !13720, file: !2301, line: 1147, type: !2297)
!13727 = !DILocation(line: 0, scope: !13720)
!13728 = !DILocation(line: 1147, column: 19, scope: !13720)
!13729 = !DILocation(line: 1152, column: 2, scope: !13720)
!13730 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11922, file: !11922, line: 115, type: !13490, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13731)
!13731 = !{!13732}
!13732 = !DILocalVariable(name: "thread", arg: 1, scope: !13730, file: !11922, line: 115, type: !2202)
!13733 = !DILocation(line: 0, scope: !13730)
!13734 = !DILocation(line: 117, column: 46, scope: !13730)
!13735 = !DILocation(line: 117, column: 10, scope: !13730)
!13736 = !DILocation(line: 117, column: 9, scope: !13730)
!13737 = !DILocation(line: 117, column: 2, scope: !13730)
!13738 = distinct !DISubprogram(name: "is_preempt", scope: !2301, file: !2301, line: 62, type: !13346, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13739)
!13739 = !{!13740}
!13740 = !DILocalVariable(name: "thread", arg: 1, scope: !13738, file: !2301, line: 62, type: !2202)
!13741 = !DILocation(line: 0, scope: !13738)
!13742 = !DILocation(line: 65, column: 22, scope: !13738)
!13743 = !DILocation(line: 65, column: 30, scope: !13738)
!13744 = !DILocation(line: 65, column: 2, scope: !13738)
!13745 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12293, file: !12293, line: 35, type: !13746, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13750)
!13746 = !DISubroutineType(types: !13747)
!13747 = !{!131, !13748}
!13748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13749, size: 32)
!13749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2253)
!13750 = !{!13751}
!13751 = !DILocalVariable(name: "to", arg: 1, scope: !13745, file: !12293, line: 35, type: !13748)
!13752 = !DILocation(line: 0, scope: !13745)
!13753 = !DILocation(line: 37, column: 35, scope: !13745)
!13754 = !DILocation(line: 37, column: 10, scope: !13745)
!13755 = !DILocation(line: 37, column: 9, scope: !13745)
!13756 = !DILocation(line: 37, column: 2, scope: !13745)
!13757 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !13758, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13762)
!13758 = !DISubroutineType(types: !13759)
!13759 = !{!131, !13760}
!13760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13761, size: 32)
!13761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2212)
!13762 = !{!13763}
!13763 = !DILocalVariable(name: "node", arg: 1, scope: !13757, file: !146, line: 225, type: !13760)
!13764 = !DILocation(line: 0, scope: !13757)
!13765 = !DILocation(line: 227, column: 15, scope: !13757)
!13766 = !DILocation(line: 227, column: 20, scope: !13757)
!13767 = !DILocation(line: 227, column: 2, scope: !13757)
!13768 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !13646, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13769)
!13769 = !{!13770, !13771}
!13770 = !DILocalVariable(name: "list", arg: 1, scope: !13768, file: !146, line: 325, type: !13575)
!13771 = !DILocalVariable(name: "node", arg: 2, scope: !13768, file: !146, line: 326, type: !2297)
!13772 = !DILocation(line: 0, scope: !13768)
!13773 = !DILocation(line: 328, column: 24, scope: !13768)
!13774 = !DILocation(line: 328, column: 15, scope: !13768)
!13775 = !DILocation(line: 328, column: 9, scope: !13768)
!13776 = !DILocation(line: 328, column: 45, scope: !13768)
!13777 = !DILocation(line: 328, column: 2, scope: !13768)
!13778 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !13779, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13781)
!13779 = !DISubroutineType(types: !13780)
!13780 = !{!131, !13575}
!13781 = !{!13782}
!13782 = !DILocalVariable(name: "list", arg: 1, scope: !13778, file: !146, line: 266, type: !13575)
!13783 = !DILocation(line: 0, scope: !13778)
!13784 = !DILocation(line: 268, column: 15, scope: !13778)
!13785 = !DILocation(line: 268, column: 20, scope: !13778)
!13786 = !DILocation(line: 268, column: 2, scope: !13778)
!13787 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !13788, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13790)
!13788 = !DISubroutineType(types: !13789)
!13789 = !{null, !2297}
!13790 = !{!13791, !13792, !13793}
!13791 = !DILocalVariable(name: "node", arg: 1, scope: !13787, file: !146, line: 496, type: !2297)
!13792 = !DILocalVariable(name: "prev", scope: !13787, file: !146, line: 498, type: !13634)
!13793 = !DILocalVariable(name: "next", scope: !13787, file: !146, line: 499, type: !13634)
!13794 = !DILocation(line: 0, scope: !13787)
!13795 = !DILocation(line: 498, column: 34, scope: !13787)
!13796 = !DILocation(line: 499, column: 34, scope: !13787)
!13797 = !DILocation(line: 501, column: 8, scope: !13787)
!13798 = !DILocation(line: 501, column: 13, scope: !13787)
!13799 = !DILocation(line: 502, column: 8, scope: !13787)
!13800 = !DILocation(line: 502, column: 13, scope: !13787)
!13801 = !DILocation(line: 503, column: 2, scope: !13787)
!13802 = !DILocation(line: 504, column: 1, scope: !13787)
!13803 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !13788, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13804)
!13804 = !{!13805}
!13805 = !DILocalVariable(name: "node", arg: 1, scope: !13803, file: !146, line: 211, type: !2297)
!13806 = !DILocation(line: 0, scope: !13803)
!13807 = !DILocation(line: 213, column: 8, scope: !13803)
!13808 = !DILocation(line: 213, column: 13, scope: !13803)
!13809 = !DILocation(line: 214, column: 8, scope: !13803)
!13810 = !DILocation(line: 214, column: 13, scope: !13803)
!13811 = !DILocation(line: 215, column: 1, scope: !13803)
!13812 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11922, file: !11922, line: 131, type: !13813, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13815)
!13813 = !DISubroutineType(types: !13814)
!13814 = !{!131, !2202, !108}
!13815 = !{!13816, !13817}
!13816 = !DILocalVariable(name: "thread", arg: 1, scope: !13812, file: !11922, line: 131, type: !2202)
!13817 = !DILocalVariable(name: "state", arg: 2, scope: !13812, file: !11922, line: 131, type: !108)
!13818 = !DILocation(line: 0, scope: !13812)
!13819 = !DILocation(line: 133, column: 23, scope: !13812)
!13820 = !DILocation(line: 133, column: 45, scope: !13812)
!13821 = !DILocation(line: 133, column: 2, scope: !13812)
!13822 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11922, file: !11922, line: 211, type: !13180, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13823)
!13823 = !{!13824, !13825}
!13824 = !DILocalVariable(name: "prio", arg: 1, scope: !13822, file: !11922, line: 211, type: !103)
!13825 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13822, file: !11922, line: 211, type: !103)
!13826 = !DILocation(line: 0, scope: !13822)
!13827 = !DILocation(line: 213, column: 9, scope: !13822)
!13828 = !DILocation(line: 213, column: 2, scope: !13822)
!13829 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11922, file: !11922, line: 83, type: !13490, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13830)
!13830 = !{!13831}
!13831 = !DILocalVariable(name: "thread", arg: 1, scope: !13829, file: !11922, line: 83, type: !2202)
!13832 = !DILocation(line: 0, scope: !13829)
!13833 = !DILocation(line: 89, column: 16, scope: !13829)
!13834 = !DILocation(line: 89, column: 2, scope: !13829)
!13835 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11922, file: !11922, line: 206, type: !13180, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13836)
!13836 = !{!13837, !13838}
!13837 = !DILocalVariable(name: "prio1", arg: 1, scope: !13835, file: !11922, line: 206, type: !103)
!13838 = !DILocalVariable(name: "prio2", arg: 2, scope: !13835, file: !11922, line: 206, type: !103)
!13839 = !DILocation(line: 0, scope: !13835)
!13840 = !DILocation(line: 208, column: 15, scope: !13835)
!13841 = !DILocation(line: 208, column: 2, scope: !13835)
!13842 = distinct !DISubprogram(name: "z_ready_thread", scope: !2301, file: !2301, line: 635, type: !13328, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13843)
!13843 = !{!13844, !13845, !13847}
!13844 = !DILocalVariable(name: "thread", arg: 1, scope: !13842, file: !2301, line: 635, type: !2202)
!13845 = !DILocalVariable(name: "__i", scope: !13846, file: !2301, line: 637, type: !13362)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !2301, line: 637, column: 2)
!13847 = !DILocalVariable(name: "__key", scope: !13846, file: !2301, line: 637, type: !13362)
!13848 = !DILocation(line: 0, scope: !13842)
!13849 = !DILocation(line: 0, scope: !13846)
!13850 = !DILocation(line: 0, scope: !13370, inlinedAt: !13851)
!13851 = distinct !DILocation(line: 637, column: 2, scope: !13846)
!13852 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13853)
!13853 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13851)
!13854 = !DILocation(line: 0, scope: !13379, inlinedAt: !13853)
!13855 = !DILocation(line: 639, column: 4, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13857, file: !2301, line: 638, column: 41)
!13857 = distinct !DILexicalBlock(scope: !13858, file: !2301, line: 638, column: 7)
!13858 = distinct !DILexicalBlock(scope: !13859, file: !2301, line: 637, column: 26)
!13859 = distinct !DILexicalBlock(scope: !13846, file: !2301, line: 637, column: 2)
!13860 = !DILocation(line: 0, scope: !13397, inlinedAt: !13861)
!13861 = distinct !DILocation(line: 637, column: 2, scope: !13859)
!13862 = !DILocation(line: 0, scope: !13405, inlinedAt: !13863)
!13863 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !13861)
!13864 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !13863)
!13865 = !DILocation(line: 642, column: 1, scope: !13842)
!13866 = distinct !DISubprogram(name: "ready_thread", scope: !2301, file: !2301, line: 617, type: !13328, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13867)
!13867 = !{!13868}
!13868 = !DILocalVariable(name: "thread", arg: 1, scope: !13866, file: !2301, line: 617, type: !2202)
!13869 = !DILocation(line: 0, scope: !13866)
!13870 = !DILocation(line: 626, column: 7, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13866, file: !2301, line: 626, column: 6)
!13872 = !DILocation(line: 626, column: 34, scope: !13871)
!13873 = !DILocation(line: 626, column: 37, scope: !13871)
!13874 = !DILocation(line: 626, column: 6, scope: !13866)
!13875 = !DILocation(line: 0, scope: !13558, inlinedAt: !13876)
!13876 = distinct !DILocation(line: 629, column: 3, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13871, file: !2301, line: 626, column: 64)
!13878 = !DILocation(line: 252, column: 15, scope: !13558, inlinedAt: !13876)
!13879 = !DILocation(line: 252, column: 28, scope: !13558, inlinedAt: !13876)
!13880 = !DILocation(line: 0, scope: !13565, inlinedAt: !13881)
!13881 = distinct !DILocation(line: 254, column: 3, scope: !13569, inlinedAt: !13876)
!13882 = !DILocation(line: 0, scope: !13572, inlinedAt: !13883)
!13883 = distinct !DILocation(line: 229, column: 2, scope: !13565, inlinedAt: !13881)
!13884 = !DILocation(line: 188, column: 2, scope: !13582, inlinedAt: !13883)
!13885 = !DILocation(line: 188, column: 2, scope: !13584, inlinedAt: !13883)
!13886 = !DILocation(line: 0, scope: !13582, inlinedAt: !13883)
!13887 = !DILocation(line: 189, column: 7, scope: !13587, inlinedAt: !13883)
!13888 = !DILocation(line: 189, column: 35, scope: !13587, inlinedAt: !13883)
!13889 = !DILocation(line: 189, column: 7, scope: !13588, inlinedAt: !13883)
!13890 = !DILocation(line: 191, column: 21, scope: !13592, inlinedAt: !13883)
!13891 = !DILocation(line: 190, column: 4, scope: !13592, inlinedAt: !13883)
!13892 = !DILocation(line: 192, column: 4, scope: !13592, inlinedAt: !13883)
!13893 = distinct !{!13893, !13884, !13894}
!13894 = !DILocation(line: 194, column: 2, scope: !13582, inlinedAt: !13883)
!13895 = !DILocation(line: 196, column: 37, scope: !13572, inlinedAt: !13883)
!13896 = !DILocation(line: 196, column: 2, scope: !13572, inlinedAt: !13883)
!13897 = !DILocation(line: 197, column: 1, scope: !13572, inlinedAt: !13883)
!13898 = !DILocation(line: 630, column: 3, scope: !13877)
!13899 = !DILocation(line: 632, column: 2, scope: !13877)
!13900 = !DILocation(line: 633, column: 1, scope: !13866)
!13901 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11922, file: !11922, line: 120, type: !13490, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13902)
!13902 = !{!13903}
!13903 = !DILocalVariable(name: "thread", arg: 1, scope: !13901, file: !11922, line: 120, type: !2202)
!13904 = !DILocation(line: 0, scope: !13901)
!13905 = !DILocation(line: 122, column: 12, scope: !13901)
!13906 = !DILocation(line: 122, column: 62, scope: !13901)
!13907 = !DILocation(line: 123, column: 4, scope: !13901)
!13908 = !DILocation(line: 122, column: 2, scope: !13901)
!13909 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2301, file: !2301, line: 644, type: !13328, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13910)
!13910 = !{!13911, !13912, !13914}
!13911 = !DILocalVariable(name: "thread", arg: 1, scope: !13909, file: !2301, line: 644, type: !2202)
!13912 = !DILocalVariable(name: "__i", scope: !13913, file: !2301, line: 646, type: !13362)
!13913 = distinct !DILexicalBlock(scope: !13909, file: !2301, line: 646, column: 2)
!13914 = !DILocalVariable(name: "__key", scope: !13913, file: !2301, line: 646, type: !13362)
!13915 = !DILocation(line: 0, scope: !13909)
!13916 = !DILocation(line: 0, scope: !13913)
!13917 = !DILocation(line: 0, scope: !13370, inlinedAt: !13918)
!13918 = distinct !DILocation(line: 646, column: 2, scope: !13913)
!13919 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13920)
!13920 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13918)
!13921 = !DILocation(line: 0, scope: !13379, inlinedAt: !13920)
!13922 = !DILocation(line: 647, column: 3, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13924, file: !2301, line: 646, column: 26)
!13924 = distinct !DILexicalBlock(scope: !13913, file: !2301, line: 646, column: 2)
!13925 = !DILocation(line: 0, scope: !13397, inlinedAt: !13926)
!13926 = distinct !DILocation(line: 646, column: 2, scope: !13924)
!13927 = !DILocation(line: 0, scope: !13405, inlinedAt: !13928)
!13928 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !13926)
!13929 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !13928)
!13930 = !DILocation(line: 649, column: 1, scope: !13909)
!13931 = distinct !DISubprogram(name: "z_sched_start", scope: !2301, file: !2301, line: 651, type: !13328, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13932)
!13932 = !{!13933, !13934}
!13933 = !DILocalVariable(name: "thread", arg: 1, scope: !13931, file: !2301, line: 651, type: !2202)
!13934 = !DILocalVariable(name: "key", scope: !13931, file: !2301, line: 653, type: !13362)
!13935 = !DILocation(line: 0, scope: !13931)
!13936 = !DILocation(line: 0, scope: !13370, inlinedAt: !13937)
!13937 = distinct !DILocation(line: 653, column: 25, scope: !13931)
!13938 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !13939)
!13939 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !13937)
!13940 = !DILocation(line: 0, scope: !13379, inlinedAt: !13939)
!13941 = !DILocation(line: 655, column: 6, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13931, file: !2301, line: 655, column: 6)
!13943 = !DILocation(line: 655, column: 6, scope: !13931)
!13944 = !DILocation(line: 0, scope: !13397, inlinedAt: !13945)
!13945 = distinct !DILocation(line: 656, column: 3, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13942, file: !2301, line: 655, column: 36)
!13947 = !DILocation(line: 0, scope: !13405, inlinedAt: !13948)
!13948 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !13945)
!13949 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !13948)
!13950 = !DILocation(line: 657, column: 3, scope: !13946)
!13951 = !DILocation(line: 660, column: 2, scope: !13931)
!13952 = !DILocation(line: 661, column: 2, scope: !13931)
!13953 = !DILocation(line: 662, column: 2, scope: !13931)
!13954 = !DILocation(line: 663, column: 1, scope: !13931)
!13955 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11922, file: !11922, line: 126, type: !13490, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13956)
!13956 = !{!13957}
!13957 = !DILocalVariable(name: "thread", arg: 1, scope: !13955, file: !11922, line: 126, type: !2202)
!13958 = !DILocation(line: 0, scope: !13955)
!13959 = !DILocation(line: 128, column: 23, scope: !13955)
!13960 = !DILocation(line: 128, column: 36, scope: !13955)
!13961 = !DILocation(line: 128, column: 56, scope: !13955)
!13962 = !DILocation(line: 128, column: 2, scope: !13955)
!13963 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11922, file: !11922, line: 155, type: !13328, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13964)
!13964 = !{!13965}
!13965 = !DILocalVariable(name: "thread", arg: 1, scope: !13963, file: !11922, line: 155, type: !2202)
!13966 = !DILocation(line: 0, scope: !13963)
!13967 = !DILocation(line: 157, column: 15, scope: !13963)
!13968 = !DILocation(line: 157, column: 28, scope: !13963)
!13969 = !DILocation(line: 158, column: 1, scope: !13963)
!13970 = distinct !DISubprogram(name: "z_reschedule", scope: !2301, file: !2301, line: 967, type: !13398, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13971)
!13971 = !{!13972, !13973}
!13972 = !DILocalVariable(name: "lock", arg: 1, scope: !13970, file: !2301, line: 967, type: !13373)
!13973 = !DILocalVariable(name: "key", arg: 2, scope: !13970, file: !2301, line: 967, type: !13362)
!13974 = !DILocation(line: 0, scope: !13970)
!13975 = !DILocation(line: 969, column: 6, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13970, file: !2301, line: 969, column: 6)
!13977 = !DILocation(line: 969, column: 23, scope: !13976)
!13978 = !DILocation(line: 969, column: 26, scope: !13976)
!13979 = !DILocation(line: 969, column: 6, scope: !13970)
!13980 = !DILocalVariable(name: "key", arg: 2, scope: !13981, file: !12024, line: 193, type: !13362)
!13981 = distinct !DISubprogram(name: "z_swap", scope: !12024, file: !12024, line: 193, type: !13982, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !13984)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{!103, !13373, !13362}
!13984 = !{!13985, !13980}
!13985 = !DILocalVariable(name: "lock", arg: 1, scope: !13981, file: !12024, line: 193, type: !13373)
!13986 = !DILocation(line: 0, scope: !13981, inlinedAt: !13987)
!13987 = distinct !DILocation(line: 970, column: 3, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13976, file: !2301, line: 969, column: 39)
!13989 = !DILocation(line: 196, column: 9, scope: !13981, inlinedAt: !13987)
!13990 = !DILocation(line: 971, column: 2, scope: !13988)
!13991 = !DILocation(line: 0, scope: !13397, inlinedAt: !13992)
!13992 = distinct !DILocation(line: 972, column: 3, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13976, file: !2301, line: 971, column: 9)
!13994 = !DILocation(line: 0, scope: !13405, inlinedAt: !13995)
!13995 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !13992)
!13996 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !13995)
!13997 = !DILocation(line: 975, column: 1, scope: !13970)
!13998 = distinct !DISubprogram(name: "resched", scope: !2301, file: !2301, line: 940, type: !13999, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14001)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{!131, !108}
!14001 = !{!14002}
!14002 = !DILocalVariable(name: "key", arg: 1, scope: !13998, file: !2301, line: 940, type: !108)
!14003 = !DILocation(line: 0, scope: !13998)
!14004 = !DILocalVariable(name: "key", arg: 1, scope: !14005, file: !7161, line: 112, type: !32)
!14005 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7161, file: !7161, line: 112, type: !14006, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14008)
!14006 = !DISubroutineType(types: !14007)
!14007 = !{!131, !32}
!14008 = !{!14004}
!14009 = !DILocation(line: 0, scope: !14005, inlinedAt: !14010)
!14010 = distinct !DILocation(line: 946, column: 9, scope: !13998)
!14011 = !DILocation(line: 115, column: 13, scope: !14005, inlinedAt: !14010)
!14012 = !DILocation(line: 946, column: 32, scope: !13998)
!14013 = !DILocation(line: 1031, column: 3, scope: !14014, inlinedAt: !14017)
!14014 = distinct !DISubprogram(name: "__get_IPSR", scope: !7048, file: !7048, line: 1027, type: !3393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14015)
!14015 = !{!14016}
!14016 = !DILocalVariable(name: "result", scope: !14014, file: !7048, line: 1029, type: !108)
!14017 = distinct !DILocation(line: 48, column: 10, scope: !14018, inlinedAt: !14019)
!14018 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8007, file: !8007, line: 46, type: !8008, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!14019 = distinct !DILocation(line: 946, column: 36, scope: !13998)
!14020 = !{i64 7009147}
!14021 = !DILocation(line: 0, scope: !14014, inlinedAt: !14017)
!14022 = !DILocation(line: 48, column: 9, scope: !14018, inlinedAt: !14019)
!14023 = !DILocation(line: 946, column: 2, scope: !13998)
!14024 = distinct !DISubprogram(name: "need_swap", scope: !2301, file: !2301, line: 953, type: !8008, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14025)
!14025 = !{!14026}
!14026 = !DILocalVariable(name: "new_thread", scope: !14024, file: !2301, line: 959, type: !2202)
!14027 = !DILocation(line: 962, column: 31, scope: !14024)
!14028 = !DILocation(line: 0, scope: !14024)
!14029 = !DILocation(line: 963, column: 23, scope: !14024)
!14030 = !DILocation(line: 963, column: 20, scope: !14024)
!14031 = !DILocation(line: 963, column: 2, scope: !14024)
!14032 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12024, file: !12024, line: 181, type: !7058, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14033)
!14033 = !{!14034, !14035}
!14034 = !DILocalVariable(name: "key", arg: 1, scope: !14032, file: !12024, line: 181, type: !32)
!14035 = !DILocalVariable(name: "ret", scope: !14032, file: !12024, line: 183, type: !103)
!14036 = !DILocation(line: 0, scope: !14032)
!14037 = !DILocation(line: 185, column: 8, scope: !14032)
!14038 = !DILocation(line: 186, column: 2, scope: !14032)
!14039 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2301, file: !2301, line: 665, type: !13328, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14040)
!14040 = !{!14041, !14042, !14044}
!14041 = !DILocalVariable(name: "thread", arg: 1, scope: !14039, file: !2301, line: 665, type: !2202)
!14042 = !DILocalVariable(name: "__i", scope: !14043, file: !2301, line: 671, type: !13362)
!14043 = distinct !DILexicalBlock(scope: !14039, file: !2301, line: 671, column: 2)
!14044 = !DILocalVariable(name: "__key", scope: !14043, file: !2301, line: 671, type: !13362)
!14045 = !DILocation(line: 0, scope: !14039)
!14046 = !DILocation(line: 669, column: 8, scope: !14039)
!14047 = !DILocation(line: 0, scope: !14043)
!14048 = !DILocation(line: 0, scope: !13370, inlinedAt: !14049)
!14049 = distinct !DILocation(line: 671, column: 2, scope: !14043)
!14050 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14049)
!14052 = !DILocation(line: 0, scope: !13379, inlinedAt: !14051)
!14053 = !DILocation(line: 672, column: 7, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2301, line: 672, column: 7)
!14055 = distinct !DILexicalBlock(scope: !14056, file: !2301, line: 671, column: 26)
!14056 = distinct !DILexicalBlock(scope: !14043, file: !2301, line: 671, column: 2)
!14057 = !DILocation(line: 672, column: 7, scope: !14055)
!14058 = !DILocation(line: 0, scope: !13541, inlinedAt: !14059)
!14059 = distinct !DILocation(line: 673, column: 4, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14054, file: !2301, line: 672, column: 35)
!14061 = !DILocation(line: 266, column: 15, scope: !13541, inlinedAt: !14059)
!14062 = !DILocation(line: 266, column: 28, scope: !13541, inlinedAt: !14059)
!14063 = !DILocation(line: 0, scope: !13549, inlinedAt: !14064)
!14064 = distinct !DILocation(line: 268, column: 3, scope: !13553, inlinedAt: !14059)
!14065 = !DILocation(line: 234, column: 2, scope: !13549, inlinedAt: !14064)
!14066 = !DILocation(line: 674, column: 3, scope: !14060)
!14067 = !DILocation(line: 675, column: 3, scope: !14055)
!14068 = !DILocation(line: 676, column: 26, scope: !14055)
!14069 = !DILocation(line: 676, column: 23, scope: !14055)
!14070 = !DILocation(line: 676, column: 3, scope: !14055)
!14071 = !DILocation(line: 0, scope: !13397, inlinedAt: !14072)
!14072 = distinct !DILocation(line: 671, column: 2, scope: !14056)
!14073 = !DILocation(line: 0, scope: !13405, inlinedAt: !14074)
!14074 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14072)
!14075 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14074)
!14076 = !DILocation(line: 679, column: 16, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14039, file: !2301, line: 679, column: 6)
!14078 = !DILocation(line: 679, column: 13, scope: !14077)
!14079 = !DILocation(line: 679, column: 6, scope: !14039)
!14080 = !DILocation(line: 680, column: 3, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14077, file: !2301, line: 679, column: 26)
!14082 = !DILocation(line: 681, column: 2, scope: !14081)
!14083 = !DILocation(line: 684, column: 1, scope: !14039)
!14084 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12293, file: !12293, line: 52, type: !13346, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14085)
!14085 = !{!14086}
!14086 = !DILocalVariable(name: "thread", arg: 1, scope: !14084, file: !12293, line: 52, type: !2202)
!14087 = !DILocation(line: 0, scope: !14084)
!14088 = !DILocation(line: 54, column: 39, scope: !14084)
!14089 = !DILocation(line: 54, column: 9, scope: !14084)
!14090 = !DILocation(line: 54, column: 2, scope: !14084)
!14091 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11922, file: !11922, line: 141, type: !13328, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14092)
!14092 = !{!14093}
!14093 = !DILocalVariable(name: "thread", arg: 1, scope: !14091, file: !11922, line: 141, type: !2202)
!14094 = !DILocation(line: 0, scope: !14091)
!14095 = !DILocation(line: 143, column: 15, scope: !14091)
!14096 = !DILocation(line: 143, column: 28, scope: !14091)
!14097 = !DILocation(line: 146, column: 1, scope: !14091)
!14098 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11922, file: !11922, line: 73, type: !328, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!14099 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 75, column: 30, scope: !14098)
!14101 = !DILocation(line: 0, scope: !13379, inlinedAt: !14100)
!14102 = !DILocation(line: 75, column: 9, scope: !14098)
!14103 = !DILocation(line: 76, column: 1, scope: !14098)
!14104 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2301, file: !2301, line: 977, type: !7137, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14105)
!14105 = !{!14106}
!14106 = !DILocalVariable(name: "key", arg: 1, scope: !14104, file: !2301, line: 977, type: !108)
!14107 = !DILocation(line: 0, scope: !14104)
!14108 = !DILocation(line: 979, column: 6, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14104, file: !2301, line: 979, column: 6)
!14110 = !DILocation(line: 979, column: 6, scope: !14104)
!14111 = !DILocation(line: 980, column: 3, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14109, file: !2301, line: 979, column: 20)
!14113 = !DILocation(line: 981, column: 2, scope: !14112)
!14114 = !DILocation(line: 0, scope: !13405, inlinedAt: !14115)
!14115 = distinct !DILocation(line: 982, column: 3, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14109, file: !2301, line: 981, column: 9)
!14117 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14115)
!14118 = !DILocation(line: 985, column: 1, scope: !14104)
!14119 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2301, file: !2301, line: 695, type: !13328, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14120)
!14120 = !{!14121, !14122}
!14121 = !DILocalVariable(name: "thread", arg: 1, scope: !14119, file: !2301, line: 695, type: !2202)
!14122 = !DILocalVariable(name: "key", scope: !14119, file: !2301, line: 699, type: !13362)
!14123 = !DILocation(line: 0, scope: !14119)
!14124 = !DILocation(line: 0, scope: !13370, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 699, column: 25, scope: !14119)
!14126 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14125)
!14128 = !DILocation(line: 0, scope: !13379, inlinedAt: !14127)
!14129 = !DILocation(line: 702, column: 7, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14119, file: !2301, line: 702, column: 6)
!14131 = !DILocation(line: 702, column: 6, scope: !14119)
!14132 = !DILocation(line: 0, scope: !13397, inlinedAt: !14133)
!14133 = distinct !DILocation(line: 703, column: 3, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14130, file: !2301, line: 702, column: 38)
!14135 = !DILocation(line: 0, scope: !13405, inlinedAt: !14136)
!14136 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14133)
!14137 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14136)
!14138 = !DILocation(line: 704, column: 3, scope: !14134)
!14139 = !DILocation(line: 707, column: 2, scope: !14119)
!14140 = !DILocation(line: 708, column: 2, scope: !14119)
!14141 = !DILocation(line: 710, column: 2, scope: !14119)
!14142 = !DILocation(line: 713, column: 1, scope: !14119)
!14143 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11922, file: !11922, line: 96, type: !13490, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14144)
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "thread", arg: 1, scope: !14143, file: !11922, line: 96, type: !2202)
!14146 = !DILocation(line: 0, scope: !14143)
!14147 = !DILocation(line: 98, column: 23, scope: !14143)
!14148 = !DILocation(line: 98, column: 36, scope: !14143)
!14149 = !DILocation(line: 98, column: 57, scope: !14143)
!14150 = !DILocation(line: 98, column: 2, scope: !14143)
!14151 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11922, file: !11922, line: 148, type: !13328, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14152)
!14152 = !{!14153}
!14153 = !DILocalVariable(name: "thread", arg: 1, scope: !14151, file: !11922, line: 148, type: !2202)
!14154 = !DILocation(line: 0, scope: !14151)
!14155 = !DILocation(line: 150, column: 15, scope: !14151)
!14156 = !DILocation(line: 150, column: 28, scope: !14151)
!14157 = !DILocation(line: 153, column: 1, scope: !14151)
!14158 = distinct !DISubprogram(name: "z_pend_thread", scope: !2301, file: !2301, line: 770, type: !14159, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14165)
!14159 = !DISubroutineType(types: !14160)
!14160 = !{null, !2202, !2233, !14161}
!14161 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14162)
!14162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14163)
!14163 = !{!14164}
!14164 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14162, file: !105, line: 66, baseType: !104, size: 64)
!14165 = !{!14166, !14167, !14168, !14169, !14171}
!14166 = !DILocalVariable(name: "thread", arg: 1, scope: !14158, file: !2301, line: 770, type: !2202)
!14167 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14158, file: !2301, line: 770, type: !2233)
!14168 = !DILocalVariable(name: "timeout", arg: 3, scope: !14158, file: !2301, line: 771, type: !14161)
!14169 = !DILocalVariable(name: "__i", scope: !14170, file: !2301, line: 774, type: !13362)
!14170 = distinct !DILexicalBlock(scope: !14158, file: !2301, line: 774, column: 2)
!14171 = !DILocalVariable(name: "__key", scope: !14170, file: !2301, line: 774, type: !13362)
!14172 = !DILocation(line: 0, scope: !14158)
!14173 = !DILocation(line: 0, scope: !14170)
!14174 = !DILocation(line: 0, scope: !13370, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 774, column: 2, scope: !14170)
!14176 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14177)
!14177 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14175)
!14178 = !DILocation(line: 0, scope: !13379, inlinedAt: !14177)
!14179 = !DILocation(line: 775, column: 3, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !2301, line: 774, column: 26)
!14181 = distinct !DILexicalBlock(scope: !14170, file: !2301, line: 774, column: 2)
!14182 = !DILocation(line: 0, scope: !13397, inlinedAt: !14183)
!14183 = distinct !DILocation(line: 774, column: 2, scope: !14181)
!14184 = !DILocation(line: 0, scope: !13405, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14183)
!14186 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14185)
!14187 = !DILocation(line: 777, column: 1, scope: !14158)
!14188 = distinct !DISubprogram(name: "pend_locked", scope: !2301, file: !2301, line: 760, type: !14159, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14189)
!14189 = !{!14190, !14191, !14192}
!14190 = !DILocalVariable(name: "thread", arg: 1, scope: !14188, file: !2301, line: 760, type: !2202)
!14191 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14188, file: !2301, line: 760, type: !2233)
!14192 = !DILocalVariable(name: "timeout", arg: 3, scope: !14188, file: !2301, line: 761, type: !14161)
!14193 = !DILocation(line: 0, scope: !14188)
!14194 = !DILocation(line: 766, column: 2, scope: !14188)
!14195 = !DILocation(line: 767, column: 2, scope: !14188)
!14196 = !DILocation(line: 768, column: 1, scope: !14188)
!14197 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2301, file: !2301, line: 740, type: !14198, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14200)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{null, !2202, !2233}
!14200 = !{!14201, !14202}
!14201 = !DILocalVariable(name: "thread", arg: 1, scope: !14197, file: !2301, line: 740, type: !2202)
!14202 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14197, file: !2301, line: 740, type: !2233)
!14203 = !DILocation(line: 0, scope: !14197)
!14204 = !DILocation(line: 742, column: 2, scope: !14197)
!14205 = !DILocation(line: 743, column: 2, scope: !14197)
!14206 = !DILocation(line: 747, column: 13, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14197, file: !2301, line: 747, column: 6)
!14208 = !DILocation(line: 747, column: 6, scope: !14197)
!14209 = !DILocation(line: 748, column: 16, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14207, file: !2301, line: 747, column: 22)
!14211 = !DILocation(line: 748, column: 26, scope: !14210)
!14212 = !DILocation(line: 749, column: 28, scope: !14210)
!14213 = !DILocation(line: 0, scope: !13572, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 749, column: 3, scope: !14210)
!14215 = !DILocation(line: 188, column: 2, scope: !13582, inlinedAt: !14214)
!14216 = !DILocation(line: 188, column: 2, scope: !13584, inlinedAt: !14214)
!14217 = !DILocation(line: 0, scope: !13582, inlinedAt: !14214)
!14218 = !DILocation(line: 189, column: 7, scope: !13587, inlinedAt: !14214)
!14219 = !DILocation(line: 189, column: 35, scope: !13587, inlinedAt: !14214)
!14220 = !DILocation(line: 189, column: 7, scope: !13588, inlinedAt: !14214)
!14221 = !DILocation(line: 191, column: 21, scope: !13592, inlinedAt: !14214)
!14222 = !DILocation(line: 190, column: 4, scope: !13592, inlinedAt: !14214)
!14223 = !DILocation(line: 192, column: 4, scope: !13592, inlinedAt: !14214)
!14224 = distinct !{!14224, !14215, !14225}
!14225 = !DILocation(line: 194, column: 2, scope: !13582, inlinedAt: !14214)
!14226 = !DILocation(line: 196, column: 37, scope: !13572, inlinedAt: !14214)
!14227 = !DILocation(line: 196, column: 2, scope: !13572, inlinedAt: !14214)
!14228 = !DILocation(line: 197, column: 1, scope: !13572, inlinedAt: !14214)
!14229 = !DILocation(line: 751, column: 1, scope: !14197)
!14230 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2301, file: !2301, line: 753, type: !14231, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14233)
!14231 = !DISubroutineType(types: !14232)
!14232 = !{null, !2202, !14161}
!14233 = !{!14234, !14235}
!14234 = !DILocalVariable(name: "thread", arg: 1, scope: !14230, file: !2301, line: 753, type: !2202)
!14235 = !DILocalVariable(name: "timeout", arg: 2, scope: !14230, file: !2301, line: 753, type: !14161)
!14236 = !DILocation(line: 0, scope: !14230)
!14237 = !DILocation(line: 755, column: 7, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14230, file: !2301, line: 755, column: 6)
!14239 = !DILocation(line: 755, column: 6, scope: !14230)
!14240 = !DILocation(line: 756, column: 3, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14238, file: !2301, line: 755, column: 41)
!14242 = !DILocation(line: 757, column: 2, scope: !14241)
!14243 = !DILocation(line: 758, column: 1, scope: !14230)
!14244 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12293, file: !12293, line: 47, type: !14231, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14245)
!14245 = !{!14246, !14247}
!14246 = !DILocalVariable(name: "thread", arg: 1, scope: !14244, file: !12293, line: 47, type: !2202)
!14247 = !DILocalVariable(name: "ticks", arg: 2, scope: !14244, file: !12293, line: 47, type: !14161)
!14248 = !DILocation(line: 0, scope: !14244)
!14249 = !DILocation(line: 49, column: 30, scope: !14244)
!14250 = !DILocation(line: 49, column: 2, scope: !14244)
!14251 = !DILocation(line: 50, column: 1, scope: !14244)
!14252 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2301, file: !2301, line: 795, type: !2259, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14253)
!14253 = !{!14254, !14255, !14256, !14258, !14259}
!14254 = !DILocalVariable(name: "timeout", arg: 1, scope: !14252, file: !2301, line: 795, type: !2261)
!14255 = !DILocalVariable(name: "thread", scope: !14252, file: !2301, line: 797, type: !2202)
!14256 = !DILocalVariable(name: "__i", scope: !14257, file: !2301, line: 800, type: !13362)
!14257 = distinct !DILexicalBlock(scope: !14252, file: !2301, line: 800, column: 2)
!14258 = !DILocalVariable(name: "__key", scope: !14257, file: !2301, line: 800, type: !13362)
!14259 = !DILocalVariable(name: "killed", scope: !14260, file: !2301, line: 801, type: !131)
!14260 = distinct !DILexicalBlock(scope: !14261, file: !2301, line: 800, column: 26)
!14261 = distinct !DILexicalBlock(scope: !14257, file: !2301, line: 800, column: 2)
!14262 = !DILocation(line: 0, scope: !14252)
!14263 = !DILocation(line: 797, column: 28, scope: !14252)
!14264 = !DILocation(line: 0, scope: !14257)
!14265 = !DILocation(line: 0, scope: !13370, inlinedAt: !14266)
!14266 = distinct !DILocation(line: 800, column: 2, scope: !14257)
!14267 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14266)
!14269 = !DILocation(line: 0, scope: !13379, inlinedAt: !14268)
!14270 = !DILocation(line: 801, column: 27, scope: !14260)
!14271 = !DILocation(line: 801, column: 32, scope: !14260)
!14272 = !DILocation(line: 801, column: 61, scope: !14260)
!14273 = !DILocation(line: 0, scope: !14260)
!14274 = !DILocation(line: 804, column: 7, scope: !14260)
!14275 = !DILocation(line: 805, column: 21, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14277, file: !2301, line: 805, column: 8)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !2301, line: 804, column: 16)
!14278 = distinct !DILexicalBlock(scope: !14260, file: !2301, line: 804, column: 7)
!14279 = !DILocation(line: 805, column: 31, scope: !14276)
!14280 = !DILocation(line: 805, column: 8, scope: !14277)
!14281 = !DILocation(line: 806, column: 5, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14276, file: !2301, line: 805, column: 40)
!14283 = !DILocation(line: 807, column: 4, scope: !14282)
!14284 = !DILocation(line: 808, column: 4, scope: !14277)
!14285 = !DILocation(line: 809, column: 4, scope: !14277)
!14286 = !DILocation(line: 810, column: 4, scope: !14277)
!14287 = !DILocation(line: 811, column: 3, scope: !14277)
!14288 = !DILocation(line: 0, scope: !13397, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 800, column: 2, scope: !14261)
!14290 = !DILocation(line: 0, scope: !13405, inlinedAt: !14291)
!14291 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14289)
!14292 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14291)
!14293 = !DILocation(line: 813, column: 1, scope: !14252)
!14294 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2301, file: !2301, line: 779, type: !13328, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14295)
!14295 = !{!14296}
!14296 = !DILocalVariable(name: "thread", arg: 1, scope: !14294, file: !2301, line: 779, type: !2202)
!14297 = !DILocation(line: 0, scope: !14294)
!14298 = !DILocation(line: 781, column: 2, scope: !14294)
!14299 = !DILocation(line: 782, column: 2, scope: !14294)
!14300 = !DILocation(line: 783, column: 15, scope: !14294)
!14301 = !DILocation(line: 783, column: 25, scope: !14294)
!14302 = !DILocation(line: 784, column: 1, scope: !14294)
!14303 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11922, file: !11922, line: 165, type: !13328, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14304)
!14304 = !{!14305}
!14305 = !DILocalVariable(name: "thread", arg: 1, scope: !14303, file: !11922, line: 165, type: !2202)
!14306 = !DILocation(line: 0, scope: !14303)
!14307 = !DILocation(line: 167, column: 15, scope: !14303)
!14308 = !DILocation(line: 167, column: 28, scope: !14303)
!14309 = !DILocation(line: 168, column: 1, scope: !14303)
!14310 = distinct !DISubprogram(name: "unready_thread", scope: !2301, file: !2301, line: 731, type: !13328, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14311)
!14311 = !{!14312}
!14312 = !DILocalVariable(name: "thread", arg: 1, scope: !14310, file: !2301, line: 731, type: !2202)
!14313 = !DILocation(line: 0, scope: !14310)
!14314 = !DILocation(line: 733, column: 6, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14310, file: !2301, line: 733, column: 6)
!14316 = !DILocation(line: 733, column: 6, scope: !14310)
!14317 = !DILocation(line: 0, scope: !13541, inlinedAt: !14318)
!14318 = distinct !DILocation(line: 734, column: 3, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14315, file: !2301, line: 733, column: 34)
!14320 = !DILocation(line: 266, column: 15, scope: !13541, inlinedAt: !14318)
!14321 = !DILocation(line: 266, column: 28, scope: !13541, inlinedAt: !14318)
!14322 = !DILocation(line: 0, scope: !13549, inlinedAt: !14323)
!14323 = distinct !DILocation(line: 268, column: 3, scope: !13553, inlinedAt: !14318)
!14324 = !DILocation(line: 234, column: 2, scope: !13549, inlinedAt: !14323)
!14325 = !DILocation(line: 735, column: 2, scope: !14319)
!14326 = !DILocation(line: 736, column: 25, scope: !14310)
!14327 = !DILocation(line: 736, column: 22, scope: !14310)
!14328 = !DILocation(line: 736, column: 2, scope: !14310)
!14329 = !DILocation(line: 737, column: 1, scope: !14310)
!14330 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11922, file: !11922, line: 160, type: !13328, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14331)
!14331 = !{!14332}
!14332 = !DILocalVariable(name: "thread", arg: 1, scope: !14330, file: !11922, line: 160, type: !2202)
!14333 = !DILocation(line: 0, scope: !14330)
!14334 = !DILocation(line: 162, column: 15, scope: !14330)
!14335 = !DILocation(line: 162, column: 28, scope: !14330)
!14336 = !DILocation(line: 163, column: 1, scope: !14330)
!14337 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2301, file: !2301, line: 786, type: !13328, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14338)
!14338 = !{!14339, !14340, !14342}
!14339 = !DILocalVariable(name: "thread", arg: 1, scope: !14337, file: !2301, line: 786, type: !2202)
!14340 = !DILocalVariable(name: "__i", scope: !14341, file: !2301, line: 788, type: !13362)
!14341 = distinct !DILexicalBlock(scope: !14337, file: !2301, line: 788, column: 2)
!14342 = !DILocalVariable(name: "__key", scope: !14341, file: !2301, line: 788, type: !13362)
!14343 = !DILocation(line: 0, scope: !14337)
!14344 = !DILocation(line: 0, scope: !14341)
!14345 = !DILocation(line: 0, scope: !13370, inlinedAt: !14346)
!14346 = distinct !DILocation(line: 788, column: 2, scope: !14341)
!14347 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14348)
!14348 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14346)
!14349 = !DILocation(line: 0, scope: !13379, inlinedAt: !14348)
!14350 = !DILocation(line: 789, column: 3, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14352, file: !2301, line: 788, column: 26)
!14352 = distinct !DILexicalBlock(scope: !14341, file: !2301, line: 788, column: 2)
!14353 = !DILocation(line: 0, scope: !13397, inlinedAt: !14354)
!14354 = distinct !DILocation(line: 788, column: 2, scope: !14352)
!14355 = !DILocation(line: 0, scope: !13405, inlinedAt: !14356)
!14356 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14354)
!14357 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14356)
!14358 = !DILocation(line: 791, column: 1, scope: !14337)
!14359 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2301, file: !2301, line: 816, type: !14360, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14362)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!103, !108, !2233, !14161}
!14362 = !{!14363, !14364, !14365, !14366, !14367, !14369}
!14363 = !DILocalVariable(name: "key", arg: 1, scope: !14359, file: !2301, line: 816, type: !108)
!14364 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14359, file: !2301, line: 816, type: !2233)
!14365 = !DILocalVariable(name: "timeout", arg: 3, scope: !14359, file: !2301, line: 816, type: !14161)
!14366 = !DILocalVariable(name: "ret", scope: !14359, file: !2301, line: 828, type: !103)
!14367 = !DILocalVariable(name: "__i", scope: !14368, file: !2301, line: 829, type: !13362)
!14368 = distinct !DILexicalBlock(scope: !14359, file: !2301, line: 829, column: 2)
!14369 = !DILocalVariable(name: "__key", scope: !14368, file: !2301, line: 829, type: !13362)
!14370 = !DILocation(line: 0, scope: !14359)
!14371 = !DILocation(line: 823, column: 14, scope: !14359)
!14372 = !DILocation(line: 823, column: 2, scope: !14359)
!14373 = !DILocation(line: 826, column: 20, scope: !14359)
!14374 = !DILocation(line: 826, column: 18, scope: !14359)
!14375 = !DILocation(line: 828, column: 12, scope: !14359)
!14376 = !DILocation(line: 0, scope: !14368)
!14377 = !DILocation(line: 0, scope: !13370, inlinedAt: !14378)
!14378 = distinct !DILocation(line: 829, column: 2, scope: !14368)
!14379 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14380)
!14380 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14378)
!14381 = !DILocation(line: 0, scope: !13379, inlinedAt: !14380)
!14382 = !DILocation(line: 830, column: 7, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14384, file: !2301, line: 830, column: 7)
!14384 = distinct !DILexicalBlock(scope: !14385, file: !2301, line: 829, column: 26)
!14385 = distinct !DILexicalBlock(scope: !14368, file: !2301, line: 829, column: 2)
!14386 = !DILocation(line: 830, column: 26, scope: !14383)
!14387 = !DILocation(line: 830, column: 23, scope: !14383)
!14388 = !DILocation(line: 830, column: 7, scope: !14384)
!14389 = !DILocation(line: 831, column: 20, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14383, file: !2301, line: 830, column: 36)
!14391 = !DILocation(line: 832, column: 3, scope: !14390)
!14392 = !DILocation(line: 0, scope: !13397, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 829, column: 2, scope: !14385)
!14394 = !DILocation(line: 0, scope: !13405, inlinedAt: !14395)
!14395 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14393)
!14396 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14395)
!14397 = !DILocation(line: 834, column: 2, scope: !14359)
!14398 = distinct !DISubprogram(name: "z_pend_curr", scope: !2301, file: !2301, line: 840, type: !14399, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14401)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{!103, !13373, !13362, !2233, !14161}
!14401 = !{!14402, !14403, !14404, !14405}
!14402 = !DILocalVariable(name: "lock", arg: 1, scope: !14398, file: !2301, line: 840, type: !13373)
!14403 = !DILocalVariable(name: "key", arg: 2, scope: !14398, file: !2301, line: 840, type: !13362)
!14404 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14398, file: !2301, line: 841, type: !2233)
!14405 = !DILocalVariable(name: "timeout", arg: 4, scope: !14398, file: !2301, line: 841, type: !14161)
!14406 = !DILocation(line: 0, scope: !14398)
!14407 = !DILocation(line: 844, column: 20, scope: !14398)
!14408 = !DILocation(line: 844, column: 18, scope: !14398)
!14409 = !DILocation(line: 0, scope: !13370, inlinedAt: !14410)
!14410 = distinct !DILocation(line: 856, column: 9, scope: !14398)
!14411 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14410)
!14413 = !DILocation(line: 0, scope: !13379, inlinedAt: !14412)
!14414 = !DILocation(line: 857, column: 14, scope: !14398)
!14415 = !DILocation(line: 857, column: 2, scope: !14398)
!14416 = !DILocation(line: 0, scope: !13981, inlinedAt: !14417)
!14417 = distinct !DILocation(line: 859, column: 9, scope: !14398)
!14418 = !DILocation(line: 196, column: 9, scope: !13981, inlinedAt: !14417)
!14419 = !DILocation(line: 859, column: 2, scope: !14398)
!14420 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2301, file: !2301, line: 862, type: !14421, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14423)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{!2202, !2233}
!14423 = !{!14424, !14425, !14426, !14428}
!14424 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14420, file: !2301, line: 862, type: !2233)
!14425 = !DILocalVariable(name: "thread", scope: !14420, file: !2301, line: 864, type: !2202)
!14426 = !DILocalVariable(name: "__i", scope: !14427, file: !2301, line: 866, type: !13362)
!14427 = distinct !DILexicalBlock(scope: !14420, file: !2301, line: 866, column: 2)
!14428 = !DILocalVariable(name: "__key", scope: !14427, file: !2301, line: 866, type: !13362)
!14429 = !DILocation(line: 0, scope: !14420)
!14430 = !DILocation(line: 0, scope: !14427)
!14431 = !DILocation(line: 0, scope: !13370, inlinedAt: !14432)
!14432 = distinct !DILocation(line: 866, column: 2, scope: !14427)
!14433 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14434)
!14434 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14432)
!14435 = !DILocation(line: 0, scope: !13379, inlinedAt: !14434)
!14436 = !DILocation(line: 867, column: 12, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14438, file: !2301, line: 866, column: 26)
!14438 = distinct !DILexicalBlock(scope: !14427, file: !2301, line: 866, column: 2)
!14439 = !DILocation(line: 869, column: 14, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14437, file: !2301, line: 869, column: 7)
!14441 = !DILocation(line: 869, column: 7, scope: !14437)
!14442 = !DILocation(line: 870, column: 4, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14440, file: !2301, line: 869, column: 23)
!14444 = !DILocation(line: 871, column: 3, scope: !14443)
!14445 = !DILocation(line: 0, scope: !13397, inlinedAt: !14446)
!14446 = distinct !DILocation(line: 866, column: 2, scope: !14438)
!14447 = !DILocation(line: 0, scope: !13405, inlinedAt: !14448)
!14448 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14446)
!14449 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14448)
!14450 = !DILocation(line: 874, column: 2, scope: !14420)
!14451 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2301, file: !2301, line: 877, type: !14421, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14452)
!14452 = !{!14453, !14454, !14455, !14457}
!14453 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14451, file: !2301, line: 877, type: !2233)
!14454 = !DILocalVariable(name: "thread", scope: !14451, file: !2301, line: 879, type: !2202)
!14455 = !DILocalVariable(name: "__i", scope: !14456, file: !2301, line: 881, type: !13362)
!14456 = distinct !DILexicalBlock(scope: !14451, file: !2301, line: 881, column: 2)
!14457 = !DILocalVariable(name: "__key", scope: !14456, file: !2301, line: 881, type: !13362)
!14458 = !DILocation(line: 0, scope: !14451)
!14459 = !DILocation(line: 0, scope: !14456)
!14460 = !DILocation(line: 0, scope: !13370, inlinedAt: !14461)
!14461 = distinct !DILocation(line: 881, column: 2, scope: !14456)
!14462 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14463)
!14463 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14461)
!14464 = !DILocation(line: 0, scope: !13379, inlinedAt: !14463)
!14465 = !DILocation(line: 882, column: 12, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !2301, line: 881, column: 26)
!14467 = distinct !DILexicalBlock(scope: !14456, file: !2301, line: 881, column: 2)
!14468 = !DILocation(line: 884, column: 14, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14466, file: !2301, line: 884, column: 7)
!14470 = !DILocation(line: 884, column: 7, scope: !14466)
!14471 = !DILocation(line: 885, column: 4, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14469, file: !2301, line: 884, column: 23)
!14473 = !DILocation(line: 886, column: 10, scope: !14472)
!14474 = !DILocation(line: 887, column: 3, scope: !14472)
!14475 = !DILocation(line: 0, scope: !13397, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 881, column: 2, scope: !14467)
!14477 = !DILocation(line: 0, scope: !13405, inlinedAt: !14478)
!14478 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14476)
!14479 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14478)
!14480 = !DILocation(line: 890, column: 2, scope: !14451)
!14481 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2301, file: !2301, line: 893, type: !13328, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14482)
!14482 = !{!14483}
!14483 = !DILocalVariable(name: "thread", arg: 1, scope: !14481, file: !2301, line: 893, type: !2202)
!14484 = !DILocation(line: 0, scope: !14481)
!14485 = !DILocation(line: 0, scope: !14337, inlinedAt: !14486)
!14486 = distinct !DILocation(line: 895, column: 2, scope: !14481)
!14487 = !DILocation(line: 0, scope: !14341, inlinedAt: !14486)
!14488 = !DILocation(line: 0, scope: !13370, inlinedAt: !14489)
!14489 = distinct !DILocation(line: 788, column: 2, scope: !14341, inlinedAt: !14486)
!14490 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14491)
!14491 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14489)
!14492 = !DILocation(line: 0, scope: !13379, inlinedAt: !14491)
!14493 = !DILocation(line: 789, column: 3, scope: !14351, inlinedAt: !14486)
!14494 = !DILocation(line: 0, scope: !13397, inlinedAt: !14495)
!14495 = distinct !DILocation(line: 788, column: 2, scope: !14352, inlinedAt: !14486)
!14496 = !DILocation(line: 0, scope: !13405, inlinedAt: !14497)
!14497 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14495)
!14498 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14497)
!14499 = !DILocation(line: 896, column: 8, scope: !14481)
!14500 = !DILocation(line: 897, column: 1, scope: !14481)
!14501 = distinct !DISubprogram(name: "z_set_prio", scope: !2301, file: !2301, line: 902, type: !13692, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14502)
!14502 = !{!14503, !14504, !14505, !14506, !14508}
!14503 = !DILocalVariable(name: "thread", arg: 1, scope: !14501, file: !2301, line: 902, type: !2202)
!14504 = !DILocalVariable(name: "prio", arg: 2, scope: !14501, file: !2301, line: 902, type: !103)
!14505 = !DILocalVariable(name: "need_sched", scope: !14501, file: !2301, line: 904, type: !131)
!14506 = !DILocalVariable(name: "__i", scope: !14507, file: !2301, line: 906, type: !13362)
!14507 = distinct !DILexicalBlock(scope: !14501, file: !2301, line: 906, column: 2)
!14508 = !DILocalVariable(name: "__key", scope: !14507, file: !2301, line: 906, type: !13362)
!14509 = !DILocation(line: 0, scope: !14501)
!14510 = !DILocation(line: 0, scope: !14507)
!14511 = !DILocation(line: 0, scope: !13370, inlinedAt: !14512)
!14512 = distinct !DILocation(line: 906, column: 2, scope: !14507)
!14513 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14514)
!14514 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14512)
!14515 = !DILocation(line: 0, scope: !13379, inlinedAt: !14514)
!14516 = !DILocation(line: 907, column: 16, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !2301, line: 906, column: 26)
!14518 = distinct !DILexicalBlock(scope: !14507, file: !2301, line: 906, column: 2)
!14519 = !DILocation(line: 909, column: 7, scope: !14517)
!14520 = !DILocation(line: 0, scope: !13541, inlinedAt: !14521)
!14521 = distinct !DILocation(line: 912, column: 5, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14523, file: !2301, line: 911, column: 63)
!14523 = distinct !DILexicalBlock(scope: !14524, file: !2301, line: 911, column: 8)
!14524 = distinct !DILexicalBlock(scope: !14525, file: !2301, line: 909, column: 19)
!14525 = distinct !DILexicalBlock(scope: !14517, file: !2301, line: 909, column: 7)
!14526 = !DILocation(line: 266, column: 28, scope: !13541, inlinedAt: !14521)
!14527 = !DILocation(line: 0, scope: !13549, inlinedAt: !14528)
!14528 = distinct !DILocation(line: 268, column: 3, scope: !13553, inlinedAt: !14521)
!14529 = !DILocation(line: 234, column: 2, scope: !13549, inlinedAt: !14528)
!14530 = !DILocation(line: 913, column: 23, scope: !14522)
!14531 = !DILocation(line: 0, scope: !13558, inlinedAt: !14532)
!14532 = distinct !DILocation(line: 914, column: 5, scope: !14522)
!14533 = !DILocation(line: 252, column: 28, scope: !13558, inlinedAt: !14532)
!14534 = !DILocation(line: 0, scope: !13565, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 254, column: 3, scope: !13569, inlinedAt: !14532)
!14536 = !DILocation(line: 0, scope: !13572, inlinedAt: !14537)
!14537 = distinct !DILocation(line: 229, column: 2, scope: !13565, inlinedAt: !14535)
!14538 = !DILocation(line: 188, column: 2, scope: !13582, inlinedAt: !14537)
!14539 = !DILocation(line: 188, column: 2, scope: !13584, inlinedAt: !14537)
!14540 = !DILocation(line: 0, scope: !13582, inlinedAt: !14537)
!14541 = !DILocation(line: 189, column: 7, scope: !13587, inlinedAt: !14537)
!14542 = !DILocation(line: 189, column: 35, scope: !13587, inlinedAt: !14537)
!14543 = !DILocation(line: 189, column: 7, scope: !13588, inlinedAt: !14537)
!14544 = !DILocation(line: 190, column: 4, scope: !13592, inlinedAt: !14537)
!14545 = !DILocation(line: 192, column: 4, scope: !13592, inlinedAt: !14537)
!14546 = distinct !{!14546, !14538, !14547}
!14547 = !DILocation(line: 194, column: 2, scope: !13582, inlinedAt: !14537)
!14548 = !DILocation(line: 196, column: 2, scope: !13572, inlinedAt: !14537)
!14549 = !DILocation(line: 197, column: 1, scope: !13572, inlinedAt: !14537)
!14550 = !DILocation(line: 918, column: 4, scope: !14524)
!14551 = !DILocation(line: 919, column: 3, scope: !14524)
!14552 = !DILocation(line: 920, column: 22, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14525, file: !2301, line: 919, column: 10)
!14554 = !DILocation(line: 0, scope: !13397, inlinedAt: !14555)
!14555 = distinct !DILocation(line: 906, column: 2, scope: !14518)
!14556 = !DILocation(line: 0, scope: !13405, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14555)
!14558 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14557)
!14559 = !DILocation(line: 926, column: 2, scope: !14501)
!14560 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2301, file: !2301, line: 929, type: !14561, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14563)
!14561 = !DISubroutineType(types: !14562)
!14562 = !{null, !2202, !103}
!14563 = !{!14564, !14565, !14566}
!14564 = !DILocalVariable(name: "thread", arg: 1, scope: !14560, file: !2301, line: 929, type: !2202)
!14565 = !DILocalVariable(name: "prio", arg: 2, scope: !14560, file: !2301, line: 929, type: !103)
!14566 = !DILocalVariable(name: "need_sched", scope: !14560, file: !2301, line: 931, type: !131)
!14567 = !DILocation(line: 0, scope: !14560)
!14568 = !DILocation(line: 931, column: 20, scope: !14560)
!14569 = !DILocation(line: 935, column: 17, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14560, file: !2301, line: 935, column: 6)
!14571 = !DILocation(line: 935, column: 20, scope: !14570)
!14572 = !DILocation(line: 935, column: 35, scope: !14570)
!14573 = !DILocation(line: 935, column: 48, scope: !14570)
!14574 = !DILocation(line: 935, column: 6, scope: !14560)
!14575 = !DILocation(line: 936, column: 3, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14570, file: !2301, line: 935, column: 55)
!14577 = !DILocation(line: 937, column: 2, scope: !14576)
!14578 = !DILocation(line: 938, column: 1, scope: !14560)
!14579 = distinct !DISubprogram(name: "k_sched_lock", scope: !2301, file: !2301, line: 987, type: !328, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14580)
!14580 = !{!14581, !14583}
!14581 = !DILocalVariable(name: "__i", scope: !14582, file: !2301, line: 989, type: !13362)
!14582 = distinct !DILexicalBlock(scope: !14579, file: !2301, line: 989, column: 2)
!14583 = !DILocalVariable(name: "__key", scope: !14582, file: !2301, line: 989, type: !13362)
!14584 = !DILocation(line: 0, scope: !14582)
!14585 = !DILocation(line: 0, scope: !13370, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 989, column: 2, scope: !14582)
!14587 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14588)
!14588 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14586)
!14589 = !DILocation(line: 0, scope: !13379, inlinedAt: !14588)
!14590 = !DILocation(line: 992, column: 3, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14592, file: !2301, line: 989, column: 26)
!14592 = distinct !DILexicalBlock(scope: !14582, file: !2301, line: 989, column: 2)
!14593 = !DILocation(line: 0, scope: !13397, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 989, column: 2, scope: !14592)
!14595 = !DILocation(line: 0, scope: !13405, inlinedAt: !14596)
!14596 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14594)
!14597 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14596)
!14598 = !DILocation(line: 994, column: 1, scope: !14579)
!14599 = distinct !DISubprogram(name: "z_sched_lock", scope: !11922, file: !11922, line: 251, type: !328, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!14600 = !DILocation(line: 256, column: 4, scope: !14599)
!14601 = !DILocation(line: 256, column: 19, scope: !14599)
!14602 = !DILocation(line: 256, column: 2, scope: !14599)
!14603 = !DILocation(line: 258, column: 2, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14599, file: !11922, line: 258, column: 2)
!14605 = !{i64 2154791746}
!14606 = !DILocation(line: 259, column: 1, scope: !14599)
!14607 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2301, file: !2301, line: 996, type: !328, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14608)
!14608 = !{!14609, !14611}
!14609 = !DILocalVariable(name: "__i", scope: !14610, file: !2301, line: 998, type: !13362)
!14610 = distinct !DILexicalBlock(scope: !14607, file: !2301, line: 998, column: 2)
!14611 = !DILocalVariable(name: "__key", scope: !14610, file: !2301, line: 998, type: !13362)
!14612 = !DILocation(line: 0, scope: !14610)
!14613 = !DILocation(line: 0, scope: !13370, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 998, column: 2, scope: !14610)
!14615 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14616)
!14616 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14614)
!14617 = !DILocation(line: 0, scope: !13379, inlinedAt: !14616)
!14618 = !DILocation(line: 1002, column: 5, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14620, file: !2301, line: 998, column: 26)
!14620 = distinct !DILexicalBlock(scope: !14610, file: !2301, line: 998, column: 2)
!14621 = !DILocation(line: 1002, column: 20, scope: !14619)
!14622 = !DILocation(line: 1002, column: 3, scope: !14619)
!14623 = !DILocation(line: 1003, column: 3, scope: !14619)
!14624 = !DILocation(line: 0, scope: !13397, inlinedAt: !14625)
!14625 = distinct !DILocation(line: 998, column: 2, scope: !14620)
!14626 = !DILocation(line: 0, scope: !13405, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !14625)
!14628 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !14627)
!14629 = !DILocation(line: 1011, column: 2, scope: !14607)
!14630 = !DILocation(line: 1012, column: 1, scope: !14607)
!14631 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2301, file: !2301, line: 1014, type: !13680, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!14632 = !DILocation(line: 1028, column: 25, scope: !14631)
!14633 = !DILocation(line: 1028, column: 2, scope: !14631)
!14634 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2301, file: !2301, line: 1155, type: !14635, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14637)
!14635 = !DISubroutineType(types: !14636)
!14636 = !{!131, !2231, !2231}
!14637 = !{!14638, !14639, !14640, !14641, !14642}
!14638 = !DILocalVariable(name: "a", arg: 1, scope: !14634, file: !2301, line: 1155, type: !2231)
!14639 = !DILocalVariable(name: "b", arg: 2, scope: !14634, file: !2301, line: 1155, type: !2231)
!14640 = !DILocalVariable(name: "thread_a", scope: !14634, file: !2301, line: 1157, type: !2202)
!14641 = !DILocalVariable(name: "thread_b", scope: !14634, file: !2301, line: 1157, type: !2202)
!14642 = !DILocalVariable(name: "cmp", scope: !14634, file: !2301, line: 1158, type: !325)
!14643 = !DILocation(line: 0, scope: !14634)
!14644 = !DILocation(line: 1160, column: 13, scope: !14634)
!14645 = !DILocation(line: 1161, column: 13, scope: !14634)
!14646 = !DILocation(line: 1163, column: 8, scope: !14634)
!14647 = !DILocation(line: 1165, column: 10, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14634, file: !2301, line: 1165, column: 6)
!14649 = !DILocation(line: 1165, column: 6, scope: !14634)
!14650 = !DILocation(line: 1167, column: 17, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14648, file: !2301, line: 1167, column: 13)
!14652 = !DILocation(line: 1167, column: 13, scope: !14648)
!14653 = !DILocation(line: 1170, column: 25, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14651, file: !2301, line: 1169, column: 9)
!14655 = !DILocation(line: 1170, column: 52, scope: !14654)
!14656 = !DILocation(line: 1170, column: 35, scope: !14654)
!14657 = !DILocation(line: 1170, column: 3, scope: !14654)
!14658 = !DILocation(line: 0, scope: !14648)
!14659 = !DILocation(line: 1173, column: 1, scope: !14634)
!14660 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2301, file: !2301, line: 1175, type: !14661, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14676)
!14661 = !DISubroutineType(types: !14662)
!14662 = !{null, !14663, !2202}
!14663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14664, size: 32)
!14664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14665, line: 37, size: 128, elements: !14666)
!14665 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14666 = !{!14667, !14675}
!14667 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14664, file: !14665, line: 38, baseType: !14668, size: 96)
!14668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !175, line: 83, size: 96, elements: !14669)
!14669 = !{!14670, !14671, !14674}
!14670 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14668, file: !175, line: 84, baseType: !2231, size: 32)
!14671 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14668, file: !175, line: 85, baseType: !14672, size: 32, offset: 32)
!14672 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !175, line: 81, baseType: !14673)
!14673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14635, size: 32)
!14674 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14668, file: !175, line: 86, baseType: !103, size: 32, offset: 64)
!14675 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14664, file: !14665, line: 39, baseType: !103, size: 32, offset: 96)
!14676 = !{!14677, !14678, !14679, !14680, !14689}
!14677 = !DILocalVariable(name: "pq", arg: 1, scope: !14660, file: !2301, line: 1175, type: !14663)
!14678 = !DILocalVariable(name: "thread", arg: 2, scope: !14660, file: !2301, line: 1175, type: !2202)
!14679 = !DILocalVariable(name: "t", scope: !14660, file: !2301, line: 1177, type: !2202)
!14680 = !DILocalVariable(name: "__f", scope: !14681, file: !2301, line: 1190, type: !14684)
!14681 = distinct !DILexicalBlock(scope: !14682, file: !2301, line: 1190, column: 3)
!14682 = distinct !DILexicalBlock(scope: !14683, file: !2301, line: 1189, column: 27)
!14683 = distinct !DILexicalBlock(scope: !14660, file: !2301, line: 1189, column: 6)
!14684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !175, line: 155, size: 96, elements: !14685)
!14685 = !{!14686, !14687, !14688}
!14686 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14684, file: !175, line: 156, baseType: !2296, size: 32)
!14687 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14684, file: !175, line: 157, baseType: !373, size: 32, offset: 32)
!14688 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14684, file: !175, line: 158, baseType: !325, size: 32, offset: 64)
!14689 = !DILocalVariable(name: "n", scope: !14690, file: !2301, line: 1190, type: !2231)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !2301, line: 1190, column: 3)
!14691 = distinct !DILexicalBlock(scope: !14681, file: !2301, line: 1190, column: 3)
!14692 = !DILocation(line: 0, scope: !14660)
!14693 = !DILocation(line: 1181, column: 31, scope: !14660)
!14694 = !DILocation(line: 1181, column: 45, scope: !14660)
!14695 = !DILocation(line: 1181, column: 15, scope: !14660)
!14696 = !DILocation(line: 1181, column: 25, scope: !14660)
!14697 = !DILocation(line: 1189, column: 11, scope: !14683)
!14698 = !DILocation(line: 1189, column: 7, scope: !14683)
!14699 = !DILocation(line: 1189, column: 6, scope: !14660)
!14700 = !DILocation(line: 1190, column: 3, scope: !14681)
!14701 = !DILocation(line: 1190, column: 3, scope: !14690)
!14702 = !DILocation(line: 0, scope: !14690)
!14703 = !DILocation(line: 1190, column: 3, scope: !14691)
!14704 = !DILocation(line: 1193, column: 2, scope: !14682)
!14705 = !DILocation(line: 1191, column: 42, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14691, file: !2301, line: 1190, column: 54)
!14707 = !DILocation(line: 1191, column: 12, scope: !14706)
!14708 = !DILocation(line: 1191, column: 22, scope: !14706)
!14709 = distinct !{!14709, !14700, !14710}
!14710 = !DILocation(line: 1192, column: 3, scope: !14681)
!14711 = !DILocation(line: 1195, column: 17, scope: !14660)
!14712 = !DILocation(line: 1195, column: 37, scope: !14660)
!14713 = !DILocation(line: 1195, column: 2, scope: !14660)
!14714 = !DILocation(line: 1196, column: 1, scope: !14660)
!14715 = !DISubprogram(name: "z_rb_foreach_next", scope: !175, file: !175, line: 176, type: !14716, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!14716 = !DISubroutineType(types: !14717)
!14717 = !{!2231, !14718, !14719}
!14718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14668, size: 32)
!14719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14684, size: 32)
!14720 = !DISubprogram(name: "rb_insert", scope: !175, file: !175, line: 105, type: !14721, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!14721 = !DISubroutineType(types: !14722)
!14722 = !{null, !14718, !2231}
!14723 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2301, file: !2301, line: 1198, type: !14661, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14724)
!14724 = !{!14725, !14726}
!14725 = !DILocalVariable(name: "pq", arg: 1, scope: !14723, file: !2301, line: 1198, type: !14663)
!14726 = !DILocalVariable(name: "thread", arg: 2, scope: !14723, file: !2301, line: 1198, type: !2202)
!14727 = !DILocation(line: 0, scope: !14723)
!14728 = !DILocation(line: 1202, column: 17, scope: !14723)
!14729 = !DILocation(line: 1202, column: 37, scope: !14723)
!14730 = !DILocation(line: 1202, column: 2, scope: !14723)
!14731 = !DILocation(line: 1204, column: 16, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14723, file: !2301, line: 1204, column: 6)
!14733 = !DILocation(line: 1204, column: 7, scope: !14732)
!14734 = !DILocation(line: 1204, column: 6, scope: !14723)
!14735 = !DILocation(line: 1205, column: 7, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14732, file: !2301, line: 1204, column: 22)
!14737 = !DILocation(line: 1205, column: 22, scope: !14736)
!14738 = !DILocation(line: 1206, column: 2, scope: !14736)
!14739 = !DILocation(line: 1207, column: 1, scope: !14723)
!14740 = !DISubprogram(name: "rb_remove", scope: !175, file: !175, line: 110, type: !14721, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!14741 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2301, file: !2301, line: 1209, type: !14742, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14744)
!14742 = !DISubroutineType(types: !14743)
!14743 = !{!2202, !14663}
!14744 = !{!14745, !14746, !14747}
!14745 = !DILocalVariable(name: "pq", arg: 1, scope: !14741, file: !2301, line: 1209, type: !14663)
!14746 = !DILocalVariable(name: "thread", scope: !14741, file: !2301, line: 1211, type: !2202)
!14747 = !DILocalVariable(name: "n", scope: !14741, file: !2301, line: 1212, type: !2231)
!14748 = !DILocation(line: 0, scope: !14741)
!14749 = !DILocation(line: 1212, column: 37, scope: !14741)
!14750 = !DILocation(line: 1212, column: 21, scope: !14741)
!14751 = !DILocation(line: 1217, column: 2, scope: !14741)
!14752 = distinct !DISubprogram(name: "rb_get_min", scope: !175, file: !175, line: 115, type: !14753, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14755)
!14753 = !DISubroutineType(types: !14754)
!14754 = !{!2231, !14718}
!14755 = !{!14756}
!14756 = !DILocalVariable(name: "tree", arg: 1, scope: !14752, file: !175, line: 115, type: !14718)
!14757 = !DILocation(line: 0, scope: !14752)
!14758 = !DILocation(line: 117, column: 9, scope: !14752)
!14759 = !DILocation(line: 117, column: 2, scope: !14752)
!14760 = !DISubprogram(name: "z_rb_get_minmax", scope: !175, file: !175, line: 100, type: !14761, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !245)
!14761 = !DISubroutineType(types: !14762)
!14762 = !{!2231, !14718, !185}
!14763 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2301, file: !2301, line: 1246, type: !14764, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14772)
!14764 = !DISubroutineType(types: !14765)
!14765 = !{!2202, !14766}
!14766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14767, size: 32)
!14767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14665, line: 53, size: 2080, elements: !14768)
!14768 = !{!14769, !14771}
!14769 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14767, file: !14665, line: 54, baseType: !14770, size: 2048)
!14770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, size: 2048, elements: !760)
!14771 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14767, file: !14665, line: 55, baseType: !32, size: 32, offset: 2048)
!14772 = !{!14773, !14774, !14775, !14776}
!14773 = !DILocalVariable(name: "pq", arg: 1, scope: !14763, file: !2301, line: 1246, type: !14766)
!14774 = !DILocalVariable(name: "thread", scope: !14763, file: !2301, line: 1252, type: !2202)
!14775 = !DILocalVariable(name: "l", scope: !14763, file: !2301, line: 1253, type: !13575)
!14776 = !DILocalVariable(name: "n", scope: !14763, file: !2301, line: 1254, type: !2297)
!14777 = !DILocation(line: 0, scope: !14763)
!14778 = !DILocation(line: 1248, column: 11, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14763, file: !2301, line: 1248, column: 6)
!14780 = !DILocation(line: 1248, column: 7, scope: !14779)
!14781 = !DILocation(line: 1248, column: 6, scope: !14763)
!14782 = !DILocation(line: 1253, column: 31, scope: !14763)
!14783 = !DILocation(line: 1253, column: 20, scope: !14763)
!14784 = !DILocation(line: 1254, column: 19, scope: !14763)
!14785 = !DILocation(line: 1260, column: 1, scope: !14763)
!14786 = distinct !DISubprogram(name: "z_unpend_all", scope: !2301, file: !2301, line: 1262, type: !14787, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14789)
!14787 = !DISubroutineType(types: !14788)
!14788 = !{!103, !2233}
!14789 = !{!14790, !14791, !14792}
!14790 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14786, file: !2301, line: 1262, type: !2233)
!14791 = !DILocalVariable(name: "need_sched", scope: !14786, file: !2301, line: 1264, type: !103)
!14792 = !DILocalVariable(name: "thread", scope: !14786, file: !2301, line: 1265, type: !2202)
!14793 = !DILocation(line: 0, scope: !14786)
!14794 = !DILocation(line: 1267, column: 19, scope: !14786)
!14795 = !DILocation(line: 1267, column: 41, scope: !14786)
!14796 = !DILocation(line: 1267, column: 2, scope: !14786)
!14797 = !DILocation(line: 1268, column: 3, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14786, file: !2301, line: 1267, column: 50)
!14799 = !DILocation(line: 1269, column: 3, scope: !14798)
!14800 = distinct !{!14800, !14796, !14801}
!14801 = !DILocation(line: 1271, column: 2, scope: !14786)
!14802 = !DILocation(line: 1273, column: 2, scope: !14786)
!14803 = distinct !DISubprogram(name: "z_waitq_head", scope: !12241, file: !12241, line: 52, type: !14421, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14804)
!14804 = !{!14805}
!14805 = !DILocalVariable(name: "w", arg: 1, scope: !14803, file: !12241, line: 52, type: !2233)
!14806 = !DILocation(line: 0, scope: !14803)
!14807 = !DILocation(line: 54, column: 52, scope: !14803)
!14808 = !DILocation(line: 54, column: 28, scope: !14803)
!14809 = !DILocation(line: 54, column: 9, scope: !14803)
!14810 = !DILocation(line: 54, column: 2, scope: !14803)
!14811 = distinct !DISubprogram(name: "init_ready_q", scope: !2301, file: !2301, line: 1276, type: !14812, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14819)
!14812 = !DISubroutineType(types: !14813)
!14813 = !{null, !14814}
!14814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14815, size: 32)
!14815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !14816)
!14816 = !{!14817, !14818}
!14817 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14815, file: !141, line: 86, baseType: !2202, size: 32)
!14818 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14815, file: !141, line: 90, baseType: !2238, size: 64, offset: 32)
!14819 = !{!14820}
!14820 = !DILocalVariable(name: "rq", arg: 1, scope: !14811, file: !2301, line: 1276, type: !14814)
!14821 = !DILocation(line: 0, scope: !14811)
!14822 = !DILocation(line: 1289, column: 22, scope: !14811)
!14823 = !DILocation(line: 1289, column: 2, scope: !14811)
!14824 = !DILocation(line: 1291, column: 1, scope: !14811)
!14825 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14826, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14828)
!14826 = !DISubroutineType(types: !14827)
!14827 = !{null, !13575}
!14828 = !{!14829}
!14829 = !DILocalVariable(name: "list", arg: 1, scope: !14825, file: !146, line: 197, type: !13575)
!14830 = !DILocation(line: 0, scope: !14825)
!14831 = !DILocation(line: 199, column: 8, scope: !14825)
!14832 = !DILocation(line: 199, column: 13, scope: !14825)
!14833 = !DILocation(line: 200, column: 8, scope: !14825)
!14834 = !DILocation(line: 200, column: 13, scope: !14825)
!14835 = !DILocation(line: 201, column: 1, scope: !14825)
!14836 = distinct !DISubprogram(name: "z_sched_init", scope: !2301, file: !2301, line: 1293, type: !328, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!14837 = !DILocation(line: 1302, column: 2, scope: !14836)
!14838 = !DILocation(line: 1306, column: 2, scope: !14836)
!14839 = !DILocation(line: 1309, column: 1, scope: !14836)
!14840 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2301, file: !2301, line: 1311, type: !14841, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14844)
!14841 = !DISubroutineType(types: !14842)
!14842 = !{!103, !14843}
!14843 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2202)
!14844 = !{!14845}
!14845 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !2301, line: 1311, type: !14843)
!14846 = !DILocation(line: 0, scope: !14840)
!14847 = !DILocation(line: 1313, column: 22, scope: !14840)
!14848 = !DILocation(line: 1313, column: 9, scope: !14840)
!14849 = !DILocation(line: 1313, column: 2, scope: !14840)
!14850 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2301, file: !2301, line: 1325, type: !14851, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14853)
!14851 = !DISubroutineType(types: !14852)
!14852 = !{null, !14843, !103}
!14853 = !{!14854, !14855, !14856}
!14854 = !DILocalVariable(name: "thread", arg: 1, scope: !14850, file: !2301, line: 1325, type: !14843)
!14855 = !DILocalVariable(name: "prio", arg: 2, scope: !14850, file: !2301, line: 1325, type: !103)
!14856 = !DILocalVariable(name: "th", scope: !14850, file: !2301, line: 1334, type: !2202)
!14857 = !DILocation(line: 0, scope: !14850)
!14858 = !DILocation(line: 1336, column: 2, scope: !14850)
!14859 = !DILocation(line: 1337, column: 1, scope: !14850)
!14860 = distinct !DISubprogram(name: "k_can_yield", scope: !2301, file: !2301, line: 1384, type: !8008, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!14861 = !DILocation(line: 1386, column: 11, scope: !14860)
!14862 = !DILocation(line: 1386, column: 29, scope: !14860)
!14863 = !DILocation(line: 1386, column: 32, scope: !14860)
!14864 = !DILocation(line: 1386, column: 46, scope: !14860)
!14865 = !DILocation(line: 1387, column: 28, scope: !14860)
!14866 = !DILocation(line: 1387, column: 4, scope: !14860)
!14867 = !DILocation(line: 1386, column: 2, scope: !14860)
!14868 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !137, file: !137, line: 989, type: !8008, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!14869 = !DILocation(line: 993, column: 10, scope: !14868)
!14870 = !DILocation(line: 993, column: 2, scope: !14868)
!14871 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2301, file: !2301, line: 1390, type: !328, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14872)
!14872 = !{!14873}
!14873 = !DILocalVariable(name: "key", scope: !14871, file: !2301, line: 1396, type: !13362)
!14874 = !DILocation(line: 0, scope: !13370, inlinedAt: !14875)
!14875 = distinct !DILocation(line: 1396, column: 25, scope: !14871)
!14876 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14877)
!14877 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14875)
!14878 = !DILocation(line: 0, scope: !13379, inlinedAt: !14877)
!14879 = !DILocation(line: 0, scope: !14871)
!14880 = !DILocation(line: 1400, column: 18, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14882, file: !2301, line: 1399, column: 36)
!14882 = distinct !DILexicalBlock(scope: !14871, file: !2301, line: 1398, column: 6)
!14883 = !DILocation(line: 0, scope: !13541, inlinedAt: !14884)
!14884 = distinct !DILocation(line: 1400, column: 3, scope: !14881)
!14885 = !DILocation(line: 266, column: 15, scope: !13541, inlinedAt: !14884)
!14886 = !DILocation(line: 266, column: 28, scope: !13541, inlinedAt: !14884)
!14887 = !DILocation(line: 0, scope: !13549, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 268, column: 3, scope: !13553, inlinedAt: !14884)
!14889 = !DILocation(line: 234, column: 2, scope: !13549, inlinedAt: !14888)
!14890 = !DILocation(line: 1402, column: 15, scope: !14871)
!14891 = !DILocation(line: 0, scope: !13558, inlinedAt: !14892)
!14892 = distinct !DILocation(line: 1402, column: 2, scope: !14871)
!14893 = !DILocation(line: 252, column: 15, scope: !13558, inlinedAt: !14892)
!14894 = !DILocation(line: 252, column: 28, scope: !13558, inlinedAt: !14892)
!14895 = !DILocation(line: 0, scope: !13565, inlinedAt: !14896)
!14896 = distinct !DILocation(line: 254, column: 3, scope: !13569, inlinedAt: !14892)
!14897 = !DILocation(line: 0, scope: !13572, inlinedAt: !14898)
!14898 = distinct !DILocation(line: 229, column: 2, scope: !13565, inlinedAt: !14896)
!14899 = !DILocation(line: 188, column: 2, scope: !13582, inlinedAt: !14898)
!14900 = !DILocation(line: 188, column: 2, scope: !13584, inlinedAt: !14898)
!14901 = !DILocation(line: 0, scope: !13582, inlinedAt: !14898)
!14902 = !DILocation(line: 189, column: 7, scope: !13587, inlinedAt: !14898)
!14903 = !DILocation(line: 189, column: 35, scope: !13587, inlinedAt: !14898)
!14904 = !DILocation(line: 189, column: 7, scope: !13588, inlinedAt: !14898)
!14905 = !DILocation(line: 191, column: 21, scope: !13592, inlinedAt: !14898)
!14906 = !DILocation(line: 190, column: 4, scope: !13592, inlinedAt: !14898)
!14907 = !DILocation(line: 192, column: 4, scope: !13592, inlinedAt: !14898)
!14908 = distinct !{!14908, !14899, !14909}
!14909 = !DILocation(line: 194, column: 2, scope: !13582, inlinedAt: !14898)
!14910 = !DILocation(line: 196, column: 37, scope: !13572, inlinedAt: !14898)
!14911 = !DILocation(line: 196, column: 2, scope: !13572, inlinedAt: !14898)
!14912 = !DILocation(line: 197, column: 1, scope: !13572, inlinedAt: !14898)
!14913 = !DILocation(line: 1403, column: 2, scope: !14871)
!14914 = !DILocation(line: 0, scope: !13981, inlinedAt: !14915)
!14915 = distinct !DILocation(line: 1404, column: 2, scope: !14871)
!14916 = !DILocation(line: 196, column: 9, scope: !13981, inlinedAt: !14915)
!14917 = !DILocation(line: 1405, column: 1, scope: !14871)
!14918 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2301, file: !2301, line: 1459, type: !14919, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14921)
!14919 = !DISubroutineType(types: !14920)
!14920 = !{!325, !14161}
!14921 = !{!14922, !14923, !14924}
!14922 = !DILocalVariable(name: "timeout", arg: 1, scope: !14918, file: !2301, line: 1459, type: !14161)
!14923 = !DILocalVariable(name: "ticks", scope: !14918, file: !2301, line: 1461, type: !104)
!14924 = !DILocalVariable(name: "ret", scope: !14918, file: !2301, line: 1480, type: !325)
!14925 = !DILocation(line: 0, scope: !14918)
!14926 = !DILocation(line: 1468, column: 6, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14918, file: !2301, line: 1468, column: 6)
!14928 = !DILocation(line: 1468, column: 6, scope: !14918)
!14929 = !DILocation(line: 1469, column: 20, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14927, file: !2301, line: 1468, column: 40)
!14931 = !DILocation(line: 1469, column: 3, scope: !14930)
!14932 = !DILocation(line: 1473, column: 3, scope: !14930)
!14933 = !DILocation(line: 1478, column: 10, scope: !14918)
!14934 = !DILocation(line: 1480, column: 16, scope: !14918)
!14935 = !DILocation(line: 1485, column: 1, scope: !14918)
!14936 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3413, file: !3413, line: 310, type: !14937, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14939)
!14937 = !DISubroutineType(types: !14938)
!14938 = !{null, !14843}
!14939 = !{!14940}
!14940 = !DILocalVariable(name: "thread", arg: 1, scope: !14936, file: !3413, line: 310, type: !14843)
!14941 = !DILocation(line: 0, scope: !14936)
!14942 = !DILocation(line: 319, column: 2, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14936, file: !3413, line: 319, column: 2)
!14944 = !{i64 2151081360}
!14945 = !DILocation(line: 320, column: 2, scope: !14936)
!14946 = !DILocation(line: 321, column: 1, scope: !14936)
!14947 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2301, file: !2301, line: 1415, type: !14948, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14950)
!14948 = !DISubroutineType(types: !14949)
!14949 = !{!325, !104}
!14950 = !{!14951, !14952, !14953, !14954}
!14951 = !DILocalVariable(name: "ticks", arg: 1, scope: !14947, file: !2301, line: 1415, type: !104)
!14952 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14947, file: !2301, line: 1418, type: !108)
!14953 = !DILocalVariable(name: "timeout", scope: !14947, file: !2301, line: 1430, type: !14161)
!14954 = !DILocalVariable(name: "key", scope: !14947, file: !2301, line: 1437, type: !13362)
!14955 = !DILocation(line: 0, scope: !14947)
!14956 = !DILocation(line: 1425, column: 12, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14947, file: !2301, line: 1425, column: 6)
!14958 = !DILocation(line: 1425, column: 6, scope: !14947)
!14959 = !DILocation(line: 1426, column: 3, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14957, file: !2301, line: 1425, column: 18)
!14961 = !DILocation(line: 1427, column: 3, scope: !14960)
!14962 = !DILocation(line: 1431, column: 24, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14947, file: !2301, line: 1431, column: 6)
!14964 = !DILocation(line: 1431, column: 6, scope: !14947)
!14965 = !DILocation(line: 1432, column: 35, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14963, file: !2301, line: 1431, column: 30)
!14967 = !DILocation(line: 1432, column: 27, scope: !14966)
!14968 = !DILocation(line: 1433, column: 2, scope: !14966)
!14969 = !DILocation(line: 1434, column: 27, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14963, file: !2301, line: 1433, column: 9)
!14971 = !DILocation(line: 0, scope: !14963)
!14972 = !DILocation(line: 0, scope: !13370, inlinedAt: !14973)
!14973 = distinct !DILocation(line: 1437, column: 25, scope: !14947)
!14974 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !14973)
!14976 = !DILocation(line: 0, scope: !13379, inlinedAt: !14975)
!14977 = !DILocation(line: 1440, column: 20, scope: !14947)
!14978 = !DILocation(line: 1440, column: 18, scope: !14947)
!14979 = !DILocation(line: 1442, column: 2, scope: !14947)
!14980 = !DILocation(line: 1443, column: 23, scope: !14947)
!14981 = !DILocation(line: 1443, column: 2, scope: !14947)
!14982 = !DILocation(line: 1444, column: 29, scope: !14947)
!14983 = !DILocation(line: 1444, column: 2, scope: !14947)
!14984 = !DILocation(line: 0, scope: !13981, inlinedAt: !14985)
!14985 = distinct !DILocation(line: 1446, column: 8, scope: !14947)
!14986 = !DILocation(line: 196, column: 9, scope: !13981, inlinedAt: !14985)
!14987 = !DILocation(line: 1450, column: 10, scope: !14947)
!14988 = !DILocation(line: 1450, column: 45, scope: !14947)
!14989 = !DILocation(line: 1450, column: 43, scope: !14947)
!14990 = !DILocation(line: 1451, column: 6, scope: !14947)
!14991 = !DILocation(line: 1457, column: 1, scope: !14947)
!14992 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3399, file: !3399, line: 1103, type: !3400, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !14993)
!14993 = !{!14994}
!14994 = !DILocalVariable(name: "t", arg: 1, scope: !14992, file: !3399, line: 1103, type: !109)
!14995 = !DILocation(line: 0, scope: !14992)
!14996 = !DILocation(line: 0, scope: !13419, inlinedAt: !14997)
!14997 = distinct !DILocation(line: 1106, column: 9, scope: !14992)
!14998 = !DILocation(line: 139, column: 13, scope: !14999, inlinedAt: !14997)
!14999 = distinct !DILexicalBlock(scope: !15000, file: !3399, line: 138, column: 10)
!15000 = distinct !DILexicalBlock(scope: !15001, file: !3399, line: 136, column: 7)
!15001 = distinct !DILexicalBlock(scope: !13440, file: !3399, line: 134, column: 17)
!15002 = !DILocation(line: 1106, column: 2, scope: !14992)
!15003 = distinct !DISubprogram(name: "k_yield", scope: !3413, file: !3413, line: 140, type: !328, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!15004 = !DILocation(line: 148, column: 2, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !15003, file: !3413, line: 148, column: 2)
!15006 = !{i64 2151080680}
!15007 = !DILocation(line: 149, column: 2, scope: !15003)
!15008 = !DILocation(line: 150, column: 1, scope: !15003)
!15009 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2301, file: !2301, line: 1495, type: !15010, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15012)
!15010 = !DISubroutineType(types: !15011)
!15011 = !{!325, !103}
!15012 = !{!15013, !15014}
!15013 = !DILocalVariable(name: "us", arg: 1, scope: !15009, file: !2301, line: 1495, type: !103)
!15014 = !DILocalVariable(name: "ticks", scope: !15009, file: !2301, line: 1497, type: !325)
!15015 = !DILocation(line: 0, scope: !15009)
!15016 = !DILocation(line: 1501, column: 31, scope: !15009)
!15017 = !DILocation(line: 1501, column: 10, scope: !15009)
!15018 = !DILocation(line: 1502, column: 23, scope: !15009)
!15019 = !DILocation(line: 1502, column: 10, scope: !15009)
!15020 = !DILocation(line: 1506, column: 31, scope: !15009)
!15021 = !DILocation(line: 1506, column: 9, scope: !15009)
!15022 = !DILocation(line: 1506, column: 2, scope: !15009)
!15023 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3399, file: !3399, line: 571, type: !3400, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15024)
!15024 = !{!15025}
!15025 = !DILocalVariable(name: "t", arg: 1, scope: !15023, file: !3399, line: 571, type: !109)
!15026 = !DILocation(line: 0, scope: !15023)
!15027 = !DILocation(line: 0, scope: !13419, inlinedAt: !15028)
!15028 = distinct !DILocation(line: 574, column: 9, scope: !15023)
!15029 = !DILocation(line: 135, column: 5, scope: !15001, inlinedAt: !15028)
!15030 = !DILocation(line: 139, column: 13, scope: !14999, inlinedAt: !15028)
!15031 = !DILocation(line: 574, column: 2, scope: !15023)
!15032 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3399, file: !3399, line: 1187, type: !3400, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15033)
!15033 = !{!15034}
!15034 = !DILocalVariable(name: "t", arg: 1, scope: !15032, file: !3399, line: 1187, type: !109)
!15035 = !DILocation(line: 0, scope: !15032)
!15036 = !DILocation(line: 0, scope: !13419, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 1190, column: 9, scope: !15032)
!15038 = !DILocation(line: 145, column: 13, scope: !15039, inlinedAt: !15037)
!15039 = distinct !DILexicalBlock(scope: !13437, file: !3399, line: 144, column: 10)
!15040 = !DILocation(line: 1190, column: 2, scope: !15032)
!15041 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2301, file: !2301, line: 1517, type: !14937, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15042)
!15042 = !{!15043}
!15043 = !DILocalVariable(name: "thread", arg: 1, scope: !15041, file: !2301, line: 1517, type: !14843)
!15044 = !DILocation(line: 0, scope: !15041)
!15045 = !DILocation(line: 1521, column: 6, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15041, file: !2301, line: 1521, column: 6)
!15047 = !DILocation(line: 1521, column: 6, scope: !15041)
!15048 = !DILocation(line: 1525, column: 6, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15041, file: !2301, line: 1525, column: 6)
!15050 = !DILocation(line: 1525, column: 37, scope: !15049)
!15051 = !DILocation(line: 1525, column: 6, scope: !15041)
!15052 = !DILocation(line: 1527, column: 20, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15054, file: !2301, line: 1527, column: 7)
!15054 = distinct !DILexicalBlock(scope: !15049, file: !2301, line: 1525, column: 42)
!15055 = !DILocation(line: 1527, column: 33, scope: !15053)
!15056 = !DILocation(line: 1527, column: 7, scope: !15054)
!15057 = !DILocation(line: 1532, column: 2, scope: !15041)
!15058 = !DILocation(line: 1533, column: 2, scope: !15041)
!15059 = !DILocation(line: 1031, column: 3, scope: !14014, inlinedAt: !15060)
!15060 = distinct !DILocation(line: 48, column: 10, scope: !14018, inlinedAt: !15061)
!15061 = distinct !DILocation(line: 1537, column: 7, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !15041, file: !2301, line: 1537, column: 6)
!15063 = !DILocation(line: 0, scope: !14014, inlinedAt: !15060)
!15064 = !DILocation(line: 48, column: 9, scope: !14018, inlinedAt: !15061)
!15065 = !DILocation(line: 1537, column: 6, scope: !15041)
!15066 = !DILocation(line: 1538, column: 3, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15062, file: !2301, line: 1537, column: 25)
!15068 = !DILocation(line: 1539, column: 2, scope: !15067)
!15069 = !DILocation(line: 1540, column: 1, scope: !15041)
!15070 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11922, file: !11922, line: 101, type: !13490, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15071)
!15071 = !{!15072}
!15072 = !DILocalVariable(name: "thread", arg: 1, scope: !15070, file: !11922, line: 101, type: !2202)
!15073 = !DILocation(line: 0, scope: !15070)
!15074 = !DILocation(line: 103, column: 23, scope: !15070)
!15075 = !DILocation(line: 103, column: 36, scope: !15070)
!15076 = !DILocation(line: 103, column: 55, scope: !15070)
!15077 = !DILocation(line: 103, column: 2, scope: !15070)
!15078 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2301, file: !2301, line: 1567, type: !15079, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15081)
!15079 = !DISubroutineType(types: !15080)
!15080 = !{!14843}
!15081 = !{!15082}
!15082 = !DILocalVariable(name: "ret", scope: !15078, file: !2301, line: 1577, type: !14843)
!15083 = !DILocation(line: 1577, column: 30, scope: !15078)
!15084 = !DILocation(line: 0, scope: !15078)
!15085 = !DILocation(line: 1582, column: 2, scope: !15078)
!15086 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2301, file: !2301, line: 1593, type: !15087, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !245)
!15087 = !DISubroutineType(types: !15088)
!15088 = !{!103}
!15089 = !DILocation(line: 1031, column: 3, scope: !14014, inlinedAt: !15090)
!15090 = distinct !DILocation(line: 48, column: 10, scope: !14018, inlinedAt: !15091)
!15091 = distinct !DILocation(line: 1595, column: 10, scope: !15086)
!15092 = !DILocation(line: 0, scope: !14014, inlinedAt: !15090)
!15093 = !DILocation(line: 48, column: 9, scope: !14018, inlinedAt: !15091)
!15094 = !DILocation(line: 1595, column: 27, scope: !15086)
!15095 = !DILocation(line: 1595, column: 41, scope: !15086)
!15096 = !DILocation(line: 1595, column: 30, scope: !15086)
!15097 = !DILocation(line: 1595, column: 2, scope: !15086)
!15098 = distinct !DISubprogram(name: "z_thread_abort", scope: !2301, file: !2301, line: 1725, type: !13328, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15099)
!15099 = !{!15100, !15101}
!15100 = !DILocalVariable(name: "thread", arg: 1, scope: !15098, file: !2301, line: 1725, type: !2202)
!15101 = !DILocalVariable(name: "key", scope: !15098, file: !2301, line: 1727, type: !13362)
!15102 = !DILocation(line: 0, scope: !15098)
!15103 = !DILocation(line: 0, scope: !13370, inlinedAt: !15104)
!15104 = distinct !DILocation(line: 1727, column: 25, scope: !15098)
!15105 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !15106)
!15106 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !15104)
!15107 = !DILocation(line: 0, scope: !13379, inlinedAt: !15106)
!15108 = !DILocation(line: 1729, column: 20, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15098, file: !2301, line: 1729, column: 6)
!15110 = !DILocation(line: 1729, column: 33, scope: !15109)
!15111 = !DILocation(line: 1729, column: 48, scope: !15109)
!15112 = !DILocation(line: 1729, column: 6, scope: !15098)
!15113 = !DILocation(line: 0, scope: !13397, inlinedAt: !15114)
!15114 = distinct !DILocation(line: 1730, column: 3, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15109, file: !2301, line: 1729, column: 54)
!15116 = !DILocation(line: 0, scope: !13405, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !15114)
!15118 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !15117)
!15119 = !DILocation(line: 1732, column: 3, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15115, file: !2301, line: 1732, column: 3)
!15121 = !{i64 2155445451, i64 2155445467, i64 2155445493, i64 2155445521, i64 2155445541}
!15122 = !DILocation(line: 1733, column: 3, scope: !15115)
!15123 = !DILocation(line: 1736, column: 20, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15098, file: !2301, line: 1736, column: 6)
!15125 = !DILocation(line: 1736, column: 33, scope: !15124)
!15126 = !DILocation(line: 1736, column: 49, scope: !15124)
!15127 = !DILocation(line: 1736, column: 6, scope: !15098)
!15128 = !DILocation(line: 0, scope: !13397, inlinedAt: !15129)
!15129 = distinct !DILocation(line: 1737, column: 3, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15124, file: !2301, line: 1736, column: 56)
!15131 = !DILocation(line: 0, scope: !13405, inlinedAt: !15132)
!15132 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !15129)
!15133 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !15132)
!15134 = !DILocation(line: 1738, column: 3, scope: !15130)
!15135 = !DILocation(line: 1775, column: 2, scope: !15098)
!15136 = !DILocation(line: 1776, column: 16, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !15098, file: !2301, line: 1776, column: 6)
!15138 = !DILocation(line: 1776, column: 13, scope: !15137)
!15139 = !DILocation(line: 1776, column: 25, scope: !15137)
!15140 = !DILocation(line: 1031, column: 3, scope: !14014, inlinedAt: !15141)
!15141 = distinct !DILocation(line: 48, column: 10, scope: !14018, inlinedAt: !15142)
!15142 = distinct !DILocation(line: 1776, column: 29, scope: !15137)
!15143 = !DILocation(line: 0, scope: !14014, inlinedAt: !15141)
!15144 = !DILocation(line: 48, column: 9, scope: !14018, inlinedAt: !15142)
!15145 = !DILocation(line: 1776, column: 6, scope: !15098)
!15146 = !DILocation(line: 0, scope: !13981, inlinedAt: !15147)
!15147 = distinct !DILocation(line: 1777, column: 3, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15137, file: !2301, line: 1776, column: 47)
!15149 = !DILocation(line: 196, column: 9, scope: !13981, inlinedAt: !15147)
!15150 = !DILocation(line: 1779, column: 2, scope: !15148)
!15151 = !DILocation(line: 0, scope: !13397, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 1780, column: 2, scope: !15098)
!15153 = !DILocation(line: 0, scope: !13405, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !15152)
!15155 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !15154)
!15156 = !DILocation(line: 1781, column: 1, scope: !15098)
!15157 = distinct !DISubprogram(name: "end_thread", scope: !2301, file: !2301, line: 1690, type: !13328, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15158)
!15158 = !{!15159}
!15159 = !DILocalVariable(name: "thread", arg: 1, scope: !15157, file: !2301, line: 1690, type: !2202)
!15160 = !DILocation(line: 0, scope: !15157)
!15161 = !DILocation(line: 1695, column: 20, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15157, file: !2301, line: 1695, column: 6)
!15163 = !DILocation(line: 1695, column: 33, scope: !15162)
!15164 = !DILocation(line: 1695, column: 49, scope: !15162)
!15165 = !DILocation(line: 1695, column: 6, scope: !15157)
!15166 = !DILocation(line: 1697, column: 29, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15162, file: !2301, line: 1695, column: 56)
!15168 = !DILocation(line: 1698, column: 7, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15167, file: !2301, line: 1698, column: 7)
!15170 = !DILocation(line: 1698, column: 7, scope: !15167)
!15171 = !DILocation(line: 0, scope: !13541, inlinedAt: !15172)
!15172 = distinct !DILocation(line: 1699, column: 4, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15169, file: !2301, line: 1698, column: 35)
!15174 = !DILocation(line: 266, column: 28, scope: !13541, inlinedAt: !15172)
!15175 = !DILocation(line: 0, scope: !13549, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 268, column: 3, scope: !13553, inlinedAt: !15172)
!15177 = !DILocation(line: 234, column: 2, scope: !13549, inlinedAt: !15176)
!15178 = !DILocation(line: 1700, column: 3, scope: !15173)
!15179 = !DILocation(line: 1701, column: 20, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15167, file: !2301, line: 1701, column: 7)
!15181 = !DILocation(line: 1701, column: 30, scope: !15180)
!15182 = !DILocation(line: 1701, column: 7, scope: !15167)
!15183 = !DILocation(line: 1702, column: 4, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15180, file: !2301, line: 1701, column: 39)
!15185 = !DILocation(line: 1703, column: 3, scope: !15184)
!15186 = !DILocation(line: 1704, column: 9, scope: !15167)
!15187 = !DILocation(line: 1705, column: 23, scope: !15167)
!15188 = !DILocation(line: 1705, column: 3, scope: !15167)
!15189 = !DILocation(line: 1706, column: 3, scope: !15167)
!15190 = !DILocation(line: 1722, column: 2, scope: !15167)
!15191 = !DILocation(line: 1723, column: 1, scope: !15157)
!15192 = distinct !DISubprogram(name: "unpend_all", scope: !2301, file: !2301, line: 1674, type: !15193, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15195)
!15193 = !DISubroutineType(types: !15194)
!15194 = !{null, !2233}
!15195 = !{!15196, !15197}
!15196 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15192, file: !2301, line: 1674, type: !2233)
!15197 = !DILocalVariable(name: "thread", scope: !15192, file: !2301, line: 1676, type: !2202)
!15198 = !DILocation(line: 0, scope: !15192)
!15199 = !DILocation(line: 1678, column: 19, scope: !15192)
!15200 = !DILocation(line: 1678, column: 41, scope: !15192)
!15201 = !DILocation(line: 1678, column: 2, scope: !15192)
!15202 = !DILocation(line: 1679, column: 3, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15192, file: !2301, line: 1678, column: 50)
!15204 = !DILocation(line: 1680, column: 9, scope: !15203)
!15205 = !DILocalVariable(name: "thread", arg: 1, scope: !15206, file: !11942, line: 65, type: !2202)
!15206 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11942, file: !11942, line: 65, type: !15207, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15209)
!15207 = !DISubroutineType(types: !15208)
!15208 = !{null, !2202, !32}
!15209 = !{!15205, !15210}
!15210 = !DILocalVariable(name: "value", arg: 2, scope: !15206, file: !11942, line: 65, type: !32)
!15211 = !DILocation(line: 0, scope: !15206, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 1681, column: 3, scope: !15203)
!15213 = !DILocation(line: 67, column: 15, scope: !15206, inlinedAt: !15212)
!15214 = !DILocation(line: 67, column: 33, scope: !15206, inlinedAt: !15212)
!15215 = !DILocation(line: 1682, column: 3, scope: !15203)
!15216 = distinct !{!15216, !15201, !15217}
!15217 = !DILocation(line: 1683, column: 2, scope: !15192)
!15218 = !DILocation(line: 1684, column: 1, scope: !15192)
!15219 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2301, file: !2301, line: 1794, type: !15220, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15222)
!15220 = !DISubroutineType(types: !15221)
!15221 = !{!103, !2202, !14161}
!15222 = !{!15223, !15224, !15225, !15226}
!15223 = !DILocalVariable(name: "thread", arg: 1, scope: !15219, file: !2301, line: 1794, type: !2202)
!15224 = !DILocalVariable(name: "timeout", arg: 2, scope: !15219, file: !2301, line: 1794, type: !14161)
!15225 = !DILocalVariable(name: "key", scope: !15219, file: !2301, line: 1796, type: !13362)
!15226 = !DILocalVariable(name: "ret", scope: !15219, file: !2301, line: 1797, type: !103)
!15227 = !DILocation(line: 0, scope: !15219)
!15228 = !DILocation(line: 0, scope: !13370, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 1796, column: 25, scope: !15219)
!15230 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !15229)
!15232 = !DILocation(line: 0, scope: !13379, inlinedAt: !15231)
!15233 = !DILocation(line: 1801, column: 20, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15219, file: !2301, line: 1801, column: 6)
!15235 = !DILocation(line: 1801, column: 33, scope: !15234)
!15236 = !DILocation(line: 1801, column: 49, scope: !15234)
!15237 = !DILocation(line: 1801, column: 6, scope: !15219)
!15238 = !DILocation(line: 1803, column: 13, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15234, file: !2301, line: 1803, column: 13)
!15240 = !DILocation(line: 1803, column: 13, scope: !15234)
!15241 = !DILocation(line: 1805, column: 24, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15239, file: !2301, line: 1805, column: 13)
!15243 = !DILocation(line: 1805, column: 21, scope: !15242)
!15244 = !DILocation(line: 1805, column: 34, scope: !15242)
!15245 = !DILocation(line: 1806, column: 20, scope: !15242)
!15246 = !DILocation(line: 1806, column: 44, scope: !15242)
!15247 = !DILocation(line: 1806, column: 30, scope: !15242)
!15248 = !DILocation(line: 1805, column: 13, scope: !15239)
!15249 = !DILocation(line: 1810, column: 42, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15242, file: !2301, line: 1808, column: 9)
!15251 = !DILocation(line: 1810, column: 3, scope: !15250)
!15252 = !DILocation(line: 1811, column: 22, scope: !15250)
!15253 = !DILocation(line: 1811, column: 3, scope: !15250)
!15254 = !DILocation(line: 0, scope: !13981, inlinedAt: !15255)
!15255 = distinct !DILocation(line: 1814, column: 9, scope: !15250)
!15256 = !DILocation(line: 196, column: 9, scope: !13981, inlinedAt: !15255)
!15257 = !DILocation(line: 1817, column: 3, scope: !15250)
!15258 = !DILocation(line: 0, scope: !15234)
!15259 = !DILocation(line: 0, scope: !13397, inlinedAt: !15260)
!15260 = distinct !DILocation(line: 1822, column: 2, scope: !15219)
!15261 = !DILocation(line: 0, scope: !13405, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !15260)
!15263 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !15262)
!15264 = !DILocation(line: 1823, column: 2, scope: !15219)
!15265 = !DILocation(line: 1824, column: 1, scope: !15219)
!15266 = distinct !DISubprogram(name: "z_sched_wake", scope: !2301, file: !2301, line: 1882, type: !15267, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15269)
!15267 = !DISubroutineType(types: !15268)
!15268 = !{!131, !2233, !103, !102}
!15269 = !{!15270, !15271, !15272, !15273, !15274, !15275, !15277}
!15270 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15266, file: !2301, line: 1882, type: !2233)
!15271 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15266, file: !2301, line: 1882, type: !103)
!15272 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15266, file: !2301, line: 1882, type: !102)
!15273 = !DILocalVariable(name: "thread", scope: !15266, file: !2301, line: 1884, type: !2202)
!15274 = !DILocalVariable(name: "ret", scope: !15266, file: !2301, line: 1885, type: !131)
!15275 = !DILocalVariable(name: "__i", scope: !15276, file: !2301, line: 1887, type: !13362)
!15276 = distinct !DILexicalBlock(scope: !15266, file: !2301, line: 1887, column: 2)
!15277 = !DILocalVariable(name: "__key", scope: !15276, file: !2301, line: 1887, type: !13362)
!15278 = !DILocation(line: 0, scope: !15266)
!15279 = !DILocation(line: 0, scope: !15276)
!15280 = !DILocation(line: 0, scope: !13370, inlinedAt: !15281)
!15281 = distinct !DILocation(line: 1887, column: 2, scope: !15276)
!15282 = !DILocation(line: 55, column: 2, scope: !13379, inlinedAt: !15283)
!15283 = distinct !DILocation(line: 145, column: 10, scope: !13370, inlinedAt: !15281)
!15284 = !DILocation(line: 0, scope: !13379, inlinedAt: !15283)
!15285 = !DILocation(line: 1888, column: 12, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15287, file: !2301, line: 1887, column: 26)
!15287 = distinct !DILexicalBlock(scope: !15276, file: !2301, line: 1887, column: 2)
!15288 = !DILocation(line: 1890, column: 14, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15286, file: !2301, line: 1890, column: 7)
!15290 = !DILocation(line: 1890, column: 7, scope: !15286)
!15291 = !DILocalVariable(name: "thread", arg: 1, scope: !15292, file: !12669, line: 134, type: !2202)
!15292 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !12669, file: !12669, line: 134, type: !15293, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15295)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{null, !2202, !32, !102}
!15295 = !{!15291, !15296, !15297}
!15296 = !DILocalVariable(name: "value", arg: 2, scope: !15292, file: !12669, line: 135, type: !32)
!15297 = !DILocalVariable(name: "data", arg: 3, scope: !15292, file: !12669, line: 136, type: !102)
!15298 = !DILocation(line: 0, scope: !15292, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 1891, column: 4, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15289, file: !2301, line: 1890, column: 23)
!15301 = !DILocation(line: 0, scope: !15206, inlinedAt: !15302)
!15302 = distinct !DILocation(line: 138, column: 2, scope: !15292, inlinedAt: !15299)
!15303 = !DILocation(line: 67, column: 15, scope: !15206, inlinedAt: !15302)
!15304 = !DILocation(line: 67, column: 33, scope: !15206, inlinedAt: !15302)
!15305 = !DILocation(line: 139, column: 15, scope: !15292, inlinedAt: !15299)
!15306 = !DILocation(line: 139, column: 25, scope: !15292, inlinedAt: !15299)
!15307 = !DILocation(line: 1894, column: 4, scope: !15300)
!15308 = !DILocation(line: 1895, column: 10, scope: !15300)
!15309 = !DILocation(line: 1896, column: 4, scope: !15300)
!15310 = !DILocation(line: 1898, column: 3, scope: !15300)
!15311 = !DILocation(line: 0, scope: !13397, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 1887, column: 2, scope: !15287)
!15313 = !DILocation(line: 0, scope: !13405, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 215, column: 2, scope: !13397, inlinedAt: !15312)
!15315 = !DILocation(line: 95, column: 2, scope: !13405, inlinedAt: !15314)
!15316 = !DILocation(line: 1901, column: 2, scope: !15266)
!15317 = distinct !DISubprogram(name: "z_sched_wait", scope: !2301, file: !2301, line: 1904, type: !15318, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !15321)
!15318 = !DISubroutineType(types: !15319)
!15319 = !{!103, !13373, !13362, !2233, !14161, !15320}
!15320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15321 = !{!15322, !15323, !15324, !15325, !15326, !15327}
!15322 = !DILocalVariable(name: "lock", arg: 1, scope: !15317, file: !2301, line: 1904, type: !13373)
!15323 = !DILocalVariable(name: "key", arg: 2, scope: !15317, file: !2301, line: 1904, type: !13362)
!15324 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15317, file: !2301, line: 1905, type: !2233)
!15325 = !DILocalVariable(name: "timeout", arg: 4, scope: !15317, file: !2301, line: 1905, type: !14161)
!15326 = !DILocalVariable(name: "data", arg: 5, scope: !15317, file: !2301, line: 1905, type: !15320)
!15327 = !DILocalVariable(name: "ret", scope: !15317, file: !2301, line: 1907, type: !103)
!15328 = !DILocation(line: 0, scope: !15317)
!15329 = !DILocation(line: 1907, column: 12, scope: !15317)
!15330 = !DILocation(line: 1909, column: 11, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15317, file: !2301, line: 1909, column: 6)
!15332 = !DILocation(line: 1909, column: 6, scope: !15317)
!15333 = !DILocation(line: 1910, column: 11, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15331, file: !2301, line: 1909, column: 20)
!15335 = !DILocation(line: 1910, column: 26, scope: !15334)
!15336 = !DILocation(line: 1910, column: 9, scope: !15334)
!15337 = !DILocation(line: 1911, column: 2, scope: !15334)
!15338 = !DILocation(line: 1912, column: 2, scope: !15317)
!15339 = distinct !DISubprogram(name: "z_data_copy", scope: !15340, file: !15340, line: 22, type: !328, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3148, retainedNodes: !245)
!15340 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15341 = !DILocation(line: 24, column: 2, scope: !15339)
!15342 = !DILocation(line: 27, column: 2, scope: !15339)
!15343 = !DILocation(line: 71, column: 1, scope: !15339)
!15344 = distinct !DISubprogram(name: "z_add_timeout", scope: !2338, file: !2338, line: 88, type: !15345, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15351)
!15345 = !DISubroutineType(types: !15346)
!15346 = !{null, !2311, !2330, !15347}
!15347 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15348)
!15348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15349)
!15349 = !{!15350}
!15350 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15348, file: !105, line: 66, baseType: !104, size: 64)
!15351 = !{!15352, !15353, !15354, !15355, !15361, !15362, !15365, !15368}
!15352 = !DILocalVariable(name: "to", arg: 1, scope: !15344, file: !2338, line: 88, type: !2311)
!15353 = !DILocalVariable(name: "fn", arg: 2, scope: !15344, file: !2338, line: 88, type: !2330)
!15354 = !DILocalVariable(name: "timeout", arg: 3, scope: !15344, file: !2338, line: 89, type: !15347)
!15355 = !DILocalVariable(name: "__i", scope: !15356, file: !2338, line: 102, type: !15357)
!15356 = distinct !DILexicalBlock(scope: !15344, file: !2338, line: 102, column: 2)
!15357 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !15358)
!15358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !15359)
!15359 = !{!15360}
!15360 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15358, file: !244, line: 33, baseType: !103, size: 32)
!15361 = !DILocalVariable(name: "__key", scope: !15356, file: !2338, line: 102, type: !15357)
!15362 = !DILocalVariable(name: "t", scope: !15363, file: !2338, line: 103, type: !2311)
!15363 = distinct !DILexicalBlock(scope: !15364, file: !2338, line: 102, column: 24)
!15364 = distinct !DILexicalBlock(scope: !15356, file: !2338, line: 102, column: 2)
!15365 = !DILocalVariable(name: "ticks", scope: !15366, file: !2338, line: 107, type: !104)
!15366 = distinct !DILexicalBlock(scope: !15367, file: !2338, line: 106, column: 39)
!15367 = distinct !DILexicalBlock(scope: !15363, file: !2338, line: 105, column: 7)
!15368 = !DILocalVariable(name: "next_time", scope: !15369, file: !2338, line: 137, type: !325)
!15369 = distinct !DILexicalBlock(scope: !15370, file: !2338, line: 127, column: 22)
!15370 = distinct !DILexicalBlock(scope: !15363, file: !2338, line: 127, column: 7)
!15371 = !DILocation(line: 0, scope: !15344)
!15372 = !DILocation(line: 91, column: 6, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15344, file: !2338, line: 91, column: 6)
!15374 = !DILocation(line: 91, column: 6, scope: !15344)
!15375 = !DILocation(line: 100, column: 6, scope: !15344)
!15376 = !DILocation(line: 100, column: 9, scope: !15344)
!15377 = !DILocation(line: 0, scope: !15356)
!15378 = !DILocalVariable(name: "l", arg: 1, scope: !15379, file: !244, line: 136, type: !15382)
!15379 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !15380, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15383)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{!15357, !15382}
!15382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!15383 = !{!15378, !15384}
!15384 = !DILocalVariable(name: "k", scope: !15379, file: !244, line: 139, type: !15357)
!15385 = !DILocation(line: 0, scope: !15379, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 102, column: 2, scope: !15356)
!15387 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15392)
!15388 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15389)
!15389 = !{!15390, !15391}
!15390 = !DILocalVariable(name: "key", scope: !15388, file: !7161, line: 44, type: !32)
!15391 = !DILocalVariable(name: "tmp", scope: !15388, file: !7161, line: 53, type: !32)
!15392 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15386)
!15393 = !{i64 2847873}
!15394 = !DILocation(line: 0, scope: !15388, inlinedAt: !15392)
!15395 = !DILocation(line: 106, column: 33, scope: !15367)
!15396 = !DILocation(line: 105, column: 7, scope: !15363)
!15397 = !DILocation(line: 107, column: 50, scope: !15366)
!15398 = !DILocation(line: 107, column: 48, scope: !15366)
!15399 = !DILocation(line: 0, scope: !15366)
!15400 = !DILocation(line: 109, column: 17, scope: !15366)
!15401 = !DILocation(line: 110, column: 3, scope: !15366)
!15402 = !DILocation(line: 111, column: 31, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15367, file: !2338, line: 110, column: 10)
!15404 = !DILocation(line: 111, column: 37, scope: !15403)
!15405 = !DILocation(line: 111, column: 35, scope: !15403)
!15406 = !DILocation(line: 0, scope: !15367)
!15407 = !DILocation(line: 109, column: 8, scope: !15366)
!15408 = !DILocation(line: 109, column: 15, scope: !15366)
!15409 = !DILocation(line: 114, column: 12, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15363, file: !2338, line: 114, column: 3)
!15411 = !DILocation(line: 0, scope: !15363)
!15412 = !DILocation(line: 114, column: 3, scope: !15410)
!15413 = !DILocation(line: 115, column: 24, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15415, file: !2338, line: 115, column: 8)
!15415 = distinct !DILexicalBlock(scope: !15416, file: !2338, line: 114, column: 45)
!15416 = distinct !DILexicalBlock(scope: !15410, file: !2338, line: 114, column: 3)
!15417 = !DILocation(line: 115, column: 11, scope: !15414)
!15418 = !DILocation(line: 115, column: 18, scope: !15414)
!15419 = !DILocation(line: 115, column: 8, scope: !15415)
!15420 = !DILocation(line: 116, column: 15, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15414, file: !2338, line: 115, column: 32)
!15422 = !DILocation(line: 117, column: 26, scope: !15421)
!15423 = !DILocation(line: 117, column: 37, scope: !15421)
!15424 = !DILocation(line: 117, column: 5, scope: !15421)
!15425 = !DILocation(line: 123, column: 7, scope: !15363)
!15426 = !DILocation(line: 120, column: 15, scope: !15415)
!15427 = !DILocation(line: 114, column: 36, scope: !15416)
!15428 = distinct !{!15428, !15412, !15429}
!15429 = !DILocation(line: 121, column: 3, scope: !15410)
!15430 = !DILocation(line: 124, column: 41, scope: !15431)
!15431 = distinct !DILexicalBlock(scope: !15432, file: !2338, line: 123, column: 18)
!15432 = distinct !DILexicalBlock(scope: !15363, file: !2338, line: 123, column: 7)
!15433 = !DILocation(line: 124, column: 4, scope: !15431)
!15434 = !DILocation(line: 125, column: 3, scope: !15431)
!15435 = !DILocation(line: 127, column: 13, scope: !15370)
!15436 = !DILocation(line: 127, column: 10, scope: !15370)
!15437 = !DILocation(line: 127, column: 7, scope: !15363)
!15438 = !DILocation(line: 137, column: 24, scope: !15369)
!15439 = !DILocation(line: 0, scope: !15369)
!15440 = !DILocation(line: 139, column: 18, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15369, file: !2338, line: 139, column: 8)
!15442 = !DILocation(line: 139, column: 23, scope: !15441)
!15443 = !DILocation(line: 141, column: 5, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15441, file: !2338, line: 140, column: 48)
!15445 = !DILocation(line: 142, column: 4, scope: !15444)
!15446 = !DILocalVariable(name: "key", arg: 2, scope: !15447, file: !244, line: 190, type: !15357)
!15447 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !15448, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15450)
!15448 = !DISubroutineType(types: !15449)
!15449 = !{null, !15382, !15357}
!15450 = !{!15451, !15446}
!15451 = !DILocalVariable(name: "l", arg: 1, scope: !15447, file: !244, line: 189, type: !15382)
!15452 = !DILocation(line: 0, scope: !15447, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 102, column: 2, scope: !15364)
!15454 = !DILocalVariable(name: "key", arg: 1, scope: !15455, file: !7161, line: 84, type: !32)
!15455 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15456)
!15456 = !{!15454}
!15457 = !DILocation(line: 0, scope: !15455, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15453)
!15459 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15458)
!15460 = !{i64 2848690}
!15461 = !DILocation(line: 148, column: 1, scope: !15344)
!15462 = distinct !DISubprogram(name: "elapsed", scope: !2338, file: !2338, line: 62, type: !15463, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !245)
!15463 = !DISubroutineType(types: !15464)
!15464 = !{!325}
!15465 = !DILocation(line: 64, column: 9, scope: !15462)
!15466 = !DILocation(line: 64, column: 28, scope: !15462)
!15467 = !DILocation(line: 64, column: 35, scope: !15462)
!15468 = !DILocation(line: 64, column: 2, scope: !15462)
!15469 = distinct !DISubprogram(name: "first", scope: !2338, file: !2338, line: 39, type: !15470, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15472)
!15470 = !DISubroutineType(types: !15471)
!15471 = !{!2311}
!15472 = !{!15473}
!15473 = !DILocalVariable(name: "t", scope: !15469, file: !2338, line: 41, type: !15474)
!15474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!15475 = !DILocation(line: 41, column: 19, scope: !15469)
!15476 = !DILocation(line: 0, scope: !15469)
!15477 = !DILocation(line: 43, column: 9, scope: !15469)
!15478 = !DILocation(line: 43, column: 2, scope: !15469)
!15479 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !15480, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15482)
!15480 = !DISubroutineType(types: !15481)
!15481 = !{null, !15474, !15474}
!15482 = !{!15483, !15484, !15485}
!15483 = !DILocalVariable(name: "successor", arg: 1, scope: !15479, file: !146, line: 443, type: !15474)
!15484 = !DILocalVariable(name: "node", arg: 2, scope: !15479, file: !146, line: 443, type: !15474)
!15485 = !DILocalVariable(name: "prev", scope: !15479, file: !146, line: 445, type: !15486)
!15486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15474)
!15487 = !DILocation(line: 0, scope: !15479)
!15488 = !DILocation(line: 445, column: 39, scope: !15479)
!15489 = !DILocation(line: 447, column: 8, scope: !15479)
!15490 = !DILocation(line: 447, column: 13, scope: !15479)
!15491 = !DILocation(line: 448, column: 8, scope: !15479)
!15492 = !DILocation(line: 448, column: 13, scope: !15479)
!15493 = !DILocation(line: 449, column: 8, scope: !15479)
!15494 = !DILocation(line: 449, column: 13, scope: !15479)
!15495 = !DILocation(line: 450, column: 18, scope: !15479)
!15496 = !DILocation(line: 451, column: 1, scope: !15479)
!15497 = distinct !DISubprogram(name: "next", scope: !2338, file: !2338, line: 46, type: !15498, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15500)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{!2311, !2311}
!15500 = !{!15501, !15502}
!15501 = !DILocalVariable(name: "t", arg: 1, scope: !15497, file: !2338, line: 46, type: !2311)
!15502 = !DILocalVariable(name: "n", scope: !15497, file: !2338, line: 48, type: !15474)
!15503 = !DILocation(line: 0, scope: !15497)
!15504 = !DILocation(line: 48, column: 58, scope: !15497)
!15505 = !DILocation(line: 48, column: 19, scope: !15497)
!15506 = !DILocation(line: 50, column: 9, scope: !15497)
!15507 = !DILocation(line: 50, column: 2, scope: !15497)
!15508 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !15509, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15512)
!15509 = !DISubroutineType(types: !15510)
!15510 = !{null, !15511, !15474}
!15511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!15512 = !{!15513, !15514, !15515}
!15513 = !DILocalVariable(name: "list", arg: 1, scope: !15508, file: !146, line: 404, type: !15511)
!15514 = !DILocalVariable(name: "node", arg: 2, scope: !15508, file: !146, line: 404, type: !15474)
!15515 = !DILocalVariable(name: "tail", scope: !15508, file: !146, line: 406, type: !15486)
!15516 = !DILocation(line: 0, scope: !15508)
!15517 = !DILocation(line: 406, column: 34, scope: !15508)
!15518 = !DILocation(line: 408, column: 8, scope: !15508)
!15519 = !DILocation(line: 408, column: 13, scope: !15508)
!15520 = !DILocation(line: 409, column: 8, scope: !15508)
!15521 = !DILocation(line: 409, column: 13, scope: !15508)
!15522 = !DILocation(line: 411, column: 8, scope: !15508)
!15523 = !DILocation(line: 411, column: 13, scope: !15508)
!15524 = !DILocation(line: 412, column: 13, scope: !15508)
!15525 = !DILocation(line: 413, column: 1, scope: !15508)
!15526 = distinct !DISubprogram(name: "next_timeout", scope: !2338, file: !2338, line: 67, type: !15463, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15527)
!15527 = !{!15528, !15529, !15530}
!15528 = !DILocalVariable(name: "to", scope: !15526, file: !2338, line: 69, type: !2311)
!15529 = !DILocalVariable(name: "ticks_elapsed", scope: !15526, file: !2338, line: 70, type: !325)
!15530 = !DILocalVariable(name: "ret", scope: !15526, file: !2338, line: 71, type: !325)
!15531 = !DILocation(line: 69, column: 24, scope: !15526)
!15532 = !DILocation(line: 0, scope: !15526)
!15533 = !DILocation(line: 70, column: 26, scope: !15526)
!15534 = !DILocation(line: 73, column: 10, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15526, file: !2338, line: 73, column: 6)
!15536 = !DILocation(line: 73, column: 19, scope: !15535)
!15537 = !DILocation(line: 74, column: 21, scope: !15535)
!15538 = !DILocation(line: 74, column: 30, scope: !15535)
!15539 = !DILocation(line: 74, column: 28, scope: !15535)
!15540 = !DILocation(line: 74, column: 45, scope: !15535)
!15541 = !DILocation(line: 73, column: 6, scope: !15526)
!15542 = !DILocation(line: 77, column: 9, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !15535, file: !2338, line: 76, column: 9)
!15544 = !DILocation(line: 0, scope: !15535)
!15545 = !DILocation(line: 81, column: 20, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15526, file: !2338, line: 81, column: 6)
!15547 = !DILocation(line: 81, column: 6, scope: !15546)
!15548 = !DILocation(line: 81, column: 32, scope: !15546)
!15549 = !DILocation(line: 85, column: 2, scope: !15526)
!15550 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !15551, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15553)
!15551 = !DISubroutineType(types: !15552)
!15552 = !{!15474, !15511, !15474}
!15553 = !{!15554, !15555}
!15554 = !DILocalVariable(name: "list", arg: 1, scope: !15550, file: !146, line: 341, type: !15511)
!15555 = !DILocalVariable(name: "node", arg: 2, scope: !15550, file: !146, line: 342, type: !15474)
!15556 = !DILocation(line: 0, scope: !15550)
!15557 = !DILocation(line: 344, column: 15, scope: !15550)
!15558 = !DILocation(line: 344, column: 9, scope: !15550)
!15559 = !DILocation(line: 344, column: 26, scope: !15550)
!15560 = !DILocation(line: 344, column: 2, scope: !15550)
!15561 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !15551, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15562)
!15562 = !{!15563, !15564}
!15563 = !DILocalVariable(name: "list", arg: 1, scope: !15561, file: !146, line: 325, type: !15511)
!15564 = !DILocalVariable(name: "node", arg: 2, scope: !15561, file: !146, line: 326, type: !15474)
!15565 = !DILocation(line: 0, scope: !15561)
!15566 = !DILocation(line: 328, column: 24, scope: !15561)
!15567 = !DILocation(line: 328, column: 15, scope: !15561)
!15568 = !DILocation(line: 328, column: 9, scope: !15561)
!15569 = !DILocation(line: 328, column: 45, scope: !15561)
!15570 = !DILocation(line: 328, column: 2, scope: !15561)
!15571 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15572, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15574)
!15572 = !DISubroutineType(types: !15573)
!15573 = !{!15474, !15511}
!15574 = !{!15575}
!15575 = !DILocalVariable(name: "list", arg: 1, scope: !15571, file: !146, line: 294, type: !15511)
!15576 = !DILocation(line: 0, scope: !15571)
!15577 = !DILocation(line: 296, column: 9, scope: !15571)
!15578 = !DILocation(line: 296, column: 2, scope: !15571)
!15579 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15580, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15582)
!15580 = !DISubroutineType(types: !15581)
!15581 = !{!131, !15511}
!15582 = !{!15583}
!15583 = !DILocalVariable(name: "list", arg: 1, scope: !15579, file: !146, line: 266, type: !15511)
!15584 = !DILocation(line: 0, scope: !15579)
!15585 = !DILocation(line: 268, column: 15, scope: !15579)
!15586 = !DILocation(line: 268, column: 20, scope: !15579)
!15587 = !DILocation(line: 268, column: 2, scope: !15579)
!15588 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2338, file: !2338, line: 150, type: !15589, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15591)
!15589 = !DISubroutineType(types: !15590)
!15590 = !{!103, !2311}
!15591 = !{!15592, !15593, !15594, !15596}
!15592 = !DILocalVariable(name: "to", arg: 1, scope: !15588, file: !2338, line: 150, type: !2311)
!15593 = !DILocalVariable(name: "ret", scope: !15588, file: !2338, line: 152, type: !103)
!15594 = !DILocalVariable(name: "__i", scope: !15595, file: !2338, line: 154, type: !15357)
!15595 = distinct !DILexicalBlock(scope: !15588, file: !2338, line: 154, column: 2)
!15596 = !DILocalVariable(name: "__key", scope: !15595, file: !2338, line: 154, type: !15357)
!15597 = !DILocation(line: 0, scope: !15588)
!15598 = !DILocation(line: 0, scope: !15595)
!15599 = !DILocation(line: 0, scope: !15379, inlinedAt: !15600)
!15600 = distinct !DILocation(line: 154, column: 2, scope: !15595)
!15601 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15600)
!15603 = !DILocation(line: 0, scope: !15388, inlinedAt: !15602)
!15604 = !DILocation(line: 155, column: 7, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2338, line: 155, column: 7)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !2338, line: 154, column: 24)
!15607 = distinct !DILexicalBlock(scope: !15595, file: !2338, line: 154, column: 2)
!15608 = !DILocation(line: 155, column: 7, scope: !15606)
!15609 = !DILocation(line: 156, column: 4, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15605, file: !2338, line: 155, column: 39)
!15611 = !DILocation(line: 158, column: 3, scope: !15610)
!15612 = !DILocation(line: 0, scope: !15447, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 154, column: 2, scope: !15607)
!15614 = !DILocation(line: 0, scope: !15455, inlinedAt: !15615)
!15615 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15613)
!15616 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15615)
!15617 = !DILocation(line: 161, column: 2, scope: !15588)
!15618 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !15619, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15623)
!15619 = !DISubroutineType(types: !15620)
!15620 = !{!131, !15621}
!15621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15622, size: 32)
!15622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2315)
!15623 = !{!15624}
!15624 = !DILocalVariable(name: "node", arg: 1, scope: !15618, file: !146, line: 225, type: !15621)
!15625 = !DILocation(line: 0, scope: !15618)
!15626 = !DILocation(line: 227, column: 15, scope: !15618)
!15627 = !DILocation(line: 227, column: 20, scope: !15618)
!15628 = !DILocation(line: 227, column: 2, scope: !15618)
!15629 = distinct !DISubprogram(name: "remove_timeout", scope: !2338, file: !2338, line: 53, type: !2332, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15630)
!15630 = !{!15631}
!15631 = !DILocalVariable(name: "t", arg: 1, scope: !15629, file: !2338, line: 53, type: !2311)
!15632 = !DILocation(line: 0, scope: !15629)
!15633 = !DILocation(line: 55, column: 6, scope: !15634)
!15634 = distinct !DILexicalBlock(scope: !15629, file: !2338, line: 55, column: 6)
!15635 = !DILocation(line: 55, column: 14, scope: !15634)
!15636 = !DILocation(line: 55, column: 6, scope: !15629)
!15637 = !DILocation(line: 56, column: 25, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15634, file: !2338, line: 55, column: 23)
!15639 = !DILocation(line: 56, column: 12, scope: !15638)
!15640 = !DILocation(line: 56, column: 19, scope: !15638)
!15641 = !DILocation(line: 57, column: 2, scope: !15638)
!15642 = !DILocation(line: 59, column: 23, scope: !15629)
!15643 = !DILocation(line: 59, column: 2, scope: !15629)
!15644 = !DILocation(line: 60, column: 1, scope: !15629)
!15645 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !15646, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15648)
!15646 = !DISubroutineType(types: !15647)
!15647 = !{null, !15474}
!15648 = !{!15649, !15650, !15651}
!15649 = !DILocalVariable(name: "node", arg: 1, scope: !15645, file: !146, line: 496, type: !15474)
!15650 = !DILocalVariable(name: "prev", scope: !15645, file: !146, line: 498, type: !15486)
!15651 = !DILocalVariable(name: "next", scope: !15645, file: !146, line: 499, type: !15486)
!15652 = !DILocation(line: 0, scope: !15645)
!15653 = !DILocation(line: 498, column: 34, scope: !15645)
!15654 = !DILocation(line: 499, column: 34, scope: !15645)
!15655 = !DILocation(line: 501, column: 8, scope: !15645)
!15656 = !DILocation(line: 501, column: 13, scope: !15645)
!15657 = !DILocation(line: 502, column: 8, scope: !15645)
!15658 = !DILocation(line: 502, column: 13, scope: !15645)
!15659 = !DILocation(line: 503, column: 2, scope: !15645)
!15660 = !DILocation(line: 504, column: 1, scope: !15645)
!15661 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !15646, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15662)
!15662 = !{!15663}
!15663 = !DILocalVariable(name: "node", arg: 1, scope: !15661, file: !146, line: 211, type: !15474)
!15664 = !DILocation(line: 0, scope: !15661)
!15665 = !DILocation(line: 213, column: 8, scope: !15661)
!15666 = !DILocation(line: 213, column: 13, scope: !15661)
!15667 = !DILocation(line: 214, column: 8, scope: !15661)
!15668 = !DILocation(line: 214, column: 13, scope: !15661)
!15669 = !DILocation(line: 215, column: 1, scope: !15661)
!15670 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2338, file: !2338, line: 183, type: !15671, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15675)
!15671 = !DISubroutineType(types: !15672)
!15672 = !{!104, !15673}
!15673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15674, size: 32)
!15674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2312)
!15675 = !{!15676, !15677, !15678, !15680}
!15676 = !DILocalVariable(name: "timeout", arg: 1, scope: !15670, file: !2338, line: 183, type: !15673)
!15677 = !DILocalVariable(name: "ticks", scope: !15670, file: !2338, line: 185, type: !104)
!15678 = !DILocalVariable(name: "__i", scope: !15679, file: !2338, line: 187, type: !15357)
!15679 = distinct !DILexicalBlock(scope: !15670, file: !2338, line: 187, column: 2)
!15680 = !DILocalVariable(name: "__key", scope: !15679, file: !2338, line: 187, type: !15357)
!15681 = !DILocation(line: 0, scope: !15670)
!15682 = !DILocation(line: 0, scope: !15679)
!15683 = !DILocation(line: 0, scope: !15379, inlinedAt: !15684)
!15684 = distinct !DILocation(line: 187, column: 2, scope: !15679)
!15685 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15686)
!15686 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15684)
!15687 = !DILocation(line: 0, scope: !15388, inlinedAt: !15686)
!15688 = !DILocation(line: 188, column: 11, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15690, file: !2338, line: 187, column: 24)
!15690 = distinct !DILexicalBlock(scope: !15679, file: !2338, line: 187, column: 2)
!15691 = !DILocation(line: 0, scope: !15447, inlinedAt: !15692)
!15692 = distinct !DILocation(line: 187, column: 2, scope: !15690)
!15693 = !DILocation(line: 0, scope: !15455, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15692)
!15695 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15694)
!15696 = !DILocation(line: 191, column: 2, scope: !15670)
!15697 = distinct !DISubprogram(name: "timeout_rem", scope: !2338, file: !2338, line: 165, type: !15671, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15698)
!15698 = !{!15699, !15700, !15701}
!15699 = !DILocalVariable(name: "timeout", arg: 1, scope: !15697, file: !2338, line: 165, type: !15673)
!15700 = !DILocalVariable(name: "ticks", scope: !15697, file: !2338, line: 167, type: !104)
!15701 = !DILocalVariable(name: "t", scope: !15702, file: !2338, line: 173, type: !2311)
!15702 = distinct !DILexicalBlock(scope: !15697, file: !2338, line: 173, column: 2)
!15703 = !DILocation(line: 0, scope: !15697)
!15704 = !DILocation(line: 169, column: 6, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15697, file: !2338, line: 169, column: 6)
!15706 = !DILocation(line: 169, column: 6, scope: !15697)
!15707 = !DILocation(line: 173, column: 28, scope: !15702)
!15708 = !DILocation(line: 0, scope: !15702)
!15709 = !DILocation(line: 173, column: 39, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15702, file: !2338, line: 173, column: 2)
!15711 = !DILocation(line: 173, column: 2, scope: !15702)
!15712 = !DILocation(line: 174, column: 15, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15710, file: !2338, line: 173, column: 61)
!15714 = !DILocation(line: 174, column: 9, scope: !15713)
!15715 = !DILocation(line: 175, column: 15, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15713, file: !2338, line: 175, column: 7)
!15717 = !DILocation(line: 175, column: 7, scope: !15713)
!15718 = !DILocation(line: 173, column: 52, scope: !15710)
!15719 = distinct !{!15719, !15711, !15720}
!15720 = !DILocation(line: 178, column: 2, scope: !15702)
!15721 = !DILocation(line: 180, column: 17, scope: !15697)
!15722 = !DILocation(line: 180, column: 15, scope: !15697)
!15723 = !DILocation(line: 180, column: 2, scope: !15697)
!15724 = !DILocation(line: 181, column: 1, scope: !15697)
!15725 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12293, file: !12293, line: 35, type: !15726, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15728)
!15726 = !DISubroutineType(types: !15727)
!15727 = !{!131, !15673}
!15728 = !{!15729}
!15729 = !DILocalVariable(name: "to", arg: 1, scope: !15725, file: !12293, line: 35, type: !15673)
!15730 = !DILocation(line: 0, scope: !15725)
!15731 = !DILocation(line: 37, column: 35, scope: !15725)
!15732 = !DILocation(line: 37, column: 10, scope: !15725)
!15733 = !DILocation(line: 37, column: 9, scope: !15725)
!15734 = !DILocation(line: 37, column: 2, scope: !15725)
!15735 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2338, file: !2338, line: 194, type: !15671, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15736)
!15736 = !{!15737, !15738, !15739, !15741}
!15737 = !DILocalVariable(name: "timeout", arg: 1, scope: !15735, file: !2338, line: 194, type: !15673)
!15738 = !DILocalVariable(name: "ticks", scope: !15735, file: !2338, line: 196, type: !104)
!15739 = !DILocalVariable(name: "__i", scope: !15740, file: !2338, line: 198, type: !15357)
!15740 = distinct !DILexicalBlock(scope: !15735, file: !2338, line: 198, column: 2)
!15741 = !DILocalVariable(name: "__key", scope: !15740, file: !2338, line: 198, type: !15357)
!15742 = !DILocation(line: 0, scope: !15735)
!15743 = !DILocation(line: 0, scope: !15740)
!15744 = !DILocation(line: 0, scope: !15379, inlinedAt: !15745)
!15745 = distinct !DILocation(line: 198, column: 2, scope: !15740)
!15746 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15745)
!15748 = !DILocation(line: 0, scope: !15388, inlinedAt: !15747)
!15749 = !DILocation(line: 199, column: 11, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15751, file: !2338, line: 198, column: 24)
!15751 = distinct !DILexicalBlock(scope: !15740, file: !2338, line: 198, column: 2)
!15752 = !DILocation(line: 199, column: 23, scope: !15750)
!15753 = !DILocation(line: 0, scope: !15447, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 198, column: 2, scope: !15751)
!15755 = !DILocation(line: 0, scope: !15455, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15754)
!15757 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15756)
!15758 = !DILocation(line: 199, column: 21, scope: !15750)
!15759 = !DILocation(line: 202, column: 2, scope: !15735)
!15760 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2338, file: !2338, line: 205, type: !15463, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15761)
!15761 = !{!15762, !15763, !15765}
!15762 = !DILocalVariable(name: "ret", scope: !15760, file: !2338, line: 207, type: !325)
!15763 = !DILocalVariable(name: "__i", scope: !15764, file: !2338, line: 209, type: !15357)
!15764 = distinct !DILexicalBlock(scope: !15760, file: !2338, line: 209, column: 2)
!15765 = !DILocalVariable(name: "__key", scope: !15764, file: !2338, line: 209, type: !15357)
!15766 = !DILocation(line: 0, scope: !15760)
!15767 = !DILocation(line: 0, scope: !15764)
!15768 = !DILocation(line: 0, scope: !15379, inlinedAt: !15769)
!15769 = distinct !DILocation(line: 209, column: 2, scope: !15764)
!15770 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15771)
!15771 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15769)
!15772 = !DILocation(line: 0, scope: !15388, inlinedAt: !15771)
!15773 = !DILocation(line: 210, column: 9, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15775, file: !2338, line: 209, column: 24)
!15775 = distinct !DILexicalBlock(scope: !15764, file: !2338, line: 209, column: 2)
!15776 = !DILocation(line: 0, scope: !15447, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 209, column: 2, scope: !15775)
!15778 = !DILocation(line: 0, scope: !15455, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15777)
!15780 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15779)
!15781 = !DILocation(line: 212, column: 2, scope: !15760)
!15782 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2338, file: !2338, line: 215, type: !9862, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15783)
!15783 = !{!15784, !15785, !15786, !15788, !15789, !15792, !15793}
!15784 = !DILocalVariable(name: "ticks", arg: 1, scope: !15782, file: !2338, line: 215, type: !325)
!15785 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15782, file: !2338, line: 215, type: !131)
!15786 = !DILocalVariable(name: "__i", scope: !15787, file: !2338, line: 217, type: !15357)
!15787 = distinct !DILexicalBlock(scope: !15782, file: !2338, line: 217, column: 2)
!15788 = !DILocalVariable(name: "__key", scope: !15787, file: !2338, line: 217, type: !15357)
!15789 = !DILocalVariable(name: "next_to", scope: !15790, file: !2338, line: 218, type: !103)
!15790 = distinct !DILexicalBlock(scope: !15791, file: !2338, line: 217, column: 24)
!15791 = distinct !DILexicalBlock(scope: !15787, file: !2338, line: 217, column: 2)
!15792 = !DILocalVariable(name: "sooner", scope: !15790, file: !2338, line: 219, type: !131)
!15793 = !DILocalVariable(name: "imminent", scope: !15790, file: !2338, line: 221, type: !131)
!15794 = !DILocation(line: 0, scope: !15782)
!15795 = !DILocation(line: 0, scope: !15787)
!15796 = !DILocation(line: 0, scope: !15379, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 217, column: 2, scope: !15787)
!15798 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15797)
!15800 = !DILocation(line: 0, scope: !15388, inlinedAt: !15799)
!15801 = !DILocation(line: 218, column: 17, scope: !15790)
!15802 = !DILocation(line: 0, scope: !15790)
!15803 = !DILocation(line: 221, column: 27, scope: !15790)
!15804 = !DILocation(line: 233, column: 17, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15790, file: !2338, line: 233, column: 7)
!15806 = !DILocation(line: 234, column: 26, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15805, file: !2338, line: 233, column: 56)
!15808 = !DILocation(line: 234, column: 4, scope: !15807)
!15809 = !DILocation(line: 235, column: 3, scope: !15807)
!15810 = !DILocation(line: 0, scope: !15447, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 217, column: 2, scope: !15791)
!15812 = !DILocation(line: 0, scope: !15455, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15811)
!15814 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15813)
!15815 = !DILocation(line: 237, column: 1, scope: !15782)
!15816 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2338, file: !2338, line: 239, type: !15817, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15819)
!15817 = !DISubroutineType(types: !15818)
!15818 = !{null, !325}
!15819 = !{!15820, !15821, !15822, !15824}
!15820 = !DILocalVariable(name: "ticks", arg: 1, scope: !15816, file: !2338, line: 239, type: !325)
!15821 = !DILocalVariable(name: "key", scope: !15816, file: !2338, line: 245, type: !15357)
!15822 = !DILocalVariable(name: "t", scope: !15823, file: !2338, line: 262, type: !2311)
!15823 = distinct !DILexicalBlock(scope: !15816, file: !2338, line: 261, column: 67)
!15824 = !DILocalVariable(name: "dt", scope: !15823, file: !2338, line: 263, type: !103)
!15825 = !DILocation(line: 0, scope: !15816)
!15826 = !DILocation(line: 242, column: 2, scope: !15816)
!15827 = !DILocation(line: 0, scope: !15379, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 245, column: 25, scope: !15816)
!15829 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15828)
!15831 = !DILocation(line: 0, scope: !15388, inlinedAt: !15830)
!15832 = !DILocation(line: 261, column: 9, scope: !15816)
!15833 = !DILocation(line: 261, column: 17, scope: !15816)
!15834 = !DILocation(line: 261, column: 25, scope: !15816)
!15835 = !DILocation(line: 261, column: 37, scope: !15816)
!15836 = !DILocation(line: 261, column: 47, scope: !15816)
!15837 = !DILocation(line: 261, column: 44, scope: !15816)
!15838 = !DILocation(line: 261, column: 2, scope: !15816)
!15839 = !DILocation(line: 0, scope: !15823)
!15840 = !DILocation(line: 263, column: 12, scope: !15823)
!15841 = !DILocation(line: 265, column: 16, scope: !15823)
!15842 = !DILocation(line: 265, column: 13, scope: !15823)
!15843 = !DILocation(line: 266, column: 13, scope: !15823)
!15844 = !DILocation(line: 267, column: 3, scope: !15823)
!15845 = !DILocation(line: 0, scope: !15447, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 269, column: 3, scope: !15823)
!15847 = !DILocation(line: 0, scope: !15455, inlinedAt: !15848)
!15848 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15846)
!15849 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15848)
!15850 = !DILocation(line: 270, column: 6, scope: !15823)
!15851 = !DILocation(line: 270, column: 3, scope: !15823)
!15852 = !DILocation(line: 0, scope: !15379, inlinedAt: !15853)
!15853 = distinct !DILocation(line: 271, column: 9, scope: !15823)
!15854 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15853)
!15856 = !DILocation(line: 0, scope: !15388, inlinedAt: !15855)
!15857 = !DILocation(line: 272, column: 22, scope: !15823)
!15858 = distinct !{!15858, !15838, !15859}
!15859 = !DILocation(line: 273, column: 2, scope: !15816)
!15860 = !DILocation(line: 276, column: 19, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15862, file: !2338, line: 275, column: 23)
!15862 = distinct !DILexicalBlock(scope: !15816, file: !2338, line: 275, column: 6)
!15863 = !DILocation(line: 277, column: 2, scope: !15861)
!15864 = !DILocation(line: 279, column: 15, scope: !15816)
!15865 = !DILocation(line: 279, column: 12, scope: !15816)
!15866 = !DILocation(line: 280, column: 21, scope: !15816)
!15867 = !DILocation(line: 282, column: 24, scope: !15816)
!15868 = !DILocation(line: 282, column: 2, scope: !15816)
!15869 = !DILocation(line: 0, scope: !15447, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 284, column: 2, scope: !15816)
!15871 = !DILocation(line: 0, scope: !15455, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15870)
!15873 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15872)
!15874 = !DILocation(line: 285, column: 1, scope: !15816)
!15875 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2338, file: !2338, line: 287, type: !3407, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15876)
!15876 = !{!15877, !15878, !15880}
!15877 = !DILocalVariable(name: "t", scope: !15875, file: !2338, line: 289, type: !109)
!15878 = !DILocalVariable(name: "__i", scope: !15879, file: !2338, line: 291, type: !15357)
!15879 = distinct !DILexicalBlock(scope: !15875, file: !2338, line: 291, column: 2)
!15880 = !DILocalVariable(name: "__key", scope: !15879, file: !2338, line: 291, type: !15357)
!15881 = !DILocation(line: 0, scope: !15875)
!15882 = !DILocation(line: 0, scope: !15879)
!15883 = !DILocation(line: 0, scope: !15379, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 291, column: 2, scope: !15879)
!15885 = !DILocation(line: 55, column: 2, scope: !15388, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 145, column: 10, scope: !15379, inlinedAt: !15884)
!15887 = !DILocation(line: 0, scope: !15388, inlinedAt: !15886)
!15888 = !DILocation(line: 292, column: 7, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15890, file: !2338, line: 291, column: 24)
!15890 = distinct !DILexicalBlock(scope: !15879, file: !2338, line: 291, column: 2)
!15891 = !DILocation(line: 292, column: 19, scope: !15889)
!15892 = !DILocation(line: 0, scope: !15447, inlinedAt: !15893)
!15893 = distinct !DILocation(line: 291, column: 2, scope: !15890)
!15894 = !DILocation(line: 0, scope: !15455, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 215, column: 2, scope: !15447, inlinedAt: !15893)
!15896 = !DILocation(line: 95, column: 2, scope: !15455, inlinedAt: !15895)
!15897 = !DILocation(line: 292, column: 17, scope: !15889)
!15898 = !DILocation(line: 294, column: 2, scope: !15875)
!15899 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2338, file: !2338, line: 297, type: !3393, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !245)
!15900 = !DILocation(line: 300, column: 19, scope: !15899)
!15901 = !DILocation(line: 300, column: 9, scope: !15899)
!15902 = !DILocation(line: 300, column: 2, scope: !15899)
!15903 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2338, file: !2338, line: 306, type: !3407, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !245)
!15904 = !DILocation(line: 308, column: 9, scope: !15903)
!15905 = !DILocation(line: 308, column: 2, scope: !15903)
!15906 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2338, file: !2338, line: 319, type: !7137, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15907)
!15907 = !{!15908, !15909, !15910, !15911}
!15908 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15906, file: !2338, line: 319, type: !108)
!15909 = !DILocalVariable(name: "start_cycles", scope: !15906, file: !2338, line: 328, type: !108)
!15910 = !DILocalVariable(name: "cycles_to_wait", scope: !15906, file: !2338, line: 331, type: !108)
!15911 = !DILocalVariable(name: "current_cycles", scope: !15912, file: !2338, line: 338, type: !108)
!15912 = distinct !DILexicalBlock(scope: !15913, file: !2338, line: 337, column: 11)
!15913 = distinct !DILexicalBlock(scope: !15914, file: !2338, line: 337, column: 2)
!15914 = distinct !DILexicalBlock(scope: !15906, file: !2338, line: 337, column: 2)
!15915 = !DILocation(line: 0, scope: !15906)
!15916 = !DILocation(line: 322, column: 19, scope: !15917)
!15917 = distinct !DILexicalBlock(scope: !15906, file: !2338, line: 322, column: 6)
!15918 = !DILocation(line: 322, column: 6, scope: !15906)
!15919 = !DILocation(line: 328, column: 26, scope: !15906)
!15920 = !DILocation(line: 333, column: 43, scope: !15906)
!15921 = !DILocation(line: 337, column: 2, scope: !15906)
!15922 = !DILocation(line: 338, column: 29, scope: !15912)
!15923 = !DILocation(line: 0, scope: !15912)
!15924 = !DILocation(line: 341, column: 23, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15912, file: !2338, line: 341, column: 7)
!15926 = !DILocation(line: 341, column: 39, scope: !15925)
!15927 = !DILocation(line: 349, column: 1, scope: !15906)
!15928 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !137, file: !137, line: 1675, type: !3393, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !245)
!15929 = !DILocation(line: 1677, column: 9, scope: !15928)
!15930 = !DILocation(line: 1677, column: 2, scope: !15928)
!15931 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15932, file: !15932, line: 24, type: !3393, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !245)
!15932 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15933 = !DILocation(line: 26, column: 9, scope: !15931)
!15934 = !DILocation(line: 26, column: 2, scope: !15931)
!15935 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2338, file: !2338, line: 364, type: !15936, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15938)
!15936 = !DISubroutineType(types: !15937)
!15937 = !{!109, !15347}
!15938 = !{!15939, !15940}
!15939 = !DILocalVariable(name: "timeout", arg: 1, scope: !15935, file: !2338, line: 364, type: !15347)
!15940 = !DILocalVariable(name: "dt", scope: !15935, file: !2338, line: 366, type: !104)
!15941 = !DILocation(line: 0, scope: !15935)
!15942 = !DILocation(line: 368, column: 6, scope: !15935)
!15943 = !DILocation(line: 371, column: 10, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15945, file: !2338, line: 370, column: 47)
!15945 = distinct !DILexicalBlock(scope: !15946, file: !2338, line: 370, column: 13)
!15946 = distinct !DILexicalBlock(scope: !15935, file: !2338, line: 368, column: 6)
!15947 = !DILocation(line: 371, column: 3, scope: !15944)
!15948 = !DILocation(line: 376, column: 58, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15950, file: !2338, line: 376, column: 7)
!15950 = distinct !DILexicalBlock(scope: !15945, file: !2338, line: 372, column: 9)
!15951 = !DILocation(line: 376, column: 7, scope: !15950)
!15952 = !DILocation(line: 376, column: 43, scope: !15949)
!15953 = !DILocation(line: 377, column: 4, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15949, file: !2338, line: 376, column: 64)
!15955 = !DILocation(line: 379, column: 10, scope: !15950)
!15956 = !DILocation(line: 379, column: 33, scope: !15950)
!15957 = !DILocation(line: 379, column: 31, scope: !15950)
!15958 = !DILocation(line: 379, column: 3, scope: !15950)
!15959 = !DILocation(line: 0, scope: !15946)
!15960 = !DILocation(line: 381, column: 1, scope: !15935)
!15961 = distinct !DISubprogram(name: "k_free", scope: !2352, file: !2352, line: 43, type: !6983, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !15962)
!15962 = !{!15963, !15964}
!15963 = !DILocalVariable(name: "ptr", arg: 1, scope: !15961, file: !2352, line: 43, type: !102)
!15964 = !DILocalVariable(name: "heap_ref", scope: !15961, file: !2352, line: 45, type: !15965)
!15965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15966, size: 32)
!15966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!15967 = !DILocation(line: 0, scope: !15961)
!15968 = !DILocation(line: 47, column: 10, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15961, file: !2352, line: 47, column: 6)
!15970 = !DILocation(line: 47, column: 6, scope: !15961)
!15971 = !DILocation(line: 49, column: 9, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15969, file: !2352, line: 47, column: 19)
!15973 = !DILocation(line: 53, column: 15, scope: !15972)
!15974 = !DILocation(line: 53, column: 3, scope: !15972)
!15975 = !DILocation(line: 56, column: 2, scope: !15972)
!15976 = !DILocation(line: 57, column: 1, scope: !15961)
!15977 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2352, file: !2352, line: 64, type: !15978, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !15980)
!15978 = !DISubroutineType(types: !15979)
!15979 = !{!102, !132, !132}
!15980 = !{!15981, !15982, !15983}
!15981 = !DILocalVariable(name: "align", arg: 1, scope: !15977, file: !2352, line: 64, type: !132)
!15982 = !DILocalVariable(name: "size", arg: 2, scope: !15977, file: !2352, line: 64, type: !132)
!15983 = !DILocalVariable(name: "ret", scope: !15977, file: !2352, line: 75, type: !102)
!15984 = !DILocation(line: 0, scope: !15977)
!15985 = !DILocation(line: 75, column: 14, scope: !15977)
!15986 = !DILocation(line: 79, column: 2, scope: !15977)
!15987 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2352, file: !2352, line: 12, type: !15988, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !15990)
!15988 = !DISubroutineType(types: !15989)
!15989 = !{!102, !15966, !132, !132}
!15990 = !{!15991, !15992, !15993, !15994, !15995, !15996}
!15991 = !DILocalVariable(name: "heap", arg: 1, scope: !15987, file: !2352, line: 12, type: !15966)
!15992 = !DILocalVariable(name: "align", arg: 2, scope: !15987, file: !2352, line: 12, type: !132)
!15993 = !DILocalVariable(name: "size", arg: 3, scope: !15987, file: !2352, line: 12, type: !132)
!15994 = !DILocalVariable(name: "mem", scope: !15987, file: !2352, line: 14, type: !102)
!15995 = !DILocalVariable(name: "heap_ref", scope: !15987, file: !2352, line: 15, type: !15965)
!15996 = !DILocalVariable(name: "__align", scope: !15987, file: !2352, line: 16, type: !132)
!15997 = !DILocation(line: 0, scope: !15987)
!15998 = !DILocation(line: 24, column: 6, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15987, file: !2352, line: 24, column: 6)
!16000 = !DILocation(line: 24, column: 6, scope: !15987)
!16001 = !DILocation(line: 27, column: 18, scope: !15987)
!16002 = !DILocation(line: 29, column: 44, scope: !15987)
!16003 = !DILocation(line: 29, column: 8, scope: !15987)
!16004 = !DILocation(line: 30, column: 10, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15987, file: !2352, line: 30, column: 6)
!16006 = !DILocation(line: 30, column: 6, scope: !15987)
!16007 = !DILocation(line: 34, column: 13, scope: !15987)
!16008 = !DILocation(line: 35, column: 12, scope: !15987)
!16009 = !DILocation(line: 36, column: 8, scope: !15987)
!16010 = !DILocation(line: 40, column: 2, scope: !15987)
!16011 = !DILocation(line: 41, column: 1, scope: !15987)
!16012 = distinct !DISubprogram(name: "size_add_overflow", scope: !12658, file: !12658, line: 47, type: !12659, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !16013)
!16013 = !{!16014, !16015, !16016}
!16014 = !DILocalVariable(name: "a", arg: 1, scope: !16012, file: !12658, line: 47, type: !132)
!16015 = !DILocalVariable(name: "b", arg: 2, scope: !16012, file: !12658, line: 47, type: !132)
!16016 = !DILocalVariable(name: "result", arg: 3, scope: !16012, file: !12658, line: 47, type: !2478)
!16017 = !DILocation(line: 0, scope: !16012)
!16018 = !DILocation(line: 49, column: 9, scope: !16012)
!16019 = !DILocation(line: 49, column: 2, scope: !16012)
!16020 = distinct !DISubprogram(name: "k_malloc", scope: !2352, file: !2352, line: 82, type: !12670, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !16021)
!16021 = !{!16022, !16023}
!16022 = !DILocalVariable(name: "size", arg: 1, scope: !16020, file: !2352, line: 82, type: !132)
!16023 = !DILocalVariable(name: "ret", scope: !16020, file: !2352, line: 86, type: !102)
!16024 = !DILocation(line: 0, scope: !16020)
!16025 = !DILocation(line: 86, column: 14, scope: !16020)
!16026 = !DILocation(line: 90, column: 2, scope: !16020)
!16027 = distinct !DISubprogram(name: "k_calloc", scope: !2352, file: !2352, line: 93, type: !15978, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !16028)
!16028 = !{!16029, !16030, !16031, !16032}
!16029 = !DILocalVariable(name: "nmemb", arg: 1, scope: !16027, file: !2352, line: 93, type: !132)
!16030 = !DILocalVariable(name: "size", arg: 2, scope: !16027, file: !2352, line: 93, type: !132)
!16031 = !DILocalVariable(name: "ret", scope: !16027, file: !2352, line: 95, type: !102)
!16032 = !DILocalVariable(name: "bounds", scope: !16027, file: !2352, line: 96, type: !132)
!16033 = !DILocation(line: 0, scope: !16027)
!16034 = !DILocation(line: 96, column: 2, scope: !16027)
!16035 = !DILocation(line: 100, column: 6, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16027, file: !2352, line: 100, column: 6)
!16037 = !DILocation(line: 100, column: 6, scope: !16027)
!16038 = !DILocation(line: 106, column: 17, scope: !16027)
!16039 = !DILocation(line: 106, column: 8, scope: !16027)
!16040 = !DILocation(line: 107, column: 10, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16027, file: !2352, line: 107, column: 6)
!16042 = !DILocation(line: 107, column: 6, scope: !16027)
!16043 = !DILocation(line: 108, column: 9, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16041, file: !2352, line: 107, column: 19)
!16045 = !DILocation(line: 109, column: 2, scope: !16044)
!16046 = !DILocation(line: 114, column: 1, scope: !16027)
!16047 = distinct !DISubprogram(name: "size_mul_overflow", scope: !12658, file: !12658, line: 105, type: !12659, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !16048)
!16048 = !{!16049, !16050, !16051}
!16049 = !DILocalVariable(name: "a", arg: 1, scope: !16047, file: !12658, line: 105, type: !132)
!16050 = !DILocalVariable(name: "b", arg: 2, scope: !16047, file: !12658, line: 105, type: !132)
!16051 = !DILocalVariable(name: "result", arg: 3, scope: !16047, file: !12658, line: 105, type: !2478)
!16052 = !DILocation(line: 0, scope: !16047)
!16053 = !DILocation(line: 107, column: 9, scope: !16047)
!16054 = !DILocation(line: 107, column: 2, scope: !16047)
!16055 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2352, file: !2352, line: 116, type: !16056, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !16122)
!16056 = !DISubroutineType(types: !16057)
!16057 = !{null, !16058}
!16058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16059, size: 32)
!16059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 896, elements: !16060)
!16060 = !{!16061, !16101, !16113, !16114, !16115, !16116, !16117}
!16061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16059, file: !163, line: 247, baseType: !16062, size: 384)
!16062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !16063)
!16063 = !{!16064, !16075, !16077, !16078, !16079, !16088, !16089, !16090}
!16064 = !DIDerivedType(tag: DW_TAG_member, scope: !16062, file: !163, line: 60, baseType: !16065, size: 64)
!16065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16062, file: !163, line: 60, size: 64, elements: !16066)
!16066 = !{!16067, !16069}
!16067 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16065, file: !163, line: 61, baseType: !16068, size: 64)
!16068 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2367)
!16069 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16065, file: !163, line: 62, baseType: !16070, size: 64)
!16070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !16071)
!16071 = !{!16072}
!16072 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16070, file: !175, line: 50, baseType: !16073, size: 64)
!16073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16074, size: 64, elements: !180)
!16074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16070, size: 32)
!16075 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16062, file: !163, line: 68, baseType: !16076, size: 32, offset: 64)
!16076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!16077 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16062, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!16078 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16062, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!16079 = !DIDerivedType(tag: DW_TAG_member, scope: !16062, file: !163, line: 90, baseType: !16080, size: 16, offset: 112)
!16080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16062, file: !163, line: 90, size: 16, elements: !16081)
!16081 = !{!16082, !16087}
!16082 = !DIDerivedType(tag: DW_TAG_member, scope: !16080, file: !163, line: 91, baseType: !16083, size: 16)
!16083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16080, file: !163, line: 91, size: 16, elements: !16084)
!16084 = !{!16085, !16086}
!16085 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16083, file: !163, line: 96, baseType: !195, size: 8)
!16086 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16083, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!16087 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16080, file: !163, line: 100, baseType: !121, size: 16)
!16088 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16062, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!16089 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16062, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!16090 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16062, file: !163, line: 131, baseType: !16091, size: 192, offset: 192)
!16091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !16092)
!16092 = !{!16093, !16094, !16100}
!16093 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16091, file: !141, line: 245, baseType: !16068, size: 64)
!16094 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16091, file: !141, line: 246, baseType: !16095, size: 32, offset: 64)
!16095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !16096)
!16096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16097, size: 32)
!16097 = !DISubroutineType(types: !16098)
!16098 = !{null, !16099}
!16099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16091, size: 32)
!16100 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16091, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!16101 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16059, file: !163, line: 250, baseType: !16102, size: 288, offset: 384)
!16102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !16103)
!16103 = !{!16104, !16105, !16106, !16107, !16108, !16109, !16110, !16111, !16112}
!16104 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16102, file: !214, line: 26, baseType: !108, size: 32)
!16105 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16102, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!16106 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16102, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!16107 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16102, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!16108 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16102, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!16109 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16102, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!16110 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16102, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!16111 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16102, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!16112 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16102, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!16113 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16059, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!16114 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16059, file: !163, line: 256, baseType: !2362, size: 64, offset: 704)
!16115 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16059, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!16116 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16059, file: !163, line: 325, baseType: !15966, size: 32, offset: 800)
!16117 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16059, file: !163, line: 343, baseType: !16118, size: 64, offset: 832)
!16118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !16119)
!16119 = !{!16120, !16121}
!16120 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16118, file: !214, line: 63, baseType: !108, size: 32)
!16121 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16118, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!16122 = !{!16123}
!16123 = !DILocalVariable(name: "thread", arg: 1, scope: !16055, file: !2352, line: 116, type: !16058)
!16124 = !DILocation(line: 0, scope: !16055)
!16125 = !DILocation(line: 118, column: 10, scope: !16055)
!16126 = !DILocation(line: 118, column: 24, scope: !16055)
!16127 = !DILocation(line: 119, column: 1, scope: !16055)
!16128 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2352, file: !2352, line: 124, type: !15978, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !16129)
!16129 = !{!16130, !16131, !16132, !16133}
!16130 = !DILocalVariable(name: "align", arg: 1, scope: !16128, file: !2352, line: 124, type: !132)
!16131 = !DILocalVariable(name: "size", arg: 2, scope: !16128, file: !2352, line: 124, type: !132)
!16132 = !DILocalVariable(name: "ret", scope: !16128, file: !2352, line: 126, type: !102)
!16133 = !DILocalVariable(name: "heap", scope: !16128, file: !2352, line: 127, type: !15966)
!16134 = !DILocation(line: 0, scope: !16128)
!16135 = !DILocation(line: 129, column: 6, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16128, file: !2352, line: 129, column: 6)
!16137 = !DILocation(line: 129, column: 6, scope: !16128)
!16138 = !DILocation(line: 132, column: 10, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16136, file: !2352, line: 131, column: 9)
!16140 = !DILocation(line: 132, column: 20, scope: !16139)
!16141 = !DILocation(line: 135, column: 11, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16128, file: !2352, line: 135, column: 6)
!16143 = !DILocation(line: 135, column: 6, scope: !16128)
!16144 = !DILocation(line: 136, column: 9, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16142, file: !2352, line: 135, column: 20)
!16146 = !DILocation(line: 137, column: 2, scope: !16145)
!16147 = !DILocation(line: 0, scope: !16142)
!16148 = !DILocation(line: 141, column: 2, scope: !16128)
!16149 = distinct !DISubprogram(name: "main", scope: !16150, file: !16150, line: 27, type: !328, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3151, retainedNodes: !245)
!16150 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16151 = !DILocation(line: 38, column: 2, scope: !16152, inlinedAt: !16153)
!16152 = distinct !DISubprogram(name: "arch_nop", scope: !15932, file: !15932, line: 36, type: !328, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3151, retainedNodes: !245)
!16153 = distinct !DILocation(line: 31, column: 2, scope: !16149)
!16154 = !{i64 2843784}
!16155 = !DILocation(line: 36, column: 1, scope: !16149)
!16156 = distinct !DISubprogram(name: "boot_banner", scope: !16157, file: !16157, line: 26, type: !328, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !245)
!16157 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16158 = !DILocation(line: 34, column: 2, scope: !16156)
!16159 = !DILocation(line: 36, column: 1, scope: !16156)
!16160 = distinct !DISubprogram(name: "statics_init", scope: !2404, file: !2404, line: 21, type: !815, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16161)
!16161 = !{!16162, !16163}
!16162 = !DILocalVariable(name: "unused", arg: 1, scope: !16160, file: !2404, line: 21, type: !817)
!16163 = !DILocalVariable(name: "h", scope: !16164, file: !2404, line: 24, type: !16165)
!16164 = distinct !DILexicalBlock(scope: !16160, file: !2404, line: 24, column: 2)
!16165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16166, size: 32)
!16166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !16167)
!16167 = !{!16168, !16174, !16180}
!16168 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16166, file: !137, line: 5074, baseType: !16169, size: 96)
!16169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !234, line: 56, size: 96, elements: !16170)
!16170 = !{!16171, !16172, !16173}
!16171 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16169, file: !234, line: 57, baseType: !237, size: 32)
!16172 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16169, file: !234, line: 58, baseType: !102, size: 32, offset: 32)
!16173 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16169, file: !234, line: 59, baseType: !132, size: 32, offset: 64)
!16174 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16166, file: !137, line: 5075, baseType: !16175, size: 64, offset: 96)
!16175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !16176)
!16176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !16177)
!16177 = !{!16178}
!16178 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16176, file: !141, line: 232, baseType: !16179, size: 64)
!16179 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2390)
!16180 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16166, file: !137, line: 5076, baseType: !16181, offset: 160)
!16181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, elements: !245)
!16182 = !DILocation(line: 0, scope: !16160)
!16183 = !DILocation(line: 0, scope: !16164)
!16184 = !DILocation(line: 24, column: 2, scope: !16164)
!16185 = !DILocation(line: 52, column: 2, scope: !16160)
!16186 = !DILocation(line: 49, column: 27, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !2404, line: 48, column: 3)
!16188 = distinct !DILexicalBlock(scope: !16189, file: !2404, line: 24, column: 36)
!16189 = distinct !DILexicalBlock(scope: !16164, file: !2404, line: 24, column: 2)
!16190 = !DILocation(line: 49, column: 45, scope: !16187)
!16191 = !DILocation(line: 49, column: 4, scope: !16187)
!16192 = !DILocation(line: 24, column: 2, scope: !16189)
!16193 = !DILocation(line: 24, column: 2, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16189, file: !2404, line: 24, column: 2)
!16195 = distinct !{!16195, !16184, !16196}
!16196 = !DILocation(line: 51, column: 2, scope: !16164)
!16197 = distinct !DISubprogram(name: "k_heap_init", scope: !2404, file: !2404, line: 13, type: !16198, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16200)
!16198 = !DISubroutineType(types: !16199)
!16199 = !{null, !16165, !102, !132}
!16200 = !{!16201, !16202, !16203}
!16201 = !DILocalVariable(name: "h", arg: 1, scope: !16197, file: !2404, line: 13, type: !16165)
!16202 = !DILocalVariable(name: "mem", arg: 2, scope: !16197, file: !2404, line: 13, type: !102)
!16203 = !DILocalVariable(name: "bytes", arg: 3, scope: !16197, file: !2404, line: 13, type: !132)
!16204 = !DILocation(line: 0, scope: !16197)
!16205 = !DILocation(line: 15, column: 19, scope: !16197)
!16206 = !DILocation(line: 15, column: 2, scope: !16197)
!16207 = !DILocation(line: 16, column: 20, scope: !16197)
!16208 = !DILocation(line: 16, column: 2, scope: !16197)
!16209 = !DILocation(line: 19, column: 1, scope: !16197)
!16210 = distinct !DISubprogram(name: "z_waitq_init", scope: !12241, file: !12241, line: 47, type: !16211, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16214)
!16211 = !DISubroutineType(types: !16212)
!16212 = !{null, !16213}
!16213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16175, size: 32)
!16214 = !{!16215}
!16215 = !DILocalVariable(name: "w", arg: 1, scope: !16210, file: !12241, line: 47, type: !16213)
!16216 = !DILocation(line: 0, scope: !16210)
!16217 = !DILocation(line: 49, column: 21, scope: !16210)
!16218 = !DILocation(line: 49, column: 2, scope: !16210)
!16219 = !DILocation(line: 50, column: 1, scope: !16210)
!16220 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !16221, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16224)
!16221 = !DISubroutineType(types: !16222)
!16222 = !{null, !16223}
!16223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16179, size: 32)
!16224 = !{!16225}
!16225 = !DILocalVariable(name: "list", arg: 1, scope: !16220, file: !146, line: 197, type: !16223)
!16226 = !DILocation(line: 0, scope: !16220)
!16227 = !DILocation(line: 199, column: 8, scope: !16220)
!16228 = !DILocation(line: 199, column: 13, scope: !16220)
!16229 = !DILocation(line: 200, column: 8, scope: !16220)
!16230 = !DILocation(line: 200, column: 13, scope: !16220)
!16231 = !DILocation(line: 201, column: 1, scope: !16220)
!16232 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2404, file: !2404, line: 64, type: !16233, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16239)
!16233 = !DISubroutineType(types: !16234)
!16234 = !{!102, !16165, !132, !132, !16235}
!16235 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16236)
!16236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16237)
!16237 = !{!16238}
!16238 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16236, file: !105, line: 66, baseType: !104, size: 64)
!16239 = !{!16240, !16241, !16242, !16243, !16244, !16245, !16246, !16247, !16252}
!16240 = !DILocalVariable(name: "h", arg: 1, scope: !16232, file: !2404, line: 64, type: !16165)
!16241 = !DILocalVariable(name: "align", arg: 2, scope: !16232, file: !2404, line: 64, type: !132)
!16242 = !DILocalVariable(name: "bytes", arg: 3, scope: !16232, file: !2404, line: 64, type: !132)
!16243 = !DILocalVariable(name: "timeout", arg: 4, scope: !16232, file: !2404, line: 65, type: !16235)
!16244 = !DILocalVariable(name: "now", scope: !16232, file: !2404, line: 67, type: !106)
!16245 = !DILocalVariable(name: "end", scope: !16232, file: !2404, line: 67, type: !106)
!16246 = !DILocalVariable(name: "ret", scope: !16232, file: !2404, line: 68, type: !102)
!16247 = !DILocalVariable(name: "key", scope: !16232, file: !2404, line: 72, type: !16248)
!16248 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !16249)
!16249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !16250)
!16250 = !{!16251}
!16251 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16249, file: !244, line: 33, baseType: !103, size: 32)
!16252 = !DILocalVariable(name: "blocked_alloc", scope: !16232, file: !2404, line: 78, type: !131)
!16253 = !DILocation(line: 0, scope: !16232)
!16254 = !DILocation(line: 67, column: 21, scope: !16232)
!16255 = !DILocation(line: 70, column: 8, scope: !16232)
!16256 = !DILocation(line: 72, column: 41, scope: !16232)
!16257 = !DILocalVariable(name: "l", arg: 1, scope: !16258, file: !244, line: 136, type: !16261)
!16258 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !16259, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16262)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{!16248, !16261}
!16261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16181, size: 32)
!16262 = !{!16257, !16263}
!16263 = !DILocalVariable(name: "k", scope: !16258, file: !244, line: 139, type: !16248)
!16264 = !DILocation(line: 0, scope: !16258, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 72, column: 25, scope: !16232)
!16266 = !DILocation(line: 55, column: 2, scope: !16267, inlinedAt: !16271)
!16267 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7161, file: !7161, line: 42, type: !9203, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16268)
!16268 = !{!16269, !16270}
!16269 = !DILocalVariable(name: "key", scope: !16267, file: !7161, line: 44, type: !32)
!16270 = !DILocalVariable(name: "tmp", scope: !16267, file: !7161, line: 53, type: !32)
!16271 = distinct !DILocation(line: 145, column: 10, scope: !16258, inlinedAt: !16265)
!16272 = !{i64 2842927}
!16273 = !DILocation(line: 0, scope: !16267, inlinedAt: !16271)
!16274 = !DILocation(line: 81, column: 9, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16232, file: !2404, line: 80, column: 22)
!16276 = !DILocation(line: 83, column: 9, scope: !16275)
!16277 = !DILocation(line: 85, column: 12, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16275, file: !2404, line: 84, column: 7)
!16279 = !DILocation(line: 85, column: 21, scope: !16278)
!16280 = !DILocation(line: 85, column: 30, scope: !16278)
!16281 = !DILocation(line: 85, column: 37, scope: !16278)
!16282 = !DILocation(line: 84, column: 7, scope: !16275)
!16283 = !DILocation(line: 99, column: 10, scope: !16275)
!16284 = !DILocation(line: 0, scope: !16258, inlinedAt: !16285)
!16285 = distinct !DILocation(line: 101, column: 9, scope: !16275)
!16286 = !DILocation(line: 55, column: 2, scope: !16267, inlinedAt: !16287)
!16287 = distinct !DILocation(line: 145, column: 10, scope: !16258, inlinedAt: !16285)
!16288 = !DILocation(line: 0, scope: !16267, inlinedAt: !16287)
!16289 = distinct !{!16289, !16290, !16291}
!16290 = !DILocation(line: 80, column: 2, scope: !16232)
!16291 = !DILocation(line: 102, column: 2, scope: !16232)
!16292 = !DILocalVariable(name: "key", arg: 2, scope: !16293, file: !244, line: 190, type: !16248)
!16293 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !16294, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16296)
!16294 = !DISubroutineType(types: !16295)
!16295 = !{null, !16261, !16248}
!16296 = !{!16297, !16292}
!16297 = !DILocalVariable(name: "l", arg: 1, scope: !16293, file: !244, line: 189, type: !16261)
!16298 = !DILocation(line: 0, scope: !16293, inlinedAt: !16299)
!16299 = distinct !DILocation(line: 106, column: 2, scope: !16232)
!16300 = !DILocalVariable(name: "key", arg: 1, scope: !16301, file: !7161, line: 84, type: !32)
!16301 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7161, file: !7161, line: 84, type: !6999, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16302)
!16302 = !{!16300}
!16303 = !DILocation(line: 0, scope: !16301, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 215, column: 2, scope: !16293, inlinedAt: !16299)
!16305 = !DILocation(line: 95, column: 2, scope: !16301, inlinedAt: !16304)
!16306 = !{i64 2843744}
!16307 = !DILocation(line: 107, column: 2, scope: !16232)
!16308 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2404, file: !2404, line: 110, type: !16309, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16311)
!16309 = !DISubroutineType(types: !16310)
!16310 = !{!102, !16165, !132, !16235}
!16311 = !{!16312, !16313, !16314, !16315}
!16312 = !DILocalVariable(name: "h", arg: 1, scope: !16308, file: !2404, line: 110, type: !16165)
!16313 = !DILocalVariable(name: "bytes", arg: 2, scope: !16308, file: !2404, line: 110, type: !132)
!16314 = !DILocalVariable(name: "timeout", arg: 3, scope: !16308, file: !2404, line: 110, type: !16235)
!16315 = !DILocalVariable(name: "ret", scope: !16308, file: !2404, line: 114, type: !102)
!16316 = !DILocation(line: 0, scope: !16308)
!16317 = !DILocation(line: 114, column: 14, scope: !16308)
!16318 = !DILocation(line: 118, column: 2, scope: !16308)
!16319 = distinct !DISubprogram(name: "k_heap_free", scope: !2404, file: !2404, line: 121, type: !16320, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !16322)
!16320 = !DISubroutineType(types: !16321)
!16321 = !{null, !16165, !102}
!16322 = !{!16323, !16324, !16325}
!16323 = !DILocalVariable(name: "h", arg: 1, scope: !16319, file: !2404, line: 121, type: !16165)
!16324 = !DILocalVariable(name: "mem", arg: 2, scope: !16319, file: !2404, line: 121, type: !102)
!16325 = !DILocalVariable(name: "key", scope: !16319, file: !2404, line: 123, type: !16248)
!16326 = !DILocation(line: 0, scope: !16319)
!16327 = !DILocation(line: 0, scope: !16258, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 123, column: 25, scope: !16319)
!16329 = !DILocation(line: 55, column: 2, scope: !16267, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 145, column: 10, scope: !16258, inlinedAt: !16328)
!16331 = !DILocation(line: 0, scope: !16267, inlinedAt: !16330)
!16332 = !DILocation(line: 125, column: 20, scope: !16319)
!16333 = !DILocation(line: 125, column: 2, scope: !16319)
!16334 = !DILocation(line: 128, column: 60, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16319, file: !2404, line: 128, column: 6)
!16336 = !DILocation(line: 128, column: 43, scope: !16335)
!16337 = !DILocation(line: 128, column: 68, scope: !16335)
!16338 = !DILocation(line: 128, column: 6, scope: !16319)
!16339 = !DILocation(line: 123, column: 41, scope: !16319)
!16340 = !DILocation(line: 129, column: 3, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16335, file: !2404, line: 128, column: 74)
!16342 = !DILocation(line: 130, column: 2, scope: !16341)
!16343 = !DILocation(line: 0, scope: !16293, inlinedAt: !16344)
!16344 = distinct !DILocation(line: 131, column: 3, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16335, file: !2404, line: 130, column: 9)
!16346 = !DILocation(line: 0, scope: !16301, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 215, column: 2, scope: !16293, inlinedAt: !16344)
!16348 = !DILocation(line: 95, column: 2, scope: !16301, inlinedAt: !16347)
!16349 = !DILocation(line: 133, column: 1, scope: !16319)
