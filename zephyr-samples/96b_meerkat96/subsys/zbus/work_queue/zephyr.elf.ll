; ModuleID = 'build/96b_meerkat96/work_queue/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.sensor_msg = type { i32, i32, i32 }
%struct.sensor_wq_info = type { %struct.k_work, %struct.zbus_channel*, i8 }
%struct.k_work = type { %struct._snode, void (%struct.k_work*)*, %struct.k_work_q*, i32 }
%struct._snode = type { %struct._snode* }
%struct.k_work_q = type { %struct.k_thread, %struct._slist, %struct._wait_q_t, %struct._wait_q_t, i32 }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.k_spinlock, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct.imx_gpio_data = type { %struct.k_spinlock, %struct._slist }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.38], [13808 x i8], [191 x %struct.anon.38], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.38 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.38] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.38], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.k_sem = type { %struct._wait_q_t, i32, i32 }
%struct.k_work_sync = type { %union.anon.3 }
%union.anon.3 = type { %struct.z_work_flusher }
%struct.z_work_flusher = type { %struct.k_work, %struct.k_sem }
%struct.z_work_canceller = type { %struct._snode, %struct.k_work*, %struct.k_sem }
%struct.k_work_delayable = type { %struct.k_work, %struct._timeout, %struct.k_work_q* }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536859556 to i8*), void (i8*)* inttoptr (i32 536858719 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536859532 to i8*), void (i8*)* inttoptr (i32 536845421 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536859532 to i8*), void (i8*)* inttoptr (i32 536845421 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [36 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread_handler1_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread_handler2_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread_handler3_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_sensor_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_thread_handler1_sub to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_thread_handler2_sub to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_thread_handler3_sub to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @delay_handler1_lis, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @delay_handler2_lis, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @delay_handler3_lis, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @fast_handler1_lis, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @fast_handler2_lis, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @fast_handler3_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel* @sensor_data_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @thread_handler1_sub, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @thread_handler2_sub, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @thread_handler3_sub, i32 0, i32 0), i8* bitcast (%struct.zbus_channel* @version_chan to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_peripheral_thread_id to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*), i8* bitcast (%struct.init_entry* @__init_k_sys_work_q_init to i8*)], section "llvm.metadata"
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !25
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 1023 }, align 2, !dbg !423
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer*] zeroinitializer, align 4, !dbg !431
@version_chan = dso_local constant %struct.zbus_channel { i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer** getelementptr inbounds ([1 x %struct.zbus_observer*], [1 x %struct.zbus_observer*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !324
@_zbus_mutex_sensor_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_sensor_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_sensor_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_sensor_data_chan", align 4, !dbg !326
@_zbus_message_sensor_data_chan = internal global %struct.sensor_msg zeroinitializer, align 4, !dbg !436
@_zbus_observers_sensor_data_chan = internal constant [10 x %struct.zbus_observer*] [%struct.zbus_observer* @fast_handler1_lis, %struct.zbus_observer* @fast_handler2_lis, %struct.zbus_observer* @fast_handler3_lis, %struct.zbus_observer* @delay_handler1_lis, %struct.zbus_observer* @delay_handler2_lis, %struct.zbus_observer* @delay_handler3_lis, %struct.zbus_observer* @thread_handler1_sub, %struct.zbus_observer* @thread_handler2_sub, %struct.zbus_observer* @thread_handler3_sub, %struct.zbus_observer* null], align 4, !dbg !443
@fast_handler1_lis = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @fh1_cb }, section "._zbus_observer.static.fast_handler1_lis", align 4, !dbg !330
@fast_handler2_lis = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @fh2_cb }, section "._zbus_observer.static.fast_handler2_lis", align 4, !dbg !332
@fast_handler3_lis = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @fh3_cb }, section "._zbus_observer.static.fast_handler3_lis", align 4, !dbg !334
@delay_handler1_lis = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @dh1_cb }, section "._zbus_observer.static.delay_handler1_lis", align 4, !dbg !336
@delay_handler2_lis = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @dh2_cb }, section "._zbus_observer.static.delay_handler2_lis", align 4, !dbg !338
@delay_handler3_lis = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @dh3_cb }, section "._zbus_observer.static.delay_handler3_lis", align 4, !dbg !340
@wq_handler1 = internal global %struct.sensor_wq_info { %struct.k_work zeroinitializer, %struct.zbus_channel* null, i8 1 }, align 4, !dbg !448
@wq_handler2 = internal global %struct.sensor_wq_info { %struct.k_work zeroinitializer, %struct.zbus_channel* null, i8 2 }, align 4, !dbg !450
@wq_handler3 = internal global %struct.sensor_wq_info { %struct.k_work zeroinitializer, %struct.zbus_channel* null, i8 3 }, align 4, !dbg !452
@_zbus_observer_queue_thread_handler1_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_thread_handler1_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_thread_handler1_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler1_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler1_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler1_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler1_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_thread_handler1_sub", align 4, !dbg !342
@_k_fifo_buf__zbus_observer_queue_thread_handler1_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !399
@thread_handler1_sub = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* @_zbus_observer_queue_thread_handler1_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.thread_handler1_sub", align 4, !dbg !344
@_k_thread_obj_thread_handler1_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !409
@_k_thread_stack_thread_handler1_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 8, !dbg !404
@.str = private unnamed_addr constant [19 x i8] c"thread_handler1_id\00", align 1
@_k_thread_data_thread_handler1_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_thread_handler1_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_thread_handler1_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @thread_handler1_task to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread_handler1_id", align 4, !dbg !346
@thread_handler1_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_thread_handler1_id, align 4, !dbg !379
@_zbus_observer_queue_thread_handler2_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_thread_handler2_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_thread_handler2_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler2_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler2_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler2_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler2_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_thread_handler2_sub", align 4, !dbg !383
@_k_fifo_buf__zbus_observer_queue_thread_handler2_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.2", align 4, !dbg !411
@thread_handler2_sub = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* @_zbus_observer_queue_thread_handler2_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.thread_handler2_sub", align 4, !dbg !385
@_k_thread_obj_thread_handler2_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !415
@_k_thread_stack_thread_handler2_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.3", align 8, !dbg !413
@.str.1 = private unnamed_addr constant [19 x i8] c"thread_handler2_id\00", align 1
@_k_thread_data_thread_handler2_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_thread_handler2_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_thread_handler2_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @thread_handler2_task to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread_handler2_id", align 4, !dbg !387
@thread_handler2_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_thread_handler2_id, align 4, !dbg !389
@_zbus_observer_queue_thread_handler3_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_thread_handler3_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_thread_handler3_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler3_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler3_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler3_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_thread_handler3_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_thread_handler3_sub", align 4, !dbg !391
@_k_fifo_buf__zbus_observer_queue_thread_handler3_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.4", align 4, !dbg !417
@thread_handler3_sub = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* @_zbus_observer_queue_thread_handler3_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.thread_handler3_sub", align 4, !dbg !393
@_k_thread_obj_thread_handler3_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !421
@_k_thread_stack_thread_handler3_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.5", align 8, !dbg !419
@.str.2 = private unnamed_addr constant [19 x i8] c"thread_handler3_id\00", align 1
@_k_thread_data_thread_handler3_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_thread_handler3_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_thread_handler3_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @thread_handler3_task to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread_handler3_id", align 4, !dbg !395
@thread_handler3_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_thread_handler3_id, align 4, !dbg !397
@.str.3 = private unnamed_addr constant [80 x i8] c"%c: Sensor msg processed by CALLBACK fh1: temp = %u, press = %u, humidity = %u\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.8 = private unnamed_addr constant [80 x i8] c"%c: Sensor msg processed by CALLBACK fh2: temp = %u, press = %u, humidity = %u\0A\00", align 1
@.str.9 = private unnamed_addr constant [80 x i8] c"%c: Sensor msg processed by CALLBACK fh3: temp = %u, press = %u, humidity = %u\0A\00", align 1
@.str.10 = private unnamed_addr constant [91 x i8] c"%c: Sensor msg processed by WORK QUEUE handler dh%u: temp = %u, press = %u, humidity = %u\0A\00", align 1
@.str.11 = private unnamed_addr constant [84 x i8] c"%c: Sensor msg processed by THREAD handler 1: temp = %u, press = %u, humidity = %u\0A\00", align 1
@.str.12 = private unnamed_addr constant [84 x i8] c"%c: Sensor msg processed by THREAD handler 2: temp = %u, press = %u, humidity = %u\0A\00", align 1
@.str.13 = private unnamed_addr constant [84 x i8] c"%c: Sensor msg processed by THREAD handler 3: temp = %u, press = %u, humidity = %u\0A\00", align 1
@sensor_data_chan = dso_local constant %struct.zbus_channel { i16 12, i8* null, i8* bitcast (%struct.sensor_msg* @_zbus_message_sensor_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_sensor_data_chan, %struct.zbus_observer** getelementptr inbounds ([10 x %struct.zbus_observer*], [10 x %struct.zbus_observer*]* @_zbus_observers_sensor_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.sensor_data_chan", align 4, !dbg !328
@_k_thread_obj_peripheral_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !454
@_k_thread_stack_peripheral_thread_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/sensors.c\22.0", align 8, !dbg !583
@.str.14 = private unnamed_addr constant [21 x i8] c"peripheral_thread_id\00", align 1
@_k_thread_data_peripheral_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_peripheral_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_peripheral_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @peripheral_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_peripheral_thread_id", align 4, !dbg !460
@peripheral_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_peripheral_thread_id, align 4, !dbg !579
@.str.16 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !586
@.str.1.18 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.19 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.20 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.21 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.22 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.23 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.24 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.25 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.26 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.27 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.28 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.29 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !610
@.str.30 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.31 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.32 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.33 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.34 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.35 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.36 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.37 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.38 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.39 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.40 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.41 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.42 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.43 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !620
@.str.54 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.56 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.57 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.55 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.59 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.60 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.58 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.61 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.62 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.63 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.64 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.65 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.66 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.67 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.68 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.72 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.73 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.74 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.87 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.79 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.80 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.81 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.82 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.83 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.84 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.85 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.86 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.76 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.77 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16.78 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30.75 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1047
@.str.99 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !1057
@.str.1.103 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.104 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.105 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.106 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.107 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.108 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.109 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.110 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.119 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.111 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.112 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.113 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1069
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !1174
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1356
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.k_spinlock { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1309
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1340
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1307
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1295
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1283
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1285
@.str.1.122 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.128 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25.129 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26.123 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27.124 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28.125 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29.126 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.127 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1342
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1353
@.str.31.131 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1361
@.str.134 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1367
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1625
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1623
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1617
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1608
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1610
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1627
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1629
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1632
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1635
@overflow_cyc = internal global i32 0, align 4, !dbg !1646
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1904
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1906
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1902
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1897
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1871
@.str.138 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.139 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.140 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.141 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.142 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.143 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1908
@.str.149 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.150 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.151 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.152 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.153 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.156 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.157 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.158 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.161 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.162 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.163 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.170 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.171 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.172 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.173 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.180 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.181 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.182 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1938
@.str.189 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.193 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.194 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.195 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.196 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.197 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.198 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.199 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.203 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.204 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.205 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.206 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.207 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.202 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.201 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.203, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.204, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.205, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.206, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.207, i32 0, i32 0)], align 4
@.str.209 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.209, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1944
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2162
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2151
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2157
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2169
@.str.5.215 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2174
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.219 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.227, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.229, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.230, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.231, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.232, i32 0, i32 0)], align 4, !dbg !2202
@.str.226 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.227 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.228 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.229 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.230 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.231 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.225 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.232 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2311
@.str.8.224 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.235 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.236 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.237 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.238 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.239 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.240 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.243 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.244 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.254 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.255 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.256 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.261 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.262 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.263 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.264 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.265 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.266 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.267 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.268 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.269 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.276 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.277 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.278 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.279 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.280 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2325
@.str.4.291 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.281 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.282 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.283 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.284 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.285 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.294 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2430
@.str.295 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.299 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.300 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.301 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.296 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.297 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.298 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.302 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.303 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.306 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.307 = private unnamed_addr constant [20 x i8] c"work != ((void *)0)\00", align 1
@.str.2.308 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/work.c\00", align 1
@.str.3.309 = private unnamed_addr constant [23 x i8] c"handler != ((void *)0)\00", align 1
@lock.310 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2455
@.str.4.323 = private unnamed_addr constant [47 x i8] c"!flag_test(&work->flags, K_WORK_DELAYABLE_BIT)\00", align 1
@.str.5.324 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.6.325 = private unnamed_addr constant [20 x i8] c"sync != ((void *)0)\00", align 1
@.str.7.326 = private unnamed_addr constant [21 x i8] c"queue != ((void *)0)\00", align 1
@.str.8.334 = private unnamed_addr constant [6 x i8] c"queue\00", align 1
@.str.9.335 = private unnamed_addr constant [6 x i8] c"stack\00", align 1
@.str.10.336 = private unnamed_addr constant [52 x i8] c"!flag_test(&queue->flags, K_WORK_QUEUE_STARTED_BIT)\00", align 1
@.str.11.341 = private unnamed_addr constant [21 x i8] c"dwork != ((void *)0)\00", align 1
@.str.12.311 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.13.312 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.14.313 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.15.314 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.16.315 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.17.316 = private unnamed_addr constant [27 x i8] c"work->queue != ((void *)0)\00", align 1
@pending_cancels = internal global %struct._slist zeroinitializer, align 4, !dbg !2634
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2637
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2742
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2745
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2747
@.str.344 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.369 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.351 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.376 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.388 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.354 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.383 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.350 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.393 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.394 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.405 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.406 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.407 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.408 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.345 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.346 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.347 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.348 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.349 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.353 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.373 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.384 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.385 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2159
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2167
@.str.23.400 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.418 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.419 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.420 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.421 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2749
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2779
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2784
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2031
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2782
@.str.4.422 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.423 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.424 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.428 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.429 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.451 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2790
@.str.453 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.462 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.455 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.463 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.454 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.456 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.459 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.460 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.461 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.464 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.465 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_k_sys_work_q_init = internal constant %struct.init_entry { i32 (%struct.device*)* @k_sys_work_q_init, %struct.device* null }, section ".z_init_POST_KERNEL40_", align 4, !dbg !2817
@k_sys_work_q = dso_local global %struct.k_work_q zeroinitializer, align 8, !dbg !2823
@.str.469 = private unnamed_addr constant [9 x i8] c"sysworkq\00", align 1
@__const.k_sys_work_q_init.cfg = private unnamed_addr constant %struct.log_source_const_data { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.469, i32 0, i32 0), i8 0 }, align 8
@sys_work_q_stack = internal global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/system_work_q.c\22.0", align 8, !dbg !2940

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3709 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3711, !srcloc !3712
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3713, !srcloc !3714
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3715, !srcloc !3716
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3717, !srcloc !3718
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3719, !srcloc !3720
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3721, !srcloc !3722
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3723, !srcloc !3724
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3725, !srcloc !3726
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3727, !srcloc !3728
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3729, !srcloc !3730
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3731, !srcloc !3732
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3733, !srcloc !3734
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3735, !srcloc !3736
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3737, !srcloc !3738
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3739, !srcloc !3740
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3741, !srcloc !3742
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3743, !srcloc !3744
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -137) #23, !dbg !3745, !srcloc !3746
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -145) #23, !dbg !3747, !srcloc !3748
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !3749, !srcloc !3750
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3751, !srcloc !3752
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3753, !srcloc !3754
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3755, !srcloc !3756
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3757, !srcloc !3758
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3759, !srcloc !3762
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3763, !srcloc !3764
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3765, !srcloc !3766
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3767, !srcloc !3768
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3769, !srcloc !3770
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3771, !srcloc !3772
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3773, !srcloc !3774
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3775, !srcloc !3776
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3777, !srcloc !3778
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3779, !srcloc !3780
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3781, !srcloc !3782
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3783, !srcloc !3784
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3785, !srcloc !3786
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3787, !srcloc !3788
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3789, !srcloc !3790
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3791, !srcloc !3792
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3793, !srcloc !3794
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3795, !srcloc !3796
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3797, !srcloc !3798
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3799, !srcloc !3800
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3801, !srcloc !3802
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3803, !srcloc !3804
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -145) #23, !dbg !3805, !srcloc !3806
  ret void, !dbg !3807
}

; Function Attrs: noinline nounwind optsize
define internal void @dh3_cb(%struct.zbus_channel* noundef %0) #1 !dbg !3810 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3812, metadata !DIExpression()), !dbg !3813
  store %struct.zbus_channel* %0, %struct.zbus_channel** getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler3, i32 0, i32 1), align 4, !dbg !3814
  %2 = tail call i32 @k_work_submit(%struct.k_work* noundef getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler3, i32 0, i32 0)) #24, !dbg !3815
  ret void, !dbg !3816
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal void @dh2_cb(%struct.zbus_channel* noundef %0) #1 !dbg !3817 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3819, metadata !DIExpression()), !dbg !3820
  store %struct.zbus_channel* %0, %struct.zbus_channel** getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler2, i32 0, i32 1), align 4, !dbg !3821
  %2 = tail call i32 @k_work_submit(%struct.k_work* noundef getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler2, i32 0, i32 0)) #24, !dbg !3822
  ret void, !dbg !3823
}

; Function Attrs: noinline nounwind optsize
define internal void @dh1_cb(%struct.zbus_channel* noundef %0) #1 !dbg !3824 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3826, metadata !DIExpression()), !dbg !3827
  store %struct.zbus_channel* %0, %struct.zbus_channel** getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler1, i32 0, i32 1), align 4, !dbg !3828
  %2 = tail call i32 @k_work_submit(%struct.k_work* noundef getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler1, i32 0, i32 0)) #24, !dbg !3829
  ret void, !dbg !3830
}

; Function Attrs: noinline nounwind optsize
define internal void @fh3_cb(%struct.zbus_channel* noundef %0) #1 !dbg !3831 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3833, metadata !DIExpression()), !dbg !3837
  %2 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #25, !dbg !3838
  call void @llvm.dbg.value(metadata i8* %2, metadata !3834, metadata !DIExpression()), !dbg !3837
  %3 = bitcast i8* %2 to i32*, !dbg !3839
  %4 = load i32, i32* %3, align 4, !dbg !3839
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3839
  %6 = bitcast i8* %5 to i32*, !dbg !3839
  %7 = load i32, i32* %6, align 4, !dbg !3839
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3839
  %9 = bitcast i8* %8 to i32*, !dbg !3839
  %10 = load i32, i32* %9, align 4, !dbg !3839
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9, i32 0, i32 0), i32 noundef 73, i32 noundef %4, i32 noundef %7, i32 noundef %10) #24, !dbg !3839
  ret void, !dbg !3844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef readonly %0) unnamed_addr #1 !dbg !3845 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3849, metadata !DIExpression()), !dbg !3850
  %2 = icmp eq %struct.zbus_channel* %0, null, !dbg !3851
  br i1 %2, label %3, label %4, !dbg !3854

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i32 0, i32 0), i32 noundef 418) #24, !dbg !3855
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !3855
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i32 0, i32 0), i32 noundef 418) #24, !dbg !3855
  unreachable, !dbg !3855

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3857
  %6 = load i8*, i8** %5, align 4, !dbg !3857
  ret i8* %6, !dbg !3858
}

; Function Attrs: noinline nounwind optsize
define internal void @fh2_cb(%struct.zbus_channel* noundef %0) #1 !dbg !3859 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3861, metadata !DIExpression()), !dbg !3863
  %2 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #25, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %2, metadata !3862, metadata !DIExpression()), !dbg !3863
  %3 = bitcast i8* %2 to i32*, !dbg !3865
  %4 = load i32, i32* %3, align 4, !dbg !3865
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3865
  %6 = bitcast i8* %5 to i32*, !dbg !3865
  %7 = load i32, i32* %6, align 4, !dbg !3865
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3865
  %9 = bitcast i8* %8 to i32*, !dbg !3865
  %10 = load i32, i32* %9, align 4, !dbg !3865
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.8, i32 0, i32 0), i32 noundef 73, i32 noundef %4, i32 noundef %7, i32 noundef %10) #24, !dbg !3865
  ret void, !dbg !3870
}

; Function Attrs: noinline nounwind optsize
define internal void @fh1_cb(%struct.zbus_channel* noundef %0) #1 !dbg !3871 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3873, metadata !DIExpression()), !dbg !3875
  %2 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #25, !dbg !3876
  call void @llvm.dbg.value(metadata i8* %2, metadata !3874, metadata !DIExpression()), !dbg !3875
  %3 = bitcast i8* %2 to i32*, !dbg !3877
  %4 = load i32, i32* %3, align 4, !dbg !3877
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3877
  %6 = bitcast i8* %5 to i32*, !dbg !3877
  %7 = load i32, i32* %6, align 4, !dbg !3877
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3877
  %9 = bitcast i8* %8 to i32*, !dbg !3877
  %10 = load i32, i32* %9, align 4, !dbg !3877
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.3, i32 0, i32 0), i32 noundef 73, i32 noundef %4, i32 noundef %7, i32 noundef %10) #24, !dbg !3877
  ret void, !dbg !3882
}

; Function Attrs: noinline nounwind optsize
define internal void @thread_handler1_task() #1 !dbg !3883 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.sensor_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3888
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3888
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3885, metadata !DIExpression(DW_OP_deref)), !dbg !3889
  %4 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @thread_handler1_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3890
  %5 = icmp eq i32 %4, 0, !dbg !3891
  br i1 %5, label %6, label %19, !dbg !3892

6:                                                ; preds = %0
  %7 = bitcast %struct.sensor_msg* %2 to i8*
  %8 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 2
  br label %11, !dbg !3892

11:                                               ; preds = %6, %11
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #23, !dbg !3893
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %2, metadata !3886, metadata !DIExpression()), !dbg !3894
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3895
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !3885, metadata !DIExpression()), !dbg !3889
  %13 = call i32 @zbus_chan_read(%struct.zbus_channel* noundef %12, i8* noundef nonnull %7, [1 x i64] [i64 2000]) #24, !dbg !3896
  %14 = load i32, i32* %8, align 4, !dbg !3897
  %15 = load i32, i32* %9, align 4, !dbg !3897
  %16 = load i32, i32* %10, align 4, !dbg !3897
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([84 x i8], [84 x i8]* @.str.11, i32 0, i32 0), i32 noundef 73, i32 noundef %14, i32 noundef %15, i32 noundef %16) #24, !dbg !3897
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #23, !dbg !3902
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3885, metadata !DIExpression(DW_OP_deref)), !dbg !3889
  %17 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @thread_handler1_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3890
  %18 = icmp eq i32 %17, 0, !dbg !3891
  br i1 %18, label %11, label %19, !dbg !3892, !llvm.loop !3903

19:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3904
  ret void, !dbg !3904
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @thread_handler2_task() #1 !dbg !3905 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.sensor_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3910
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3910
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3907, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  %4 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @thread_handler2_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3912
  %5 = icmp eq i32 %4, 0, !dbg !3913
  br i1 %5, label %6, label %19, !dbg !3914

6:                                                ; preds = %0
  %7 = bitcast %struct.sensor_msg* %2 to i8*
  %8 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 2
  br label %11, !dbg !3914

11:                                               ; preds = %6, %11
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #23, !dbg !3915
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %2, metadata !3908, metadata !DIExpression()), !dbg !3916
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3917
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !3907, metadata !DIExpression()), !dbg !3911
  %13 = call i32 @zbus_chan_read(%struct.zbus_channel* noundef %12, i8* noundef nonnull %7, [1 x i64] [i64 2000]) #24, !dbg !3918
  %14 = load i32, i32* %8, align 4, !dbg !3919
  %15 = load i32, i32* %9, align 4, !dbg !3919
  %16 = load i32, i32* %10, align 4, !dbg !3919
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([84 x i8], [84 x i8]* @.str.12, i32 0, i32 0), i32 noundef 73, i32 noundef %14, i32 noundef %15, i32 noundef %16) #24, !dbg !3919
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #23, !dbg !3924
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3907, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  %17 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @thread_handler2_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3912
  %18 = icmp eq i32 %17, 0, !dbg !3913
  br i1 %18, label %11, label %19, !dbg !3914, !llvm.loop !3925

19:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3926
  ret void, !dbg !3926
}

; Function Attrs: noinline nounwind optsize
define internal void @thread_handler3_task() #1 !dbg !3927 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.sensor_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3932
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3932
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3929, metadata !DIExpression(DW_OP_deref)), !dbg !3933
  %4 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @thread_handler3_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3934
  %5 = icmp eq i32 %4, 0, !dbg !3935
  br i1 %5, label %6, label %19, !dbg !3936

6:                                                ; preds = %0
  %7 = bitcast %struct.sensor_msg* %2 to i8*
  %8 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 2
  br label %11, !dbg !3936

11:                                               ; preds = %6, %11
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #23, !dbg !3937
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %2, metadata !3930, metadata !DIExpression()), !dbg !3938
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3939
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !3929, metadata !DIExpression()), !dbg !3933
  %13 = call i32 @zbus_chan_read(%struct.zbus_channel* noundef %12, i8* noundef nonnull %7, [1 x i64] [i64 2000]) #24, !dbg !3940
  %14 = load i32, i32* %8, align 4, !dbg !3941
  %15 = load i32, i32* %9, align 4, !dbg !3941
  %16 = load i32, i32* %10, align 4, !dbg !3941
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([84 x i8], [84 x i8]* @.str.13, i32 0, i32 0), i32 noundef 73, i32 noundef %14, i32 noundef %15, i32 noundef %16) #24, !dbg !3941
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #23, !dbg !3946
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3929, metadata !DIExpression(DW_OP_deref)), !dbg !3933
  %17 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @thread_handler3_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3934
  %18 = icmp eq i32 %17, 0, !dbg !3935
  br i1 %18, label %11, label %19, !dbg !3936, !llvm.loop !3947

19:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3948
  ret void, !dbg !3948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3949 {
  tail call void @k_work_init(%struct.k_work* noundef getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler1, i32 0, i32 0), void (%struct.k_work*)* noundef nonnull @wq_dh_cb) #24, !dbg !3953
  tail call void @k_work_init(%struct.k_work* noundef getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler2, i32 0, i32 0), void (%struct.k_work*)* noundef nonnull @wq_dh_cb) #24, !dbg !3954
  tail call void @k_work_init(%struct.k_work* noundef getelementptr inbounds (%struct.sensor_wq_info, %struct.sensor_wq_info* @wq_handler3, i32 0, i32 0), void (%struct.k_work*)* noundef nonnull @wq_dh_cb) #24, !dbg !3955
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), metadata !3951, metadata !DIExpression()), !dbg !3956
  ret void, !dbg !3957
}

; Function Attrs: noinline nounwind optsize
define internal void @wq_dh_cb(%struct.k_work* nocapture noundef readonly %0) #1 !dbg !3958 {
  %2 = alloca %struct.sensor_msg, align 4
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !3960, metadata !DIExpression()), !dbg !3963
  %3 = bitcast %struct.sensor_msg* %2 to i8*, !dbg !3964
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #23, !dbg !3964
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %2, metadata !3961, metadata !DIExpression()), !dbg !3965
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !3962, metadata !DIExpression()), !dbg !3963
  %4 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 1, !dbg !3966
  %5 = bitcast %struct.k_work* %4 to %struct.zbus_channel**, !dbg !3966
  %6 = load %struct.zbus_channel*, %struct.zbus_channel** %5, align 4, !dbg !3966
  %7 = call i32 @zbus_chan_read(%struct.zbus_channel* noundef %6, i8* noundef nonnull %3, [1 x i64] [i64 2000]) #24, !dbg !3967
  %8 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 1, i32 1, !dbg !3968
  %9 = bitcast void (%struct.k_work*)** %8 to i8*, !dbg !3968
  %10 = load i8, i8* %9, align 4, !dbg !3968
  %11 = zext i8 %10 to i32, !dbg !3968
  %12 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 0, !dbg !3968
  %13 = load i32, i32* %12, align 4, !dbg !3968
  %14 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 1, !dbg !3968
  %15 = load i32, i32* %14, align 4, !dbg !3968
  %16 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 2, !dbg !3968
  %17 = load i32, i32* %16, align 4, !dbg !3968
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([91 x i8], [91 x i8]* @.str.10, i32 0, i32 0), i32 noundef 73, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17) #24, !dbg !3968
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #23, !dbg !3973
  ret void, !dbg !3973
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @peripheral_thread() #4 !dbg !3974 {
  %1 = alloca %struct.sensor_msg, align 4
  %2 = bitcast %struct.sensor_msg* %1 to i8*, !dbg !3982
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #23, !dbg !3982
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %1, metadata !3976, metadata !DIExpression()), !dbg !3983
  %3 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 1
  %4 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 0
  %5 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 2
  %6 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 250) #25, !dbg !3984
  %7 = insertvalue [1 x i64] poison, i64 %6, 0
  br label %8, !dbg !3985

8:                                                ; preds = %8, %0
  %9 = phi i32 [ %18, %8 ], [ 0, %0 ], !dbg !3986
  %10 = phi i32 [ %17, %8 ], [ 0, %0 ], !dbg !3988
  %11 = phi i32 [ %16, %8 ], [ 0, %0 ], !dbg !3989
  %12 = add i32 %11, 1, !dbg !3989
  store i32 %12, i32* %3, align 4, !dbg !3989
  %13 = add i32 %10, 10, !dbg !3988
  store i32 %13, i32* %4, align 4, !dbg !3988
  %14 = add i32 %9, 100, !dbg !3986
  store i32 %14, i32* %5, align 4, !dbg !3986
  %15 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @sensor_data_chan, i8* noundef nonnull %2, [1 x i64] %7) #24, !dbg !3990
  call fastcc void @k_msleep() #25, !dbg !3991
  %16 = load i32, i32* %3, align 4, !dbg !3989
  %17 = load i32, i32* %4, align 4, !dbg !3988
  %18 = load i32, i32* %5, align 4, !dbg !3986
  br label %8, !dbg !3985, !llvm.loop !3992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !3994 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3999, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i64 %0, metadata !4001, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i32 1000, metadata !4006, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i32 10000, metadata !4007, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i8 1, metadata !4008, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i8 0, metadata !4009, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i8 1, metadata !4010, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i8 0, metadata !4011, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i8 1, metadata !4012, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i8 0, metadata !4013, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i64 0, metadata !4014, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i64 0, metadata !4014, metadata !DIExpression()), !dbg !4018
  %2 = mul i64 %0, 10, !dbg !4020
  ret i64 %2, !dbg !4026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !4027 {
  call void @llvm.dbg.value(metadata i32 500, metadata !4031, metadata !DIExpression()), !dbg !4032
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #25, !dbg !4033
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !4034
  tail call fastcc void @k_sleep([1 x i64] %2) #25, !dbg !4034
  ret void, !dbg !4035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !4036 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4045, metadata !DIExpression()), !dbg !4046
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4047, !srcloc !4049
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !4050
  ret void, !dbg !4051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4052 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %0, metadata !4063, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %1, metadata !4064, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %2, metadata !4065, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %3, metadata !4066, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %0, metadata !4068, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %0, metadata !4069, metadata !DIExpression()), !dbg !4130
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4131
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4131
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4072, metadata !DIExpression()), !dbg !4132
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4133
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4074, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 0, metadata !4075, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 0, metadata !4076, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 0, metadata !4077, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 -1, metadata !4078, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 0, metadata !4081, metadata !DIExpression()), !dbg !4130
  %12 = and i32 %2, 4, !dbg !4135
  %13 = icmp eq i32 %12, 0, !dbg !4136
  call void @llvm.dbg.value(metadata i1 %13, metadata !4082, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4130
  %14 = lshr i32 %2, 3, !dbg !4137
  %15 = and i32 %14, 7, !dbg !4137
  %16 = add nuw nsw i32 %15, 1, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %16, metadata !4083, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 0, metadata !4084, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %0, metadata !4085, metadata !DIExpression()), !dbg !4130
  %17 = ptrtoint i8* %0 to i32, !dbg !4139
  %18 = and i32 %17, 3, !dbg !4141
  %19 = icmp eq i32 %18, 0, !dbg !4141
  br i1 %19, label %20, label %320, !dbg !4142

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4143
  call void @llvm.dbg.value(metadata i8* %21, metadata !4069, metadata !DIExpression()), !dbg !4130
  %22 = icmp eq i8* %0, null, !dbg !4144
  %23 = and i32 %1, 7, !dbg !4146
  %24 = sub nuw nsw i32 8, %23, !dbg !4146
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4146
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4146
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %27, metadata !4064, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %26, metadata !4069, metadata !DIExpression()), !dbg !4130
  br i1 %22, label %33, label %28, !dbg !4147

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4149
  %30 = sub i32 4, %17, !dbg !4149
  %31 = add i32 %30, %29, !dbg !4150
  %32 = icmp ugt i32 %31, %27, !dbg !4151
  br i1 %32, label %320, label %33, !dbg !4152

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4153
  call void @llvm.dbg.value(metadata i8* %34, metadata !4066, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %3, metadata !4080, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 4, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 4, metadata !4070, metadata !DIExpression()), !dbg !4130
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4154

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %42, metadata !4066, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %43, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %44, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %45, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %72, metadata !4078, metadata !DIExpression()), !dbg !4130
  br i1 %46, label %73, label %47, !dbg !4155

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4156
  %49 = zext i1 %48 to i32, !dbg !4160
  %50 = add nsw i32 %72, %49, !dbg !4160
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4160
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %52, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %51, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4081, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %50, metadata !4078, metadata !DIExpression()), !dbg !4130
  br label %53, !dbg !4161

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %40, metadata !4066, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %58, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %57, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %56, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4081, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %54, metadata !4078, metadata !DIExpression()), !dbg !4130
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %60, metadata !4066, metadata !DIExpression()), !dbg !4130
  %61 = load i8, i8* %60, align 1, !dbg !4164
  %62 = icmp eq i8 %61, 0, !dbg !4165
  br i1 %62, label %226, label %63, !dbg !4166, !llvm.loop !4167

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4155

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4170

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4081, metadata !DIExpression()), !dbg !4130
  %75 = add nsw i32 %72, -1, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %75, metadata !4078, metadata !DIExpression()), !dbg !4130
  br label %53, !dbg !4172

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4173

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 4, metadata !4070, metadata !DIExpression()), !dbg !4130
  br label %53, !dbg !4174

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 4, metadata !4070, metadata !DIExpression()), !dbg !4130
  br label %53, !dbg !4175

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4176
  %81 = icmp eq i8 %80, 108, !dbg !4178
  br i1 %81, label %82, label %109, !dbg !4179

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4180
  %84 = load i8, i8* %83, align 1, !dbg !4180
  %85 = icmp eq i8 %84, 108, !dbg !4183
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4184
  %89 = add i32 %88, 7, !dbg !4184
  %90 = and i32 %89, -8, !dbg !4184
  %91 = inttoptr i32 %90 to i8*, !dbg !4184
  %92 = inttoptr i32 %90 to double*, !dbg !4184
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4184
  %94 = load double, double* %92, align 8, !dbg !4184
  call void @llvm.dbg.value(metadata i8* %93, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 8, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 8, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata double %94, metadata !4098, metadata !DIExpression()), !dbg !4186
  %95 = ptrtoint i8* %43 to i32, !dbg !4187
  %96 = add i32 %95, 7, !dbg !4187
  %97 = and i32 %96, -8, !dbg !4187
  %98 = inttoptr i32 %97 to i8*, !dbg !4188
  call void @llvm.dbg.value(metadata i8* %98, metadata !4069, metadata !DIExpression()), !dbg !4130
  br i1 %22, label %104, label %99, !dbg !4189

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4190
  %101 = icmp ugt i32 %100, %196, !dbg !4194
  br i1 %101, label %320, label %102, !dbg !4195

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4196
  store double %94, double* %103, align 8, !dbg !4196
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4199
  call void @llvm.dbg.value(metadata i8* %105, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4081, metadata !DIExpression()), !dbg !4130
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4081, metadata !DIExpression()), !dbg !4130
  br label %53, !dbg !4200

107:                                              ; preds = %73, %73
  br label %109, !dbg !4201

108:                                              ; preds = %73
  br label %109, !dbg !4201

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4130
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4130
  call void @llvm.dbg.value(metadata i32 %113, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %112, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4084, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4081, metadata !DIExpression()), !dbg !4130
  %114 = ptrtoint i8* %43 to i32, !dbg !4201
  %115 = add i32 %114, -1, !dbg !4201
  %116 = add i32 %115, %112, !dbg !4201
  %117 = sub i32 0, %112, !dbg !4201
  %118 = and i32 %116, %117, !dbg !4201
  %119 = inttoptr i32 %118 to i8*, !dbg !4202
  call void @llvm.dbg.value(metadata i8* %119, metadata !4069, metadata !DIExpression()), !dbg !4130
  br i1 %22, label %124, label %120, !dbg !4203

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4205
  %122 = add i32 %121, %118, !dbg !4206
  %123 = icmp ugt i32 %122, %196, !dbg !4207
  br i1 %123, label %320, label %124, !dbg !4208

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4209

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4202
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4210
  call void @llvm.dbg.value(metadata i8* %127, metadata !4067, metadata !DIExpression()), !dbg !4130
  %128 = bitcast i8* %41 to i8**, !dbg !4210
  %129 = load i8*, i8** %128, align 4, !dbg !4210
  call void @llvm.dbg.value(metadata i8* %129, metadata !4080, metadata !DIExpression()), !dbg !4130
  br label %130, !dbg !4211

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4130
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4212
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4130
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4213
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4130
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4130
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4130
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4130
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4130
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4130
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4214
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %142, metadata !4064, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %141, metadata !4066, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %140, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %139, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %138, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %137, metadata !4075, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %136, metadata !4083, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %135, metadata !4076, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4081, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %133, metadata !4080, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %132, metadata !4078, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %131, metadata !4077, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.label(metadata !4129), !dbg !4216
  br i1 %22, label %146, label %144, !dbg !4217

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4218
  store i8* %133, i8** %145, align 4, !dbg !4221
  br label %146, !dbg !4222

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %147, metadata !4083, metadata !DIExpression()), !dbg !4130
  %148 = icmp sgt i32 %136, 0, !dbg !4224
  br i1 %148, label %152, label %149, !dbg !4225

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !4226
  %151 = zext i1 %150 to i32, !dbg !4226
  br label %152, !dbg !4225

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4225
  %154 = icmp eq i32 %153, 0, !dbg !4225
  call void @llvm.dbg.value(metadata i1 %154, metadata !4107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4227
  call void @llvm.dbg.value(metadata i1 %36, metadata !4110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4227
  %155 = or i1 %36, %154, !dbg !4228
  br i1 %155, label %156, label %192, !dbg !4228

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4229
  %158 = sub i32 %157, %17, !dbg !4229
  %159 = lshr i32 %158, 2, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %159, metadata !4111, metadata !DIExpression()), !dbg !4231
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4232
  br i1 %161, label %162, label %163, !dbg !4232

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 635) #24, !dbg !4234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.21, i32 0, i32 0)) #24, !dbg !4234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 635) #24, !dbg !4234
  unreachable, !dbg !4234

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4239
  br i1 %164, label %165, label %166, !dbg !4241

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 640) #24, !dbg !4242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.22, i32 0, i32 0)) #24, !dbg !4242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 640) #24, !dbg !4242
  unreachable, !dbg !4242

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4247

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4248
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4251
  store i8 %168, i8* %169, align 1, !dbg !4252
  %170 = trunc i32 %132 to i8, !dbg !4253
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4254
  store i8 %170, i8* %171, align 1, !dbg !4255
  br i1 %154, label %175, label %172, !dbg !4256

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4257
  store i8 %173, i8* %169, align 1, !dbg !4257
  %174 = add i32 %131, 1, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %174, metadata !4077, metadata !DIExpression()), !dbg !4130
  br label %187, !dbg !4261

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %176, metadata !4076, metadata !DIExpression()), !dbg !4130
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4264

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %179, metadata !4064, metadata !DIExpression()), !dbg !4130
  br label %187, !dbg !4268

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4269

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %182, metadata !4064, metadata !DIExpression()), !dbg !4130
  br label %187, !dbg !4273

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !4274
  %185 = add i32 %142, 2, !dbg !4276
  %186 = add i32 %185, %184, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %186, metadata !4064, metadata !DIExpression()), !dbg !4130
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4130
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4130
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4130
  call void @llvm.dbg.value(metadata i32 %190, metadata !4064, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %189, metadata !4076, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %188, metadata !4077, metadata !DIExpression()), !dbg !4130
  %191 = add nuw nsw i32 %137, 1, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %191, metadata !4075, metadata !DIExpression()), !dbg !4130
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4130
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4213
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4130
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4214
  call void @llvm.dbg.value(metadata i32 %196, metadata !4064, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %195, metadata !4075, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %194, metadata !4076, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %193, metadata !4077, metadata !DIExpression()), !dbg !4130
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4279
  call void @llvm.dbg.value(metadata i8* %197, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %143, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %141, metadata !4066, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %139, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %138, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4084, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4081, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %132, metadata !4078, metadata !DIExpression()), !dbg !4130
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %198, metadata !4066, metadata !DIExpression()), !dbg !4130
  %199 = load i8, i8* %198, align 1, !dbg !4164
  %200 = icmp eq i8 %199, 0, !dbg !4165
  br i1 %200, label %226, label %63, !dbg !4166

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4280

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4281
  call void @llvm.dbg.value(metadata i8* %203, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 undef, metadata !4114, metadata !DIExpression()), !dbg !4282
  br i1 %22, label %219, label %204, !dbg !4283

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4281
  %206 = load i32, i32* %205, align 4, !dbg !4281
  call void @llvm.dbg.value(metadata i32 %206, metadata !4114, metadata !DIExpression()), !dbg !4282
  %207 = inttoptr i32 %118 to i32*, !dbg !4284
  store i32 %206, i32* %207, align 4, !dbg !4287
  br label %219, !dbg !4288

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4289
  %210 = add i32 %209, 7, !dbg !4289
  %211 = and i32 %210, -8, !dbg !4289
  %212 = inttoptr i32 %211 to i8*, !dbg !4289
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4289
  call void @llvm.dbg.value(metadata i8* %213, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i64 undef, metadata !4120, metadata !DIExpression()), !dbg !4290
  br i1 %22, label %219, label %214, !dbg !4291

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4289
  %216 = load i64, i64* %215, align 8, !dbg !4289
  call void @llvm.dbg.value(metadata i64 %216, metadata !4120, metadata !DIExpression()), !dbg !4290
  %217 = inttoptr i32 %118 to i64*, !dbg !4292
  store i64 %216, i64* %217, align 8, !dbg !4297
  br label %219, !dbg !4298

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 709) #24, !dbg !4299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.23, i32 0, i32 0), i32 noundef %113) #24, !dbg !4299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 709) #24, !dbg !4299
  unreachable, !dbg !4299

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4304
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4304
  call void @llvm.dbg.value(metadata i8* %221, metadata !4067, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %40, metadata !4066, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %222, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %113, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %112, metadata !4071, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4084, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8 poison, metadata !4081, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %72, metadata !4078, metadata !DIExpression()), !dbg !4130
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %223, metadata !4066, metadata !DIExpression()), !dbg !4130
  %224 = load i8, i8* %223, align 1, !dbg !4164
  %225 = icmp eq i8 %224, 0, !dbg !4165
  br i1 %225, label %226, label %38, !dbg !4166

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4305
  %228 = ptrtoint i8* %227 to i32, !dbg !4306
  %229 = sub i32 %228, %17, !dbg !4306
  %230 = lshr i32 %229, 2, !dbg !4308
  %231 = icmp ugt i32 %229, 1023, !dbg !4309
  br i1 %231, label %232, label %233, !dbg !4310

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 721) #24, !dbg !4311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.24, i32 0, i32 0)) #24, !dbg !4311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 721) #24, !dbg !4311
  unreachable, !dbg !4311

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4316

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4317
  %236 = add i32 %235, %229, !dbg !4320
  br label %320, !dbg !4321

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4322
  store i8 %238, i8* %0, align 1, !dbg !4323
  %239 = trunc i32 %194 to i8, !dbg !4324
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4326
  store i8 %240, i8* %242, align 1, !dbg !4328
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4329
  store i8 %241, i8* %243, align 1, !dbg !4330
  %244 = trunc i32 %193 to i8, !dbg !4331
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4332
  store i8 %244, i8* %245, align 1, !dbg !4333
  %246 = icmp eq i32 %193, 0, !dbg !4334
  %247 = xor i1 %246, true, !dbg !4335
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4335
  call void @llvm.dbg.value(metadata i8* %227, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 0, metadata !4079, metadata !DIExpression()), !dbg !4130
  br i1 %249, label %250, label %269, !dbg !4335

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4336

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %254, metadata !4079, metadata !DIExpression()), !dbg !4130
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4337
  %256 = load i8, i8* %255, align 1, !dbg !4337
  %257 = icmp sgt i8 %256, -1, !dbg !4339
  br i1 %257, label %265, label %258, !dbg !4340

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4123, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4341
  %259 = ptrtoint i8* %253 to i32, !dbg !4342
  %260 = add i32 %251, %259, !dbg !4344
  %261 = icmp ugt i32 %260, %196, !dbg !4345
  br i1 %261, label %320, label %262, !dbg !4346

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4347
  call void @llvm.dbg.value(metadata i8 %263, metadata !4123, metadata !DIExpression()), !dbg !4341
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %264, metadata !4069, metadata !DIExpression()), !dbg !4130
  store i8 %263, i8* %253, align 1, !dbg !4349
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4279
  call void @llvm.dbg.value(metadata i8* %266, metadata !4069, metadata !DIExpression()), !dbg !4130
  %267 = add nuw i32 %254, 1, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %267, metadata !4079, metadata !DIExpression()), !dbg !4130
  %268 = icmp eq i32 %267, %195, !dbg !4351
  br i1 %268, label %269, label %252, !dbg !4336, !llvm.loop !4352

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4279
  call void @llvm.dbg.value(metadata i8* %270, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 0, metadata !4079, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %133, metadata !4080, metadata !DIExpression()), !dbg !4130
  %271 = icmp eq i32 %195, 0, !dbg !4354
  br i1 %271, label %316, label %272, !dbg !4357

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4357

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %276, metadata !4080, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %277, metadata !4079, metadata !DIExpression()), !dbg !4130
  br i1 %246, label %282, label %278, !dbg !4358

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4361
  %280 = load i8, i8* %279, align 1, !dbg !4361
  %281 = icmp sgt i8 %280, -1, !dbg !4362
  br i1 %281, label %282, label %311, !dbg !4363

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4364

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4070, metadata !DIExpression()), !dbg !4130
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4365
  %285 = load i8, i8* %284, align 1, !dbg !4365
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4368
  call void @llvm.dbg.value(metadata i8* %286, metadata !4069, metadata !DIExpression()), !dbg !4130
  store i8 %285, i8* %275, align 1, !dbg !4369
  br label %297, !dbg !4370

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4371
  %289 = load i8, i8* %288, align 1, !dbg !4371
  %290 = zext i8 %289 to i32, !dbg !4371
  %291 = shl nuw nsw i32 %290, 2, !dbg !4373
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4374
  %293 = bitcast i8* %292 to i8**, !dbg !4375
  %294 = load i8*, i8** %293, align 4, !dbg !4375
  call void @llvm.dbg.value(metadata i8* %294, metadata !4080, metadata !DIExpression()), !dbg !4130
  store i8* null, i8** %293, align 4, !dbg !4376
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !4377
  %296 = add i32 %295, 1, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %296, metadata !4070, metadata !DIExpression()), !dbg !4130
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4130
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4379
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4130
  call void @llvm.dbg.value(metadata i8* %300, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i32 %299, metadata !4070, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %298, metadata !4080, metadata !DIExpression()), !dbg !4130
  %301 = ptrtoint i8* %300 to i32, !dbg !4380
  %302 = add i32 %273, %299, !dbg !4382
  %303 = add i32 %302, %301, !dbg !4383
  %304 = icmp ugt i32 %303, %196, !dbg !4384
  br i1 %304, label %320, label %305, !dbg !4385

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4386
  %307 = load i8, i8* %306, align 1, !dbg !4386
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4387
  call void @llvm.dbg.value(metadata i8* %308, metadata !4069, metadata !DIExpression()), !dbg !4130
  store i8 %307, i8* %300, align 1, !dbg !4388
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !4389
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4390
  call void @llvm.dbg.value(metadata i8* %310, metadata !4069, metadata !DIExpression()), !dbg !4130
  br label %311, !dbg !4391

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4392
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4130
  call void @llvm.dbg.value(metadata i8* %313, metadata !4069, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.value(metadata i8* %312, metadata !4080, metadata !DIExpression()), !dbg !4130
  %314 = add nuw i32 %277, 1, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %314, metadata !4079, metadata !DIExpression()), !dbg !4130
  %315 = icmp eq i32 %314, %195, !dbg !4354
  br i1 %315, label %316, label %274, !dbg !4357, !llvm.loop !4394

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4279
  %318 = ptrtoint i8* %317 to i32, !dbg !4396
  %319 = sub i32 %318, %17, !dbg !4396
  br label %320, !dbg !4397

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4398
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4398
  ret i32 %321, !dbg !4398
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4399 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4403, metadata !DIExpression()), !dbg !4404
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !4405
  ret i1 %2, !dbg !4406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4407 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4412, metadata !DIExpression()), !dbg !4413
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4414
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4415
  %4 = and i1 %2, %3, !dbg !4415
  ret i1 %4, !dbg !4416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4417 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4421, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i32 %1, metadata !4422, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i32 %2, metadata !4423, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i8* %3, metadata !4424, metadata !DIExpression()), !dbg !4427
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4428
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4428
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4425, metadata !DIExpression()), !dbg !4429
  call void @llvm.va_start(i8* nonnull %6), !dbg !4430
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4431
  %8 = load i32, i32* %7, align 4, !dbg !4431
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4431
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %10, metadata !4426, metadata !DIExpression()), !dbg !4427
  call void @llvm.va_end(i8* nonnull %6), !dbg !4432
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4433
  ret i32 %10, !dbg !4434
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4435 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4447, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4448, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8* %2, metadata !4449, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8* %3, metadata !4450, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8* %3, metadata !4451, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8* %3, metadata !4452, metadata !DIExpression()), !dbg !4466
  %5 = icmp eq i8* %3, null, !dbg !4467
  br i1 %5, label %45, label %6, !dbg !4469

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4461, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4466
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4470
  %8 = load i8, i8* %7, align 1, !dbg !4470
  %9 = zext i8 %8 to i32, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %9, metadata !4462, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8 undef, metadata !4463, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4466
  call void @llvm.dbg.value(metadata i8 undef, metadata !4464, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  call void @llvm.dbg.value(metadata i32 0, metadata !4460, metadata !DIExpression()), !dbg !4466
  %10 = icmp eq i8 %8, 0, !dbg !4472
  br i1 %10, label %39, label %11, !dbg !4475

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4476
  call void @llvm.dbg.value(metadata i8 %12, metadata !4461, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %13 = zext i8 %12 to i32, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %13, metadata !4461, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %14 = shl nuw nsw i32 %13, 2, !dbg !4478
  call void @llvm.dbg.value(metadata i32 %14, metadata !4461, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4479
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4480
  %17 = load i8, i8* %16, align 1, !dbg !4480
  call void @llvm.dbg.value(metadata i8 %17, metadata !4463, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %18 = zext i8 %17 to i32, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %18, metadata !4463, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4482
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4483
  %21 = load i8, i8* %20, align 1, !dbg !4483
  call void @llvm.dbg.value(metadata i8 %21, metadata !4464, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %22 = zext i8 %21 to i32, !dbg !4484
  call void @llvm.dbg.value(metadata i32 %22, metadata !4464, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %23 = shl nuw nsw i32 %22, 1, !dbg !4485
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4466
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4486
  call void @llvm.dbg.value(metadata i8* %24, metadata !4458, metadata !DIExpression()), !dbg !4466
  br label %25, !dbg !4475

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4458, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i32 %27, metadata !4460, metadata !DIExpression()), !dbg !4466
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4487
  call void @llvm.dbg.value(metadata i8* %28, metadata !4458, metadata !DIExpression()), !dbg !4466
  %29 = load i8, i8* %26, align 1, !dbg !4489
  %30 = zext i8 %29 to i32, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %30, metadata !4465, metadata !DIExpression()), !dbg !4466
  %31 = shl nuw nsw i32 %30, 2, !dbg !4490
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4491
  %33 = bitcast i8* %32 to i8**, !dbg !4492
  call void @llvm.dbg.value(metadata i8** %33, metadata !4459, metadata !DIExpression()), !dbg !4466
  store i8* %28, i8** %33, align 4, !dbg !4493
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !4494
  %35 = add i32 %34, 1, !dbg !4495
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4496
  call void @llvm.dbg.value(metadata i8* %36, metadata !4458, metadata !DIExpression()), !dbg !4466
  %37 = add nuw nsw i32 %27, 1, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %37, metadata !4460, metadata !DIExpression()), !dbg !4466
  %38 = icmp eq i32 %37, %9, !dbg !4472
  br i1 %38, label %39, label %25, !dbg !4475, !llvm.loop !4498

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4500
  call void @llvm.dbg.value(metadata i8* %40, metadata !4451, metadata !DIExpression()), !dbg !4466
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4501
  %42 = bitcast i8* %41 to i8**, !dbg !4501
  %43 = load i8*, i8** %42, align 1, !dbg !4501
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !4502
  br label %45, !dbg !4503

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4466
  ret i32 %46, !dbg !4504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4505 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4509, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4510, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i8* %2, metadata !4511, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i8* %3, metadata !4512, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i8* %4, metadata !4513, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i8* %4, metadata !4514, metadata !DIExpression()), !dbg !4519
  %6 = ptrtoint i8* %4 to i32, !dbg !4520
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4520
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !4520
  ret i32 %8, !dbg !4521
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !4522 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4526, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 %1, metadata !4527, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8 0, metadata !4529, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 0, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* %0, metadata !4526, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4531
  %3 = load i8, i8* %0, align 1, !dbg !4532
  call void @llvm.dbg.value(metadata i8 %3, metadata !4528, metadata !DIExpression()), !dbg !4531
  %4 = icmp eq i8 %3, 0, !dbg !4533
  br i1 %4, label %29, label %5, !dbg !4534

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %8, metadata !4530, metadata !DIExpression()), !dbg !4531
  br i1 %9, label %11, label %22, !dbg !4536

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4538
  br i1 %12, label %13, label %17, !dbg !4542

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4543
  br i1 %14, label %29, label %15, !dbg !4546

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4547
  br i1 %16, label %29, label %22, !dbg !4549

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4550
  %19 = xor i1 %18, true, !dbg !4552
  %20 = zext i1 %18 to i32, !dbg !4552
  %21 = add nsw i32 %8, %20, !dbg !4552
  br label %22, !dbg !4552

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4531
  call void @llvm.dbg.value(metadata i32 %24, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4531
  %25 = icmp eq i8 %6, 37, !dbg !4553
  %26 = xor i1 %25, %23, !dbg !4555
  call void @llvm.dbg.value(metadata i8* %10, metadata !4526, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* %10, metadata !4526, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4531
  %27 = load i8, i8* %10, align 1, !dbg !4532
  call void @llvm.dbg.value(metadata i8 %27, metadata !4528, metadata !DIExpression()), !dbg !4531
  %28 = icmp eq i8 %27, 0, !dbg !4533
  br i1 %28, label %29, label %5, !dbg !4534, !llvm.loop !4556

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4531
  ret i1 %30, !dbg !4558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4559 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4563, metadata !DIExpression()), !dbg !4564
  %2 = add i8 %0, -64, !dbg !4565
  %3 = icmp ult i8 %2, 59, !dbg !4565
  ret i1 %3, !dbg !4566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4567 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4575, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %1, metadata !4576, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4577, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8* %3, metadata !4578, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %4, metadata !4579, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i16* %5, metadata !4580, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %6, metadata !4581, metadata !DIExpression()), !dbg !4644
  %11 = icmp eq i8* %0, null, !dbg !4645
  br i1 %11, label %12, label %13, !dbg !4648

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 916) #24, !dbg !4649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 916) #24, !dbg !4649
  unreachable, !dbg !4649

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4582, metadata !DIExpression()), !dbg !4644
  %14 = bitcast i8* %0 to i32*, !dbg !4651
  call void @llvm.dbg.value(metadata i32* %14, metadata !4583, metadata !DIExpression()), !dbg !4644
  %15 = and i32 %4, 8, !dbg !4652
  %16 = icmp eq i32 %15, 0, !dbg !4653
  call void @llvm.dbg.value(metadata i1 %16, metadata !4587, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4644
  call void @llvm.dbg.value(metadata i8* %0, metadata !4590, metadata !DIExpression()), !dbg !4644
  %17 = icmp eq i32 %1, 0, !dbg !4654
  br i1 %17, label %18, label %20, !dbg !4655

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !4656
  br label %20, !dbg !4655

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %21, metadata !4576, metadata !DIExpression()), !dbg !4644
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4657
  %23 = load i8, i8* %22, align 1, !dbg !4657
  %24 = zext i8 %23 to i32, !dbg !4658
  call void @llvm.dbg.value(metadata i32 %24, metadata !4585, metadata !DIExpression()), !dbg !4644
  %25 = icmp ne i8 %23, 0, !dbg !4659
  %26 = and i32 %4, 1, !dbg !4660
  %27 = icmp ne i32 %26, 0, !dbg !4660
  %28 = and i1 %27, %25, !dbg !4660
  call void @llvm.dbg.value(metadata i1 %28, metadata !4589, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4644
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4661
  %30 = load i8, i8* %29, align 1, !dbg !4661
  %31 = zext i8 %30 to i32, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %31, metadata !4586, metadata !DIExpression()), !dbg !4644
  %32 = icmp ne i8 %30, 0, !dbg !4663
  %33 = and i32 %4, 2, !dbg !4664
  %34 = icmp ne i32 %33, 0, !dbg !4664
  %35 = and i1 %34, %32, !dbg !4664
  call void @llvm.dbg.value(metadata i1 %35, metadata !4588, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4644
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4665
  br i1 %36, label %41, label %37, !dbg !4665

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4667
  br i1 %38, label %287, label %39, !dbg !4670

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !4671
  br label %287, !dbg !4673

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4674
  %43 = zext i8 %42 to i32, !dbg !4675
  %44 = shl nuw nsw i32 %43, 2, !dbg !4676
  call void @llvm.dbg.value(metadata i32 %44, metadata !4584, metadata !DIExpression()), !dbg !4644
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4677
  %46 = bitcast i8* %45 to i8**, !dbg !4678
  %47 = load i8*, i8** %46, align 4, !dbg !4678
  call void @llvm.dbg.value(metadata i8* %47, metadata !4593, metadata !DIExpression()), !dbg !4644
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4679
  call void @llvm.dbg.value(metadata i8* %48, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 0, metadata !4595, metadata !DIExpression()), !dbg !4644
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4680
  br i1 %49, label %50, label %135, !dbg !4681

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4592, metadata !DIExpression()), !dbg !4644
  br i1 %28, label %51, label %76, !dbg !4682

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8* %48, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 0, metadata !4595, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 0, metadata !4596, metadata !DIExpression()), !dbg !4683
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4684

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8* %55, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %56, metadata !4595, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %57, metadata !4596, metadata !DIExpression()), !dbg !4683
  %58 = load i8, i8* %55, align 1, !dbg !4685
  %59 = zext i8 %58 to i32, !dbg !4686
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4686
  %61 = bitcast i32* %60 to i8**, !dbg !4687
  %62 = load i8*, i8** %61, align 4, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %62, metadata !4602, metadata !DIExpression()), !dbg !4688
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %63, metadata !4605, metadata !DIExpression()), !dbg !4688
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4690
  br i1 %65, label %66, label %70, !dbg !4690

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4692
  %68 = add nuw i32 %56, 1, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %68, metadata !4595, metadata !DIExpression()), !dbg !4644
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4695
  store i16 %67, i16* %69, align 2, !dbg !4696
  br label %70, !dbg !4697

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4644
  call void @llvm.dbg.value(metadata i32 %71, metadata !4595, metadata !DIExpression()), !dbg !4644
  %72 = add nsw i32 %63, %54, !dbg !4698
  call void @llvm.dbg.value(metadata i32 %72, metadata !4592, metadata !DIExpression()), !dbg !4644
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %73, metadata !4594, metadata !DIExpression()), !dbg !4644
  %74 = add nuw nsw i32 %57, 1, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %74, metadata !4596, metadata !DIExpression()), !dbg !4683
  %75 = icmp eq i32 %74, %24, !dbg !4701
  br i1 %75, label %82, label %53, !dbg !4684, !llvm.loop !4702

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4704
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4704
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4704
  br label %82, !dbg !4704

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4707
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4644
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4708
  call void @llvm.dbg.value(metadata i1 undef, metadata !4606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4709
  call void @llvm.dbg.value(metadata i32 0, metadata !4607, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i32 %85, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8* %84, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %83, metadata !4595, metadata !DIExpression()), !dbg !4644
  %86 = icmp eq i8 %30, 0, !dbg !4711
  br i1 %86, label %287, label %87, !dbg !4712

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4713
  %89 = icmp eq i32 %88, 0, !dbg !4714
  call void @llvm.dbg.value(metadata i1 %89, metadata !4606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4709
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4712

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8* %96, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %97, metadata !4595, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %98, metadata !4607, metadata !DIExpression()), !dbg !4710
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %99, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 undef, metadata !4609, metadata !DIExpression()), !dbg !4716
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4717
  call void @llvm.dbg.value(metadata i8* %100, metadata !4594, metadata !DIExpression()), !dbg !4644
  %101 = load i8, i8* %99, align 1, !dbg !4718
  call void @llvm.dbg.value(metadata i8 %101, metadata !4612, metadata !DIExpression()), !dbg !4716
  %102 = zext i8 %101 to i32, !dbg !4719
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4719
  %104 = bitcast i32* %103 to i8**, !dbg !4720
  %105 = load i8*, i8** %104, align 4, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %105, metadata !4613, metadata !DIExpression()), !dbg !4716
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !4721
  call void @llvm.dbg.value(metadata i1 %106, metadata !4614, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4716
  br i1 %16, label %113, label %107, !dbg !4722

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4724
  call void @llvm.dbg.value(metadata i8 %108, metadata !4609, metadata !DIExpression()), !dbg !4716
  %109 = zext i8 %108 to i32, !dbg !4725
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !4726
  br i1 %110, label %111, label %113, !dbg !4727

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.26, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !4728
  %112 = add nsw i32 %95, -2, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %112, metadata !4592, metadata !DIExpression()), !dbg !4644
  br label %130, !dbg !4735

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4736

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4737

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4739
  call void @llvm.dbg.value(metadata i32 %116, metadata !4592, metadata !DIExpression()), !dbg !4644
  br label %130, !dbg !4742

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4743

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4640), !dbg !4744
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %119, metadata !4615, metadata !DIExpression()), !dbg !4716
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4746
  br i1 %121, label %122, label %126, !dbg !4746

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4748
  %124 = add nuw i32 %97, 1, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %124, metadata !4595, metadata !DIExpression()), !dbg !4644
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4751
  store i16 %123, i16* %125, align 2, !dbg !4752
  br label %126, !dbg !4753

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4644
  call void @llvm.dbg.value(metadata i32 %127, metadata !4595, metadata !DIExpression()), !dbg !4644
  %128 = add i32 %95, -1, !dbg !4754
  %129 = add i32 %128, %119, !dbg !4755
  call void @llvm.dbg.value(metadata i32 %129, metadata !4592, metadata !DIExpression()), !dbg !4644
  br label %130, !dbg !4756

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4644
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4716
  call void @llvm.dbg.value(metadata i32 %132, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %131, metadata !4595, metadata !DIExpression()), !dbg !4644
  %133 = add nuw nsw i32 %98, 1, !dbg !4757
  call void @llvm.dbg.value(metadata i8* %100, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %133, metadata !4607, metadata !DIExpression()), !dbg !4710
  %134 = icmp eq i32 %133, %31, !dbg !4711
  br i1 %134, label %287, label %94, !dbg !4712, !llvm.loop !4758

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4617, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4618, metadata !DIExpression()), !dbg !4761
  br i1 %28, label %136, label %138, !dbg !4762

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4619, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 0, metadata !4620, metadata !DIExpression()), !dbg !4644
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4763
  call void @llvm.dbg.value(metadata i8* %137, metadata !4621, metadata !DIExpression()), !dbg !4644
  br label %143, !dbg !4766

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4767
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4767

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4621, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 undef, metadata !4620, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 0, metadata !4619, metadata !DIExpression()), !dbg !4644
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !4769
  br label %148, !dbg !4772

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4773
  call void @llvm.dbg.value(metadata i8* %151, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 0, metadata !4623, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 %149, metadata !4620, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 %150, metadata !4619, metadata !DIExpression()), !dbg !4644
  %152 = icmp eq i8 %30, 0, !dbg !4775
  br i1 %152, label %153, label %155, !dbg !4776

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4777
  br label %160, !dbg !4776

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4776

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4777
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4778
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4779
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4644
  call void @llvm.dbg.value(metadata i8 undef, metadata !4616, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4644
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4780
  %166 = load i8, i8* %165, align 1, !dbg !4780
  %167 = zext i8 %162 to i32, !dbg !4781
  %168 = add i8 %166, %162, !dbg !4782
  call void @llvm.dbg.value(metadata i8 %168, metadata !4616, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4644
  %169 = icmp eq i32 %33, 0, !dbg !4783
  %170 = lshr i8 %163, 1, !dbg !4784
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4784
  call void @llvm.dbg.value(metadata i8 %171, metadata !4616, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4644
  %172 = icmp eq i32 %26, 0, !dbg !4785
  %173 = icmp eq i32 %161, 0, !dbg !4777
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4777
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4777
  call void @llvm.dbg.value(metadata i8 %175, metadata !4616, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4644
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4631, metadata !DIExpression()), !dbg !4786
  %176 = load i32, i32* %14, align 1, !dbg !4787
  store i8 %168, i8* %165, align 1, !dbg !4788
  store i8 %175, i8* %22, align 1, !dbg !4788
  store i8 %171, i8* %29, align 1, !dbg !4788
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %177, metadata !4622, metadata !DIExpression()), !dbg !4644
  %178 = icmp slt i32 %177, 0, !dbg !4790
  br i1 %178, label %287, label %240, !dbg !4792

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %181, metadata !4623, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 %182, metadata !4620, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 %183, metadata !4619, metadata !DIExpression()), !dbg !4644
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4793
  call void @llvm.dbg.value(metadata i8* %184, metadata !4594, metadata !DIExpression()), !dbg !4644
  %185 = load i8, i8* %180, align 1, !dbg !4794
  call void @llvm.dbg.value(metadata i8 %185, metadata !4625, metadata !DIExpression()), !dbg !4795
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %186, metadata !4594, metadata !DIExpression()), !dbg !4644
  %187 = load i8, i8* %184, align 1, !dbg !4797
  call void @llvm.dbg.value(metadata i8 %187, metadata !4628, metadata !DIExpression()), !dbg !4795
  %188 = zext i8 %187 to i32, !dbg !4798
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4798
  %190 = bitcast i32* %189 to i8**, !dbg !4799
  %191 = load i8*, i8** %190, align 4, !dbg !4799
  call void @llvm.dbg.value(metadata i8* %191, metadata !4629, metadata !DIExpression()), !dbg !4795
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4800
  call void @llvm.dbg.value(metadata i1 %192, metadata !4630, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4795
  br i1 %16, label %196, label %193, !dbg !4801

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4803
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4804
  br i1 %195, label %235, label %196, !dbg !4805

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4806

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4807

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4810
  br i1 %199, label %201, label %200, !dbg !4815

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4816
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4816
  unreachable, !dbg !4816

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4810
  %203 = add nuw nsw i8 %183, 1, !dbg !4818
  call void @llvm.dbg.value(metadata i8 %203, metadata !4619, metadata !DIExpression()), !dbg !4644
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4819
  br label %231, !dbg !4820

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4821

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4822
  br i1 %207, label %209, label %208, !dbg !4827

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4828
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4828
  unreachable, !dbg !4828

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4822
  %211 = add nuw nsw i8 %182, 1, !dbg !4830
  call void @llvm.dbg.value(metadata i8 %211, metadata !4620, metadata !DIExpression()), !dbg !4644
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4831
  br label %231, !dbg !4832

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4833

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4835
  br i1 %215, label %217, label %216, !dbg !4840

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4841
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4841
  unreachable, !dbg !4841

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4835
  %219 = add nuw nsw i8 %183, 1, !dbg !4843
  call void @llvm.dbg.value(metadata i8 %219, metadata !4619, metadata !DIExpression()), !dbg !4644
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4844
  br label %231, !dbg !4845

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4846
  br i1 %222, label %224, label %223, !dbg !4850

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4851
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4851
  unreachable, !dbg !4851

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4846
  %226 = add nuw nsw i8 %182, 1, !dbg !4853
  call void @llvm.dbg.value(metadata i8 %226, metadata !4620, metadata !DIExpression()), !dbg !4644
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4854
  store i8 %185, i8* %227, align 1, !dbg !4855
  %228 = add nuw nsw i8 %182, 2, !dbg !4856
  call void @llvm.dbg.value(metadata i8 %228, metadata !4620, metadata !DIExpression()), !dbg !4644
  %229 = zext i8 %226 to i32, !dbg !4857
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4857
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4858
  br label %235, !dbg !4859

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4644
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4779
  call void @llvm.dbg.value(metadata i8 %237, metadata !4620, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8 %236, metadata !4619, metadata !DIExpression()), !dbg !4644
  %238 = add nuw nsw i32 %181, 1, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %186, metadata !4594, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 %238, metadata !4623, metadata !DIExpression()), !dbg !4774
  %239 = icmp eq i32 %238, %31, !dbg !4775
  br i1 %239, label %160, label %179, !dbg !4776, !llvm.loop !4860

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %177, metadata !4592, metadata !DIExpression()), !dbg !4644
  store i32 %176, i32* %14, align 1, !dbg !4862
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4863
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %243, metadata !4622, metadata !DIExpression()), !dbg !4644
  %244 = icmp slt i32 %243, 0, !dbg !4865
  br i1 %244, label %287, label %245, !dbg !4867

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4592, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4644
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4868
  %248 = add nuw nsw i32 %44, %24, !dbg !4868
  %249 = sub i32 %247, %248, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %249, metadata !4632, metadata !DIExpression()), !dbg !4644
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %250, metadata !4622, metadata !DIExpression()), !dbg !4644
  %251 = icmp slt i32 %250, 0, !dbg !4870
  br i1 %251, label %287, label %252, !dbg !4872

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %253, metadata !4592, metadata !DIExpression()), !dbg !4644
  %254 = add nuw nsw i32 %253, %250, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %254, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i32 0, metadata !4633, metadata !DIExpression()), !dbg !4875
  %255 = icmp eq i8 %162, 0, !dbg !4876
  br i1 %255, label %284, label %256, !dbg !4877

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4877

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4633, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.value(metadata i32 %260, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4878
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4879
  %262 = load i8, i8* %261, align 1, !dbg !4879
  call void @llvm.dbg.value(metadata i8 %262, metadata !4635, metadata !DIExpression()), !dbg !4880
  store i8 %262, i8* %10, align 1, !dbg !4881
  %263 = zext i8 %262 to i32, !dbg !4882
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4882
  %265 = bitcast i32* %264 to i8**, !dbg !4883
  %266 = load i8*, i8** %265, align 4, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %266, metadata !4638, metadata !DIExpression()), !dbg !4880
  br i1 %257, label %270, label %267, !dbg !4884

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4885
  %269 = load i16, i16* %268, align 2, !dbg !4885
  br label %270, !dbg !4884

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4884
  call void @llvm.dbg.value(metadata i32 undef, metadata !4639, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4880
  call void @llvm.dbg.value(metadata i8* %10, metadata !4635, metadata !DIExpression(DW_OP_deref)), !dbg !4880
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %272, metadata !4622, metadata !DIExpression()), !dbg !4644
  %273 = icmp slt i32 %272, 0, !dbg !4887
  br i1 %273, label %277, label %274, !dbg !4889

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4639, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4592, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4644
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %275, metadata !4622, metadata !DIExpression()), !dbg !4644
  %276 = icmp slt i32 %275, 0, !dbg !4891
  br i1 %276, label %277, label %279, !dbg !4893

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4894
  call void @llvm.dbg.value(metadata i32 undef, metadata !4592, metadata !DIExpression()), !dbg !4644
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %280, metadata !4592, metadata !DIExpression()), !dbg !4644
  %281 = add nsw i32 %280, %275, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %281, metadata !4592, metadata !DIExpression()), !dbg !4644
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4894
  %282 = add nuw nsw i32 %259, 1, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %282, metadata !4633, metadata !DIExpression()), !dbg !4875
  %283 = icmp eq i32 %282, %167, !dbg !4876
  br i1 %283, label %284, label %258, !dbg !4877, !llvm.loop !4898

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4874
  call void @llvm.dbg.value(metadata i32 %285, metadata !4592, metadata !DIExpression()), !dbg !4644
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4900
  br label %287, !dbg !4901

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4644
  ret i32 %288, !dbg !4902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4903 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4907, metadata !DIExpression()), !dbg !4915
  %2 = icmp eq i8* %0, null, !dbg !4916
  br i1 %2, label %3, label %4, !dbg !4919

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 198) #24, !dbg !4920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.20, i32 0, i32 0), i32 noundef 198) #24, !dbg !4920
  unreachable, !dbg !4920

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4908, metadata !DIExpression()), !dbg !4915
  call void @llvm.dbg.value(metadata i8* %0, metadata !4909, metadata !DIExpression()), !dbg !4915
  %5 = load i8, i8* %0, align 1, !dbg !4922
  %6 = zext i8 %5 to i32, !dbg !4922
  %7 = shl nuw nsw i32 %6, 2, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %7, metadata !4910, metadata !DIExpression()), !dbg !4915
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4924
  %9 = load i8, i8* %8, align 1, !dbg !4924
  %10 = zext i8 %9 to i32, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %10, metadata !4911, metadata !DIExpression()), !dbg !4915
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4925
  %12 = load i8, i8* %11, align 1, !dbg !4925
  %13 = zext i8 %12 to i32, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %13, metadata !4912, metadata !DIExpression()), !dbg !4915
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %14, metadata !4908, metadata !DIExpression()), !dbg !4915
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %15, metadata !4908, metadata !DIExpression()), !dbg !4915
  call void @llvm.dbg.value(metadata i32 0, metadata !4913, metadata !DIExpression()), !dbg !4928
  %16 = icmp eq i8 %9, 0, !dbg !4929
  br i1 %16, label %17, label %22, !dbg !4931

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4915
  %19 = ptrtoint i8* %18 to i32, !dbg !4932
  %20 = ptrtoint i8* %0 to i32, !dbg !4932
  %21 = sub i32 %19, %20, !dbg !4932
  ret i32 %21, !dbg !4933

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4913, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8* %24, metadata !4908, metadata !DIExpression()), !dbg !4915
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4934
  call void @llvm.dbg.value(metadata i8* %25, metadata !4908, metadata !DIExpression()), !dbg !4915
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4936
  %27 = add i32 %26, 1, !dbg !4937
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4938
  call void @llvm.dbg.value(metadata i8* %28, metadata !4908, metadata !DIExpression()), !dbg !4915
  %29 = add nuw nsw i32 %23, 1, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %29, metadata !4913, metadata !DIExpression()), !dbg !4928
  %30 = icmp eq i32 %29, %10, !dbg !4929
  br i1 %30, label %17, label %22, !dbg !4931, !llvm.loop !4940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4942 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4946, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i8* %1, metadata !4947, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i8* %2, metadata !4948, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i16 %3, metadata !4949, metadata !DIExpression()), !dbg !4950
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4951
  br i1 %5, label %6, label %9, !dbg !4953

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4954
  %8 = add i32 %7, 1, !dbg !4956
  br label %20, !dbg !4957

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4958
  br i1 %10, label %13, label %11, !dbg !4959

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4959
  br label %16, !dbg !4959

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4960
  %15 = add i32 %14, 1, !dbg !4961
  br label %16, !dbg !4959

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4959
  %18 = and i32 %17, 65535, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %17, metadata !4949, metadata !DIExpression()), !dbg !4950
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4963
  br label %20, !dbg !4964

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4950
  ret i32 %21, !dbg !4965
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4968, metadata !DIExpression()), !dbg !4969
  ret i32 0, !dbg !4970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4971 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4975, metadata !DIExpression()), !dbg !4976
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4977
  ret void, !dbg !4978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #9 !dbg !4979 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4982
  ret i8* %1, !dbg !4983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4984 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4995, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %0, metadata !4994, metadata !DIExpression()), !dbg !5004
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !5005
  ret void, !dbg !5007
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5012, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %1, metadata !5013, metadata !DIExpression()), !dbg !5014
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5015
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !5015
  ret i32 %4, !dbg !5016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5017 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5024, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5021, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i8* %1, metadata !5022, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i8* %2, metadata !5023, metadata !DIExpression()), !dbg !5025
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !5026
  ret void, !dbg !5027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5028 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5032, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 %1, metadata !5033, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 0, metadata !5034, metadata !DIExpression()), !dbg !5035
  %3 = icmp eq i32 %1, 0, !dbg !5036
  br i1 %3, label %13, label %4, !dbg !5039

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5034, metadata !DIExpression()), !dbg !5035
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5040
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5042
  %8 = load i8, i8* %7, align 1, !dbg !5042
  %9 = zext i8 %8 to i32, !dbg !5042
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !5040
  %11 = add nuw i32 %5, 1, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %11, metadata !5034, metadata !DIExpression()), !dbg !5035
  %12 = icmp eq i32 %11, %1, !dbg !5036
  br i1 %12, label %13, label %4, !dbg !5039, !llvm.loop !5044

13:                                               ; preds = %4, %2
  ret void, !dbg !5046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5047 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5051, metadata !DIExpression()), !dbg !5053
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5054
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5054
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5052, metadata !DIExpression()), !dbg !5055
  call void @llvm.va_start(i8* nonnull %3), !dbg !5056
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5057
  %5 = load i32, i32* %4, align 4, !dbg !5057
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5057
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5057
  call void @llvm.va_end(i8* nonnull %3), !dbg !5058
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5059
  ret void, !dbg !5059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5060 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5064, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i32 %1, metadata !5065, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %2, metadata !5066, metadata !DIExpression()), !dbg !5069
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5070
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5070
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5067, metadata !DIExpression()), !dbg !5071
  call void @llvm.va_start(i8* nonnull %5), !dbg !5072
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5073
  %7 = load i32, i32* %6, align 4, !dbg !5073
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5073
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !5073
  call void @llvm.dbg.value(metadata i32 %9, metadata !5068, metadata !DIExpression()), !dbg !5069
  call void @llvm.va_end(i8* nonnull %5), !dbg !5074
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5075
  ret i32 %9, !dbg !5076
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5077 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5084, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata i8* %0, metadata !5081, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata i32 %1, metadata !5082, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata i8* %2, metadata !5083, metadata !DIExpression()), !dbg !5091
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5092
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5092
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5085, metadata !DIExpression()), !dbg !5093
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5094
  store i8* %0, i8** %7, align 4, !dbg !5094
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5094
  store i32 %1, i32* %8, align 4, !dbg !5094
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5094
  store i32 0, i32* %9, align 4, !dbg !5094
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !5095
  %10 = load i32, i32* %9, align 4, !dbg !5096
  %11 = load i32, i32* %8, align 4, !dbg !5098
  %12 = icmp slt i32 %10, %11, !dbg !5099
  br i1 %12, label %13, label %15, !dbg !5100

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5101
  store i8 0, i8* %14, align 1, !dbg !5103
  br label %15, !dbg !5104

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5105
  ret i32 %10, !dbg !5106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !5107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5112, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5113, metadata !DIExpression()), !dbg !5114
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5115
  %4 = load i8*, i8** %3, align 4, !dbg !5115
  %5 = icmp eq i8* %4, null, !dbg !5117
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5118
  br i1 %5, label %12, label %8, !dbg !5119

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5120
  %10 = load i32, i32* %9, align 4, !dbg !5120
  %11 = icmp slt i32 %7, %10, !dbg !5121
  br i1 %11, label %15, label %12, !dbg !5122

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5123
  %14 = add nsw i32 %7, 1, !dbg !5125
  store i32 %14, i32* %13, align 4, !dbg !5125
  br label %25, !dbg !5126

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5127
  %17 = icmp eq i32 %7, %16, !dbg !5129
  br i1 %17, label %18, label %21, !dbg !5130

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5131
  store i32 %19, i32* %6, align 4, !dbg !5131
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5133
  store i8 0, i8* %20, align 1, !dbg !5134
  br label %25, !dbg !5135

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5136
  %23 = add nsw i32 %7, 1, !dbg !5138
  store i32 %23, i32* %6, align 4, !dbg !5138
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5139
  store i8 %22, i8* %24, align 1, !dbg !5140
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5141
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #4 !dbg !5142 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5147, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i8* %1, metadata !5148, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i8* %2, metadata !5149, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i8* %3, metadata !5150, metadata !DIExpression()), !dbg !5151
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !5152
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5153
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !5154
  unreachable, !dbg !5155
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !5156 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5257
  ret %struct.k_thread* %1, !dbg !5258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5263, metadata !DIExpression()), !dbg !5264
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5265, !srcloc !5267
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5268
  ret void, !dbg !5269
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !5270 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5271, !srcloc !5273
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !5274
  ret %struct.k_thread* %1, !dbg !5275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5276 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5287, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5291
  %3 = icmp eq i8* %1, null, !dbg !5292
  br i1 %3, label %16, label %4, !dbg !5294

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5295
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5295
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5289, metadata !DIExpression()), !dbg !5291
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !5296, !range !5297
  call void @llvm.dbg.value(metadata i32 %7, metadata !5290, metadata !DIExpression()), !dbg !5291
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5298
  br i1 %8, label %10, label %9, !dbg !5301

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 176) #24, !dbg !5302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.33, i32 0, i32 0), i8* noundef nonnull %1) #24, !dbg !5302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 176) #24, !dbg !5302
  unreachable, !dbg !5302

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5304
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #25, !dbg !5304
  %13 = icmp eq i32 %12, %7, !dbg !5304
  br i1 %13, label %15, label %14, !dbg !5307

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 185) #24, !dbg !5308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.35, i32 0, i32 0), i8* noundef nonnull %1) #24, !dbg !5308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 185) #24, !dbg !5308
  unreachable, !dbg !5308

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #25, !dbg !5310
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5311
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5313 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5317, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %1, metadata !5318, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %1, metadata !5319, metadata !DIExpression()), !dbg !5321
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5322
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5320, metadata !DIExpression()), !dbg !5321
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5323
  %5 = ptrtoint i8* %4 to i32, !dbg !5324
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5324
  %7 = sub i32 %5, %6, !dbg !5324
  %8 = lshr i32 %7, 3, !dbg !5325
  ret i32 %8, !dbg !5326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #9 !dbg !5327 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5331, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %1, metadata !5332, metadata !DIExpression()), !dbg !5333
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5334
  %4 = and i32 %3, 1, !dbg !5335
  %5 = icmp ne i32 %4, 0, !dbg !5334
  ret i1 %5, !dbg !5336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #9 !dbg !5337 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5341, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %1, metadata !5342, metadata !DIExpression()), !dbg !5343
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5344
  %4 = add i32 %3, %1, !dbg !5345
  ret i32 %4, !dbg !5346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #9 !dbg !5347 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5349, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32 %1, metadata !5350, metadata !DIExpression()), !dbg !5351
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !5352
  %4 = sub i32 %1, %3, !dbg !5353
  ret i32 %4, !dbg !5354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #10 !dbg !5355 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5359, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i32 %1, metadata !5360, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i1 %2, metadata !5361, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5364
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5365
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5362, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5363, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5364
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5366
  %6 = bitcast i8* %5 to i16*, !dbg !5366
  %7 = load i16, i16* %6, align 2, !dbg !5366
  %8 = and i16 %7, -2, !dbg !5370
  %9 = zext i1 %2 to i16, !dbg !5370
  %10 = or i16 %8, %9, !dbg !5370
  store i16 %10, i16* %6, align 2, !dbg !5366
  ret void, !dbg !5371
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5372 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5376, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 %1, metadata !5377, metadata !DIExpression()), !dbg !5378
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5379
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5381
  br i1 %4, label %7, label %5, !dbg !5382

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5383
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5385
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5386
  br label %7, !dbg !5387

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5388
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5390
  br i1 %9, label %13, label %10, !dbg !5391

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5392
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5394
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #25, !dbg !5395
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5396
  call void @llvm.dbg.value(metadata i32 %12, metadata !5377, metadata !DIExpression()), !dbg !5378
  br label %13, !dbg !5397

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5377, metadata !DIExpression()), !dbg !5378
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #25, !dbg !5398
  ret void, !dbg !5399
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5400 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5402, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i32 %1, metadata !5403, metadata !DIExpression()), !dbg !5407
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5408, !range !5409
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %4, metadata !5404, metadata !DIExpression()), !dbg !5411
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5412
  ret void, !dbg !5413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5414 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5418, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i32 %1, metadata !5419, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i32 %2, metadata !5420, metadata !DIExpression()), !dbg !5423
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5424
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5425
  %6 = add i32 %5, %4, !dbg !5426
  call void @llvm.dbg.value(metadata i32 %6, metadata !5421, metadata !DIExpression()), !dbg !5423
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5427
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5428
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5429
  ret void, !dbg !5430
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5431 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5433, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.value(metadata i32 %1, metadata !5434, metadata !DIExpression()), !dbg !5438
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5439, !range !5409
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %4, metadata !5435, metadata !DIExpression()), !dbg !5441
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5442
  ret void, !dbg !5443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #9 !dbg !5444 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5448, metadata !DIExpression()), !dbg !5450
  call void @llvm.dbg.value(metadata i32 %1, metadata !5449, metadata !DIExpression()), !dbg !5450
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5451
  %4 = lshr i32 %3, 1, !dbg !5452
  ret i32 %4, !dbg !5453
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5454 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5458, metadata !DIExpression()), !dbg !5461
  call void @llvm.dbg.value(metadata i32 %1, metadata !5459, metadata !DIExpression()), !dbg !5461
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #25, !dbg !5462
  %4 = add i32 %1, 1, !dbg !5463
  %5 = sub i32 %4, %3, !dbg !5464
  call void @llvm.dbg.value(metadata i32 %5, metadata !5460, metadata !DIExpression()), !dbg !5461
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5465, !range !5466
  %7 = sub nsw i32 31, %6, !dbg !5467
  ret i32 %7, !dbg !5468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5469 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5473, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %1, metadata !5474, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %2, metadata !5475, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5482
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5483
  %5 = load i32, i32* %4, align 4, !dbg !5483
  %6 = icmp eq i32 %5, 0, !dbg !5484
  br i1 %6, label %7, label %12, !dbg !5485

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5486
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5488
  %10 = load i32, i32* %9, align 4, !dbg !5489
  %11 = or i32 %10, %8, !dbg !5489
  store i32 %11, i32* %9, align 4, !dbg !5489
  store i32 %1, i32* %4, align 4, !dbg !5490
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5491
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5492
  br label %14, !dbg !5493

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5478, metadata !DIExpression()), !dbg !5494
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #25, !dbg !5495, !range !5496
  call void @llvm.dbg.value(metadata i32 %13, metadata !5481, metadata !DIExpression()), !dbg !5494
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #25, !dbg !5497
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5498
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #25, !dbg !5499
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #25, !dbg !5500
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5502 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5504, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 %1, metadata !5505, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 %2, metadata !5506, metadata !DIExpression()), !dbg !5507
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #25, !dbg !5508
  ret void, !dbg !5509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5510 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5512, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %1, metadata !5513, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %2, metadata !5514, metadata !DIExpression()), !dbg !5515
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #25, !dbg !5516
  ret void, !dbg !5517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #9 !dbg !5518 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5520, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 %1, metadata !5521, metadata !DIExpression()), !dbg !5522
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !5523
  ret i32 %3, !dbg !5524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5529, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata i32 %1, metadata !5530, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata i32 %2, metadata !5531, metadata !DIExpression()), !dbg !5534
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5535
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5532, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5534
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5534
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5536
  call void @llvm.dbg.value(metadata i8* %5, metadata !5533, metadata !DIExpression()), !dbg !5534
  %6 = bitcast i8* %5 to i16*, !dbg !5537
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5540
  %8 = load i16, i16* %7, align 2, !dbg !5540
  %9 = zext i16 %8 to i32, !dbg !5540
  ret i32 %9, !dbg !5541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5546, metadata !DIExpression()), !dbg !5547
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5548
  ret %struct.chunk_unit_t* %2, !dbg !5549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !5550 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5554, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %1, metadata !5555, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %2, metadata !5556, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %3, metadata !5557, metadata !DIExpression()), !dbg !5560
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5561
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5558, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5560
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5562
  call void @llvm.dbg.value(metadata i8* %6, metadata !5559, metadata !DIExpression()), !dbg !5560
  %7 = trunc i32 %3 to i16, !dbg !5563
  %8 = bitcast i8* %6 to i16*, !dbg !5566
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5567
  store i16 %7, i16* %9, align 2, !dbg !5568
  ret void, !dbg !5569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5570 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5574, metadata !DIExpression()), !dbg !5575
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #25, !dbg !5576
  ret i32 %2, !dbg !5577
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5578 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5582, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 %1, metadata !5583, metadata !DIExpression()), !dbg !5584
  %3 = add i32 %1, 4, !dbg !5585
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #25, !dbg !5586
  ret i32 %4, !dbg !5587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5592, metadata !DIExpression()), !dbg !5593
  %2 = add i32 %0, 7, !dbg !5594
  %3 = lshr i32 %2, 3, !dbg !5595
  ret i32 %3, !dbg !5596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5597 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5601, metadata !DIExpression()), !dbg !5604
  call void @llvm.dbg.value(metadata i32 %1, metadata !5602, metadata !DIExpression()), !dbg !5604
  call void @llvm.dbg.value(metadata i32 %2, metadata !5603, metadata !DIExpression()), !dbg !5604
  %4 = shl i32 %2, 1, !dbg !5605
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #25, !dbg !5606
  ret void, !dbg !5607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5608 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5610, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.value(metadata i32 %1, metadata !5611, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.value(metadata i32 %2, metadata !5612, metadata !DIExpression()), !dbg !5613
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #25, !dbg !5614
  ret void, !dbg !5615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5616 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5618, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %1, metadata !5619, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %2, metadata !5620, metadata !DIExpression()), !dbg !5626
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5621, metadata !DIExpression()), !dbg !5626
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5628
  %6 = icmp eq i32 %5, %1, !dbg !5629
  br i1 %6, label %7, label %14, !dbg !5630

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5631
  %9 = xor i32 %8, -1, !dbg !5633
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5634
  %11 = load i32, i32* %10, align 4, !dbg !5635
  %12 = and i32 %11, %9, !dbg !5635
  store i32 %12, i32* %10, align 4, !dbg !5635
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5636
  store i32 0, i32* %13, align 4, !dbg !5637
  br label %17, !dbg !5638

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5639
  call void @llvm.dbg.value(metadata i32 %15, metadata !5622, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.value(metadata i32 %5, metadata !5625, metadata !DIExpression()), !dbg !5640
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5641
  store i32 %5, i32* %16, align 4, !dbg !5642
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #25, !dbg !5643
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #25, !dbg !5644
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #9 !dbg !5646 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5648, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %1, metadata !5649, metadata !DIExpression()), !dbg !5650
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !5651
  ret i32 %3, !dbg !5652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #9 !dbg !5653 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5657, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.value(metadata i8* %1, metadata !5658, metadata !DIExpression()), !dbg !5664
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5665
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5665
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5659, metadata !DIExpression()), !dbg !5664
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #25, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %5, metadata !5660, metadata !DIExpression()), !dbg !5664
  %6 = ptrtoint i8* %1 to i32, !dbg !5667
  call void @llvm.dbg.value(metadata i32 %6, metadata !5661, metadata !DIExpression()), !dbg !5664
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #25, !dbg !5668
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5668
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5669
  call void @llvm.dbg.value(metadata i32 %9, metadata !5662, metadata !DIExpression()), !dbg !5664
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #25, !dbg !5670
  %11 = shl i32 %10, 3, !dbg !5671
  call void @llvm.dbg.value(metadata i32 %11, metadata !5663, metadata !DIExpression()), !dbg !5664
  %12 = sub i32 %9, %6, !dbg !5672
  %13 = add i32 %12, %11, !dbg !5673
  ret i32 %13, !dbg !5674
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5675 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5679, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %1, metadata !5680, metadata !DIExpression()), !dbg !5685
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5686
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5686
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5681, metadata !DIExpression()), !dbg !5685
  %5 = icmp eq i32 %1, 0, !dbg !5687
  br i1 %5, label %19, label %6, !dbg !5689

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5690
  br i1 %7, label %19, label %8, !dbg !5691

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5692, !range !5297
  call void @llvm.dbg.value(metadata i32 %9, metadata !5683, metadata !DIExpression()), !dbg !5685
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #25, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %10, metadata !5684, metadata !DIExpression()), !dbg !5685
  %11 = icmp eq i32 %10, 0, !dbg !5694
  br i1 %11, label %19, label %12, !dbg !5696

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5697
  %14 = icmp ugt i32 %13, %9, !dbg !5699
  br i1 %14, label %15, label %17, !dbg !5700

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5701
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #25, !dbg !5703
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #25, !dbg !5704
  br label %17, !dbg !5705

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #25, !dbg !5706
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5707
  call void @llvm.dbg.value(metadata i8* %18, metadata !5682, metadata !DIExpression()), !dbg !5685
  br label %19, !dbg !5708

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5685
  ret i8* %20, !dbg !5709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #9 !dbg !5710 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5714, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.value(metadata i32 %1, metadata !5715, metadata !DIExpression()), !dbg !5716
  %3 = lshr i32 %1, 3, !dbg !5717
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5718
  %5 = load i32, i32* %4, align 4, !dbg !5718
  %6 = icmp uge i32 %3, %5, !dbg !5719
  ret i1 %6, !dbg !5720
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5721 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5725, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata i32 %1, metadata !5726, metadata !DIExpression()), !dbg !5740
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %3, metadata !5727, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5740
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5742
  %5 = load i32, i32* %4, align 4, !dbg !5742
  %6 = icmp eq i32 %5, 0, !dbg !5743
  br i1 %6, label %19, label %7, !dbg !5744

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5745
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5746
  call void @llvm.dbg.value(metadata i32 %9, metadata !5732, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i32 %8, metadata !5733, metadata !DIExpression()), !dbg !5747
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5748
  %11 = icmp ult i32 %10, %1, !dbg !5750
  br i1 %11, label %13, label %12, !dbg !5751

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #25, !dbg !5752
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5754
  store i32 %14, i32* %4, align 4, !dbg !5755
  %15 = add nsw i32 %9, -1, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %15, metadata !5732, metadata !DIExpression()), !dbg !5746
  %16 = icmp eq i32 %15, 0, !dbg !5756
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5757
  br i1 %18, label %19, label %7, !dbg !5757, !llvm.loop !5758

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5761
  %21 = load i32, i32* %20, align 4, !dbg !5761
  %22 = add nsw i32 %3, 1, !dbg !5762
  %23 = shl nsw i32 -1, %22, !dbg !5762
  %24 = and i32 %21, %23, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %24, metadata !5735, metadata !DIExpression()), !dbg !5740
  %25 = icmp eq i32 %24, 0, !dbg !5764
  br i1 %25, label %30, label %26, !dbg !5765

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5766, !range !5466
  call void @llvm.dbg.value(metadata i32 %27, metadata !5736, metadata !DIExpression()), !dbg !5767
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5768
  %29 = load i32, i32* %28, align 4, !dbg !5768
  call void @llvm.dbg.value(metadata i32 %29, metadata !5739, metadata !DIExpression()), !dbg !5767
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #25, !dbg !5769
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5740
  ret i32 %31, !dbg !5770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5771 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5773, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i32 %1, metadata !5774, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i32 %2, metadata !5775, metadata !DIExpression()), !dbg !5779
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %4, metadata !5776, metadata !DIExpression()), !dbg !5779
  %5 = sub i32 %2, %1, !dbg !5781
  call void @llvm.dbg.value(metadata i32 %5, metadata !5777, metadata !DIExpression()), !dbg !5779
  %6 = sub i32 %4, %5, !dbg !5782
  call void @llvm.dbg.value(metadata i32 %6, metadata !5778, metadata !DIExpression()), !dbg !5779
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5783
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #25, !dbg !5784
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #25, !dbg !5785
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5786
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5787
  ret void, !dbg !5788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5789 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5793, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 %1, metadata !5794, metadata !DIExpression()), !dbg !5797
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5798
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5795, metadata !DIExpression()), !dbg !5797
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5799
  call void @llvm.dbg.value(metadata i8* %4, metadata !5796, metadata !DIExpression()), !dbg !5797
  ret i8* %4, !dbg !5800
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5801 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5805, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %1, metadata !5806, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %2, metadata !5807, metadata !DIExpression()), !dbg !5817
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5818
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5818
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5808, metadata !DIExpression()), !dbg !5817
  %6 = sub i32 0, %1, !dbg !5819
  %7 = and i32 %6, %1, !dbg !5820
  call void @llvm.dbg.value(metadata i32 %7, metadata !5810, metadata !DIExpression()), !dbg !5817
  %8 = icmp eq i32 %7, %1, !dbg !5821
  br i1 %8, label %13, label %9, !dbg !5823

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %10, metadata !5806, metadata !DIExpression()), !dbg !5817
  %11 = icmp ult i32 %7, 4, !dbg !5826
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5826
  br label %17, !dbg !5826

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5827
  br i1 %14, label %15, label %17, !dbg !5830

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #25, !dbg !5831
  br label %61, !dbg !5833

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5817
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5834
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5806, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %19, metadata !5809, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %18, metadata !5810, metadata !DIExpression()), !dbg !5817
  %21 = add i32 %20, -1, !dbg !5835
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5835, !range !5466
  %23 = icmp ult i32 %22, 2, !dbg !5835
  br i1 %23, label %25, label %24, !dbg !5838

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 324) #24, !dbg !5839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.37, i32 0, i32 0)) #24, !dbg !5839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 324) #24, !dbg !5839
  unreachable, !dbg !5839

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5841
  br i1 %26, label %61, label %27, !dbg !5843

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #25, !dbg !5844
  br i1 %28, label %61, label %29, !dbg !5845

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5846
  %31 = add i32 %30, %20, !dbg !5847
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #25, !dbg !5848, !range !5297
  call void @llvm.dbg.value(metadata i32 %32, metadata !5811, metadata !DIExpression()), !dbg !5817
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #25, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %33, metadata !5812, metadata !DIExpression()), !dbg !5817
  %34 = icmp eq i32 %33, 0, !dbg !5850
  br i1 %34, label %61, label %35, !dbg !5852

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #25, !dbg !5853
  call void @llvm.dbg.value(metadata i8* %36, metadata !5813, metadata !DIExpression()), !dbg !5817
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5854
  %38 = ptrtoint i8* %37 to i32, !dbg !5854
  %39 = add i32 %21, %38, !dbg !5854
  %40 = sub i32 0, %20, !dbg !5854
  %41 = and i32 %39, %40, !dbg !5854
  %42 = inttoptr i32 %41 to i8*, !dbg !5855
  %43 = sub i32 0, %18, !dbg !5856
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5856
  call void @llvm.dbg.value(metadata i8* %44, metadata !5813, metadata !DIExpression()), !dbg !5817
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5857
  %46 = ptrtoint i8* %45 to i32, !dbg !5857
  %47 = add i32 %46, 7, !dbg !5857
  %48 = and i32 %47, -8, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %48, metadata !5814, metadata !DIExpression()), !dbg !5817
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #25, !dbg !5858
  call void @llvm.dbg.value(metadata i32 %49, metadata !5815, metadata !DIExpression()), !dbg !5817
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #25, !dbg !5859
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5860
  %52 = sub i32 %48, %51, !dbg !5860
  %53 = ashr exact i32 %52, 3, !dbg !5860
  call void @llvm.dbg.value(metadata i32 %53, metadata !5816, metadata !DIExpression()), !dbg !5817
  %54 = icmp ugt i32 %49, %33, !dbg !5861
  br i1 %54, label %55, label %56, !dbg !5863

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #25, !dbg !5864
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #25, !dbg !5866
  br label %56, !dbg !5867

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #25, !dbg !5868
  %58 = icmp ugt i32 %57, %53, !dbg !5870
  br i1 %58, label %59, label %60, !dbg !5871

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #25, !dbg !5872
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #25, !dbg !5874
  br label %60, !dbg !5875

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #25, !dbg !5876
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5817
  ret i8* %62, !dbg !5877
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5878 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5882, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %1, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 %2, metadata !5884, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 %3, metadata !5885, metadata !DIExpression()), !dbg !5901
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5902
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5902
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5886, metadata !DIExpression()), !dbg !5901
  %7 = icmp eq i8* %1, null, !dbg !5903
  br i1 %7, label %8, label %10, !dbg !5905

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !5906
  br label %63, !dbg !5908

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5909
  br i1 %11, label %12, label %13, !dbg !5911

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !5912
  br label %63, !dbg !5914

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5915
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5915, !range !5466
  %16 = icmp ult i32 %15, 2, !dbg !5915
  br i1 %16, label %18, label %17, !dbg !5918

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 393) #24, !dbg !5919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.37, i32 0, i32 0)) #24, !dbg !5919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 393) #24, !dbg !5919
  unreachable, !dbg !5919

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #25, !dbg !5921
  br i1 %19, label %63, label %20, !dbg !5923

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !5924, !range !5297
  call void @llvm.dbg.value(metadata i32 %21, metadata !5887, metadata !DIExpression()), !dbg !5901
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %22, metadata !5888, metadata !DIExpression()), !dbg !5901
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5926
  %24 = ptrtoint i8* %1 to i32, !dbg !5927
  %25 = ptrtoint i8* %23 to i32, !dbg !5927
  %26 = sub i32 %24, %25, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %26, metadata !5889, metadata !DIExpression()), !dbg !5901
  %27 = add i32 %26, %3, !dbg !5928
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #25, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %28, metadata !5890, metadata !DIExpression()), !dbg !5901
  %29 = icmp eq i32 %2, 0, !dbg !5930
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5931
  br i1 %32, label %33, label %53, !dbg !5931

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5932
  %35 = icmp eq i32 %28, %34, !dbg !5933
  br i1 %35, label %63, label %36, !dbg !5934

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5935
  br i1 %37, label %38, label %40, !dbg !5936

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5937
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #25, !dbg !5939
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #25, !dbg !5940
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #25, !dbg !5941
  br label %63, !dbg !5942

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5943
  br i1 %41, label %53, label %42, !dbg !5944

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5945
  %44 = add i32 %43, %34, !dbg !5946
  %45 = icmp ult i32 %44, %28, !dbg !5947
  br i1 %45, label %53, label %46, !dbg !5948

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5949
  call void @llvm.dbg.value(metadata i32 %47, metadata !5891, metadata !DIExpression()), !dbg !5950
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5951
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5952
  %49 = icmp ult i32 %47, %48, !dbg !5954
  br i1 %49, label %50, label %52, !dbg !5955

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5956
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #25, !dbg !5958
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #25, !dbg !5959
  br label %52, !dbg !5960

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #25, !dbg !5961
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #25, !dbg !5962
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !5963
  call void @llvm.dbg.value(metadata i8* %54, metadata !5897, metadata !DIExpression()), !dbg !5901
  %55 = icmp eq i8* %54, null, !dbg !5964
  br i1 %55, label %63, label %56, !dbg !5965

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5966, !range !5409
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #25, !dbg !5967
  %59 = sub i32 %58, %26, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %59, metadata !5898, metadata !DIExpression()), !dbg !5969
  %60 = icmp ult i32 %59, %3, !dbg !5970
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5970
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #24, !dbg !5971
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !5972
  br label %63, !dbg !5973

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5901
  ret i8* %64, !dbg !5974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5975 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %1, metadata !5980, metadata !DIExpression()), !dbg !5981
  %3 = shl i32 %1, 3, !dbg !5982
  %4 = add i32 %3, -4, !dbg !5983
  ret i32 %4, !dbg !5984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5985 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5989, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8* %1, metadata !5990, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i32 %2, metadata !5991, metadata !DIExpression()), !dbg !6000
  %4 = icmp ult i32 %2, 262144, !dbg !6001
  br i1 %4, label %6, label %5, !dbg !6006

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 491) #24, !dbg !6007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.39, i32 0, i32 0)) #24, !dbg !6007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 491) #24, !dbg !6007
  unreachable, !dbg !6007

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !6009
  br i1 %7, label %9, label %8, !dbg !6012

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 498) #24, !dbg !6013
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.41, i32 0, i32 0)) #24, !dbg !6013
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 498) #24, !dbg !6013
  unreachable, !dbg !6013

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !6015
  call void @llvm.dbg.value(metadata i32 %10, metadata !5991, metadata !DIExpression()), !dbg !6000
  %11 = ptrtoint i8* %1 to i32, !dbg !6016
  %12 = add i32 %11, 7, !dbg !6016
  %13 = and i32 %12, -8, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %13, metadata !5992, metadata !DIExpression()), !dbg !6000
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6017
  %15 = ptrtoint i8* %14 to i32, !dbg !6017
  %16 = and i32 %15, -8, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %16, metadata !5993, metadata !DIExpression()), !dbg !6000
  %17 = sub i32 %16, %13, !dbg !6018
  %18 = lshr exact i32 %17, 3, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %18, metadata !5994, metadata !DIExpression()), !dbg !6000
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #25, !dbg !6020
  %20 = icmp ugt i32 %18, %19, !dbg !6020
  br i1 %20, label %22, label %21, !dbg !6023

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 507) #24, !dbg !6024
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.41, i32 0, i32 0)) #24, !dbg !6024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 507) #24, !dbg !6024
  unreachable, !dbg !6024

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6026
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5995, metadata !DIExpression()), !dbg !6000
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6027
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6028
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6029
  store i32 %18, i32* %25, align 8, !dbg !6030
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6031
  store i32 0, i32* %26, align 4, !dbg !6032
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #25, !dbg !6033
  call void @llvm.dbg.value(metadata i32 %27, metadata !5996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6000
  %28 = shl i32 %27, 2, !dbg !6034
  %29 = add i32 %28, 20, !dbg !6035
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #25, !dbg !6036
  call void @llvm.dbg.value(metadata i32 %30, metadata !5997, metadata !DIExpression()), !dbg !6000
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #25, !dbg !6037
  %32 = add i32 %31, %30, !dbg !6037
  %33 = icmp ugt i32 %32, %18, !dbg !6037
  br i1 %33, label %36, label %34, !dbg !6040

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5998, metadata !DIExpression()), !dbg !6041
  %35 = icmp slt i32 %27, 0, !dbg !6042
  br i1 %35, label %37, label %39, !dbg !6044

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 524) #24, !dbg !6045
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.41, i32 0, i32 0)) #24, !dbg !6045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 524) #24, !dbg !6045
  unreachable, !dbg !6045

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #25, !dbg !6047
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #25, !dbg !6048
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #25, !dbg !6049
  %38 = sub i32 %18, %30, !dbg !6050
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #25, !dbg !6051
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #25, !dbg !6052
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #25, !dbg !6053
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #25, !dbg !6054
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #25, !dbg !6055
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #25, !dbg !6056
  ret void, !dbg !6057

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5998, metadata !DIExpression()), !dbg !6041
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6058
  store i32 0, i32* %41, align 4, !dbg !6060
  %42 = add nuw i32 %40, 1, !dbg !6061
  call void @llvm.dbg.value(metadata i32 %42, metadata !5998, metadata !DIExpression()), !dbg !6041
  %43 = icmp eq i32 %40, %27, !dbg !6042
  br i1 %43, label %37, label %39, !dbg !6044, !llvm.loop !6062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6064 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6074, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %1, metadata !6075, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %2, metadata !6076, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %4, metadata !6078, metadata !DIExpression()), !dbg !6203
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6204
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !6204
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6079, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i32 0, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i1 undef, metadata !6085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6203
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6206

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6206

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6207
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %30, metadata !6076, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %29, metadata !6083, metadata !DIExpression()), !dbg !6203
  %31 = load i8, i8* %30, align 1, !dbg !6208
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6206

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6208
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6209
  call void @llvm.dbg.value(metadata i8* %34, metadata !6076, metadata !DIExpression()), !dbg !6203
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !6209
  call void @llvm.dbg.value(metadata i32 %35, metadata !6087, metadata !DIExpression()), !dbg !6210
  %36 = icmp slt i32 %35, 0, !dbg !6211
  %37 = add i32 %29, 1, !dbg !6209
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %36, label %365, label %28, !llvm.loop !6213

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6215
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6092, metadata !DIExpression()), !dbg !6216
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6216
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6135, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6138, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* %30, metadata !6141, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 -1, metadata !6142, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 -1, metadata !6143, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* null, metadata !6144, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* %14, metadata !6145, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 0, metadata !6146, metadata !DIExpression()), !dbg !6217
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !6218
  call void @llvm.dbg.value(metadata i8* %39, metadata !6076, metadata !DIExpression()), !dbg !6203
  %40 = load i24, i24* %15, align 8, !dbg !6219
  %41 = and i24 %40, 256, !dbg !6219
  %42 = icmp eq i24 %41, 0, !dbg !6219
  br i1 %42, label %51, label %43, !dbg !6221

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6222
  call void @llvm.dbg.value(metadata i8* %44, metadata !6077, metadata !DIExpression()), !dbg !6203
  %45 = bitcast i8* %27 to i32*, !dbg !6222
  %46 = load i32, i32* %45, align 4, !dbg !6222
  call void @llvm.dbg.value(metadata i32 %46, metadata !6142, metadata !DIExpression()), !dbg !6217
  %47 = icmp slt i32 %46, 0, !dbg !6224
  br i1 %47, label %48, label %56, !dbg !6226

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6227
  store i24 %49, i24* %15, align 8, !dbg !6227
  %50 = sub nsw i32 0, %46, !dbg !6229
  call void @llvm.dbg.value(metadata i32 %50, metadata !6142, metadata !DIExpression()), !dbg !6217
  br label %56, !dbg !6230

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6231
  %53 = icmp eq i24 %52, 0, !dbg !6231
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6233
  br label %56, !dbg !6233

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6234
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6217
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %58, metadata !6142, metadata !DIExpression()), !dbg !6217
  %60 = and i24 %57, 1024, !dbg !6234
  %61 = icmp eq i24 %60, 0, !dbg !6234
  br i1 %61, label %69, label %62, !dbg !6235

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %63, metadata !6077, metadata !DIExpression()), !dbg !6203
  %64 = bitcast i8* %59 to i32*, !dbg !6236
  %65 = load i32, i32* %64, align 4, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %65, metadata !6147, metadata !DIExpression()), !dbg !6237
  %66 = icmp slt i32 %65, 0, !dbg !6238
  br i1 %66, label %67, label %74, !dbg !6240

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6241
  store i24 %68, i24* %15, align 8, !dbg !6241
  br label %74, !dbg !6243

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6244
  %71 = icmp eq i24 %70, 0, !dbg !6244
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6246
  br label %74, !dbg !6246

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6247
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6217
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6217
  call void @llvm.dbg.value(metadata i8* %77, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %76, metadata !6143, metadata !DIExpression()), !dbg !6217
  store i32 0, i32* %16, align 4, !dbg !6248
  store i32 0, i32* %17, align 8, !dbg !6249
  %78 = lshr i24 %75, 16, !dbg !6247
  call void @llvm.dbg.value(metadata i24 %78, metadata !6150, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6217
  %79 = lshr i24 %75, 11, !dbg !6250
  %80 = and i24 %79, 15, !dbg !6250
  %81 = zext i24 %80 to i32, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %81, metadata !6151, metadata !DIExpression()), !dbg !6217
  %82 = trunc i24 %78 to i3, !dbg !6251
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6251

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6252

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6255
  call void @llvm.dbg.value(metadata i8* %85, metadata !6077, metadata !DIExpression()), !dbg !6203
  %86 = bitcast i8* %77 to i32*, !dbg !6255
  %87 = load i32, i32* %86, align 4, !dbg !6255
  %88 = sext i32 %87 to i64, !dbg !6255
  store i64 %88, i64* %20, align 8, !dbg !6257
  br label %115, !dbg !6258

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %90, metadata !6077, metadata !DIExpression()), !dbg !6203
  %91 = bitcast i8* %77 to i32*, !dbg !6259
  %92 = load i32, i32* %91, align 4, !dbg !6259
  %93 = sext i32 %92 to i64, !dbg !6259
  store i64 %93, i64* %20, align 8, !dbg !6262
  br label %115, !dbg !6263

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6264
  %96 = add i32 %95, 7, !dbg !6264
  %97 = and i32 %96, -8, !dbg !6264
  %98 = inttoptr i32 %97 to i8*, !dbg !6264
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6264
  call void @llvm.dbg.value(metadata i8* %99, metadata !6077, metadata !DIExpression()), !dbg !6203
  %100 = inttoptr i32 %97 to i64*, !dbg !6264
  %101 = load i64, i64* %100, align 8, !dbg !6264
  store i64 %101, i64* %20, align 8, !dbg !6265
  br label %115, !dbg !6266

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6267
  %104 = add i32 %103, 7, !dbg !6267
  %105 = and i32 %104, -8, !dbg !6267
  %106 = inttoptr i32 %105 to i8*, !dbg !6267
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6267
  call void @llvm.dbg.value(metadata i8* %107, metadata !6077, metadata !DIExpression()), !dbg !6203
  %108 = inttoptr i32 %105 to i64*, !dbg !6267
  %109 = load i64, i64* %108, align 8, !dbg !6267
  store i64 %109, i64* %20, align 8, !dbg !6268
  br label %115, !dbg !6269

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6270
  call void @llvm.dbg.value(metadata i8* %111, metadata !6077, metadata !DIExpression()), !dbg !6203
  %112 = bitcast i8* %77 to i32*, !dbg !6270
  %113 = load i32, i32* %112, align 4, !dbg !6270
  %114 = sext i32 %113 to i64, !dbg !6271
  store i64 %114, i64* %20, align 8, !dbg !6272
  br label %115, !dbg !6273

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6274
  call void @llvm.dbg.value(metadata i8* %117, metadata !6077, metadata !DIExpression()), !dbg !6203
  %118 = trunc i24 %79 to i4, !dbg !6275
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6275

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6276
  %121 = ashr exact i64 %120, 56, !dbg !6276
  store i64 %121, i64* %20, align 8, !dbg !6279
  br label %177, !dbg !6280

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6281
  %124 = ashr exact i64 %123, 48, !dbg !6281
  store i64 %124, i64* %20, align 8, !dbg !6284
  br label %177, !dbg !6285

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6286

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6289
  call void @llvm.dbg.value(metadata i8* %127, metadata !6077, metadata !DIExpression()), !dbg !6203
  %128 = bitcast i8* %77 to i32*, !dbg !6289
  %129 = load i32, i32* %128, align 4, !dbg !6289
  %130 = zext i32 %129 to i64, !dbg !6289
  store i64 %130, i64* %20, align 8, !dbg !6291
  br label %157, !dbg !6292

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6293
  call void @llvm.dbg.value(metadata i8* %132, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %132, metadata !6077, metadata !DIExpression()), !dbg !6203
  %133 = bitcast i8* %77 to i32*, !dbg !6293
  %134 = load i32, i32* %133, align 4, !dbg !6293
  %135 = zext i32 %134 to i64, !dbg !6293
  store i64 %135, i64* %20, align 8, !dbg !6293
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6295
  %138 = add i32 %137, 7, !dbg !6295
  %139 = and i32 %138, -8, !dbg !6295
  %140 = inttoptr i32 %139 to i8*, !dbg !6295
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6295
  call void @llvm.dbg.value(metadata i8* %141, metadata !6077, metadata !DIExpression()), !dbg !6203
  %142 = inttoptr i32 %139 to i64*, !dbg !6295
  %143 = load i64, i64* %142, align 8, !dbg !6295
  store i64 %143, i64* %20, align 8, !dbg !6296
  br label %157, !dbg !6297

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6298
  %146 = add i32 %145, 7, !dbg !6298
  %147 = and i32 %146, -8, !dbg !6298
  %148 = inttoptr i32 %147 to i8*, !dbg !6298
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6298
  call void @llvm.dbg.value(metadata i8* %149, metadata !6077, metadata !DIExpression()), !dbg !6203
  %150 = inttoptr i32 %147 to i64*, !dbg !6298
  %151 = load i64, i64* %150, align 8, !dbg !6298
  store i64 %151, i64* %20, align 8, !dbg !6299
  br label %157, !dbg !6300

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6301
  call void @llvm.dbg.value(metadata i8* %153, metadata !6077, metadata !DIExpression()), !dbg !6203
  %154 = bitcast i8* %77 to i32*, !dbg !6301
  %155 = load i32, i32* %154, align 4, !dbg !6301
  %156 = zext i32 %155 to i64, !dbg !6302
  store i64 %156, i64* %20, align 8, !dbg !6303
  br label %157, !dbg !6304

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6305
  call void @llvm.dbg.value(metadata i8* %159, metadata !6077, metadata !DIExpression()), !dbg !6203
  %160 = trunc i24 %79 to i4, !dbg !6306
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6306

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6307
  store i64 %162, i64* %20, align 8, !dbg !6310
  br label %177, !dbg !6311

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6312
  store i64 %164, i64* %20, align 8, !dbg !6315
  br label %177, !dbg !6316

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6317
  %167 = add i32 %166, 7, !dbg !6317
  %168 = and i32 %167, -8, !dbg !6317
  %169 = inttoptr i32 %168 to i8*, !dbg !6317
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6317
  call void @llvm.dbg.value(metadata i8* %170, metadata !6077, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %170, metadata !6077, metadata !DIExpression()), !dbg !6203
  %171 = inttoptr i32 %168 to double*, !dbg !6317
  %172 = load double, double* %171, align 8, !dbg !6317
  store double %172, double* %19, align 8, !dbg !6317
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6321
  call void @llvm.dbg.value(metadata i8* %174, metadata !6077, metadata !DIExpression()), !dbg !6203
  %175 = bitcast i8* %77 to i8**, !dbg !6321
  %176 = load i8*, i8** %175, align 4, !dbg !6321
  store i8* %176, i8** %18, align 8, !dbg !6324
  br label %177, !dbg !6325

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6217
  call void @llvm.dbg.value(metadata i8* %178, metadata !6077, metadata !DIExpression()), !dbg !6203
  %179 = and i24 %75, 3, !dbg !6326
  %180 = icmp eq i24 %179, 0, !dbg !6326
  br i1 %180, label %185, label %181, !dbg !6326

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !6327
  call void @llvm.dbg.value(metadata i32 %182, metadata !6152, metadata !DIExpression()), !dbg !6328
  %183 = icmp slt i32 %182, 0, !dbg !6329
  %184 = add i32 %182, %29, !dbg !6327
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6331
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6332

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %188, metadata !6156, metadata !DIExpression()), !dbg !6334
  %189 = icmp slt i32 %188, 0, !dbg !6335
  %190 = add i32 %29, 1, !dbg !6333
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6337
  call void @llvm.dbg.value(metadata i8* %192, metadata !6144, metadata !DIExpression()), !dbg !6217
  %193 = icmp sgt i32 %76, -1, !dbg !6338
  br i1 %193, label %194, label %196, !dbg !6340

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !6341
  call void @llvm.dbg.value(metadata i32 %195, metadata !6159, metadata !DIExpression()), !dbg !6343
  br label %241, !dbg !6344

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !6345
  call void @llvm.dbg.value(metadata i32 %197, metadata !6159, metadata !DIExpression()), !dbg !6343
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6144, metadata !DIExpression()), !dbg !6217
  %199 = load i64, i64* %20, align 8, !dbg !6347
  %200 = trunc i64 %199 to i8, !dbg !6348
  store i8 %200, i8* %10, align 1, !dbg !6349
  call void @llvm.dbg.value(metadata i8* %23, metadata !6145, metadata !DIExpression()), !dbg !6217
  br label %245, !dbg !6350

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6351
  %203 = icmp eq i24 %202, 0, !dbg !6351
  %204 = trunc i24 %75 to i8, !dbg !6353
  %205 = shl i8 %204, 1, !dbg !6353
  %206 = and i8 %205, 32, !dbg !6353
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6353
  call void @llvm.dbg.value(metadata i8 %207, metadata !6146, metadata !DIExpression()), !dbg !6217
  %208 = load i64, i64* %20, align 8, !dbg !6354
  call void @llvm.dbg.value(metadata i64 %208, metadata !6084, metadata !DIExpression()), !dbg !6203
  %209 = icmp slt i64 %208, 0, !dbg !6355
  br i1 %209, label %210, label %212, !dbg !6357

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6146, metadata !DIExpression()), !dbg !6217
  %211 = sub nsw i64 0, %208, !dbg !6358
  store i64 %211, i64* %20, align 8, !dbg !6360
  br label %212, !dbg !6361

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6217
  call void @llvm.dbg.value(metadata i8 %213, metadata !6146, metadata !DIExpression()), !dbg !6217
  %214 = load i64, i64* %20, align 8, !dbg !6362
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6363
  call void @llvm.dbg.value(metadata i8* %215, metadata !6144, metadata !DIExpression()), !dbg !6217
  br label %216, !dbg !6364

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6365
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6366
  call void @llvm.dbg.value(metadata i8* %218, metadata !6144, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 %217, metadata !6146, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.label(metadata !6202), !dbg !6367
  %219 = icmp sgt i32 %76, -1, !dbg !6368
  br i1 %219, label %222, label %220, !dbg !6369

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6370
  br label %245, !dbg !6369

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6372
  %224 = sub i32 %22, %223, !dbg !6372
  call void @llvm.dbg.value(metadata i32 %224, metadata !6161, metadata !DIExpression()), !dbg !6373
  %225 = load i24, i24* %15, align 8, !dbg !6374
  %226 = and i24 %225, -65, !dbg !6374
  store i24 %226, i24* %15, align 8, !dbg !6374
  %227 = icmp ugt i32 %76, %224, !dbg !6375
  br i1 %227, label %228, label %245, !dbg !6377

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6378
  store i32 %229, i32* %16, align 4, !dbg !6380
  br label %245, !dbg !6381

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6382
  %232 = icmp eq i8* %231, null, !dbg !6384
  br i1 %232, label %245, label %233, !dbg !6385

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6386
  %235 = zext i32 %234 to i64, !dbg !6386
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6388
  call void @llvm.dbg.value(metadata i8* %236, metadata !6144, metadata !DIExpression()), !dbg !6217
  %237 = load i24, i24* %15, align 8, !dbg !6389
  %238 = or i24 %237, 1048576, !dbg !6389
  store i24 %238, i24* %15, align 8, !dbg !6389
  store i8 120, i8* %21, align 1, !dbg !6390
  br label %216, !dbg !6391

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6392
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !6395
  br label %363, !dbg !6396

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6397
  call void @llvm.dbg.value(metadata i32 %242, metadata !6159, metadata !DIExpression()), !dbg !6343
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6398
  call void @llvm.dbg.value(metadata i32 -1, metadata !6143, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 %29, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %192, metadata !6144, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* %243, metadata !6145, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 0, metadata !6146, metadata !DIExpression()), !dbg !6217
  %244 = icmp eq i8* %192, null, !dbg !6399
  br i1 %244, label %363, label %245, !dbg !6401, !llvm.loop !6213

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6370
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 0, metadata !6165, metadata !DIExpression()), !dbg !6217
  %250 = zext i8 %249 to i32, !dbg !6402
  %251 = icmp eq i8 %249, 0, !dbg !6404
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  %252 = icmp sgt i32 %58, 0, !dbg !6405
  br i1 %252, label %253, label %302, !dbg !6406

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6370
  %255 = icmp eq i24 %254, 0, !dbg !6370
  %256 = ptrtoint i8* %248 to i32, !dbg !6407
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %257 = ptrtoint i8* %247 to i32, !dbg !6407
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %258 = xor i1 %251, true, !dbg !6408
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %259 = sext i1 %258 to i32, !dbg !6408
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %260 = lshr i24 %246, 19, !dbg !6409
  %261 = and i24 %260, 1, !dbg !6409
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6409
  %263 = zext i24 %262 to i32, !dbg !6409
  %264 = add i32 %257, %259, !dbg !6409
  %265 = add i32 %256, %263, !dbg !6409
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  %266 = and i24 %246, 4194304, !dbg !6410
  %267 = icmp eq i24 %266, 0, !dbg !6410
  %268 = load i32, i32* %16, align 4, !dbg !6412
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6217
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  %269 = load i32, i32* %17, align 8, !dbg !6413
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6413
  call void @llvm.dbg.value(metadata i32 undef, metadata !6164, metadata !DIExpression()), !dbg !6217
  %271 = add i32 %264, %58, !dbg !6413
  %272 = add i32 %265, %268, !dbg !6413
  %273 = add i32 %272, %270, !dbg !6414
  %274 = sub i32 %271, %273, !dbg !6414
  call void @llvm.dbg.value(metadata i32 %274, metadata !6142, metadata !DIExpression()), !dbg !6217
  %275 = and i24 %246, 4, !dbg !6415
  %276 = icmp eq i24 %275, 0, !dbg !6415
  br i1 %276, label %277, label %302, !dbg !6416

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6166, metadata !DIExpression()), !dbg !6417
  %278 = and i24 %246, 64, !dbg !6418
  %279 = icmp eq i24 %278, 0, !dbg !6418
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6419
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6419
  %282 = select i1 %279, i32 32, i32 48, !dbg !6419
  br i1 %280, label %287, label %283, !dbg !6419

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !6420
  call void @llvm.dbg.value(metadata i32 %284, metadata !6171, metadata !DIExpression()), !dbg !6421
  %285 = icmp slt i32 %284, 0, !dbg !6422
  %286 = add i32 %29, 1, !dbg !6420
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6217
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %290, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8 undef, metadata !6166, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata i8 %288, metadata !6146, metadata !DIExpression()), !dbg !6217
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6424
  %292 = add i32 %291, -1, !dbg !6424
  br label %293, !dbg !6424

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6425
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %295, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %294, metadata !6142, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 %294, metadata !6142, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6217
  %296 = icmp sgt i32 %294, 0, !dbg !6426
  br i1 %296, label %297, label %302, !dbg !6424

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %298, metadata !6142, metadata !DIExpression()), !dbg !6217
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !6428
  call void @llvm.dbg.value(metadata i32 %299, metadata !6177, metadata !DIExpression()), !dbg !6429
  %300 = icmp slt i32 %299, 0, !dbg !6430
  %301 = add i32 %295, 1, !dbg !6428
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %300, label %361, label %293, !llvm.loop !6432

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6217
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6217
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %305, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %304, metadata !6142, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8 %303, metadata !6146, metadata !DIExpression()), !dbg !6217
  %306 = icmp eq i8 %303, 0, !dbg !6434
  br i1 %306, label %312, label %307, !dbg !6435

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6436
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !6437
  call void @llvm.dbg.value(metadata i32 %309, metadata !6180, metadata !DIExpression()), !dbg !6438
  %310 = icmp slt i32 %309, 0, !dbg !6439
  %311 = add i32 %305, 1, !dbg !6437
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %313, metadata !6083, metadata !DIExpression()), !dbg !6203
  %314 = lshr i24 %246, 20, !dbg !6441
  %315 = lshr i24 %246, 19, !dbg !6442
  %316 = or i24 %314, %315, !dbg !6443
  %317 = and i24 %316, 1, !dbg !6443
  %318 = icmp eq i24 %317, 0, !dbg !6443
  br i1 %318, label %323, label %319, !dbg !6444

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %320, metadata !6184, metadata !DIExpression()), !dbg !6446
  %321 = icmp slt i32 %320, 0, !dbg !6447
  %322 = add i32 %313, 1, !dbg !6445
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %324, metadata !6083, metadata !DIExpression()), !dbg !6203
  %325 = and i24 %246, 1048576, !dbg !6449
  %326 = icmp eq i24 %325, 0, !dbg !6449
  br i1 %326, label %333, label %327, !dbg !6450

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6451
  %329 = zext i8 %328 to i32, !dbg !6451
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !6451
  call void @llvm.dbg.value(metadata i32 %330, metadata !6190, metadata !DIExpression()), !dbg !6452
  %331 = icmp slt i32 %330, 0, !dbg !6453
  %332 = add i32 %324, 1, !dbg !6451
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %334, metadata !6083, metadata !DIExpression()), !dbg !6203
  %335 = load i32, i32* %16, align 4, !dbg !6455
  call void @llvm.dbg.value(metadata i32 %335, metadata !6165, metadata !DIExpression()), !dbg !6217
  br label %336, !dbg !6456

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6457
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %338, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %337, metadata !6165, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6217
  %339 = icmp sgt i32 %337, 0, !dbg !6458
  br i1 %339, label %340, label %345, !dbg !6456

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6459
  call void @llvm.dbg.value(metadata i32 %341, metadata !6165, metadata !DIExpression()), !dbg !6217
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6460
  call void @llvm.dbg.value(metadata i32 %342, metadata !6194, metadata !DIExpression()), !dbg !6461
  %343 = icmp slt i32 %342, 0, !dbg !6462
  %344 = add i32 %338, 1, !dbg !6460
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %343, label %361, label %336, !llvm.loop !6464

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %346, metadata !6197, metadata !DIExpression()), !dbg !6467
  %347 = icmp slt i32 %346, 0, !dbg !6468
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %349, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %304, metadata !6142, metadata !DIExpression()), !dbg !6217
  %350 = icmp sgt i32 %304, 0, !dbg !6470
  br i1 %350, label %351, label %363, !dbg !6471

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6471
  %353 = add i32 %352, %338, !dbg !6471
  br label %354, !dbg !6471

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %355, metadata !6142, metadata !DIExpression()), !dbg !6217
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !6472
  call void @llvm.dbg.value(metadata i32 %356, metadata !6199, metadata !DIExpression()), !dbg !6473
  %357 = icmp slt i32 %356, 0, !dbg !6474
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6476
  call void @llvm.dbg.value(metadata i32 undef, metadata !6083, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %359, metadata !6142, metadata !DIExpression()), !dbg !6217
  %360 = icmp sgt i32 %355, 1, !dbg !6470
  br i1 %360, label %354, label %363, !dbg !6471, !llvm.loop !6477

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6214
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6207
  call void @llvm.dbg.value(metadata i32 %364, metadata !6083, metadata !DIExpression()), !dbg !6203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6214
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6203
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !6479
  ret i32 %366, !dbg !6479
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6480 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6484, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.value(metadata i8* %1, metadata !6485, metadata !DIExpression()), !dbg !6486
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6487
  store i24 0, i24* %3, align 4, !dbg !6487
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6487
  store i8 0, i8* %4, align 1, !dbg !6487
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6487
  store i32 0, i32* %5, align 4, !dbg !6487
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6487
  store i32 0, i32* %6, align 4, !dbg !6487
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6488
  call void @llvm.dbg.value(metadata i8* %7, metadata !6485, metadata !DIExpression()), !dbg !6486
  %8 = load i8, i8* %7, align 1, !dbg !6489
  %9 = icmp eq i8 %8, 37, !dbg !6491
  br i1 %9, label %10, label %12, !dbg !6492

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6493
  call void @llvm.dbg.value(metadata i8* %11, metadata !6485, metadata !DIExpression()), !dbg !6486
  store i8 37, i8* %4, align 1, !dbg !6495
  br label %18, !dbg !6496

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !6497
  call void @llvm.dbg.value(metadata i8* %13, metadata !6485, metadata !DIExpression()), !dbg !6486
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !6498
  call void @llvm.dbg.value(metadata i8* %14, metadata !6485, metadata !DIExpression()), !dbg !6486
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !6499
  call void @llvm.dbg.value(metadata i8* %15, metadata !6485, metadata !DIExpression()), !dbg !6486
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !6500
  call void @llvm.dbg.value(metadata i8* %16, metadata !6485, metadata !DIExpression()), !dbg !6486
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !6501
  call void @llvm.dbg.value(metadata i8* %17, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %18, !dbg !6502

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6486
  ret i8* %19, !dbg !6503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6504 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6508, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %1, metadata !6509, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %2, metadata !6510, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %3, metadata !6511, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i32 0, metadata !6512, metadata !DIExpression()), !dbg !6515
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6516

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6517
  call void @llvm.dbg.value(metadata i32 %9, metadata !6512, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %8, metadata !6510, metadata !DIExpression()), !dbg !6515
  %10 = icmp ult i8* %8, %3, !dbg !6518
  br i1 %10, label %11, label %13, !dbg !6519

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6520
  br label %17, !dbg !6519

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6521

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6522
  %16 = icmp eq i8 %15, 0, !dbg !6521
  br i1 %16, label %24, label %17, !dbg !6516

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6520
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6523
  call void @llvm.dbg.value(metadata i8* %19, metadata !6510, metadata !DIExpression()), !dbg !6515
  %20 = zext i8 %18 to i32, !dbg !6524
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !6525
  call void @llvm.dbg.value(metadata i32 %21, metadata !6513, metadata !DIExpression()), !dbg !6526
  %22 = icmp slt i32 %21, 0, !dbg !6527
  %23 = add i32 %9, 1, !dbg !6529
  call void @llvm.dbg.value(metadata i32 undef, metadata !6512, metadata !DIExpression()), !dbg !6515
  br i1 %22, label %24, label %7, !llvm.loop !6530

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6515
  ret i32 %25, !dbg !6532
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6533 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6537, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6538, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %2, metadata !6539, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %3, metadata !6540, metadata !DIExpression()), !dbg !6547
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6548
  %6 = load i8, i8* %5, align 1, !dbg !6548
  %7 = zext i8 %6 to i32, !dbg !6549
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !6550
  %9 = icmp eq i32 %8, 0, !dbg !6550
  call void @llvm.dbg.value(metadata i1 %9, metadata !6541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6547
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %10, metadata !6542, metadata !DIExpression()), !dbg !6547
  %11 = ptrtoint i8* %3 to i32, !dbg !6552
  %12 = ptrtoint i8* %2 to i32, !dbg !6552
  %13 = sub i32 %11, %12, !dbg !6552
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6553
  call void @llvm.dbg.value(metadata i8* %14, metadata !6544, metadata !DIExpression()), !dbg !6547
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6554

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6547
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6537, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i8* %18, metadata !6544, metadata !DIExpression()), !dbg !6547
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6555
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6556
  call void @llvm.dbg.value(metadata i32 %25, metadata !6545, metadata !DIExpression()), !dbg !6557
  %26 = icmp ult i32 %25, 10, !dbg !6558
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6559
  %28 = add i32 %27, %25, !dbg !6557
  %29 = trunc i32 %28 to i8, !dbg !6559
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6560
  call void @llvm.dbg.value(metadata i8* %30, metadata !6544, metadata !DIExpression()), !dbg !6547
  store i8 %29, i8* %30, align 1, !dbg !6561
  call void @llvm.dbg.value(metadata i64 %22, metadata !6537, metadata !DIExpression()), !dbg !6547
  %31 = icmp uge i64 %19, %15, !dbg !6562
  %32 = icmp ugt i8* %30, %2, !dbg !6563
  %33 = and i1 %31, %32, !dbg !6563
  br i1 %33, label %17, label %34, !dbg !6564, !llvm.loop !6565

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6567
  %36 = load i24, i24* %35, align 4, !dbg !6567
  %37 = and i24 %36, 32, !dbg !6567
  %38 = icmp eq i24 %37, 0, !dbg !6567
  br i1 %38, label %44, label %39, !dbg !6569

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6570

40:                                               ; preds = %39
  br label %41, !dbg !6572

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6576
  store i24 %43, i24* %35, align 4, !dbg !6576
  br label %44, !dbg !6577

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6578 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6584, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i8* %1, metadata !6585, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i32 %2, metadata !6586, metadata !DIExpression()), !dbg !6587
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6588
  %5 = load i24, i24* %4, align 4, !dbg !6588
  %6 = lshr i24 %5, 11, !dbg !6588
  %7 = and i24 %6, 15, !dbg !6588
  %8 = zext i24 %7 to i32, !dbg !6588
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6589

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6590
  store i32 %2, i32* %10, align 4, !dbg !6592
  br label %28, !dbg !6593

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6594
  store i8 %12, i8* %1, align 1, !dbg !6595
  br label %28, !dbg !6596

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6597
  %15 = bitcast i8* %1 to i16*, !dbg !6598
  store i16 %14, i16* %15, align 2, !dbg !6599
  br label %28, !dbg !6600

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6601
  store i32 %2, i32* %17, align 4, !dbg !6602
  br label %28, !dbg !6603

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6604
  %20 = bitcast i8* %1 to i64*, !dbg !6605
  store i64 %19, i64* %20, align 8, !dbg !6606
  br label %28, !dbg !6607

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6608
  %23 = bitcast i8* %1 to i64*, !dbg !6609
  store i64 %22, i64* %23, align 8, !dbg !6610
  br label %28, !dbg !6611

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6612
  store i32 %2, i32* %25, align 4, !dbg !6613
  br label %28, !dbg !6614

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6615
  store i32 %2, i32* %27, align 4, !dbg !6616
  br label %28, !dbg !6617

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6618
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6622, metadata !DIExpression()), !dbg !6623
  %2 = add i32 %0, -65, !dbg !6624
  %3 = icmp ult i32 %2, 26, !dbg !6625
  %4 = zext i1 %3 to i32, !dbg !6625
  ret i32 %4, !dbg !6626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6627 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6631, metadata !DIExpression()), !dbg !6632
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6633

2:                                                ; preds = %1
  br label %4, !dbg !6634

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6636

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6637
  ret i32 %5, !dbg !6638
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6639 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6641, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %1, metadata !6642, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8 1, metadata !6643, metadata !DIExpression()), !dbg !6644
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6645

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %5, metadata !6642, metadata !DIExpression()), !dbg !6644
  %6 = load i8, i8* %5, align 1, !dbg !6646
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6648

7:                                                ; preds = %4
  br label %11, !dbg !6649

8:                                                ; preds = %4
  br label %11, !dbg !6651

9:                                                ; preds = %4
  br label %11, !dbg !6652

10:                                               ; preds = %4
  br label %11, !dbg !6653

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6654
  %14 = or i24 %13, %12, !dbg !6654
  store i24 %14, i24* %3, align 4, !dbg !6654
  call void @llvm.dbg.value(metadata i8 poison, metadata !6643, metadata !DIExpression()), !dbg !6644
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6642, metadata !DIExpression()), !dbg !6644
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %15, metadata !6642, metadata !DIExpression()), !dbg !6644
  %17 = load i24, i24* %3, align 4, !dbg !6655
  %18 = and i24 %17, 68, !dbg !6657
  %19 = icmp eq i24 %18, 68, !dbg !6657
  br i1 %19, label %20, label %22, !dbg !6657

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6658
  store i24 %21, i24* %3, align 4, !dbg !6658
  br label %22, !dbg !6660

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6662 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6664, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6668
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6669
  %5 = load i24, i24* %4, align 4, !dbg !6670
  %6 = or i24 %5, 128, !dbg !6670
  store i24 %6, i24* %4, align 4, !dbg !6670
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6668
  %7 = load i8, i8* %1, align 1, !dbg !6671
  %8 = icmp eq i8 %7, 42, !dbg !6673
  br i1 %8, label %9, label %12, !dbg !6674

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6675
  store i24 %10, i24* %4, align 4, !dbg !6675
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6668
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6677
  call void @llvm.dbg.value(metadata i8* %11, metadata !6665, metadata !DIExpression()), !dbg !6668
  store i8* %11, i8** %3, align 4, !dbg !6677
  br label %29, !dbg !6678

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6666, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8** %3, metadata !6665, metadata !DIExpression(DW_OP_deref)), !dbg !6668
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6679
  call void @llvm.dbg.value(metadata i32 %13, metadata !6667, metadata !DIExpression()), !dbg !6668
  %14 = load i8*, i8** %3, align 4, !dbg !6680
  call void @llvm.dbg.value(metadata i8* %14, metadata !6665, metadata !DIExpression()), !dbg !6668
  %15 = icmp eq i8* %14, %1, !dbg !6682
  br i1 %15, label %29, label %16, !dbg !6683

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6684
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6686
  store i32 %13, i32* %18, align 4, !dbg !6687
  %19 = lshr i32 %13, 31, !dbg !6688
  %20 = lshr i24 %17, 1, !dbg !6689
  %21 = and i24 %20, 1, !dbg !6689
  %22 = zext i24 %21 to i32, !dbg !6689
  %23 = or i32 %19, %22, !dbg !6689
  %24 = trunc i32 %23 to i24, !dbg !6689
  %25 = shl nuw nsw i24 %24, 1, !dbg !6689
  %26 = and i24 %17, -131, !dbg !6689
  %27 = or i24 %26, 128, !dbg !6689
  %28 = or i24 %25, %27, !dbg !6689
  store i24 %28, i24* %4, align 4, !dbg !6689
  br label %29, !dbg !6690

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6668
  ret i8* %30, !dbg !6691
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6692 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %1, metadata !6695, metadata !DIExpression()), !dbg !6697
  %4 = load i8, i8* %1, align 1, !dbg !6698
  %5 = icmp eq i8 %4, 46, !dbg !6699
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6700
  %7 = load i24, i24* %6, align 4, !dbg !6701
  %8 = select i1 %5, i24 512, i24 0, !dbg !6701
  %9 = and i24 %7, -513, !dbg !6701
  %10 = or i24 %9, %8, !dbg !6701
  store i24 %10, i24* %6, align 4, !dbg !6701
  br i1 %5, label %11, label %32, !dbg !6702

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6695, metadata !DIExpression()), !dbg !6697
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6703
  call void @llvm.dbg.value(metadata i8* %12, metadata !6695, metadata !DIExpression()), !dbg !6697
  store i8* %12, i8** %3, align 4, !dbg !6703
  %13 = load i8, i8* %12, align 1, !dbg !6704
  %14 = icmp eq i8 %13, 42, !dbg !6706
  br i1 %14, label %15, label %18, !dbg !6707

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6708
  store i24 %16, i24* %6, align 4, !dbg !6708
  call void @llvm.dbg.value(metadata i8* %12, metadata !6695, metadata !DIExpression()), !dbg !6697
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6710
  call void @llvm.dbg.value(metadata i8* %17, metadata !6695, metadata !DIExpression()), !dbg !6697
  store i8* %17, i8** %3, align 4, !dbg !6710
  br label %32, !dbg !6711

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6695, metadata !DIExpression(DW_OP_deref)), !dbg !6697
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %19, metadata !6696, metadata !DIExpression()), !dbg !6697
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6713
  store i32 %19, i32* %20, align 4, !dbg !6714
  %21 = lshr i32 %19, 31, !dbg !6715
  %22 = load i24, i24* %6, align 4, !dbg !6716
  %23 = lshr i24 %22, 1, !dbg !6716
  %24 = and i24 %23, 1, !dbg !6716
  %25 = zext i24 %24 to i32, !dbg !6716
  %26 = or i32 %21, %25, !dbg !6716
  %27 = trunc i32 %26 to i24, !dbg !6716
  %28 = shl nuw nsw i24 %27, 1, !dbg !6716
  %29 = and i24 %22, -3, !dbg !6716
  %30 = or i24 %28, %29, !dbg !6716
  store i24 %30, i24* %6, align 4, !dbg !6716
  %31 = load i8*, i8** %3, align 4, !dbg !6717
  call void @llvm.dbg.value(metadata i8* %31, metadata !6695, metadata !DIExpression()), !dbg !6697
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6697
  ret i8* %33, !dbg !6718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6719 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6721, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %1, metadata !6722, metadata !DIExpression()), !dbg !6723
  %3 = load i8, i8* %1, align 1, !dbg !6724
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6725

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6726
  call void @llvm.dbg.value(metadata i8* %5, metadata !6722, metadata !DIExpression()), !dbg !6723
  %6 = load i8, i8* %5, align 1, !dbg !6729
  %7 = icmp eq i8 %6, 104, !dbg !6730
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6731
  %9 = load i24, i24* %8, align 4, !dbg !6731
  %10 = and i24 %9, -30721, !dbg !6731
  br i1 %7, label %11, label %14, !dbg !6732

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6733
  store i24 %12, i24* %8, align 4, !dbg !6733
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6735
  call void @llvm.dbg.value(metadata i8* %13, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6736

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6737
  store i24 %15, i24* %8, align 4, !dbg !6737
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6739
  call void @llvm.dbg.value(metadata i8* %17, metadata !6722, metadata !DIExpression()), !dbg !6723
  %18 = load i8, i8* %17, align 1, !dbg !6741
  %19 = icmp eq i8 %18, 108, !dbg !6742
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6743
  %21 = load i24, i24* %20, align 4, !dbg !6743
  %22 = and i24 %21, -30721, !dbg !6743
  br i1 %19, label %23, label %26, !dbg !6744

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6745
  store i24 %24, i24* %20, align 4, !dbg !6745
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6747
  call void @llvm.dbg.value(metadata i8* %25, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6748

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6749
  store i24 %27, i24* %20, align 4, !dbg !6749
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6751
  %30 = load i24, i24* %29, align 4, !dbg !6752
  %31 = and i24 %30, -30721, !dbg !6752
  %32 = or i24 %31, 10240, !dbg !6752
  store i24 %32, i24* %29, align 4, !dbg !6752
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6753
  call void @llvm.dbg.value(metadata i8* %33, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6754

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6755
  %36 = load i24, i24* %35, align 4, !dbg !6756
  %37 = and i24 %36, -30721, !dbg !6756
  %38 = or i24 %37, 12288, !dbg !6756
  store i24 %38, i24* %35, align 4, !dbg !6756
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6757
  call void @llvm.dbg.value(metadata i8* %39, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6758

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6759
  %42 = load i24, i24* %41, align 4, !dbg !6760
  %43 = and i24 %42, -30721, !dbg !6760
  %44 = or i24 %43, 14336, !dbg !6760
  store i24 %44, i24* %41, align 4, !dbg !6760
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6761
  call void @llvm.dbg.value(metadata i8* %45, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %56, !dbg !6762

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6763
  %48 = load i24, i24* %47, align 4, !dbg !6764
  %49 = and i24 %48, -30723, !dbg !6764
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6765
  call void @llvm.dbg.value(metadata i8* %50, metadata !6722, metadata !DIExpression()), !dbg !6723
  %51 = or i24 %49, 16386, !dbg !6766
  store i24 %51, i24* %47, align 4, !dbg !6766
  br label %56, !dbg !6767

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6768
  %54 = load i24, i24* %53, align 4, !dbg !6769
  %55 = and i24 %54, -30721, !dbg !6769
  store i24 %55, i24* %53, align 4, !dbg !6769
  br label %56, !dbg !6770

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6722, metadata !DIExpression()), !dbg !6723
  ret i8* %57, !dbg !6771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6772 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6774, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8* %1, metadata !6775, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8 0, metadata !6776, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8* %1, metadata !6775, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6779
  %3 = load i8, i8* %1, align 1, !dbg !6780
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6781
  store i8 %3, i8* %4, align 1, !dbg !6782
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6783

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6784

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6785
  %9 = load i24, i24* %8, align 4, !dbg !6785
  %10 = and i24 %9, -458753, !dbg !6785
  %11 = or i24 %10, %7, !dbg !6785
  call void @llvm.dbg.label(metadata !6777), !dbg !6786
  %12 = and i24 %9, 30720, !dbg !6787
  %13 = icmp eq i24 %12, 16384, !dbg !6787
  %14 = zext i1 %13 to i24, !dbg !6789
  %15 = or i24 %11, %14, !dbg !6789
  %16 = icmp eq i8 %3, 99, !dbg !6790
  br i1 %16, label %17, label %43, !dbg !6792

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6793
  %19 = icmp ne i24 %18, 0, !dbg !6793
  call void @llvm.dbg.value(metadata i1 %19, metadata !6776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6779
  br label %43, !dbg !6795

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6796
  %22 = load i24, i24* %21, align 4, !dbg !6797
  %23 = and i24 %22, -458753, !dbg !6797
  %24 = or i24 %23, 262144, !dbg !6797
  call void @llvm.dbg.value(metadata i8 1, metadata !6776, metadata !DIExpression()), !dbg !6779
  br label %43, !dbg !6798

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6801
  %27 = load i24, i24* %26, align 4, !dbg !6802
  %28 = and i24 %27, -458753, !dbg !6802
  %29 = or i24 %28, 196608, !dbg !6802
  %30 = and i24 %27, 30720, !dbg !6803
  %31 = icmp eq i24 %30, 16384, !dbg !6803
  br label %43, !dbg !6805

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6806
  %34 = load i24, i24* %33, align 4, !dbg !6807
  %35 = and i24 %34, -458753, !dbg !6807
  %36 = or i24 %35, 196608, !dbg !6807
  %37 = and i24 %34, 30720, !dbg !6808
  %38 = icmp ne i24 %37, 0, !dbg !6808
  br label %43, !dbg !6810

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6811
  %41 = load i24, i24* %40, align 4, !dbg !6812
  %42 = or i24 %41, 1, !dbg !6812
  br label %43, !dbg !6813

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6814
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6815
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6816
  call void @llvm.dbg.value(metadata i8* %48, metadata !6775, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8 poison, metadata !6776, metadata !DIExpression()), !dbg !6779
  %49 = lshr i24 %44, 1, !dbg !6814
  %50 = and i24 %49, 1, !dbg !6814
  %51 = zext i24 %50 to i32, !dbg !6814
  %52 = or i32 %51, %47, !dbg !6814
  %53 = trunc i32 %52 to i24, !dbg !6814
  %54 = shl nuw nsw i24 %53, 1, !dbg !6814
  %55 = and i24 %44, -3, !dbg !6814
  %56 = or i24 %54, %55, !dbg !6814
  store i24 %56, i24* %46, align 4, !dbg !6814
  ret i8* %48, !dbg !6817
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6818 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6822, metadata !DIExpression()), !dbg !6825
  %2 = load i8*, i8** %0, align 4, !dbg !6826
  call void @llvm.dbg.value(metadata i8* %2, metadata !6823, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata i32 0, metadata !6824, metadata !DIExpression()), !dbg !6825
  %3 = load i8, i8* %2, align 1, !dbg !6827
  %4 = zext i8 %3 to i32, !dbg !6828
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !6829
  %6 = icmp eq i32 %5, 0, !dbg !6830
  br i1 %6, label %19, label %7, !dbg !6830

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6824, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata i8* %10, metadata !6823, metadata !DIExpression()), !dbg !6825
  %11 = mul i32 %9, 10, !dbg !6831
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6833
  call void @llvm.dbg.value(metadata i8* %12, metadata !6823, metadata !DIExpression()), !dbg !6825
  %13 = add i32 %11, -48, !dbg !6834
  %14 = add i32 %13, %8, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %14, metadata !6824, metadata !DIExpression()), !dbg !6825
  %15 = load i8, i8* %12, align 1, !dbg !6827
  %16 = zext i8 %15 to i32, !dbg !6828
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !6829
  %18 = icmp eq i32 %17, 0, !dbg !6830
  br i1 %18, label %19, label %7, !dbg !6830, !llvm.loop !6836

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6825
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6825
  store i8* %20, i8** %0, align 4, !dbg !6838
  ret i32 %21, !dbg !6839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6842, metadata !DIExpression()), !dbg !6843
  %2 = add i32 %0, -48, !dbg !6844
  %3 = icmp ult i32 %2, 10, !dbg !6845
  %4 = zext i1 %3 to i32, !dbg !6845
  ret i32 %4, !dbg !6846
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6852, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i32 %1, metadata !6853, metadata !DIExpression()), !dbg !6854
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !6855, !srcloc !6857
  ret void, !dbg !6858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6859 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6861, metadata !DIExpression()), !dbg !6869
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6870
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6870
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6862, metadata !DIExpression()), !dbg !6871
  call void @llvm.va_start(i8* nonnull %3), !dbg !6872
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6873
  %5 = load i32, i32* %4, align 4, !dbg !6873
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6873
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6873
  call void @llvm.va_end(i8* nonnull %3), !dbg !6874
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6875
  ret void, !dbg !6875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6876 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #23, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #23, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #23, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #23, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #23, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #23, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #23, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #23, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #23, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #23, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #23, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #23, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #23, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #23, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #23, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #23, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #23, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #23, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #23, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !7106, !srcloc !7107
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !7108, !srcloc !7109
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !7110, !srcloc !7111
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !7112, !srcloc !7113
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !7114, !srcloc !7115
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !7116, !srcloc !7117
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !7118, !srcloc !7119
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !7120, !srcloc !7121
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !7122, !srcloc !7123
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !7124, !srcloc !7125
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !7126, !srcloc !7127
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7128, !srcloc !7129
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !7130, !srcloc !7131
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !7132, !srcloc !7133
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !7134, !srcloc !7135
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !7136, !srcloc !7137
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !7138, !srcloc !7139
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7140, !srcloc !7141
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !7144, !srcloc !7145
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !7146, !srcloc !7147
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !7148, !srcloc !7149
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !7150, !srcloc !7151
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !7152, !srcloc !7153
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !7154, !srcloc !7155
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !7156, !srcloc !7157
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !7158, !srcloc !7159
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !7160, !srcloc !7161
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !7162, !srcloc !7163
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !7164, !srcloc !7165
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !7166, !srcloc !7167
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !7168, !srcloc !7169
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !7170, !srcloc !7171
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !7172, !srcloc !7173
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !7174, !srcloc !7175
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !7176, !srcloc !7177
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !7178, !srcloc !7179
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !7180, !srcloc !7181
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !7182, !srcloc !7183
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !7184, !srcloc !7185
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !7186, !srcloc !7187
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !7188, !srcloc !7189
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !7190, !srcloc !7191
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !7192, !srcloc !7193
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !7194, !srcloc !7195
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !7196, !srcloc !7197
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !7198, !srcloc !7199
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !7200, !srcloc !7201
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !7202, !srcloc !7203
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !7204, !srcloc !7205
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !7206, !srcloc !7207
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !7208, !srcloc !7209
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !7210, !srcloc !7211
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !7212, !srcloc !7213
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !7214, !srcloc !7215
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !7216, !srcloc !7217
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7218, !srcloc !7219
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !7220, !srcloc !7221
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !7222, !srcloc !7223
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !7224, !srcloc !7225
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !7226, !srcloc !7227
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !7228, !srcloc !7229
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !7230, !srcloc !7231
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !7232, !srcloc !7233
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !7234, !srcloc !7235
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !7236, !srcloc !7237
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !7238, !srcloc !7239
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !7240, !srcloc !7241
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !7242, !srcloc !7243
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !7244, !srcloc !7245
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !7246, !srcloc !7247
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #23, !dbg !7248, !srcloc !7249
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !7250, !srcloc !7251
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7252, !srcloc !7253
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !7254, !srcloc !7255
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !7256, !srcloc !7257
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !7258, !srcloc !7259
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !7260, !srcloc !7261
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !7262, !srcloc !7263
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !7264, !srcloc !7265
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !7266, !srcloc !7267
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #23, !dbg !7268, !srcloc !7269
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !7270, !srcloc !7271
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !7272, !srcloc !7273
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7274, !srcloc !7275
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !7276, !srcloc !7277
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7278, !srcloc !7279
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !7280, !srcloc !7281
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7282, !srcloc !7283
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !7284, !srcloc !7285
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !7286, !srcloc !7287
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !7288, !srcloc !7289
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !7290, !srcloc !7291
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !7292, !srcloc !7293
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !7294, !srcloc !7295
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !7296, !srcloc !7297
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !7298, !srcloc !7299
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !7300, !srcloc !7301
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !7302, !srcloc !7303
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !7304, !srcloc !7305
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !7306, !srcloc !7307
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !7308, !srcloc !7309
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !7310, !srcloc !7311
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !7312, !srcloc !7313
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !7314, !srcloc !7315
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !7316, !srcloc !7317
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !7318, !srcloc !7319
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !7320, !srcloc !7321
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !7322, !srcloc !7323
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !7324, !srcloc !7325
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !7326, !srcloc !7327
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !7328, !srcloc !7329
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !7330, !srcloc !7331
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !7332, !srcloc !7333
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !7334, !srcloc !7335
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !7336, !srcloc !7337
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !7338, !srcloc !7339
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !7340, !srcloc !7341
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !7342, !srcloc !7343
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !7344, !srcloc !7345
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !7346, !srcloc !7347
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !7348, !srcloc !7349
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !7350, !srcloc !7351
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !7352, !srcloc !7353
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !7354, !srcloc !7355
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !7356, !srcloc !7357
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #23, !dbg !7358, !srcloc !7359
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #23, !dbg !7360, !srcloc !7361
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #23, !dbg !7362, !srcloc !7363
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #23, !dbg !7364, !srcloc !7365
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #23, !dbg !7366, !srcloc !7367
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !7368, !srcloc !7369
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7370, !srcloc !7371
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !7372, !srcloc !7373
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7374, !srcloc !7375
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7376, !srcloc !7377
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !7378, !srcloc !7379
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !7380, !srcloc !7381
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !7382, !srcloc !7383
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !7384, !srcloc !7385
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !7386, !srcloc !7387
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !7388, !srcloc !7389
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !7390, !srcloc !7391
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !7392, !srcloc !7393
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !7394, !srcloc !7395
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !7396, !srcloc !7397
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !7398, !srcloc !7399
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !7400, !srcloc !7401
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !7402, !srcloc !7403
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !7404, !srcloc !7405
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !7406, !srcloc !7407
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !7408, !srcloc !7409
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !7410, !srcloc !7411
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !7412, !srcloc !7413
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !7414, !srcloc !7415
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !7416, !srcloc !7417
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !7418, !srcloc !7419
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !7420, !srcloc !7421
  ret void, !dbg !7422
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7425, metadata !DIExpression()), !dbg !7426
  tail call void @SOC_RdcInit() #25, !dbg !7427
  tail call void @SOC_ClockInit() #25, !dbg !7428
  tail call fastcc void @nxp_mcimx7_gpio_config() #25, !dbg !7429
  ret i32 0, !dbg !7430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #16 !dbg !7431 {
  tail call fastcc void @RDC_SetDomainID() #25, !dbg !7432
  ret void, !dbg !7433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !7434 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #24, !dbg !7435
  tail call fastcc void @CCM_EnableRoot() #25, !dbg !7436
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #25, !dbg !7437
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #25, !dbg !7438
  tail call fastcc void @WDOG_DisablePowerdown() #25, !dbg !7439
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #25, !dbg !7440
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #25, !dbg !7441
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #25, !dbg !7442
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #25, !dbg !7443
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #25, !dbg !7444
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #25, !dbg !7445
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #25, !dbg !7446
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #25, !dbg !7447
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #25, !dbg !7448
  ret void, !dbg !7449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #16 !dbg !7450 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #25, !dbg !7451
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #25, !dbg !7452
  ret void, !dbg !7453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7454 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7459, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i32 %0, metadata !7460, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i8 %1, metadata !7461, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i8 0, metadata !7462, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i8 0, metadata !7463, metadata !DIExpression()), !dbg !7464
  %3 = zext i8 %1 to i32, !dbg !7465
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !7466
  store volatile i32 %3, i32* %4, align 4, !dbg !7467
  ret void, !dbg !7468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7469 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7473, metadata !DIExpression()), !dbg !7476
  call void @llvm.dbg.value(metadata i32 %0, metadata !7474, metadata !DIExpression()), !dbg !7476
  call void @llvm.dbg.value(metadata i32 %1, metadata !7475, metadata !DIExpression()), !dbg !7476
  %3 = inttoptr i32 %0 to i32*, !dbg !7477
  store volatile i32 %1, i32* %3, align 4, !dbg !7478
  ret void, !dbg !7479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #16 !dbg !7480 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7484, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 809024384, metadata !7485, metadata !DIExpression()), !dbg !7486
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #16 !dbg !7489 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !7494, metadata !DIExpression()), !dbg !7495
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7496
  %2 = and i16 %1, -2, !dbg !7496
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7496
  ret void, !dbg !7497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #16 !dbg !7498 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7502, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 1, metadata !7503, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 1, metadata !7504, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8 0, metadata !7505, metadata !DIExpression()), !dbg !7506
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !7507
  ret void, !dbg !7508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7509 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7512, metadata !DIExpression()), !dbg !7520
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7521
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7521
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7513, metadata !DIExpression()), !dbg !7522
  call void @llvm.va_start(i8* nonnull %3), !dbg !7523
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7524
  %5 = load i32, i32* %4, align 4, !dbg !7524
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7524
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !7524
  call void @llvm.va_end(i8* nonnull %3), !dbg !7525
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7526
  ret void, !dbg !7526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7527 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7532, metadata !DIExpression()), !dbg !7533
  call void @llvm.dbg.value(metadata i8* %0, metadata !7531, metadata !DIExpression()), !dbg !7533
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !7534
  ret void, !dbg !7535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7540, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %1, metadata !7541, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %2, metadata !7542, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %1, metadata !7543, metadata !DIExpression()), !dbg !7544
  %4 = icmp eq i32 %2, 0, !dbg !7545
  br i1 %4, label %14, label %5, !dbg !7546

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !7544
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7546

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7543, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %10, metadata !7542, metadata !DIExpression()), !dbg !7544
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i32 noundef %7) #24, !dbg !7547
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !7549
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7550
  call void @llvm.dbg.value(metadata i32 %11, metadata !7542, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %12, metadata !7543, metadata !DIExpression()), !dbg !7544
  br i1 %13, label %14, label %8, !dbg !7550, !llvm.loop !7551

14:                                               ; preds = %8, %3
  ret void, !dbg !7553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !7554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7559, metadata !DIExpression()), !dbg !7560
  %2 = add i32 %0, -1, !dbg !7561
  %3 = icmp ult i32 %2, 4, !dbg !7561
  %4 = shl i32 %2, 3, !dbg !7561
  %5 = lshr i32 1145657157, %4, !dbg !7561
  %6 = trunc i32 %5 to i8, !dbg !7561
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7561
  ret i8 %7, !dbg !7562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7567, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.value(metadata i32 %1, metadata !7568, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.value(metadata i32 0, metadata !7569, metadata !DIExpression()), !dbg !7579
  br label %4, !dbg !7580

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.55, i32 0, i32 0)) #24, !dbg !7581
  call void @llvm.dbg.value(metadata i32 0, metadata !7571, metadata !DIExpression()), !dbg !7582
  br label %16, !dbg !7583

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7569, metadata !DIExpression()), !dbg !7579
  %6 = icmp ult i32 %5, %1, !dbg !7584
  br i1 %6, label %7, label %11, !dbg !7588

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7589
  %9 = load i8, i8* %8, align 1, !dbg !7589
  %10 = zext i8 %9 to i32, !dbg !7591
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef %10) #24, !dbg !7592
  br label %12, !dbg !7593

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.57, i32 0, i32 0)) #24, !dbg !7594
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7596
  call void @llvm.dbg.value(metadata i32 %13, metadata !7569, metadata !DIExpression()), !dbg !7579
  %14 = icmp eq i32 %13, 8, !dbg !7597
  br i1 %14, label %3, label %4, !dbg !7580, !llvm.loop !7598

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.58, i32 0, i32 0)) #24, !dbg !7600
  ret void, !dbg !7601

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7571, metadata !DIExpression()), !dbg !7582
  %18 = icmp ult i32 %17, %1, !dbg !7602
  br i1 %18, label %19, label %26, !dbg !7603

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7604
  %21 = load i8, i8* %20, align 1, !dbg !7604
  call void @llvm.dbg.value(metadata i8 %21, metadata !7573, metadata !DIExpression()), !dbg !7605
  %22 = zext i8 %21 to i32, !dbg !7606
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !7607
  %24 = icmp eq i32 %23, 0, !dbg !7608
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7607
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.59, i32 0, i32 0), i32 noundef %25) #24, !dbg !7609
  br label %27, !dbg !7610

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.60, i32 0, i32 0)) #24, !dbg !7611
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %28, metadata !7571, metadata !DIExpression()), !dbg !7582
  %29 = icmp eq i32 %28, 8, !dbg !7614
  br i1 %29, label %15, label %16, !dbg !7583, !llvm.loop !7615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7619, metadata !DIExpression()), !dbg !7620
  %2 = add i32 %0, -32, !dbg !7621
  %3 = icmp ult i32 %2, 95, !dbg !7621
  %4 = zext i1 %3 to i32, !dbg !7621
  ret i32 %4, !dbg !7622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7673, metadata !DIExpression()), !dbg !7674
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7675
  br i1 %3, label %5, label %4, !dbg !7677

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !7678
  br label %5, !dbg !7680

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !7681
  ret void, !dbg !7682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7683 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7687, metadata !DIExpression()), !dbg !7688
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7689
  %3 = load i32, i32* %2, align 4, !dbg !7689
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7689
  %5 = load i32, i32* %4, align 4, !dbg !7689
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7689
  %7 = load i32, i32* %6, align 4, !dbg !7689
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.61, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !7689
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7694
  %9 = load i32, i32* %8, align 4, !dbg !7694
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7694
  %11 = load i32, i32* %10, align 4, !dbg !7694
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7694
  %13 = load i32, i32* %12, align 4, !dbg !7694
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.62, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !7694
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7699
  %15 = load i32, i32* %14, align 4, !dbg !7699
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.63, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !7699
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7704
  %17 = load i32, i32* %16, align 4, !dbg !7704
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.64, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7704
  ret void, !dbg !7709
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7710 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7727, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7728, metadata !DIExpression()), !dbg !7730
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7731
  %4 = load i32, i32* %3, align 4, !dbg !7731
  call void @llvm.dbg.value(metadata i32 %4, metadata !7729, metadata !DIExpression()), !dbg !7730
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !7732
  ret void, !dbg !7733
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !7734 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i8* %0, metadata !7739, metadata !DIExpression()), !dbg !7741
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7742
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7742
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7740, metadata !DIExpression()), !dbg !7743
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7743
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7744
  %5 = bitcast i8* %4 to i32*, !dbg !7744
  %6 = load i32, i32* %5, align 4, !dbg !7744
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7745
  store i32 %6, i32* %7, align 4, !dbg !7746
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !7747
  unreachable, !dbg !7748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7754, metadata !DIExpression()), !dbg !7755
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !7756
  ret void, !dbg !7757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7762, metadata !DIExpression()), !dbg !7763
  %2 = icmp sgt i32 %0, -1, !dbg !7764
  br i1 %2, label %3, label %8, !dbg !7766

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7767, !srcloc !7769
  %4 = and i32 %0, 31, !dbg !7770
  %5 = shl nuw i32 1, %4, !dbg !7771
  %6 = lshr i32 %0, 5, !dbg !7772
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7773
  store volatile i32 %5, i32* %7, align 4, !dbg !7774
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7775, !srcloc !7776
  br label %8, !dbg !7777

8:                                                ; preds = %3, %1
  ret void, !dbg !7778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7781, metadata !DIExpression()), !dbg !7782
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !7783
  ret void, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7787, metadata !DIExpression()), !dbg !7788
  %2 = icmp sgt i32 %0, -1, !dbg !7789
  br i1 %2, label %3, label %8, !dbg !7791

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7792
  %5 = shl nuw i32 1, %4, !dbg !7794
  %6 = lshr i32 %0, 5, !dbg !7795
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7796
  store volatile i32 %5, i32* %7, align 4, !dbg !7797
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7798, !srcloc !7802
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7803, !srcloc !7806
  br label %8, !dbg !7807

8:                                                ; preds = %3, %1
  ret void, !dbg !7808
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7813, metadata !DIExpression()), !dbg !7814
  %2 = lshr i32 %0, 5, !dbg !7815
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7816
  %4 = load volatile i32, i32* %3, align 4, !dbg !7816
  %5 = and i32 %0, 31, !dbg !7817
  %6 = shl nuw i32 1, %5, !dbg !7817
  %7 = and i32 %4, %6, !dbg !7818
  ret i32 %7, !dbg !7819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7824, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %1, metadata !7825, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %2, metadata !7826, metadata !DIExpression()), !dbg !7827
  %4 = add i32 %1, 1, !dbg !7828
  call void @llvm.dbg.value(metadata i32 %4, metadata !7825, metadata !DIExpression()), !dbg !7827
  %5 = icmp ult i32 %4, 16, !dbg !7831
  br i1 %5, label %7, label %6, !dbg !7834

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 94) #24, !dbg !7835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.68, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !7835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 94) #24, !dbg !7835
  unreachable, !dbg !7835

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7843, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %1, metadata !7844, metadata !DIExpression()), !dbg !7845
  %3 = trunc i32 %1 to i8, !dbg !7846
  %4 = shl i8 %3, 4, !dbg !7846
  %5 = and i32 %0, 15, !dbg !7848
  %6 = add nsw i32 %5, -4, !dbg !7848
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7848
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7848
  %9 = icmp slt i32 %0, 0, !dbg !7848
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7848
  store volatile i8 %4, i8* %10, align 1, !dbg !7846
  ret void, !dbg !7849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7850 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7852, metadata !DIExpression()), !dbg !7853
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !7854
  ret void, !dbg !7855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7856 {
  tail call void @z_SysNmiOnReset() #24, !dbg !7858
  tail call void @z_arm_int_exit() #24, !dbg !7859
  ret void, !dbg !7860
}

; Function Attrs: optsize
declare !dbg !7861 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7862 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #4 !dbg !7864 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !7866
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !7867
  tail call void @z_bss_zero() #24, !dbg !7868
  tail call void @z_data_copy() #24, !dbg !7869
  tail call void @z_arm_interrupt_init() #24, !dbg !7870
  tail call void @z_cstart() #27, !dbg !7871
  unreachable, !dbg !7871
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7872 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7873
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7874, !srcloc !7877
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7878, !srcloc !7881
  ret void, !dbg !7882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7883 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7884
  %2 = and i32 %1, -15728641, !dbg !7884
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7884
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7885, !srcloc !7892
  call void @llvm.dbg.value(metadata i32 %3, metadata !7890, metadata !DIExpression()) #23, !dbg !7893
  %4 = and i32 %3, -5, !dbg !7894
  call void @llvm.dbg.value(metadata i32 %4, metadata !7895, metadata !DIExpression()) #23, !dbg !7900
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7902, !srcloc !7903
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7904, !srcloc !7881
  ret void, !dbg !7906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7910, metadata !DIExpression()), !dbg !7911
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7912
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7913
  store i32 %0, i32* %3, align 8, !dbg !7914
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7915
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7916
  store i32 %4, i32* %5, align 4, !dbg !7917
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7918
  %7 = or i32 %6, 268435456, !dbg !7918
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7918
  call void @llvm.dbg.value(metadata i32 0, metadata !7919, metadata !DIExpression()) #23, !dbg !7923
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7925, !srcloc !7926
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7927
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7928
  %10 = load i32, i32* %9, align 4, !dbg !7928
  ret i32 %10, !dbg !7929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8037, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8038, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %2, metadata !8039, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8040, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %4, metadata !8041, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %5, metadata !8042, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %6, metadata !8043, metadata !DIExpression()), !dbg !8045
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8046
  call void @llvm.dbg.value(metadata i8* %8, metadata !8044, metadata !DIExpression()), !dbg !8045
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8047
  %10 = bitcast i8* %9 to i32*, !dbg !8047
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8048
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8049
  %12 = bitcast i8* %8 to i32*, !dbg !8050
  store i32 %11, i32* %12, align 4, !dbg !8051
  %13 = ptrtoint i8* %4 to i32, !dbg !8052
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8053
  %15 = bitcast i8* %14 to i32*, !dbg !8053
  store i32 %13, i32* %15, align 4, !dbg !8054
  %16 = ptrtoint i8* %5 to i32, !dbg !8055
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8056
  %18 = bitcast i8* %17 to i32*, !dbg !8056
  store i32 %16, i32* %18, align 4, !dbg !8057
  %19 = ptrtoint i8* %6 to i32, !dbg !8058
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8059
  %21 = bitcast i8* %20 to i32*, !dbg !8059
  store i32 %19, i32* %21, align 4, !dbg !8060
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8061
  %23 = bitcast i8* %22 to i32*, !dbg !8061
  store i32 16777216, i32* %23, align 4, !dbg !8062
  %24 = ptrtoint i8* %8 to i32, !dbg !8063
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8064
  store i32 %24, i32* %25, align 8, !dbg !8065
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8066
  store i32 0, i32* %26, align 8, !dbg !8067
  ret void, !dbg !8068
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #4 !dbg !8069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8073, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata i8* %1, metadata !8074, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8075, metadata !DIExpression()), !dbg !8076
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8077
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !8078, !srcloc !8079
  unreachable, !dbg !8080
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8081 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8099, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i32 %1, metadata !8100, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i32 %2, metadata !8101, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8102, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i32 0, metadata !8103, metadata !DIExpression()), !dbg !8109
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %8, metadata !8104, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8109
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !8111
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8111
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8112
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !8112
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8108, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 0, metadata !8114, metadata !DIExpression()) #23, !dbg !8117
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !8119, !srcloc !8120
  call void @llvm.dbg.value(metadata i8* %6, metadata !8106, metadata !DIExpression(DW_OP_deref)), !dbg !8109
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !8121
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8107, metadata !DIExpression()), !dbg !8109
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8122
  br i1 %11, label %12, label %13, !dbg !8125

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.72, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 1057) #24, !dbg !8126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.74, i32 0, i32 0)) #24, !dbg !8126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 1057) #24, !dbg !8126
  unreachable, !dbg !8126

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8128
  call void @llvm.dbg.value(metadata i32 %14, metadata !8104, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i8* %5, metadata !8105, metadata !DIExpression(DW_OP_deref)), !dbg !8109
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !8129
  call void @llvm.dbg.value(metadata i32 %15, metadata !8103, metadata !DIExpression()), !dbg !8109
  %16 = load i8, i8* %5, align 1, !dbg !8130, !range !8132
  call void @llvm.dbg.value(metadata i8 %16, metadata !8105, metadata !DIExpression()), !dbg !8109
  %17 = icmp eq i8 %16, 0, !dbg !8130
  br i1 %17, label %18, label %35, !dbg !8133

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8134
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !8135
  %21 = load i8, i8* %6, align 1, !dbg !8136, !range !8132
  call void @llvm.dbg.value(metadata i8 %21, metadata !8106, metadata !DIExpression()), !dbg !8109
  %22 = icmp eq i8 %21, 0, !dbg !8136
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8138
  %24 = load i32, i32* %23, align 4, !dbg !8138
  br i1 %22, label %30, label %25, !dbg !8139

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8140
  %27 = icmp eq i32 %26, 0, !dbg !8143
  br i1 %27, label %28, label %34, !dbg !8144

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8145
  br label %32, !dbg !8147

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8148
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8138
  br label %34, !dbg !8150

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !8150
  br label %35, !dbg !8151

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !8151
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8151
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !8151
  ret void, !dbg !8151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8157, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %1, metadata !8158, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %2, metadata !8159, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i8* %3, metadata !8160, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i8 0, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8162, metadata !DIExpression()), !dbg !8163
  store i8 0, i8* %3, align 1, !dbg !8164
  %5 = icmp ugt i32 %2, -16777217, !dbg !8165
  br i1 %5, label %6, label %17, !dbg !8167

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8168
  %8 = icmp eq i32 %7, 8, !dbg !8168
  br i1 %8, label %9, label %10, !dbg !8168

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef 69) #24, !dbg !8170
  br label %17, !dbg !8176

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8177
  %12 = icmp eq i32 %11, 0, !dbg !8177
  br i1 %12, label %13, label %14, !dbg !8178

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8162, metadata !DIExpression()), !dbg !8163
  store i8 1, i8* %3, align 1, !dbg !8181
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8163
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8162, metadata !DIExpression()), !dbg !8163
  br label %17, !dbg !8184

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8163
  ret %struct.__esf* %18, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8186 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8190, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 %1, metadata !8191, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i8* %2, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 0, metadata !8193, metadata !DIExpression()), !dbg !8194
  store i8 0, i8* %2, align 1, !dbg !8195
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !8196

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !8197
  call void @llvm.dbg.value(metadata i32 %5, metadata !8193, metadata !DIExpression()), !dbg !8194
  br label %11, !dbg !8199

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !8200
  call void @llvm.dbg.value(metadata i32 0, metadata !8193, metadata !DIExpression()), !dbg !8194
  br label %11, !dbg !8201

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !8202
  call void @llvm.dbg.value(metadata i32 0, metadata !8193, metadata !DIExpression()), !dbg !8194
  br label %11, !dbg !8203

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !8204
  call void @llvm.dbg.value(metadata i32 0, metadata !8193, metadata !DIExpression()), !dbg !8194
  br label %11, !dbg !8205

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !8206
  br label %11, !dbg !8207

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !8208
  br label %11, !dbg !8209

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !8194
  call void @llvm.dbg.value(metadata i32 %12, metadata !8193, metadata !DIExpression()), !dbg !8194
  ret i32 %12, !dbg !8210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8211 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8215, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata i8* %1, metadata !8216, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata i32 0, metadata !8217, metadata !DIExpression()), !dbg !8218
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.79, i32 0, i32 0), i32 noundef 69) #24, !dbg !8219
  store i8 0, i8* %1, align 1, !dbg !8224
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8225
  %4 = and i32 %3, 2, !dbg !8227
  %5 = icmp eq i32 %4, 0, !dbg !8228
  br i1 %5, label %7, label %6, !dbg !8229

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.80, i32 0, i32 0), i32 noundef 69) #24, !dbg !8230
  br label %37, !dbg !8236

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8237
  %9 = icmp sgt i32 %8, -1, !dbg !8239
  br i1 %9, label %11, label %10, !dbg !8240

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.81, i32 0, i32 0), i32 noundef 69) #24, !dbg !8241
  br label %37, !dbg !8247

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8248
  %13 = and i32 %12, 1073741824, !dbg !8250
  %14 = icmp eq i32 %13, 0, !dbg !8251
  br i1 %14, label %36, label %15, !dbg !8252

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.82, i32 0, i32 0), i32 noundef 69) #24, !dbg !8253
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !8259
  br i1 %16, label %17, label %21, !dbg !8261

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8262
  %19 = load i32, i32* %18, align 4, !dbg !8262
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.83, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !8262
  %20 = load i32, i32* %18, align 4, !dbg !8268
  call void @llvm.dbg.value(metadata i32 %20, metadata !8217, metadata !DIExpression()), !dbg !8218
  br label %37, !dbg !8269

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8270
  %23 = and i32 %22, 255, !dbg !8272
  %24 = icmp eq i32 %23, 0, !dbg !8273
  br i1 %24, label %26, label %25, !dbg !8274

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8275
  call void @llvm.dbg.value(metadata i32 0, metadata !8217, metadata !DIExpression()), !dbg !8218
  br label %37, !dbg !8277

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8278
  %28 = and i32 %27, 65280, !dbg !8280
  %29 = icmp eq i32 %28, 0, !dbg !8281
  br i1 %29, label %31, label %30, !dbg !8282

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8283
  call void @llvm.dbg.value(metadata i32 0, metadata !8217, metadata !DIExpression()), !dbg !8218
  br label %37, !dbg !8285

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8286
  %33 = icmp ult i32 %32, 65536, !dbg !8288
  br i1 %33, label %35, label %34, !dbg !8289

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #25, !dbg !8290
  call void @llvm.dbg.value(metadata i32 0, metadata !8217, metadata !DIExpression()), !dbg !8218
  br label %37

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.84, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 755) #24, !dbg !8292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.85, i32 0, i32 0)) #24, !dbg !8292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 755) #24, !dbg !8292
  unreachable, !dbg !8292

36:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.84, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 760) #24, !dbg !8297
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.86, i32 0, i32 0)) #24, !dbg !8297
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 760) #24, !dbg !8297
  unreachable, !dbg !8297

37:                                               ; preds = %10, %17, %30, %34, %25, %6
  %38 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], !dbg !8218
  call void @llvm.dbg.value(metadata i32 %38, metadata !8217, metadata !DIExpression()), !dbg !8218
  ret i32 %38, !dbg !8302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8303 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8305, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 %0, metadata !8306, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i8* %1, metadata !8307, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 0, metadata !8308, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 -22, metadata !8309, metadata !DIExpression()), !dbg !8313
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.76, i32 0, i32 0), i32 noundef 69) #24, !dbg !8314
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8319
  %4 = and i32 %3, 16, !dbg !8321
  %5 = icmp eq i32 %4, 0, !dbg !8322
  br i1 %5, label %7, label %6, !dbg !8323

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.77, i32 0, i32 0), i32 noundef 69) #24, !dbg !8324
  br label %7, !dbg !8330

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8331
  %9 = and i32 %8, 8, !dbg !8333
  %10 = icmp eq i32 %9, 0, !dbg !8334
  br i1 %10, label %12, label %11, !dbg !8335

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !8336
  br label %12, !dbg !8342

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8343
  %14 = and i32 %13, 2, !dbg !8344
  %15 = icmp eq i32 %14, 0, !dbg !8345
  br i1 %15, label %26, label %16, !dbg !8346

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.78, i32 0, i32 0), i32 noundef 69) #24, !dbg !8347
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %17, metadata !8310, metadata !DIExpression()), !dbg !8353
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8354
  %19 = and i32 %18, 128, !dbg !8356
  %20 = icmp eq i32 %19, 0, !dbg !8357
  br i1 %20, label %26, label %21, !dbg !8358

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !8309, metadata !DIExpression()), !dbg !8313
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8359
  %22 = icmp eq i32 %0, 0, !dbg !8365
  br i1 %22, label %26, label %23, !dbg !8367

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8368
  %25 = and i32 %24, -129, !dbg !8368
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8368
  br label %26, !dbg !8370

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !8309, metadata !DIExpression()), !dbg !8313
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8371
  %28 = and i32 %27, 1, !dbg !8373
  %29 = icmp eq i32 %28, 0, !dbg !8374
  br i1 %29, label %31, label %30, !dbg !8375

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !8376
  br label %31, !dbg !8382

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8383
  %33 = and i32 %32, 32, !dbg !8385
  %34 = icmp eq i32 %33, 0, !dbg !8386
  br i1 %34, label %36, label %35, !dbg !8387

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !8388
  br label %36, !dbg !8394

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8395
  %38 = and i32 %37, 16, !dbg !8397
  %39 = icmp eq i32 %38, 0, !dbg !8397
  br i1 %39, label %40, label %44, !dbg !8398

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8399
  %42 = and i32 %41, 2, !dbg !8400
  %43 = icmp eq i32 %42, 0, !dbg !8400
  br i1 %43, label %49, label %44, !dbg !8401

44:                                               ; preds = %40, %36
  %45 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8402
  %46 = and i32 %45, 16, !dbg !8402
  %47 = icmp eq i32 %46, 0, !dbg !8402
  br i1 %47, label %49, label %48, !dbg !8406

48:                                               ; preds = %44
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 350) #24, !dbg !8407
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !8407
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 350) #24, !dbg !8407
  unreachable, !dbg !8407

49:                                               ; preds = %44, %40
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8409
  %51 = and i32 %50, 32, !dbg !8411
  %52 = icmp eq i32 %51, 0, !dbg !8412
  br i1 %52, label %56, label %53, !dbg !8413

53:                                               ; preds = %49
  %54 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8414
  %55 = and i32 %54, -8193, !dbg !8414
  store volatile i32 %55, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8414
  br label %56, !dbg !8416

56:                                               ; preds = %53, %49
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8417
  %58 = or i32 %57, 255, !dbg !8417
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8417
  store i8 0, i8* %1, align 1, !dbg !8418
  ret void, !dbg !8419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8420 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8424, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 %0, metadata !8425, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i8* %1, metadata !8426, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 0, metadata !8427, metadata !DIExpression()), !dbg !8431
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #24, !dbg !8432
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8437
  %4 = and i32 %3, 4096, !dbg !8439
  %5 = icmp eq i32 %4, 0, !dbg !8439
  br i1 %5, label %7, label %6, !dbg !8440

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !8441
  br label %7, !dbg !8447

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8448
  %9 = and i32 %8, 2048, !dbg !8450
  %10 = icmp eq i32 %9, 0, !dbg !8450
  br i1 %10, label %12, label %11, !dbg !8451

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !8452
  br label %12, !dbg !8458

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8459
  %14 = and i32 %13, 512, !dbg !8460
  %15 = icmp eq i32 %14, 0, !dbg !8460
  br i1 %15, label %26, label %16, !dbg !8461

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !8462
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8467
  call void @llvm.dbg.value(metadata i32 %17, metadata !8428, metadata !DIExpression()), !dbg !8468
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8469
  %19 = and i32 %18, 32768, !dbg !8471
  %20 = icmp eq i32 %19, 0, !dbg !8472
  br i1 %20, label %26, label %21, !dbg !8473

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8474
  %22 = icmp eq i32 %0, 0, !dbg !8480
  br i1 %22, label %26, label %23, !dbg !8482

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8483
  %25 = and i32 %24, -32769, !dbg !8483
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8483
  br label %26, !dbg !8485

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8486
  %28 = and i32 %27, 1024, !dbg !8488
  %29 = icmp eq i32 %28, 0, !dbg !8488
  br i1 %29, label %31, label %30, !dbg !8489

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !8490
  br label %31, !dbg !8496

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8497
  %33 = and i32 %32, 256, !dbg !8499
  %34 = icmp eq i32 %33, 0, !dbg !8500
  br i1 %34, label %35, label %39, !dbg !8501

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8502
  %37 = and i32 %36, 8192, !dbg !8504
  %38 = icmp eq i32 %37, 0, !dbg !8504
  br i1 %38, label %41, label %39, !dbg !8505

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !8506
  br label %41, !dbg !8507

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8507
  %43 = or i32 %42, 65280, !dbg !8507
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8507
  store i8 0, i8* %1, align 1, !dbg !8508
  ret void, !dbg !8509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8510 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8516, metadata !DIExpression()), !dbg !8518
  call void @llvm.dbg.value(metadata i32 0, metadata !8517, metadata !DIExpression()), !dbg !8518
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !8519
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8524
  %2 = and i32 %1, 33554432, !dbg !8526
  %3 = icmp eq i32 %2, 0, !dbg !8527
  br i1 %3, label %5, label %4, !dbg !8528

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #24, !dbg !8529
  br label %5, !dbg !8535

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8536
  %7 = and i32 %6, 16777216, !dbg !8538
  %8 = icmp eq i32 %7, 0, !dbg !8539
  br i1 %8, label %10, label %9, !dbg !8540

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30.75, i32 0, i32 0), i32 noundef 69) #24, !dbg !8541
  br label %10, !dbg !8547

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8548
  %12 = and i32 %11, 524288, !dbg !8550
  %13 = icmp eq i32 %12, 0, !dbg !8551
  br i1 %13, label %15, label %14, !dbg !8552

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !8553
  br label %15, !dbg !8559

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8560
  %17 = and i32 %16, 262144, !dbg !8562
  %18 = icmp eq i32 %17, 0, !dbg !8563
  br i1 %18, label %20, label %19, !dbg !8564

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !8565
  br label %20, !dbg !8571

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8572
  %22 = and i32 %21, 131072, !dbg !8574
  %23 = icmp eq i32 %22, 0, !dbg !8575
  br i1 %23, label %25, label %24, !dbg !8576

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #24, !dbg !8577
  br label %25, !dbg !8583

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8584
  %27 = and i32 %26, 65536, !dbg !8586
  %28 = icmp eq i32 %27, 0, !dbg !8587
  br i1 %28, label %30, label %29, !dbg !8588

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !8589
  br label %30, !dbg !8595

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8596
  %32 = or i32 %31, -65536, !dbg !8596
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8596
  ret void, !dbg !8597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8598 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8602, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.value(metadata i8* %0, metadata !8603, metadata !DIExpression()), !dbg !8604
  store i8 0, i8* %0, align 1, !dbg !8605
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !8606
  ret void, !dbg !8611
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8612 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8616, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.value(metadata i32 %0, metadata !8617, metadata !DIExpression()), !dbg !8618
  %2 = icmp slt i32 %0, 16, !dbg !8619
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8619
  %4 = add nsw i32 %0, -16, !dbg !8619
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !8619
  ret void, !dbg !8624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8625 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8629, metadata !DIExpression()), !dbg !8632
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8633
  %3 = load i32, i32* %2, align 4, !dbg !8633
  %4 = inttoptr i32 %3 to i16*, !dbg !8634
  call void @llvm.dbg.value(metadata i16* %4, metadata !8630, metadata !DIExpression()), !dbg !8632
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8635
  %6 = or i32 %5, 256, !dbg !8635
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8635
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8636, !srcloc !8639
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8640, !srcloc !8643
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8644
  %8 = load i16, i16* %7, align 2, !dbg !8645
  call void @llvm.dbg.value(metadata i16 %8, metadata !8631, metadata !DIExpression()), !dbg !8632
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8646
  %10 = and i32 %9, -257, !dbg !8646
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8646
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8647, !srcloc !8639
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8649, !srcloc !8643
  %11 = icmp eq i16 %8, -8446, !dbg !8651
  ret i1 %11, !dbg !8653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8654 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8655
  %2 = or i32 %1, 16, !dbg !8655
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8655
  ret void, !dbg !8656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8657 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8660, metadata !DIExpression()), !dbg !8661
  br label %1, !dbg !8662

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8660, metadata !DIExpression()), !dbg !8661
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef %2) #25, !dbg !8664
  %3 = add nuw nsw i32 %2, 1, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %3, metadata !8660, metadata !DIExpression()), !dbg !8661
  %4 = icmp eq i32 %3, 127, !dbg !8668
  br i1 %4, label %5, label %1, !dbg !8662, !llvm.loop !8669

5:                                                ; preds = %1
  ret void, !dbg !8671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.90(i32 noundef %0) unnamed_addr #16 !dbg !8672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 1, metadata !8675, metadata !DIExpression()), !dbg !8676
  %2 = and i32 %0, 15, !dbg !8677
  %3 = add nsw i32 %2, -4, !dbg !8677
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8677
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8677
  %6 = icmp slt i32 %0, 0, !dbg !8677
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8677
  store volatile i8 16, i8* %7, align 1, !dbg !8678
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8784, metadata !DIExpression()), !dbg !8785
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8786
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8788
  br i1 %3, label %4, label %12, !dbg !8789

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8790, !srcloc !8802
  call void @llvm.dbg.value(metadata i32 %5, metadata !8793, metadata !DIExpression()) #23, !dbg !8803
  %6 = icmp eq i32 %5, 0, !dbg !8804
  br i1 %6, label %12, label %7, !dbg !8805

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8806
  %9 = or i32 %8, 268435456, !dbg !8806
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8806
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8808
  %11 = and i32 %10, -32769, !dbg !8808
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8808
  br label %12, !dbg !8809

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !8810
  ret void, !dbg !8811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8819, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i8* %1, metadata !8820, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i8* %0, metadata !8821, metadata !DIExpression()), !dbg !8822
  %3 = load i8, i8* %1, align 1, !dbg !8823
  %4 = icmp eq i8 %3, 0, !dbg !8824
  br i1 %4, label %13, label %5, !dbg !8825

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8819, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i8* %8, metadata !8820, metadata !DIExpression()), !dbg !8822
  store i8 %6, i8* %7, align 1, !dbg !8826
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8828
  call void @llvm.dbg.value(metadata i8* %9, metadata !8819, metadata !DIExpression()), !dbg !8822
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8829
  call void @llvm.dbg.value(metadata i8* %10, metadata !8820, metadata !DIExpression()), !dbg !8822
  %11 = load i8, i8* %10, align 1, !dbg !8823
  %12 = icmp eq i8 %11, 0, !dbg !8824
  br i1 %12, label %13, label %5, !dbg !8825, !llvm.loop !8830

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8832
  ret i8* %0, !dbg !8833
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8834 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8838, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i8* %1, metadata !8839, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i32 %2, metadata !8840, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i8* %0, metadata !8841, metadata !DIExpression()), !dbg !8842
  %4 = icmp eq i32 %2, 0, !dbg !8843
  br i1 %4, label %22, label %5, !dbg !8844

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8838, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i32 %7, metadata !8840, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i8* %8, metadata !8839, metadata !DIExpression()), !dbg !8842
  %9 = load i8, i8* %8, align 1, !dbg !8845
  %10 = icmp eq i8 %9, 0, !dbg !8846
  br i1 %10, label %16, label %11, !dbg !8847

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8848
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8850
  call void @llvm.dbg.value(metadata i8* %12, metadata !8839, metadata !DIExpression()), !dbg !8842
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8851
  call void @llvm.dbg.value(metadata i8* %13, metadata !8838, metadata !DIExpression()), !dbg !8842
  %14 = add i32 %7, -1, !dbg !8852
  call void @llvm.dbg.value(metadata i32 %14, metadata !8840, metadata !DIExpression()), !dbg !8842
  %15 = icmp eq i32 %14, 0, !dbg !8843
  br i1 %15, label %22, label %5, !dbg !8844, !llvm.loop !8853

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8838, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i32 %18, metadata !8840, metadata !DIExpression()), !dbg !8842
  store i8 0, i8* %17, align 1, !dbg !8855
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8857
  call void @llvm.dbg.value(metadata i8* %19, metadata !8838, metadata !DIExpression()), !dbg !8842
  %20 = add i32 %18, -1, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %20, metadata !8840, metadata !DIExpression()), !dbg !8842
  %21 = icmp eq i32 %20, 0, !dbg !8859
  br i1 %21, label %22, label %16, !dbg !8860, !llvm.loop !8861

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8863
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8864 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8868, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 %1, metadata !8870, metadata !DIExpression()), !dbg !8871
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8872

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8868, metadata !DIExpression()), !dbg !8871
  %6 = load i8, i8* %5, align 1, !dbg !8873
  %7 = icmp eq i8 %6, %3, !dbg !8874
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8875
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8876
  call void @llvm.dbg.value(metadata i8* %10, metadata !8868, metadata !DIExpression()), !dbg !8871
  br i1 %9, label %11, label %4, !dbg !8875, !llvm.loop !8878

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8880
  ret i8* %12, !dbg !8881
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8882 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8884, metadata !DIExpression()), !dbg !8887
  call void @llvm.dbg.value(metadata i32 %1, metadata !8885, metadata !DIExpression()), !dbg !8887
  call void @llvm.dbg.value(metadata i8* null, metadata !8886, metadata !DIExpression()), !dbg !8887
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8888

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8887
  call void @llvm.dbg.value(metadata i8* %6, metadata !8886, metadata !DIExpression()), !dbg !8887
  call void @llvm.dbg.value(metadata i8* %5, metadata !8884, metadata !DIExpression()), !dbg !8887
  %7 = load i8, i8* %5, align 1, !dbg !8889
  %8 = icmp eq i8 %7, %3, !dbg !8892
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8893
  call void @llvm.dbg.value(metadata i8* %9, metadata !8886, metadata !DIExpression()), !dbg !8887
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8894
  call void @llvm.dbg.value(metadata i8* %10, metadata !8884, metadata !DIExpression()), !dbg !8887
  %11 = icmp eq i8 %7, 0, !dbg !8895
  br i1 %11, label %12, label %4, !dbg !8895, !llvm.loop !8896

12:                                               ; preds = %4
  ret i8* %9, !dbg !8898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8903, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8905
  %2 = load i8, i8* %0, align 1, !dbg !8906
  %3 = icmp eq i8 %2, 0, !dbg !8907
  br i1 %3, label %11, label %4, !dbg !8908

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8904, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata i8* %6, metadata !8903, metadata !DIExpression()), !dbg !8905
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8909
  call void @llvm.dbg.value(metadata i8* %7, metadata !8903, metadata !DIExpression()), !dbg !8905
  %8 = add i32 %5, 1, !dbg !8911
  call void @llvm.dbg.value(metadata i32 %8, metadata !8904, metadata !DIExpression()), !dbg !8905
  %9 = load i8, i8* %7, align 1, !dbg !8906
  %10 = icmp eq i8 %9, 0, !dbg !8907
  br i1 %10, label %11, label %4, !dbg !8908, !llvm.loop !8912

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8905
  ret i32 %12, !dbg !8914
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8919, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i32 %1, metadata !8920, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i32 0, metadata !8921, metadata !DIExpression()), !dbg !8922
  %3 = load i8, i8* %0, align 1, !dbg !8923
  %4 = icmp ne i8 %3, 0, !dbg !8924
  %5 = icmp ne i32 %1, 0, !dbg !8925
  %6 = and i1 %4, %5, !dbg !8925
  br i1 %6, label %7, label %16, !dbg !8926

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8921, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.value(metadata i8* %9, metadata !8919, metadata !DIExpression()), !dbg !8922
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8927
  call void @llvm.dbg.value(metadata i8* %10, metadata !8919, metadata !DIExpression()), !dbg !8922
  %11 = add nuw i32 %8, 1, !dbg !8929
  call void @llvm.dbg.value(metadata i32 %11, metadata !8921, metadata !DIExpression()), !dbg !8922
  %12 = load i8, i8* %10, align 1, !dbg !8923
  %13 = icmp ne i8 %12, 0, !dbg !8924
  %14 = icmp ult i32 %11, %1, !dbg !8925
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8925
  br i1 %15, label %7, label %16, !dbg !8926, !llvm.loop !8930

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8922
  ret i32 %17, !dbg !8932
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8933 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8937, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i8* %1, metadata !8938, metadata !DIExpression()), !dbg !8939
  %3 = load i8, i8* %0, align 1, !dbg !8940
  %4 = load i8, i8* %1, align 1, !dbg !8941
  %5 = icmp ne i8 %3, %4, !dbg !8942
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8943
  br i1 %7, label %18, label %8, !dbg !8943

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i8* %10, metadata !8937, metadata !DIExpression()), !dbg !8939
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8944
  call void @llvm.dbg.value(metadata i8* %11, metadata !8937, metadata !DIExpression()), !dbg !8939
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8946
  call void @llvm.dbg.value(metadata i8* %12, metadata !8938, metadata !DIExpression()), !dbg !8939
  %13 = load i8, i8* %11, align 1, !dbg !8940
  %14 = load i8, i8* %12, align 1, !dbg !8941
  %15 = icmp ne i8 %13, %14, !dbg !8942
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8943
  br i1 %17, label %18, label %8, !dbg !8943, !llvm.loop !8947

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8940
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8941
  %21 = zext i8 %19 to i32, !dbg !8950
  %22 = zext i8 %20 to i32, !dbg !8951
  %23 = sub nsw i32 %21, %22, !dbg !8952
  ret i32 %23, !dbg !8953
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8954 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8958, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i8* %1, metadata !8959, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i32 %2, metadata !8960, metadata !DIExpression()), !dbg !8961
  %4 = icmp eq i32 %2, 0, !dbg !8962
  br i1 %4, label %23, label %5, !dbg !8962

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8960, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i8* %7, metadata !8959, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i8* %8, metadata !8958, metadata !DIExpression()), !dbg !8961
  %9 = load i8, i8* %8, align 1, !dbg !8963
  %10 = load i8, i8* %7, align 1, !dbg !8964
  %11 = icmp ne i8 %9, %10, !dbg !8965
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8966
  br i1 %13, label %19, label %14, !dbg !8966

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8967
  call void @llvm.dbg.value(metadata i8* %15, metadata !8958, metadata !DIExpression()), !dbg !8961
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8969
  call void @llvm.dbg.value(metadata i8* %16, metadata !8959, metadata !DIExpression()), !dbg !8961
  %17 = add i32 %6, -1, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %17, metadata !8960, metadata !DIExpression()), !dbg !8961
  %18 = icmp eq i32 %17, 0, !dbg !8962
  br i1 %18, label %23, label %5, !dbg !8962, !llvm.loop !8971

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8974
  %21 = zext i8 %10 to i32, !dbg !8975
  %22 = sub nsw i32 %20, %21, !dbg !8976
  br label %23, !dbg !8977

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8977
  ret i32 %24, !dbg !8978
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8983, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata i8* %1, metadata !8984, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata i8** %2, metadata !8985, metadata !DIExpression()), !dbg !8988
  %4 = icmp eq i8* %0, null, !dbg !8989
  br i1 %4, label %5, label %7, !dbg !8989

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8990
  br label %7, !dbg !8989

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8989
  call void @llvm.dbg.value(metadata i8* %8, metadata !8986, metadata !DIExpression()), !dbg !8988
  %9 = load i8, i8* %8, align 1, !dbg !8991
  %10 = icmp eq i8 %9, 0, !dbg !8991
  br i1 %10, label %33, label %11, !dbg !8992

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8986, metadata !DIExpression()), !dbg !8988
  %14 = zext i8 %12 to i32, !dbg !8991
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !8993
  %16 = icmp eq i8* %15, null, !dbg !8992
  br i1 %16, label %21, label %17, !dbg !8994

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8995
  call void @llvm.dbg.value(metadata i8* %18, metadata !8986, metadata !DIExpression()), !dbg !8988
  %19 = load i8, i8* %18, align 1, !dbg !8991
  %20 = icmp eq i8 %19, 0, !dbg !8991
  br i1 %20, label %33, label %11, !dbg !8992, !llvm.loop !8997

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8987, metadata !DIExpression()), !dbg !8988
  %24 = zext i8 %22 to i32, !dbg !8999
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !9000
  %26 = icmp eq i8* %25, null, !dbg !9001
  br i1 %26, label %27, label %31, !dbg !9002

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9003
  call void @llvm.dbg.value(metadata i8* %28, metadata !8987, metadata !DIExpression()), !dbg !8988
  %29 = load i8, i8* %28, align 1, !dbg !8999
  %30 = icmp eq i8 %29, 0, !dbg !8999
  br i1 %30, label %33, label %21, !dbg !9005, !llvm.loop !9006

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9008
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9011
  br label %33, !dbg !9012

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8988
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8988
  store i8* %34, i8** %2, align 4, !dbg !8988
  ret i8* %35, !dbg !9013
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9014 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9016, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i8* %1, metadata !9017, metadata !DIExpression()), !dbg !9018
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !9019
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9020
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !9021
  ret i8* %0, !dbg !9022
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9025, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8* %1, metadata !9026, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i32 %2, metadata !9027, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8* %0, metadata !9028, metadata !DIExpression()), !dbg !9030
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %4, metadata !9029, metadata !DIExpression()), !dbg !9030
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9032
  call void @llvm.dbg.value(metadata i8* %5, metadata !9025, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8* %1, metadata !9026, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i32 %2, metadata !9027, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i32 %2, metadata !9027, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9030
  %6 = icmp eq i32 %2, 0, !dbg !9033
  br i1 %6, label %18, label %7, !dbg !9034

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9035
  call void @llvm.dbg.value(metadata i8* %9, metadata !9025, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8* %10, metadata !9026, metadata !DIExpression()), !dbg !9030
  %12 = load i8, i8* %10, align 1, !dbg !9036
  %13 = icmp eq i8 %12, 0, !dbg !9037
  br i1 %13, label %18, label %14, !dbg !9038

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9039
  call void @llvm.dbg.value(metadata i8* %15, metadata !9026, metadata !DIExpression()), !dbg !9030
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9041
  call void @llvm.dbg.value(metadata i8* %16, metadata !9025, metadata !DIExpression()), !dbg !9030
  store i8 %12, i8* %9, align 1, !dbg !9042
  call void @llvm.dbg.value(metadata i32 %11, metadata !9027, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i32 %11, metadata !9027, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9030
  %17 = icmp eq i32 %11, 0, !dbg !9033
  br i1 %17, label %18, label %7, !dbg !9034, !llvm.loop !9043

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9030
  store i8 0, i8* %19, align 1, !dbg !9045
  ret i8* %0, !dbg !9046
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9051, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i8* %1, metadata !9052, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %2, metadata !9053, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i8* %0, metadata !9054, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i8* %1, metadata !9055, metadata !DIExpression()), !dbg !9056
  %4 = icmp eq i32 %2, 0, !dbg !9057
  br i1 %4, label %31, label %5, !dbg !9059

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i8* %0, metadata !9054, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %2, metadata !9053, metadata !DIExpression()), !dbg !9056
  %6 = add i32 %2, -1, !dbg !9060
  call void @llvm.dbg.value(metadata i32 %6, metadata !9053, metadata !DIExpression()), !dbg !9056
  %7 = icmp eq i32 %6, 0, !dbg !9061
  br i1 %7, label %23, label %8, !dbg !9062

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9063
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9063
  br label %11, !dbg !9063

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i8* %14, metadata !9054, metadata !DIExpression()), !dbg !9056
  %15 = load i8, i8* %14, align 1, !dbg !9064
  %16 = load i8, i8* %13, align 1, !dbg !9065
  %17 = icmp eq i8 %15, %16, !dbg !9066
  br i1 %17, label %18, label %23, !dbg !9063

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9067
  call void @llvm.dbg.value(metadata i8* %19, metadata !9054, metadata !DIExpression()), !dbg !9056
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9069
  call void @llvm.dbg.value(metadata i8* %20, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %12, metadata !9053, metadata !DIExpression()), !dbg !9056
  %21 = add i32 %12, -1, !dbg !9060
  call void @llvm.dbg.value(metadata i32 %21, metadata !9053, metadata !DIExpression()), !dbg !9056
  %22 = icmp eq i32 %21, 0, !dbg !9061
  br i1 %22, label %23, label %11, !dbg !9062, !llvm.loop !9070

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9056
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9056
  %26 = load i8, i8* %24, align 1, !dbg !9072
  %27 = zext i8 %26 to i32, !dbg !9072
  %28 = load i8, i8* %25, align 1, !dbg !9073
  %29 = zext i8 %28 to i32, !dbg !9073
  %30 = sub nsw i32 %27, %29, !dbg !9074
  br label %31, !dbg !9075

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9056
  ret i32 %32, !dbg !9076
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9081, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8* %1, metadata !9082, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32 %2, metadata !9083, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8* %0, metadata !9084, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8* %1, metadata !9085, metadata !DIExpression()), !dbg !9086
  %4 = ptrtoint i8* %0 to i32, !dbg !9087
  %5 = ptrtoint i8* %1 to i32, !dbg !9087
  %6 = sub i32 %4, %5, !dbg !9087
  %7 = icmp ult i32 %6, %2, !dbg !9089
  br i1 %7, label %10, label %8, !dbg !9090

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9085, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8* %0, metadata !9084, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32 %2, metadata !9083, metadata !DIExpression()), !dbg !9086
  %9 = icmp eq i32 %2, 0, !dbg !9091
  br i1 %9, label %26, label %17, !dbg !9093

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9083, metadata !DIExpression()), !dbg !9086
  %12 = add i32 %11, -1, !dbg !9094
  call void @llvm.dbg.value(metadata i32 %12, metadata !9083, metadata !DIExpression()), !dbg !9086
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9097
  %14 = load i8, i8* %13, align 1, !dbg !9097
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9098
  store i8 %14, i8* %15, align 1, !dbg !9099
  %16 = icmp eq i32 %12, 0, !dbg !9100
  br i1 %16, label %26, label %10, !dbg !9101, !llvm.loop !9102

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9085, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8* %19, metadata !9084, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32 %20, metadata !9083, metadata !DIExpression()), !dbg !9086
  %21 = load i8, i8* %18, align 1, !dbg !9104
  store i8 %21, i8* %19, align 1, !dbg !9106
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9107
  call void @llvm.dbg.value(metadata i8* %22, metadata !9084, metadata !DIExpression()), !dbg !9086
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9108
  call void @llvm.dbg.value(metadata i8* %23, metadata !9085, metadata !DIExpression()), !dbg !9086
  %24 = add i32 %20, -1, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %24, metadata !9083, metadata !DIExpression()), !dbg !9086
  %25 = icmp eq i32 %24, 0, !dbg !9091
  br i1 %25, label %26, label %17, !dbg !9093, !llvm.loop !9110

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9112
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9119, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8* %1, metadata !9120, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %2, metadata !9121, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8* %0, metadata !9122, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8* %1, metadata !9123, metadata !DIExpression()), !dbg !9124
  %4 = icmp eq i32 %2, 0, !dbg !9125
  br i1 %4, label %14, label %5, !dbg !9126

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9123, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8* %7, metadata !9122, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %8, metadata !9121, metadata !DIExpression()), !dbg !9124
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9127
  call void @llvm.dbg.value(metadata i8* %9, metadata !9123, metadata !DIExpression()), !dbg !9124
  %10 = load i8, i8* %6, align 1, !dbg !9129
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9130
  call void @llvm.dbg.value(metadata i8* %11, metadata !9122, metadata !DIExpression()), !dbg !9124
  store i8 %10, i8* %7, align 1, !dbg !9131
  %12 = add i32 %8, -1, !dbg !9132
  call void @llvm.dbg.value(metadata i32 %12, metadata !9121, metadata !DIExpression()), !dbg !9124
  %13 = icmp eq i32 %12, 0, !dbg !9125
  br i1 %13, label %14, label %5, !dbg !9126, !llvm.loop !9133

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !9136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9140, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 %2, metadata !9142, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8* %0, metadata !9143, metadata !DIExpression()), !dbg !9145
  %4 = trunc i32 %1 to i8, !dbg !9146
  call void @llvm.dbg.value(metadata i8 %4, metadata !9144, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 %2, metadata !9142, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8* %0, metadata !9143, metadata !DIExpression()), !dbg !9145
  %5 = icmp eq i32 %2, 0, !dbg !9147
  br i1 %5, label %12, label %6, !dbg !9148

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9142, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8* %8, metadata !9143, metadata !DIExpression()), !dbg !9145
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9149
  call void @llvm.dbg.value(metadata i8* %9, metadata !9143, metadata !DIExpression()), !dbg !9145
  store i8 %4, i8* %8, align 1, !dbg !9151
  %10 = add i32 %7, -1, !dbg !9152
  call void @llvm.dbg.value(metadata i32 %10, metadata !9142, metadata !DIExpression()), !dbg !9145
  %11 = icmp eq i32 %10, 0, !dbg !9147
  br i1 %11, label %12, label %6, !dbg !9148, !llvm.loop !9153

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9155
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9156 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9160, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %1, metadata !9161, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %2, metadata !9162, metadata !DIExpression()), !dbg !9166
  %4 = icmp eq i32 %2, 0, !dbg !9167
  br i1 %4, label %17, label %5, !dbg !9168

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9169

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9170
  call void @llvm.dbg.value(metadata i8* %9, metadata !9163, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i32 %8, metadata !9162, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i8* %9, metadata !9163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9170
  %10 = load i8, i8* %9, align 1, !dbg !9171
  %11 = icmp eq i8 %10, %6, !dbg !9174
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9175
  call void @llvm.dbg.value(metadata i8* %12, metadata !9163, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i32 %13, metadata !9162, metadata !DIExpression()), !dbg !9166
  br i1 %15, label %16, label %7, !dbg !9175, !llvm.loop !9176

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9178

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9166
  ret i8* %19, !dbg !9179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !9180 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9182, metadata !DIExpression()), !dbg !9183
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9184
  ret void, !dbg !9185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9188, metadata !DIExpression()), !dbg !9189
  ret i32 -1, !dbg !9190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9195, metadata !DIExpression()), !dbg !9197
  call void @llvm.dbg.value(metadata i32* %1, metadata !9196, metadata !DIExpression()), !dbg !9197
  %3 = ptrtoint i32* %1 to i32, !dbg !9198
  %4 = and i32 %3, -2, !dbg !9198
  %5 = icmp eq i32 %4, 2, !dbg !9198
  br i1 %5, label %6, label %9, !dbg !9198

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9199
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !9199
  br label %9, !dbg !9200

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9200
  ret i32 %10, !dbg !9201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9204, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.value(metadata i32* %1, metadata !9205, metadata !DIExpression()), !dbg !9206
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !9207
  ret i32 %3, !dbg !9208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9212, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata i32* %1, metadata !9213, metadata !DIExpression()), !dbg !9214
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9215, !srcloc !9217
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !9218
  ret i32 %3, !dbg !9219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9225, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i32* %1, metadata !9226, metadata !DIExpression()), !dbg !9229
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !9230
  call void @llvm.dbg.value(metadata i32 %3, metadata !9227, metadata !DIExpression()), !dbg !9229
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !9231
  call void @llvm.dbg.value(metadata i32 %4, metadata !9228, metadata !DIExpression()), !dbg !9229
  %5 = icmp ne i32 %3, %4, !dbg !9232
  %6 = sext i1 %5 to i32, !dbg !9233
  ret i32 %6, !dbg !9234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9235 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9239, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 %1, metadata !9240, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 %2, metadata !9241, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32* %3, metadata !9242, metadata !DIExpression()), !dbg !9243
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !9244
  ret i32 %5, !dbg !9245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9246 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9248, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.value(metadata i32 %1, metadata !9249, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.value(metadata i32 %2, metadata !9250, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.value(metadata i32* %3, metadata !9251, metadata !DIExpression()), !dbg !9252
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9253, !srcloc !9255
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !9256
  ret i32 %5, !dbg !9257
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9260, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %1, metadata !9261, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %2, metadata !9262, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32* %3, metadata !9263, metadata !DIExpression()), !dbg !9268
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9269
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9271
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9271
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9271
  br i1 %11, label %33, label %12, !dbg !9271

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9268
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9268
  call void @llvm.dbg.value(metadata i8* %14, metadata !9266, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %13, metadata !9264, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %1, metadata !9265, metadata !DIExpression()), !dbg !9268
  br label %15, !dbg !9272

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9274
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9268
  call void @llvm.dbg.value(metadata i8* %17, metadata !9266, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %16, metadata !9265, metadata !DIExpression()), !dbg !9268
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9275
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9278
  call void @llvm.dbg.value(metadata i8* %19, metadata !9266, metadata !DIExpression()), !dbg !9268
  %20 = load i8, i8* %17, align 1, !dbg !9279
  %21 = zext i8 %20 to i32, !dbg !9280
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !9275
  %23 = icmp eq i32 %22, -1, !dbg !9281
  br i1 %23, label %30, label %24, !dbg !9282

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9283
  call void @llvm.dbg.value(metadata i32 %25, metadata !9265, metadata !DIExpression()), !dbg !9268
  %26 = icmp eq i32 %25, 0, !dbg !9284
  br i1 %26, label %27, label %15, !dbg !9285, !llvm.loop !9286

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %28, metadata !9264, metadata !DIExpression()), !dbg !9268
  %29 = icmp eq i32 %28, 0, !dbg !9289
  br i1 %29, label %30, label %12, !dbg !9290, !llvm.loop !9291

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9268
  call void @llvm.dbg.value(metadata i32 %31, metadata !9264, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.label(metadata !9267), !dbg !9294
  %32 = sub i32 %2, %31, !dbg !9295
  br label %33, !dbg !9296

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9268
  ret i32 %34, !dbg !9297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9298 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9302, metadata !DIExpression()), !dbg !9303
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9304
  %3 = icmp eq i32 %2, -1, !dbg !9306
  br i1 %3, label %8, label %4, !dbg !9307

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9308
  %6 = icmp eq i32 %5, -1, !dbg !9309
  %7 = sext i1 %6 to i32, !dbg !9308
  br label %8, !dbg !9310

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9303
  ret i32 %9, !dbg !9311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9312 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9320, metadata !DIExpression()), !dbg !9322
  %3 = tail call i64 @sys_clock_tick_get() #24, !dbg !9323
  call void @llvm.dbg.value(metadata i64 %3, metadata !9321, metadata !DIExpression()), !dbg !9322
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9324
  %5 = sub i64 %1, %3, !dbg !9324
  store i64 %5, i64* %4, align 8, !dbg !9324
  ret void, !dbg !9325
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9326 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9473, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9471, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i8* %1, metadata !9472, metadata !DIExpression()), !dbg !9476
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #24, !dbg !9477
  call void @llvm.dbg.value(metadata i64 %4, metadata !9475, metadata !DIExpression()), !dbg !9476
  %5 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9478
  br i1 %5, label %6, label %7, !dbg !9481

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 108) #24, !dbg !9482
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.106, i32 0, i32 0)) #24, !dbg !9482
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 108) #24, !dbg !9482
  unreachable, !dbg !9482

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel* %0, null, !dbg !9484
  br i1 %8, label %9, label %10, !dbg !9487

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 109) #24, !dbg !9488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.108, i32 0, i32 0)) #24, !dbg !9488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 109) #24, !dbg !9488
  unreachable, !dbg !9488

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !9490
  br i1 %11, label %12, label %13, !dbg !9493

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 110) #24, !dbg !9494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.110, i32 0, i32 0)) #24, !dbg !9494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 110) #24, !dbg !9494
  unreachable, !dbg !9494

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9496
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !9496
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !9498
  br i1 %16, label %22, label %17, !dbg !9499

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9500
  %19 = load i16, i16* %18, align 4, !dbg !9500
  %20 = zext i16 %19 to i32, !dbg !9501
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #24, !dbg !9502
  br i1 %21, label %22, label %36, !dbg !9503

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9504
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9504
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #25, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %25, metadata !9474, metadata !DIExpression()), !dbg !9476
  %26 = icmp eq i32 %25, 0, !dbg !9506
  br i1 %26, label %27, label %36, !dbg !9508

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9509
  %29 = load i8*, i8** %28, align 4, !dbg !9509
  %30 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9510
  %31 = load i16, i16* %30, align 4, !dbg !9510
  %32 = zext i16 %31 to i32, !dbg !9511
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #24, !dbg !9512
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #25, !dbg !9513
  call void @llvm.dbg.value(metadata i32 0, metadata !9474, metadata !DIExpression()), !dbg !9476
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9514
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #25, !dbg !9515
  br label %36, !dbg !9516

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !9476
  ret i32 %37, !dbg !9517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9518 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9523, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9522, metadata !DIExpression()), !dbg !9524
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9525, !srcloc !9527
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #24, !dbg !9528
  ret i32 %3, !dbg !9529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9530 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9534, metadata !DIExpression()), !dbg !9542
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9535, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 0, metadata !9536, metadata !DIExpression()), !dbg !9542
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9543
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9543
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9538, metadata !DIExpression()), !dbg !9544
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9545
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9547
  br i1 %8, label %31, label %16, !dbg !9548

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9549
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9550
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9534, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9540, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.value(metadata i32 0, metadata !9536, metadata !DIExpression()), !dbg !9542
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9553
  br i1 %12, label %31, label %13, !dbg !9554

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %32, !dbg !9554

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9538, metadata !DIExpression()), !dbg !9544
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !9555
  %20 = load i8, i8* %19, align 4, !dbg !9555, !range !8132
  %21 = icmp eq i8 %20, 0, !dbg !9555
  br i1 %21, label %27, label %22, !dbg !9558

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !9559
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9559
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9560
  br i1 %25, label %27, label %26, !dbg !9561

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9534, metadata !DIExpression()), !dbg !9542
  tail call void %24(%struct.zbus_channel* noundef %0) #24, !dbg !9562
  br label %27, !dbg !9564

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9565
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9538, metadata !DIExpression()), !dbg !9544
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9545
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9547
  br i1 %30, label %9, label %16, !dbg !9548, !llvm.loop !9566

31:                                               ; preds = %48, %2, %9
  ret void, !dbg !9568

32:                                               ; preds = %13, %48
  %33 = phi %struct.zbus_observer* [ %11, %13 ], [ %50, %48 ]
  %34 = phi %struct.zbus_observer** [ %10, %13 ], [ %49, %48 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %34, metadata !9540, metadata !DIExpression()), !dbg !9552
  %35 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %33, i32 0, i32 0, !dbg !9569
  %36 = load i8, i8* %35, align 4, !dbg !9569, !range !8132
  %37 = icmp eq i8 %36, 0, !dbg !9569
  br i1 %37, label %48, label %38, !dbg !9572

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %33, i32 0, i32 1, !dbg !9573
  %40 = load %struct.k_msgq*, %struct.k_msgq** %39, align 4, !dbg !9573
  %41 = icmp eq %struct.k_msgq* %40, null, !dbg !9574
  br i1 %41, label %48, label %42, !dbg !9575

42:                                               ; preds = %38
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #25, !dbg !9576
  %43 = load i64, i64* %15, align 8, !dbg !9578
  %44 = insertvalue [1 x i64] poison, i64 %43, 0, !dbg !9578
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9534, metadata !DIExpression(DW_OP_deref)), !dbg !9542
  %45 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %40, i8* noundef nonnull %14, [1 x i64] %44) #25, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %45, metadata !9537, metadata !DIExpression()), !dbg !9542
  %46 = icmp eq i32 %45, 0, !dbg !9579
  br i1 %46, label %48, label %47, !dbg !9582

47:                                               ; preds = %42
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 85) #24, !dbg !9583
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.112, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.113, i32 0, i32 0)) #24, !dbg !9583
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 85) #24, !dbg !9583
  unreachable, !dbg !9583

48:                                               ; preds = %42, %32, %38
  call void @llvm.dbg.value(metadata i32 0, metadata !9536, metadata !DIExpression()), !dbg !9542
  %49 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %34, i32 1, !dbg !9585
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %49, metadata !9540, metadata !DIExpression()), !dbg !9552
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %49, align 4, !dbg !9550
  %51 = icmp eq %struct.zbus_observer* %50, null, !dbg !9553
  br i1 %51, label %31, label %32, !dbg !9554, !llvm.loop !9586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9588 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9592, metadata !DIExpression()), !dbg !9593
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9594, !srcloc !9596
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #24, !dbg !9597
  ret i32 %2, !dbg !9598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9599 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9605, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9603, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.value(metadata i8* %1, metadata !9604, metadata !DIExpression()), !dbg !9606
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9607, !srcloc !9609
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9610
  ret i32 %4, !dbg !9611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9612 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9618, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9616, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.value(metadata i8* %1, metadata !9617, metadata !DIExpression()), !dbg !9620
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9621
  br i1 %4, label %5, label %6, !dbg !9624

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 134) #24, !dbg !9625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.106, i32 0, i32 0)) #24, !dbg !9625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 134) #24, !dbg !9625
  unreachable, !dbg !9625

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel* %0, null, !dbg !9627
  br i1 %7, label %8, label %9, !dbg !9630

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 135) #24, !dbg !9631
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.108, i32 0, i32 0)) #24, !dbg !9631
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 135) #24, !dbg !9631
  unreachable, !dbg !9631

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !9633
  br i1 %10, label %11, label %12, !dbg !9636

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 136) #24, !dbg !9637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.110, i32 0, i32 0)) #24, !dbg !9637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 136) #24, !dbg !9637
  unreachable, !dbg !9637

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9639
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !9639
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #25, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %15, metadata !9619, metadata !DIExpression()), !dbg !9620
  %16 = icmp eq i32 %15, 0, !dbg !9641
  br i1 %16, label %17, label %26, !dbg !9643

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9644
  %19 = load i8*, i8** %18, align 4, !dbg !9644
  %20 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9645
  %21 = load i16, i16* %20, align 4, !dbg !9645
  %22 = zext i16 %21 to i32, !dbg !9646
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #24, !dbg !9647
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !9648
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #25, !dbg !9649
  br label %26, !dbg !9650

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !9620
  ret i32 %27, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9652 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9657, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9656, metadata !DIExpression()), !dbg !9660
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #24, !dbg !9661
  call void @llvm.dbg.value(metadata i64 %3, metadata !9659, metadata !DIExpression()), !dbg !9660
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9662
  br i1 %4, label %5, label %6, !dbg !9665

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 153) #24, !dbg !9666
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.106, i32 0, i32 0)) #24, !dbg !9666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 153) #24, !dbg !9666
  unreachable, !dbg !9666

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel* %0, null, !dbg !9668
  br i1 %7, label %8, label %9, !dbg !9671

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 154) #24, !dbg !9672
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.108, i32 0, i32 0)) #24, !dbg !9672
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 154) #24, !dbg !9672
  unreachable, !dbg !9672

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9674
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !9674
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #25, !dbg !9675
  call void @llvm.dbg.value(metadata i32 %12, metadata !9658, metadata !DIExpression()), !dbg !9660
  %13 = icmp eq i32 %12, 0, !dbg !9676
  br i1 %13, label %14, label %17, !dbg !9678

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #25, !dbg !9679
  call void @llvm.dbg.value(metadata i32 0, metadata !9658, metadata !DIExpression()), !dbg !9660
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !9680
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #25, !dbg !9681
  br label %17, !dbg !9682

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !9683
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9684 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9687, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9686, metadata !DIExpression()), !dbg !9689
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9690
  br i1 %3, label %4, label %5, !dbg !9693

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 170) #24, !dbg !9694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.106, i32 0, i32 0)) #24, !dbg !9694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 170) #24, !dbg !9694
  unreachable, !dbg !9694

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel* %0, null, !dbg !9696
  br i1 %6, label %7, label %8, !dbg !9699

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 171) #24, !dbg !9700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.108, i32 0, i32 0)) #24, !dbg !9700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 171) #24, !dbg !9700
  unreachable, !dbg !9700

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9702
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !9702
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #25, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %11, metadata !9688, metadata !DIExpression()), !dbg !9689
  ret i32 %11, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* noundef readonly %0) local_unnamed_addr #1 !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9709, metadata !DIExpression()), !dbg !9711
  %2 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9712
  br i1 %2, label %3, label %4, !dbg !9715

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 184) #24, !dbg !9716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.106, i32 0, i32 0)) #24, !dbg !9716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 184) #24, !dbg !9716
  unreachable, !dbg !9716

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel* %0, null, !dbg !9718
  br i1 %5, label %6, label %7, !dbg !9721

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 185) #24, !dbg !9722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.108, i32 0, i32 0)) #24, !dbg !9722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 185) #24, !dbg !9722
  unreachable, !dbg !9722

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9724
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !9724
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #25, !dbg !9725
  call void @llvm.dbg.value(metadata i32 %10, metadata !9710, metadata !DIExpression()), !dbg !9711
  ret i32 %10, !dbg !9726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9727 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9732, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9733, metadata !DIExpression()), !dbg !9735
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9736
  br i1 %4, label %5, label %6, !dbg !9739

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 195) #24, !dbg !9740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.106, i32 0, i32 0)) #24, !dbg !9740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 195) #24, !dbg !9740
  unreachable, !dbg !9740

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer* %0, null, !dbg !9742
  br i1 %7, label %8, label %9, !dbg !9745

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 196) #24, !dbg !9746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.119, i32 0, i32 0)) #24, !dbg !9746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 196) #24, !dbg !9746
  unreachable, !dbg !9746

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel** %1, null, !dbg !9748
  br i1 %10, label %11, label %12, !dbg !9751

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 197) #24, !dbg !9752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.108, i32 0, i32 0)) #24, !dbg !9752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 197) #24, !dbg !9752
  unreachable, !dbg !9752

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !9754
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !9754
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !9756
  br i1 %15, label %19, label %16, !dbg !9757

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9758
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #25, !dbg !9759
  br label %19, !dbg !9760

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !9735
  ret i32 %20, !dbg !9761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9762 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9768, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9766, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i8* %1, metadata !9767, metadata !DIExpression()), !dbg !9769
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9770, !srcloc !9772
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9773
  ret i32 %4, !dbg !9774
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9775 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9777, metadata !DIExpression()), !dbg !9778
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !9779
  br i1 %2, label %3, label %4, !dbg !9781

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !9782
  br label %4, !dbg !9783

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9778
  ret i32 %5, !dbg !9784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9790, metadata !DIExpression()), !dbg !9791
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9792, !srcloc !9794
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !9795
  ret i1 %1, !dbg !9796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9797 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9798
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9803, metadata !DIExpression()), !dbg !9804
  %2 = icmp eq i32 %0, 10, !dbg !9805
  br i1 %2, label %3, label %4, !dbg !9807

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !9808
  br label %4, !dbg !9810

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9811
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !9812
  ret i32 %0, !dbg !9813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9814 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9817, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.value(metadata i8 %0, metadata !9818, metadata !DIExpression()), !dbg !9819
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9820, !srcloc !9822
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9823
  ret void, !dbg !9824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9825 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9827, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i8 %0, metadata !9828, metadata !DIExpression()), !dbg !9830
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9831
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9829, metadata !DIExpression()), !dbg !9830
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9832
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9832
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #24, !dbg !9833
  ret void, !dbg !9834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9835 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9837, metadata !DIExpression()), !dbg !9838
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !9839
  ret i1 %1, !dbg !9840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9890, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9891, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9892, metadata !DIExpression()), !dbg !9893
  ret void, !dbg !9894
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9895 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9897, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.value(metadata i8 %1, metadata !9898, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.value(metadata i32 %2, metadata !9899, metadata !DIExpression()), !dbg !9910
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9911
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9911
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9911
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9900, metadata !DIExpression()), !dbg !9910
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9912
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9902, metadata !DIExpression()), !dbg !9910
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !9913
  %13 = icmp eq i32 %12, 196608, !dbg !9913
  br i1 %13, label %71, label %14, !dbg !9913

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !9915
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !9915
  %17 = load i8, i8* %16, align 4, !dbg !9915
  %18 = icmp ugt i8 %17, %1, !dbg !9915
  br i1 %18, label %20, label %19, !dbg !9918

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.129, i32 0, i32 0), i32 noundef 50) #24, !dbg !9919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.129, i32 0, i32 0), i32 noundef 50) #24, !dbg !9919
  unreachable, !dbg !9919

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !9921
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #23, !dbg !9921
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !9903, metadata !DIExpression()), !dbg !9922
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !9923
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !9923
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !9924
  %25 = load i32, i32* %24, align 4, !dbg !9924
  %26 = inttoptr i32 %25 to i32*, !dbg !9925
  call void @llvm.dbg.value(metadata i32* %26, metadata !9908, metadata !DIExpression()), !dbg !9910
  %27 = load volatile i32, i32* %26, align 4, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %27, metadata !9909, metadata !DIExpression()), !dbg !9910
  %28 = and i32 %2, 2, !dbg !9927
  %29 = icmp eq i32 %28, 0, !dbg !9929
  br i1 %29, label %30, label %69, !dbg !9930

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !9931
  %32 = icmp eq i32 %31, 0, !dbg !9931
  br i1 %32, label %41, label %33, !dbg !9931

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !9933
  %35 = icmp eq i32 %34, 0, !dbg !9934
  call void @llvm.dbg.value(metadata i32 %27, metadata !9909, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9910
  br i1 %35, label %38, label %36, !dbg !9935

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !9937
  call void @llvm.dbg.value(metadata i32 %37, metadata !9909, metadata !DIExpression()), !dbg !9910
  br label %43, !dbg !9940

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !9909, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9910
  %39 = and i32 %27, -49, !dbg !9941
  %40 = or i32 %39, 16, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %40, metadata !9909, metadata !DIExpression()), !dbg !9910
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %42, metadata !9909, metadata !DIExpression()), !dbg !9910
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !9945
  call void @llvm.dbg.value(metadata i32 %44, metadata !9909, metadata !DIExpression()), !dbg !9910
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !9946
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !9947
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #24, !dbg !9948
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !9949
  store i32 %44, i32* %48, align 4, !dbg !9950
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #24, !dbg !9951
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #24, !dbg !9952
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #24, !dbg !9953
  br i1 %11, label %63, label %50, !dbg !9954

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !9955
  %52 = icmp eq i32 %51, 0, !dbg !9959
  br i1 %52, label %53, label %56, !dbg !9960

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !9961
  %55 = icmp eq i32 %54, 0, !dbg !9963
  br i1 %55, label %58, label %56, !dbg !9964

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #24, !dbg !9965
  br label %58, !dbg !9966

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9966
  %60 = load volatile i32, i32* %59, align 4, !dbg !9966
  %61 = shl nuw i32 1, %15, !dbg !9966
  %62 = or i32 %60, %61, !dbg !9966
  store volatile i32 %62, i32* %59, align 4, !dbg !9966
  br label %69, !dbg !9967

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9968
  %65 = load volatile i32, i32* %64, align 4, !dbg !9968
  %66 = shl nuw i32 1, %15, !dbg !9968
  %67 = xor i32 %66, -1, !dbg !9968
  %68 = and i32 %65, %67, !dbg !9968
  store volatile i32 %68, i32* %64, align 4, !dbg !9968
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !9910
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #23, !dbg !9970
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !9910
  ret i32 %72, !dbg !9970
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9975, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32* %1, metadata !9976, metadata !DIExpression()), !dbg !9979
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9980
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9980
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9980
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9977, metadata !DIExpression()), !dbg !9979
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9981
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9981
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9978, metadata !DIExpression()), !dbg !9979
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9982
  store i32 %8, i32* %1, align 4, !dbg !9983
  ret i32 0, !dbg !9984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !9985 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9987, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i32 %1, metadata !9988, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i32 %2, metadata !9989, metadata !DIExpression()), !dbg !9992
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9993
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !9993
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !9993
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !9990, metadata !DIExpression()), !dbg !9992
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !9994
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !9994
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !9991, metadata !DIExpression()), !dbg !9992
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #25, !dbg !9995
  %10 = xor i32 %1, -1, !dbg !9996
  %11 = and i32 %9, %10, !dbg !9997
  %12 = and i32 %2, %1, !dbg !9998
  %13 = or i32 %11, %12, !dbg !9999
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #25, !dbg !10000
  ret i32 0, !dbg !10001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10004, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata i32 %1, metadata !10005, metadata !DIExpression()), !dbg !10008
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10009
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10009
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10009
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10006, metadata !DIExpression()), !dbg !10008
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10010
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10010
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10007, metadata !DIExpression()), !dbg !10008
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !10011
  %9 = or i32 %8, %1, !dbg !10012
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !10013
  ret i32 0, !dbg !10014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10015 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10017, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 %1, metadata !10018, metadata !DIExpression()), !dbg !10021
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10022
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10022
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10022
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10019, metadata !DIExpression()), !dbg !10021
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10023
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10020, metadata !DIExpression()), !dbg !10021
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !10024
  %9 = xor i32 %1, -1, !dbg !10025
  %10 = and i32 %8, %9, !dbg !10026
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #25, !dbg !10027
  ret i32 0, !dbg !10028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10031, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata i32 %1, metadata !10032, metadata !DIExpression()), !dbg !10035
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10036
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10036
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10036
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10033, metadata !DIExpression()), !dbg !10035
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10037
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10037
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10034, metadata !DIExpression()), !dbg !10035
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !10038
  %9 = xor i32 %8, %1, !dbg !10039
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !10040
  ret i32 0, !dbg !10041
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10042 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10044, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i8 %1, metadata !10045, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i32 %2, metadata !10046, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i32 %3, metadata !10047, metadata !DIExpression()), !dbg !10054
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10055
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !10055
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !10055
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !10048, metadata !DIExpression()), !dbg !10054
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !10056
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10056
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !10049, metadata !DIExpression()), !dbg !10054
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !10057
  %11 = load volatile i32, i32* %10, align 4, !dbg !10057
  %12 = zext i8 %1 to i32, !dbg !10059
  %13 = shl nuw i32 1, %12, !dbg !10059
  %14 = and i32 %11, %13, !dbg !10060
  %15 = icmp ne i32 %14, 0, !dbg !10061
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !10062
  br i1 %17, label %77, label %18, !dbg !10062

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !10063
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !10065
  br i1 %21, label %29, label %22, !dbg !10065

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !10066
  br i1 %24, label %29, label %25, !dbg !10066

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !10068
  %27 = and i1 %26, %23, !dbg !10070
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !10071
  call void @llvm.dbg.value(metadata i32 %30, metadata !10052, metadata !DIExpression()), !dbg !10054
  %31 = icmp ult i8 %1, 16, !dbg !10072
  br i1 %31, label %32, label %35, !dbg !10074

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !10075
  call void @llvm.dbg.value(metadata i8 %33, metadata !10053, metadata !DIExpression()), !dbg !10054
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !10077
  call void @llvm.dbg.value(metadata i32* %34, metadata !10050, metadata !DIExpression()), !dbg !10054
  br label %41, !dbg !10078

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !10079
  br i1 %36, label %37, label %77, !dbg !10081

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !10082
  %39 = add nsw i8 %38, -32, !dbg !10082
  call void @llvm.dbg.value(metadata i8 %39, metadata !10053, metadata !DIExpression()), !dbg !10054
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !10084
  call void @llvm.dbg.value(metadata i32* %40, metadata !10050, metadata !DIExpression()), !dbg !10054
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !10085
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !10085
  call void @llvm.dbg.value(metadata i8 %43, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i32* %42, metadata !10050, metadata !DIExpression()), !dbg !10054
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10086, !srcloc !10094
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !10086
  call void @llvm.dbg.value(metadata i32 %45, metadata !10091, metadata !DIExpression()) #23, !dbg !10095
  call void @llvm.dbg.value(metadata i32 undef, metadata !10092, metadata !DIExpression()) #23, !dbg !10095
  call void @llvm.dbg.value(metadata i32 %45, metadata !10051, metadata !DIExpression()), !dbg !10054
  %46 = load volatile i32, i32* %42, align 4, !dbg !10096
  %47 = zext i8 %43 to i32, !dbg !10097
  %48 = shl nuw i32 3, %47, !dbg !10098
  %49 = xor i32 %48, -1, !dbg !10099
  %50 = and i32 %46, %49, !dbg !10100
  %51 = shl nuw i32 %30, %47, !dbg !10101
  %52 = or i32 %50, %51, !dbg !10102
  store volatile i32 %52, i32* %42, align 4, !dbg !10103
  %53 = icmp eq i32 %3, 100663296, !dbg !10104
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !10104
  %55 = load volatile i32, i32* %54, align 4, !dbg !10104
  %56 = or i32 %55, %13, !dbg !10104
  %57 = xor i32 %13, -1, !dbg !10104
  %58 = and i32 %55, %57, !dbg !10104
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !10104
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !10104
  store volatile i32 %59, i32* %60, align 4, !dbg !10104
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !10105
  %62 = load volatile i32, i32* %61, align 4, !dbg !10105
  br i1 %16, label %63, label %68, !dbg !10105

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !10105
  store volatile i32 %64, i32* %61, align 4, !dbg !10105
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10106
  %66 = load volatile i32, i32* %65, align 4, !dbg !10106
  %67 = or i32 %66, %13, !dbg !10106
  br label %74, !dbg !10106

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !10105
  %70 = and i32 %62, %69, !dbg !10105
  store volatile i32 %70, i32* %61, align 4, !dbg !10105
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10106
  %72 = load volatile i32, i32* %71, align 4, !dbg !10106
  %73 = and i32 %72, %69, !dbg !10106
  br label %74, !dbg !10106

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !10106
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10106
  store volatile i32 %75, i32* %76, align 4, !dbg !10106
  call void @llvm.dbg.value(metadata i32 %45, metadata !10107, metadata !DIExpression()) #23, !dbg !10110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #23, !dbg !10112, !srcloc !10113
  br label %77, !dbg !10114

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !10054
  ret i32 %78, !dbg !10115
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10118, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10119, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata i1 %2, metadata !10120, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10123
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10124
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !10124
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !10124
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !10121, metadata !DIExpression()), !dbg !10123
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !10125
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !10126
  ret i32 %8, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10134, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10135, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.value(metadata i1 %2, metadata !10136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10137
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10138
  br i1 %4, label %5, label %6, !dbg !10141

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.124, i32 0, i32 0), i32 noundef 42) #24, !dbg !10142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.125, i32 0, i32 0)) #24, !dbg !10142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.124, i32 0, i32 0), i32 noundef 42) #24, !dbg !10142
  unreachable, !dbg !10142

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10144
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10144
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10144
  br i1 %9, label %10, label %11, !dbg !10147

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.124, i32 0, i32 0), i32 noundef 43) #24, !dbg !10148
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.127, i32 0, i32 0)) #24, !dbg !10148
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.124, i32 0, i32 0), i32 noundef 43) #24, !dbg !10148
  unreachable, !dbg !10148

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !10150
  br i1 %12, label %18, label %13, !dbg !10152

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10153
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !10156
  %16 = or i1 %15, %2, !dbg !10157
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10157
  br i1 %2, label %19, label %21, !dbg !10157

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10158

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10159
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !10162
  br label %21, !dbg !10163

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10137
  ret i32 %22, !dbg !10164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10165 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10169, metadata !DIExpression()), !dbg !10170
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10171
  %3 = icmp eq %struct._snode* %2, null, !dbg !10171
  ret i1 %3, !dbg !10171
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10172 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10176, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10177, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10178, metadata !DIExpression()), !dbg !10180
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10181
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10178, metadata !DIExpression()), !dbg !10180
  %4 = icmp eq %struct._snode* %3, null, !dbg !10183
  br i1 %4, label %15, label %5, !dbg !10181

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10178, metadata !DIExpression()), !dbg !10180
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10185
  br i1 %6, label %9, label %11, !dbg !10188

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10178, metadata !DIExpression()), !dbg !10180
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10185
  br i1 %8, label %9, label %11, !dbg !10188, !llvm.loop !10189

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !10190
  br label %15, !dbg !10190

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10178, metadata !DIExpression()), !dbg !10180
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !10183
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10179, metadata !DIExpression()), !dbg !10180
  %14 = icmp eq %struct._snode* %13, null, !dbg !10183
  br i1 %14, label %15, label %7, !dbg !10181, !llvm.loop !10189

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !10193 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10197, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10198, metadata !DIExpression()), !dbg !10199
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10200
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !10200
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !10200
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10201
  %5 = icmp eq %struct._snode* %4, null, !dbg !10201
  br i1 %5, label %6, label %8, !dbg !10200

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10203
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !10203
  br label %8, !dbg !10203

8:                                                ; preds = %6, %2
  ret void, !dbg !10200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10205 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10209, metadata !DIExpression()), !dbg !10210
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10211
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10211
  ret %struct._snode* %3, !dbg !10212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10213 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10217, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10218, metadata !DIExpression()), !dbg !10219
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10220
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10221
  ret void, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10223 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10225, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10226, metadata !DIExpression()), !dbg !10227
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10228
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10231 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10233, metadata !DIExpression()), !dbg !10234
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10235
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10235
  ret %struct._snode* %3, !dbg !10236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10237 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10239, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10240, metadata !DIExpression()), !dbg !10241
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10242
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10243
  ret void, !dbg !10244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !10245 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10249, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10250, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10251, metadata !DIExpression()), !dbg !10252
  %4 = icmp eq %struct._snode* %1, null, !dbg !10253
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !10255
  br i1 %4, label %6, label %11, !dbg !10256

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !10257
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10259
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10259
  br i1 %8, label %9, label %15, !dbg !10257

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10261
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !10261
  br label %15, !dbg !10261

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !10263
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10265
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10265
  br i1 %13, label %14, label %15, !dbg !10263

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !10267
  br label %15, !dbg !10267

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !10256
  ret void, !dbg !10256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #9 !dbg !10269 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10273, metadata !DIExpression()), !dbg !10274
  %2 = icmp eq %struct._snode* %0, null, !dbg !10275
  br i1 %2, label %5, label %3, !dbg !10275

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !10275
  br label %5, !dbg !10275

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10275
  ret %struct._snode* %6, !dbg !10275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10278, metadata !DIExpression()), !dbg !10279
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !10280
  ret %struct._snode* %2, !dbg !10280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10281 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10283, metadata !DIExpression()), !dbg !10284
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10285
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10285
  ret %struct._snode* %3, !dbg !10286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #17 !dbg !10287 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10291, metadata !DIExpression()), !dbg !10292
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10293
  %3 = load volatile i32, i32* %2, align 4, !dbg !10293
  ret i32 %3, !dbg !10294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10299, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata i32 %1, metadata !10300, metadata !DIExpression()), !dbg !10301
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10302
  store volatile i32 %1, i32* %3, align 4, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10309, metadata !DIExpression()), !dbg !10313
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10314
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !10314
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !10314
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !10310, metadata !DIExpression()), !dbg !10313
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10315
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !10315
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !10315
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !10311, metadata !DIExpression()), !dbg !10313
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !10316
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10316
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !10317
  %11 = load volatile i32, i32* %10, align 4, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %11, metadata !10312, metadata !DIExpression()), !dbg !10313
  store volatile i32 %11, i32* %10, align 4, !dbg !10318
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !10319
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #25, !dbg !10320
  ret void, !dbg !10321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10322 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10326, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10327, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %2, metadata !10328, metadata !DIExpression()), !dbg !10331
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10332
  %5 = icmp eq %struct._snode* %4, null, !dbg !10332
  br i1 %5, label %24, label %6, !dbg !10332

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !10334
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10330, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10329, metadata !DIExpression()), !dbg !10331
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10335
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10335
  %12 = load i32, i32* %11, align 4, !dbg !10335
  %13 = and i32 %12, %2, !dbg !10339
  %14 = icmp eq i32 %13, 0, !dbg !10339
  br i1 %14, label %22, label %15, !dbg !10340

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10341
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10341
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10341
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10341
  br i1 %19, label %20, label %21, !dbg !10345

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.124, i32 0, i32 0), i32 noundef 77) #24, !dbg !10346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.127, i32 0, i32 0)) #24, !dbg !10346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.124, i32 0, i32 0), i32 noundef 77) #24, !dbg !10346
  unreachable, !dbg !10346

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !10348
  br label %22, !dbg !10349

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10329, metadata !DIExpression()), !dbg !10331
  %23 = icmp eq %struct._snode* %8, null, !dbg !10350
  br i1 %23, label %24, label %6, !dbg !10350

24:                                               ; preds = %22, %3
  ret void, !dbg !10351
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1344 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1346, metadata !DIExpression()), !dbg !10352
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #24, !dbg !10353
  tail call void @arch_irq_enable(i32 noundef 64) #24, !dbg !10355
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #24, !dbg !10356
  tail call void @arch_irq_enable(i32 noundef 65) #24, !dbg !10355
  ret i32 0, !dbg !10355
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10360, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.value(metadata i8* %1, metadata !10361, metadata !DIExpression()), !dbg !10364
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10365
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10365
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10365
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10365
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10365
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10362, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.value(metadata i32 -1, metadata !10363, metadata !DIExpression()), !dbg !10364
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #25, !dbg !10366
  br i1 %8, label %9, label %13, !dbg !10368

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #25, !dbg !10369
  store i8 %10, i8* %1, align 1, !dbg !10371
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !10372
  br i1 %11, label %12, label %13, !dbg !10374

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !10375
  br label %13, !dbg !10377

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !10364
  call void @llvm.dbg.value(metadata i32 %14, metadata !10363, metadata !DIExpression()), !dbg !10364
  ret i32 %14, !dbg !10378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #16 !dbg !10379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10381, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i8 %1, metadata !10382, metadata !DIExpression()), !dbg !10384
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10385
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10385
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10385
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10385
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10385
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10383, metadata !DIExpression()), !dbg !10384
  br label %8, !dbg !10386

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #25, !dbg !10387
  br i1 %9, label %10, label %8, !dbg !10386, !llvm.loop !10388

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #25, !dbg !10390
  ret void, !dbg !10391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #16 !dbg !10392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10394, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i8* %1, metadata !10395, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 %2, metadata !10396, metadata !DIExpression()), !dbg !10399
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10400
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10400
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10400
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10400
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10400
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10397, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 0, metadata !10398, metadata !DIExpression()), !dbg !10399
  %9 = icmp eq i32 %2, 0, !dbg !10401
  br i1 %9, label %18, label %10, !dbg !10402

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10398, metadata !DIExpression()), !dbg !10399
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #25, !dbg !10403
  br i1 %12, label %13, label %18, !dbg !10404

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10405
  %15 = load i8, i8* %14, align 1, !dbg !10405
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #25, !dbg !10407
  %16 = add nuw i32 %11, 1, !dbg !10408
  call void @llvm.dbg.value(metadata i32 %16, metadata !10398, metadata !DIExpression()), !dbg !10399
  %17 = icmp eq i32 %16, %2, !dbg !10401
  br i1 %17, label %18, label %10, !dbg !10402, !llvm.loop !10409

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10399
  ret i32 %19, !dbg !10411
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10414, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i8* %1, metadata !10415, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i32 %2, metadata !10416, metadata !DIExpression()), !dbg !10419
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10420
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10420
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10420
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10420
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10420
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10417, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i32 0, metadata !10418, metadata !DIExpression()), !dbg !10419
  %9 = icmp eq i32 %2, 0, !dbg !10421
  br i1 %9, label %18, label %10, !dbg !10422

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10418, metadata !DIExpression()), !dbg !10419
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #25, !dbg !10423
  br i1 %12, label %13, label %18, !dbg !10424

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #25, !dbg !10425
  %15 = add nuw i32 %11, 1, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %15, metadata !10418, metadata !DIExpression()), !dbg !10419
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10428
  store i8 %14, i8* %16, align 1, !dbg !10429
  %17 = icmp eq i32 %15, %2, !dbg !10421
  br i1 %17, label %18, label %10, !dbg !10422, !llvm.loop !10430

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10419
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !10432
  br i1 %20, label %21, label %22, !dbg !10434

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !10435
  br label %22, !dbg !10437

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !10438
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10441, metadata !DIExpression()), !dbg !10443
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10444
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10444
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10444
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10444
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10444
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10442, metadata !DIExpression()), !dbg !10443
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #24, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10449, metadata !DIExpression()), !dbg !10451
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10452
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10452
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10452
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10452
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10452
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10450, metadata !DIExpression()), !dbg !10451
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #24, !dbg !10453
  ret void, !dbg !10454
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10457, metadata !DIExpression()), !dbg !10459
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10460
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10460
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10460
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10460
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10460
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10458, metadata !DIExpression()), !dbg !10459
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10461
  %8 = zext i1 %7 to i32, !dbg !10461
  ret i32 %8, !dbg !10462
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10465, metadata !DIExpression()), !dbg !10467
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10468
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10468
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10468
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10468
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10468
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10466, metadata !DIExpression()), !dbg !10467
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #24, !dbg !10469
  ret void, !dbg !10470
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10473, metadata !DIExpression()), !dbg !10475
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10476
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10476
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10476
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10476
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10476
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10474, metadata !DIExpression()), !dbg !10475
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #24, !dbg !10477
  ret void, !dbg !10478
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10481, metadata !DIExpression()), !dbg !10483
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10484
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10484
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10484
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10484
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10484
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10482, metadata !DIExpression()), !dbg !10483
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10485
  %8 = zext i1 %7 to i32, !dbg !10485
  ret i32 %8, !dbg !10486
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10489, metadata !DIExpression()), !dbg !10491
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10492
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10492
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10492
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10492
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10492
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10490, metadata !DIExpression()), !dbg !10491
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #24, !dbg !10493
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #24, !dbg !10494
  ret void, !dbg !10495
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10498, metadata !DIExpression()), !dbg !10500
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10501
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10501
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10501
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10501
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10499, metadata !DIExpression()), !dbg !10500
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #24, !dbg !10502
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #24, !dbg !10503
  ret void, !dbg !10504
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10507, metadata !DIExpression()), !dbg !10509
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10510
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10510
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10510
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10510
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10510
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10508, metadata !DIExpression()), !dbg !10509
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10511
  br i1 %7, label %11, label %8, !dbg !10512

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10513
  %10 = zext i1 %9 to i32, !dbg !10512
  br label %11, !dbg !10512

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !10514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #5 !dbg !10515 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10517, metadata !DIExpression()), !dbg !10518
  ret i32 1, !dbg !10519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #10 !dbg !10520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10522, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10523, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i8* %2, metadata !10524, metadata !DIExpression()), !dbg !10527
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10528
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !10528
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !10528
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !10525, metadata !DIExpression()), !dbg !10527
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !10529
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10530
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !10531
  store i8* %2, i8** %8, align 4, !dbg !10532
  ret void, !dbg !10533
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10538, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %1, metadata !10539, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32* null, metadata !10540, metadata !DIExpression()), !dbg !10541
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10542
  %4 = lshr i32 %1, 16, !dbg !10543
  %5 = add i32 %4, %3, !dbg !10544
  %6 = inttoptr i32 %5 to i32*, !dbg !10545
  call void @llvm.dbg.value(metadata i32* %6, metadata !10540, metadata !DIExpression()), !dbg !10541
  %7 = load volatile i32, i32* %6, align 4, !dbg !10546
  %8 = and i32 %1, 65535, !dbg !10547
  %9 = shl nuw i32 1, %8, !dbg !10548
  %10 = and i32 %7, %9, !dbg !10548
  %11 = icmp ne i32 %10, 0, !dbg !10548
  ret i1 %11, !dbg !10549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #17 !dbg !10550 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10554, metadata !DIExpression()), !dbg !10555
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10556
  %3 = load volatile i32, i32* %2, align 4, !dbg !10556
  %4 = trunc i32 %3 to i8, !dbg !10557
  ret i8 %4, !dbg !10558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !10559 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10563, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i8 %1, metadata !10564, metadata !DIExpression()), !dbg !10565
  %3 = zext i8 %1 to i32, !dbg !10566
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10567
  store volatile i32 %3, i32* %4, align 4, !dbg !10568
  ret void, !dbg !10569
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1639, metadata !DIExpression()), !dbg !10570
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #24, !dbg !10571
  tail call void @arch_irq_enable(i32 noundef 26) #24, !dbg !10573
  ret void, !dbg !10573
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !10574 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10576, metadata !DIExpression()), !dbg !10578
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10579
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !10579
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !10579
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !10577, metadata !DIExpression()), !dbg !10578
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !10580
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10580
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10582
  br i1 %7, label %11, label %8, !dbg !10583

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !10584
  %10 = load i8*, i8** %9, align 4, !dbg !10584
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #24, !dbg !10586
  br label %11, !dbg !10587

11:                                               ; preds = %8, %1
  ret void, !dbg !10588
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !10589 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10591, metadata !DIExpression()), !dbg !10606
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10607
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10607
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10607
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10607
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10607
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10592, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !10593, metadata !DIExpression()), !dbg !10606
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10608, !srcloc !10614
  call void @llvm.dbg.value(metadata i32 undef, metadata !10611, metadata !DIExpression()) #23, !dbg !10615
  call void @llvm.dbg.value(metadata i32 undef, metadata !10612, metadata !DIExpression()) #23, !dbg !10615
  call void @llvm.dbg.value(metadata i32 undef, metadata !10594, metadata !DIExpression()), !dbg !10606
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !10616
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #23, !dbg !10616
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !10596, metadata !DIExpression()), !dbg !10617
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !10618
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !10619
  %12 = load i32, i32* %11, align 4, !dbg !10619
  store i32 %12, i32* %10, align 4, !dbg !10618
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !10618
  store i32 32, i32* %13, align 4, !dbg !10618
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !10618
  store i32 0, i32* %14, align 4, !dbg !10618
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !10618
  store i32 0, i32* %15, align 4, !dbg !10618
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !10618
  store i32 6, i32* %16, align 4, !dbg !10618
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !10620
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !10620
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #25, !dbg !10621
  call void @llvm.dbg.value(metadata i32 %19, metadata !10595, metadata !DIExpression()), !dbg !10606
  %20 = icmp eq i32 %19, 0, !dbg !10622
  br i1 %20, label %21, label %30, !dbg !10624

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !10618
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !10608
  call void @llvm.dbg.value(metadata i32 %23, metadata !10611, metadata !DIExpression()) #23, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %23, metadata !10594, metadata !DIExpression()), !dbg !10606
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #24, !dbg !10625
  store i32 %24, i32* %22, align 4, !dbg !10626
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #24, !dbg !10627
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !10628
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !10629
  call void @llvm.dbg.value(metadata i32 undef, metadata !10630, metadata !DIExpression()) #23, !dbg !10633
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !10635, !srcloc !10636
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !10637
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !10637
  call void %26(%struct.device* noundef nonnull %0) #24, !dbg !10638
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !10639
  %28 = load i8, i8* %27, align 4, !dbg !10639
  %29 = zext i8 %28 to i32, !dbg !10640
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #24, !dbg !10641
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #25, !dbg !10642
  br label %30, !dbg !10643

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #23, !dbg !10644
  ret i32 %19, !dbg !10644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10645 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10649, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i8 0, metadata !10650, metadata !DIExpression()), !dbg !10653
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10654
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10654
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10652, metadata !DIExpression(DW_OP_deref)), !dbg !10653
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10655
  call void @llvm.dbg.value(metadata i32 %4, metadata !10651, metadata !DIExpression()), !dbg !10653
  %5 = icmp slt i32 %4, 0, !dbg !10656
  br i1 %5, label %9, label %6, !dbg !10658

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10659
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10652, metadata !DIExpression()), !dbg !10653
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10660
  br label %9, !dbg !10661

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10653
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10662
  ret i32 %10, !dbg !10662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10665, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.value(metadata i8 2, metadata !10666, metadata !DIExpression()), !dbg !10667
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10668
  %3 = load volatile i32, i32* %2, align 4, !dbg !10668
  %4 = and i32 %3, -64513, !dbg !10669
  %5 = or i32 %4, 2048, !dbg !10670
  store volatile i32 %5, i32* %2, align 4, !dbg !10671
  ret void, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10675, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata i8 1, metadata !10676, metadata !DIExpression()), !dbg !10677
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10678
  %3 = load volatile i32, i32* %2, align 4, !dbg !10678
  %4 = and i32 %3, -64, !dbg !10679
  %5 = or i32 %4, 1, !dbg !10680
  store volatile i32 %5, i32* %2, align 4, !dbg !10681
  ret void, !dbg !10682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10683 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10687, metadata !DIExpression()), !dbg !10688
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10689
  %3 = load volatile i32, i32* %2, align 4, !dbg !10690
  %4 = or i32 %3, 1, !dbg !10690
  store volatile i32 %4, i32* %2, align 4, !dbg !10690
  ret void, !dbg !10691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10692 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10696, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10697, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.value(metadata i32 0, metadata !10698, metadata !DIExpression()), !dbg !10699
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10700
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !10700
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10701
  %5 = load i8, i8* %4, align 4, !dbg !10701
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10702
  ret i32 %6, !dbg !10703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !10704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10706, metadata !DIExpression()), !dbg !10707
  tail call fastcc void @__NVIC_SetPriority.137() #25, !dbg !10708
  store i32 19999, i32* @last_load, align 4, !dbg !10709
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10710
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10711
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10712
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10713
  %3 = or i32 %2, 7, !dbg !10713
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10713
  ret i32 0, !dbg !10714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.137() unnamed_addr #16 !dbg !10715 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10717, metadata !DIExpression()), !dbg !10719
  call void @llvm.dbg.value(metadata i32 1, metadata !10718, metadata !DIExpression()), !dbg !10719
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10720
  ret void, !dbg !10723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10724 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10726, metadata !DIExpression()), !dbg !10728
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10729
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10730
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10731
  %5 = add i32 %4, %3, !dbg !10731
  store i32 %5, i32* @cycle_count, align 4, !dbg !10731
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10732
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10733
  %7 = sub i32 %5, %6, !dbg !10736
  %8 = udiv i32 %7, 20000, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %8, metadata !10727, metadata !DIExpression()), !dbg !10728
  %9 = mul nuw i32 %8, 20000, !dbg !10738
  %10 = add i32 %9, %6, !dbg !10739
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10739
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10740
  tail call void @z_arm_int_exit() #24, !dbg !10741
  ret void, !dbg !10742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !10743 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %1, metadata !10745, metadata !DIExpression()), !dbg !10749
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %2, metadata !10746, metadata !DIExpression()), !dbg !10749
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %3, metadata !10747, metadata !DIExpression()), !dbg !10749
  %4 = and i32 %2, 65536, !dbg !10752
  %5 = icmp ne i32 %4, 0, !dbg !10752
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10754
  %8 = load i32, i32* @last_load, align 4, !dbg !10749
  br i1 %7, label %9, label %13, !dbg !10754

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10755
  %11 = add i32 %10, %8, !dbg !10755
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10755
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10757
  br label %13, !dbg !10758

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10759
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10760
  %16 = add i32 %14, %15, !dbg !10761
  ret i32 %16, !dbg !10762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10767, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i1 %1, metadata !10768, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10780
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10781
  br i1 %4, label %5, label %8, !dbg !10781

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10783
  %7 = and i32 %6, -2, !dbg !10783
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10783
  store i32 -16777216, i32* @last_load, align 4, !dbg !10785
  br label %60, !dbg !10786

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10787
  call void @llvm.dbg.value(metadata i32 %9, metadata !10772, metadata !DIExpression()), !dbg !10780
  br i1 %3, label %18, label %10, !dbg !10788

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10788
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()), !dbg !10780
  %12 = icmp slt i32 %11, 1, !dbg !10789
  br i1 %12, label %18, label %13, !dbg !10789

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !10789
  %15 = select i1 %14, i32 %11, i32 837, !dbg !10789
  %16 = mul nuw nsw i32 %15, 20000, !dbg !10789
  %17 = add nuw nsw i32 %16, 19999, !dbg !10789
  br label %18, !dbg !10789

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10790, metadata !DIExpression()) #23, !dbg !10797
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10799, !srcloc !10805
  call void @llvm.dbg.value(metadata i32 undef, metadata !10802, metadata !DIExpression()) #23, !dbg !10806
  call void @llvm.dbg.value(metadata i32 undef, metadata !10803, metadata !DIExpression()) #23, !dbg !10806
  call void @llvm.dbg.value(metadata i32 undef, metadata !10796, metadata !DIExpression()) #23, !dbg !10797
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10807
  br i1 %21, label %23, label %22, !dbg !10810

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #24, !dbg !10811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.141, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #24, !dbg !10811
  unreachable, !dbg !10811

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %24, metadata !10802, metadata !DIExpression()) #23, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %24, metadata !10796, metadata !DIExpression()) #23, !dbg !10797
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %24, metadata !10773, metadata !DIExpression()), !dbg !10780
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %25, metadata !10778, metadata !DIExpression()), !dbg !10780
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10815
  call void @llvm.dbg.value(metadata i32 %26, metadata !10770, metadata !DIExpression()), !dbg !10780
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10816
  %28 = add i32 %27, %25, !dbg !10816
  store i32 %28, i32* @cycle_count, align 4, !dbg !10816
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10817
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10818
  %30 = sub i32 %28, %29, !dbg !10819
  call void @llvm.dbg.value(metadata i32 %30, metadata !10779, metadata !DIExpression()), !dbg !10780
  %31 = icmp slt i32 %30, 0, !dbg !10820
  br i1 %31, label %41, label %32, !dbg !10822

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()), !dbg !10780
  %33 = add nuw i32 %19, %30, !dbg !10823
  %34 = urem i32 %33, 20000, !dbg !10825
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10769, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10780
  %35 = sub nuw nsw i32 %19, %34, !dbg !10826
  call void @llvm.dbg.value(metadata i32 %35, metadata !10769, metadata !DIExpression()), !dbg !10780
  %36 = icmp ugt i32 %35, 1250, !dbg !10827
  br i1 %36, label %37, label %39, !dbg !10827

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10769, metadata !DIExpression()), !dbg !10780
  %38 = icmp ugt i32 %35, 16740000, !dbg !10828
  br i1 %38, label %41, label %39, !dbg !10830

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10831
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %43, metadata !10771, metadata !DIExpression()), !dbg !10780
  %44 = add nsw i32 %42, -1, !dbg !10833
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10834
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10835
  %45 = icmp ult i32 %26, %43, !dbg !10836
  br i1 %45, label %46, label %51, !dbg !10838

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10839
  %48 = add i32 %26, %9, !dbg !10841
  %49 = sub i32 %48, %43, !dbg !10842
  %50 = add i32 %49, %47, !dbg !10839
  br label %55, !dbg !10843

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10844
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10846
  %54 = add i32 %52, %53, !dbg !10846
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10847
  store i32 %56, i32* @cycle_count, align 4, !dbg !10847
  call void @llvm.dbg.value(metadata i32 undef, metadata !10848, metadata !DIExpression()) #23, !dbg !10854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10853, metadata !DIExpression()) #23, !dbg !10854
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10856
  br i1 %57, label %59, label %58, !dbg !10859

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 194) #24, !dbg !10860
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.143, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10860
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 194) #24, !dbg !10860
  unreachable, !dbg !10860

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10848, metadata !DIExpression()) #23, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %24, metadata !10862, metadata !DIExpression()) #23, !dbg !10865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10867, !srcloc !10868
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10790, metadata !DIExpression()) #23, !dbg !10874
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10876, !srcloc !10805
  call void @llvm.dbg.value(metadata i32 undef, metadata !10802, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10803, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10796, metadata !DIExpression()) #23, !dbg !10874
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10879
  br i1 %2, label %4, label %3, !dbg !10880

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #24, !dbg !10881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.141, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #24, !dbg !10881
  unreachable, !dbg !10881

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10802, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10796, metadata !DIExpression()) #23, !dbg !10874
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10872, metadata !DIExpression()), !dbg !10883
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10884
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10885
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10886
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10873, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10883
  call void @llvm.dbg.value(metadata i32 undef, metadata !10848, metadata !DIExpression()) #23, !dbg !10887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10853, metadata !DIExpression()) #23, !dbg !10887
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10889
  br i1 %8, label %10, label %9, !dbg !10890

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 194) #24, !dbg !10891
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.143, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10891
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 194) #24, !dbg !10891
  unreachable, !dbg !10891

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10892
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10873, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10883
  %12 = sub i32 %11, %7, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %12, metadata !10873, metadata !DIExpression()), !dbg !10883
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %13, metadata !10802, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %13, metadata !10796, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %13, metadata !10872, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.value(metadata i32 undef, metadata !10848, metadata !DIExpression()) #23, !dbg !10887
  call void @llvm.dbg.value(metadata i32 undef, metadata !10862, metadata !DIExpression()) #23, !dbg !10894
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10896, !srcloc !10868
  %14 = udiv i32 %12, 20000, !dbg !10897
  ret i32 %14, !dbg !10898
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10899 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10790, metadata !DIExpression()) #23, !dbg !10903
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10905, !srcloc !10805
  call void @llvm.dbg.value(metadata i32 undef, metadata !10802, metadata !DIExpression()) #23, !dbg !10907
  call void @llvm.dbg.value(metadata i32 undef, metadata !10803, metadata !DIExpression()) #23, !dbg !10907
  call void @llvm.dbg.value(metadata i32 undef, metadata !10796, metadata !DIExpression()) #23, !dbg !10903
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10908
  br i1 %2, label %4, label %3, !dbg !10909

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #24, !dbg !10910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.141, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #24, !dbg !10910
  unreachable, !dbg !10910

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10802, metadata !DIExpression()) #23, !dbg !10907
  call void @llvm.dbg.value(metadata i32 undef, metadata !10796, metadata !DIExpression()) #23, !dbg !10903
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10901, metadata !DIExpression()), !dbg !10912
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10913
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10914
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10902, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10912
  call void @llvm.dbg.value(metadata i32 undef, metadata !10848, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10853, metadata !DIExpression()) #23, !dbg !10915
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10917
  br i1 %7, label %9, label %8, !dbg !10918

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 194) #24, !dbg !10919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.143, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 194) #24, !dbg !10919
  unreachable, !dbg !10919

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %10, metadata !10902, metadata !DIExpression()), !dbg !10912
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %11, metadata !10802, metadata !DIExpression()) #23, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %11, metadata !10796, metadata !DIExpression()) #23, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %11, metadata !10901, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i32 undef, metadata !10848, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10862, metadata !DIExpression()) #23, !dbg !10921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10923, !srcloc !10868
  ret i32 %10, !dbg !10924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !10925 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10926
  %2 = icmp eq i32 %1, -16777216, !dbg !10928
  br i1 %2, label %3, label %6, !dbg !10929

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10930
  %5 = or i32 %4, 1, !dbg !10930
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10930
  br label %6, !dbg !10932

6:                                                ; preds = %3, %0
  ret void, !dbg !10933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !10934 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10935
  %2 = and i32 %1, -2, !dbg !10935
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10935
  ret void, !dbg !10936
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !10937 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10970, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i8 %1, metadata !10971, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10972, metadata !DIExpression()), !dbg !10973
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10974
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10974
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10973
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10975
  %8 = load i8, i8* %6, align 4, !dbg !10976
  %9 = zext i8 %8 to i32, !dbg !10977
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10977
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10978
  br i1 %11, label %18, label %24, !dbg !10979

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10973
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10975
  %14 = load i8, i8* %6, align 4, !dbg !10976
  %15 = zext i8 %14 to i32, !dbg !10977
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10977
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10978
  br i1 %17, label %18, label %24, !dbg !10979, !llvm.loop !10980

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10982
  %21 = load i8, i8* %20, align 1, !dbg !10982
  %22 = icmp eq i8 %21, %1, !dbg !10985
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10986
  br i1 %22, label %24, label %12, !dbg !10987

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10973
  ret i32 %25, !dbg !10988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #5 !dbg !10989 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10991, metadata !DIExpression()), !dbg !10992
  ret i32 0, !dbg !10993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #16 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !11012, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i8 %1, metadata !11013, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %2, metadata !11014, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i8 0, metadata !11015, metadata !DIExpression()), !dbg !11026
  %4 = icmp eq i8 %1, 0, !dbg !11027
  br i1 %4, label %7, label %5, !dbg !11028

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11027
  br label %8, !dbg !11028

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !11029

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11015, metadata !DIExpression()), !dbg !11026
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !11030
  %11 = load i32, i32* %10, align 4, !dbg !11030
  call void @llvm.dbg.value(metadata i32 %11, metadata !11017, metadata !DIExpression()), !dbg !11031
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !11032
  %13 = load i8, i8* %12, align 4, !dbg !11032
  call void @llvm.dbg.value(metadata i8 %13, metadata !11020, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11031
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !11033
  %15 = load i32, i32* %14, align 4, !dbg !11033
  call void @llvm.dbg.value(metadata i32 %15, metadata !11021, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.value(metadata i8 %13, metadata !11022, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11031
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !11034
  %17 = load i32, i32* %16, align 4, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %17, metadata !11023, metadata !DIExpression()), !dbg !11031
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !11035
  %19 = load i32, i32* %18, align 4, !dbg !11035
  call void @llvm.dbg.value(metadata i32 %19, metadata !11024, metadata !DIExpression()), !dbg !11031
  %20 = and i8 %13, 15, !dbg !11036
  %21 = zext i8 %20 to i32, !dbg !11036
  %22 = lshr i32 %19, 27, !dbg !11037
  %23 = and i32 %22, 16, !dbg !11037
  %24 = or i32 %23, %21, !dbg !11038
  %25 = inttoptr i32 %11 to i32*, !dbg !11039
  store volatile i32 %24, i32* %25, align 4, !dbg !11040
  %26 = icmp eq i32 %15, 0, !dbg !11041
  br i1 %26, label %32, label %27, !dbg !11043

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !11044
  call void @llvm.dbg.value(metadata i8 %28, metadata !11022, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11031
  %29 = and i8 %28, 7, !dbg !11045
  %30 = zext i8 %29 to i32, !dbg !11045
  %31 = inttoptr i32 %15 to i32*, !dbg !11047
  store volatile i32 %30, i32* %31, align 4, !dbg !11048
  br label %32, !dbg !11049

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !11050
  br i1 %33, label %37, label %34, !dbg !11052

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !11053
  %36 = inttoptr i32 %17 to i32*, !dbg !11055
  store volatile i32 %35, i32* %36, align 4, !dbg !11056
  br label %37, !dbg !11057

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %38, metadata !11015, metadata !DIExpression()), !dbg !11026
  %39 = icmp eq i32 %38, %6, !dbg !11027
  br i1 %39, label %7, label %8, !dbg !11028, !llvm.loop !11059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11061 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11118, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i32 %1, metadata !11119, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i32 %2, metadata !11120, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i32 %3, metadata !11121, metadata !DIExpression()), !dbg !11122
  %5 = icmp ult i32 %2, 8, !dbg !11123
  br i1 %5, label %7, label %6, !dbg !11126

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 45) #24, !dbg !11127
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 45) #24, !dbg !11127
  unreachable, !dbg !11127

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !11129
  br i1 %8, label %10, label %9, !dbg !11132

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 46) #24, !dbg !11133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 46) #24, !dbg !11133
  unreachable, !dbg !11133

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !11135
  %12 = load volatile i32, i32* %11, align 4, !dbg !11135
  %13 = and i32 %12, -458816, !dbg !11136
  %14 = shl nuw nsw i32 %2, 16, !dbg !11137
  %15 = and i32 %14, 458752, !dbg !11137
  %16 = or i32 %15, %3, !dbg !11138
  %17 = or i32 %16, %13, !dbg !11139
  store volatile i32 %17, i32* %11, align 4, !dbg !11140
  ret void, !dbg !11141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !11142 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11146, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i32 %1, metadata !11147, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i32* %2, metadata !11148, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i32* %3, metadata !11149, metadata !DIExpression()), !dbg !11150
  %5 = icmp ne i32* %2, null, !dbg !11151
  %6 = icmp ne i32* %3, null, !dbg !11151
  %7 = and i1 %5, %6, !dbg !11151
  br i1 %7, label %9, label %8, !dbg !11151

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 61) #24, !dbg !11154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 61) #24, !dbg !11154
  unreachable, !dbg !11154

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !11156
  %11 = load volatile i32, i32* %10, align 4, !dbg !11156
  %12 = lshr i32 %11, 16, !dbg !11157
  %13 = and i32 %12, 7, !dbg !11157
  store i32 %13, i32* %2, align 4, !dbg !11158
  %14 = load volatile i32, i32* %10, align 4, !dbg !11159
  %15 = and i32 %14, 63, !dbg !11160
  store i32 %15, i32* %3, align 4, !dbg !11161
  ret void, !dbg !11162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !11163 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11167, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.value(metadata i32 %1, metadata !11168, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.value(metadata i32 %2, metadata !11169, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.value(metadata i32 %3, metadata !11170, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.value(metadata i32 %4, metadata !11171, metadata !DIExpression()), !dbg !11172
  %6 = icmp ult i32 %3, 8, !dbg !11173
  br i1 %6, label %8, label %7, !dbg !11176

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 75) #24, !dbg !11177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 75) #24, !dbg !11177
  unreachable, !dbg !11177

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !11179
  br i1 %9, label %11, label %10, !dbg !11182

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 76) #24, !dbg !11183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 76) #24, !dbg !11183
  unreachable, !dbg !11183

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !11185
  %13 = load volatile i32, i32* %12, align 4, !dbg !11185
  %14 = and i32 %13, -117899328, !dbg !11186
  %15 = shl i32 %2, 24, !dbg !11187
  %16 = and i32 %15, 117440512, !dbg !11187
  %17 = shl nuw nsw i32 %3, 16, !dbg !11188
  %18 = and i32 %17, 458752, !dbg !11188
  %19 = or i32 %16, %4, !dbg !11189
  %20 = or i32 %19, %18, !dbg !11190
  %21 = or i32 %20, %14, !dbg !11191
  store volatile i32 %21, i32* %12, align 4, !dbg !11192
  ret void, !dbg !11193
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11194 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11199, metadata !DIExpression()), !dbg !11200
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #25, !dbg !11201
  br i1 %2, label %7, label %3, !dbg !11203

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !11204
  %5 = and i32 %4, 127, !dbg !11205
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !11206
  br label %7, !dbg !11207

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !11200
  ret i32 %8, !dbg !11208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11209 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11213, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %1, metadata !11214, metadata !DIExpression()), !dbg !11215
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !11216
  %4 = and i32 %1, 65535, !dbg !11216
  %5 = add i32 %4, %3, !dbg !11216
  %6 = inttoptr i32 %5 to i32*, !dbg !11216
  %7 = load volatile i32, i32* %6, align 4, !dbg !11216
  %8 = and i32 %7, 65536, !dbg !11217
  %9 = icmp ne i32 %8, 0, !dbg !11218
  ret i1 %9, !dbg !11219
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11220 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11222, metadata !DIExpression()), !dbg !11223
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !11224
  br i1 %2, label %8, label %3, !dbg !11226

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !11227
  %5 = and i32 %4, 1, !dbg !11229
  %6 = icmp eq i32 %5, 0, !dbg !11229
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !11230
  br label %8, !dbg !11230

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !11223
  ret i32 %9, !dbg !11231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11232 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11234, metadata !DIExpression()), !dbg !11238
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #25, !dbg !11239
  br i1 %2, label %40, label %3, !dbg !11241

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11242
  %5 = trunc i32 %4 to i8, !dbg !11242
  %6 = and i8 %5, 127, !dbg !11242
  call void @llvm.dbg.value(metadata i8 %6, metadata !11235, metadata !DIExpression()), !dbg !11238
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11243
  %8 = lshr i32 %7, 21, !dbg !11244
  %9 = and i32 %8, 3, !dbg !11245
  call void @llvm.dbg.value(metadata i32 %9, metadata !11236, metadata !DIExpression()), !dbg !11238
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !11246
  %11 = load i32, i32* %10, align 4, !dbg !11246
  call void @llvm.dbg.value(metadata i8 undef, metadata !11236, metadata !DIExpression()), !dbg !11238
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !11247
  %13 = load volatile i32, i32* %12, align 4, !dbg !11247
  %14 = and i32 %13, 32768, !dbg !11249
  %15 = icmp eq i32 %14, 0, !dbg !11249
  br i1 %15, label %36, label %16, !dbg !11250

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !11251
  %18 = and i32 %17, 32767, !dbg !11253
  %19 = uitofp i32 %18 to float, !dbg !11254
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !11255
  %21 = load volatile i32, i32* %20, align 4, !dbg !11255
  %22 = and i32 %21, 1073741823, !dbg !11256
  %23 = uitofp i32 %22 to float, !dbg !11257
  %24 = fdiv float %19, %23, !dbg !11258
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !11259
  %26 = load volatile i32, i32* %25, align 4, !dbg !11259
  %27 = and i32 %26, 1073741823, !dbg !11260
  %28 = uitofp i32 %27 to float, !dbg !11261
  %29 = fmul float %24, %28, !dbg !11262
  call void @llvm.dbg.value(metadata float %29, metadata !11237, metadata !DIExpression()), !dbg !11238
  %30 = lshr i32 24000000, %11, !dbg !11263
  %31 = uitofp i32 %30 to float, !dbg !11264
  %32 = uitofp i8 %6 to float, !dbg !11265
  %33 = fadd float %29, %32, !dbg !11266
  %34 = fmul float %33, %31, !dbg !11267
  %35 = fptoui float %34 to i32, !dbg !11268
  br label %40, !dbg !11269

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !11270
  %38 = zext i8 %6 to i32, !dbg !11272
  %39 = mul nuw i32 %37, %38, !dbg !11273
  br label %40, !dbg !11274

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !11238
  ret i32 %41, !dbg !11275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11276 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11278, metadata !DIExpression()), !dbg !11279
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #25, !dbg !11280
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !11279
  ret i32 %3, !dbg !11282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11283 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11285, metadata !DIExpression()), !dbg !11290
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #25, !dbg !11291
  br i1 %2, label %47, label %3, !dbg !11293

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11294
  %5 = trunc i32 %4 to i8, !dbg !11294
  %6 = and i8 %5, 127, !dbg !11294
  call void @llvm.dbg.value(metadata i8 %6, metadata !11286, metadata !DIExpression()), !dbg !11290
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11295
  %8 = lshr i32 %7, 22, !dbg !11296
  %9 = and i32 %8, 3, !dbg !11297
  call void @llvm.dbg.value(metadata i32 %8, metadata !11287, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11290
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11298
  %11 = lshr i32 %10, 19, !dbg !11299
  %12 = and i32 %11, 3, !dbg !11300
  call void @llvm.dbg.value(metadata i32 %11, metadata !11288, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11290
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11301
  %14 = load i32, i32* %13, align 4, !dbg !11301
  call void @llvm.dbg.value(metadata i8 undef, metadata !11287, metadata !DIExpression()), !dbg !11290
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !11302
  %16 = load i32, i32* %15, align 4, !dbg !11302
  call void @llvm.dbg.value(metadata i8 undef, metadata !11288, metadata !DIExpression()), !dbg !11290
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !11303
  %18 = load volatile i32, i32* %17, align 4, !dbg !11303
  %19 = and i32 %18, 32768, !dbg !11305
  %20 = icmp eq i32 %19, 0, !dbg !11305
  br i1 %20, label %42, label %21, !dbg !11306

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11307
  %23 = and i32 %22, 32767, !dbg !11309
  %24 = uitofp i32 %23 to float, !dbg !11310
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !11311
  %26 = load volatile i32, i32* %25, align 4, !dbg !11311
  %27 = and i32 %26, 1073741823, !dbg !11312
  %28 = uitofp i32 %27 to float, !dbg !11313
  %29 = fdiv float %24, %28, !dbg !11314
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !11315
  %31 = load volatile i32, i32* %30, align 4, !dbg !11315
  %32 = and i32 %31, 1073741823, !dbg !11316
  %33 = uitofp i32 %32 to float, !dbg !11317
  %34 = fmul float %29, %33, !dbg !11318
  call void @llvm.dbg.value(metadata float %34, metadata !11289, metadata !DIExpression()), !dbg !11290
  %35 = lshr i32 24000000, %16, !dbg !11319
  %36 = lshr i32 %35, %14, !dbg !11320
  %37 = uitofp i32 %36 to float, !dbg !11321
  %38 = uitofp i8 %6 to float, !dbg !11322
  %39 = fadd float %34, %38, !dbg !11323
  %40 = fmul float %39, %37, !dbg !11324
  %41 = fptoui float %40 to i32, !dbg !11325
  br label %47, !dbg !11326

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11327
  %44 = lshr i32 %43, %14, !dbg !11329
  %45 = zext i8 %6 to i32, !dbg !11330
  %46 = mul nuw i32 %44, %45, !dbg !11331
  br label %47, !dbg !11332

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11290
  ret i32 %48, !dbg !11333
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11334 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11336, metadata !DIExpression()), !dbg !11341
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #25, !dbg !11342
  br i1 %2, label %47, label %3, !dbg !11344

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11345
  %5 = trunc i32 %4 to i8, !dbg !11345
  %6 = and i8 %5, 127, !dbg !11345
  call void @llvm.dbg.value(metadata i8 %6, metadata !11337, metadata !DIExpression()), !dbg !11341
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11346
  %8 = lshr i32 %7, 22, !dbg !11347
  %9 = and i32 %8, 3, !dbg !11348
  call void @llvm.dbg.value(metadata i32 %8, metadata !11338, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11341
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11349
  %11 = lshr i32 %10, 19, !dbg !11350
  %12 = and i32 %11, 3, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %11, metadata !11339, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11341
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11352
  %14 = load i32, i32* %13, align 4, !dbg !11352
  call void @llvm.dbg.value(metadata i8 undef, metadata !11338, metadata !DIExpression()), !dbg !11341
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !11353
  %16 = load i32, i32* %15, align 4, !dbg !11353
  call void @llvm.dbg.value(metadata i8 undef, metadata !11339, metadata !DIExpression()), !dbg !11341
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !11354
  %18 = load volatile i32, i32* %17, align 4, !dbg !11354
  %19 = and i32 %18, 32768, !dbg !11356
  %20 = icmp eq i32 %19, 0, !dbg !11356
  br i1 %20, label %42, label %21, !dbg !11357

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11358
  %23 = and i32 %22, 32767, !dbg !11360
  %24 = uitofp i32 %23 to float, !dbg !11361
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !11362
  %26 = load volatile i32, i32* %25, align 4, !dbg !11362
  %27 = and i32 %26, 1073741823, !dbg !11363
  %28 = uitofp i32 %27 to float, !dbg !11364
  %29 = fdiv float %24, %28, !dbg !11365
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !11366
  %31 = load volatile i32, i32* %30, align 4, !dbg !11366
  %32 = and i32 %31, 1073741823, !dbg !11367
  %33 = uitofp i32 %32 to float, !dbg !11368
  %34 = fmul float %29, %33, !dbg !11369
  call void @llvm.dbg.value(metadata float %34, metadata !11340, metadata !DIExpression()), !dbg !11341
  %35 = lshr i32 24000000, %16, !dbg !11370
  %36 = lshr i32 %35, %14, !dbg !11371
  %37 = uitofp i32 %36 to float, !dbg !11372
  %38 = uitofp i8 %6 to float, !dbg !11373
  %39 = fadd float %34, %38, !dbg !11374
  %40 = fmul float %39, %37, !dbg !11375
  %41 = fptoui float %40 to i32, !dbg !11376
  br label %47, !dbg !11377

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11378
  %44 = lshr i32 %43, %14, !dbg !11380
  %45 = zext i8 %6 to i32, !dbg !11381
  %46 = mul nuw i32 %44, %45, !dbg !11382
  br label %47, !dbg !11383

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11341
  ret i32 %48, !dbg !11384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11385 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11389, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.value(metadata i32 %1, metadata !11390, metadata !DIExpression()), !dbg !11393
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !11394
  br i1 %3, label %4, label %5, !dbg !11397

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 260) #24, !dbg !11398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 260) #24, !dbg !11398
  unreachable, !dbg !11398

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #25, !dbg !11400
  call void @llvm.dbg.value(metadata i32 %6, metadata !11391, metadata !DIExpression()), !dbg !11393
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #25, !dbg !11401
  call void @llvm.dbg.value(metadata i32 %7, metadata !11392, metadata !DIExpression()), !dbg !11393
  %8 = udiv i32 %6, %7, !dbg !11402
  %9 = mul i32 %8, 18, !dbg !11403
  ret i32 %9, !dbg !11404
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11405 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11407, metadata !DIExpression()), !dbg !11409
  call void @llvm.dbg.value(metadata i32 %1, metadata !11408, metadata !DIExpression()), !dbg !11409
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !11410
  %4 = and i32 %1, 65535, !dbg !11410
  %5 = add i32 %4, %3, !dbg !11410
  %6 = inttoptr i32 %5 to i32*, !dbg !11410
  %7 = load volatile i32, i32* %6, align 4, !dbg !11410
  %8 = lshr i32 %1, 16, !dbg !11411
  %9 = and i32 %8, 31, !dbg !11411
  %10 = lshr i32 %7, %9, !dbg !11412
  %11 = and i32 %10, 63, !dbg !11413
  ret i32 %11, !dbg !11414
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct.sensor_msg* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !11415 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11442, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata %struct.sensor_msg* %1, metadata !11443, metadata !DIExpression()), !dbg !11446
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11447
  store volatile i32 0, i32* %3, align 4, !dbg !11448
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11449
  store volatile i32 0, i32* %4, align 4, !dbg !11450
  %5 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 0, !dbg !11451
  %6 = load i32, i32* %5, align 4, !dbg !11451
  call void @llvm.dbg.value(metadata i32 %6, metadata !11444, metadata !DIExpression()), !dbg !11446
  %7 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 1, !dbg !11452
  %8 = load i32, i32* %7, align 4, !dbg !11452
  %9 = icmp eq i32 %8, 1, !dbg !11454
  %10 = shl nuw i32 1, %6, !dbg !11455
  br i1 %9, label %11, label %15, !dbg !11456

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11457
  %13 = load volatile i32, i32* %12, align 4, !dbg !11458
  %14 = or i32 %13, %10, !dbg !11458
  store volatile i32 %14, i32* %12, align 4, !dbg !11458
  br label %20, !dbg !11457

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !11459
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11460
  %18 = load volatile i32, i32* %17, align 4, !dbg !11461
  %19 = and i32 %18, %16, !dbg !11461
  store volatile i32 %19, i32* %17, align 4, !dbg !11461
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !11462
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !11464
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !11464
  %24 = add i32 %6, -16, !dbg !11464
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !11464
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !11464
  call void @llvm.dbg.value(metadata i32* %26, metadata !11445, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata i32 %25, metadata !11444, metadata !DIExpression()), !dbg !11446
  %27 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 2, !dbg !11465
  %28 = load i32, i32* %27, align 4, !dbg !11465
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !11466

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !11467
  %31 = shl i32 3, %30, !dbg !11470
  %32 = xor i32 %31, -1, !dbg !11471
  %33 = load volatile i32, i32* %26, align 4, !dbg !11472
  %34 = and i32 %33, %32, !dbg !11472
  br label %56, !dbg !11473

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !11474
  %37 = shl i32 %25, 1, !dbg !11476
  %38 = shl i32 3, %37, !dbg !11477
  %39 = xor i32 %38, -1, !dbg !11478
  %40 = and i32 %36, %39, !dbg !11479
  %41 = shl nuw i32 1, %37, !dbg !11480
  %42 = or i32 %40, %41, !dbg !11481
  br label %56, !dbg !11482

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !11483
  %45 = shl i32 %25, 1, !dbg !11485
  %46 = shl i32 3, %45, !dbg !11486
  %47 = xor i32 %46, -1, !dbg !11487
  %48 = and i32 %44, %47, !dbg !11488
  %49 = shl i32 2, %45, !dbg !11489
  %50 = or i32 %48, %49, !dbg !11490
  br label %56, !dbg !11491

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !11492
  %53 = shl i32 3, %52, !dbg !11494
  %54 = load volatile i32, i32* %26, align 4, !dbg !11495
  %55 = or i32 %54, %53, !dbg !11495
  br label %56, !dbg !11496

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !11497
  br label %58, !dbg !11498

58:                                               ; preds = %56, %20
  ret void, !dbg !11498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11499 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11504, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %1, metadata !11505, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %2, metadata !11506, metadata !DIExpression()), !dbg !11507
  %4 = icmp ult i32 %1, 32, !dbg !11508
  br i1 %4, label %6, label %5, !dbg !11511

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 113) #24, !dbg !11512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 113) #24, !dbg !11512
  unreachable, !dbg !11512

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !11514
  %8 = shl nuw i32 1, %1, !dbg !11516
  br i1 %7, label %9, label %13, !dbg !11517

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11518
  %11 = load volatile i32, i32* %10, align 4, !dbg !11520
  %12 = or i32 %11, %8, !dbg !11520
  store volatile i32 %12, i32* %10, align 4, !dbg !11520
  br label %18, !dbg !11521

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !11522
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11524
  %16 = load volatile i32, i32* %15, align 4, !dbg !11525
  %17 = and i32 %16, %14, !dbg !11525
  store volatile i32 %17, i32* %15, align 4, !dbg !11525
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !11526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11527 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11531, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i32 %1, metadata !11532, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i1 %2, metadata !11533, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11534
  %4 = icmp ult i32 %1, 32, !dbg !11535
  br i1 %4, label %6, label %5, !dbg !11538

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 135) #24, !dbg !11539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 135) #24, !dbg !11539
  unreachable, !dbg !11539

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !11541
  br i1 %2, label %8, label %12, !dbg !11543

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11544
  %10 = load volatile i32, i32* %9, align 4, !dbg !11545
  %11 = or i32 %10, %7, !dbg !11545
  store volatile i32 %11, i32* %9, align 4, !dbg !11545
  br label %17, !dbg !11544

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !11546
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11547
  %15 = load volatile i32, i32* %14, align 4, !dbg !11548
  %16 = and i32 %15, %13, !dbg !11548
  store volatile i32 %16, i32* %14, align 4, !dbg !11548
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11552, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 %1, metadata !11553, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i1 %2, metadata !11554, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11555
  %4 = icmp ult i32 %1, 32, !dbg !11556
  br i1 %4, label %6, label %5, !dbg !11559

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 152) #24, !dbg !11560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 152) #24, !dbg !11560
  unreachable, !dbg !11560

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !11562
  br i1 %2, label %8, label %12, !dbg !11564

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11565
  %10 = load volatile i32, i32* %9, align 4, !dbg !11566
  %11 = or i32 %10, %7, !dbg !11566
  store volatile i32 %11, i32* %9, align 4, !dbg !11566
  br label %17, !dbg !11565

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !11567
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11568
  %15 = load volatile i32, i32* %14, align 4, !dbg !11569
  %16 = and i32 %15, %13, !dbg !11569
  store volatile i32 %16, i32* %14, align 4, !dbg !11569
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !11571 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11610, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !11611, metadata !DIExpression()), !dbg !11612
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !11613
  br i1 %3, label %4, label %5, !dbg !11616

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 49) #24, !dbg !11617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 49) #24, !dbg !11617
  unreachable, !dbg !11617

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11619
  %7 = load volatile i32, i32* %6, align 4, !dbg !11620
  %8 = and i32 %7, -2, !dbg !11620
  store volatile i32 %8, i32* %6, align 4, !dbg !11620
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #25, !dbg !11621
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !11622
  %10 = load i32, i32* %9, align 4, !dbg !11622
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !11623
  %12 = load i32, i32* %11, align 4, !dbg !11623
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !11624
  %14 = load i32, i32* %13, align 4, !dbg !11624
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !11625
  %16 = load i32, i32* %15, align 4, !dbg !11625
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11626
  %18 = load volatile i32, i32* %17, align 4, !dbg !11627
  %19 = or i32 %10, %12, !dbg !11628
  %20 = or i32 %19, %14, !dbg !11629
  %21 = or i32 %20, %16, !dbg !11630
  %22 = or i32 %21, %18, !dbg !11627
  %23 = or i32 %22, 16384, !dbg !11627
  store volatile i32 %23, i32* %17, align 4, !dbg !11627
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11631
  %25 = load volatile i32, i32* %24, align 4, !dbg !11632
  %26 = or i32 %25, 4, !dbg !11632
  store volatile i32 %26, i32* %24, align 4, !dbg !11632
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !11633
  %28 = load i32, i32* %27, align 4, !dbg !11633
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !11634
  %30 = load i32, i32* %29, align 4, !dbg !11634
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #25, !dbg !11635
  ret void, !dbg !11636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !11637 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11641, metadata !DIExpression()), !dbg !11642
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11643
  %3 = load volatile i32, i32* %2, align 4, !dbg !11644
  %4 = and i32 %3, -2, !dbg !11644
  store volatile i32 %4, i32* %2, align 4, !dbg !11644
  store volatile i32 0, i32* %2, align 4, !dbg !11645
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11646
  store volatile i32 1, i32* %5, align 4, !dbg !11647
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11648
  store volatile i32 1792, i32* %6, align 4, !dbg !11649
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11650
  store volatile i32 32768, i32* %7, align 4, !dbg !11651
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11652
  store volatile i32 2049, i32* %8, align 4, !dbg !11653
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !11654
  store volatile i32 43, i32* %9, align 4, !dbg !11655
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !11656
  store volatile i32 0, i32* %10, align 4, !dbg !11657
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11658
  store volatile i32 0, i32* %11, align 4, !dbg !11659
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !11660
  store volatile i32 96, i32* %12, align 4, !dbg !11661
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11662
  store volatile i32 0, i32* %13, align 4, !dbg !11663
  %14 = load volatile i32, i32* %5, align 4, !dbg !11664
  %15 = and i32 %14, -2, !dbg !11664
  store volatile i32 %15, i32* %5, align 4, !dbg !11664
  br label %16, !dbg !11665

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !11666
  %18 = and i32 %17, 1, !dbg !11667
  %19 = icmp eq i32 %18, 0, !dbg !11668
  br i1 %19, label %16, label %20, !dbg !11665, !llvm.loop !11669

20:                                               ; preds = %16
  ret void, !dbg !11671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !11672 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11676, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %1, metadata !11677, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %2, metadata !11678, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 1, metadata !11683, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %1, metadata !11679, metadata !DIExpression()), !dbg !11689
  %4 = shl i32 %2, 4, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %4, metadata !11680, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 1, metadata !11681, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %1, metadata !11679, metadata !DIExpression()), !dbg !11689
  %5 = icmp eq i32 %4, 0, !dbg !11691
  br i1 %5, label %11, label %6, !dbg !11692

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11679, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %8, metadata !11680, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %8, metadata !11681, metadata !DIExpression()), !dbg !11689
  %9 = urem i32 %7, %8, !dbg !11693
  call void @llvm.dbg.value(metadata i32 %8, metadata !11679, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %9, metadata !11680, metadata !DIExpression()), !dbg !11689
  %10 = icmp eq i32 %9, 0, !dbg !11691
  br i1 %10, label %11, label %6, !dbg !11692, !llvm.loop !11695

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !11689
  %13 = udiv i32 %1, %12, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %13, metadata !11679, metadata !DIExpression()), !dbg !11689
  %14 = udiv i32 %4, %12, !dbg !11698
  call void @llvm.dbg.value(metadata i32 %14, metadata !11680, metadata !DIExpression()), !dbg !11689
  %15 = icmp ugt i32 %13, 458745, !dbg !11699
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !11700
  br i1 %17, label %18, label %33, !dbg !11700

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !11701
  %20 = udiv i32 %19, 458745, !dbg !11702
  %21 = add nuw nsw i32 %20, 1, !dbg !11703
  call void @llvm.dbg.value(metadata i32 %21, metadata !11684, metadata !DIExpression()), !dbg !11704
  %22 = add i32 %14, -1, !dbg !11705
  %23 = udiv i32 %22, 65535, !dbg !11706
  %24 = add nuw nsw i32 %23, 1, !dbg !11707
  call void @llvm.dbg.value(metadata i32 %24, metadata !11687, metadata !DIExpression()), !dbg !11704
  %25 = icmp ugt i32 %21, %24, !dbg !11708
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !11709
  call void @llvm.dbg.value(metadata i32 %26, metadata !11688, metadata !DIExpression()), !dbg !11704
  %27 = udiv i32 %13, %26, !dbg !11710
  call void @llvm.dbg.value(metadata i32 %27, metadata !11679, metadata !DIExpression()), !dbg !11689
  %28 = udiv i32 %14, %26, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %28, metadata !11680, metadata !DIExpression()), !dbg !11689
  %29 = icmp ugt i32 %26, %13, !dbg !11712
  %30 = select i1 %29, i32 1, i32 %27, !dbg !11714
  call void @llvm.dbg.value(metadata i32 %30, metadata !11679, metadata !DIExpression()), !dbg !11689
  %31 = icmp ugt i32 %26, %14, !dbg !11715
  %32 = select i1 %31, i32 1, i32 %28, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %32, metadata !11680, metadata !DIExpression()), !dbg !11689
  br label %33, !dbg !11718

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !11689
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !11689
  call void @llvm.dbg.value(metadata i32 %35, metadata !11679, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %34, metadata !11680, metadata !DIExpression()), !dbg !11689
  %36 = add i32 %35, -1, !dbg !11719
  %37 = udiv i32 %36, 65535, !dbg !11720
  %38 = add nuw nsw i32 %37, 1, !dbg !11721
  call void @llvm.dbg.value(metadata i32 %38, metadata !11683, metadata !DIExpression()), !dbg !11689
  %39 = add nsw i32 %37, -1, !dbg !11722
  %40 = icmp ult i32 %39, 6, !dbg !11722
  br i1 %40, label %41, label %44, !dbg !11722

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !11722
  %43 = load i32, i32* %42, align 4, !dbg !11722
  br label %44, !dbg !11722

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !11723
  call void @llvm.dbg.value(metadata i32 %45, metadata !11682, metadata !DIExpression()), !dbg !11689
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11725
  %47 = load volatile i32, i32* %46, align 4, !dbg !11726
  %48 = and i32 %47, -897, !dbg !11726
  store volatile i32 %48, i32* %46, align 4, !dbg !11726
  %49 = load volatile i32, i32* %46, align 4, !dbg !11727
  %50 = or i32 %49, %45, !dbg !11727
  store volatile i32 %50, i32* %46, align 4, !dbg !11727
  %51 = add i32 %34, 65535, !dbg !11728
  %52 = and i32 %51, 65535, !dbg !11728
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !11729
  store volatile i32 %52, i32* %53, align 4, !dbg !11730
  %54 = udiv i32 %35, %38, !dbg !11731
  %55 = add i32 %54, 65535, !dbg !11731
  %56 = and i32 %55, 65535, !dbg !11731
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !11732
  store volatile i32 %56, i32* %57, align 4, !dbg !11733
  %58 = mul nuw nsw i32 %38, 1000, !dbg !11734
  %59 = udiv i32 %1, %58, !dbg !11734
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11735
  store volatile i32 %59, i32* %60, align 4, !dbg !11736
  ret void, !dbg !11737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11738 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11742, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i32 %1, metadata !11743, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i1 %2, metadata !11744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11745
  %4 = and i32 %1, 4, !dbg !11746
  %5 = icmp eq i32 %4, 0, !dbg !11746
  %6 = and i32 %1, 2, !dbg !11746
  %7 = icmp eq i32 %6, 0, !dbg !11746
  %8 = and i32 %1, 6, !dbg !11746
  %9 = icmp eq i32 %8, 0, !dbg !11746
  br i1 %9, label %10, label %11, !dbg !11746

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 196) #24, !dbg !11749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 196) #24, !dbg !11749
  unreachable, !dbg !11749

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !11751

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !11752

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11755
  %15 = load volatile i32, i32* %14, align 4, !dbg !11757
  %16 = or i32 %15, 512, !dbg !11757
  store volatile i32 %16, i32* %14, align 4, !dbg !11757
  br label %17, !dbg !11755

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !11758

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11759
  %20 = load volatile i32, i32* %19, align 4, !dbg !11761
  %21 = or i32 %20, 2, !dbg !11761
  store volatile i32 %21, i32* %19, align 4, !dbg !11761
  br label %32, !dbg !11759

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !11762

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11764
  %25 = load volatile i32, i32* %24, align 4, !dbg !11766
  %26 = and i32 %25, -513, !dbg !11766
  store volatile i32 %26, i32* %24, align 4, !dbg !11766
  br label %27, !dbg !11764

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !11767

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11768
  %30 = load volatile i32, i32* %29, align 4, !dbg !11770
  %31 = and i32 %30, -3, !dbg !11770
  store volatile i32 %31, i32* %29, align 4, !dbg !11770
  br label %32, !dbg !11768

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11772 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11776, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i1 %1, metadata !11777, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11778
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11779
  %4 = load volatile i32, i32* %3, align 4, !dbg !11779
  %5 = and i32 %4, 2, !dbg !11781
  %6 = select i1 %1, i32 0, i32 -3, !dbg !11781
  %7 = or i32 %5, %6, !dbg !11781
  store volatile i32 %7, i32* %3, align 4, !dbg !11779
  ret void, !dbg !11782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11783 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11785, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i1 %1, metadata !11786, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11787
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11788
  %4 = load volatile i32, i32* %3, align 4, !dbg !11788
  %5 = and i32 %4, -17, !dbg !11790
  %6 = select i1 %1, i32 0, i32 16, !dbg !11790
  %7 = or i32 %5, %6, !dbg !11790
  store volatile i32 %7, i32* %3, align 4, !dbg !11788
  ret void, !dbg !11791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11792 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11794, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.value(metadata i32 %1, metadata !11795, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.value(metadata i1 %2, metadata !11796, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11799
  call void @llvm.dbg.value(metadata i32* null, metadata !11797, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.value(metadata i32 0, metadata !11798, metadata !DIExpression()), !dbg !11799
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11800
  %5 = lshr i32 %1, 16, !dbg !11801
  %6 = add i32 %5, %4, !dbg !11802
  %7 = inttoptr i32 %6 to i32*, !dbg !11803
  call void @llvm.dbg.value(metadata i32* %7, metadata !11797, metadata !DIExpression()), !dbg !11799
  %8 = and i32 %1, 65535, !dbg !11804
  %9 = shl nuw i32 1, %8, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %9, metadata !11798, metadata !DIExpression()), !dbg !11799
  br i1 %2, label %10, label %13, !dbg !11806

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11807
  %12 = or i32 %11, %9, !dbg !11807
  br label %17, !dbg !11809

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11810
  %15 = load volatile i32, i32* %7, align 4, !dbg !11811
  %16 = and i32 %15, %14, !dbg !11811
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11812
  ret void, !dbg !11813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !11814 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11818, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata i32 %1, metadata !11819, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata i32* null, metadata !11820, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata i32 0, metadata !11821, metadata !DIExpression()), !dbg !11822
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11823
  %4 = lshr i32 %1, 16, !dbg !11824
  %5 = add i32 %4, %3, !dbg !11825
  %6 = inttoptr i32 %5 to i32*, !dbg !11826
  call void @llvm.dbg.value(metadata i32* %6, metadata !11820, metadata !DIExpression()), !dbg !11822
  %7 = and i32 %1, 65535, !dbg !11827
  %8 = shl nuw i32 1, %7, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %8, metadata !11821, metadata !DIExpression()), !dbg !11822
  store volatile i32 %8, i32* %6, align 4, !dbg !11829
  ret void, !dbg !11830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11831 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11833, metadata !DIExpression()), !dbg !11838
  call void @llvm.dbg.value(metadata i32 %1, metadata !11834, metadata !DIExpression()), !dbg !11838
  call void @llvm.dbg.value(metadata i1 %2, metadata !11835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11838
  call void @llvm.dbg.value(metadata i32* null, metadata !11836, metadata !DIExpression()), !dbg !11838
  call void @llvm.dbg.value(metadata i32 0, metadata !11837, metadata !DIExpression()), !dbg !11838
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11839
  %5 = lshr i32 %1, 16, !dbg !11840
  %6 = add i32 %5, %4, !dbg !11841
  %7 = inttoptr i32 %6 to i32*, !dbg !11842
  call void @llvm.dbg.value(metadata i32* %7, metadata !11836, metadata !DIExpression()), !dbg !11838
  %8 = and i32 %1, 65535, !dbg !11843
  %9 = shl nuw i32 1, %8, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %9, metadata !11837, metadata !DIExpression()), !dbg !11838
  br i1 %2, label %10, label %13, !dbg !11845

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11846
  %12 = or i32 %11, %9, !dbg !11846
  br label %17, !dbg !11848

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11849
  %15 = load volatile i32, i32* %7, align 4, !dbg !11850
  %16 = and i32 %15, %14, !dbg !11850
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11851
  ret void, !dbg !11852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11853 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11855, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i1 %1, metadata !11856, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11857
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11858
  %4 = load volatile i32, i32* %3, align 4, !dbg !11858
  %5 = and i32 %4, -16385, !dbg !11860
  %6 = select i1 %1, i32 0, i32 16384, !dbg !11860
  %7 = or i32 %5, %6, !dbg !11860
  store volatile i32 %7, i32* %3, align 4, !dbg !11858
  ret void, !dbg !11861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11862 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11864, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i1 %1, metadata !11865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11866
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11867
  %4 = load volatile i32, i32* %3, align 4, !dbg !11867
  %5 = and i32 %4, -8193, !dbg !11869
  %6 = select i1 %1, i32 8192, i32 0, !dbg !11869
  %7 = or i32 %5, %6, !dbg !11869
  store volatile i32 %7, i32* %3, align 4, !dbg !11867
  ret void, !dbg !11870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11871 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11873, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.value(metadata i1 %1, metadata !11874, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11875
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11876
  %4 = load volatile i32, i32* %3, align 4, !dbg !11876
  %5 = and i32 %4, -4097, !dbg !11878
  %6 = select i1 %1, i32 4096, i32 0, !dbg !11878
  %7 = or i32 %5, %6, !dbg !11878
  store volatile i32 %7, i32* %3, align 4, !dbg !11876
  ret void, !dbg !11879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11880 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11882, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 %1, metadata !11883, metadata !DIExpression()), !dbg !11884
  %3 = and i32 %1, -65, !dbg !11885
  %4 = icmp eq i32 %3, 0, !dbg !11885
  br i1 %4, label %6, label %5, !dbg !11885

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 396) #24, !dbg !11888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 396) #24, !dbg !11888
  unreachable, !dbg !11888

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !11885
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11890
  %9 = load volatile i32, i32* %8, align 4, !dbg !11890
  %10 = and i32 %9, -65, !dbg !11892
  %11 = select i1 %7, i32 0, i32 64, !dbg !11892
  %12 = or i32 %10, %11, !dbg !11892
  store volatile i32 %12, i32* %8, align 4, !dbg !11890
  ret void, !dbg !11893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11894 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11896, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.value(metadata i1 %1, metadata !11897, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11898
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11899
  %4 = load volatile i32, i32* %3, align 4, !dbg !11899
  %5 = and i32 %4, -1025, !dbg !11901
  %6 = select i1 %1, i32 1024, i32 0, !dbg !11901
  %7 = or i32 %5, %6, !dbg !11901
  store volatile i32 %7, i32* %3, align 4, !dbg !11899
  ret void, !dbg !11902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11903 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11905, metadata !DIExpression()), !dbg !11907
  call void @llvm.dbg.value(metadata i1 %1, metadata !11906, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11907
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11908
  %4 = load volatile i32, i32* %3, align 4, !dbg !11908
  %5 = and i32 %4, -513, !dbg !11910
  %6 = select i1 %1, i32 512, i32 0, !dbg !11910
  %7 = or i32 %5, %6, !dbg !11910
  store volatile i32 %7, i32* %3, align 4, !dbg !11908
  ret void, !dbg !11911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11912 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11914, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata i1 %1, metadata !11915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11916
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11917
  %4 = load volatile i32, i32* %3, align 4, !dbg !11917
  %5 = and i32 %4, -257, !dbg !11919
  %6 = select i1 %1, i32 256, i32 0, !dbg !11919
  %7 = or i32 %5, %6, !dbg !11919
  store volatile i32 %7, i32* %3, align 4, !dbg !11917
  ret void, !dbg !11920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !11921 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11925, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i16 %1, metadata !11926, metadata !DIExpression()), !dbg !11927
  %3 = zext i16 %1 to i32, !dbg !11928
  %4 = icmp ult i16 %1, 512, !dbg !11928
  br i1 %4, label %6, label %5, !dbg !11931

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 462) #24, !dbg !11932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 462) #24, !dbg !11932
  unreachable, !dbg !11932

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11934
  %8 = load volatile i32, i32* %7, align 4, !dbg !11934
  %9 = and i32 %8, -5, !dbg !11936
  %10 = lshr i32 %3, 6, !dbg !11936
  %11 = and i32 %10, 4, !dbg !11936
  %12 = or i32 %9, %11, !dbg !11936
  store volatile i32 %12, i32* %7, align 4, !dbg !11934
  %13 = and i32 %3, 255, !dbg !11937
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !11938
  store volatile i32 %13, i32* %14, align 4, !dbg !11939
  ret void, !dbg !11940
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #17 !dbg !11941 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11945, metadata !DIExpression()), !dbg !11947
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !11948
  %3 = load volatile i32, i32* %2, align 4, !dbg !11948
  call void @llvm.dbg.value(metadata i32 %3, metadata !11946, metadata !DIExpression()), !dbg !11947
  %4 = trunc i32 %3 to i16, !dbg !11949
  %5 = and i16 %4, 255, !dbg !11949
  %6 = lshr i16 %4, 2, !dbg !11949
  %7 = and i16 %6, 256, !dbg !11949
  %8 = or i16 %7, %5, !dbg !11949
  call void @llvm.dbg.value(metadata i16 %8, metadata !11946, metadata !DIExpression()), !dbg !11947
  ret i16 %8, !dbg !11950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11951 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11953, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i1 %1, metadata !11954, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11955
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11956
  %4 = load volatile i32, i32* %3, align 4, !dbg !11956
  %5 = and i32 %4, -2, !dbg !11958
  %6 = zext i1 %1 to i32, !dbg !11958
  %7 = or i32 %5, %6, !dbg !11958
  store volatile i32 %7, i32* %3, align 4, !dbg !11956
  ret void, !dbg !11959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11960 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11962, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i1 %1, metadata !11963, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11964
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11965
  %4 = load volatile i32, i32* %3, align 4, !dbg !11965
  %5 = and i32 %4, -3, !dbg !11967
  %6 = select i1 %1, i32 2, i32 0, !dbg !11967
  %7 = or i32 %5, %6, !dbg !11967
  store volatile i32 %7, i32* %3, align 4, !dbg !11965
  ret void, !dbg !11968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11969 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11971, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata i1 %1, metadata !11972, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11973
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11974
  %4 = load volatile i32, i32* %3, align 4, !dbg !11974
  %5 = and i32 %4, -129, !dbg !11976
  %6 = select i1 %1, i32 128, i32 0, !dbg !11976
  %7 = or i32 %5, %6, !dbg !11976
  store volatile i32 %7, i32* %3, align 4, !dbg !11974
  ret void, !dbg !11977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11978 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11980, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i32 %1, metadata !11981, metadata !DIExpression()), !dbg !11982
  %3 = and i32 %1, -33, !dbg !11983
  %4 = icmp eq i32 %3, 0, !dbg !11983
  br i1 %4, label %6, label %5, !dbg !11983

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 553) #24, !dbg !11986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef 553) #24, !dbg !11986
  unreachable, !dbg !11986

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !11983
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11988
  %9 = load volatile i32, i32* %8, align 4, !dbg !11988
  %10 = and i32 %9, -33, !dbg !11990
  %11 = select i1 %7, i32 32, i32 0, !dbg !11990
  %12 = or i32 %10, %11, !dbg !11990
  store volatile i32 %12, i32* %8, align 4, !dbg !11988
  ret void, !dbg !11991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11992 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11994, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.value(metadata i1 %1, metadata !11995, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11996
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11997
  %4 = load volatile i32, i32* %3, align 4, !dbg !11997
  %5 = and i32 %4, -16385, !dbg !11999
  %6 = select i1 %1, i32 16384, i32 0, !dbg !11999
  %7 = or i32 %5, %6, !dbg !11999
  store volatile i32 %7, i32* %3, align 4, !dbg !11997
  ret void, !dbg !12000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12001 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i1 %1, metadata !12004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12005
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12006
  %4 = load volatile i32, i32* %3, align 4, !dbg !12006
  %5 = and i32 %4, -17, !dbg !12008
  %6 = select i1 %1, i32 16, i32 0, !dbg !12008
  %7 = or i32 %5, %6, !dbg !12008
  store volatile i32 %7, i32* %3, align 4, !dbg !12006
  ret void, !dbg !12009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12010 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12012, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata i1 %1, metadata !12013, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12014
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12015
  %4 = load volatile i32, i32* %3, align 4, !dbg !12015
  %5 = and i32 %4, -2049, !dbg !12017
  %6 = select i1 %1, i32 2048, i32 0, !dbg !12017
  %7 = or i32 %5, %6, !dbg !12017
  store volatile i32 %7, i32* %3, align 4, !dbg !12015
  ret void, !dbg !12018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !12019 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !12038, metadata !DIExpression()), !dbg !12043
  %4 = bitcast i32* %2 to i8*, !dbg !12044
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12044
  %5 = bitcast i32* %3 to i8*, !dbg !12044
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12044
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !12045
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !12046

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12039, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32* %2, metadata !12041, metadata !DIExpression(DW_OP_deref)), !dbg !12043
  call void @llvm.dbg.value(metadata i32* %3, metadata !12042, metadata !DIExpression(DW_OP_deref)), !dbg !12043
  br label %8, !dbg !12047

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !12049
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12049
  call void @llvm.dbg.value(metadata i32 %10, metadata !12039, metadata !DIExpression()), !dbg !12043
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !12050

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #24, !dbg !12051
  call void @llvm.dbg.value(metadata i32 %12, metadata !12040, metadata !DIExpression()), !dbg !12043
  br label %13, !dbg !12053

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !12054
  call void @llvm.dbg.value(metadata i32 %14, metadata !12040, metadata !DIExpression()), !dbg !12043
  %15 = load i32, i32* %2, align 4, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %15, metadata !12041, metadata !DIExpression()), !dbg !12043
  %16 = add i32 %15, 1, !dbg !12056
  %17 = udiv i32 %14, %16, !dbg !12057
  %18 = load i32, i32* %3, align 4, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %18, metadata !12042, metadata !DIExpression()), !dbg !12043
  %19 = add i32 %18, 1, !dbg !12059
  %20 = udiv i32 %17, %19, !dbg !12060
  br label %21, !dbg !12061

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !12043
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12062
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12062
  ret i32 %22, !dbg !12062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #17 !dbg !12063 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !12067, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i32 %0, metadata !12068, metadata !DIExpression()), !dbg !12069
  %2 = inttoptr i32 %0 to i32*, !dbg !12070
  %3 = load volatile i32, i32* %2, align 4, !dbg !12070
  %4 = lshr i32 %3, 24, !dbg !12071
  %5 = and i32 %4, 7, !dbg !12071
  ret i32 %5, !dbg !12072
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !12073 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !12095, metadata !DIExpression()), !dbg !12100
  %4 = bitcast i32* %2 to i8*, !dbg !12101
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12101
  %5 = bitcast i32* %3 to i8*, !dbg !12101
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12101
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !12102
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !12103

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12096, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata i32* %2, metadata !12098, metadata !DIExpression(DW_OP_deref)), !dbg !12100
  call void @llvm.dbg.value(metadata i32* %3, metadata !12099, metadata !DIExpression(DW_OP_deref)), !dbg !12100
  br label %8, !dbg !12104

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !12106
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %10, metadata !12096, metadata !DIExpression()), !dbg !12100
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !12107

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #24, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %12, metadata !12097, metadata !DIExpression()), !dbg !12100
  br label %13, !dbg !12110

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !12111
  call void @llvm.dbg.value(metadata i32 %14, metadata !12097, metadata !DIExpression()), !dbg !12100
  %15 = load i32, i32* %2, align 4, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %15, metadata !12098, metadata !DIExpression()), !dbg !12100
  %16 = add i32 %15, 1, !dbg !12113
  %17 = udiv i32 %14, %16, !dbg !12114
  %18 = load i32, i32* %3, align 4, !dbg !12115
  call void @llvm.dbg.value(metadata i32 %18, metadata !12099, metadata !DIExpression()), !dbg !12100
  %19 = add i32 %18, 1, !dbg !12116
  %20 = udiv i32 %17, %19, !dbg !12117
  br label %21, !dbg !12118

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !12100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12119
  ret i32 %22, !dbg !12119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !12120 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !12166, metadata !DIExpression()), !dbg !12171
  %4 = bitcast i32* %2 to i8*, !dbg !12172
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12172
  %5 = bitcast i32* %3 to i8*, !dbg !12172
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12172
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !12173
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !12174

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12167, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32* %2, metadata !12169, metadata !DIExpression(DW_OP_deref)), !dbg !12171
  call void @llvm.dbg.value(metadata i32* %3, metadata !12170, metadata !DIExpression(DW_OP_deref)), !dbg !12171
  br label %8, !dbg !12175

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !12177
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12177
  call void @llvm.dbg.value(metadata i32 %10, metadata !12167, metadata !DIExpression()), !dbg !12171
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !12178

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12179
  %13 = lshr i32 %12, 2, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %13, metadata !12168, metadata !DIExpression()), !dbg !12171
  br label %16, !dbg !12182

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %15, metadata !12168, metadata !DIExpression()), !dbg !12171
  br label %16, !dbg !12184

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !12185
  call void @llvm.dbg.value(metadata i32 %17, metadata !12168, metadata !DIExpression()), !dbg !12171
  %18 = load i32, i32* %2, align 4, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %18, metadata !12169, metadata !DIExpression()), !dbg !12171
  %19 = add i32 %18, 1, !dbg !12187
  %20 = udiv i32 %17, %19, !dbg !12188
  %21 = load i32, i32* %3, align 4, !dbg !12189
  call void @llvm.dbg.value(metadata i32 %21, metadata !12170, metadata !DIExpression()), !dbg !12171
  %22 = add i32 %21, 1, !dbg !12190
  %23 = udiv i32 %20, %22, !dbg !12191
  br label %24, !dbg !12192

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !12171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12193
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12193
  ret i32 %25, !dbg !12193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !12194 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !12212, metadata !DIExpression()), !dbg !12217
  %4 = bitcast i32* %2 to i8*, !dbg !12218
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12218
  %5 = bitcast i32* %3 to i8*, !dbg !12218
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12218
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !12219
  %7 = add i32 %6, -815923200, !dbg !12220
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !12220
  %9 = icmp ult i32 %8, 4, !dbg !12220
  br i1 %9, label %10, label %25, !dbg !12220

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !12220
  %12 = add i32 %11, 809020800, !dbg !12220
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #25, !dbg !12221
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %13, metadata !12213, metadata !DIExpression()), !dbg !12217
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !12223

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12224
  %16 = lshr i32 %15, 2, !dbg !12226
  call void @llvm.dbg.value(metadata i32 %16, metadata !12214, metadata !DIExpression()), !dbg !12217
  br label %17, !dbg !12227

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !12228
  call void @llvm.dbg.value(metadata i32 %18, metadata !12214, metadata !DIExpression()), !dbg !12217
  %19 = load i32, i32* %2, align 4, !dbg !12229
  call void @llvm.dbg.value(metadata i32 %19, metadata !12215, metadata !DIExpression()), !dbg !12217
  %20 = add i32 %19, 1, !dbg !12230
  %21 = udiv i32 %18, %20, !dbg !12231
  %22 = load i32, i32* %3, align 4, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %22, metadata !12216, metadata !DIExpression()), !dbg !12217
  %23 = add i32 %22, 1, !dbg !12233
  %24 = udiv i32 %21, %23, !dbg !12234
  br label %25, !dbg !12235

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !12217
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12236
  ret i32 %26, !dbg !12236
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !12237 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12264, metadata !DIExpression()), !dbg !12269
  %4 = bitcast i32* %2 to i8*, !dbg !12270
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12270
  %5 = bitcast i32* %3 to i8*, !dbg !12270
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12270
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !12271
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !12272

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %2, metadata !12267, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %3, metadata !12268, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  br label %13, !dbg !12273

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %2, metadata !12267, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %3, metadata !12268, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  br label %13, !dbg !12275

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %2, metadata !12267, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %3, metadata !12268, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  br label %13, !dbg !12276

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %2, metadata !12267, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %3, metadata !12268, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  br label %13, !dbg !12277

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %2, metadata !12267, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %3, metadata !12268, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  br label %13, !dbg !12278

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %2, metadata !12267, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  call void @llvm.dbg.value(metadata i32* %3, metadata !12268, metadata !DIExpression(DW_OP_deref)), !dbg !12269
  br label %13, !dbg !12279

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #25, !dbg !12280
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12280
  call void @llvm.dbg.value(metadata i32 %15, metadata !12265, metadata !DIExpression()), !dbg !12269
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !12281

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12282
  %18 = lshr i32 %17, 1, !dbg !12284
  call void @llvm.dbg.value(metadata i32 %18, metadata !12266, metadata !DIExpression()), !dbg !12269
  br label %21, !dbg !12285

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %20, metadata !12266, metadata !DIExpression()), !dbg !12269
  br label %21, !dbg !12287

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !12288
  call void @llvm.dbg.value(metadata i32 %22, metadata !12266, metadata !DIExpression()), !dbg !12269
  %23 = load i32, i32* %2, align 4, !dbg !12289
  call void @llvm.dbg.value(metadata i32 %23, metadata !12267, metadata !DIExpression()), !dbg !12269
  %24 = add i32 %23, 1, !dbg !12290
  %25 = udiv i32 %22, %24, !dbg !12291
  %26 = load i32, i32* %3, align 4, !dbg !12292
  call void @llvm.dbg.value(metadata i32 %26, metadata !12268, metadata !DIExpression()), !dbg !12269
  %27 = add i32 %26, 1, !dbg !12293
  %28 = udiv i32 %25, %27, !dbg !12294
  br label %29, !dbg !12295

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !12269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12296
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12296
  ret i32 %30, !dbg !12296
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !12297 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12300, metadata !DIExpression()), !dbg !12316
  call void @llvm.dbg.value(metadata i32 undef, metadata !12300, metadata !DIExpression()), !dbg !12316
  call void @llvm.dbg.value(metadata i32 undef, metadata !12300, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12316
  ret void, !dbg !12317
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12322, metadata !DIExpression()), !dbg !12324
  %2 = icmp eq i8* %0, null, !dbg !12325
  br i1 %2, label %29, label %3, !dbg !12327

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12328
  %5 = icmp eq i8 %4, 0, !dbg !12329
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12330
  br i1 %6, label %29, label %8, !dbg !12330

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12323, metadata !DIExpression()), !dbg !12324
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12331

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12323, metadata !DIExpression()), !dbg !12324
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12333
  br i1 %10, label %11, label %15, !dbg !12338

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12339
  %13 = load i8*, i8** %12, align 4, !dbg !12339
  %14 = icmp eq i8* %13, %0, !dbg !12340
  br i1 %14, label %29, label %15, !dbg !12341

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12342
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12323, metadata !DIExpression()), !dbg !12324
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12343
  br i1 %17, label %7, label %8, !dbg !12344, !llvm.loop !12345

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12323, metadata !DIExpression()), !dbg !12324
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12347
  br i1 %20, label %21, label %26, !dbg !12351

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12352
  %23 = load i8*, i8** %22, align 4, !dbg !12352
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12353
  %25 = icmp eq i32 %24, 0, !dbg !12354
  br i1 %25, label %29, label %26, !dbg !12355

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12356
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12323, metadata !DIExpression()), !dbg !12324
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12357
  br i1 %28, label %29, label %18, !dbg !12331, !llvm.loop !12358

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12324
  ret %struct.device* %30, !dbg !12360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #9 !dbg !12361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12365, metadata !DIExpression()), !dbg !12366
  %2 = icmp eq %struct.device* %0, null, !dbg !12367
  br i1 %2, label %14, label %3, !dbg !12369

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12370
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12370
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12371
  %7 = load i8, i8* %6, align 1, !dbg !12371
  %8 = and i8 %7, 1, !dbg !12371
  %9 = icmp eq i8 %8, 0, !dbg !12371
  br i1 %9, label %14, label %10, !dbg !12372

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12373
  %12 = load i8, i8* %11, align 1, !dbg !12373
  %13 = icmp eq i8 %12, 0, !dbg !12374
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12366
  ret i1 %15, !dbg !12375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !12376 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12381, metadata !DIExpression()), !dbg !12382
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12383
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12385 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12393, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12394, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i8* %2, metadata !12395, metadata !DIExpression()), !dbg !12398
  %5 = bitcast i32* %4 to i8*, !dbg !12399
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12399
  call void @llvm.dbg.value(metadata i32 0, metadata !12396, metadata !DIExpression()), !dbg !12398
  store i32 0, i32* %4, align 4, !dbg !12400
  call void @llvm.dbg.value(metadata i32* %4, metadata !12396, metadata !DIExpression(DW_OP_deref)), !dbg !12398
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12401
  call void @llvm.dbg.value(metadata i16* %6, metadata !12397, metadata !DIExpression()), !dbg !12398
  %7 = load i32, i32* %4, align 4, !dbg !12402
  call void @llvm.dbg.value(metadata i32 %7, metadata !12396, metadata !DIExpression()), !dbg !12398
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12403
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12404
  ret i32 %8, !dbg !12405
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !12406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12410, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i32* %1, metadata !12411, metadata !DIExpression()), !dbg !12416
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12417
  %4 = load i16*, i16** %3, align 4, !dbg !12417
  call void @llvm.dbg.value(metadata i16* %4, metadata !12412, metadata !DIExpression()), !dbg !12416
  %5 = icmp eq i16* %4, null, !dbg !12418
  br i1 %5, label %14, label %6, !dbg !12419

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12420
  call void @llvm.dbg.value(metadata i32 %7, metadata !12413, metadata !DIExpression()), !dbg !12420
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12421
  %9 = load i16, i16* %8, align 2, !dbg !12421
  %10 = add i16 %9, -32767, !dbg !12422
  %11 = icmp ult i16 %10, 2, !dbg !12422
  %12 = add i32 %7, 1, !dbg !12423
  call void @llvm.dbg.value(metadata i32 %12, metadata !12413, metadata !DIExpression()), !dbg !12420
  br i1 %11, label %13, label %6, !dbg !12422, !llvm.loop !12425

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12428
  br label %14, !dbg !12429

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12431 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12435, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.value(metadata i32 %1, metadata !12436, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12437, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.value(metadata i8* %3, metadata !12438, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.value(metadata i32 0, metadata !12439, metadata !DIExpression()), !dbg !12447
  %5 = icmp eq i32 %1, 0, !dbg !12448
  br i1 %5, label %16, label %8, !dbg !12449

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12439, metadata !DIExpression()), !dbg !12447
  %7 = icmp eq i32 %15, %1, !dbg !12448
  br i1 %7, label %16, label %8, !dbg !12449, !llvm.loop !12450

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12439, metadata !DIExpression()), !dbg !12447
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12452
  %11 = load i16, i16* %10, align 2, !dbg !12452
  call void @llvm.dbg.value(metadata i16 %11, metadata !12441, metadata !DIExpression()), !dbg !12453
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12454
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12444, metadata !DIExpression()), !dbg !12453
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %13, metadata !12445, metadata !DIExpression()), !dbg !12453
  %14 = icmp slt i32 %13, 0, !dbg !12456
  %15 = add nuw i32 %9, 1, !dbg !12458
  call void @llvm.dbg.value(metadata i32 %15, metadata !12439, metadata !DIExpression()), !dbg !12447
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !12460 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12464, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12465, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12466, metadata !DIExpression()), !dbg !12467
  %2 = sext i16 %0 to i32, !dbg !12468
  %3 = icmp slt i16 %0, 1, !dbg !12470
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12471
  %6 = add nsw i32 %2, -1, !dbg !12471
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12471
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12471
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12465, metadata !DIExpression()), !dbg !12467
  ret %struct.device* %8, !dbg !12472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12473 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12475, metadata !DIExpression()), !dbg !12480
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12476, metadata !DIExpression()), !dbg !12480
  call void @llvm.dbg.value(metadata i8* %2, metadata !12477, metadata !DIExpression()), !dbg !12480
  %5 = bitcast i32* %4 to i8*, !dbg !12481
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12481
  call void @llvm.dbg.value(metadata i32 0, metadata !12478, metadata !DIExpression()), !dbg !12480
  store i32 0, i32* %4, align 4, !dbg !12482
  call void @llvm.dbg.value(metadata i32* %4, metadata !12478, metadata !DIExpression(DW_OP_deref)), !dbg !12480
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12483
  call void @llvm.dbg.value(metadata i16* %6, metadata !12479, metadata !DIExpression()), !dbg !12480
  %7 = load i32, i32* %4, align 4, !dbg !12484
  call void @llvm.dbg.value(metadata i32 %7, metadata !12478, metadata !DIExpression()), !dbg !12480
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12485
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12486
  ret i32 %8, !dbg !12487
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !12488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12490, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32* %1, metadata !12491, metadata !DIExpression()), !dbg !12495
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12496
  %4 = load i16*, i16** %3, align 4, !dbg !12496
  call void @llvm.dbg.value(metadata i16* %4, metadata !12492, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 0, metadata !12493, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 0, metadata !12494, metadata !DIExpression()), !dbg !12495
  %5 = icmp eq i16* %4, null, !dbg !12497
  br i1 %5, label %22, label %6, !dbg !12499

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12493, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i16* %8, metadata !12492, metadata !DIExpression()), !dbg !12495
  %9 = load i16, i16* %8, align 2, !dbg !12500
  %10 = icmp eq i16 %9, -32768, !dbg !12504
  call void @llvm.dbg.value(metadata i32 undef, metadata !12493, metadata !DIExpression()), !dbg !12495
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12505
  call void @llvm.dbg.value(metadata i16* %11, metadata !12492, metadata !DIExpression()), !dbg !12495
  %12 = zext i1 %10 to i32, !dbg !12506
  %13 = add i32 %7, %12, !dbg !12506
  call void @llvm.dbg.value(metadata i32 %13, metadata !12493, metadata !DIExpression()), !dbg !12495
  %14 = icmp eq i32 %13, 2, !dbg !12507
  br i1 %14, label %15, label %6, !dbg !12508

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12495
  call void @llvm.dbg.value(metadata i32 %16, metadata !12494, metadata !DIExpression()), !dbg !12495
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12509
  %18 = load i16, i16* %17, align 2, !dbg !12509
  %19 = icmp eq i16 %18, 32767, !dbg !12510
  %20 = add i32 %16, 1, !dbg !12511
  call void @llvm.dbg.value(metadata i32 %20, metadata !12494, metadata !DIExpression()), !dbg !12495
  br i1 %19, label %21, label %15, !dbg !12513, !llvm.loop !12514

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12516
  br label %22, !dbg !12517

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12518
  call void @llvm.dbg.value(metadata i16* %23, metadata !12492, metadata !DIExpression()), !dbg !12495
  ret i16* %23, !dbg !12519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #9 !dbg !12520 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12523
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12524
  ret i32* %2, !dbg !12525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !12526 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12671, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12672, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12673, metadata !DIExpression()), !dbg !12674
  ret void, !dbg !12675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !12676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12680, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.value(metadata i32 %1, metadata !12681, metadata !DIExpression()), !dbg !12682
  ret void, !dbg !12683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !12684 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12688, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 %1, metadata !12689, metadata !DIExpression()), !dbg !12690
  ret void, !dbg !12691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !12692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12696, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata i8* %1, metadata !12697, metadata !DIExpression()), !dbg !12698
  ret i32 -134, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !12700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12704, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.value(metadata i8* %1, metadata !12705, metadata !DIExpression()), !dbg !12706
  ret i32 -134, !dbg !12707
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #4 !dbg !12708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12711, metadata !DIExpression()), !dbg !12712
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12713, !srcloc !12719
  call void @llvm.dbg.value(metadata i32 undef, metadata !12716, metadata !DIExpression()) #23, !dbg !12720
  call void @llvm.dbg.value(metadata i32 undef, metadata !12717, metadata !DIExpression()) #23, !dbg !12720
  br label %3, !dbg !12721

3:                                                ; preds = %3, %1
  br label %3, !dbg !12722, !llvm.loop !12725
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12732, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12733, metadata !DIExpression()), !dbg !12734
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.189, i32 0, i32 0), i32 noundef 69) #24, !dbg !12735
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !12740
  unreachable, !dbg !12740
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #4 !dbg !12741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12743, metadata !DIExpression()), !dbg !12744
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !12745
  unreachable, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12748, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12749, metadata !DIExpression()), !dbg !12752
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12753, !srcloc !12719
  call void @llvm.dbg.value(metadata i32 undef, metadata !12716, metadata !DIExpression()) #23, !dbg !12755
  call void @llvm.dbg.value(metadata i32 undef, metadata !12717, metadata !DIExpression()) #23, !dbg !12755
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()), !dbg !12752
  %4 = tail call fastcc %struct.k_thread* @k_current_get.192() #26, !dbg !12756
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12751, metadata !DIExpression()), !dbg !12752
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12757
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.193, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #24, !dbg !12757
  %6 = icmp eq %struct.__esf* %1, null, !dbg !12762
  br i1 %6, label %13, label %7, !dbg !12764

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12765, metadata !DIExpression()), !dbg !12770
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12772
  %9 = load i32, i32* %8, align 4, !dbg !12772
  %10 = and i32 %9, 511, !dbg !12773
  %11 = icmp eq i32 %10, 0, !dbg !12774
  br i1 %11, label %13, label %12, !dbg !12775

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 69) #24, !dbg !12776
  br label %13, !dbg !12782

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #25, !dbg !12783
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.195, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #24, !dbg !12783
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !12788
  %15 = icmp eq i32 %0, 4, !dbg !12789
  br i1 %15, label %16, label %17, !dbg !12794

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.197, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.198, i32 0, i32 0), i32 noundef 148) #24, !dbg !12795
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.199, i32 0, i32 0)) #24, !dbg !12795
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.198, i32 0, i32 0), i32 noundef 148) #24, !dbg !12795
  unreachable, !dbg !12795

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %18, metadata !12716, metadata !DIExpression()) #23, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %18, metadata !12750, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 undef, metadata !12797, metadata !DIExpression()) #23, !dbg !12800
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12802, !srcloc !12803
  tail call fastcc void @k_thread_abort.200(%struct.k_thread* noundef %4) #25, !dbg !12804
  ret void, !dbg !12807
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.192() unnamed_addr #11 !dbg !12808 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.208() #26, !dbg !12812
  ret %struct.k_thread* %1, !dbg !12813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !12814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12818, metadata !DIExpression()), !dbg !12819
  %2 = icmp ult i32 %0, 5, !dbg !12820
  br i1 %2, label %3, label %6, !dbg !12820

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12820
  %5 = load i8*, i8** %4, align 4, !dbg !12820
  br label %6, !dbg !12820

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.202, i32 0, i32 0), %1 ], !dbg !12821
  ret i8* %7, !dbg !12823
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12824 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12828, metadata !DIExpression()), !dbg !12830
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12831
  br i1 %2, label %9, label %3, !dbg !12832

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12833
  call void @llvm.dbg.value(metadata i8* %4, metadata !12829, metadata !DIExpression()), !dbg !12830
  %5 = icmp eq i8* %4, null, !dbg !12834
  br i1 %5, label %9, label %6, !dbg !12836

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12837
  %8 = icmp eq i8 %7, 0, !dbg !12838
  br i1 %8, label %9, label %10, !dbg !12839

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.201, i32 0, i32 0), metadata !12829, metadata !DIExpression()), !dbg !12830
  br label %10, !dbg !12840

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.201, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12830
  call void @llvm.dbg.value(metadata i8* %11, metadata !12829, metadata !DIExpression()), !dbg !12830
  ret i8* %11, !dbg !12842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.200(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12847, metadata !DIExpression()), !dbg !12848
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12849, !srcloc !12851
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12852
  ret void, !dbg !12853
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.208() unnamed_addr #11 !dbg !12854 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12855, !srcloc !12857
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12858
  ret %struct.k_thread* %1, !dbg !12859
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12864, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata i32 %1, metadata !12865, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata i32 %2, metadata !12866, metadata !DIExpression()), !dbg !12867
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12868
  ret void, !dbg !12869
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12870 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12874, metadata !DIExpression()), !dbg !12877
  call void @llvm.dbg.value(metadata i8* %1, metadata !12875, metadata !DIExpression()), !dbg !12877
  call void @llvm.dbg.value(metadata i32 %2, metadata !12876, metadata !DIExpression()), !dbg !12877
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12878
  ret void, !dbg !12879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12880 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12881
  ret void, !dbg !12882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12887, metadata !DIExpression()), !dbg !12888
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12889
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12890
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12891
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12892
  %4 = trunc i32 %0 to i8, !dbg !12893
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12894
  store i8 %4, i8* %5, align 4, !dbg !12895
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12896
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !12897
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12898
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12899
  store i8* %8, i8** %9, align 4, !dbg !12900
  ret void, !dbg !12901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12904, metadata !DIExpression()), !dbg !12910
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12911
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12905, metadata !DIExpression()), !dbg !12910
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12912
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12906, metadata !DIExpression()), !dbg !12910
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.215, i32 0, i32 0), metadata !12909, metadata !DIExpression()), !dbg !12910
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12913
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12914
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.215, i32 0, i32 0)) #24, !dbg !12915
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !12916
  ret void, !dbg !12917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !12918 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12922, metadata !DIExpression()), !dbg !12923
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !12924
  ret i8* %2, !dbg !12925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12931, metadata !DIExpression()), !dbg !12932
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12933
  %3 = load i8, i8* %2, align 1, !dbg !12934
  %4 = and i8 %3, -5, !dbg !12934
  store i8 %4, i8* %2, align 1, !dbg !12934
  ret void, !dbg !12935
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #4 !dbg !12936 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !12939
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !12940
  %3 = ptrtoint i8* %2 to i32, !dbg !12949
  %4 = add i32 %3, 2048, !dbg !12950
  call void @llvm.dbg.value(metadata i32 %4, metadata !12944, metadata !DIExpression()) #23, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %4, metadata !12952, metadata !DIExpression()) #23, !dbg !12955
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12957, !srcloc !12958
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12959
  %6 = or i32 %5, 512, !dbg !12959
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12959
  tail call fastcc void @__NVIC_SetPriority.218(i32 noundef -2, i32 noundef 255) #24, !dbg !12960
  tail call fastcc void @__NVIC_SetPriority.218(i32 noundef -5, i32 noundef 0) #24, !dbg !12963
  tail call fastcc void @__NVIC_SetPriority.218(i32 noundef -12, i32 noundef 0) #24, !dbg !12964
  tail call fastcc void @__NVIC_SetPriority.218(i32 noundef -11, i32 noundef 0) #24, !dbg !12965
  tail call fastcc void @__NVIC_SetPriority.218(i32 noundef -10, i32 noundef 0) #24, !dbg !12966
  tail call fastcc void @__NVIC_SetPriority.218(i32 noundef -4, i32 noundef 0) #24, !dbg !12967
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12968
  %8 = or i32 %7, 458752, !dbg !12968
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12968
  tail call void @z_arm_fault_init() #24, !dbg !12969
  tail call void @z_arm_cpu_idle_init() #24, !dbg !12970
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12971
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12974
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !12975
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #23, !dbg !12975
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12938, metadata !DIExpression()), !dbg !12976
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !12977
  call void @z_device_state_init() #24, !dbg !12978
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !12979
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !12980
  %10 = call fastcc i8* @prepare_multithreading() #25, !dbg !12981
  call fastcc void @switch_to_main_thread(i8* noundef %10) #28, !dbg !12982
  unreachable, !dbg !12982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2180, metadata !DIExpression()), !dbg !12983
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12984
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12984
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2181, metadata !DIExpression()), !dbg !12983
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2181, metadata !DIExpression()), !dbg !12983
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12985
  br i1 %7, label %8, label %35, !dbg !12986

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2181, metadata !DIExpression()), !dbg !12983
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12987
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12987
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2191, metadata !DIExpression()), !dbg !12988
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12989
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12989
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !12990
  call void @llvm.dbg.value(metadata i32 %14, metadata !2195, metadata !DIExpression()), !dbg !12988
  %15 = icmp eq %struct.device* %11, null, !dbg !12991
  br i1 %15, label %32, label %16, !dbg !12993

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12994
  br i1 %17, label %26, label %18, !dbg !12997

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12998
  call void @llvm.dbg.value(metadata i32 %19, metadata !2195, metadata !DIExpression()), !dbg !12988
  %20 = icmp ult i32 %19, 255, !dbg !13000
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13000
  call void @llvm.dbg.value(metadata i32 %21, metadata !2195, metadata !DIExpression()), !dbg !12988
  %22 = trunc i32 %21 to i8, !dbg !13001
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13002
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13002
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13003
  store i8 %22, i8* %25, align 1, !dbg !13004
  br label %26, !dbg !13005

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13006
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13006
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13007
  %30 = load i8, i8* %29, align 1, !dbg !13008
  %31 = or i8 %30, 1, !dbg !13008
  store i8 %31, i8* %29, align 1, !dbg !13008
  br label %32, !dbg !13009

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13010
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2181, metadata !DIExpression()), !dbg !12983
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12985
  br i1 %34, label %8, label %35, !dbg !12986, !llvm.loop !13011

35:                                               ; preds = %32, %1
  ret void, !dbg !13013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.218(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !13014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13016, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.value(metadata i32 %1, metadata !13017, metadata !DIExpression()), !dbg !13018
  %3 = trunc i32 %1 to i8, !dbg !13019
  %4 = shl i8 %3, 4, !dbg !13019
  %5 = and i32 %0, 15, !dbg !13022
  %6 = add nsw i32 %5, -4, !dbg !13023
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13024
  store volatile i8 %4, i8* %7, align 1, !dbg !13025
  ret void, !dbg !13026
}

; Function Attrs: optsize
declare !dbg !13027 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !13028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13031, metadata !DIExpression()), !dbg !13032
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13033
  store i8 1, i8* %2, align 1, !dbg !13034
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13035
  store i8 1, i8* %3, align 4, !dbg !13036
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13037
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !13038
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13041 {
  tail call void @z_sched_init() #24, !dbg !13046
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13047
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.219, i32 0, i32 0)) #24, !dbg !13048
  call void @llvm.dbg.value(metadata i8* %1, metadata !13045, metadata !DIExpression()), !dbg !13049
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13050
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13051
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !13052
  ret i8* %1, !dbg !13053
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #4 !dbg !13054 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13058, metadata !DIExpression()), !dbg !13059
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !13060
  unreachable, !dbg !13061
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13062 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13064, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata i8* %1, metadata !13065, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata i8* %2, metadata !13066, metadata !DIExpression()), !dbg !13067
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13068
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !13069
  tail call void @boot_banner() #24, !dbg !13070
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !13071
  tail call void @z_init_static_threads() #24, !dbg !13072
  tail call void @main() #24, !dbg !13073
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13074
  %5 = and i8 %4, -2, !dbg !13074
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13074
  ret void, !dbg !13075
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !13076 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13086, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i8* %1, metadata !13087, metadata !DIExpression()), !dbg !13088
  ret void, !dbg !13089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !13090 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13092, metadata !DIExpression()), !dbg !13094
  call void @llvm.dbg.value(metadata i8* %1, metadata !13093, metadata !DIExpression()), !dbg !13094
  ret void, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13096 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13097, !srcloc !13104
  call void @llvm.dbg.value(metadata i32 %1, metadata !13100, metadata !DIExpression()) #23, !dbg !13105
  %2 = icmp ne i32 %1, 0, !dbg !13106
  ret i1 %2, !dbg !13107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !13108 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13109
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13110
  %3 = load i8, i8* %2, align 4, !dbg !13111
  %4 = or i8 %3, 1, !dbg !13111
  store i8 %4, i8* %2, align 4, !dbg !13111
  ret void, !dbg !13112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !13113 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13114
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13115
  %3 = load i8, i8* %2, align 4, !dbg !13116
  %4 = and i8 %3, -2, !dbg !13116
  store i8 %4, i8* %2, align 4, !dbg !13116
  ret void, !dbg !13117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #9 !dbg !13118 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13119
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13120
  %3 = load i8, i8* %2, align 4, !dbg !13120
  %4 = and i8 %3, 1, !dbg !13121
  %5 = icmp ne i8 %4, 0, !dbg !13122
  ret i1 %5, !dbg !13123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13128, metadata !DIExpression()), !dbg !13130
  call void @llvm.dbg.value(metadata i8* %1, metadata !13129, metadata !DIExpression()), !dbg !13130
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13131
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13133
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13128, metadata !DIExpression()), !dbg !13130
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13134
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !13135
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13136
  store i8 0, i8* %8, align 1, !dbg !13137
  ret i32 0, !dbg !13138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #5 !dbg !13139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13143, metadata !DIExpression()), !dbg !13144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13145
  ret i8* %2, !dbg !13146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13151, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata i8* %1, metadata !13152, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata i32 %2, metadata !13153, metadata !DIExpression()), !dbg !13154
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13155
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !13156
  ret i32 0, !dbg !13157
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2316, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i8* %1, metadata !2317, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i32 %2, metadata !2318, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i32 0, metadata !2319, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i8 undef, metadata !2321, metadata !DIExpression()), !dbg !13158
  %4 = icmp eq i8* %1, null, !dbg !13159
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13161
  br i1 %6, label %46, label %7, !dbg !13161

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13162
  %9 = load i8, i8* %8, align 1, !dbg !13162
  call void @llvm.dbg.value(metadata i8 %9, metadata !2321, metadata !DIExpression()), !dbg !13158
  %10 = add i32 %2, -1, !dbg !13163
  call void @llvm.dbg.value(metadata i32 %10, metadata !2318, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i8 0, metadata !2322, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata i8 %9, metadata !2321, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i32 0, metadata !2319, metadata !DIExpression()), !dbg !13158
  %11 = icmp eq i8 %9, 0, !dbg !13165
  br i1 %11, label %12, label %15, !dbg !13167

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13168
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13169
  store i8 0, i8* %14, align 1, !dbg !13170
  br label %46, !dbg !13171

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2322, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata i8 %17, metadata !2321, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i32 %18, metadata !2319, metadata !DIExpression()), !dbg !13158
  %19 = zext i8 %17 to i32, !dbg !13172
  %20 = zext i8 %16 to i32, !dbg !13173
  %21 = shl nuw i32 1, %20, !dbg !13173
  call void @llvm.dbg.value(metadata i32 %21, metadata !2320, metadata !DIExpression()), !dbg !13158
  %22 = and i32 %21, %19, !dbg !13175
  %23 = icmp eq i32 %22, 0, !dbg !13177
  br i1 %23, label %42, label %24, !dbg !13178

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13179
  %26 = sub i32 %10, %18, !dbg !13180
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13181
  %28 = load i8*, i8** %27, align 4, !dbg !13181
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13182
  %30 = load i32, i32* %29, align 4, !dbg !13182
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13183
  %32 = add i32 %31, %18, !dbg !13184
  call void @llvm.dbg.value(metadata i32 %32, metadata !2319, metadata !DIExpression()), !dbg !13158
  %33 = trunc i32 %21 to i8, !dbg !13185
  %34 = xor i8 %33, -1, !dbg !13185
  %35 = and i8 %17, %34, !dbg !13185
  call void @llvm.dbg.value(metadata i8 %35, metadata !2321, metadata !DIExpression()), !dbg !13158
  %36 = icmp eq i8 %35, 0, !dbg !13186
  br i1 %36, label %12, label %37, !dbg !13188

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13189
  %39 = sub i32 %10, %32, !dbg !13191
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.224, i32 0, i32 0), i32 noundef 1) #25, !dbg !13192
  %41 = add i32 %40, %32, !dbg !13193
  call void @llvm.dbg.value(metadata i32 %41, metadata !2319, metadata !DIExpression()), !dbg !13158
  br label %42, !dbg !13194

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13158
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13158
  call void @llvm.dbg.value(metadata i8 %44, metadata !2321, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i32 %43, metadata !2319, metadata !DIExpression()), !dbg !13158
  %45 = add i8 %16, 1, !dbg !13195
  call void @llvm.dbg.value(metadata i8 %45, metadata !2322, metadata !DIExpression()), !dbg !13164
  br label %15, !dbg !13167

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.225, i32 0, i32 0), %3 ], !dbg !13158
  ret i8* %47, !dbg !13196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13197 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13201, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i32 %1, metadata !13202, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i8* %2, metadata !13203, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i32 %3, metadata !13204, metadata !DIExpression()), !dbg !13206
  %5 = icmp ult i32 %1, %3, !dbg !13207
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13207
  call void @llvm.dbg.value(metadata i32 %6, metadata !13205, metadata !DIExpression()), !dbg !13206
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13208
  ret i32 %6, !dbg !13209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13214, metadata !DIExpression()), !dbg !13215
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13216
  ret void, !dbg !13217
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13227, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13228, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i32 %2, metadata !13229, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13230, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i8* %4, metadata !13231, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i8* %5, metadata !13232, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i8* %6, metadata !13233, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i32 %7, metadata !13234, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i32 %8, metadata !13235, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i8* %9, metadata !13236, metadata !DIExpression()), !dbg !13238
  %11 = icmp eq i32 %7, 15, !dbg !13239
  br i1 %11, label %12, label %15, !dbg !13239

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13239
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13239
  br i1 %14, label %19, label %18, !dbg !13239

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13239
  %17 = icmp ult i32 %16, 31, !dbg !13239
  br i1 %17, label %19, label %18, !dbg !13239

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 536) #24, !dbg !13243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.238, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 536) #24, !dbg !13243
  unreachable, !dbg !13243

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13245
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #25, !dbg !13246
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13247
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13248
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13249
  call void @llvm.dbg.value(metadata i8* %22, metadata !13237, metadata !DIExpression()), !dbg !13238
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13250
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13251
  store i8* null, i8** %23, align 4, !dbg !13252
  %24 = icmp eq i8* %9, null, !dbg !13253
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13255
  br i1 %24, label %29, label %26, !dbg !13256

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !13257
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13259
  store i8 0, i8* %28, align 1, !dbg !13260
  br label %30, !dbg !13261

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13262
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13264
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13264
  br i1 %32, label %36, label %33, !dbg !13266

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 6, !dbg !13267
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 4, !dbg !13267
  br label %36, !dbg !13268

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13238
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13269
  store %struct.k_heap* %37, %struct.k_heap** %38, align 4, !dbg !13271
  ret i8* %22, !dbg !13272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !13273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13277, metadata !DIExpression()), !dbg !13278
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13279
  ret i1 %2, !dbg !13280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !13281 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13286, metadata !DIExpression()), !dbg !13287
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13288
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13289
  ret void, !dbg !13290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !13291 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13296, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i32 %1, metadata !13297, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i32 %2, metadata !13298, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i32 %3, metadata !13299, metadata !DIExpression()), !dbg !13300
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13301
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13302
  %6 = trunc i32 %3 to i8, !dbg !13303
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13304
  store i8 %6, i8* %7, align 4, !dbg !13305
  %8 = trunc i32 %2 to i8, !dbg !13306
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13307
  store i8 %8, i8* %9, align 1, !dbg !13308
  %10 = trunc i32 %1 to i8, !dbg !13309
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13310
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13310
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13310
  store i8 %10, i8* %13, align 2, !dbg !13311
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13312
  store i8 0, i8* %14, align 1, !dbg !13313
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13314
  ret void, !dbg !13315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !13316 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13320, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13321, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i32 %1, metadata !13322, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i32 0, metadata !13327, metadata !DIExpression()), !dbg !13328
  %3 = add i32 %1, 7, !dbg !13329
  %4 = and i32 %3, -8, !dbg !13329
  call void @llvm.dbg.value(metadata i32 %4, metadata !13323, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i8* undef, metadata !13326, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i32 %4, metadata !13324, metadata !DIExpression()), !dbg !13328
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !13331
  call void @llvm.dbg.value(metadata i8* %5, metadata !13325, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i32 0, metadata !13327, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i8* %5, metadata !13325, metadata !DIExpression()), !dbg !13328
  ret i8* %5, !dbg !13332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !13333 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13338, metadata !DIExpression()), !dbg !13339
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13340
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13341
  ret void, !dbg !13342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !13343 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13345, metadata !DIExpression()), !dbg !13346
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13347
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13348
  ret void, !dbg !13349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !13350 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13354, metadata !DIExpression()), !dbg !13355
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13356
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13357
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13358
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13359
  ret void, !dbg !13360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13361 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13366, metadata !DIExpression()), !dbg !13367
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13368
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13369
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13370
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13371
  ret void, !dbg !13372
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13373 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13390, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13381, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13382, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 %2, metadata !13383, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13384, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i8* %4, metadata !13385, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i8* %5, metadata !13386, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i8* %6, metadata !13387, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 %7, metadata !13388, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 %8, metadata !13389, metadata !DIExpression()), !dbg !13391
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13392, !srcloc !13104
  call void @llvm.dbg.value(metadata i32 %11, metadata !13100, metadata !DIExpression()) #23, !dbg !13397
  %12 = icmp eq i32 %11, 0, !dbg !13398
  br i1 %12, label %14, label %13, !dbg !13399

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 647) #24, !dbg !13400
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.240, i32 0, i32 0)) #24, !dbg !13400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 647) #24, !dbg !13400
  unreachable, !dbg !13400

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13390, metadata !DIExpression()), !dbg !13391
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !13402
  %17 = icmp eq i64 %15, -1, !dbg !13403
  br i1 %17, label %19, label %18, !dbg !13405

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !13406
  br label %19, !dbg !13408

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13410 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13414, metadata !DIExpression()), !dbg !13416
  %4 = icmp eq i64 %3, 0, !dbg !13417
  br i1 %4, label %5, label %6, !dbg !13419

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13420
  br label %7, !dbg !13422

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13423
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13430, metadata !DIExpression()), !dbg !13431
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13432, !srcloc !13434
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13435
  ret void, !dbg !13436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13437 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13440, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13439, metadata !DIExpression()), !dbg !13441
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13442
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13443
  ret void, !dbg !13444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13445 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13447, metadata !DIExpression()), !dbg !13466
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13467

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 750) #24, !dbg !13471
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.244, i32 0, i32 0)) #24, !dbg !13471
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 750) #24, !dbg !13471
  unreachable, !dbg !13471

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13447, metadata !DIExpression()), !dbg !13466
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13474
  br i1 %4, label %6, label %5, !dbg !13475

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13476
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13464, metadata !DIExpression()), !dbg !13477
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13478

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13482
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13482
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13484
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13484
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13485
  %12 = load i32, i32* %11, align 4, !dbg !13485
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13486
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13486
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13487
  %16 = load i8*, i8** %15, align 4, !dbg !13487
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13488
  %18 = load i8*, i8** %17, align 4, !dbg !13488
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13489
  %20 = load i8*, i8** %19, align 4, !dbg !13489
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13490
  %22 = load i32, i32* %21, align 4, !dbg !13490
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13491
  %24 = load i32, i32* %23, align 4, !dbg !13491
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13492
  %26 = load i8*, i8** %25, align 4, !dbg !13492
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #25, !dbg !13493
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13494
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13495
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13496
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13496
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13497
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13447, metadata !DIExpression()), !dbg !13466
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13498
  br i1 %32, label %1, label %2, !dbg !13467, !llvm.loop !13499

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 781) #24, !dbg !13501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.244, i32 0, i32 0)) #24, !dbg !13501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 781) #24, !dbg !13501
  unreachable, !dbg !13501

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13464, metadata !DIExpression()), !dbg !13477
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13504
  br i1 %36, label %38, label %37, !dbg !13505

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #24, !dbg !13506
  ret void, !dbg !13507

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13508
  %40 = load i32, i32* %39, align 4, !dbg !13508
  %41 = icmp eq i32 %40, -1, !dbg !13511
  br i1 %41, label %50, label %42, !dbg !13512

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13513
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13513
  %45 = icmp sgt i32 %40, 0, !dbg !13515
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13515
  %47 = zext i32 %46 to i64, !dbg !13515
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.245(i64 noundef %47) #25, !dbg !13515
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13516
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #25, !dbg !13516
  br label %50, !dbg !13517

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13518
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13464, metadata !DIExpression()), !dbg !13477
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13519
  br i1 %52, label %33, label %34, !dbg !13478, !llvm.loop !13520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.245(i64 noundef %0) unnamed_addr #5 !dbg !13522 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13524, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.value(metadata i64 %0, metadata !13526, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i32 1000, metadata !13529, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i32 10000, metadata !13530, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i8 1, metadata !13531, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i8 0, metadata !13532, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i8 1, metadata !13533, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i8 0, metadata !13534, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i8 1, metadata !13535, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i8 0, metadata !13536, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i64 0, metadata !13537, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i64 0, metadata !13537, metadata !DIExpression()), !dbg !13541
  %2 = mul i64 %0, 10, !dbg !13543
  ret i64 %2, !dbg !13549
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #4 !dbg !13550 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13552, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i8* %1, metadata !13553, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i8* %2, metadata !13554, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i8* %3, metadata !13555, metadata !DIExpression()), !dbg !13556
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13557
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13558
  %7 = load i8, i8* %6, align 4, !dbg !13559
  %8 = or i8 %7, 4, !dbg !13559
  store i8 %8, i8* %6, align 4, !dbg !13559
  tail call void @z_thread_essential_clear() #25, !dbg !13560
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13561
  unreachable, !dbg !13561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !13562 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13567, metadata !DIExpression()), !dbg !13569
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13570
  %3 = load i32, i32* %2, align 4, !dbg !13570
  call void @llvm.dbg.value(metadata i32 %3, metadata !13568, metadata !DIExpression()), !dbg !13569
  %4 = icmp eq i32 %3, 0, !dbg !13571
  br i1 %4, label %10, label %5, !dbg !13573

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13574
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13577
  %8 = zext i8 %7 to i32, !dbg !13578
  %9 = icmp eq i32 %6, %8, !dbg !13579
  br i1 %9, label %11, label %10, !dbg !13580

10:                                               ; preds = %5, %1
  br label %11, !dbg !13581

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13569
  ret i1 %12, !dbg !13582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #10 !dbg !13583 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13585, metadata !DIExpression()), !dbg !13586
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13587
  %3 = load i32, i32* %2, align 4, !dbg !13587
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13589
  %5 = zext i8 %4 to i32, !dbg !13590
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13591
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13592
  %8 = or i32 %7, %5, !dbg !13593
  %9 = icmp eq i32 %3, %8, !dbg !13594
  br i1 %9, label %10, label %11, !dbg !13595

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13596
  br label %11, !dbg !13597

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !13599 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13603, metadata !DIExpression()), !dbg !13604
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13605
  %3 = zext i8 %2 to i32, !dbg !13606
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13607
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13608
  %6 = or i32 %5, %3, !dbg !13609
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13610
  store i32 %6, i32* %7, align 4, !dbg !13611
  ret void, !dbg !13612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !13613 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13617, metadata !DIExpression()), !dbg !13618
  ret i32 -134, !dbg !13619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13624, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata i32 %1, metadata !13625, metadata !DIExpression()), !dbg !13626
  ret i32 -134, !dbg !13627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !13628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13635, metadata !DIExpression()), !dbg !13637
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13636, metadata !DIExpression()), !dbg !13637
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13638
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13640
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13637
  ret i32 %6, !dbg !13641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !13642 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13646, metadata !DIExpression()), !dbg !13647
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13648
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13647
  ret i32 %3, !dbg !13650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13651 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13653
  ret void, !dbg !13654
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #4 !dbg !13655 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13657, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i8* %1, metadata !13658, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i8* %2, metadata !13659, metadata !DIExpression()), !dbg !13660
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13661
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13661
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13661
  %7 = load i8, i8* %6, align 2, !dbg !13661
  %8 = icmp sgt i8 %7, -1, !dbg !13661
  br i1 %8, label %10, label %9, !dbg !13664

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 39) #24, !dbg !13665
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 39) #24, !dbg !13665
  unreachable, !dbg !13665

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13667, !srcloc !13674
  call void @llvm.dbg.value(metadata i32 undef, metadata !13670, metadata !DIExpression()) #23, !dbg !13675
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !13675
  tail call fastcc void @k_cpu_idle() #25, !dbg !13676
  br label %10, !dbg !13677, !llvm.loop !13678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13680 {
  tail call void @arch_cpu_idle() #24, !dbg !13681
  ret void, !dbg !13682
}

; Function Attrs: optsize
declare !dbg !13683 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !13684 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13702, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.value(metadata i8* %1, metadata !13703, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.value(metadata i32 %2, metadata !13704, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.value(metadata i32 %3, metadata !13705, metadata !DIExpression()), !dbg !13706
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13707
  store i32 %2, i32* %5, align 4, !dbg !13708
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13709
  store i32 %3, i32* %6, align 4, !dbg !13710
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13711
  store i8* %1, i8** %7, align 4, !dbg !13712
  %8 = mul i32 %3, %2, !dbg !13713
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13714
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13715
  store i8* %9, i8** %10, align 4, !dbg !13716
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13717
  store i8* %1, i8** %11, align 4, !dbg !13718
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13719
  store i8* %1, i8** %12, align 4, !dbg !13720
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13721
  store i32 0, i32* %13, align 4, !dbg !13722
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13723
  store i8 0, i8* %14, align 4, !dbg !13724
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13725
  tail call fastcc void @z_waitq_init.257(%struct._wait_q_t* noundef %15) #25, !dbg !13726
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !13727
  store i32 0, i32* %16, align 4, !dbg !13727
  ret void, !dbg !13728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.257(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !13729 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13733, metadata !DIExpression()), !dbg !13734
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13735
  tail call fastcc void @sys_dlist_init.258(%struct._dnode* noundef %2) #25, !dbg !13736
  ret void, !dbg !13737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.258(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13738 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13743, metadata !DIExpression()), !dbg !13744
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13745
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13746
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13747
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13748
  ret void, !dbg !13749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13750 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13754, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i32 %1, metadata !13755, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i32 %2, metadata !13756, metadata !DIExpression()), !dbg !13760
  %5 = bitcast i32* %4 to i8*, !dbg !13761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13761
  call void @llvm.dbg.value(metadata i32* %4, metadata !13759, metadata !DIExpression(DW_OP_deref)), !dbg !13760
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !13762
  br i1 %6, label %13, label %7, !dbg !13764

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13765
  call void @llvm.dbg.value(metadata i32 %8, metadata !13759, metadata !DIExpression()), !dbg !13760
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #25, !dbg !13767
  call void @llvm.dbg.value(metadata i8* %9, metadata !13757, metadata !DIExpression()), !dbg !13760
  %10 = icmp eq i8* %9, null, !dbg !13768
  br i1 %10, label %13, label %11, !dbg !13770

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #25, !dbg !13771
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13773
  store i8 1, i8* %12, align 4, !dbg !13774
  call void @llvm.dbg.value(metadata i32 0, metadata !13758, metadata !DIExpression()), !dbg !13760
  br label %13, !dbg !13775

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13776
  call void @llvm.dbg.value(metadata i32 %14, metadata !13758, metadata !DIExpression()), !dbg !13760
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13777
  ret i32 %14, !dbg !13778
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #20 !dbg !13779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13784, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i32 %1, metadata !13785, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i32* %2, metadata !13786, metadata !DIExpression()), !dbg !13787
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13788
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13788
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13788
  store i32 %6, i32* %2, align 4, !dbg !13788
  ret i1 %5, !dbg !13789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13794, metadata !DIExpression()), !dbg !13795
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #24, !dbg !13796
  ret i8* %2, !dbg !13797
}

; Function Attrs: optsize
declare !dbg !13798 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13801 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13805, metadata !DIExpression()), !dbg !13806
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13807
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #25, !dbg !13807
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13807
  br i1 %4, label %5, label %15, !dbg !13809

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13810
  %7 = load i8, i8* %6, align 4, !dbg !13810
  %8 = and i8 %7, 1, !dbg !13812
  %9 = icmp eq i8 %8, 0, !dbg !13813
  br i1 %9, label %15, label %10, !dbg !13814

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13815
  %12 = load i8*, i8** %11, align 4, !dbg !13815
  tail call void @k_free(i8* noundef %12) #24, !dbg !13817
  %13 = load i8, i8* %6, align 4, !dbg !13818
  %14 = and i8 %13, -2, !dbg !13818
  store i8 %14, i8* %6, align 4, !dbg !13818
  br label %15, !dbg !13819

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13806
  ret i32 %16, !dbg !13820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #9 !dbg !13821 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13825, metadata !DIExpression()), !dbg !13826
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13827
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13828
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13829
  ret %struct.k_thread* %4, !dbg !13830
}

; Function Attrs: optsize
declare !dbg !13831 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13832 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13836, metadata !DIExpression()), !dbg !13837
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !13838
  br i1 %2, label %6, label %3, !dbg !13838

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13839
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13839
  br label %6, !dbg !13838

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13838
  ret %struct._dnode* %7, !dbg !13840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #9 !dbg !13841 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13845, metadata !DIExpression()), !dbg !13846
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13847
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13847
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13848
  ret i1 %4, !dbg !13849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13850 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13860, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13858, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i8* %1, metadata !13859, metadata !DIExpression()), !dbg !13868
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13869, !srcloc !13878
  call void @llvm.dbg.value(metadata i32 %5, metadata !13872, metadata !DIExpression()) #23, !dbg !13879
  %6 = icmp eq i32 %5, 0, !dbg !13880
  %7 = icmp eq i64 %4, 0, !dbg !13881
  %8 = select i1 %6, i1 true, i1 %7, !dbg !13881
  br i1 %8, label %10, label %9, !dbg !13881

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.263, i32 0, i32 0), i32 noundef 118) #24, !dbg !13882
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.264, i32 0, i32 0)) #24, !dbg !13882
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.263, i32 0, i32 0), i32 noundef 118) #24, !dbg !13882
  unreachable, !dbg !13882

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13885, metadata !DIExpression()) #23, !dbg !13892
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13894, !srcloc !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !13901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !13901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13891, metadata !DIExpression()) #23, !dbg !13892
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13902
  br i1 %13, label %15, label %14, !dbg !13905

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !13906
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !13906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !13906
  unreachable, !dbg !13906

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !13894
  call void @llvm.dbg.value(metadata i32 %16, metadata !13897, metadata !DIExpression()) #23, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %16, metadata !13891, metadata !DIExpression()) #23, !dbg !13892
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13908
  call void @llvm.dbg.value(metadata i32 %16, metadata !13862, metadata !DIExpression()), !dbg !13868
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13909
  %18 = load i32, i32* %17, align 4, !dbg !13909
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13911
  %20 = load i32, i32* %19, align 4, !dbg !13911
  %21 = icmp ult i32 %18, %20, !dbg !13912
  br i1 %21, label %22, label %52, !dbg !13913

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13914
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #24, !dbg !13916
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13861, metadata !DIExpression()), !dbg !13868
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !13917
  br i1 %25, label %34, label %26, !dbg !13919

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !13920
  %28 = load i8*, i8** %27, align 4, !dbg !13920
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13922
  %30 = load i32, i32* %29, align 4, !dbg !13922
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #24, !dbg !13923
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13924, metadata !DIExpression()), !dbg !13930
  call void @llvm.dbg.value(metadata i32 0, metadata !13929, metadata !DIExpression()), !dbg !13930
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !13932
  store i32 0, i32* %32, align 4, !dbg !13933
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #24, !dbg !13934
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13935
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #24, !dbg !13935
  br label %64, !dbg !13936

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13937
  %36 = load i8*, i8** %35, align 4, !dbg !13937
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13939
  %38 = load i32, i32* %37, align 4, !dbg !13939
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #24, !dbg !13940
  %40 = load i32, i32* %37, align 4, !dbg !13941
  %41 = load i8*, i8** %35, align 4, !dbg !13942
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !13942
  store i8* %42, i8** %35, align 4, !dbg !13942
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13943
  %44 = load i8*, i8** %43, align 4, !dbg !13943
  %45 = icmp eq i8* %42, %44, !dbg !13945
  br i1 %45, label %46, label %49, !dbg !13946

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13947
  %48 = load i8*, i8** %47, align 4, !dbg !13947
  store i8* %48, i8** %35, align 4, !dbg !13949
  br label %49, !dbg !13950

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !13951
  %51 = add i32 %50, 1, !dbg !13951
  store i32 %51, i32* %17, align 4, !dbg !13951
  call void @llvm.dbg.value(metadata i32 0, metadata !13867, metadata !DIExpression()), !dbg !13868
  br label %59, !dbg !13952

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !13953

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13954
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !13957
  store i8* %1, i8** %55, align 4, !dbg !13958
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13959
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13960
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #24, !dbg !13960
  call void @llvm.dbg.value(metadata i32 %58, metadata !13867, metadata !DIExpression()), !dbg !13868
  br label %64, !dbg !13961

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !13962
  call void @llvm.dbg.value(metadata i32 %60, metadata !13867, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()) #23, !dbg !13969
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13968, metadata !DIExpression()) #23, !dbg !13969
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13971
  br i1 %61, label %63, label %62, !dbg !13974

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 194) #24, !dbg !13975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !13975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 194) #24, !dbg !13975
  unreachable, !dbg !13975

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !13963, metadata !DIExpression()) #23, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %16, metadata !13977, metadata !DIExpression()) #23, !dbg !13980
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !13982, !srcloc !13983
  br label %64, !dbg !13984

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !13868
  ret i32 %65, !dbg !13985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct.sensor_msg* nocapture noundef writeonly %1) local_unnamed_addr #10 !dbg !13986 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13996, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata %struct.sensor_msg* %1, metadata !13997, metadata !DIExpression()), !dbg !13998
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13999
  %4 = load i32, i32* %3, align 4, !dbg !13999
  %5 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 0, !dbg !14000
  store i32 %4, i32* %5, align 4, !dbg !14001
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14002
  %7 = load i32, i32* %6, align 4, !dbg !14002
  %8 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 1, !dbg !14003
  store i32 %7, i32* %8, align 4, !dbg !14004
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14005
  %10 = load i32, i32* %9, align 4, !dbg !14005
  %11 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 2, !dbg !14006
  store i32 %10, i32* %11, align 4, !dbg !14007
  ret void, !dbg !14008
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14009 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14015, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14013, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata i8* %1, metadata !14014, metadata !DIExpression()), !dbg !14019
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14020, !srcloc !13878
  call void @llvm.dbg.value(metadata i32 %5, metadata !13872, metadata !DIExpression()) #23, !dbg !14025
  %6 = icmp eq i32 %5, 0, !dbg !14026
  %7 = icmp eq i64 %4, 0, !dbg !14027
  %8 = select i1 %6, i1 true, i1 %7, !dbg !14027
  br i1 %8, label %10, label %9, !dbg !14027

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.263, i32 0, i32 0), i32 noundef 208) #24, !dbg !14028
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.264, i32 0, i32 0)) #24, !dbg !14028
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.263, i32 0, i32 0), i32 noundef 208) #24, !dbg !14028
  unreachable, !dbg !14028

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13885, metadata !DIExpression()) #23, !dbg !14031
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14033, !srcloc !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !13891, metadata !DIExpression()) #23, !dbg !14031
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14036
  br i1 %13, label %15, label %14, !dbg !14037

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !14038
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !14038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !14038
  unreachable, !dbg !14038

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !14033
  call void @llvm.dbg.value(metadata i32 %16, metadata !13897, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 %16, metadata !13891, metadata !DIExpression()) #23, !dbg !14031
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14039
  call void @llvm.dbg.value(metadata i32 %16, metadata !14016, metadata !DIExpression()), !dbg !14019
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14040
  %18 = load i32, i32* %17, align 4, !dbg !14040
  %19 = icmp eq i32 %18, 0, !dbg !14042
  br i1 %19, label %61, label %20, !dbg !14043

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14044
  %22 = load i8*, i8** %21, align 4, !dbg !14044
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14046
  %24 = load i32, i32* %23, align 4, !dbg !14046
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #24, !dbg !14047
  %26 = load i32, i32* %23, align 4, !dbg !14048
  %27 = load i8*, i8** %21, align 4, !dbg !14049
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !14049
  store i8* %28, i8** %21, align 4, !dbg !14049
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14050
  %30 = load i8*, i8** %29, align 4, !dbg !14050
  %31 = icmp eq i8* %28, %30, !dbg !14052
  br i1 %31, label %32, label %35, !dbg !14053

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14054
  %34 = load i8*, i8** %33, align 4, !dbg !14054
  store i8* %34, i8** %21, align 4, !dbg !14056
  br label %35, !dbg !14057

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !14058
  %37 = add i32 %36, -1, !dbg !14058
  store i32 %37, i32* %17, align 4, !dbg !14058
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14059
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #24, !dbg !14060
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !14017, metadata !DIExpression()), !dbg !14019
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !14061
  br i1 %40, label %68, label %41, !dbg !14063

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14064
  %43 = load i8*, i8** %42, align 4, !dbg !14064
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !14066
  %45 = load i8*, i8** %44, align 4, !dbg !14066
  %46 = load i32, i32* %23, align 4, !dbg !14067
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #24, !dbg !14068
  %48 = load i32, i32* %23, align 4, !dbg !14069
  %49 = load i8*, i8** %42, align 4, !dbg !14070
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !14070
  store i8* %50, i8** %42, align 4, !dbg !14070
  %51 = load i8*, i8** %29, align 4, !dbg !14071
  %52 = icmp eq i8* %50, %51, !dbg !14073
  br i1 %52, label %53, label %56, !dbg !14074

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14075
  %55 = load i8*, i8** %54, align 4, !dbg !14075
  store i8* %55, i8** %42, align 4, !dbg !14077
  br label %56, !dbg !14078

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !14079
  %58 = add i32 %57, 1, !dbg !14079
  store i32 %58, i32* %17, align 4, !dbg !14079
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !13924, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.value(metadata i32 0, metadata !13929, metadata !DIExpression()), !dbg !14080
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !14082
  store i32 0, i32* %59, align 4, !dbg !14083
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #24, !dbg !14084
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14085
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #24, !dbg !14085
  br label %73, !dbg !14086

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !14087

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14088
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !14091
  store i8* %1, i8** %64, align 4, !dbg !14092
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14093
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14094
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #24, !dbg !14094
  call void @llvm.dbg.value(metadata i32 %67, metadata !14018, metadata !DIExpression()), !dbg !14019
  br label %73, !dbg !14095

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !14096
  call void @llvm.dbg.value(metadata i32 %69, metadata !14018, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()) #23, !dbg !14097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13968, metadata !DIExpression()) #23, !dbg !14097
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14099
  br i1 %70, label %72, label %71, !dbg !14100

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 194) #24, !dbg !14101
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !14101
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 194) #24, !dbg !14101
  unreachable, !dbg !14101

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !13963, metadata !DIExpression()) #23, !dbg !14097
  call void @llvm.dbg.value(metadata i32 %16, metadata !13977, metadata !DIExpression()) #23, !dbg !14102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !14104, !srcloc !13983
  br label %73, !dbg !14105

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !14019
  ret i32 %74, !dbg !14106
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14107 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14111, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i8* %1, metadata !14112, metadata !DIExpression()), !dbg !14115
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13885, metadata !DIExpression()) #23, !dbg !14117
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14119, !srcloc !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14121
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !14121
  call void @llvm.dbg.value(metadata i32 undef, metadata !13891, metadata !DIExpression()) #23, !dbg !14117
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !14122
  br i1 %5, label %7, label %6, !dbg !14123

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !14124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !14124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !14124
  unreachable, !dbg !14124

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14121
  call void @llvm.dbg.value(metadata i32 undef, metadata !13891, metadata !DIExpression()) #23, !dbg !14117
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !14125
  call void @llvm.dbg.value(metadata i32 undef, metadata !14113, metadata !DIExpression()), !dbg !14115
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14126
  %9 = load i32, i32* %8, align 4, !dbg !14126
  %10 = icmp eq i32 %9, 0, !dbg !14128
  br i1 %10, label %17, label %11, !dbg !14129

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14130
  %13 = load i8*, i8** %12, align 4, !dbg !14130
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14132
  %15 = load i32, i32* %14, align 4, !dbg !14132
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #24, !dbg !14133
  call void @llvm.dbg.value(metadata i32 0, metadata !14114, metadata !DIExpression()), !dbg !14115
  br label %17, !dbg !14134

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !14135
  call void @llvm.dbg.value(metadata i32 %18, metadata !14114, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()) #23, !dbg !14136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13968, metadata !DIExpression()) #23, !dbg !14136
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !14138
  br i1 %19, label %21, label %20, !dbg !14139

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 194) #24, !dbg !14140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !14140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 194) #24, !dbg !14140
  unreachable, !dbg !14140

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %22, metadata !13897, metadata !DIExpression()) #23, !dbg !14121
  call void @llvm.dbg.value(metadata i32 %22, metadata !13891, metadata !DIExpression()) #23, !dbg !14117
  call void @llvm.dbg.value(metadata i32 %22, metadata !14113, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()) #23, !dbg !14136
  call void @llvm.dbg.value(metadata i32 undef, metadata !13977, metadata !DIExpression()) #23, !dbg !14141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !14143, !srcloc !13983
  ret i32 %18, !dbg !14144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14145 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14149, metadata !DIExpression()), !dbg !14152
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14153
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !13885, metadata !DIExpression()) #23, !dbg !14154
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14156, !srcloc !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14158
  call void @llvm.dbg.value(metadata i32 undef, metadata !13898, metadata !DIExpression()) #23, !dbg !14158
  call void @llvm.dbg.value(metadata i32 undef, metadata !13891, metadata !DIExpression()) #23, !dbg !14154
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #24, !dbg !14159
  br i1 %4, label %6, label %5, !dbg !14160

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !14161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #24, !dbg !14161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.266, i32 0, i32 0), i32 noundef 148) #24, !dbg !14161
  unreachable, !dbg !14161

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14158
  call void @llvm.dbg.value(metadata i32 undef, metadata !13891, metadata !DIExpression()) #23, !dbg !14154
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #24, !dbg !14162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14150, metadata !DIExpression()), !dbg !14152
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #24, !dbg !14163
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14151, metadata !DIExpression()), !dbg !14152
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14164
  br i1 %9, label %15, label %10, !dbg !14165

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13924, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 -35, metadata !13929, metadata !DIExpression()), !dbg !14166
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !14169
  store i32 -35, i32* %12, align 4, !dbg !14170
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #24, !dbg !14171
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #24, !dbg !14163
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14151, metadata !DIExpression()), !dbg !14152
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !14164
  br i1 %14, label %15, label %10, !dbg !14165, !llvm.loop !14172

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !14156
  call void @llvm.dbg.value(metadata i32 %16, metadata !13897, metadata !DIExpression()) #23, !dbg !14158
  call void @llvm.dbg.value(metadata i32 %16, metadata !13891, metadata !DIExpression()) #23, !dbg !14154
  call void @llvm.dbg.value(metadata i32 %16, metadata !14150, metadata !DIExpression()), !dbg !14152
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14174
  store i32 0, i32* %17, align 4, !dbg !14175
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14176
  %19 = load i8*, i8** %18, align 4, !dbg !14176
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14177
  store i8* %19, i8** %20, align 4, !dbg !14178
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14179
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #24, !dbg !14179
  ret void, !dbg !14180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14192, metadata !DIExpression()), !dbg !14193
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14194
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !14195
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14196
  store i32 0, i32* %3, align 4, !dbg !14197
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14198
  tail call fastcc void @z_waitq_init.272(%struct._wait_q_t* noundef %4) #25, !dbg !14199
  ret i32 0, !dbg !14200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.272(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14201 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14205, metadata !DIExpression()), !dbg !14206
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14207
  tail call fastcc void @sys_dlist_init.273(%struct._dnode* noundef %2) #25, !dbg !14208
  ret void, !dbg !14209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.273(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14210 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14215, metadata !DIExpression()), !dbg !14216
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14217
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14218
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14219
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14220
  ret void, !dbg !14221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14222 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14231, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14230, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i8 0, metadata !14238, metadata !DIExpression()), !dbg !14243
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14244, !srcloc !14253
  call void @llvm.dbg.value(metadata i32 %4, metadata !14247, metadata !DIExpression()) #23, !dbg !14254
  %5 = icmp eq i32 %4, 0, !dbg !14255
  br i1 %5, label %7, label %6, !dbg !14256

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 101) #24, !dbg !14257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.279, i32 0, i32 0)) #24, !dbg !14257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 101) #24, !dbg !14257
  unreachable, !dbg !14257

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.280, metadata !14259, metadata !DIExpression()) #23, !dbg !14266
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14268, !srcloc !14274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14271, metadata !DIExpression()) #23, !dbg !14275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14272, metadata !DIExpression()) #23, !dbg !14275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14265, metadata !DIExpression()) #23, !dbg !14266
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14276
  br i1 %9, label %11, label %10, !dbg !14279

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 148) #24, !dbg !14280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 148) #24, !dbg !14280
  unreachable, !dbg !14280

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !14268
  call void @llvm.dbg.value(metadata i32 %12, metadata !14271, metadata !DIExpression()) #23, !dbg !14275
  call void @llvm.dbg.value(metadata i32 %12, metadata !14265, metadata !DIExpression()) #23, !dbg !14266
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14282
  call void @llvm.dbg.value(metadata i32 %12, metadata !14233, metadata !DIExpression()), !dbg !14243
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14283
  %14 = load i32, i32* %13, align 4, !dbg !14283
  %15 = icmp eq i32 %14, 0, !dbg !14283
  br i1 %15, label %21, label %16, !dbg !14283

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14283
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14283
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14283
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !14283
  br i1 %20, label %27, label %39, !dbg !14285, !prof !14286

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14287
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !14289
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !14289
  %25 = load i8, i8* %24, align 2, !dbg !14289
  %26 = sext i8 %25 to i32, !dbg !14287
  br label %30, !dbg !14290

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14291
  %29 = load i32, i32* %28, align 4, !dbg !14291
  br label %30, !dbg !14290

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !14292
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !14290
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14293
  store i32 %32, i32* %33, align 4, !dbg !14294
  %34 = add i32 %14, 1, !dbg !14295
  store i32 %34, i32* %13, align 4, !dbg !14295
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14296
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !14297
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #23, !dbg !14304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.280, metadata !14303, metadata !DIExpression()) #23, !dbg !14304
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14306
  br i1 %36, label %38, label %37, !dbg !14309

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14310
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14310
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14310
  unreachable, !dbg !14310

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !14298, metadata !DIExpression()) #23, !dbg !14304
  call void @llvm.dbg.value(metadata i32 %12, metadata !14312, metadata !DIExpression()) #23, !dbg !14315
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14317, !srcloc !14318
  br label %97, !dbg !14319

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !14320
  br i1 %40, label %41, label %45, !dbg !14322, !prof !14323

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #23, !dbg !14324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.280, metadata !14303, metadata !DIExpression()) #23, !dbg !14324
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14327
  br i1 %42, label %44, label %43, !dbg !14328

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14329
  unreachable, !dbg !14329

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !14298, metadata !DIExpression()) #23, !dbg !14324
  call void @llvm.dbg.value(metadata i32 %12, metadata !14312, metadata !DIExpression()) #23, !dbg !14330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14332, !srcloc !14318
  br label %97, !dbg !14333

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !14334
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !14334
  %48 = load i8, i8* %47, align 2, !dbg !14334
  %49 = sext i8 %48 to i32, !dbg !14335
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !14336
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !14336
  %52 = load i8, i8* %51, align 2, !dbg !14336
  %53 = sext i8 %52 to i32, !dbg !14337
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #25, !dbg !14338
  call void @llvm.dbg.value(metadata i32 %54, metadata !14232, metadata !DIExpression()), !dbg !14243
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #25, !dbg !14339
  br i1 %55, label %56, label %58, !dbg !14341

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #25, !dbg !14342
  call void @llvm.dbg.value(metadata i1 %57, metadata !14238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14243
  br label %58, !dbg !14344

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !14238, metadata !DIExpression()), !dbg !14243
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14345
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14346
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.280, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #24, !dbg !14346
  call void @llvm.dbg.value(metadata i32 %62, metadata !14239, metadata !DIExpression()), !dbg !14243
  %63 = icmp eq i32 %62, 0, !dbg !14347
  br i1 %63, label %97, label %64, !dbg !14349

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.280, metadata !14259, metadata !DIExpression()) #23, !dbg !14350
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14352, !srcloc !14274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14271, metadata !DIExpression()) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14272, metadata !DIExpression()) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14265, metadata !DIExpression()) #23, !dbg !14350
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14355
  br i1 %66, label %68, label %67, !dbg !14356

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 148) #24, !dbg !14357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 148) #24, !dbg !14357
  unreachable, !dbg !14357

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !14352
  call void @llvm.dbg.value(metadata i32 %69, metadata !14271, metadata !DIExpression()) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 %69, metadata !14265, metadata !DIExpression()) #23, !dbg !14350
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14358
  call void @llvm.dbg.value(metadata i32 %69, metadata !14233, metadata !DIExpression()), !dbg !14243
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14359
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !14359
  br i1 %71, label %90, label %72, !dbg !14360, !prof !14323

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.286(%struct._wait_q_t* noundef nonnull %60) #25, !dbg !14361
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !14240, metadata !DIExpression()), !dbg !14362
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !14363
  br i1 %74, label %83, label %75, !dbg !14364

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !14365
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !14365
  %78 = load i8, i8* %77, align 2, !dbg !14365
  %79 = sext i8 %78 to i32, !dbg !14366
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14367
  %81 = load i32, i32* %80, align 4, !dbg !14367
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #25, !dbg !14368
  br label %86, !dbg !14364

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14369
  %85 = load i32, i32* %84, align 4, !dbg !14369
  br label %86, !dbg !14364

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !14364
  call void @llvm.dbg.value(metadata i32 %87, metadata !14232, metadata !DIExpression()), !dbg !14243
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #25, !dbg !14370
  %89 = select i1 %88, i1 true, i1 %59, !dbg !14371
  call void @llvm.dbg.value(metadata i1 %89, metadata !14238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14243
  call void @llvm.dbg.value(metadata i8 poison, metadata !14238, metadata !DIExpression()), !dbg !14243
  br i1 %89, label %91, label %93, !dbg !14372

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !14238, metadata !DIExpression()), !dbg !14243
  br i1 %59, label %91, label %93, !dbg !14372

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !14373
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.280, [1 x i32] %92) #24, !dbg !14373
  br label %97, !dbg !14376

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.280, metadata !14303, metadata !DIExpression()) #23, !dbg !14377
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14380
  br i1 %94, label %96, label %95, !dbg !14381

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14382
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14382
  unreachable, !dbg !14382

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !14298, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %69, metadata !14312, metadata !DIExpression()) #23, !dbg !14383
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !14385, !srcloc !14318
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !14243
  ret i32 %98, !dbg !14386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !14387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14391, metadata !DIExpression()), !dbg !14394
  call void @llvm.dbg.value(metadata i32 %1, metadata !14392, metadata !DIExpression()), !dbg !14394
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #25, !dbg !14395
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !14395
  call void @llvm.dbg.value(metadata i32 %4, metadata !14393, metadata !DIExpression()), !dbg !14394
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #25, !dbg !14396
  call void @llvm.dbg.value(metadata i32 %5, metadata !14393, metadata !DIExpression()), !dbg !14394
  ret i32 %5, !dbg !14397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !14398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14402, metadata !DIExpression()), !dbg !14404
  call void @llvm.dbg.value(metadata i32 %1, metadata !14403, metadata !DIExpression()), !dbg !14404
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14405
  ret i1 %3, !dbg !14406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !14407 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14411, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i32 %1, metadata !14412, metadata !DIExpression()), !dbg !14413
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14414
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !14414
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14416
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14416
  %7 = load i8, i8* %6, align 2, !dbg !14416
  %8 = sext i8 %7 to i32, !dbg !14417
  %9 = icmp eq i32 %8, %1, !dbg !14418
  br i1 %9, label %12, label %10, !dbg !14419

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #24, !dbg !14420
  br label %12, !dbg !14422

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !14413
  ret i1 %13, !dbg !14423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.286(%struct._wait_q_t* noundef readonly %0) unnamed_addr #9 !dbg !14424 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14428, metadata !DIExpression()), !dbg !14429
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14430
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.287(%struct._dnode* noundef %2) #25, !dbg !14431
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14432
  ret %struct.k_thread* %4, !dbg !14433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.287(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14434 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14438, metadata !DIExpression()), !dbg !14439
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.288(%struct._dnode* noundef %0) #25, !dbg !14440
  br i1 %2, label %6, label %3, !dbg !14440

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14441
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14441
  br label %6, !dbg !14440

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14440
  ret %struct._dnode* %7, !dbg !14442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.288(%struct._dnode* noundef readonly %0) unnamed_addr #9 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14447, metadata !DIExpression()), !dbg !14448
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14449
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14449
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14450
  ret i1 %4, !dbg !14451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !14452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14454, metadata !DIExpression()), !dbg !14456
  call void @llvm.dbg.value(metadata i32 %1, metadata !14455, metadata !DIExpression()), !dbg !14456
  %3 = icmp slt i32 %0, %1, !dbg !14457
  ret i1 %3, !dbg !14458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !14459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14461, metadata !DIExpression()), !dbg !14462
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #25, !dbg !14463
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14463
  ret i32 %3, !dbg !14464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !14465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14469, metadata !DIExpression()), !dbg !14470
  %2 = icmp sgt i32 %0, -128, !dbg !14471
  ret i1 %2, !dbg !14472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14473 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14475, metadata !DIExpression()), !dbg !14479
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14480, !srcloc !14253
  call void @llvm.dbg.value(metadata i32 %2, metadata !14247, metadata !DIExpression()) #23, !dbg !14485
  %3 = icmp eq i32 %2, 0, !dbg !14486
  br i1 %3, label %5, label %4, !dbg !14487

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 205) #24, !dbg !14488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.279, i32 0, i32 0)) #24, !dbg !14488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 205) #24, !dbg !14488
  unreachable, !dbg !14488

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14490
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !14490
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14490
  br i1 %8, label %41, label %9, !dbg !14492

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14493
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !14493
  br i1 %11, label %12, label %41, !dbg !14495

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14496
  %14 = load i32, i32* %13, align 4, !dbg !14496
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !14499

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 229) #24, !dbg !14500
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 229) #24, !dbg !14500
  unreachable, !dbg !14500

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !14502
  store i32 %17, i32* %13, align 4, !dbg !14502
  br label %41, !dbg !14505

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.280, metadata !14259, metadata !DIExpression()) #23, !dbg !14506
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14508, !srcloc !14274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14271, metadata !DIExpression()) #23, !dbg !14510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14272, metadata !DIExpression()) #23, !dbg !14510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14265, metadata !DIExpression()) #23, !dbg !14506
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14511
  br i1 %20, label %22, label %21, !dbg !14512

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 148) #24, !dbg !14513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 148) #24, !dbg !14513
  unreachable, !dbg !14513

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14508
  call void @llvm.dbg.value(metadata i32 %23, metadata !14271, metadata !DIExpression()) #23, !dbg !14510
  call void @llvm.dbg.value(metadata i32 %23, metadata !14265, metadata !DIExpression()) #23, !dbg !14506
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14514
  call void @llvm.dbg.value(metadata i32 %23, metadata !14477, metadata !DIExpression()), !dbg !14479
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14515
  %25 = load i32, i32* %24, align 4, !dbg !14515
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #25, !dbg !14516
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14517
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #24, !dbg !14518
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14476, metadata !DIExpression()), !dbg !14479
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !14519
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !14520
  br i1 %29, label %37, label %30, !dbg !14522

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !14523
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !14523
  %33 = load i8, i8* %32, align 2, !dbg !14523
  %34 = sext i8 %33 to i32, !dbg !14525
  store i32 %34, i32* %24, align 4, !dbg !14526
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14527, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i32 0, metadata !14532, metadata !DIExpression()), !dbg !14533
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 7, i32 1, !dbg !14535
  store i32 0, i32* %35, align 4, !dbg !14536
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #24, !dbg !14537
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14538
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.280, [1 x i32] %36) #24, !dbg !14538
  br label %41, !dbg !14539

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !14540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #23, !dbg !14542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.280, metadata !14303, metadata !DIExpression()) #23, !dbg !14542
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14544
  br i1 %38, label %40, label %39, !dbg !14545

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14546
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.280) #24, !dbg !14546
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.282, i32 0, i32 0), i32 noundef 194) #24, !dbg !14546
  unreachable, !dbg !14546

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !14298, metadata !DIExpression()) #23, !dbg !14542
  call void @llvm.dbg.value(metadata i32 %23, metadata !14312, metadata !DIExpression()) #23, !dbg !14547
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14549, !srcloc !14318
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !14479
  ret i32 %42, !dbg !14550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !14551 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14566, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 %1, metadata !14567, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 %2, metadata !14568, metadata !DIExpression()), !dbg !14569
  %4 = icmp eq i32 %2, 0, !dbg !14570
  %5 = icmp ugt i32 %1, %2, !dbg !14570
  %6 = or i1 %4, %5, !dbg !14570
  br i1 %6, label %11, label %7, !dbg !14570

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14572
  store i32 %1, i32* %8, align 4, !dbg !14573
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14574
  store i32 %2, i32* %9, align 4, !dbg !14575
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14576
  tail call fastcc void @z_waitq_init.292(%struct._wait_q_t* noundef %10) #25, !dbg !14577
  br label %11, !dbg !14578

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14569
  ret i32 %12, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.292(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14580 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14585, metadata !DIExpression()), !dbg !14586
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14587
  tail call fastcc void @sys_dlist_init.293(%struct._dnode* noundef %2) #25, !dbg !14588
  ret void, !dbg !14589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.293(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14590 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14595, metadata !DIExpression()), !dbg !14596
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14597
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14598
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14599
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14600
  ret void, !dbg !14601
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14602 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14606, metadata !DIExpression()), !dbg !14687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.294, metadata !14688, metadata !DIExpression()) #23, !dbg !14695
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14697, !srcloc !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !14695
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14705
  br i1 %3, label %5, label %4, !dbg !14708

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 148) #24, !dbg !14709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.298, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 148) #24, !dbg !14709
  unreachable, !dbg !14709

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !14695
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()), !dbg !14687
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14712
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #24, !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14612, metadata !DIExpression()), !dbg !14687
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14714
  br i1 %8, label %11, label %9, !dbg !14716

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14717, metadata !DIExpression()), !dbg !14723
  call void @llvm.dbg.value(metadata i32 0, metadata !14722, metadata !DIExpression()), !dbg !14723
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14726
  store i32 0, i32* %10, align 4, !dbg !14727
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #24, !dbg !14728
  br label %19, !dbg !14729

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14730
  %13 = load i32, i32* %12, align 4, !dbg !14730
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14732
  %15 = load i32, i32* %14, align 4, !dbg !14732
  %16 = icmp ne i32 %13, %15, !dbg !14733
  %17 = zext i1 %16 to i32, !dbg !14734
  %18 = add i32 %13, %17, !dbg !14735
  store i32 %18, i32* %12, align 4, !dbg !14735
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !14697
  call void @llvm.dbg.value(metadata i32 %20, metadata !14700, metadata !DIExpression()) #23, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %20, metadata !14694, metadata !DIExpression()) #23, !dbg !14695
  call void @llvm.dbg.value(metadata i32 %20, metadata !14607, metadata !DIExpression()), !dbg !14687
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !14736
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.294, [1 x i32] %21) #24, !dbg !14736
  ret void, !dbg !14737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14738 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14747, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14746, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata i32 0, metadata !14748, metadata !DIExpression()), !dbg !14751
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14752, !srcloc !14761
  call void @llvm.dbg.value(metadata i32 %4, metadata !14755, metadata !DIExpression()) #23, !dbg !14762
  %5 = icmp eq i32 %4, 0, !dbg !14763
  %6 = icmp eq i64 %3, 0, !dbg !14764
  %7 = select i1 %5, i1 true, i1 %6, !dbg !14764
  br i1 %7, label %9, label %8, !dbg !14764

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 122) #24, !dbg !14765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.301, i32 0, i32 0)) #24, !dbg !14765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 122) #24, !dbg !14765
  unreachable, !dbg !14765

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.294, metadata !14688, metadata !DIExpression()) #23, !dbg !14767
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14769, !srcloc !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !14767
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14772
  br i1 %11, label %13, label %12, !dbg !14773

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 148) #24, !dbg !14774
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.298, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14774
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 148) #24, !dbg !14774
  unreachable, !dbg !14774

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %14, metadata !14700, metadata !DIExpression()) #23, !dbg !14771
  call void @llvm.dbg.value(metadata i32 %14, metadata !14694, metadata !DIExpression()) #23, !dbg !14767
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %14, metadata !14749, metadata !DIExpression()), !dbg !14751
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14776
  %16 = load i32, i32* %15, align 4, !dbg !14776
  %17 = icmp eq i32 %16, 0, !dbg !14776
  br i1 %17, label %23, label %18, !dbg !14778, !prof !14323

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !14779
  store i32 %19, i32* %15, align 4, !dbg !14779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14781, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.294, metadata !14786, metadata !DIExpression()) #23, !dbg !14787
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14789
  br i1 %20, label %22, label %21, !dbg !14792

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 194) #24, !dbg !14793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.303, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 194) #24, !dbg !14793
  unreachable, !dbg !14793

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !14781, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 %14, metadata !14795, metadata !DIExpression()) #23, !dbg !14798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14800, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 0, metadata !14748, metadata !DIExpression()), !dbg !14751
  br label %32, !dbg !14802

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !14803

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !14781, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.294, metadata !14786, metadata !DIExpression()) #23, !dbg !14804
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14808
  br i1 %25, label %27, label %26, !dbg !14809

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 194) #24, !dbg !14810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.303, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 194) #24, !dbg !14810
  unreachable, !dbg !14810

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !14781, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %14, metadata !14795, metadata !DIExpression()) #23, !dbg !14811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14813, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 -16, metadata !14748, metadata !DIExpression()), !dbg !14751
  br label %32, !dbg !14814

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14815
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !14816
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.294, [1 x i32] %30, %struct._wait_q_t* noundef %29, [1 x i64] %1) #24, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %31, metadata !14748, metadata !DIExpression()), !dbg !14751
  br label %32, !dbg !14817

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !14751
  call void @llvm.dbg.value(metadata i32 %33, metadata !14748, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.label(metadata !14750), !dbg !14818
  ret i32 %33, !dbg !14819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14820 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14822, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.294, metadata !14688, metadata !DIExpression()) #23, !dbg !14826
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14828, !srcloc !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14830
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !14830
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !14826
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14831
  br i1 %3, label %5, label %4, !dbg !14832

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 148) #24, !dbg !14833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.298, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.297, i32 0, i32 0), i32 noundef 148) #24, !dbg !14833
  unreachable, !dbg !14833

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14830
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !14826
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.294) #24, !dbg !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !14824, metadata !DIExpression()), !dbg !14825
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #24, !dbg !14835
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14823, metadata !DIExpression()), !dbg !14825
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14837
  br i1 %8, label %14, label %9, !dbg !14839

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !14717, metadata !DIExpression()), !dbg !14840
  call void @llvm.dbg.value(metadata i32 -11, metadata !14722, metadata !DIExpression()), !dbg !14840
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !14842
  store i32 -11, i32* %11, align 4, !dbg !14843
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #24, !dbg !14844
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #24, !dbg !14835
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14823, metadata !DIExpression()), !dbg !14825
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !14837
  br i1 %13, label %14, label %9, !dbg !14839, !llvm.loop !14845

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !14828
  call void @llvm.dbg.value(metadata i32 %15, metadata !14700, metadata !DIExpression()) #23, !dbg !14830
  call void @llvm.dbg.value(metadata i32 %15, metadata !14694, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata i32 %15, metadata !14824, metadata !DIExpression()), !dbg !14825
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14848
  store i32 0, i32* %16, align 4, !dbg !14849
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !14850
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.294, [1 x i32] %17) #24, !dbg !14850
  ret void, !dbg !14851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_work_init(%struct.k_work* noundef writeonly %0, void (%struct.k_work*)* noundef %1) local_unnamed_addr #1 !dbg !14852 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !14856, metadata !DIExpression()), !dbg !14858
  call void @llvm.dbg.value(metadata void (%struct.k_work*)* %1, metadata !14857, metadata !DIExpression()), !dbg !14858
  %3 = icmp eq %struct.k_work* %0, null, !dbg !14859
  br i1 %3, label %4, label %5, !dbg !14862

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 137) #24, !dbg !14863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 137) #24, !dbg !14863
  unreachable, !dbg !14863

5:                                                ; preds = %2
  %6 = icmp eq void (%struct.k_work*)* %1, null, !dbg !14865
  br i1 %6, label %7, label %8, !dbg !14868

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 138) #24, !dbg !14869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 138) #24, !dbg !14869
  unreachable, !dbg !14869

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 0, i32 0, !dbg !14871
  store %struct._snode* null, %struct._snode** %9, align 4, !dbg !14871
  %10 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 1, !dbg !14871
  store void (%struct.k_work*)* %1, void (%struct.k_work*)** %10, align 4, !dbg !14871
  %11 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 2, !dbg !14871
  store %struct.k_work_q* null, %struct.k_work_q** %11, align 4, !dbg !14871
  %12 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !14871
  store i32 0, i32* %12, align 4, !dbg !14871
  ret void, !dbg !14872
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_busy_get(%struct.k_work* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14873 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !14879, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !14894
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14896, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !14894
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14904
  br i1 %3, label %5, label %4, !dbg !14907

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !14908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !14908
  unreachable, !dbg !14908

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !14894
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14910
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()), !dbg !14886
  %6 = tail call fastcc i32 @work_busy_get_locked(%struct.k_work* noundef %0) #25, !dbg !14911
  call void @llvm.dbg.value(metadata i32 %6, metadata !14885, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !14918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !14918
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14920
  br i1 %7, label %9, label %8, !dbg !14923

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !14924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !14924
  unreachable, !dbg !14924

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !14896
  call void @llvm.dbg.value(metadata i32 %10, metadata !14899, metadata !DIExpression()) #23, !dbg !14903
  call void @llvm.dbg.value(metadata i32 %10, metadata !14893, metadata !DIExpression()) #23, !dbg !14894
  call void @llvm.dbg.value(metadata i32 %10, metadata !14880, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !14918
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !14929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !14931, !srcloc !14932
  ret i32 %6, !dbg !14933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @work_busy_get_locked(%struct.k_work* nocapture noundef readonly %0) unnamed_addr #9 !dbg !14934 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !14936, metadata !DIExpression()), !dbg !14937
  %2 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !14938
  %3 = tail call fastcc i32 @flags_get(i32* noundef nonnull %2) #25, !dbg !14939
  %4 = and i32 %3, 15, !dbg !14940
  ret i32 %4, !dbg !14941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @flags_get(i32* nocapture noundef readonly %0) unnamed_addr #9 !dbg !14942 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !14948, metadata !DIExpression()), !dbg !14949
  %2 = load i32, i32* %0, align 4, !dbg !14950
  ret i32 %2, !dbg !14951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_work_submit_to_queue(%struct.k_work_q* noundef %0, %struct.k_work* noundef %1) local_unnamed_addr #1 !dbg !14952 {
  %3 = alloca %struct.k_work_q*, align 4
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !14956, metadata !DIExpression()), !dbg !14960
  store %struct.k_work_q* %0, %struct.k_work_q** %3, align 4
  call void @llvm.dbg.value(metadata %struct.k_work* %1, metadata !14957, metadata !DIExpression()), !dbg !14960
  %4 = icmp eq %struct.k_work* %1, null, !dbg !14961
  br i1 %4, label %5, label %6, !dbg !14964

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 372) #24, !dbg !14965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 372) #24, !dbg !14965
  unreachable, !dbg !14965

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !14967
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14969, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !14967
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14972
  br i1 %8, label %10, label %9, !dbg !14973

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !14974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !14974
  unreachable, !dbg !14974

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !14967
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14975
  call void @llvm.dbg.value(metadata i32 undef, metadata !14958, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata %struct.k_work_q** %3, metadata !14956, metadata !DIExpression(DW_OP_deref)), !dbg !14960
  %11 = call fastcc i32 @submit_to_queue_locked(%struct.k_work* noundef nonnull %1, %struct.k_work_q** noundef nonnull %3) #25, !dbg !14976
  call void @llvm.dbg.value(metadata i32 %11, metadata !14959, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !14977
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14979
  br i1 %12, label %14, label %13, !dbg !14980

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !14981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !14981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !14981
  unreachable, !dbg !14981

14:                                               ; preds = %10
  %15 = extractvalue { i32, i32 } %7, 0, !dbg !14969
  call void @llvm.dbg.value(metadata i32 %15, metadata !14899, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 %15, metadata !14893, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 %15, metadata !14958, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !14977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !14982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14984, !srcloc !14932
  ret i32 %11, !dbg !14985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @submit_to_queue_locked(%struct.k_work* noundef %0, %struct.k_work_q** nocapture noundef %1) unnamed_addr #1 !dbg !14986 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !14991, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct.k_work_q** %1, metadata !14992, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata i32 0, metadata !14993, metadata !DIExpression()), !dbg !14998
  %3 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !14999
  %4 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %3, i32 noundef 1) #25, !dbg !15000
  br i1 %4, label %30, label %5, !dbg !15001

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %3, i32 noundef 2) #25, !dbg !15002
  br i1 %6, label %30, label %7, !dbg !15003

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !14993, metadata !DIExpression()), !dbg !14998
  %8 = load %struct.k_work_q*, %struct.k_work_q** %1, align 4, !dbg !15004
  %9 = icmp eq %struct.k_work_q* %8, null, !dbg !15006
  br i1 %9, label %10, label %13, !dbg !15007

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 2, !dbg !15008
  %12 = load %struct.k_work_q*, %struct.k_work_q** %11, align 4, !dbg !15008
  store %struct.k_work_q* %12, %struct.k_work_q** %1, align 4, !dbg !15010
  br label %13, !dbg !15011

13:                                               ; preds = %10, %7
  %14 = phi %struct.k_work_q* [ %12, %10 ], [ %8, %7 ]
  %15 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %3, i32 noundef 0) #25, !dbg !15012
  br i1 %15, label %16, label %22, !dbg !15014

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 2, !dbg !15015
  %18 = load %struct.k_work_q*, %struct.k_work_q** %17, align 4, !dbg !15015
  %19 = icmp eq %struct.k_work_q* %18, null, !dbg !15015
  br i1 %19, label %20, label %21, !dbg !15019

20:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 334) #24, !dbg !15020
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 334) #24, !dbg !15020
  unreachable, !dbg !15020

21:                                               ; preds = %16
  store %struct.k_work_q* %18, %struct.k_work_q** %1, align 4, !dbg !15022
  call void @llvm.dbg.value(metadata i32 2, metadata !14993, metadata !DIExpression()), !dbg !14998
  br label %22, !dbg !15023

22:                                               ; preds = %21, %13
  %23 = phi %struct.k_work_q* [ %18, %21 ], [ %14, %13 ], !dbg !15024
  %24 = phi i32 [ 2, %21 ], [ 1, %13 ], !dbg !15025
  call void @llvm.dbg.value(metadata i32 %24, metadata !14993, metadata !DIExpression()), !dbg !14998
  %25 = tail call fastcc i32 @queue_submit_locked(%struct.k_work_q* noundef %23, %struct.k_work* noundef %0) #25, !dbg !15026
  call void @llvm.dbg.value(metadata i32 %25, metadata !14994, metadata !DIExpression()), !dbg !15025
  %26 = icmp slt i32 %25, 0, !dbg !15027
  br i1 %26, label %30, label %27, !dbg !15029

27:                                               ; preds = %22
  tail call fastcc void @flag_set(i32* noundef nonnull %3, i32 noundef 2) #25, !dbg !15030
  %28 = load %struct.k_work_q*, %struct.k_work_q** %1, align 4, !dbg !15032
  %29 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 2, !dbg !15033
  store %struct.k_work_q* %28, %struct.k_work_q** %29, align 4, !dbg !15034
  call void @llvm.dbg.value(metadata i32 %24, metadata !14993, metadata !DIExpression()), !dbg !14998
  br label %32, !dbg !15035

30:                                               ; preds = %5, %2, %22
  %31 = phi i32 [ %25, %22 ], [ -16, %2 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !14993, metadata !DIExpression()), !dbg !14998
  store %struct.k_work_q* null, %struct.k_work_q** %1, align 4, !dbg !15036
  br label %32, !dbg !15039

32:                                               ; preds = %27, %30
  %33 = phi i32 [ %31, %30 ], [ %24, %27 ]
  ret i32 %33, !dbg !15040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @flag_test(i32* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #9 !dbg !15041 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15045, metadata !DIExpression()), !dbg !15047
  call void @llvm.dbg.value(metadata i32 %1, metadata !15046, metadata !DIExpression()), !dbg !15047
  %3 = load i32, i32* %0, align 4, !dbg !15048
  %4 = shl nuw i32 1, %1, !dbg !15049
  %5 = and i32 %3, %4, !dbg !15050
  %6 = icmp ne i32 %5, 0, !dbg !15051
  ret i1 %6, !dbg !15052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_submit_locked(%struct.k_work_q* noundef %0, %struct.k_work* noundef %1) unnamed_addr #1 !dbg !15053 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !15055, metadata !DIExpression()), !dbg !15061
  call void @llvm.dbg.value(metadata %struct.k_work* %1, metadata !15056, metadata !DIExpression()), !dbg !15061
  %3 = icmp eq %struct.k_work_q* %0, null, !dbg !15062
  br i1 %3, label %26, label %4, !dbg !15064

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 -16, metadata !15057, metadata !DIExpression()), !dbg !15061
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15065
  %6 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 0, !dbg !15066
  %7 = icmp eq %struct.k_thread* %5, %6, !dbg !15067
  br i1 %7, label %8, label %11, !dbg !15068

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15069
  %10 = xor i1 %9, true, !dbg !15070
  br label %11

11:                                               ; preds = %8, %4
  %12 = phi i1 [ false, %4 ], [ %10, %8 ], !dbg !15061
  call void @llvm.dbg.value(metadata i1 %12, metadata !15058, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15061
  %13 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 4, !dbg !15071
  %14 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %13, i32 noundef 2) #25, !dbg !15072
  call void @llvm.dbg.value(metadata i1 %14, metadata !15059, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15061
  %15 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %13, i32 noundef 3) #25, !dbg !15073
  call void @llvm.dbg.value(metadata i1 %15, metadata !15060, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15061
  %16 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %13, i32 noundef 0) #25, !dbg !15074
  br i1 %16, label %17, label %26, !dbg !15076

17:                                               ; preds = %11
  %18 = xor i1 %14, true, !dbg !15077
  %19 = select i1 %18, i1 true, i1 %12, !dbg !15077
  br i1 %19, label %20, label %26, !dbg !15077

20:                                               ; preds = %17
  %21 = xor i1 %15, true, !dbg !15079
  %22 = select i1 %21, i1 true, i1 %14, !dbg !15079
  br i1 %22, label %23, label %26, !dbg !15079

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 1, !dbg !15081
  %25 = getelementptr inbounds %struct.k_work, %struct.k_work* %1, i32 0, i32 0, !dbg !15083
  tail call fastcc void @sys_slist_append(%struct._slist* noundef nonnull %24, %struct._snode* noundef %25) #25, !dbg !15084
  call void @llvm.dbg.value(metadata i32 1, metadata !15057, metadata !DIExpression()), !dbg !15061
  tail call fastcc void @notify_queue_locked(%struct.k_work_q* noundef nonnull %0) #25, !dbg !15085
  br label %26

26:                                               ; preds = %23, %11, %17, %20, %2
  %27 = phi i32 [ -22, %2 ], [ 1, %23 ], [ -19, %11 ], [ -16, %17 ], [ -16, %20 ], !dbg !15061
  ret i32 %27, !dbg !15086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @flag_set(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !15087 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15091, metadata !DIExpression()), !dbg !15093
  call void @llvm.dbg.value(metadata i32 %1, metadata !15092, metadata !DIExpression()), !dbg !15093
  %3 = shl nuw i32 1, %1, !dbg !15094
  %4 = load i32, i32* %0, align 4, !dbg !15095
  %5 = or i32 %4, %3, !dbg !15095
  store i32 %5, i32* %0, align 4, !dbg !15095
  ret void, !dbg !15096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_append(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !15097 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15102, metadata !DIExpression()), !dbg !15104
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15103, metadata !DIExpression()), !dbg !15104
  tail call fastcc void @z_snode_next_set.317(%struct._snode* noundef %1, %struct._snode* noundef null) #25, !dbg !15105
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_tail.318(%struct._slist* noundef %0) #25, !dbg !15106
  %4 = icmp eq %struct._snode* %3, null, !dbg !15106
  br i1 %4, label %5, label %6, !dbg !15105

5:                                                ; preds = %2
  tail call fastcc void @z_slist_tail_set.319(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !15108
  tail call fastcc void @z_slist_head_set.320(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !15108
  br label %7, !dbg !15108

6:                                                ; preds = %2
  tail call fastcc void @z_snode_next_set.317(%struct._snode* noundef nonnull %3, %struct._snode* noundef %1) #25, !dbg !15110
  tail call fastcc void @z_slist_tail_set.319(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !15110
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @notify_queue_locked(%struct.k_work_q* noundef %0) unnamed_addr #1 !dbg !15112 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i8 0, metadata !15117, metadata !DIExpression()), !dbg !15118
  %2 = icmp eq %struct.k_work_q* %0, null, !dbg !15119
  br i1 %2, label %6, label %3, !dbg !15121

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 2, !dbg !15122
  %5 = tail call zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef nonnull %4, i32 noundef 0, i8* noundef null) #24, !dbg !15124
  call void @llvm.dbg.value(metadata i1 %5, metadata !15117, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15118
  br label %6, !dbg !15125

6:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i8 undef, metadata !15117, metadata !DIExpression()), !dbg !15118
  ret void, !dbg !15126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set.317(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !15131, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15132, metadata !DIExpression()), !dbg !15133
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !15134
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !15135
  ret void, !dbg !15136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail.318(%struct._slist* nocapture noundef readonly %0) unnamed_addr #9 !dbg !15137 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15141, metadata !DIExpression()), !dbg !15142
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !15143
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !15143
  ret %struct._snode* %3, !dbg !15144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set.319(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !15145 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15147, metadata !DIExpression()), !dbg !15149
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15148, metadata !DIExpression()), !dbg !15149
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !15150
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !15151
  ret void, !dbg !15152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set.320(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !15153 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15155, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15156, metadata !DIExpression()), !dbg !15157
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !15158
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !15159
  ret void, !dbg !15160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_submit_to_queue(%struct.k_work_q* noundef %0, %struct.k_work* noundef %1) local_unnamed_addr #1 !dbg !15161 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !15163, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata %struct.k_work* %1, metadata !15164, metadata !DIExpression()), !dbg !15166
  %3 = tail call i32 @z_work_submit_to_queue(%struct.k_work_q* noundef %0, %struct.k_work* noundef %1) #25, !dbg !15167
  call void @llvm.dbg.value(metadata i32 %3, metadata !15165, metadata !DIExpression()), !dbg !15166
  %4 = icmp sgt i32 %3, 0, !dbg !15168
  br i1 %4, label %5, label %6, !dbg !15170

5:                                                ; preds = %2
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15171
  br label %6, !dbg !15173

6:                                                ; preds = %2, %5
  ret i32 %3, !dbg !15174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15175 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15176, !srcloc !14902
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15176
  call void @llvm.dbg.value(metadata i32 %2, metadata !14899, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !15178
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15179
  ret void, !dbg !15180
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_submit(%struct.k_work* noundef %0) local_unnamed_addr #1 !dbg !15181 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15185, metadata !DIExpression()), !dbg !15187
  %2 = tail call i32 @k_work_submit_to_queue(%struct.k_work_q* noundef nonnull @k_sys_work_q, %struct.k_work* noundef %0) #25, !dbg !15188
  call void @llvm.dbg.value(metadata i32 %2, metadata !15186, metadata !DIExpression()), !dbg !15187
  ret i32 %2, !dbg !15189
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_work_flush(%struct.k_work* noundef %0, %struct.k_work_sync* noundef %1) local_unnamed_addr #1 !dbg !15190 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15202, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata %struct.k_work_sync* %1, metadata !15203, metadata !DIExpression()), !dbg !15207
  %3 = icmp eq %struct.k_work* %0, null, !dbg !15208
  br i1 %3, label %4, label %5, !dbg !15211

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 451) #24, !dbg !15212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 451) #24, !dbg !15212
  unreachable, !dbg !15212

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !15214
  %7 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %6, i32 noundef 8) #25, !dbg !15214
  br i1 %7, label %8, label %9, !dbg !15217

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 452) #24, !dbg !15218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 452) #24, !dbg !15218
  unreachable, !dbg !15218

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15220
  br i1 %10, label %11, label %12, !dbg !15223

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 453) #24, !dbg !15224
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 453) #24, !dbg !15224
  unreachable, !dbg !15224

12:                                               ; preds = %9
  %13 = icmp eq %struct.k_work_sync* %1, null, !dbg !15226
  br i1 %13, label %14, label %15, !dbg !15229

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 454) #24, !dbg !15230
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 454) #24, !dbg !15230
  unreachable, !dbg !15230

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_work_sync* %1, metadata !15204, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !15232
  %16 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15234, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15236
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !15236
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15232
  %17 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15237
  br i1 %17, label %19, label %18, !dbg !15238

18:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15239
  unreachable, !dbg !15239

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.k_work_sync, %struct.k_work_sync* %1, i32 0, i32 0, i32 0, !dbg !15240
  call void @llvm.dbg.value(metadata %struct.z_work_flusher* %20, metadata !15204, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15236
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15232
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15241
  call void @llvm.dbg.value(metadata i32 undef, metadata !15205, metadata !DIExpression()), !dbg !15207
  %21 = tail call fastcc zeroext i1 @work_flush_locked(%struct.k_work* noundef nonnull %0, %struct.z_work_flusher* noundef nonnull %20) #25, !dbg !15242
  call void @llvm.dbg.value(metadata i1 %21, metadata !15206, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15207
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !15243
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15245
  br i1 %22, label %24, label %23, !dbg !15246

23:                                               ; preds = %19
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15247
  unreachable, !dbg !15247

24:                                               ; preds = %19
  %25 = extractvalue { i32, i32 } %16, 0, !dbg !15234
  call void @llvm.dbg.value(metadata i32 %25, metadata !14899, metadata !DIExpression()) #23, !dbg !15236
  call void @llvm.dbg.value(metadata i32 %25, metadata !14893, metadata !DIExpression()) #23, !dbg !15232
  call void @llvm.dbg.value(metadata i32 %25, metadata !15205, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !15248
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %25) #23, !dbg !15250, !srcloc !14932
  br i1 %21, label %26, label %28, !dbg !15251

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.k_work_sync, %struct.k_work_sync* %1, i32 0, i32 0, i32 0, i32 1, !dbg !15252
  tail call fastcc void @k_sem_take(%struct.k_sem* noundef nonnull %27) #25, !dbg !15255
  br label %28, !dbg !15256

28:                                               ; preds = %24, %26
  ret i1 %21, !dbg !15257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @work_flush_locked(%struct.k_work* noundef %0, %struct.z_work_flusher* noundef %1) unnamed_addr #1 !dbg !15258 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15262, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata %struct.z_work_flusher* %1, metadata !15263, metadata !DIExpression()), !dbg !15268
  %3 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !15269
  %4 = tail call fastcc i32 @flags_get(i32* noundef nonnull %3) #25, !dbg !15270
  %5 = and i32 %4, 5, !dbg !15271
  %6 = icmp ne i32 %5, 0, !dbg !15272
  call void @llvm.dbg.value(metadata i1 %6, metadata !15264, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15268
  br i1 %6, label %7, label %13, !dbg !15273

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 2, !dbg !15274
  %9 = load %struct.k_work_q*, %struct.k_work_q** %8, align 4, !dbg !15274
  call void @llvm.dbg.value(metadata %struct.k_work_q* %9, metadata !15265, metadata !DIExpression()), !dbg !15275
  %10 = icmp eq %struct.k_work_q* %9, null, !dbg !15276
  br i1 %10, label %11, label %12, !dbg !15279

11:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 439) #24, !dbg !15280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 439) #24, !dbg !15280
  unreachable, !dbg !15280

12:                                               ; preds = %7
  tail call fastcc void @queue_flusher_locked(%struct.k_work_q* noundef nonnull %9, %struct.k_work* noundef nonnull %0, %struct.z_work_flusher* noundef %1) #25, !dbg !15282
  tail call fastcc void @notify_queue_locked(%struct.k_work_q* noundef nonnull %9) #25, !dbg !15283
  br label %13, !dbg !15284

13:                                               ; preds = %12, %2
  ret i1 %6, !dbg !15285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_take(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !15286 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15296, metadata !DIExpression()), !dbg !15297
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15295, metadata !DIExpression()), !dbg !15297
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15298, !srcloc !15300
  %2 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] [i64 -1]) #24, !dbg !15301
  ret void, !dbg !15302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @queue_flusher_locked(%struct.k_work_q* nocapture noundef %0, %struct.k_work* noundef %1, %struct.z_work_flusher* noundef %2) unnamed_addr #1 !dbg !15303 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !15307, metadata !DIExpression()), !dbg !15312
  call void @llvm.dbg.value(metadata %struct.k_work* %1, metadata !15308, metadata !DIExpression()), !dbg !15312
  call void @llvm.dbg.value(metadata %struct.z_work_flusher* %2, metadata !15309, metadata !DIExpression()), !dbg !15312
  call void @llvm.dbg.value(metadata i8 0, metadata !15310, metadata !DIExpression()), !dbg !15312
  %4 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 1, !dbg !15313
  %5 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef nonnull %4) #25, !dbg !15313
  call void @llvm.dbg.value(metadata %struct._snode* %5, metadata !15311, metadata !DIExpression()), !dbg !15312
  %6 = icmp eq %struct._snode* %5, null, !dbg !15315
  br i1 %6, label %17, label %7, !dbg !15313

7:                                                ; preds = %3, %11
  %8 = phi %struct._snode* [ %12, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !15311, metadata !DIExpression()), !dbg !15312
  %9 = bitcast %struct._snode* %8 to %struct.k_work*, !dbg !15317
  call void @llvm.dbg.value(metadata %struct.k_work* %9, metadata !15311, metadata !DIExpression()), !dbg !15312
  %10 = icmp eq %struct.k_work* %9, %1, !dbg !15318
  br i1 %10, label %14, label %11, !dbg !15321

11:                                               ; preds = %7
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_next.328(%struct._snode* noundef nonnull %8) #25, !dbg !15315
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !15311, metadata !DIExpression()), !dbg !15312
  %13 = icmp eq %struct._snode* %12, null, !dbg !15315
  br i1 %13, label %17, label %7, !dbg !15313, !llvm.loop !15322

14:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8 poison, metadata !15310, metadata !DIExpression()), !dbg !15312
  tail call fastcc void @init_flusher(%struct.z_work_flusher* noundef %2) #25, !dbg !15324
  %15 = getelementptr inbounds %struct.k_work, %struct.k_work* %1, i32 0, i32 0, !dbg !15325
  %16 = getelementptr inbounds %struct.z_work_flusher, %struct.z_work_flusher* %2, i32 0, i32 0, i32 0, !dbg !15328
  tail call fastcc void @sys_slist_insert(%struct._slist* noundef nonnull %4, %struct._snode* noundef %15, %struct._snode* noundef %16) #25, !dbg !15329
  br label %19, !dbg !15330

17:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 poison, metadata !15310, metadata !DIExpression()), !dbg !15312
  tail call fastcc void @init_flusher(%struct.z_work_flusher* noundef %2) #25, !dbg !15324
  %18 = getelementptr inbounds %struct.z_work_flusher, %struct.z_work_flusher* %2, i32 0, i32 0, i32 0, !dbg !15331
  tail call fastcc void @sys_slist_prepend.329(%struct._slist* noundef nonnull %4, %struct._snode* noundef %18) #25, !dbg !15333
  br label %19

19:                                               ; preds = %17, %14
  ret void, !dbg !15334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* nocapture noundef readonly %0) unnamed_addr #9 !dbg !15335 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15337, metadata !DIExpression()), !dbg !15338
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !15339
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !15339
  ret %struct._snode* %3, !dbg !15340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next.328(%struct._snode* noundef readonly %0) unnamed_addr #9 !dbg !15341 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !15345, metadata !DIExpression()), !dbg !15346
  %2 = icmp eq %struct._snode* %0, null, !dbg !15347
  br i1 %2, label %5, label %3, !dbg !15347

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check.331(%struct._snode* noundef nonnull %0) #25, !dbg !15347
  br label %5, !dbg !15347

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !15347
  ret %struct._snode* %6, !dbg !15347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_flusher(%struct.z_work_flusher* noundef %0) unnamed_addr #1 !dbg !15348 {
  call void @llvm.dbg.value(metadata %struct.z_work_flusher* %0, metadata !15352, metadata !DIExpression()), !dbg !15353
  %2 = getelementptr inbounds %struct.z_work_flusher, %struct.z_work_flusher* %0, i32 0, i32 1, !dbg !15354
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %2) #25, !dbg !15355
  %3 = getelementptr inbounds %struct.z_work_flusher, %struct.z_work_flusher* %0, i32 0, i32 0, !dbg !15356
  tail call void @k_work_init(%struct.k_work* noundef %3, void (%struct.k_work*)* noundef nonnull @handle_flush) #25, !dbg !15357
  ret void, !dbg !15358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_insert(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !15359 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15363, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15364, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !15365, metadata !DIExpression()), !dbg !15366
  %4 = icmp eq %struct._snode* %1, null, !dbg !15367
  br i1 %4, label %5, label %6, !dbg !15369

5:                                                ; preds = %3
  tail call fastcc void @sys_slist_prepend.329(%struct._slist* noundef %0, %struct._snode* noundef %2) #25, !dbg !15370
  br label %11, !dbg !15370

6:                                                ; preds = %3
  %7 = tail call fastcc %struct._snode* @z_snode_next_peek.330(%struct._snode* noundef nonnull %1) #25, !dbg !15372
  %8 = icmp eq %struct._snode* %7, null, !dbg !15372
  br i1 %8, label %9, label %10, !dbg !15367

9:                                                ; preds = %6
  tail call fastcc void @sys_slist_append(%struct._slist* noundef %0, %struct._snode* noundef %2) #25, !dbg !15374
  br label %11, !dbg !15374

10:                                               ; preds = %6
  tail call fastcc void @z_snode_next_set.317(%struct._snode* noundef %2, %struct._snode* noundef nonnull %7) #25, !dbg !15376
  tail call fastcc void @z_snode_next_set.317(%struct._snode* noundef nonnull %1, %struct._snode* noundef %2) #25, !dbg !15376
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !15369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend.329(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !15378 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15380, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15381, metadata !DIExpression()), !dbg !15382
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef %0) #25, !dbg !15383
  tail call fastcc void @z_snode_next_set.317(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !15383
  tail call fastcc void @z_slist_head_set.320(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !15383
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail.318(%struct._slist* noundef %0) #25, !dbg !15384
  %5 = icmp eq %struct._snode* %4, null, !dbg !15384
  br i1 %5, label %6, label %8, !dbg !15383

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef %0) #25, !dbg !15386
  tail call fastcc void @z_slist_tail_set.319(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !15386
  br label %8, !dbg !15386

8:                                                ; preds = %6, %2
  ret void, !dbg !15383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek.330(%struct._snode* nocapture noundef readonly %0) unnamed_addr #9 !dbg !15388 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !15390, metadata !DIExpression()), !dbg !15391
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !15392
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !15392
  ret %struct._snode* %3, !dbg !15393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !15394 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15398, metadata !DIExpression()), !dbg !15401
  call void @llvm.dbg.value(metadata i32 0, metadata !15399, metadata !DIExpression()), !dbg !15401
  call void @llvm.dbg.value(metadata i32 1, metadata !15400, metadata !DIExpression()), !dbg !15401
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15402, !srcloc !15404
  %2 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef 0, i32 noundef 1) #24, !dbg !15405
  ret void, !dbg !15406
}

; Function Attrs: noinline nounwind optsize
define internal void @handle_flush(%struct.k_work* noundef %0) #1 !dbg !15407 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15409, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15410, metadata !DIExpression()), !dbg !15411
  %2 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 1, !dbg !15412
  %3 = bitcast %struct.k_work* %2 to %struct.k_sem*, !dbg !15412
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %3) #25, !dbg !15413
  ret void, !dbg !15414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !15415 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15419, metadata !DIExpression()), !dbg !15420
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15421, !srcloc !15423
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #24, !dbg !15424
  ret void, !dbg !15425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check.331(%struct._snode* nocapture noundef readonly %0) unnamed_addr #9 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !15428, metadata !DIExpression()), !dbg !15429
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek.330(%struct._snode* noundef %0) #25, !dbg !15430
  ret %struct._snode* %2, !dbg !15430
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_cancel(%struct.k_work* noundef %0) local_unnamed_addr #1 !dbg !15431 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15433, metadata !DIExpression()), !dbg !15436
  %2 = icmp eq %struct.k_work* %0, null, !dbg !15437
  br i1 %2, label %3, label %4, !dbg !15440

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 545) #24, !dbg !15441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 545) #24, !dbg !15441
  unreachable, !dbg !15441

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !15443
  %6 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %5, i32 noundef 8) #25, !dbg !15443
  br i1 %6, label %7, label %8, !dbg !15446

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 546) #24, !dbg !15447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 546) #24, !dbg !15447
  unreachable, !dbg !15447

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !15449
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15451, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15449
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15454
  br i1 %10, label %12, label %11, !dbg !15455

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15456
  unreachable, !dbg !15456

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15449
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15434, metadata !DIExpression()), !dbg !15436
  %13 = tail call fastcc i32 @cancel_async_locked(%struct.k_work* noundef nonnull %0) #25, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %13, metadata !15435, metadata !DIExpression()), !dbg !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !15459
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15461
  br i1 %14, label %16, label %15, !dbg !15462

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15463
  unreachable, !dbg !15463

16:                                               ; preds = %12
  %17 = extractvalue { i32, i32 } %9, 0, !dbg !15451
  call void @llvm.dbg.value(metadata i32 %17, metadata !14899, metadata !DIExpression()) #23, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %17, metadata !14893, metadata !DIExpression()) #23, !dbg !15449
  call void @llvm.dbg.value(metadata i32 %17, metadata !15434, metadata !DIExpression()), !dbg !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !15464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15466, !srcloc !14932
  ret i32 %13, !dbg !15467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @cancel_async_locked(%struct.k_work* noundef %0) unnamed_addr #15 !dbg !15468 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15470, metadata !DIExpression()), !dbg !15472
  %2 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !15473
  %3 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %2, i32 noundef 1) #25, !dbg !15475
  br i1 %3, label %7, label %4, !dbg !15476

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 2, !dbg !15477
  %6 = load %struct.k_work_q*, %struct.k_work_q** %5, align 4, !dbg !15477
  tail call fastcc void @queue_remove_locked(%struct.k_work_q* noundef %6, %struct.k_work* noundef %0) #25, !dbg !15479
  br label %7, !dbg !15480

7:                                                ; preds = %4, %1
  %8 = tail call fastcc i32 @work_busy_get_locked(%struct.k_work* noundef %0) #25, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %8, metadata !15471, metadata !DIExpression()), !dbg !15472
  %9 = icmp eq i32 %8, 0, !dbg !15482
  br i1 %9, label %12, label %10, !dbg !15484

10:                                               ; preds = %7
  tail call fastcc void @flag_set(i32* noundef nonnull %2, i32 noundef 1) #25, !dbg !15485
  %11 = tail call fastcc i32 @work_busy_get_locked(%struct.k_work* noundef %0) #25, !dbg !15487
  call void @llvm.dbg.value(metadata i32 %11, metadata !15471, metadata !DIExpression()), !dbg !15472
  br label %12, !dbg !15488

12:                                               ; preds = %10, %7
  %13 = phi i32 [ %11, %10 ], [ 0, %7 ], !dbg !15472
  call void @llvm.dbg.value(metadata i32 %13, metadata !15471, metadata !DIExpression()), !dbg !15472
  ret i32 %13, !dbg !15489
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @queue_remove_locked(%struct.k_work_q* nocapture noundef %0, %struct.k_work* noundef %1) unnamed_addr #15 !dbg !15490 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !15494, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata %struct.k_work* %1, metadata !15495, metadata !DIExpression()), !dbg !15496
  %3 = getelementptr inbounds %struct.k_work, %struct.k_work* %1, i32 0, i32 3, !dbg !15497
  %4 = tail call fastcc zeroext i1 @flag_test_and_clear(i32* noundef nonnull %3, i32 noundef 2) #25, !dbg !15499
  br i1 %4, label %5, label %8, !dbg !15500

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 1, !dbg !15501
  %7 = getelementptr inbounds %struct.k_work, %struct.k_work* %1, i32 0, i32 0, !dbg !15503
  tail call fastcc void @sys_slist_find_and_remove.332(%struct._slist* noundef nonnull %6, %struct._snode* noundef %7) #25, !dbg !15504
  br label %8, !dbg !15505

8:                                                ; preds = %5, %2
  ret void, !dbg !15506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @flag_test_and_clear(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !15507 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15511, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 %1, metadata !15512, metadata !DIExpression()), !dbg !15514
  %3 = tail call fastcc zeroext i1 @flag_test(i32* noundef %0, i32 noundef %1) #25, !dbg !15515
  call void @llvm.dbg.value(metadata i1 %3, metadata !15513, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15514
  tail call fastcc void @flag_clear(i32* noundef %0, i32 noundef %1) #25, !dbg !15516
  ret i1 %3, !dbg !15517
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sys_slist_find_and_remove.332(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !15518 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15522, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15523, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !15524, metadata !DIExpression()), !dbg !15526
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef %0) #25, !dbg !15527
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !15525, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !15524, metadata !DIExpression()), !dbg !15526
  %4 = icmp eq %struct._snode* %3, null, !dbg !15529
  br i1 %4, label %15, label %5, !dbg !15527

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !15525, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !15524, metadata !DIExpression()), !dbg !15526
  %6 = icmp eq %struct._snode* %3, %1, !dbg !15531
  br i1 %6, label %9, label %11, !dbg !15534

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !15525, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !15524, metadata !DIExpression()), !dbg !15526
  %8 = icmp eq %struct._snode* %13, %1, !dbg !15531
  br i1 %8, label %9, label %11, !dbg !15534, !llvm.loop !15535

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove.333(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !15536
  br label %15, !dbg !15536

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !15525, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !15524, metadata !DIExpression()), !dbg !15526
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next.328(%struct._snode* noundef nonnull %12) #25, !dbg !15529
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !15525, metadata !DIExpression()), !dbg !15526
  %14 = icmp eq %struct._snode* %13, null, !dbg !15529
  br i1 %14, label %15, label %7, !dbg !15527, !llvm.loop !15535

15:                                               ; preds = %11, %2, %9
  ret void, !dbg !15538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove.333(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !15539 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15541, metadata !DIExpression()), !dbg !15544
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !15542, metadata !DIExpression()), !dbg !15544
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !15543, metadata !DIExpression()), !dbg !15544
  %4 = icmp eq %struct._snode* %1, null, !dbg !15545
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek.330(%struct._snode* noundef %2) #25, !dbg !15547
  br i1 %4, label %6, label %11, !dbg !15548

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set.320(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !15549
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail.318(%struct._slist* noundef %0) #25, !dbg !15551
  %8 = icmp eq %struct._snode* %7, %2, !dbg !15551
  br i1 %8, label %9, label %15, !dbg !15549

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef %0) #25, !dbg !15553
  tail call fastcc void @z_slist_tail_set.319(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !15553
  br label %15, !dbg !15553

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set.317(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !15555
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail.318(%struct._slist* noundef %0) #25, !dbg !15557
  %13 = icmp eq %struct._snode* %12, %2, !dbg !15557
  br i1 %13, label %14, label %15, !dbg !15555

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set.319(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !15559
  br label %15, !dbg !15559

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set.317(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !15548
  ret void, !dbg !15548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @flag_clear(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !15561 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15563, metadata !DIExpression()), !dbg !15565
  call void @llvm.dbg.value(metadata i32 %1, metadata !15564, metadata !DIExpression()), !dbg !15565
  %3 = shl nuw i32 1, %1, !dbg !15566
  %4 = xor i32 %3, -1, !dbg !15567
  %5 = load i32, i32* %0, align 4, !dbg !15568
  %6 = and i32 %5, %4, !dbg !15568
  store i32 %6, i32* %0, align 4, !dbg !15568
  ret void, !dbg !15569
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_work_cancel_sync(%struct.k_work* noundef %0, %struct.k_work_sync* noundef %1) local_unnamed_addr #1 !dbg !15570 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15572, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.value(metadata %struct.k_work_sync* %1, metadata !15573, metadata !DIExpression()), !dbg !15578
  %3 = icmp eq %struct.k_work* %0, null, !dbg !15579
  br i1 %3, label %4, label %5, !dbg !15582

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 563) #24, !dbg !15583
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 563) #24, !dbg !15583
  unreachable, !dbg !15583

5:                                                ; preds = %2
  %6 = icmp eq %struct.k_work_sync* %1, null, !dbg !15585
  br i1 %6, label %7, label %8, !dbg !15588

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 564) #24, !dbg !15589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 564) #24, !dbg !15589
  unreachable, !dbg !15589

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !15591
  %10 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %9, i32 noundef 8) #25, !dbg !15591
  br i1 %10, label %11, label %12, !dbg !15594

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 565) #24, !dbg !15595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 565) #24, !dbg !15595
  unreachable, !dbg !15595

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15597
  br i1 %13, label %14, label %15, !dbg !15600

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 566) #24, !dbg !15601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 566) #24, !dbg !15601
  unreachable, !dbg !15601

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_work_sync* %1, metadata !15574, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !15603
  %16 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15605, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15603
  %17 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15608
  br i1 %17, label %19, label %18, !dbg !15609

18:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15610
  unreachable, !dbg !15610

19:                                               ; preds = %15
  %20 = extractvalue { i32, i32 } %16, 0, !dbg !15605
  call void @llvm.dbg.value(metadata i32 %20, metadata !14899, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata i32 %20, metadata !14893, metadata !DIExpression()) #23, !dbg !15603
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15611
  call void @llvm.dbg.value(metadata i32 %20, metadata !15575, metadata !DIExpression()), !dbg !15578
  %21 = tail call fastcc i32 @work_busy_get_locked(%struct.k_work* noundef nonnull %0) #25, !dbg !15612
  %22 = icmp ne i32 %21, 0, !dbg !15613
  call void @llvm.dbg.value(metadata i1 %22, metadata !15576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15578
  call void @llvm.dbg.value(metadata i8 0, metadata !15577, metadata !DIExpression()), !dbg !15578
  br i1 %22, label %23, label %33, !dbg !15614

23:                                               ; preds = %19
  %24 = bitcast %struct.k_work_sync* %1 to %struct.z_work_canceller*, !dbg !15615
  call void @llvm.dbg.value(metadata %struct.z_work_canceller* %24, metadata !15574, metadata !DIExpression()), !dbg !15578
  %25 = tail call fastcc i32 @cancel_async_locked(%struct.k_work* noundef nonnull %0) #25, !dbg !15616
  %26 = tail call fastcc zeroext i1 @cancel_sync_locked(%struct.k_work* noundef nonnull %0, %struct.z_work_canceller* noundef nonnull %24) #25, !dbg !15619
  call void @llvm.dbg.value(metadata i1 %26, metadata !15577, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15578
  call void @llvm.dbg.value(metadata i8 poison, metadata !15577, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !15620
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15622
  br i1 %27, label %29, label %28, !dbg !15623

28:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15624
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15624
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15624
  unreachable, !dbg !15624

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 %20, metadata !14912, metadata !DIExpression()) #23, !dbg !15620
  call void @llvm.dbg.value(metadata i32 %20, metadata !14926, metadata !DIExpression()) #23, !dbg !15625
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !15627, !srcloc !14932
  br i1 %26, label %30, label %37, !dbg !15628

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.k_work_sync, %struct.k_work_sync* %1, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !15629
  %32 = bitcast %struct.k_work_q** %31 to %struct.k_sem*, !dbg !15629
  tail call fastcc void @k_sem_take(%struct.k_sem* noundef nonnull %32) #25, !dbg !15632
  br label %37, !dbg !15633

33:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i8 poison, metadata !15577, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !15634
  %34 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15636
  br i1 %34, label %36, label %35, !dbg !15637

35:                                               ; preds = %33
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15638
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15638
  unreachable, !dbg !15638

36:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %20, metadata !14912, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %20, metadata !14926, metadata !DIExpression()) #23, !dbg !15639
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !15641, !srcloc !14932
  br label %37, !dbg !15628

37:                                               ; preds = %36, %29, %30
  ret i1 %22, !dbg !15642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @cancel_sync_locked(%struct.k_work* noundef %0, %struct.z_work_canceller* noundef %1) unnamed_addr #1 !dbg !15643 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15647, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata %struct.z_work_canceller* %1, metadata !15648, metadata !DIExpression()), !dbg !15650
  %3 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !15651
  %4 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %3, i32 noundef 1) #25, !dbg !15652
  call void @llvm.dbg.value(metadata i1 %4, metadata !15649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15650
  br i1 %4, label %5, label %6, !dbg !15653

5:                                                ; preds = %2
  tail call fastcc void @init_work_cancel(%struct.z_work_canceller* noundef %1, %struct.k_work* noundef %0) #25, !dbg !15654
  br label %6, !dbg !15657

6:                                                ; preds = %5, %2
  ret i1 %4, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_work_cancel(%struct.z_work_canceller* noundef %0, %struct.k_work* noundef %1) unnamed_addr #1 !dbg !15659 {
  call void @llvm.dbg.value(metadata %struct.z_work_canceller* %0, metadata !15663, metadata !DIExpression()), !dbg !15665
  call void @llvm.dbg.value(metadata %struct.k_work* %1, metadata !15664, metadata !DIExpression()), !dbg !15665
  %3 = getelementptr inbounds %struct.z_work_canceller, %struct.z_work_canceller* %0, i32 0, i32 2, !dbg !15666
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %3) #25, !dbg !15667
  %4 = getelementptr inbounds %struct.z_work_canceller, %struct.z_work_canceller* %0, i32 0, i32 1, !dbg !15668
  store %struct.k_work* %1, %struct.k_work** %4, align 4, !dbg !15669
  %5 = getelementptr inbounds %struct.z_work_canceller, %struct.z_work_canceller* %0, i32 0, i32 0, !dbg !15670
  tail call fastcc void @sys_slist_append(%struct._slist* noundef nonnull @pending_cancels, %struct._snode* noundef %5) #25, !dbg !15671
  ret void, !dbg !15672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_work_queue_init(%struct.k_work_q* noundef writeonly %0) local_unnamed_addr #1 !dbg !15673 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !15677, metadata !DIExpression()), !dbg !15678
  %2 = icmp eq %struct.k_work_q* %0, null, !dbg !15679
  br i1 %2, label %3, label %4, !dbg !15682

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 697) #24, !dbg !15683
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 697) #24, !dbg !15683
  unreachable, !dbg !15683

4:                                                ; preds = %1
  %5 = bitcast %struct.k_work_q* %0 to i8*, !dbg !15685
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(176) %5, i8 0, i32 176, i1 false), !dbg !15685
  ret void, !dbg !15686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_work_queue_start(%struct.k_work_q* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, i32 noundef %3, %struct.log_source_const_data* noundef readonly %4) local_unnamed_addr #1 !dbg !15687 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !15702, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15703, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 %2, metadata !15704, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 %3, metadata !15705, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata %struct.log_source_const_data* %4, metadata !15706, metadata !DIExpression()), !dbg !15708
  %6 = icmp eq %struct.k_work_q* %0, null, !dbg !15709
  br i1 %6, label %7, label %8, !dbg !15712

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 712) #24, !dbg !15713
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 712) #24, !dbg !15713
  unreachable, !dbg !15713

8:                                                ; preds = %5
  %9 = icmp eq %struct.z_thread_stack_element* %1, null, !dbg !15715
  br i1 %9, label %10, label %11, !dbg !15718

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 713) #24, !dbg !15719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 713) #24, !dbg !15719
  unreachable, !dbg !15719

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 4, !dbg !15721
  %13 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %12, i32 noundef 0) #25, !dbg !15721
  br i1 %13, label %14, label %15, !dbg !15724

14:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 714) #24, !dbg !15725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 714) #24, !dbg !15725
  unreachable, !dbg !15725

15:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 1, metadata !15707, metadata !DIExpression()), !dbg !15708
  %16 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 1, !dbg !15727
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %16) #25, !dbg !15728
  %17 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 2, !dbg !15729
  tail call fastcc void @z_waitq_init.337(%struct._wait_q_t* noundef nonnull %17) #25, !dbg !15730
  %18 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 3, !dbg !15731
  tail call fastcc void @z_waitq_init.337(%struct._wait_q_t* noundef nonnull %18) #25, !dbg !15732
  %19 = icmp eq %struct.log_source_const_data* %4, null, !dbg !15733
  br i1 %19, label %25, label %20, !dbg !15735

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.log_source_const_data, %struct.log_source_const_data* %4, i32 0, i32 1, !dbg !15736
  %22 = load i8, i8* %21, align 4, !dbg !15736, !range !8132
  %23 = icmp eq i8 %22, 0, !dbg !15736
  %24 = select i1 %23, i32 1, i32 257, !dbg !15737
  br label %25, !dbg !15737

25:                                               ; preds = %20, %15
  %26 = phi i32 [ 1, %15 ], [ %24, %20 ], !dbg !15708
  call void @llvm.dbg.value(metadata i32 %26, metadata !15707, metadata !DIExpression()), !dbg !15708
  tail call fastcc void @flags_set(i32* noundef nonnull %12, i32 noundef %26) #25, !dbg !15738
  %27 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 0, !dbg !15739
  %28 = bitcast %struct.k_work_q* %0 to i8*, !dbg !15740
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %27, %struct.z_thread_stack_element* noundef nonnull %1, i32 noundef %2, i8* noundef nonnull %28, i32 noundef %3) #25, !dbg !15741
  br i1 %19, label %34, label %29, !dbg !15742

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.log_source_const_data, %struct.log_source_const_data* %4, i32 0, i32 0, !dbg !15744
  %31 = load i8*, i8** %30, align 4, !dbg !15744
  %32 = icmp eq i8* %31, null, !dbg !15745
  br i1 %32, label %34, label %33, !dbg !15746

33:                                               ; preds = %29
  tail call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull %27, i8* noundef nonnull %31) #25, !dbg !15747
  br label %34, !dbg !15749

34:                                               ; preds = %33, %29, %25
  tail call fastcc void @k_thread_start.338(%struct.k_thread* noundef nonnull %27) #25, !dbg !15750
  ret void, !dbg !15751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15752 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15756, metadata !DIExpression()), !dbg !15757
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !15758
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !15759
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !15760
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !15761
  ret void, !dbg !15762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.337(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15763 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15767, metadata !DIExpression()), !dbg !15768
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15769
  tail call fastcc void @sys_dlist_init.340(%struct._dnode* noundef %2) #25, !dbg !15770
  ret void, !dbg !15771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @flags_set(i32* nocapture noundef writeonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15772 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15774, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.value(metadata i32 %1, metadata !15775, metadata !DIExpression()), !dbg !15776
  store i32 %1, i32* %0, align 4, !dbg !15777
  ret void, !dbg !15778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, i8* noundef %3, i32 noundef %4) unnamed_addr #1 !dbg !15779 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15794, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15785, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15786, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 %2, metadata !15787, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @work_queue_main, metadata !15788, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i8* %3, metadata !15789, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i8* null, metadata !15790, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i8* null, metadata !15791, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 %4, metadata !15792, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 0, metadata !15793, metadata !DIExpression()), !dbg !15795
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15796, !srcloc !15798
  %6 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef nonnull @work_queue_main, i8* noundef %3, i8* noundef null, i8* noundef null, i32 noundef %4, i32 noundef 0, [1 x i64] [i64 -1]) #24, !dbg !15799
  ret void, !dbg !15800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !15801 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15805, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i8* %1, metadata !15806, metadata !DIExpression()), !dbg !15807
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15808, !srcloc !15810
  %3 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) #24, !dbg !15811
  ret void, !dbg !15812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.338(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15813 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15817, metadata !DIExpression()), !dbg !15818
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15819, !srcloc !15821
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !15822
  ret void, !dbg !15823
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @work_queue_main(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #4 !dbg !15824 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15826, metadata !DIExpression()), !dbg !15836
  call void @llvm.dbg.value(metadata i8* %1, metadata !15827, metadata !DIExpression()), !dbg !15836
  call void @llvm.dbg.value(metadata i8* %2, metadata !15828, metadata !DIExpression()), !dbg !15836
  call void @llvm.dbg.value(metadata i8* %0, metadata !15829, metadata !DIExpression()), !dbg !15836
  call void @llvm.dbg.value(metadata %struct.k_work* null, metadata !15832, metadata !DIExpression()), !dbg !15837
  call void @llvm.dbg.value(metadata void (%struct.k_work*)* null, metadata !15833, metadata !DIExpression()), !dbg !15837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !15838
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15840, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !15842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15838
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15843
  br i1 %5, label %6, label %15, !dbg !15844

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %0, i32 144
  %8 = bitcast i8* %7 to %struct._slist*
  %9 = getelementptr inbounds i8, i8* %0, i32 168
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %0, i32 160
  %12 = bitcast i8* %11 to %struct._wait_q_t*
  %13 = getelementptr inbounds i8, i8* %0, i32 152
  %14 = bitcast i8* %13 to %struct._wait_q_t*
  br label %16, !dbg !15844

15:                                               ; preds = %53, %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15845
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15845
  unreachable, !dbg !15845

16:                                               ; preds = %6, %53
  %17 = phi { i32, i32 } [ %4, %6 ], [ %54, %53 ]
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %18, metadata !14899, metadata !DIExpression()) #23, !dbg !15842
  call void @llvm.dbg.value(metadata i32 %18, metadata !14893, metadata !DIExpression()) #23, !dbg !15838
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15846
  call void @llvm.dbg.value(metadata i32 %18, metadata !15834, metadata !DIExpression()), !dbg !15837
  %19 = tail call fastcc %struct._snode* @sys_slist_get(%struct._slist* noundef nonnull %8) #25, !dbg !15847
  call void @llvm.dbg.value(metadata %struct._snode* %19, metadata !15830, metadata !DIExpression()), !dbg !15837
  %20 = icmp eq %struct._snode* %19, null, !dbg !15848
  br i1 %20, label %21, label %24, !dbg !15850

21:                                               ; preds = %16
  %22 = tail call fastcc zeroext i1 @flag_test_and_clear(i32* noundef nonnull %10, i32 noundef 2) #25, !dbg !15851
  br i1 %22, label %23, label %32, !dbg !15853

23:                                               ; preds = %21
  tail call fastcc void @z_sched_wake_all(%struct._wait_q_t* noundef nonnull %12) #25, !dbg !15854
  br label %32, !dbg !15856

24:                                               ; preds = %16
  tail call fastcc void @flag_set(i32* noundef nonnull %10, i32 noundef 1) #25, !dbg !15857
  %25 = bitcast %struct._snode* %19 to %struct.k_work*, !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_work* %25, metadata !15832, metadata !DIExpression()), !dbg !15837
  %26 = getelementptr inbounds %struct._snode, %struct._snode* %19, i32 3, !dbg !15860
  %27 = bitcast %struct._snode* %26 to i32*, !dbg !15860
  tail call fastcc void @flag_set(i32* noundef nonnull %27, i32 noundef 0) #25, !dbg !15861
  tail call fastcc void @flag_clear(i32* noundef nonnull %27, i32 noundef 2) #25, !dbg !15862
  %28 = getelementptr inbounds %struct._snode, %struct._snode* %19, i32 1, !dbg !15863
  %29 = bitcast %struct._snode* %28 to void (%struct.k_work*)**, !dbg !15863
  %30 = load void (%struct.k_work*)*, void (%struct.k_work*)** %29, align 4, !dbg !15863
  call void @llvm.dbg.value(metadata void (%struct.k_work*)* %30, metadata !15833, metadata !DIExpression()), !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15864
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !15864
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15866
  br i1 %31, label %36, label %35, !dbg !15867

32:                                               ; preds = %21, %23
  %33 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !15868
  %34 = tail call i32 @z_sched_wait(%struct.k_spinlock* noundef nonnull @lock.310, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %14, [1 x i64] [i64 -1], i8** noundef null) #24, !dbg !15868
  br label %53, !dbg !15871, !llvm.loop !15872

35:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15875
  unreachable, !dbg !15875

36:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %18, metadata !14912, metadata !DIExpression()) #23, !dbg !15864
  call void @llvm.dbg.value(metadata i32 %18, metadata !14926, metadata !DIExpression()) #23, !dbg !15876
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !15878, !srcloc !14932
  %37 = icmp eq void (%struct.k_work*)* %30, null, !dbg !15879
  br i1 %37, label %38, label %39, !dbg !15882

38:                                               ; preds = %36
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 667) #24, !dbg !15883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 667) #24, !dbg !15883
  unreachable, !dbg !15883

39:                                               ; preds = %36
  tail call void %30(%struct.k_work* noundef nonnull %25) #24, !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !15886
  %40 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15888, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !15890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15886
  %41 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15891
  br i1 %41, label %43, label %42, !dbg !15892

42:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15893
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15893
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !15893
  unreachable, !dbg !15893

43:                                               ; preds = %39
  %44 = extractvalue { i32, i32 } %40, 0, !dbg !15888
  call void @llvm.dbg.value(metadata i32 %44, metadata !14899, metadata !DIExpression()) #23, !dbg !15890
  call void @llvm.dbg.value(metadata i32 %44, metadata !14893, metadata !DIExpression()) #23, !dbg !15886
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15894
  call void @llvm.dbg.value(metadata i32 %44, metadata !15834, metadata !DIExpression()), !dbg !15837
  tail call fastcc void @flag_clear(i32* noundef nonnull %27, i32 noundef 0) #25, !dbg !15895
  %45 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %27, i32 noundef 1) #25, !dbg !15896
  br i1 %45, label %46, label %47, !dbg !15898

46:                                               ; preds = %43
  tail call fastcc void @finalize_cancel_locked(%struct.k_work* noundef nonnull %25) #25, !dbg !15899
  br label %47, !dbg !15901

47:                                               ; preds = %46, %43
  tail call fastcc void @flag_clear(i32* noundef nonnull %10, i32 noundef 1) #25, !dbg !15902
  %48 = tail call fastcc zeroext i1 @flag_test(i32* noundef nonnull %10, i32 noundef 8) #25, !dbg !15903
  call void @llvm.dbg.value(metadata i1 %48, metadata !15835, metadata !DIExpression(DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !15904
  %49 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15906
  br i1 %49, label %51, label %50, !dbg !15907

50:                                               ; preds = %47
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !15908
  unreachable, !dbg !15908

51:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %44, metadata !14912, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %44, metadata !14926, metadata !DIExpression()) #23, !dbg !15909
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %44) #23, !dbg !15911, !srcloc !14932
  br i1 %48, label %53, label %52, !dbg !15912

52:                                               ; preds = %51
  tail call fastcc void @k_yield() #25, !dbg !15913
  br label %53, !dbg !15916

53:                                               ; preds = %51, %52, %32
  call void @llvm.dbg.value(metadata %struct.k_work* null, metadata !15832, metadata !DIExpression()), !dbg !15837
  call void @llvm.dbg.value(metadata void (%struct.k_work*)* null, metadata !15833, metadata !DIExpression()), !dbg !15837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !15838
  %54 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15840, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !15842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !15842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !15838
  %55 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !15843
  br i1 %55, label %16, label %15, !dbg !15844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct._snode* @sys_slist_get(%struct._slist* nocapture noundef %0) unnamed_addr #10 !dbg !15917 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15919, metadata !DIExpression()), !dbg !15920
  %2 = tail call fastcc zeroext i1 @sys_slist_is_empty.339(%struct._slist* noundef %0) #25, !dbg !15921
  br i1 %2, label %5, label %3, !dbg !15921

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_get_not_empty(%struct._slist* noundef %0) #25, !dbg !15921
  br label %5, !dbg !15921

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !15921
  ret %struct._snode* %6, !dbg !15921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_wake_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15922 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15926, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i32 1, metadata !15927, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i8* null, metadata !15928, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i8 0, metadata !15929, metadata !DIExpression()), !dbg !15930
  br label %2, !dbg !15931

2:                                                ; preds = %2, %1
  call void @llvm.dbg.value(metadata i8 undef, metadata !15929, metadata !DIExpression()), !dbg !15930
  %3 = tail call zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef 1, i8* noundef null) #24, !dbg !15932
  br i1 %3, label %2, label %4, !dbg !15931, !llvm.loop !15933

4:                                                ; preds = %2
  ret void, !dbg !15935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @finalize_cancel_locked(%struct.k_work* noundef %0) unnamed_addr #1 !dbg !15936 {
  call void @llvm.dbg.value(metadata %struct.k_work* %0, metadata !15938, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !15941, metadata !DIExpression()), !dbg !15942
  %2 = getelementptr inbounds %struct.k_work, %struct.k_work* %0, i32 0, i32 3, !dbg !15943
  tail call fastcc void @flag_clear(i32* noundef nonnull %2, i32 noundef 1) #25, !dbg !15944
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef nonnull @pending_cancels) #25, !dbg !15945
  %4 = icmp eq %struct._snode* %3, null, !dbg !15945
  br i1 %4, label %19, label %5, !dbg !15945

5:                                                ; preds = %1, %16
  %6 = phi %struct._snode* [ %8, %16 ], [ %3, %1 ]
  %7 = phi %struct._snode* [ %17, %16 ], [ null, %1 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next.328(%struct._snode* noundef nonnull %6) #25, !dbg !15947
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !15941, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !15940, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata %struct._snode* %6, metadata !15939, metadata !DIExpression()), !dbg !15942
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 1, !dbg !15948
  %10 = bitcast %struct._snode* %9 to %struct.k_work**, !dbg !15948
  %11 = load %struct.k_work*, %struct.k_work** %10, align 4, !dbg !15948
  %12 = icmp eq %struct.k_work* %11, %0, !dbg !15952
  br i1 %12, label %13, label %16, !dbg !15953

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct._snode* %6, metadata !15939, metadata !DIExpression()), !dbg !15942
  tail call fastcc void @sys_slist_remove.333(%struct._slist* noundef nonnull @pending_cancels, %struct._snode* noundef %7, %struct._snode* noundef nonnull %6) #25, !dbg !15954
  %14 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 2, !dbg !15956
  %15 = bitcast %struct._snode* %14 to %struct.k_sem*, !dbg !15956
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %15) #25, !dbg !15957
  br label %16, !dbg !15958

16:                                               ; preds = %5, %13
  %17 = phi %struct._snode* [ %7, %13 ], [ %6, %5 ], !dbg !15942
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !15941, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !15939, metadata !DIExpression()), !dbg !15942
  %18 = icmp eq %struct._snode* %8, null, !dbg !15959
  br i1 %18, label %19, label %5, !dbg !15959

19:                                               ; preds = %16, %1
  ret void, !dbg !15960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15961 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15962, !srcloc !15964
  tail call void @z_impl_k_yield() #24, !dbg !15965
  ret void, !dbg !15966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.339(%struct._slist* nocapture noundef readonly %0) unnamed_addr #9 !dbg !15967 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15971, metadata !DIExpression()), !dbg !15972
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef %0) #25, !dbg !15973
  %3 = icmp eq %struct._snode* %2, null, !dbg !15973
  ret i1 %3, !dbg !15973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct._snode* @sys_slist_get_not_empty(%struct._slist* nocapture noundef %0) unnamed_addr #10 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !15976, metadata !DIExpression()), !dbg !15978
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef %0) #25, !dbg !15979
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !15977, metadata !DIExpression()), !dbg !15978
  %3 = tail call fastcc %struct._snode* @z_snode_next_peek.330(%struct._snode* noundef %2) #25, !dbg !15979
  tail call fastcc void @z_slist_head_set.320(%struct._slist* noundef %0, %struct._snode* noundef %3) #25, !dbg !15979
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail.318(%struct._slist* noundef %0) #25, !dbg !15980
  %5 = icmp eq %struct._snode* %4, %2, !dbg !15980
  br i1 %5, label %6, label %8, !dbg !15979

6:                                                ; preds = %1
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head.327(%struct._slist* noundef %0) #25, !dbg !15982
  tail call fastcc void @z_slist_tail_set.319(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !15982
  br label %8, !dbg !15982

8:                                                ; preds = %6, %1
  ret %struct._snode* %2, !dbg !15979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.340(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15984 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15989, metadata !DIExpression()), !dbg !15990
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15991
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15992
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15993
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15994
  ret void, !dbg !15995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_queue_drain(%struct.k_work_q* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15996 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !16000, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata i1 %1, metadata !16001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16004
  %3 = icmp eq %struct.k_work_q* %0, null, !dbg !16005
  br i1 %3, label %4, label %5, !dbg !16008

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 749) #24, !dbg !16009
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 749) #24, !dbg !16009
  unreachable, !dbg !16009

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !16011
  br i1 %6, label %7, label %8, !dbg !16014

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 750) #24, !dbg !16015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 750) #24, !dbg !16015
  unreachable, !dbg !16015

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !16002, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16017
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16019, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16017
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16022
  br i1 %10, label %12, label %11, !dbg !16023

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16024
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16024
  unreachable, !dbg !16024

12:                                               ; preds = %8
  %13 = extractvalue { i32, i32 } %9, 0, !dbg !16019
  call void @llvm.dbg.value(metadata i32 %13, metadata !14899, metadata !DIExpression()) #23, !dbg !16021
  call void @llvm.dbg.value(metadata i32 %13, metadata !14893, metadata !DIExpression()) #23, !dbg !16017
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16025
  call void @llvm.dbg.value(metadata i32 %13, metadata !16003, metadata !DIExpression()), !dbg !16004
  %14 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 4, !dbg !16026
  %15 = tail call fastcc i32 @flags_get(i32* noundef nonnull %14) #25, !dbg !16028
  %16 = and i32 %15, 6, !dbg !16029
  %17 = icmp ne i32 %16, 0, !dbg !16030
  %18 = or i1 %17, %1, !dbg !16031
  br i1 %18, label %22, label %19, !dbg !16031

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 1, !dbg !16032
  %21 = tail call fastcc zeroext i1 @sys_slist_is_empty.339(%struct._slist* noundef nonnull %20) #25, !dbg !16033
  br i1 %21, label %28, label %22, !dbg !16034

22:                                               ; preds = %12, %19
  tail call fastcc void @flag_set(i32* noundef nonnull %14, i32 noundef 2) #25, !dbg !16035
  br i1 %1, label %23, label %24, !dbg !16037

23:                                               ; preds = %22
  tail call fastcc void @flag_set(i32* noundef nonnull %14, i32 noundef 3) #25, !dbg !16038
  br label %24, !dbg !16041

24:                                               ; preds = %23, %22
  tail call fastcc void @notify_queue_locked(%struct.k_work_q* noundef nonnull %0) #25, !dbg !16042
  %25 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 3, !dbg !16043
  %26 = insertvalue [1 x i32] poison, i32 %13, 0, !dbg !16044
  %27 = tail call i32 @z_sched_wait(%struct.k_spinlock* noundef nonnull @lock.310, [1 x i32] %26, %struct._wait_q_t* noundef nonnull %25, [1 x i64] [i64 -1], i8** noundef null) #24, !dbg !16044
  call void @llvm.dbg.value(metadata i32 %27, metadata !16002, metadata !DIExpression()), !dbg !16004
  br label %32, !dbg !16045

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16046
  %29 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16049
  br i1 %29, label %31, label %30, !dbg !16050

30:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16051
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16051
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16051
  unreachable, !dbg !16051

31:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %13, metadata !14912, metadata !DIExpression()) #23, !dbg !16046
  call void @llvm.dbg.value(metadata i32 %13, metadata !14926, metadata !DIExpression()) #23, !dbg !16052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !16054, !srcloc !14932
  br label %32

32:                                               ; preds = %24, %31
  %33 = phi i32 [ %27, %24 ], [ 0, %31 ], !dbg !16004
  call void @llvm.dbg.value(metadata i32 %33, metadata !16002, metadata !DIExpression()), !dbg !16004
  ret i32 %33, !dbg !16055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_queue_unplug(%struct.k_work_q* noundef %0) local_unnamed_addr #1 !dbg !16056 {
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !16060, metadata !DIExpression()), !dbg !16063
  %2 = icmp eq %struct.k_work_q* %0, null, !dbg !16064
  br i1 %2, label %3, label %4, !dbg !16067

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 780) #24, !dbg !16068
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 780) #24, !dbg !16068
  unreachable, !dbg !16068

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 -120, metadata !16061, metadata !DIExpression()), !dbg !16063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16070
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16072, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16074
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16074
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16070
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16075
  br i1 %6, label %8, label %7, !dbg !16076

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16077
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16077
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16077
  unreachable, !dbg !16077

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16074
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16070
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16078
  call void @llvm.dbg.value(metadata i32 undef, metadata !16062, metadata !DIExpression()), !dbg !16063
  %9 = getelementptr inbounds %struct.k_work_q, %struct.k_work_q* %0, i32 0, i32 4, !dbg !16079
  %10 = tail call fastcc zeroext i1 @flag_test_and_clear(i32* noundef nonnull %9, i32 noundef 3) #25, !dbg !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16061, metadata !DIExpression()), !dbg !16063
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16082
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16084
  br i1 %11, label %13, label %12, !dbg !16085

12:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16086
  unreachable, !dbg !16086

13:                                               ; preds = %8
  %14 = select i1 %10, i32 0, i32 -120, !dbg !16087
  call void @llvm.dbg.value(metadata i32 %14, metadata !16061, metadata !DIExpression()), !dbg !16063
  %15 = extractvalue { i32, i32 } %5, 0, !dbg !16072
  call void @llvm.dbg.value(metadata i32 %15, metadata !14899, metadata !DIExpression()) #23, !dbg !16074
  call void @llvm.dbg.value(metadata i32 %15, metadata !14893, metadata !DIExpression()) #23, !dbg !16070
  call void @llvm.dbg.value(metadata i32 %15, metadata !16062, metadata !DIExpression()), !dbg !16063
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !16088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !16090, !srcloc !14932
  ret i32 %14, !dbg !16091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_work_init_delayable(%struct.k_work_delayable* noundef writeonly %0, void (%struct.k_work*)* noundef %1) local_unnamed_addr #1 !dbg !16092 {
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16096, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata void (%struct.k_work*)* %1, metadata !16097, metadata !DIExpression()), !dbg !16098
  %3 = icmp eq %struct.k_work_delayable* %0, null, !dbg !16099
  br i1 %3, label %4, label %5, !dbg !16102

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 832) #24, !dbg !16103
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 832) #24, !dbg !16103
  unreachable, !dbg !16103

5:                                                ; preds = %2
  %6 = icmp eq void (%struct.k_work*)* %1, null, !dbg !16105
  br i1 %6, label %7, label %8, !dbg !16108

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 833) #24, !dbg !16109
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 833) #24, !dbg !16109
  unreachable, !dbg !16109

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16111
  store %struct._snode* null, %struct._snode** %9, align 8, !dbg !16111
  %10 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, i32 1, !dbg !16111
  store void (%struct.k_work*)* %1, void (%struct.k_work*)** %10, align 4, !dbg !16111
  %11 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, i32 2, !dbg !16111
  store %struct.k_work_q* null, %struct.k_work_q** %11, align 8, !dbg !16111
  %12 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, i32 3, !dbg !16111
  store i32 256, i32* %12, align 4, !dbg !16111
  %13 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 1, !dbg !16111
  %14 = bitcast %struct._timeout* %13 to i8*, !dbg !16111
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(32) %14, i8 0, i32 32, i1 false), !dbg !16111
  tail call fastcc void @z_init_timeout.342(%struct._timeout* noundef nonnull %13) #25, !dbg !16112
  ret void, !dbg !16113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.342(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !16114 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16116, metadata !DIExpression()), !dbg !16117
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16118
  tail call fastcc void @sys_dnode_init.343(%struct._dnode* noundef %2) #25, !dbg !16119
  ret void, !dbg !16120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.343(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !16121 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16125, metadata !DIExpression()), !dbg !16126
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16127
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16128
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16129
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16130
  ret void, !dbg !16131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_delayable_busy_get(%struct.k_work_delayable* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !16132 {
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16138, metadata !DIExpression()), !dbg !16141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16142
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16144, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16146
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16146
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16142
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16147
  br i1 %3, label %5, label %4, !dbg !16148

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16149
  unreachable, !dbg !16149

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16146
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16142
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16150
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()), !dbg !16141
  %6 = tail call fastcc i32 @work_delayable_busy_get_locked(%struct.k_work_delayable* noundef %0) #25, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %6, metadata !16140, metadata !DIExpression()), !dbg !16141
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16152
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16154
  br i1 %7, label %9, label %8, !dbg !16155

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16156
  unreachable, !dbg !16156

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16144
  call void @llvm.dbg.value(metadata i32 %10, metadata !14899, metadata !DIExpression()) #23, !dbg !16146
  call void @llvm.dbg.value(metadata i32 %10, metadata !14893, metadata !DIExpression()) #23, !dbg !16142
  call void @llvm.dbg.value(metadata i32 %10, metadata !16139, metadata !DIExpression()), !dbg !16141
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16152
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !16157
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16159, !srcloc !14932
  ret i32 %6, !dbg !16160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @work_delayable_busy_get_locked(%struct.k_work_delayable* nocapture noundef readonly %0) unnamed_addr #9 !dbg !16161 {
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16163, metadata !DIExpression()), !dbg !16164
  %2 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, i32 3, !dbg !16165
  %3 = tail call fastcc i32 @flags_get(i32* noundef nonnull %2) #25, !dbg !16166
  %4 = and i32 %3, 15, !dbg !16167
  ret i32 %4, !dbg !16168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_schedule_for_queue(%struct.k_work_q* noundef %0, %struct.k_work_delayable* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16169 {
  %4 = alloca %struct.k_work_q*, align 4
  call void @llvm.dbg.value(metadata i64 undef, metadata !16175, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !16173, metadata !DIExpression()), !dbg !16179
  store %struct.k_work_q* %0, %struct.k_work_q** %4, align 4
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %1, metadata !16174, metadata !DIExpression()), !dbg !16179
  %5 = icmp eq %struct.k_work_delayable* %1, null, !dbg !16180
  br i1 %5, label %6, label %7, !dbg !16183

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 951) #24, !dbg !16184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 951) #24, !dbg !16184
  unreachable, !dbg !16184

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %1, metadata !16176, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i32 0, metadata !16177, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16186
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16188, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16186
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16191
  br i1 %9, label %11, label %10, !dbg !16192

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16193
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16193
  unreachable, !dbg !16193

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %1, i32 0, i32 0, !dbg !16194
  call void @llvm.dbg.value(metadata %struct.k_work* %12, metadata !16176, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16186
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16195
  call void @llvm.dbg.value(metadata i32 undef, metadata !16178, metadata !DIExpression()), !dbg !16179
  %13 = tail call fastcc i32 @work_busy_get_locked(%struct.k_work* noundef nonnull %12) #25, !dbg !16196
  %14 = icmp ult i32 %13, 2, !dbg !16198
  br i1 %14, label %15, label %17, !dbg !16199

15:                                               ; preds = %11
  call void @llvm.dbg.value(metadata %struct.k_work_q** %4, metadata !16173, metadata !DIExpression(DW_OP_deref)), !dbg !16179
  %16 = call fastcc i32 @schedule_for_queue_locked(%struct.k_work_q** noundef nonnull %4, %struct.k_work_delayable* noundef nonnull %1, [1 x i64] %2) #25, !dbg !16200
  call void @llvm.dbg.value(metadata i32 %16, metadata !16177, metadata !DIExpression()), !dbg !16179
  br label %17, !dbg !16202

17:                                               ; preds = %15, %11
  %18 = phi i32 [ %16, %15 ], [ 0, %11 ], !dbg !16179
  call void @llvm.dbg.value(metadata i32 %18, metadata !16177, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16203
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16205
  br i1 %19, label %21, label %20, !dbg !16206

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16207
  unreachable, !dbg !16207

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %8, 0, !dbg !16188
  call void @llvm.dbg.value(metadata i32 %22, metadata !14899, metadata !DIExpression()) #23, !dbg !16190
  call void @llvm.dbg.value(metadata i32 %22, metadata !14893, metadata !DIExpression()) #23, !dbg !16186
  call void @llvm.dbg.value(metadata i32 %22, metadata !16178, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !16208
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !16210, !srcloc !14932
  ret i32 %18, !dbg !16211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @schedule_for_queue_locked(%struct.k_work_q** nocapture noundef %0, %struct.k_work_delayable* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16212 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16218, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_work_q** %0, metadata !16216, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %1, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 1, metadata !16219, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %1, metadata !16220, metadata !DIExpression()), !dbg !16221
  %5 = icmp eq i64 %4, 0, !dbg !16222
  br i1 %5, label %6, label %9, !dbg !16224

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %1, i32 0, i32 0, !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_work* %7, metadata !16220, metadata !DIExpression()), !dbg !16221
  %8 = tail call fastcc i32 @submit_to_queue_locked(%struct.k_work* noundef %7, %struct.k_work_q** noundef %0) #25, !dbg !16226
  br label %14, !dbg !16228

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %1, i32 0, i32 0, i32 3, !dbg !16229
  tail call fastcc void @flag_set(i32* noundef nonnull %10, i32 noundef 3) #25, !dbg !16230
  %11 = load %struct.k_work_q*, %struct.k_work_q** %0, align 4, !dbg !16231
  %12 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %1, i32 0, i32 2, !dbg !16232
  store %struct.k_work_q* %11, %struct.k_work_q** %12, align 8, !dbg !16233
  %13 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %1, i32 0, i32 1, !dbg !16234
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %13, void (%struct._timeout*)* noundef nonnull @work_timeout, [1 x i64] %2) #24, !dbg !16235
  br label %14, !dbg !16236

14:                                               ; preds = %9, %6
  %15 = phi i32 [ %8, %6 ], [ 1, %9 ], !dbg !16221
  ret i32 %15, !dbg !16237
}

; Function Attrs: noinline nounwind optsize
define internal void @work_timeout(%struct._timeout* noundef %0) #1 !dbg !16238 {
  %2 = alloca %struct.k_work_q*, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16240, metadata !DIExpression()), !dbg !16245
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16246
  call void @llvm.dbg.value(metadata void (%struct._timeout*)** %3, metadata !16241, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata void (%struct._timeout*)** %3, metadata !16242, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16247
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16249, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16247
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16252
  br i1 %5, label %7, label %6, !dbg !16253

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16254
  unreachable, !dbg !16254

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16247
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16255
  call void @llvm.dbg.value(metadata i32 undef, metadata !16243, metadata !DIExpression()), !dbg !16245
  %8 = bitcast %struct.k_work_q** %2 to i8*, !dbg !16256
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #23, !dbg !16256
  call void @llvm.dbg.value(metadata %struct.k_work_q* null, metadata !16244, metadata !DIExpression()), !dbg !16245
  %9 = getelementptr inbounds void (%struct._timeout*)*, void (%struct._timeout*)** %3, i32 3, !dbg !16257
  %10 = bitcast void (%struct._timeout*)** %9 to i32*, !dbg !16257
  %11 = tail call fastcc zeroext i1 @flag_test_and_clear(i32* noundef nonnull %10, i32 noundef 3) #25, !dbg !16259
  br i1 %11, label %12, label %18, !dbg !16260

12:                                               ; preds = %7
  %13 = bitcast void (%struct._timeout*)** %3 to %struct.k_work*, !dbg !16261
  call void @llvm.dbg.value(metadata %struct.k_work* %13, metadata !16242, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata void (%struct._timeout*)** %3, metadata !16241, metadata !DIExpression()), !dbg !16245
  %14 = getelementptr inbounds void (%struct._timeout*)*, void (%struct._timeout*)** %3, i32 10, !dbg !16262
  %15 = bitcast void (%struct._timeout*)** %14 to %struct.k_work_q**, !dbg !16262
  %16 = load %struct.k_work_q*, %struct.k_work_q** %15, align 8, !dbg !16262
  call void @llvm.dbg.value(metadata %struct.k_work_q* %16, metadata !16244, metadata !DIExpression()), !dbg !16245
  store %struct.k_work_q* %16, %struct.k_work_q** %2, align 4, !dbg !16264
  call void @llvm.dbg.value(metadata %struct.k_work_q** %2, metadata !16244, metadata !DIExpression(DW_OP_deref)), !dbg !16245
  %17 = call fastcc i32 @submit_to_queue_locked(%struct.k_work* noundef nonnull %13, %struct.k_work_q** noundef nonnull %2) #25, !dbg !16265
  br label %18, !dbg !16266

18:                                               ; preds = %12, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16267
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16269
  br i1 %19, label %21, label %20, !dbg !16270

20:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16271
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16271
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16271
  unreachable, !dbg !16271

21:                                               ; preds = %18
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !16249
  call void @llvm.dbg.value(metadata i32 %22, metadata !14899, metadata !DIExpression()) #23, !dbg !16251
  call void @llvm.dbg.value(metadata i32 %22, metadata !14893, metadata !DIExpression()) #23, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %22, metadata !16243, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !16272
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !16274, !srcloc !14932
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #23, !dbg !16275
  ret void, !dbg !16275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_schedule(%struct.k_work_delayable* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16276 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16281, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16280, metadata !DIExpression()), !dbg !16283
  %3 = tail call i32 @k_work_schedule_for_queue(%struct.k_work_q* noundef nonnull @k_sys_work_q, %struct.k_work_delayable* noundef %0, [1 x i64] %1) #25, !dbg !16284
  call void @llvm.dbg.value(metadata i32 %3, metadata !16282, metadata !DIExpression()), !dbg !16283
  ret i32 %3, !dbg !16285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_reschedule_for_queue(%struct.k_work_q* noundef %0, %struct.k_work_delayable* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16286 {
  %4 = alloca %struct.k_work_q*, align 4
  call void @llvm.dbg.value(metadata i64 undef, metadata !16290, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_work_q* %0, metadata !16288, metadata !DIExpression()), !dbg !16293
  store %struct.k_work_q* %0, %struct.k_work_q** %4, align 4
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %1, metadata !16289, metadata !DIExpression()), !dbg !16293
  %5 = icmp eq %struct.k_work_delayable* %1, null, !dbg !16294
  br i1 %5, label %6, label %7, !dbg !16297

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 987) #24, !dbg !16298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 987) #24, !dbg !16298
  unreachable, !dbg !16298

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !16291, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16300
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16302, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16300
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16305
  br i1 %9, label %11, label %10, !dbg !16306

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16307
  unreachable, !dbg !16307

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16300
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16308
  call void @llvm.dbg.value(metadata i32 undef, metadata !16292, metadata !DIExpression()), !dbg !16293
  %12 = tail call fastcc zeroext i1 @unschedule_locked(%struct.k_work_delayable* noundef nonnull %1) #25, !dbg !16309
  call void @llvm.dbg.value(metadata %struct.k_work_q** %4, metadata !16288, metadata !DIExpression(DW_OP_deref)), !dbg !16293
  %13 = call fastcc i32 @schedule_for_queue_locked(%struct.k_work_q** noundef nonnull %4, %struct.k_work_delayable* noundef nonnull %1, [1 x i64] %2) #25, !dbg !16310
  call void @llvm.dbg.value(metadata i32 %13, metadata !16291, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16311
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16313
  br i1 %14, label %16, label %15, !dbg !16314

15:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16315
  unreachable, !dbg !16315

16:                                               ; preds = %11
  %17 = extractvalue { i32, i32 } %8, 0, !dbg !16302
  call void @llvm.dbg.value(metadata i32 %17, metadata !14899, metadata !DIExpression()) #23, !dbg !16304
  call void @llvm.dbg.value(metadata i32 %17, metadata !14893, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %17, metadata !16292, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16311
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !16316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !16318, !srcloc !14932
  ret i32 %13, !dbg !16319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @unschedule_locked(%struct.k_work_delayable* noundef %0) unnamed_addr #1 !dbg !16320 {
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16324, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i8 0, metadata !16325, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16326, metadata !DIExpression()), !dbg !16327
  %2 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, i32 3, !dbg !16328
  %3 = tail call fastcc zeroext i1 @flag_test_and_clear(i32* noundef nonnull %2, i32 noundef 3) #25, !dbg !16330
  br i1 %3, label %4, label %7, !dbg !16331

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 1, !dbg !16332
  %6 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %5) #24, !dbg !16334
  call void @llvm.dbg.value(metadata i8 1, metadata !16325, metadata !DIExpression()), !dbg !16327
  br label %7, !dbg !16335

7:                                                ; preds = %4, %1
  call void @llvm.dbg.value(metadata i8 poison, metadata !16325, metadata !DIExpression()), !dbg !16327
  ret i1 %3, !dbg !16336
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_reschedule(%struct.k_work_delayable* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16337 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16340, metadata !DIExpression()), !dbg !16342
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16339, metadata !DIExpression()), !dbg !16342
  %3 = tail call i32 @k_work_reschedule_for_queue(%struct.k_work_q* noundef nonnull @k_sys_work_q, %struct.k_work_delayable* noundef %0, [1 x i64] %1) #25, !dbg !16343
  call void @llvm.dbg.value(metadata i32 %3, metadata !16341, metadata !DIExpression()), !dbg !16342
  ret i32 %3, !dbg !16344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_work_cancel_delayable(%struct.k_work_delayable* noundef %0) local_unnamed_addr #1 !dbg !16345 {
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16349, metadata !DIExpression()), !dbg !16352
  %2 = icmp eq %struct.k_work_delayable* %0, null, !dbg !16353
  br i1 %2, label %3, label %4, !dbg !16356

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1021) #24, !dbg !16357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1021) #24, !dbg !16357
  unreachable, !dbg !16357

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16359
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16361, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16363
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16363
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16359
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16364
  br i1 %6, label %8, label %7, !dbg !16365

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16366
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16366
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16366
  unreachable, !dbg !16366

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16363
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16359
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16367
  call void @llvm.dbg.value(metadata i32 undef, metadata !16350, metadata !DIExpression()), !dbg !16352
  %9 = tail call fastcc i32 @cancel_delayable_async_locked(%struct.k_work_delayable* noundef nonnull %0) #25, !dbg !16368
  call void @llvm.dbg.value(metadata i32 %9, metadata !16351, metadata !DIExpression()), !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16369
  %10 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16371
  br i1 %10, label %12, label %11, !dbg !16372

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16373
  unreachable, !dbg !16373

12:                                               ; preds = %8
  %13 = extractvalue { i32, i32 } %5, 0, !dbg !16361
  call void @llvm.dbg.value(metadata i32 %13, metadata !14899, metadata !DIExpression()) #23, !dbg !16363
  call void @llvm.dbg.value(metadata i32 %13, metadata !14893, metadata !DIExpression()) #23, !dbg !16359
  call void @llvm.dbg.value(metadata i32 %13, metadata !16350, metadata !DIExpression()), !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16369
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #23, !dbg !16374
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !16376, !srcloc !14932
  ret i32 %9, !dbg !16377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cancel_delayable_async_locked(%struct.k_work_delayable* noundef %0) unnamed_addr #1 !dbg !16378 {
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16380, metadata !DIExpression()), !dbg !16381
  %2 = tail call fastcc zeroext i1 @unschedule_locked(%struct.k_work_delayable* noundef %0) #25, !dbg !16382
  %3 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, !dbg !16383
  %4 = tail call fastcc i32 @cancel_async_locked(%struct.k_work* noundef %3) #25, !dbg !16384
  ret i32 %4, !dbg !16385
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_work_cancel_delayable_sync(%struct.k_work_delayable* noundef %0, %struct.k_work_sync* noundef %1) local_unnamed_addr #1 !dbg !16386 {
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16390, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_work_sync* %1, metadata !16391, metadata !DIExpression()), !dbg !16396
  %3 = icmp eq %struct.k_work_delayable* %0, null, !dbg !16397
  br i1 %3, label %4, label %5, !dbg !16400

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1038) #24, !dbg !16401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1038) #24, !dbg !16401
  unreachable, !dbg !16401

5:                                                ; preds = %2
  %6 = icmp eq %struct.k_work_sync* %1, null, !dbg !16403
  br i1 %6, label %7, label %8, !dbg !16406

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1039) #24, !dbg !16407
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1039) #24, !dbg !16407
  unreachable, !dbg !16407

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !16409
  br i1 %9, label %10, label %11, !dbg !16412

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1040) #24, !dbg !16413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1040) #24, !dbg !16413
  unreachable, !dbg !16413

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_work_sync* %1, metadata !16392, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16415
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16417, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16419
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16419
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16415
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16420
  br i1 %13, label %15, label %14, !dbg !16421

14:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16422
  unreachable, !dbg !16422

15:                                               ; preds = %11
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16417
  call void @llvm.dbg.value(metadata i32 %16, metadata !14899, metadata !DIExpression()) #23, !dbg !16419
  call void @llvm.dbg.value(metadata i32 %16, metadata !14893, metadata !DIExpression()) #23, !dbg !16415
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16423
  call void @llvm.dbg.value(metadata i32 %16, metadata !16393, metadata !DIExpression()), !dbg !16396
  %17 = tail call fastcc i32 @work_delayable_busy_get_locked(%struct.k_work_delayable* noundef nonnull %0) #25, !dbg !16424
  %18 = icmp ne i32 %17, 0, !dbg !16425
  call void @llvm.dbg.value(metadata i1 %18, metadata !16394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16396
  call void @llvm.dbg.value(metadata i8 0, metadata !16395, metadata !DIExpression()), !dbg !16396
  br i1 %18, label %19, label %30, !dbg !16426

19:                                               ; preds = %15
  %20 = bitcast %struct.k_work_sync* %1 to %struct.z_work_canceller*, !dbg !16427
  call void @llvm.dbg.value(metadata %struct.z_work_canceller* %20, metadata !16392, metadata !DIExpression()), !dbg !16396
  %21 = tail call fastcc i32 @cancel_delayable_async_locked(%struct.k_work_delayable* noundef nonnull %0) #25, !dbg !16428
  %22 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, !dbg !16431
  %23 = tail call fastcc zeroext i1 @cancel_sync_locked(%struct.k_work* noundef nonnull %22, %struct.z_work_canceller* noundef nonnull %20) #25, !dbg !16432
  call void @llvm.dbg.value(metadata i1 %23, metadata !16395, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16396
  call void @llvm.dbg.value(metadata i8 poison, metadata !16395, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16433
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16433
  %24 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16435
  br i1 %24, label %26, label %25, !dbg !16436

25:                                               ; preds = %19
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16437
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16437
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16437
  unreachable, !dbg !16437

26:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %16, metadata !14912, metadata !DIExpression()) #23, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %16, metadata !14926, metadata !DIExpression()) #23, !dbg !16438
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16440, !srcloc !14932
  br i1 %23, label %27, label %34, !dbg !16441

27:                                               ; preds = %26
  %28 = getelementptr inbounds %struct.k_work_sync, %struct.k_work_sync* %1, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16442
  %29 = bitcast %struct.k_work_q** %28 to %struct.k_sem*, !dbg !16442
  tail call fastcc void @k_sem_take(%struct.k_sem* noundef nonnull %29) #25, !dbg !16445
  br label %34, !dbg !16446

30:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i8 poison, metadata !16395, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16447
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16449
  br i1 %31, label %33, label %32, !dbg !16450

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16451
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16451
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16451
  unreachable, !dbg !16451

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %16, metadata !14912, metadata !DIExpression()) #23, !dbg !16447
  call void @llvm.dbg.value(metadata i32 %16, metadata !14926, metadata !DIExpression()) #23, !dbg !16452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16454, !srcloc !14932
  br label %34, !dbg !16441

34:                                               ; preds = %33, %26, %27
  ret i1 %18, !dbg !16455
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_work_flush_delayable(%struct.k_work_delayable* noundef %0, %struct.k_work_sync* noundef %1) local_unnamed_addr #1 !dbg !16456 {
  %3 = alloca %struct.k_work_q*, align 4
  call void @llvm.dbg.value(metadata %struct.k_work_delayable* %0, metadata !16458, metadata !DIExpression()), !dbg !16467
  call void @llvm.dbg.value(metadata %struct.k_work_sync* %1, metadata !16459, metadata !DIExpression()), !dbg !16467
  %4 = icmp eq %struct.k_work_delayable* %0, null, !dbg !16468
  br i1 %4, label %5, label %6, !dbg !16471

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1070) #24, !dbg !16472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1070) #24, !dbg !16472
  unreachable, !dbg !16472

6:                                                ; preds = %2
  %7 = icmp eq %struct.k_work_sync* %1, null, !dbg !16474
  br i1 %7, label %8, label %9, !dbg !16477

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1071) #24, !dbg !16478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1071) #24, !dbg !16478
  unreachable, !dbg !16478

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !16480
  br i1 %10, label %11, label %12, !dbg !16483

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1072) #24, !dbg !16484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 1072) #24, !dbg !16484
  unreachable, !dbg !16484

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 0, !dbg !16486
  call void @llvm.dbg.value(metadata %struct.k_work* %13, metadata !16460, metadata !DIExpression()), !dbg !16467
  %14 = getelementptr inbounds %struct.k_work_sync, %struct.k_work_sync* %1, i32 0, i32 0, i32 0, !dbg !16487
  call void @llvm.dbg.value(metadata %struct.z_work_flusher* %14, metadata !16461, metadata !DIExpression()), !dbg !16467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14887, metadata !DIExpression()) #23, !dbg !16488
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16490, !srcloc !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14899, metadata !DIExpression()) #23, !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()) #23, !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #23, !dbg !16488
  %16 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16493
  br i1 %16, label %18, label %17, !dbg !16494

17:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.313, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 148) #24, !dbg !16495
  unreachable, !dbg !16495

18:                                               ; preds = %12
  %19 = extractvalue { i32, i32 } %15, 0, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %19, metadata !14899, metadata !DIExpression()) #23, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %19, metadata !14893, metadata !DIExpression()) #23, !dbg !16488
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %19, metadata !16462, metadata !DIExpression()), !dbg !16467
  %20 = tail call fastcc i32 @work_busy_get_locked(%struct.k_work* noundef nonnull %13) #25, !dbg !16497
  %21 = icmp eq i32 %20, 0, !dbg !16499
  br i1 %21, label %22, label %26, !dbg !16500

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16501
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16504
  br i1 %23, label %25, label %24, !dbg !16505

24:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16506
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16506
  unreachable, !dbg !16506

25:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 %19, metadata !14912, metadata !DIExpression()) #23, !dbg !16501
  call void @llvm.dbg.value(metadata i32 %19, metadata !14926, metadata !DIExpression()) #23, !dbg !16507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !16509, !srcloc !14932
  br label %40, !dbg !16510

26:                                               ; preds = %18
  %27 = tail call fastcc zeroext i1 @unschedule_locked(%struct.k_work_delayable* noundef nonnull %0) #25, !dbg !16511
  br i1 %27, label %28, label %33, !dbg !16512

28:                                               ; preds = %26
  %29 = bitcast %struct.k_work_q** %3 to i8*, !dbg !16513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #23, !dbg !16513
  %30 = getelementptr inbounds %struct.k_work_delayable, %struct.k_work_delayable* %0, i32 0, i32 2, !dbg !16514
  %31 = load %struct.k_work_q*, %struct.k_work_q** %30, align 8, !dbg !16514
  call void @llvm.dbg.value(metadata %struct.k_work_q* %31, metadata !16463, metadata !DIExpression()), !dbg !16515
  store %struct.k_work_q* %31, %struct.k_work_q** %3, align 4, !dbg !16516
  call void @llvm.dbg.value(metadata %struct.k_work_q** %3, metadata !16463, metadata !DIExpression(DW_OP_deref)), !dbg !16515
  %32 = call fastcc i32 @submit_to_queue_locked(%struct.k_work* noundef nonnull %13, %struct.k_work_q** noundef nonnull %3) #25, !dbg !16517
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #23, !dbg !16518
  br label %33, !dbg !16519

33:                                               ; preds = %28, %26
  %34 = tail call fastcc zeroext i1 @work_flush_locked(%struct.k_work* noundef nonnull %13, %struct.z_work_flusher* noundef nonnull %14) #25, !dbg !16520
  call void @llvm.dbg.value(metadata i1 %34, metadata !16466, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16467
  call void @llvm.dbg.value(metadata i32 undef, metadata !14912, metadata !DIExpression()) #23, !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.310, metadata !14917, metadata !DIExpression()) #23, !dbg !16521
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16523
  br i1 %35, label %37, label %36, !dbg !16524

36:                                               ; preds = %33
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16525
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.310) #24, !dbg !16525
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.312, i32 0, i32 0), i32 noundef 194) #24, !dbg !16525
  unreachable, !dbg !16525

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %19, metadata !14912, metadata !DIExpression()) #23, !dbg !16521
  call void @llvm.dbg.value(metadata i32 %19, metadata !14926, metadata !DIExpression()) #23, !dbg !16526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !16528, !srcloc !14932
  br i1 %34, label %38, label %40, !dbg !16529

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.k_work_sync, %struct.k_work_sync* %1, i32 0, i32 0, i32 0, i32 1, !dbg !16530
  tail call fastcc void @k_sem_take(%struct.k_sem* noundef nonnull %39) #25, !dbg !16533
  br label %40, !dbg !16534

40:                                               ; preds = %38, %37, %25
  %41 = phi i1 [ false, %25 ], [ false, %37 ], [ true, %38 ], !dbg !16467
  ret i1 %41, !dbg !16535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !16536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16540, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16541, metadata !DIExpression()), !dbg !16544
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16545
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !16545
  %5 = load i8, i8* %4, align 2, !dbg !16545
  call void @llvm.dbg.value(metadata i8 %5, metadata !16542, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16544
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16546
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !16546
  %8 = load i8, i8* %7, align 2, !dbg !16546
  call void @llvm.dbg.value(metadata i8 %8, metadata !16543, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16544
  %9 = icmp eq i8 %8, %5, !dbg !16547
  %10 = sext i8 %5 to i32, !dbg !16549
  %11 = sext i8 %8 to i32, !dbg !16549
  %12 = sub nsw i32 %11, %10, !dbg !16549
  %13 = select i1 %9, i32 0, i32 %12, !dbg !16549
  ret i32 %13, !dbg !16550
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !16551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16555, metadata !DIExpression()), !dbg !16556
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !16557
  %3 = icmp eq i32 %2, 0, !dbg !16559
  br i1 %3, label %8, label %4, !dbg !16560

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !16561
  %6 = add i32 %5, %2, !dbg !16563
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16564
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !16565
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !16566
  br label %8, !dbg !16567

8:                                                ; preds = %4, %1
  ret void, !dbg !16568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #9 !dbg !16569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16573, metadata !DIExpression()), !dbg !16575
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !16576
  call void @llvm.dbg.value(metadata i32 %1, metadata !16574, metadata !DIExpression()), !dbg !16575
  ret i32 %1, !dbg !16577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16582, metadata !DIExpression()), !dbg !16591
  call void @llvm.dbg.value(metadata i32 %1, metadata !16583, metadata !DIExpression()), !dbg !16591
  call void @llvm.dbg.value(metadata i32 0, metadata !16584, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !16600
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16602, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !16600
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16610
  br i1 %4, label %6, label %5, !dbg !16613

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !16614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !16614
  unreachable, !dbg !16614

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !16600
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16616
  call void @llvm.dbg.value(metadata i32 undef, metadata !16590, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()), !dbg !16592
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16617
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !16620
  %8 = icmp sgt i32 %0, 0, !dbg !16621
  %9 = icmp sgt i32 %7, 2, !dbg !16623
  %10 = select i1 %9, i32 %7, i32 2, !dbg !16623
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !16623
  store i32 %11, i32* @slice_ticks, align 4, !dbg !16624
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !16625
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !16626
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !16633
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16635
  br i1 %12, label %14, label %13, !dbg !16638

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !16639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !16639
  unreachable, !dbg !16639

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !16602
  call void @llvm.dbg.value(metadata i32 %15, metadata !16605, metadata !DIExpression()) #23, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %15, metadata !16599, metadata !DIExpression()) #23, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %15, metadata !16590, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !16644
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !16646, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !16584, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()), !dbg !16592
  ret void, !dbg !16648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !16649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16653, metadata !DIExpression()), !dbg !16654
  call void @llvm.dbg.value(metadata i32 %0, metadata !16655, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata i32 1000, metadata !16658, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i32 10000, metadata !16659, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i8 1, metadata !16660, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i1 true, metadata !16661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata i1 true, metadata !16662, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata i8 0, metadata !16663, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i1 true, metadata !16664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata i1 false, metadata !16665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16670
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !16670
  %2 = mul i32 %0, 10, !dbg !16672
  ret i32 %2, !dbg !16678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16681, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !16684
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16686, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !16688
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !16688
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !16684
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16689
  br i1 %3, label %5, label %4, !dbg !16690

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !16691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !16691
  unreachable, !dbg !16691

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16686
  call void @llvm.dbg.value(metadata i32 %6, metadata !16605, metadata !DIExpression()) #23, !dbg !16688
  call void @llvm.dbg.value(metadata i32 %6, metadata !16599, metadata !DIExpression()) #23, !dbg !16684
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16692
  call void @llvm.dbg.value(metadata i32 %6, metadata !16682, metadata !DIExpression()), !dbg !16683
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16693
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16695
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !16696
  br i1 %9, label %10, label %14, !dbg !16697

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !16700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !16700
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16702
  br i1 %11, label %13, label %12, !dbg !16703

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !16704
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16704
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !16704
  unreachable, !dbg !16704

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !16627, metadata !DIExpression()) #23, !dbg !16700
  call void @llvm.dbg.value(metadata i32 %6, metadata !16641, metadata !DIExpression()) #23, !dbg !16705
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16707, !srcloc !16647
  br label %33, !dbg !16708

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16709
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !16710
  %16 = icmp eq i32 %15, 0, !dbg !16710
  br i1 %16, label %27, label %17, !dbg !16712

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !16713
  br i1 %18, label %19, label %27, !dbg !16714

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16715
  %21 = icmp sgt i32 %20, %0, !dbg !16718
  br i1 %21, label %25, label %22, !dbg !16719

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16720
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !16720
  call void @llvm.dbg.value(metadata i32 %24, metadata !16682, metadata !DIExpression()), !dbg !16683
  br label %28, !dbg !16722

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !16723
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16723
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16725
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !16683
  call void @llvm.dbg.value(metadata i32 %29, metadata !16682, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !16727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !16727
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16729
  br i1 %30, label %32, label %31, !dbg !16730

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !16731
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16731
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !16731
  unreachable, !dbg !16731

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !16627, metadata !DIExpression()) #23, !dbg !16727
  call void @llvm.dbg.value(metadata i32 %29, metadata !16641, metadata !DIExpression()) #23, !dbg !16732
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !16734, !srcloc !16647
  br label %33, !dbg !16735

33:                                               ; preds = %32, %13
  ret void, !dbg !16735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !16736 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16740, metadata !DIExpression()), !dbg !16742
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !16743
  %3 = icmp eq i32 %2, 0, !dbg !16743
  br i1 %3, label %16, label %4, !dbg !16744

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !16745
  br i1 %5, label %16, label %6, !dbg !16746

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16747
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16747
  %9 = load i8, i8* %8, align 2, !dbg !16747
  %10 = sext i8 %9 to i32, !dbg !16748
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16749
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.357(i32 noundef %10, i32 noundef %11) #25, !dbg !16750
  br i1 %12, label %16, label %13, !dbg !16751

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !16752
  %15 = xor i1 %14, true, !dbg !16753
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16742
  call void @llvm.dbg.value(metadata i1 %17, metadata !16741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16742
  ret i1 %17, !dbg !16754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16755 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()), !dbg !16761
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16762
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16760, metadata !DIExpression()), !dbg !16761
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !16763
  br i1 %3, label %5, label %4, !dbg !16765

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !16766
  br label %5, !dbg !16768

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16759, metadata !DIExpression()), !dbg !16761
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !16769
  ret i32 %6, !dbg !16770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !16771 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16773, metadata !DIExpression()), !dbg !16775
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16776
  %3 = load i8, i8* %2, align 1, !dbg !16776
  call void @llvm.dbg.value(metadata i8 %3, metadata !16774, metadata !DIExpression()), !dbg !16775
  %4 = and i8 %3, 31, !dbg !16777
  %5 = icmp ne i8 %4, 0, !dbg !16778
  ret i1 %5, !dbg !16779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16782, metadata !DIExpression()), !dbg !16783
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !16784
  br i1 %2, label %3, label %7, !dbg !16786

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16787, metadata !DIExpression()) #23, !dbg !16790
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16793
  %5 = load i8, i8* %4, align 1, !dbg !16794
  %6 = and i8 %5, 127, !dbg !16794
  store i8 %6, i8* %4, align 1, !dbg !16794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16795, metadata !DIExpression()) #23, !dbg !16798
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !16802
  br label %7, !dbg !16803

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16804, metadata !DIExpression()) #23, !dbg !16807
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16809
  %9 = load i8, i8* %8, align 1, !dbg !16810
  %10 = or i8 %9, -128, !dbg !16810
  store i8 %10, i8* %8, align 1, !dbg !16810
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16811, metadata !DIExpression()) #23, !dbg !16814
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16818, metadata !DIExpression()) #23, !dbg !16826
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16824, metadata !DIExpression()) #23, !dbg !16826
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !16828
  br i1 %11, label %12, label %13, !dbg !16831

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !16832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !16832
  unreachable, !dbg !16832

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !16834
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16825, metadata !DIExpression()) #23, !dbg !16826
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16836
  br i1 %15, label %26, label %16, !dbg !16834

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16825, metadata !DIExpression()) #23, !dbg !16826
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16838
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16825, metadata !DIExpression()) #23, !dbg !16826
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !16839
  %20 = icmp sgt i32 %19, 0, !dbg !16842
  br i1 %20, label %21, label %23, !dbg !16843

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16844
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !16846
  br label %28, !dbg !16847

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !16836
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16825, metadata !DIExpression()) #23, !dbg !16826
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16836
  br i1 %25, label %26, label %16, !dbg !16834, !llvm.loop !16848

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16850
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !16851
  br label %28, !dbg !16852

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16853
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16854
  %31 = zext i1 %30 to i32, !dbg !16854
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !16855
  ret void, !dbg !16856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !16857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16859, metadata !DIExpression()), !dbg !16860
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !16861
  ret i1 %2, !dbg !16862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16863 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16865, metadata !DIExpression()), !dbg !16867
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16866, metadata !DIExpression()), !dbg !16867
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !16868
  br i1 %3, label %4, label %5, !dbg !16871

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1139) #24, !dbg !16872
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1139) #24, !dbg !16872
  unreachable, !dbg !16872

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16874
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !16875
  ret void, !dbg !16876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16879, metadata !DIExpression()), !dbg !16880
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16881
  ret i1 %2, !dbg !16882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16883 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16887, metadata !DIExpression()), !dbg !16888
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.355(%struct._dnode* noundef %0) #25, !dbg !16889
  br i1 %2, label %6, label %3, !dbg !16889

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16890
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16890
  br label %6, !dbg !16889

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16889
  ret %struct._dnode* %7, !dbg !16891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !16892 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16896, metadata !DIExpression()), !dbg !16900
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16897, metadata !DIExpression()), !dbg !16900
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16901
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16901
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16898, metadata !DIExpression()), !dbg !16900
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16902
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16903
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16904
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16905
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16906
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16907
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16908
  ret void, !dbg !16909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #9 !dbg !16910 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16914, metadata !DIExpression()), !dbg !16916
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16915, metadata !DIExpression()), !dbg !16916
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16917
  br i1 %3, label %6, label %4, !dbg !16918

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !16919
  br label %6, !dbg !16918

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16918
  ret %struct._dnode* %7, !dbg !16920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !16921 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16925, metadata !DIExpression()), !dbg !16928
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16926, metadata !DIExpression()), !dbg !16928
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16929
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16929
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16927, metadata !DIExpression()), !dbg !16928
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16930
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16931
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16932
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16933
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16934
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16935
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16936
  ret void, !dbg !16937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16940, metadata !DIExpression()), !dbg !16942
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !16943
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16950, metadata !DIExpression()) #23, !dbg !16952
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16953
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16954
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16954
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16941, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16955, metadata !DIExpression()) #23, !dbg !16961
  call void @llvm.dbg.value(metadata i32 %0, metadata !16960, metadata !DIExpression()) #23, !dbg !16961
  %6 = icmp eq i32 %0, 0, !dbg !16964
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16966
  br i1 %6, label %8, label %18, !dbg !16967

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !16968
  br i1 %9, label %10, label %11, !dbg !16971

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 137) #24, !dbg !16972
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !16972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 137) #24, !dbg !16972
  unreachable, !dbg !16972

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !16974
  br i1 %12, label %18, label %13, !dbg !16976

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !16977
  br i1 %14, label %18, label %15, !dbg !16979

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !16980
  %17 = icmp eq i32 %16, 0, !dbg !16980
  br i1 %17, label %21, label %18, !dbg !16982

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !16983
  br i1 %19, label %21, label %20, !dbg !16986

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !16987
  br label %21, !dbg !16989

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !16966
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16966
  ret void, !dbg !16990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #9 !dbg !16991 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16995, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16996, metadata !DIExpression()), !dbg !16998
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef %0) #25, !dbg !16999
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16997, metadata !DIExpression()), !dbg !16998
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16996, metadata !DIExpression()), !dbg !16998
  ret %struct.k_thread* %3, !dbg !17000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17003, metadata !DIExpression()), !dbg !17004
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17005
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !17006
  %4 = xor i1 %3, true, !dbg !17007
  ret i1 %4, !dbg !17008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17009 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17011, metadata !DIExpression()), !dbg !17012
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !17013
  %3 = load i16, i16* %2, align 2, !dbg !17013
  %4 = icmp ult i16 %3, 128, !dbg !17014
  %5 = zext i1 %4 to i32, !dbg !17014
  ret i32 %5, !dbg !17015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17016 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17022, metadata !DIExpression()), !dbg !17023
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17024
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !17025
  %4 = xor i1 %3, true, !dbg !17026
  ret i1 %4, !dbg !17027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17028 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17034, metadata !DIExpression()), !dbg !17035
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17036
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17036
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17037
  ret i1 %4, !dbg !17038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #9 !dbg !17039 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17041, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17042, metadata !DIExpression()), !dbg !17043
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17044
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17044
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !17045
  br i1 %5, label %9, label %6, !dbg !17046

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17047
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !17047
  br label %9, !dbg !17046

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !17046
  ret %struct._dnode* %10, !dbg !17048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.355(%struct._dnode* noundef readonly %0) unnamed_addr #9 !dbg !17049 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17053, metadata !DIExpression()), !dbg !17054
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17055
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17055
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17056
  ret i1 %4, !dbg !17057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !17058 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17062, metadata !DIExpression()), !dbg !17065
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17066
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17066
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17063, metadata !DIExpression()), !dbg !17065
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17067
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17067
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17064, metadata !DIExpression()), !dbg !17065
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17068
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17069
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17070
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17071
  tail call fastcc void @sys_dnode_init.356(%struct._dnode* noundef %0) #25, !dbg !17072
  ret void, !dbg !17073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.356(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !17074 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17076, metadata !DIExpression()), !dbg !17077
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17078
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17079
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17080
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17081
  ret void, !dbg !17082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #9 !dbg !17083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17087, metadata !DIExpression()), !dbg !17089
  call void @llvm.dbg.value(metadata i32 %1, metadata !17088, metadata !DIExpression()), !dbg !17089
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17090
  %4 = load i8, i8* %3, align 1, !dbg !17090
  %5 = zext i8 %4 to i32, !dbg !17091
  %6 = and i32 %5, %1, !dbg !17092
  %7 = icmp ne i32 %6, 0, !dbg !17093
  ret i1 %7, !dbg !17094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.357(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !17095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17097, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i32 %1, metadata !17098, metadata !DIExpression()), !dbg !17099
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.358(i32 noundef %0, i32 noundef %1) #25, !dbg !17100
  ret i1 %3, !dbg !17101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.358(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !17102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17104, metadata !DIExpression()), !dbg !17106
  call void @llvm.dbg.value(metadata i32 %1, metadata !17105, metadata !DIExpression()), !dbg !17106
  %3 = icmp slt i32 %0, %1, !dbg !17107
  ret i1 %3, !dbg !17108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17111, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 0, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17117
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17119, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17117
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17122
  br i1 %3, label %5, label %4, !dbg !17123

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17124
  unreachable, !dbg !17124

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17117
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !17114, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()), !dbg !17116
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17131
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17133
  br i1 %6, label %8, label %7, !dbg !17134

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17135
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17135
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17135
  unreachable, !dbg !17135

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17119
  call void @llvm.dbg.value(metadata i32 %9, metadata !16605, metadata !DIExpression()) #23, !dbg !17121
  call void @llvm.dbg.value(metadata i32 %9, metadata !16599, metadata !DIExpression()) #23, !dbg !17117
  call void @llvm.dbg.value(metadata i32 %9, metadata !17114, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17131
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17136
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17138, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()), !dbg !17116
  ret void, !dbg !17139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17142, metadata !DIExpression()), !dbg !17143
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !17144
  br i1 %2, label %27, label %3, !dbg !17146

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !17147
  br i1 %4, label %5, label %27, !dbg !17148

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16804, metadata !DIExpression()) #23, !dbg !17149
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17152
  %7 = load i8, i8* %6, align 1, !dbg !17153
  %8 = or i8 %7, -128, !dbg !17153
  store i8 %8, i8* %6, align 1, !dbg !17153
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16811, metadata !DIExpression()) #23, !dbg !17154
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16818, metadata !DIExpression()) #23, !dbg !17156
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16824, metadata !DIExpression()) #23, !dbg !17156
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !17158
  br i1 %9, label %10, label %11, !dbg !17159

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !17160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !17160
  unreachable, !dbg !17160

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !17161
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16825, metadata !DIExpression()) #23, !dbg !17156
  %13 = icmp eq %struct._dnode* %12, null, !dbg !17162
  br i1 %13, label %24, label %14, !dbg !17161

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16825, metadata !DIExpression()) #23, !dbg !17156
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !17163
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16825, metadata !DIExpression()) #23, !dbg !17156
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !17164
  %18 = icmp sgt i32 %17, 0, !dbg !17165
  br i1 %18, label %19, label %21, !dbg !17166

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17167
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !17168
  br label %26, !dbg !17169

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !17162
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16825, metadata !DIExpression()) #23, !dbg !17156
  %23 = icmp eq %struct._dnode* %22, null, !dbg !17162
  br i1 %23, label %24, label %14, !dbg !17161, !llvm.loop !17170

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17172
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !17173
  br label %26, !dbg !17174

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !17175
  br label %27, !dbg !17176

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !17177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17180, metadata !DIExpression()), !dbg !17181
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !17182
  br i1 %2, label %6, label %3, !dbg !17183

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !17184
  %5 = xor i1 %4, true, !dbg !17183
  br label %6, !dbg !17183

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !17185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17186 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17188, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata i32 0, metadata !17189, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17194
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17196, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17194
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17199
  br i1 %3, label %5, label %4, !dbg !17200

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17201
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17201
  unreachable, !dbg !17201

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17194
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17202
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17189, metadata !DIExpression()), !dbg !17193
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17206
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17208
  br i1 %6, label %8, label %7, !dbg !17209

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17210
  unreachable, !dbg !17210

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17196
  call void @llvm.dbg.value(metadata i32 %9, metadata !16605, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata i32 %9, metadata !16599, metadata !DIExpression()) #23, !dbg !17194
  call void @llvm.dbg.value(metadata i32 %9, metadata !17191, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17211
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17213, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17189, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17189, metadata !DIExpression()), !dbg !17193
  ret void, !dbg !17214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17217, metadata !DIExpression()), !dbg !17219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17220
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17222, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17224
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17224
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17220
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17225
  br i1 %3, label %5, label %4, !dbg !17226

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17227
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17227
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17227
  unreachable, !dbg !17227

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17222
  call void @llvm.dbg.value(metadata i32 %6, metadata !16605, metadata !DIExpression()) #23, !dbg !17224
  call void @llvm.dbg.value(metadata i32 %6, metadata !16599, metadata !DIExpression()) #23, !dbg !17220
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17228
  call void @llvm.dbg.value(metadata i32 %6, metadata !17218, metadata !DIExpression()), !dbg !17219
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !17229
  br i1 %7, label %8, label %12, !dbg !17231

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17232
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17235
  br i1 %9, label %11, label %10, !dbg !17236

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17237
  unreachable, !dbg !17237

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16627, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 %6, metadata !16641, metadata !DIExpression()) #23, !dbg !17238
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17240, !srcloc !16647
  br label %14, !dbg !17241

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.363(%struct.k_thread* noundef %0) #25, !dbg !17242
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !17243
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17244
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !17244
  br label %14, !dbg !17245

14:                                               ; preds = %12, %11
  ret void, !dbg !17245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17246 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17248, metadata !DIExpression()), !dbg !17249
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17250
  %3 = load i8, i8* %2, align 1, !dbg !17250
  %4 = and i8 %3, 4, !dbg !17251
  %5 = icmp eq i8 %4, 0, !dbg !17252
  ret i1 %5, !dbg !17253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.363(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17254 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17256, metadata !DIExpression()), !dbg !17257
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17258
  %3 = load i8, i8* %2, align 1, !dbg !17259
  %4 = and i8 %3, -5, !dbg !17259
  store i8 %4, i8* %2, align 1, !dbg !17259
  ret void, !dbg !17260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !17261 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !17264, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17263, metadata !DIExpression()), !dbg !17265
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !17266
  br i1 %4, label %5, label %12, !dbg !17268

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !17269
  br i1 %6, label %7, label %12, !dbg !17270

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !17277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17276, metadata !DIExpression()) #23, !dbg !17277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17280, metadata !DIExpression()) #23, !dbg !17285
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !17287
  br i1 %8, label %10, label %9, !dbg !17290

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !17291
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !17291
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !17291
  unreachable, !dbg !17291

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !17271, metadata !DIExpression()) #23, !dbg !17277
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !17293
  br label %16, !dbg !17294

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16632, metadata !DIExpression()) #23, !dbg !17295
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !17298
  br i1 %13, label %15, label %14, !dbg !17299

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !17300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17300
  unreachable, !dbg !17300

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !16627, metadata !DIExpression()) #23, !dbg !17295
  call void @llvm.dbg.value(metadata i32 %3, metadata !16641, metadata !DIExpression()) #23, !dbg !17301
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17303, !srcloc !16647
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !17304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !17305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17309, metadata !DIExpression()), !dbg !17310
  call void @llvm.dbg.value(metadata i32 %0, metadata !17311, metadata !DIExpression()), !dbg !17316
  %2 = icmp eq i32 %0, 0, !dbg !17318
  br i1 %2, label %3, label %6, !dbg !17319

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17320, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %4, metadata !17323, metadata !DIExpression()) #23, !dbg !17328
  %5 = icmp eq i32 %4, 0, !dbg !17329
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !17310
  ret i1 %7, !dbg !17330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #9 !dbg !17331 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17334
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17333, metadata !DIExpression()), !dbg !17335
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17336
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !17337
  ret i1 %3, !dbg !17338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !17339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17341, metadata !DIExpression()), !dbg !17343
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !17344
  call void @llvm.dbg.value(metadata i32 %2, metadata !17342, metadata !DIExpression()), !dbg !17343
  ret i32 %2, !dbg !17345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17348, metadata !DIExpression()), !dbg !17352
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !17353
  call void @llvm.dbg.value(metadata i32 0, metadata !17349, metadata !DIExpression()), !dbg !17354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17355
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17357, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17355
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17360
  br i1 %4, label %6, label %5, !dbg !17361

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17362
  unreachable, !dbg !17362

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17357
  call void @llvm.dbg.value(metadata i32 %7, metadata !16605, metadata !DIExpression()) #23, !dbg !17359
  call void @llvm.dbg.value(metadata i32 %7, metadata !16599, metadata !DIExpression()) #23, !dbg !17355
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17363
  call void @llvm.dbg.value(metadata i32 %7, metadata !17351, metadata !DIExpression()), !dbg !17354
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17354
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !17364
  br i1 %8, label %9, label %13, !dbg !17368

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16787, metadata !DIExpression()) #23, !dbg !17369
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17372
  %11 = load i8, i8* %10, align 1, !dbg !17373
  %12 = and i8 %11, 127, !dbg !17373
  store i8 %12, i8* %10, align 1, !dbg !17373
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16795, metadata !DIExpression()) #23, !dbg !17374
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !17376
  br label %13, !dbg !17377

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !17378
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17379
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !17380
  %16 = zext i1 %15 to i32, !dbg !17380
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !17381
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17382
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17384
  br i1 %17, label %19, label %18, !dbg !17385

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17386
  unreachable, !dbg !17386

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !16627, metadata !DIExpression()) #23, !dbg !17382
  call void @llvm.dbg.value(metadata i32 %7, metadata !16641, metadata !DIExpression()) #23, !dbg !17387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !17389, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17349, metadata !DIExpression()), !dbg !17354
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17354
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17390
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !17392
  br i1 %21, label %22, label %23, !dbg !17393

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked.366() #25, !dbg !17394
  br label %23, !dbg !17396

23:                                               ; preds = %22, %19
  ret void, !dbg !17397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17400, metadata !DIExpression()), !dbg !17401
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17402
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !17403
  ret i32 %3, !dbg !17404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17407, metadata !DIExpression()), !dbg !17408
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17409
  %3 = load i8, i8* %2, align 1, !dbg !17410
  %4 = or i8 %3, 16, !dbg !17410
  store i8 %4, i8* %2, align 1, !dbg !17410
  ret void, !dbg !17411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.366() unnamed_addr #1 !dbg !17412 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17413, !srcloc !16608
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17413
  call void @llvm.dbg.value(metadata i32 %2, metadata !16605, metadata !DIExpression()) #23, !dbg !17415
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17415
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !17416
  ret void, !dbg !17417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !17418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17420, metadata !DIExpression()), !dbg !17421
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !17422
  br i1 %2, label %3, label %5, !dbg !17424

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !17425
  br label %6, !dbg !17427

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16641, metadata !DIExpression()) #23, !dbg !17428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !17431, !srcloc !16647
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !17432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17435, metadata !DIExpression()), !dbg !17437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17438
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17440, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17438
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17443
  br i1 %3, label %5, label %4, !dbg !17444

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17445
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17445
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17445
  unreachable, !dbg !17445

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17440
  call void @llvm.dbg.value(metadata i32 %6, metadata !16605, metadata !DIExpression()) #23, !dbg !17442
  call void @llvm.dbg.value(metadata i32 %6, metadata !16599, metadata !DIExpression()) #23, !dbg !17438
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17446
  call void @llvm.dbg.value(metadata i32 %6, metadata !17436, metadata !DIExpression()), !dbg !17437
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !17447
  br i1 %7, label %12, label %8, !dbg !17449

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17450
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17453
  br i1 %9, label %11, label %10, !dbg !17454

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17455
  unreachable, !dbg !17455

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16627, metadata !DIExpression()) #23, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %6, metadata !16641, metadata !DIExpression()) #23, !dbg !17456
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17458, !srcloc !16647
  br label %14, !dbg !17459

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !17460
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !17461
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17462
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !17462
  br label %14, !dbg !17463

14:                                               ; preds = %12, %11
  ret void, !dbg !17463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17466, metadata !DIExpression()), !dbg !17467
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17468
  %3 = load i8, i8* %2, align 1, !dbg !17468
  %4 = and i8 %3, 16, !dbg !17469
  %5 = icmp ne i8 %4, 0, !dbg !17470
  ret i1 %5, !dbg !17471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17472 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17474, metadata !DIExpression()), !dbg !17475
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17476
  %3 = load i8, i8* %2, align 1, !dbg !17477
  %4 = and i8 %3, -17, !dbg !17477
  store i8 %4, i8* %2, align 1, !dbg !17477
  ret void, !dbg !17478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17479 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17489, metadata !DIExpression()), !dbg !17493
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17487, metadata !DIExpression()), !dbg !17493
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17488, metadata !DIExpression()), !dbg !17493
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17494
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !17494
  br i1 %5, label %9, label %6, !dbg !17494

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !17494
  br i1 %7, label %9, label %8, !dbg !17497

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 773) #24, !dbg !17498
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 773) #24, !dbg !17498
  unreachable, !dbg !17498

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !17490, metadata !DIExpression()), !dbg !17500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17501
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17503, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17505
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17505
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17501
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17506
  br i1 %11, label %13, label %12, !dbg !17507

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17508
  unreachable, !dbg !17508

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17505
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17501
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17509
  call void @llvm.dbg.value(metadata i32 undef, metadata !17492, metadata !DIExpression()), !dbg !17500
  call void @llvm.dbg.value(metadata i32 undef, metadata !17490, metadata !DIExpression()), !dbg !17500
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !17510
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17513
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17515
  br i1 %14, label %16, label %15, !dbg !17516

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17517
  unreachable, !dbg !17517

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !17503
  call void @llvm.dbg.value(metadata i32 %17, metadata !16605, metadata !DIExpression()) #23, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %17, metadata !16599, metadata !DIExpression()) #23, !dbg !17501
  call void @llvm.dbg.value(metadata i32 %17, metadata !17492, metadata !DIExpression()), !dbg !17500
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17513
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17518
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !17520, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17490, metadata !DIExpression()), !dbg !17500
  call void @llvm.dbg.value(metadata i32 undef, metadata !17490, metadata !DIExpression()), !dbg !17500
  ret void, !dbg !17521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !17522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17524, metadata !DIExpression()), !dbg !17525
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17526
  %3 = load i8, i8* %2, align 1, !dbg !17526
  %4 = and i8 %3, 1, !dbg !17527
  %5 = icmp ne i8 %4, 0, !dbg !17528
  ret i1 %5, !dbg !17529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !17530 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17534, metadata !DIExpression()), !dbg !17535
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17532, metadata !DIExpression()), !dbg !17535
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17533, metadata !DIExpression()), !dbg !17535
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #25, !dbg !17536
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !17537
  ret void, !dbg !17538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !17539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17543, metadata !DIExpression()), !dbg !17545
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17544, metadata !DIExpression()), !dbg !17545
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !17546
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !17547
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !17548
  br i1 %3, label %24, label %4, !dbg !17550

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17551
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !17553
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !17554
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16818, metadata !DIExpression()) #23, !dbg !17555
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16824, metadata !DIExpression()) #23, !dbg !17555
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !17557
  br i1 %7, label %8, label %9, !dbg !17558

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !17559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !17559
  unreachable, !dbg !17559

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef nonnull %6) #24, !dbg !17560
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16825, metadata !DIExpression()) #23, !dbg !17555
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17561
  br i1 %11, label %22, label %12, !dbg !17560

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16825, metadata !DIExpression()) #23, !dbg !17555
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17562
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16825, metadata !DIExpression()) #23, !dbg !17555
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !17563
  %16 = icmp sgt i32 %15, 0, !dbg !17564
  br i1 %16, label %17, label %19, !dbg !17565

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17566
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !17567
  br label %24, !dbg !17568

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !17561
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16825, metadata !DIExpression()) #23, !dbg !17555
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17561
  br i1 %21, label %22, label %12, !dbg !17560, !llvm.loop !17569

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17571
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !17572
  br label %24, !dbg !17573

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !17574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17575 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17580, metadata !DIExpression()), !dbg !17581
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17579, metadata !DIExpression()), !dbg !17581
  %4 = icmp eq i64 %3, -1, !dbg !17582
  br i1 %4, label %6, label %5, !dbg !17584

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.370(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !17585
  br label %6, !dbg !17587

6:                                                ; preds = %5, %2
  ret void, !dbg !17588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.370(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17589 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17592, metadata !DIExpression()), !dbg !17593
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17591, metadata !DIExpression()), !dbg !17593
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17594
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !17595
  ret void, !dbg !17596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !17597 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17599, metadata !DIExpression()), !dbg !17607
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !17608
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !17608
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17600, metadata !DIExpression()), !dbg !17607
  call void @llvm.dbg.value(metadata i32 0, metadata !17601, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17610
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17612, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17614
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17614
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17610
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17615
  br i1 %5, label %7, label %6, !dbg !17616

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17617
  unreachable, !dbg !17617

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17614
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17610
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17618
  call void @llvm.dbg.value(metadata i32 undef, metadata !17603, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.value(metadata i32 undef, metadata !17601, metadata !DIExpression()), !dbg !17609
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !17619
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !17620
  %10 = load i8, i8* %9, align 1, !dbg !17620
  %11 = and i8 %10, 40, !dbg !17621
  %12 = icmp eq i8 %11, 0, !dbg !17621
  call void @llvm.dbg.value(metadata i1 %12, metadata !17604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17622
  br i1 %12, label %13, label %20, !dbg !17623

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !17624
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !17624
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !17624
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !17628
  br i1 %17, label %19, label %18, !dbg !17629

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !17630
  br label %19, !dbg !17632

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.363(%struct.k_thread* noundef nonnull %3) #25, !dbg !17633
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !17634
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !17635
  br label %20, !dbg !17636

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17637
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17639
  br i1 %21, label %23, label %22, !dbg !17640

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17641
  unreachable, !dbg !17641

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !17612
  call void @llvm.dbg.value(metadata i32 %24, metadata !16605, metadata !DIExpression()) #23, !dbg !17614
  call void @llvm.dbg.value(metadata i32 %24, metadata !16599, metadata !DIExpression()) #23, !dbg !17610
  call void @llvm.dbg.value(metadata i32 %24, metadata !17603, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17637
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !17644, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17601, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.value(metadata i32 undef, metadata !17601, metadata !DIExpression()), !dbg !17609
  ret void, !dbg !17645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17648, metadata !DIExpression()), !dbg !17649
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !17650
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !17651
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !17652
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17653
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !17654
  ret void, !dbg !17655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !17656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17660, metadata !DIExpression()), !dbg !17661
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17662
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !17662
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !17662
  br i1 %4, label %5, label %6, !dbg !17665

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.373, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 726) #24, !dbg !17666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 726) #24, !dbg !17666
  unreachable, !dbg !17666

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !17668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17671, metadata !DIExpression()), !dbg !17672
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17673
  %3 = load i8, i8* %2, align 1, !dbg !17674
  %4 = and i8 %3, -3, !dbg !17674
  store i8 %4, i8* %2, align 1, !dbg !17674
  ret void, !dbg !17675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17678, metadata !DIExpression()), !dbg !17679
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !17680
  br i1 %2, label %3, label %7, !dbg !17682

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16787, metadata !DIExpression()) #23, !dbg !17683
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17686
  %5 = load i8, i8* %4, align 1, !dbg !17687
  %6 = and i8 %5, 127, !dbg !17687
  store i8 %6, i8* %4, align 1, !dbg !17687
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16795, metadata !DIExpression()) #23, !dbg !17688
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !17690
  br label %7, !dbg !17691

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17692
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17693
  %10 = zext i1 %9 to i32, !dbg !17693
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !17694
  ret void, !dbg !17695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17696 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17698, metadata !DIExpression()), !dbg !17699
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17700
  %3 = load i8, i8* %2, align 1, !dbg !17701
  %4 = or i8 %3, 2, !dbg !17701
  store i8 %4, i8* %2, align 1, !dbg !17701
  ret void, !dbg !17702
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #21 !dbg !17703 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17705, metadata !DIExpression()), !dbg !17709
  call void @llvm.dbg.value(metadata i32 0, metadata !17706, metadata !DIExpression()), !dbg !17710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17711
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17713, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17715
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17715
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17711
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17716
  br i1 %3, label %5, label %4, !dbg !17717

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17718
  unreachable, !dbg !17718

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17715
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17711
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17719
  call void @llvm.dbg.value(metadata i32 undef, metadata !17708, metadata !DIExpression()), !dbg !17710
  call void @llvm.dbg.value(metadata i32 undef, metadata !17706, metadata !DIExpression()), !dbg !17710
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !17720
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17723
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17723
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17725
  br i1 %6, label %8, label %7, !dbg !17726

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17727
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17727
  unreachable, !dbg !17727

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17713
  call void @llvm.dbg.value(metadata i32 %9, metadata !16605, metadata !DIExpression()) #23, !dbg !17715
  call void @llvm.dbg.value(metadata i32 %9, metadata !16599, metadata !DIExpression()) #23, !dbg !17711
  call void @llvm.dbg.value(metadata i32 %9, metadata !17708, metadata !DIExpression()), !dbg !17710
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17728
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17730, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17706, metadata !DIExpression()), !dbg !17710
  call void @llvm.dbg.value(metadata i32 undef, metadata !17706, metadata !DIExpression()), !dbg !17710
  ret void, !dbg !17731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17732 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17738, metadata !DIExpression()), !dbg !17743
  call void @llvm.dbg.value(metadata i32 %0, metadata !17736, metadata !DIExpression()), !dbg !17743
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17737, metadata !DIExpression()), !dbg !17743
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17744
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !17745
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17746
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17747
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !17748
  call void @llvm.dbg.value(metadata i32 %6, metadata !17739, metadata !DIExpression()), !dbg !17743
  call void @llvm.dbg.value(metadata i32 0, metadata !17740, metadata !DIExpression()), !dbg !17749
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17750
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17752, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17750
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17755
  br i1 %8, label %10, label %9, !dbg !17756

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17757
  unreachable, !dbg !17757

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17750
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17758
  call void @llvm.dbg.value(metadata i32 undef, metadata !17742, metadata !DIExpression()), !dbg !17749
  call void @llvm.dbg.value(metadata i32 undef, metadata !17740, metadata !DIExpression()), !dbg !17749
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17759
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17763
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17764
  br i1 %13, label %14, label %15, !dbg !17765

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17766
  br label %15, !dbg !17768

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17769
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17771
  br i1 %16, label %18, label %17, !dbg !17772

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17773
  unreachable, !dbg !17773

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17752
  call void @llvm.dbg.value(metadata i32 %19, metadata !16605, metadata !DIExpression()) #23, !dbg !17754
  call void @llvm.dbg.value(metadata i32 %19, metadata !16599, metadata !DIExpression()) #23, !dbg !17750
  call void @llvm.dbg.value(metadata i32 %19, metadata !17742, metadata !DIExpression()), !dbg !17749
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17769
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17774
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !17776, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17740, metadata !DIExpression()), !dbg !17749
  call void @llvm.dbg.value(metadata i32 undef, metadata !17740, metadata !DIExpression()), !dbg !17749
  ret i32 %6, !dbg !17777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17778 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17783, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata i64 undef, metadata !17785, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17782, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17784, metadata !DIExpression()), !dbg !17786
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17787
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17788
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17789
  br i1 %6, label %7, label %8, !dbg !17792

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 846) #24, !dbg !17793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 846) #24, !dbg !17793
  unreachable, !dbg !17793

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17795
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17797, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17799
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17799
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17795
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17800
  br i1 %10, label %12, label %11, !dbg !17801

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17802
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17802
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17802
  unreachable, !dbg !17802

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17799
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17795
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17803
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17804
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !17805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17280, metadata !DIExpression()) #23, !dbg !17806
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !17808
  br i1 %14, label %16, label %15, !dbg !17809

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !17810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !17810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !17810
  unreachable, !dbg !17810

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17276, metadata !DIExpression()) #23, !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17280, metadata !DIExpression()) #23, !dbg !17813
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17815
  br i1 %17, label %19, label %18, !dbg !17816

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !17817
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !17817
  unreachable, !dbg !17817

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !17271, metadata !DIExpression()) #23, !dbg !17811
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !17818
  ret i32 %21, !dbg !17819
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17820 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17824, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17825, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.value(metadata i32 0, metadata !17826, metadata !DIExpression()), !dbg !17830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17831
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17833, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17835
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17835
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17831
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17836
  br i1 %3, label %5, label %4, !dbg !17837

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17838
  unreachable, !dbg !17838

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17835
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17831
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !17828, metadata !DIExpression()), !dbg !17830
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17825, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17826, metadata !DIExpression()), !dbg !17830
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !17840
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17825, metadata !DIExpression()), !dbg !17829
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17843
  br i1 %8, label %10, label %9, !dbg !17845

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !17846
  br label %10, !dbg !17848

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17849
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17851
  br i1 %11, label %13, label %12, !dbg !17852

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17853
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17853
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17853
  unreachable, !dbg !17853

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17833
  call void @llvm.dbg.value(metadata i32 %14, metadata !16605, metadata !DIExpression()) #23, !dbg !17835
  call void @llvm.dbg.value(metadata i32 %14, metadata !16599, metadata !DIExpression()) #23, !dbg !17831
  call void @llvm.dbg.value(metadata i32 %14, metadata !17828, metadata !DIExpression()), !dbg !17830
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17849
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17854
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17856, !srcloc !16647
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17825, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17826, metadata !DIExpression()), !dbg !17830
  ret %struct.k_thread* %7, !dbg !17857
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17858 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17860, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17861, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 0, metadata !17862, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17867
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17869, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17867
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17872
  br i1 %3, label %5, label %4, !dbg !17873

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17874
  unreachable, !dbg !17874

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17867
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17864, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17861, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17862, metadata !DIExpression()), !dbg !17866
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !17876
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17861, metadata !DIExpression()), !dbg !17865
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17879
  br i1 %8, label %11, label %9, !dbg !17881

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !17882
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !17884
  br label %11, !dbg !17885

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17886
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17888
  br i1 %12, label %14, label %13, !dbg !17889

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17890
  unreachable, !dbg !17890

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17869
  call void @llvm.dbg.value(metadata i32 %15, metadata !16605, metadata !DIExpression()) #23, !dbg !17871
  call void @llvm.dbg.value(metadata i32 %15, metadata !16599, metadata !DIExpression()) #23, !dbg !17867
  call void @llvm.dbg.value(metadata i32 %15, metadata !17864, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17886
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !17893, !srcloc !16647
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17861, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17862, metadata !DIExpression()), !dbg !17866
  ret %struct.k_thread* %7, !dbg !17894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17897, metadata !DIExpression()), !dbg !17898
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17705, metadata !DIExpression()) #23, !dbg !17899
  call void @llvm.dbg.value(metadata i32 0, metadata !17706, metadata !DIExpression()) #23, !dbg !17901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17902
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17904, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17906
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17906
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17902
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17907
  br i1 %3, label %5, label %4, !dbg !17908

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17909
  unreachable, !dbg !17909

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17906
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17902
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17910
  call void @llvm.dbg.value(metadata i32 undef, metadata !17708, metadata !DIExpression()) #23, !dbg !17901
  call void @llvm.dbg.value(metadata i32 undef, metadata !17706, metadata !DIExpression()) #23, !dbg !17901
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !17911
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17912
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17914
  br i1 %6, label %8, label %7, !dbg !17915

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17916
  unreachable, !dbg !17916

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17904
  call void @llvm.dbg.value(metadata i32 %9, metadata !16605, metadata !DIExpression()) #23, !dbg !17906
  call void @llvm.dbg.value(metadata i32 %9, metadata !16599, metadata !DIExpression()) #23, !dbg !17902
  call void @llvm.dbg.value(metadata i32 %9, metadata !17708, metadata !DIExpression()) #23, !dbg !17901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17912
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17919, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !17706, metadata !DIExpression()) #23, !dbg !17901
  call void @llvm.dbg.value(metadata i32 undef, metadata !17706, metadata !DIExpression()) #23, !dbg !17901
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !17920
  ret void, !dbg !17921
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17922 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17924, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata i32 %1, metadata !17925, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata i8 0, metadata !17926, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata i32 0, metadata !17927, metadata !DIExpression()), !dbg !17931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !17932
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17934, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17936
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !17936
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17932
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17937
  br i1 %4, label %6, label %5, !dbg !17938

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !17939
  unreachable, !dbg !17939

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !17936
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !17932
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17940
  call void @llvm.dbg.value(metadata i32 undef, metadata !17929, metadata !DIExpression()), !dbg !17931
  call void @llvm.dbg.value(metadata i8 poison, metadata !17926, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata i32 undef, metadata !17927, metadata !DIExpression()), !dbg !17931
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !17941
  call void @llvm.dbg.value(metadata i1 %9, metadata !17926, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17930
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17944

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16787, metadata !DIExpression()) #23, !dbg !17945
  %14 = load i8, i8* %7, align 1, !dbg !17951
  %15 = and i8 %14, 127, !dbg !17951
  store i8 %15, i8* %7, align 1, !dbg !17951
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16795, metadata !DIExpression()) #23, !dbg !17952
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !17954
  store i8 %12, i8* %11, align 2, !dbg !17955
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16804, metadata !DIExpression()) #23, !dbg !17956
  %16 = load i8, i8* %7, align 1, !dbg !17958
  %17 = or i8 %16, -128, !dbg !17958
  store i8 %17, i8* %7, align 1, !dbg !17958
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16811, metadata !DIExpression()) #23, !dbg !17959
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16818, metadata !DIExpression()) #23, !dbg !17961
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16824, metadata !DIExpression()) #23, !dbg !17961
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !17963
  br i1 %18, label %19, label %20, !dbg !17964

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !17965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !17965
  unreachable, !dbg !17965

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !17966
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16825, metadata !DIExpression()) #23, !dbg !17961
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17967
  br i1 %22, label %32, label %23, !dbg !17966

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16825, metadata !DIExpression()) #23, !dbg !17961
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17968
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16825, metadata !DIExpression()) #23, !dbg !17961
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !17969
  %27 = icmp sgt i32 %26, 0, !dbg !17970
  br i1 %27, label %28, label %29, !dbg !17971

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !17972
  br label %33, !dbg !17973

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !17967
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16825, metadata !DIExpression()) #23, !dbg !17961
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17967
  br i1 %31, label %32, label %23, !dbg !17966, !llvm.loop !17974

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !17976
  br label %33, !dbg !17977

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !17978
  br label %35, !dbg !17979

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17980
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !17982
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17984
  br i1 %36, label %38, label %37, !dbg !17985

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17986
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !17986
  unreachable, !dbg !17986

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17934
  call void @llvm.dbg.value(metadata i32 %39, metadata !16605, metadata !DIExpression()) #23, !dbg !17936
  call void @llvm.dbg.value(metadata i32 %39, metadata !16599, metadata !DIExpression()) #23, !dbg !17932
  call void @llvm.dbg.value(metadata i32 %39, metadata !17929, metadata !DIExpression()), !dbg !17931
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !17982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !17987
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !17989, !srcloc !16647
  call void @llvm.dbg.value(metadata i8 poison, metadata !17926, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata i32 undef, metadata !17927, metadata !DIExpression()), !dbg !17931
  ret i1 %9, !dbg !17990
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17991 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17995, metadata !DIExpression()), !dbg !17998
  call void @llvm.dbg.value(metadata i32 %1, metadata !17996, metadata !DIExpression()), !dbg !17998
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !17999
  call void @llvm.dbg.value(metadata i1 %3, metadata !17997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17998
  br i1 %3, label %4, label %12, !dbg !18000

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18002
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18003
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18003
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18003
  %9 = load i8, i8* %8, align 1, !dbg !18003
  %10 = icmp eq i8 %9, 0, !dbg !18004
  br i1 %10, label %11, label %12, !dbg !18005

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked.366() #25, !dbg !18006
  br label %12, !dbg !18008

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !18009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !18010 {
  call void @llvm.dbg.value(metadata i32 0, metadata !18012, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !18016
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18018, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18020
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !18020
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18016
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18021
  br i1 %2, label %4, label %3, !dbg !18022

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18023
  unreachable, !dbg !18023

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18020
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18016
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18024
  call void @llvm.dbg.value(metadata i32 undef, metadata !18014, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i32 undef, metadata !18012, metadata !DIExpression()), !dbg !18015
  tail call fastcc void @z_sched_lock() #25, !dbg !18025
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !18028
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18030
  br i1 %5, label %7, label %6, !dbg !18031

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18032
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18032
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18032
  unreachable, !dbg !18032

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !18018
  call void @llvm.dbg.value(metadata i32 %8, metadata !16605, metadata !DIExpression()) #23, !dbg !18020
  call void @llvm.dbg.value(metadata i32 %8, metadata !16599, metadata !DIExpression()) #23, !dbg !18016
  call void @llvm.dbg.value(metadata i32 %8, metadata !18014, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18028
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !18033
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !18035, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !18012, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i32 undef, metadata !18012, metadata !DIExpression()), !dbg !18015
  ret void, !dbg !18036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !18037 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18038, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %1, metadata !17323, metadata !DIExpression()) #23, !dbg !18043
  %2 = icmp eq i32 %1, 0, !dbg !18044
  br i1 %2, label %4, label %3, !dbg !18045

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.384, i32 0, i32 0), i32 noundef 253) #24, !dbg !18046
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18046
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.384, i32 0, i32 0), i32 noundef 253) #24, !dbg !18046
  unreachable, !dbg !18046

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18048
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18048
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18048
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18048
  %9 = load i8, i8* %8, align 1, !dbg !18048
  %10 = icmp eq i8 %9, 1, !dbg !18048
  br i1 %10, label %11, label %12, !dbg !18051

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.384, i32 0, i32 0), i32 noundef 254) #24, !dbg !18052
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.384, i32 0, i32 0), i32 noundef 254) #24, !dbg !18052
  unreachable, !dbg !18052

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !18054
  store i8 %13, i8* %8, align 1, !dbg !18054
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !18055, !srcloc !18057
  ret void, !dbg !18058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !18059 {
  call void @llvm.dbg.value(metadata i32 0, metadata !18061, metadata !DIExpression()), !dbg !18064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !18065
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18067, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18069
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !18069
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18065
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18070
  br i1 %2, label %4, label %3, !dbg !18071

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18072
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18072
  unreachable, !dbg !18072

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18069
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18065
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18073
  call void @llvm.dbg.value(metadata i32 undef, metadata !18063, metadata !DIExpression()), !dbg !18064
  call void @llvm.dbg.value(metadata i32 undef, metadata !18061, metadata !DIExpression()), !dbg !18064
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18074
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18074
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18074
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18074
  %9 = load i8, i8* %8, align 1, !dbg !18074
  %10 = icmp eq i8 %9, 0, !dbg !18074
  br i1 %10, label %11, label %12, !dbg !18079

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 999) #24, !dbg !18080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 999) #24, !dbg !18080
  unreachable, !dbg !18080

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18082, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %13, metadata !17323, metadata !DIExpression()) #23, !dbg !18087
  %14 = icmp eq i32 %13, 0, !dbg !18088
  br i1 %14, label %16, label %15, !dbg !18089

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1000) #24, !dbg !18090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1000) #24, !dbg !18090
  unreachable, !dbg !18090

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18092
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !18093
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !18093
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !18093
  %21 = load i8, i8* %20, align 1, !dbg !18094
  %22 = add i8 %21, 1, !dbg !18094
  store i8 %22, i8* %20, align 1, !dbg !18094
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !18095
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18096
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !18096
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18098
  br i1 %23, label %25, label %24, !dbg !18099

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18100
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18100
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18100
  unreachable, !dbg !18100

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !18067
  call void @llvm.dbg.value(metadata i32 %26, metadata !16605, metadata !DIExpression()) #23, !dbg !18069
  call void @llvm.dbg.value(metadata i32 %26, metadata !16599, metadata !DIExpression()) #23, !dbg !18065
  call void @llvm.dbg.value(metadata i32 %26, metadata !18063, metadata !DIExpression()), !dbg !18064
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18096
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !18101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !18103, !srcloc !16647
  call void @llvm.dbg.value(metadata i32 1, metadata !18061, metadata !DIExpression()), !dbg !18064
  call void @llvm.dbg.value(metadata i32 undef, metadata !18061, metadata !DIExpression()), !dbg !18064
  tail call fastcc void @z_reschedule_unlocked.366() #25, !dbg !18104
  ret void, !dbg !18105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #9 !dbg !18106 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !18107
  ret %struct.k_thread* %1, !dbg !18108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !18109 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !18113, metadata !DIExpression()), !dbg !18118
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !18114, metadata !DIExpression()), !dbg !18118
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !18119
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !18115, metadata !DIExpression()), !dbg !18118
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !18120
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18116, metadata !DIExpression()), !dbg !18118
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !18121
  call void @llvm.dbg.value(metadata i32 %5, metadata !18117, metadata !DIExpression()), !dbg !18118
  %6 = icmp sgt i32 %5, 0, !dbg !18122
  br i1 %6, label %17, label %7, !dbg !18124

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !18125
  br i1 %8, label %17, label %9, !dbg !18127

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !18128
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !18128
  %12 = load i32, i32* %11, align 8, !dbg !18128
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !18130
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !18130
  %15 = load i32, i32* %14, align 8, !dbg !18130
  %16 = icmp ult i32 %12, %15, !dbg !18131
  br label %17, !dbg !18132

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !18133
  ret i1 %18, !dbg !18134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18135 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18152, metadata !DIExpression()), !dbg !18167
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18153, metadata !DIExpression()), !dbg !18167
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !18168
  br i1 %4, label %5, label %6, !dbg !18171

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1179) #24, !dbg !18172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1179) #24, !dbg !18172
  unreachable, !dbg !18172

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18174
  %8 = load i32, i32* %7, align 4, !dbg !18175
  %9 = add nsw i32 %8, 1, !dbg !18175
  store i32 %9, i32* %7, align 4, !dbg !18175
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !18176
  store i32 %8, i32* %10, align 8, !dbg !18177
  %11 = load i32, i32* %7, align 4, !dbg !18178
  %12 = icmp eq i32 %11, 0, !dbg !18179
  br i1 %12, label %13, label %35, !dbg !18180

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !18181
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !18181
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !18155, metadata !DIExpression()), !dbg !18181
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18181
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !18181
  %17 = load i32, i32* %16, align 4, !dbg !18181
  %18 = shl i32 %17, 2, !dbg !18181
  %19 = alloca i8, i32 %18, align 8, !dbg !18181
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !18181
  store i8* %19, i8** %20, align 4, !dbg !18181
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !18181
  %22 = alloca i8, i32 %17, align 8, !dbg !18181
  store i8* %22, i8** %21, align 4, !dbg !18181
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !18181
  store i32 -1, i32* %23, align 4, !dbg !18181
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !18182
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18164, metadata !DIExpression()), !dbg !18183
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18154, metadata !DIExpression()), !dbg !18167
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !18184
  br i1 %25, label %26, label %27, !dbg !18181

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !18184
  br label %35, !dbg !18185

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !18154, metadata !DIExpression()), !dbg !18167
  %29 = load i32, i32* %7, align 4, !dbg !18186
  %30 = add nsw i32 %29, 1, !dbg !18186
  store i32 %30, i32* %7, align 4, !dbg !18186
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !18188
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !18188
  store i32 %29, i32* %32, align 8, !dbg !18189
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !18182
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18164, metadata !DIExpression()), !dbg !18183
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18154, metadata !DIExpression()), !dbg !18167
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !18184
  br i1 %34, label %26, label %27, !dbg !18181, !llvm.loop !18190

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18192
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18193
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !18194
  ret void, !dbg !18195
}

; Function Attrs: optsize
declare !dbg !18196 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !18201 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18204 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18206, metadata !DIExpression()), !dbg !18208
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18207, metadata !DIExpression()), !dbg !18208
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !18209
  br i1 %3, label %4, label %5, !dbg !18212

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1200) #24, !dbg !18213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1200) #24, !dbg !18213
  unreachable, !dbg !18213

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18215
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18216
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !18217
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !18218
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !18218
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !18220
  br i1 %10, label %11, label %13, !dbg !18221

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18222
  store i32 0, i32* %12, align 4, !dbg !18224
  br label %13, !dbg !18225

13:                                               ; preds = %11, %5
  ret void, !dbg !18226
}

; Function Attrs: optsize
declare !dbg !18227 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !18228 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18232, metadata !DIExpression()), !dbg !18235
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18233, metadata !DIExpression()), !dbg !18235
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18236
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !18237
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !18234, metadata !DIExpression()), !dbg !18235
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18233, metadata !DIExpression()), !dbg !18235
  ret %struct.k_thread* %4, !dbg !18238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !18239 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !18243, metadata !DIExpression()), !dbg !18244
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !18245
  ret %struct.rbnode* %2, !dbg !18246
}

; Function Attrs: optsize
declare !dbg !18247 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #22 !dbg !18250 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !18260, metadata !DIExpression()), !dbg !18264
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !18265
  %3 = load i32, i32* %2, align 4, !dbg !18265
  %4 = icmp eq i32 %3, 0, !dbg !18267
  br i1 %4, label %10, label %5, !dbg !18268

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18261, metadata !DIExpression()), !dbg !18264
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !18269, !range !5466
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !18270
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !18262, metadata !DIExpression()), !dbg !18264
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef %7) #25, !dbg !18271
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !18263, metadata !DIExpression()), !dbg !18264
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18261, metadata !DIExpression()), !dbg !18264
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !18264
  ret %struct.k_thread* %11, !dbg !18272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18273 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18277, metadata !DIExpression()), !dbg !18280
  call void @llvm.dbg.value(metadata i32 0, metadata !18278, metadata !DIExpression()), !dbg !18280
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.389(%struct._wait_q_t* noundef %0) #25, !dbg !18281
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18279, metadata !DIExpression()), !dbg !18280
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18282
  br i1 %3, label %8, label %4, !dbg !18283

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !18284
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !18286
  call void @llvm.dbg.value(metadata i32 1, metadata !18278, metadata !DIExpression()), !dbg !18280
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.389(%struct._wait_q_t* noundef %0) #25, !dbg !18281
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18279, metadata !DIExpression()), !dbg !18280
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18282
  br i1 %7, label %8, label %4, !dbg !18283, !llvm.loop !18287

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !18280
  ret i32 %9, !dbg !18289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.389(%struct._wait_q_t* noundef readonly %0) unnamed_addr #9 !dbg !18290 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18292, metadata !DIExpression()), !dbg !18293
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18294
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef %2) #25, !dbg !18295
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !18296
  ret %struct.k_thread* %4, !dbg !18297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !18298 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !18307, metadata !DIExpression()), !dbg !18308
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !18309
  tail call fastcc void @sys_dlist_init.390(%struct._dnode* noundef nonnull %2) #25, !dbg !18310
  ret void, !dbg !18311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.390(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !18312 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18316, metadata !DIExpression()), !dbg !18317
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18318
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18319
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18320
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18321
  ret void, !dbg !18322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !18323 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !18324
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !18325
  ret void, !dbg !18326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !18327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18332, metadata !DIExpression()), !dbg !18333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !18334
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !18334
  %4 = load i8, i8* %3, align 2, !dbg !18334
  %5 = sext i8 %4 to i32, !dbg !18335
  ret i32 %5, !dbg !18336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18341, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 %1, metadata !18342, metadata !DIExpression()), !dbg !18344
  %3 = add i32 %1, 16, !dbg !18345
  %4 = icmp ult i32 %3, 31, !dbg !18345
  br i1 %4, label %6, label %5, !dbg !18345

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.393, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1331) #24, !dbg !18349
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.394, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !18349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1331) #24, !dbg !18349
  unreachable, !dbg !18349

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18351, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %7, metadata !17323, metadata !DIExpression()) #23, !dbg !18356
  %8 = icmp eq i32 %7, 0, !dbg !18357
  br i1 %8, label %10, label %9, !dbg !18358

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1332) #24, !dbg !18359
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18359
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1332) #24, !dbg !18359
  unreachable, !dbg !18359

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18343, metadata !DIExpression()), !dbg !18344
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !18361
  ret void, !dbg !18362
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !18363 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !18364
  br i1 %1, label %8, label %2, !dbg !18365

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !18366
  br i1 %3, label %8, label %4, !dbg !18367

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18368
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !18369
  %7 = xor i1 %6, true, !dbg !18367
  br label %8, !dbg !18367

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !18370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #9 !dbg !18371 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !18372, !range !8132
  %2 = icmp eq i8 %1, 0, !dbg !18372
  ret i1 %2, !dbg !18373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !18374 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18377, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %1, metadata !17323, metadata !DIExpression()) #23, !dbg !18382
  %2 = icmp eq i32 %1, 0, !dbg !18383
  br i1 %2, label %4, label %3, !dbg !18384

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1392) #24, !dbg !18385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1392) #24, !dbg !18385
  unreachable, !dbg !18385

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !18387
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18389, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !18391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18387
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18392
  br i1 %6, label %8, label %7, !dbg !18393

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18394
  unreachable, !dbg !18394

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18387
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18395
  call void @llvm.dbg.value(metadata i32 undef, metadata !18376, metadata !DIExpression()), !dbg !18396
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18397
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16787, metadata !DIExpression()) #23, !dbg !18400
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !18402
  %11 = load i8, i8* %10, align 1, !dbg !18403
  %12 = and i8 %11, 127, !dbg !18403
  store i8 %12, i8* %10, align 1, !dbg !18403
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16795, metadata !DIExpression()) #23, !dbg !18404
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !18406
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18407
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16804, metadata !DIExpression()) #23, !dbg !18408
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !18410
  %15 = load i8, i8* %14, align 1, !dbg !18411
  %16 = or i8 %15, -128, !dbg !18411
  store i8 %16, i8* %14, align 1, !dbg !18411
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16811, metadata !DIExpression()) #23, !dbg !18412
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16818, metadata !DIExpression()) #23, !dbg !18414
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16824, metadata !DIExpression()) #23, !dbg !18414
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !18416
  br i1 %17, label %18, label %19, !dbg !18417

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !18418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 186) #24, !dbg !18418
  unreachable, !dbg !18418

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !18419
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16825, metadata !DIExpression()) #23, !dbg !18414
  %21 = icmp eq %struct._dnode* %20, null, !dbg !18420
  br i1 %21, label %32, label %22, !dbg !18419

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16825, metadata !DIExpression()) #23, !dbg !18414
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !18421
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16825, metadata !DIExpression()) #23, !dbg !18414
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !18422
  %26 = icmp sgt i32 %25, 0, !dbg !18423
  br i1 %26, label %27, label %29, !dbg !18424

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18425
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !18426
  br label %34, !dbg !18427

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !18420
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16825, metadata !DIExpression()) #23, !dbg !18414
  %31 = icmp eq %struct._dnode* %30, null, !dbg !18420
  br i1 %31, label %32, label %22, !dbg !18419, !llvm.loop !18428

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18430
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !18431
  br label %34, !dbg !18432

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !18433
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !18434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17276, metadata !DIExpression()) #23, !dbg !18434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17280, metadata !DIExpression()) #23, !dbg !18436
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18438
  br i1 %35, label %37, label %36, !dbg !18439

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18440
  unreachable, !dbg !18440

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !18389
  call void @llvm.dbg.value(metadata i32 %38, metadata !16605, metadata !DIExpression()) #23, !dbg !18391
  call void @llvm.dbg.value(metadata i32 %38, metadata !16599, metadata !DIExpression()) #23, !dbg !18387
  call void @llvm.dbg.value(metadata i32 %38, metadata !18376, metadata !DIExpression()), !dbg !18396
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !18434
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !18441
  ret void, !dbg !18442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !18443 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18447, metadata !DIExpression()), !dbg !18450
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18451, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %3, metadata !17323, metadata !DIExpression()) #23, !dbg !18456
  %4 = icmp eq i32 %3, 0, !dbg !18457
  br i1 %4, label %6, label %5, !dbg !18458

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1463) #24, !dbg !18459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1463) #24, !dbg !18459
  unreachable, !dbg !18459

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !18461
  br i1 %7, label %8, label %10, !dbg !18463

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18464
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !18466
  br label %15, !dbg !18467

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !18448, metadata !DIExpression()), !dbg !18450
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !18468
  %12 = sext i32 %11 to i64, !dbg !18468
  call void @llvm.dbg.value(metadata i64 %12, metadata !18448, metadata !DIExpression()), !dbg !18450
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !18469
  %14 = trunc i64 %13 to i32, !dbg !18469
  call void @llvm.dbg.value(metadata i32 %14, metadata !18449, metadata !DIExpression()), !dbg !18450
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !18450
  ret i32 %16, !dbg !18470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18475, metadata !DIExpression()), !dbg !18476
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !18477, !srcloc !18479
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !18480
  ret void, !dbg !18481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !18482 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18486, metadata !DIExpression()), !dbg !18490
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18491, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %2, metadata !17323, metadata !DIExpression()) #23, !dbg !18496
  %3 = icmp eq i32 %2, 0, !dbg !18497
  br i1 %3, label %5, label %4, !dbg !18498

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1420) #24, !dbg !18499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1420) #24, !dbg !18499
  unreachable, !dbg !18499

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !18501
  br i1 %6, label %7, label %8, !dbg !18503

7:                                                ; preds = %5
  tail call fastcc void @k_yield.399() #25, !dbg !18504
  br label %43, !dbg !18506

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !18488, metadata !DIExpression()), !dbg !18490
  %9 = icmp sgt i64 %0, -3, !dbg !18507
  br i1 %9, label %10, label %14, !dbg !18509

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !18510
  %12 = trunc i64 %0 to i32, !dbg !18512
  %13 = add i32 %11, %12, !dbg !18512
  call void @llvm.dbg.value(metadata i32 %13, metadata !18487, metadata !DIExpression()), !dbg !18490
  br label %17, !dbg !18513

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !18514
  %16 = sub i32 -2, %15, !dbg !18514
  call void @llvm.dbg.value(metadata i32 %16, metadata !18487, metadata !DIExpression()), !dbg !18490
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !18516
  call void @llvm.dbg.value(metadata i32 %18, metadata !18487, metadata !DIExpression()), !dbg !18490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !18517
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18519, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18521
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !18521
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18517
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18522
  br i1 %20, label %22, label %21, !dbg !18523

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18524
  unreachable, !dbg !18524

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18521
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18517
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18525
  call void @llvm.dbg.value(metadata i32 undef, metadata !18489, metadata !DIExpression()), !dbg !18490
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18526
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !18527
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !18528
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18529
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !18530
  tail call fastcc void @z_add_thread_timeout.370(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !18530
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18531
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !18532
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !18533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17276, metadata !DIExpression()) #23, !dbg !18533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17280, metadata !DIExpression()) #23, !dbg !18535
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18537
  br i1 %27, label %29, label %28, !dbg !18538

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18539
  unreachable, !dbg !18539

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !18519
  call void @llvm.dbg.value(metadata i32 %30, metadata !16605, metadata !DIExpression()) #23, !dbg !18521
  call void @llvm.dbg.value(metadata i32 %30, metadata !16599, metadata !DIExpression()) #23, !dbg !18517
  call void @llvm.dbg.value(metadata i32 %30, metadata !18489, metadata !DIExpression()), !dbg !18490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !18533
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !18540
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18541
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !18541
  br i1 %33, label %34, label %35, !dbg !18544

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1448) #24, !dbg !18545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.354, i32 0, i32 0)) #24, !dbg !18545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1448) #24, !dbg !18545
  unreachable, !dbg !18545

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !18547
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !18548
  %38 = zext i32 %37 to i64, !dbg !18548
  %39 = sub nsw i64 %36, %38, !dbg !18549
  call void @llvm.dbg.value(metadata i64 %39, metadata !18486, metadata !DIExpression()), !dbg !18490
  %40 = icmp sgt i64 %39, 0, !dbg !18550
  %41 = select i1 %40, i64 %39, i64 0, !dbg !18550
  %42 = trunc i64 %41 to i32, !dbg !18550
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !18490
  ret i32 %44, !dbg !18551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !18552 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18554, metadata !DIExpression()), !dbg !18555
  call void @llvm.dbg.value(metadata i64 %0, metadata !16655, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.value(metadata i32 10000, metadata !16658, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.value(metadata i32 1000, metadata !16659, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.value(metadata i8 1, metadata !16660, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.value(metadata i1 false, metadata !16661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18556
  call void @llvm.dbg.value(metadata i1 false, metadata !16662, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18556
  call void @llvm.dbg.value(metadata i8 0, metadata !16663, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.value(metadata i1 false, metadata !16664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18556
  call void @llvm.dbg.value(metadata i1 true, metadata !16665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18556
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.value(metadata i64 %0, metadata !16655, metadata !DIExpression()), !dbg !18556
  %2 = udiv i64 %0, 10, !dbg !18558
  ret i64 %2, !dbg !18562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.399() unnamed_addr #1 !dbg !18563 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !18564, !srcloc !18566
  tail call void @z_impl_k_yield() #25, !dbg !18567
  ret void, !dbg !18568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !18569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18573, metadata !DIExpression()), !dbg !18575
  %2 = sext i32 %0 to i64, !dbg !18576
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !18577
  call void @llvm.dbg.value(metadata i64 %3, metadata !18574, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18575
  %4 = shl i64 %3, 32, !dbg !18578
  %5 = ashr exact i64 %4, 32, !dbg !18578
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !18579
  call void @llvm.dbg.value(metadata i32 %6, metadata !18574, metadata !DIExpression()), !dbg !18575
  %7 = sext i32 %6 to i64, !dbg !18580
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !18581
  %9 = trunc i64 %8 to i32, !dbg !18581
  ret i32 %9, !dbg !18582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !18583 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18585, metadata !DIExpression()), !dbg !18586
  call void @llvm.dbg.value(metadata i64 %0, metadata !16655, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16658, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata i32 10000, metadata !16659, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata i8 1, metadata !16660, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata i1 false, metadata !16661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18587
  call void @llvm.dbg.value(metadata i1 true, metadata !16662, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18587
  call void @llvm.dbg.value(metadata i8 0, metadata !16663, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata i1 false, metadata !16664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18587
  call void @llvm.dbg.value(metadata i1 true, metadata !16665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18587
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !18587
  %2 = add i64 %0, 99, !dbg !18589
  call void @llvm.dbg.value(metadata i64 %2, metadata !16655, metadata !DIExpression()), !dbg !18587
  %3 = udiv i64 %2, 100, !dbg !18590
  ret i64 %3, !dbg !18591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !18592 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18594, metadata !DIExpression()), !dbg !18595
  call void @llvm.dbg.value(metadata i64 %0, metadata !16655, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i32 10000, metadata !16658, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16659, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i8 1, metadata !16660, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i1 false, metadata !16661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18596
  call void @llvm.dbg.value(metadata i1 false, metadata !16662, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18596
  call void @llvm.dbg.value(metadata i8 0, metadata !16663, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i1 true, metadata !16664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18596
  call void @llvm.dbg.value(metadata i1 false, metadata !16665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18596
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !18596
  %2 = mul i64 %0, 100, !dbg !18598
  ret i64 %2, !dbg !18600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18603, metadata !DIExpression()), !dbg !18604
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !18605
  br i1 %2, label %14, label %3, !dbg !18607

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !18608
  %5 = icmp slt i32 %4, 0, !dbg !18610
  br i1 %5, label %6, label %10, !dbg !18611

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18612
  %8 = load i8, i8* %7, align 1, !dbg !18612
  %9 = icmp eq i8 %8, 16, !dbg !18615
  br i1 %9, label %10, label %14, !dbg !18616

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !18617
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !18618
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18619, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %11, metadata !17323, metadata !DIExpression()) #23, !dbg !18623
  %12 = icmp eq i32 %11, 0, !dbg !18624
  br i1 %12, label %13, label %14, !dbg !18625

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked.366() #25, !dbg !18626
  br label %14, !dbg !18628

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !18629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #9 !dbg !18630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18632, metadata !DIExpression()), !dbg !18633
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18634
  %3 = load i8, i8* %2, align 1, !dbg !18634
  %4 = and i8 %3, 2, !dbg !18635
  %5 = icmp ne i8 %4, 0, !dbg !18636
  ret i1 %5, !dbg !18637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #9 !dbg !18638 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18643
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18642, metadata !DIExpression()), !dbg !18644
  ret %struct.k_thread* %1, !dbg !18645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !18646 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18649, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %1, metadata !17323, metadata !DIExpression()) #23, !dbg !18652
  %2 = icmp eq i32 %1, 0, !dbg !18653
  br i1 %2, label %3, label %8, !dbg !18654

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18655
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !18656
  %6 = icmp ne i32 %5, 0, !dbg !18654
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !18657
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18660, metadata !DIExpression()), !dbg !18662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !18663
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18665, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18667
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !18667
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18663
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18668
  br i1 %3, label %5, label %4, !dbg !18669

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18670
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18670
  unreachable, !dbg !18670

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18665
  call void @llvm.dbg.value(metadata i32 %6, metadata !16605, metadata !DIExpression()) #23, !dbg !18667
  call void @llvm.dbg.value(metadata i32 %6, metadata !16599, metadata !DIExpression()) #23, !dbg !18663
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18671
  call void @llvm.dbg.value(metadata i32 %6, metadata !18661, metadata !DIExpression()), !dbg !18662
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !18672
  %8 = load i8, i8* %7, align 4, !dbg !18672
  %9 = and i8 %8, 1, !dbg !18674
  %10 = icmp eq i8 %9, 0, !dbg !18675
  br i1 %10, label %15, label %11, !dbg !18676

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !18677
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18680
  br i1 %12, label %14, label %13, !dbg !18681

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18682
  unreachable, !dbg !18682

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !16627, metadata !DIExpression()) #23, !dbg !18677
  call void @llvm.dbg.value(metadata i32 %6, metadata !16641, metadata !DIExpression()) #23, !dbg !18683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !18685, !srcloc !16647
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.405, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1731) #24, !dbg !18686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.406, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !18686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1731) #24, !dbg !18686
  unreachable, !dbg !18686

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18690
  %17 = load i8, i8* %16, align 1, !dbg !18690
  %18 = and i8 %17, 8, !dbg !18692
  %19 = icmp eq i8 %18, 0, !dbg !18693
  br i1 %19, label %24, label %20, !dbg !18694

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !18695
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18698
  br i1 %21, label %23, label %22, !dbg !18699

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18700
  unreachable, !dbg !18700

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !16627, metadata !DIExpression()) #23, !dbg !18695
  call void @llvm.dbg.value(metadata i32 %6, metadata !16641, metadata !DIExpression()) #23, !dbg !18701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !18703, !srcloc !16647
  br label %39, !dbg !18704

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !18705
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18706
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !18708
  br i1 %26, label %27, label %35, !dbg !18709

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18710, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %28, metadata !17323, metadata !DIExpression()) #23, !dbg !18713
  %29 = icmp eq i32 %28, 0, !dbg !18714
  br i1 %29, label %30, label %35, !dbg !18715

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !18716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17276, metadata !DIExpression()) #23, !dbg !18716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17280, metadata !DIExpression()) #23, !dbg !18719
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18721
  br i1 %31, label %33, label %32, !dbg !18722

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18723
  unreachable, !dbg !18723

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !17271, metadata !DIExpression()) #23, !dbg !18716
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !18724
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.405, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1778) #24, !dbg !18725
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.407, i32 0, i32 0)) #24, !dbg !18725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1778) #24, !dbg !18725
  unreachable, !dbg !18725

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !18729
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18731
  br i1 %36, label %38, label %37, !dbg !18732

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18733
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18733
  unreachable, !dbg !18733

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !16627, metadata !DIExpression()) #23, !dbg !18729
  call void @llvm.dbg.value(metadata i32 %6, metadata !16641, metadata !DIExpression()) #23, !dbg !18734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !18736, !srcloc !16647
  br label %39, !dbg !18737

39:                                               ; preds = %38, %23
  ret void, !dbg !18737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18740, metadata !DIExpression()), !dbg !18741
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18742
  %3 = load i8, i8* %2, align 1, !dbg !18742
  %4 = and i8 %3, 8, !dbg !18744
  %5 = icmp eq i8 %4, 0, !dbg !18745
  br i1 %5, label %6, label %20, !dbg !18746

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18747
  %8 = or i8 %7, 8, !dbg !18747
  store i8 %8, i8* %2, align 1, !dbg !18747
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !18749
  br i1 %9, label %10, label %12, !dbg !18751

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16787, metadata !DIExpression()) #23, !dbg !18752
  %11 = and i8 %8, 95, !dbg !18755
  store i8 %11, i8* %2, align 1, !dbg !18755
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16795, metadata !DIExpression()) #23, !dbg !18756
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !18758
  br label %12, !dbg !18759

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18760
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !18760
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !18762
  br i1 %15, label %17, label %16, !dbg !18763

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !18764
  br label %17, !dbg !18766

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !18767
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18768
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #25, !dbg !18769
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !18770
  br label %20, !dbg !18771

20:                                               ; preds = %17, %1
  ret void, !dbg !18772
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !18773 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18777, metadata !DIExpression()), !dbg !18779
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.389(%struct._wait_q_t* noundef %0) #25, !dbg !18780
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18778, metadata !DIExpression()), !dbg !18779
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18781
  br i1 %3, label %10, label %4, !dbg !18782

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !18783
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !18785
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18786, metadata !DIExpression()), !dbg !18792
  call void @llvm.dbg.value(metadata i32 0, metadata !18791, metadata !DIExpression()), !dbg !18792
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18794
  store i32 0, i32* %7, align 4, !dbg !18795
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !18796
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.389(%struct._wait_q_t* noundef %0) #25, !dbg !18780
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18778, metadata !DIExpression()), !dbg !18779
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18781
  br i1 %9, label %10, label %4, !dbg !18782, !llvm.loop !18797

10:                                               ; preds = %4, %1
  ret void, !dbg !18799
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18800 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18805, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18804, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !18809
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18811, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !18813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18809
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18814
  br i1 %4, label %6, label %5, !dbg !18815

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18816
  unreachable, !dbg !18816

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18811
  call void @llvm.dbg.value(metadata i32 %7, metadata !16605, metadata !DIExpression()) #23, !dbg !18813
  call void @llvm.dbg.value(metadata i32 %7, metadata !16599, metadata !DIExpression()) #23, !dbg !18809
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18817
  call void @llvm.dbg.value(metadata i32 %7, metadata !18806, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.value(metadata i32 0, metadata !18807, metadata !DIExpression()), !dbg !18808
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18818
  %9 = load i8, i8* %8, align 1, !dbg !18818
  %10 = and i8 %9, 8, !dbg !18820
  %11 = icmp eq i8 %10, 0, !dbg !18821
  br i1 %11, label %12, label %35, !dbg !18822

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18805, metadata !DIExpression()), !dbg !18808
  %14 = icmp eq i64 %13, 0, !dbg !18823
  br i1 %14, label %35, label %15, !dbg !18825

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18826
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18828
  br i1 %17, label %35, label %18, !dbg !18829

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18830
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !18830
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18831
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !18832
  br i1 %22, label %35, label %23, !dbg !18833

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18834, !srcloc !17327
  call void @llvm.dbg.value(metadata i32 %24, metadata !17323, metadata !DIExpression()) #23, !dbg !18840
  %25 = icmp eq i32 %24, 0, !dbg !18841
  br i1 %25, label %27, label %26, !dbg !18842

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1809) #24, !dbg !18843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.408, i32 0, i32 0)) #24, !dbg !18843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.351, i32 0, i32 0), i32 noundef 1809) #24, !dbg !18843
  unreachable, !dbg !18843

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18845
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18846
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #25, !dbg !18847
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18848
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !18849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()) #23, !dbg !18850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17276, metadata !DIExpression()) #23, !dbg !18850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17280, metadata !DIExpression()) #23, !dbg !18852
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18854
  br i1 %31, label %33, label %32, !dbg !18855

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 225) #24, !dbg !18856
  unreachable, !dbg !18856

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !17271, metadata !DIExpression()) #23, !dbg !18850
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !18857
  call void @llvm.dbg.value(metadata i32 %34, metadata !18807, metadata !DIExpression()), !dbg !18808
  br label %40, !dbg !18858

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18859
  call void @llvm.dbg.value(metadata i32 %36, metadata !18807, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !18860
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18862
  br i1 %37, label %39, label %38, !dbg !18863

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18864
  unreachable, !dbg !18864

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !16627, metadata !DIExpression()) #23, !dbg !18860
  call void @llvm.dbg.value(metadata i32 %7, metadata !16641, metadata !DIExpression()) #23, !dbg !18865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !18867, !srcloc !16647
  br label %40, !dbg !18868

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18808
  ret i32 %41, !dbg !18869
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18870 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18874, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i32 %1, metadata !18875, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i8* %2, metadata !18876, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i8 0, metadata !18878, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i32 0, metadata !18879, metadata !DIExpression()), !dbg !18883
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16593, metadata !DIExpression()) #23, !dbg !18884
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18886, !srcloc !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18888
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()) #23, !dbg !18888
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18884
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18889
  br i1 %5, label %7, label %6, !dbg !18890

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18891
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18891
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 148) #24, !dbg !18891
  unreachable, !dbg !18891

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #23, !dbg !18888
  call void @llvm.dbg.value(metadata i32 undef, metadata !16599, metadata !DIExpression()) #23, !dbg !18884
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18892
  call void @llvm.dbg.value(metadata i32 undef, metadata !18881, metadata !DIExpression()), !dbg !18883
  call void @llvm.dbg.value(metadata i8 poison, metadata !18878, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i32 undef, metadata !18879, metadata !DIExpression()), !dbg !18883
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !18893
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18877, metadata !DIExpression()), !dbg !18882
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18896
  br i1 %10, label %15, label %11, !dbg !18898

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18899, metadata !DIExpression()), !dbg !18906
  call void @llvm.dbg.value(metadata i32 %1, metadata !18904, metadata !DIExpression()), !dbg !18906
  call void @llvm.dbg.value(metadata i8* %2, metadata !18905, metadata !DIExpression()), !dbg !18906
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18786, metadata !DIExpression()), !dbg !18909
  call void @llvm.dbg.value(metadata i32 %1, metadata !18791, metadata !DIExpression()), !dbg !18909
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18911
  store i32 %1, i32* %12, align 4, !dbg !18912
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18913
  store i8* %2, i8** %13, align 4, !dbg !18914
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !18915
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !18916
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !18917
  call void @llvm.dbg.value(metadata i8 1, metadata !18878, metadata !DIExpression()), !dbg !18882
  br label %15, !dbg !18918

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18878, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16632, metadata !DIExpression()) #23, !dbg !18919
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18921
  br i1 %16, label %18, label %17, !dbg !18922

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !18923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.346, i32 0, i32 0), i32 noundef 194) #24, !dbg !18923
  unreachable, !dbg !18923

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18882
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18886
  call void @llvm.dbg.value(metadata i32 %20, metadata !16605, metadata !DIExpression()) #23, !dbg !18888
  call void @llvm.dbg.value(metadata i32 %20, metadata !16599, metadata !DIExpression()) #23, !dbg !18884
  call void @llvm.dbg.value(metadata i32 %20, metadata !18881, metadata !DIExpression()), !dbg !18883
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #23, !dbg !18919
  call void @llvm.dbg.value(metadata i32 undef, metadata !16641, metadata !DIExpression()) #23, !dbg !18924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !18926, !srcloc !16647
  call void @llvm.dbg.value(metadata i8 poison, metadata !18878, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i32 undef, metadata !18879, metadata !DIExpression()), !dbg !18883
  ret i1 %19, !dbg !18927
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18928 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18934, metadata !DIExpression()), !dbg !18939
  call void @llvm.dbg.value(metadata i64 undef, metadata !18936, metadata !DIExpression()), !dbg !18939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18933, metadata !DIExpression()), !dbg !18939
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !18935, metadata !DIExpression()), !dbg !18939
  call void @llvm.dbg.value(metadata i8** %4, metadata !18937, metadata !DIExpression()), !dbg !18939
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !18940
  call void @llvm.dbg.value(metadata i32 %6, metadata !18938, metadata !DIExpression()), !dbg !18939
  %7 = icmp eq i8** %4, null, !dbg !18941
  br i1 %7, label %12, label %8, !dbg !18943

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18944
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18946
  %11 = load i8*, i8** %10, align 4, !dbg !18946
  store i8* %11, i8** %4, align 4, !dbg !18947
  br label %12, !dbg !18948

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18950 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !18952
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !18953
  ret void, !dbg !18954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18955 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18965, metadata !DIExpression()), !dbg !18982
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18963, metadata !DIExpression()), !dbg !18982
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18964, metadata !DIExpression()), !dbg !18982
  %5 = icmp eq i64 %4, -1, !dbg !18983
  br i1 %5, label %63, label %6, !dbg !18985

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18986
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.417(%struct._dnode* noundef %7) #25, !dbg !18986
  br i1 %8, label %9, label %10, !dbg !18989

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 99) #24, !dbg !18990
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.421, i32 0, i32 0)) #24, !dbg !18990
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 99) #24, !dbg !18990
  unreachable, !dbg !18990

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18992
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18993
  call void @llvm.dbg.value(metadata i32 0, metadata !18966, metadata !DIExpression()), !dbg !18994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19002
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19004, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19011
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19011
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19002
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19012
  br i1 %13, label %15, label %14, !dbg !19015

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19016
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19016
  unreachable, !dbg !19016

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !19004
  call void @llvm.dbg.value(metadata i32 %16, metadata !19007, metadata !DIExpression()) #23, !dbg !19011
  call void @llvm.dbg.value(metadata i32 %16, metadata !19001, metadata !DIExpression()) #23, !dbg !19002
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19018
  call void @llvm.dbg.value(metadata i32 %16, metadata !18972, metadata !DIExpression()), !dbg !18994
  call void @llvm.dbg.value(metadata i32 undef, metadata !18966, metadata !DIExpression()), !dbg !18994
  %17 = icmp slt i64 %4, -1, !dbg !19019
  br i1 %17, label %18, label %24, !dbg !19020

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !19021
  %20 = add i64 %4, %19, !dbg !19022
  %21 = sub i64 -2, %20, !dbg !19022
  call void @llvm.dbg.value(metadata i64 %21, metadata !18976, metadata !DIExpression()), !dbg !19023
  %22 = icmp sgt i64 %21, 1, !dbg !19024
  %23 = select i1 %22, i64 %21, i64 1, !dbg !19024
  br label %29, !dbg !19025

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !19026
  %26 = tail call fastcc i32 @elapsed.425() #25, !dbg !19028
  %27 = sext i32 %26 to i64, !dbg !19028
  %28 = add nsw i64 %25, %27, !dbg !19029
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !19030
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19031
  store i64 %30, i64* %31, align 8, !dbg !19032
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !19033
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18973, metadata !DIExpression()), !dbg !19035
  %33 = icmp eq %struct._timeout* %32, null, !dbg !19036
  br i1 %33, label %48, label %34, !dbg !19036

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !19037
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18973, metadata !DIExpression()), !dbg !19035
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !19041
  %38 = load i64, i64* %37, align 8, !dbg !19041
  %39 = icmp slt i64 %35, %38, !dbg !19042
  br i1 %39, label %40, label %44, !dbg !19043

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !19041
  %42 = sub nsw i64 %38, %35, !dbg !19044
  store i64 %42, i64* %41, align 8, !dbg !19044
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !19046
  tail call fastcc void @sys_dlist_insert.426(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !19047
  br label %49, !dbg !19048

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !19049
  store i64 %45, i64* %31, align 8, !dbg !19049
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !19050
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18973, metadata !DIExpression()), !dbg !19035
  %47 = icmp eq %struct._timeout* %46, null, !dbg !19036
  br i1 %47, label %48, label %34, !dbg !19036, !llvm.loop !19051

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.427(%struct._dnode* noundef nonnull %7) #25, !dbg !19053
  br label %49, !dbg !19056

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !19057
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !19058
  br i1 %51, label %52, label %59, !dbg !19059

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !19060
  call void @llvm.dbg.value(metadata i32 %53, metadata !18979, metadata !DIExpression()), !dbg !19061
  %54 = icmp ne i32 %53, 0, !dbg !19062
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !19064
  br i1 %57, label %59, label %58, !dbg !19064

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !19065
  br label %59, !dbg !19067

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19074
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19076
  br i1 %60, label %62, label %61, !dbg !19079

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19080
  unreachable, !dbg !19080

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !19068, metadata !DIExpression()) #23, !dbg !19074
  call void @llvm.dbg.value(metadata i32 %16, metadata !19082, metadata !DIExpression()) #23, !dbg !19085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !19087, !srcloc !19088
  call void @llvm.dbg.value(metadata i32 undef, metadata !18966, metadata !DIExpression()), !dbg !18994
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !19089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.417(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #9 !dbg !19090 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19096, metadata !DIExpression()), !dbg !19097
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19098
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19098
  %4 = icmp ne %struct._dnode* %3, null, !dbg !19099
  ret i1 %4, !dbg !19100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.425() unnamed_addr #1 !dbg !19101 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !19104
  %2 = icmp eq i32 %1, 0, !dbg !19105
  br i1 %2, label %3, label %5, !dbg !19104

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !19106
  br label %5, !dbg !19104

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !19104
  ret i32 %6, !dbg !19107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #9 !dbg !19108 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.432() #25, !dbg !19114
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19112, metadata !DIExpression()), !dbg !19115
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !19116
  ret %struct._timeout* %2, !dbg !19117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.426(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !19118 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19122, metadata !DIExpression()), !dbg !19126
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19123, metadata !DIExpression()), !dbg !19126
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19127
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !19127
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !19124, metadata !DIExpression()), !dbg !19126
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !19128
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !19129
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !19130
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !19131
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !19132
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !19133
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !19134
  ret void, !dbg !19135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #9 !dbg !19136 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19140, metadata !DIExpression()), !dbg !19142
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19143
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.430(%struct._dnode* noundef %2) #25, !dbg !19144
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19141, metadata !DIExpression()), !dbg !19142
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !19145
  ret %struct._timeout* %4, !dbg !19146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.427(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !19147 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19152, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19153, metadata !DIExpression()), !dbg !19155
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19156
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !19154, metadata !DIExpression()), !dbg !19155
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19157
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !19158
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19159
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !19160
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !19161
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !19162
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19163
  ret void, !dbg !19164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !19165 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !19170
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !19167, metadata !DIExpression()), !dbg !19171
  %2 = tail call fastcc i32 @elapsed.425() #25, !dbg !19172
  call void @llvm.dbg.value(metadata i32 %2, metadata !19168, metadata !DIExpression()), !dbg !19171
  %3 = icmp eq %struct._timeout* %1, null, !dbg !19173
  br i1 %3, label %14, label %4, !dbg !19175

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !19176
  %6 = load i64, i64* %5, align 8, !dbg !19176
  %7 = sext i32 %2 to i64, !dbg !19177
  %8 = sub nsw i64 %6, %7, !dbg !19178
  %9 = icmp sgt i64 %8, 2147483647, !dbg !19179
  br i1 %9, label %14, label %10, !dbg !19180

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !19181
  %12 = select i1 %11, i64 %8, i64 0, !dbg !19181
  %13 = trunc i64 %12 to i32, !dbg !19181
  call void @llvm.dbg.value(metadata i32 %13, metadata !19169, metadata !DIExpression()), !dbg !19171
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !19183
  call void @llvm.dbg.value(metadata i32 %15, metadata !19169, metadata !DIExpression()), !dbg !19171
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !19184
  %17 = icmp ne i32 %16, 0, !dbg !19186
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !19187
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !19187
  call void @llvm.dbg.value(metadata i32 %20, metadata !19169, metadata !DIExpression()), !dbg !19171
  ret i32 %20, !dbg !19188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.430(%struct._dnode* noundef readonly %0) unnamed_addr #9 !dbg !19189 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19193, metadata !DIExpression()), !dbg !19195
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19194, metadata !DIExpression()), !dbg !19195
  %2 = icmp eq %struct._dnode* %0, null, !dbg !19196
  br i1 %2, label %5, label %3, !dbg !19197

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.431(%struct._dnode* noundef nonnull %0) #25, !dbg !19198
  br label %5, !dbg !19197

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !19197
  ret %struct._dnode* %6, !dbg !19199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.431(%struct._dnode* noundef readonly %0) unnamed_addr #9 !dbg !19200 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19202, metadata !DIExpression()), !dbg !19204
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19203, metadata !DIExpression()), !dbg !19204
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19205
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !19206
  br i1 %3, label %7, label %4, !dbg !19207

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19208
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !19208
  br label %7, !dbg !19207

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !19207
  ret %struct._dnode* %8, !dbg !19209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.432() unnamed_addr #9 !dbg !19210 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19214, metadata !DIExpression()), !dbg !19215
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.433() #25, !dbg !19216
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !19216
  ret %struct._dnode* %3, !dbg !19217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.433() unnamed_addr #9 !dbg !19218 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19222, metadata !DIExpression()), !dbg !19223
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !19224
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !19225
  ret i1 %2, !dbg !19226
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19227 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19231, metadata !DIExpression()), !dbg !19236
  call void @llvm.dbg.value(metadata i32 -22, metadata !19232, metadata !DIExpression()), !dbg !19236
  call void @llvm.dbg.value(metadata i32 0, metadata !19233, metadata !DIExpression()), !dbg !19237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19238
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19240, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19242
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19242
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19238
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19243
  br i1 %3, label %5, label %4, !dbg !19244

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19245
  unreachable, !dbg !19245

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19242
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19238
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19246
  call void @llvm.dbg.value(metadata i32 undef, metadata !19235, metadata !DIExpression()), !dbg !19237
  call void @llvm.dbg.value(metadata i32 -22, metadata !19232, metadata !DIExpression()), !dbg !19236
  call void @llvm.dbg.value(metadata i32 undef, metadata !19233, metadata !DIExpression()), !dbg !19237
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !19232, metadata !DIExpression()), !dbg !19236
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.417(%struct._dnode* noundef %6) #25, !dbg !19247
  br i1 %7, label %8, label %9, !dbg !19251

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !19252
  call void @llvm.dbg.value(metadata i32 0, metadata !19232, metadata !DIExpression()), !dbg !19236
  br label %9, !dbg !19254

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !19236
  call void @llvm.dbg.value(metadata i32 %10, metadata !19232, metadata !DIExpression()), !dbg !19236
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19255
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19255
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19257
  br i1 %11, label %13, label %12, !dbg !19258

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19259
  unreachable, !dbg !19259

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !19240
  call void @llvm.dbg.value(metadata i32 %14, metadata !19007, metadata !DIExpression()) #23, !dbg !19242
  call void @llvm.dbg.value(metadata i32 %14, metadata !19001, metadata !DIExpression()) #23, !dbg !19238
  call void @llvm.dbg.value(metadata i32 %14, metadata !19235, metadata !DIExpression()), !dbg !19237
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19255
  call void @llvm.dbg.value(metadata i32 undef, metadata !19082, metadata !DIExpression()) #23, !dbg !19260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !19262, !srcloc !19088
  call void @llvm.dbg.value(metadata i32 %10, metadata !19232, metadata !DIExpression()), !dbg !19236
  call void @llvm.dbg.value(metadata i32 undef, metadata !19233, metadata !DIExpression()), !dbg !19237
  ret i32 %10, !dbg !19263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !19264 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19266, metadata !DIExpression()), !dbg !19267
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !19268
  %3 = icmp eq %struct._timeout* %2, null, !dbg !19270
  br i1 %3, label %10, label %4, !dbg !19271

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19272
  %6 = load i64, i64* %5, align 8, !dbg !19272
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !19274
  %8 = load i64, i64* %7, align 8, !dbg !19275
  %9 = add nsw i64 %8, %6, !dbg !19275
  store i64 %9, i64* %7, align 8, !dbg !19275
  br label %10, !dbg !19276

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19277
  tail call fastcc void @sys_dlist_remove.436(%struct._dnode* noundef %11) #25, !dbg !19278
  ret void, !dbg !19279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.436(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !19280 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19284, metadata !DIExpression()), !dbg !19287
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19288
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19288
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19285, metadata !DIExpression()), !dbg !19287
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19289
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !19289
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !19286, metadata !DIExpression()), !dbg !19287
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !19290
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !19291
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !19292
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !19293
  tail call fastcc void @sys_dnode_init.437(%struct._dnode* noundef %0) #25, !dbg !19294
  ret void, !dbg !19295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.437(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !19296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19298, metadata !DIExpression()), !dbg !19299
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19300
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !19301
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19302
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !19303
  ret void, !dbg !19304
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19305 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19311, metadata !DIExpression()), !dbg !19316
  call void @llvm.dbg.value(metadata i64 0, metadata !19312, metadata !DIExpression()), !dbg !19316
  call void @llvm.dbg.value(metadata i32 0, metadata !19313, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19318
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19320, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19322
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19322
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19318
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19323
  br i1 %3, label %5, label %4, !dbg !19324

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19325
  unreachable, !dbg !19325

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19322
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19318
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19326
  call void @llvm.dbg.value(metadata i32 undef, metadata !19315, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.value(metadata i64 0, metadata !19312, metadata !DIExpression()), !dbg !19316
  call void @llvm.dbg.value(metadata i32 undef, metadata !19313, metadata !DIExpression()), !dbg !19317
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !19327
  call void @llvm.dbg.value(metadata i64 %6, metadata !19312, metadata !DIExpression()), !dbg !19316
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19330
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19332
  br i1 %7, label %9, label %8, !dbg !19333

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19334
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19334
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19334
  unreachable, !dbg !19334

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !19320
  call void @llvm.dbg.value(metadata i32 %10, metadata !19007, metadata !DIExpression()) #23, !dbg !19322
  call void @llvm.dbg.value(metadata i32 %10, metadata !19001, metadata !DIExpression()) #23, !dbg !19318
  call void @llvm.dbg.value(metadata i32 %10, metadata !19315, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19330
  call void @llvm.dbg.value(metadata i32 undef, metadata !19082, metadata !DIExpression()) #23, !dbg !19335
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !19337, !srcloc !19088
  call void @llvm.dbg.value(metadata i64 %6, metadata !19312, metadata !DIExpression()), !dbg !19316
  call void @llvm.dbg.value(metadata i32 undef, metadata !19313, metadata !DIExpression()), !dbg !19317
  ret i64 %6, !dbg !19338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !19339 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19341, metadata !DIExpression()), !dbg !19345
  call void @llvm.dbg.value(metadata i64 0, metadata !19342, metadata !DIExpression()), !dbg !19345
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.438(%struct._timeout* noundef %0) #25, !dbg !19346
  br i1 %2, label %21, label %3, !dbg !19348

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !19349
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !19343, metadata !DIExpression()), !dbg !19350
  call void @llvm.dbg.value(metadata i64 0, metadata !19342, metadata !DIExpression()), !dbg !19345
  %5 = icmp eq %struct._timeout* %4, null, !dbg !19351
  br i1 %5, label %16, label %6, !dbg !19353

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !19343, metadata !DIExpression()), !dbg !19350
  call void @llvm.dbg.value(metadata i64 %8, metadata !19342, metadata !DIExpression()), !dbg !19345
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !19354
  %10 = load i64, i64* %9, align 8, !dbg !19354
  %11 = add nsw i64 %10, %8, !dbg !19356
  call void @llvm.dbg.value(metadata i64 %11, metadata !19342, metadata !DIExpression()), !dbg !19345
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !19357
  br i1 %12, label %16, label %13, !dbg !19359

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !19360
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !19343, metadata !DIExpression()), !dbg !19350
  call void @llvm.dbg.value(metadata i64 %11, metadata !19342, metadata !DIExpression()), !dbg !19345
  %15 = icmp eq %struct._timeout* %14, null, !dbg !19351
  br i1 %15, label %16, label %6, !dbg !19353, !llvm.loop !19361

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !19345
  call void @llvm.dbg.value(metadata i64 %17, metadata !19342, metadata !DIExpression()), !dbg !19345
  %18 = tail call fastcc i32 @elapsed.425() #25, !dbg !19363
  %19 = sext i32 %18 to i64, !dbg !19363
  %20 = sub nsw i64 %17, %19, !dbg !19364
  br label %21, !dbg !19365

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !19345
  ret i64 %22, !dbg !19366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.438(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #9 !dbg !19367 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19371, metadata !DIExpression()), !dbg !19372
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19373
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.417(%struct._dnode* noundef %2) #25, !dbg !19374
  %4 = xor i1 %3, true, !dbg !19375
  ret i1 %4, !dbg !19376
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19377 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19379, metadata !DIExpression()), !dbg !19384
  call void @llvm.dbg.value(metadata i64 0, metadata !19380, metadata !DIExpression()), !dbg !19384
  call void @llvm.dbg.value(metadata i32 0, metadata !19381, metadata !DIExpression()), !dbg !19385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19386
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19388, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19390
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19390
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19386
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19391
  br i1 %3, label %5, label %4, !dbg !19392

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19393
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19393
  unreachable, !dbg !19393

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19390
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19386
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19394
  call void @llvm.dbg.value(metadata i32 undef, metadata !19383, metadata !DIExpression()), !dbg !19385
  call void @llvm.dbg.value(metadata i64 0, metadata !19380, metadata !DIExpression()), !dbg !19384
  call void @llvm.dbg.value(metadata i32 undef, metadata !19381, metadata !DIExpression()), !dbg !19385
  %6 = load i64, i64* @curr_tick, align 8, !dbg !19395
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !19398
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !19380, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19384
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19399
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19401
  br i1 %8, label %10, label %9, !dbg !19402

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19403
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19403
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19403
  unreachable, !dbg !19403

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !19388
  call void @llvm.dbg.value(metadata i32 %11, metadata !19007, metadata !DIExpression()) #23, !dbg !19390
  call void @llvm.dbg.value(metadata i32 %11, metadata !19001, metadata !DIExpression()) #23, !dbg !19386
  call void @llvm.dbg.value(metadata i32 %11, metadata !19383, metadata !DIExpression()), !dbg !19385
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !19380, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19384
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19399
  call void @llvm.dbg.value(metadata i32 undef, metadata !19082, metadata !DIExpression()) #23, !dbg !19404
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !19406, !srcloc !19088
  call void @llvm.dbg.value(metadata i32 undef, metadata !19381, metadata !DIExpression()), !dbg !19385
  %12 = add i64 %7, %6, !dbg !19407
  ret i64 %12, !dbg !19408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !19409 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !19411, metadata !DIExpression()), !dbg !19415
  call void @llvm.dbg.value(metadata i32 0, metadata !19412, metadata !DIExpression()), !dbg !19416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19417
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19419, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19421
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19421
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19417
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19422
  br i1 %2, label %4, label %3, !dbg !19423

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19424
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19424
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19424
  unreachable, !dbg !19424

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19421
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19417
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19425
  call void @llvm.dbg.value(metadata i32 undef, metadata !19414, metadata !DIExpression()), !dbg !19416
  call void @llvm.dbg.value(metadata i32 -1, metadata !19411, metadata !DIExpression()), !dbg !19415
  call void @llvm.dbg.value(metadata i32 undef, metadata !19412, metadata !DIExpression()), !dbg !19416
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !19426
  call void @llvm.dbg.value(metadata i32 %5, metadata !19411, metadata !DIExpression()), !dbg !19415
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19429
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19431
  br i1 %6, label %8, label %7, !dbg !19432

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19433
  unreachable, !dbg !19433

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !19419
  call void @llvm.dbg.value(metadata i32 %9, metadata !19007, metadata !DIExpression()) #23, !dbg !19421
  call void @llvm.dbg.value(metadata i32 %9, metadata !19001, metadata !DIExpression()) #23, !dbg !19417
  call void @llvm.dbg.value(metadata i32 %9, metadata !19414, metadata !DIExpression()), !dbg !19416
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19429
  call void @llvm.dbg.value(metadata i32 undef, metadata !19082, metadata !DIExpression()) #23, !dbg !19434
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !19436, !srcloc !19088
  call void @llvm.dbg.value(metadata i32 %5, metadata !19411, metadata !DIExpression()), !dbg !19415
  call void @llvm.dbg.value(metadata i32 undef, metadata !19412, metadata !DIExpression()), !dbg !19416
  ret i32 %5, !dbg !19437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !19438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19440, metadata !DIExpression()), !dbg !19450
  call void @llvm.dbg.value(metadata i1 %1, metadata !19441, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19450
  call void @llvm.dbg.value(metadata i32 0, metadata !19442, metadata !DIExpression()), !dbg !19451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19452
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19454, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19456
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19456
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19452
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19457
  br i1 %4, label %6, label %5, !dbg !19458

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19459
  unreachable, !dbg !19459

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19456
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19452
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19460
  call void @llvm.dbg.value(metadata i32 undef, metadata !19444, metadata !DIExpression()), !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !19442, metadata !DIExpression()), !dbg !19451
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !19461
  call void @llvm.dbg.value(metadata i32 %7, metadata !19445, metadata !DIExpression()), !dbg !19462
  call void @llvm.dbg.value(metadata i1 undef, metadata !19448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19462
  %8 = icmp slt i32 %7, 2, !dbg !19463
  call void @llvm.dbg.value(metadata i1 %8, metadata !19449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19462
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !19464
  call void @llvm.dbg.value(metadata i1 %9, metadata !19448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19462
  br i1 %10, label %14, label %11, !dbg !19464

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !19466
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !19466
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !19468
  br label %14, !dbg !19469

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19470
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19472
  br i1 %15, label %17, label %16, !dbg !19473

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19474
  unreachable, !dbg !19474

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !19454
  call void @llvm.dbg.value(metadata i32 %18, metadata !19007, metadata !DIExpression()) #23, !dbg !19456
  call void @llvm.dbg.value(metadata i32 %18, metadata !19001, metadata !DIExpression()) #23, !dbg !19452
  call void @llvm.dbg.value(metadata i32 %18, metadata !19444, metadata !DIExpression()), !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19470
  call void @llvm.dbg.value(metadata i32 undef, metadata !19082, metadata !DIExpression()) #23, !dbg !19475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !19477, !srcloc !19088
  call void @llvm.dbg.value(metadata i32 1, metadata !19442, metadata !DIExpression()), !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !19442, metadata !DIExpression()), !dbg !19451
  ret void, !dbg !19478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !19479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19483, metadata !DIExpression()), !dbg !19488
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !19489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19490
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19492, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19494
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19494
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19490
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19495
  br i1 %3, label %5, label %4, !dbg !19496

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19497
  unreachable, !dbg !19497

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19494
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19490
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19498
  call void @llvm.dbg.value(metadata i32 undef, metadata !19484, metadata !DIExpression()), !dbg !19488
  store i32 %0, i32* @announce_remaining, align 4, !dbg !19488
  call void @llvm.dbg.value(metadata i32 undef, metadata !19484, metadata !DIExpression()), !dbg !19488
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !19499
  %7 = icmp eq %struct._timeout* %6, null, !dbg !19500
  br i1 %7, label %37, label %8, !dbg !19501

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !19488
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !19502
  %14 = load i64, i64* %13, align 8, !dbg !19502
  %15 = sext i32 %11 to i64, !dbg !19503
  %16 = icmp sgt i64 %14, %15, !dbg !19504
  br i1 %16, label %35, label %17, !dbg !19505

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !19485, metadata !DIExpression()), !dbg !19506
  %18 = trunc i64 %14 to i32, !dbg !19507
  call void @llvm.dbg.value(metadata i32 %18, metadata !19487, metadata !DIExpression()), !dbg !19506
  %19 = sext i32 %18 to i64, !dbg !19508
  %20 = load i64, i64* @curr_tick, align 8, !dbg !19509
  %21 = add i64 %20, %19, !dbg !19509
  store i64 %21, i64* @curr_tick, align 8, !dbg !19509
  store i64 0, i64* %13, align 8, !dbg !19510
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !19511
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19512
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19514
  br i1 %22, label %24, label %23, !dbg !19515

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19516
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19516
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19516
  unreachable, !dbg !19516

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !19068, metadata !DIExpression()) #23, !dbg !19512
  call void @llvm.dbg.value(metadata i32 %12, metadata !19082, metadata !DIExpression()) #23, !dbg !19517
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !19519, !srcloc !19088
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !19520
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !19520
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !19521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19522
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19524, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19526
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19526
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19522
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19527
  br i1 %28, label %30, label %29, !dbg !19528

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19529
  unreachable, !dbg !19529

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19526
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19522
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19530
  call void @llvm.dbg.value(metadata i32 undef, metadata !19484, metadata !DIExpression()), !dbg !19488
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !19531
  %32 = sub nsw i32 %31, %18, !dbg !19531
  store i32 %32, i32* @announce_remaining, align 4, !dbg !19488
  call void @llvm.dbg.value(metadata i32 undef, metadata !19484, metadata !DIExpression()), !dbg !19488
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !19499
  %34 = icmp eq %struct._timeout* %33, null, !dbg !19500
  br i1 %34, label %37, label %8, !dbg !19501, !llvm.loop !19532

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !19534
  store i64 %36, i64* %13, align 8, !dbg !19534
  br label %41, !dbg !19537

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !19488
  %40 = sext i32 %39 to i64, !dbg !19538
  br label %41, !dbg !19538

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !19538
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !19539
  %45 = add i64 %44, %42, !dbg !19539
  store i64 %45, i64* @curr_tick, align 8, !dbg !19539
  store i32 0, i32* @announce_remaining, align 4, !dbg !19540
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !19541
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !19542
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19543
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19545
  br i1 %47, label %49, label %48, !dbg !19546

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19547
  unreachable, !dbg !19547

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !19488
  call void @llvm.dbg.value(metadata i32 %50, metadata !19068, metadata !DIExpression()) #23, !dbg !19543
  call void @llvm.dbg.value(metadata i32 %50, metadata !19082, metadata !DIExpression()) #23, !dbg !19548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !19550, !srcloc !19088
  ret void, !dbg !19551
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !19552 {
  call void @llvm.dbg.value(metadata i64 0, metadata !19556, metadata !DIExpression()), !dbg !19560
  call void @llvm.dbg.value(metadata i32 0, metadata !19557, metadata !DIExpression()), !dbg !19561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18995, metadata !DIExpression()) #23, !dbg !19562
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19564, !srcloc !19010
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19566
  call void @llvm.dbg.value(metadata i32 undef, metadata !19008, metadata !DIExpression()) #23, !dbg !19566
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19562
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19567
  br i1 %2, label %4, label %3, !dbg !19568

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.424, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 148) #24, !dbg !19569
  unreachable, !dbg !19569

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !19007, metadata !DIExpression()) #23, !dbg !19566
  call void @llvm.dbg.value(metadata i32 undef, metadata !19001, metadata !DIExpression()) #23, !dbg !19562
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19570
  call void @llvm.dbg.value(metadata i32 undef, metadata !19559, metadata !DIExpression()), !dbg !19561
  call void @llvm.dbg.value(metadata i64 0, metadata !19556, metadata !DIExpression()), !dbg !19560
  call void @llvm.dbg.value(metadata i32 undef, metadata !19557, metadata !DIExpression()), !dbg !19561
  %5 = load i64, i64* @curr_tick, align 8, !dbg !19571
  %6 = tail call fastcc i32 @elapsed.425() #25, !dbg !19574
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19560
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19073, metadata !DIExpression()) #23, !dbg !19575
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19577
  br i1 %7, label %9, label %8, !dbg !19578

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.429, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !19579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.423, i32 0, i32 0), i32 noundef 194) #24, !dbg !19579
  unreachable, !dbg !19579

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !19564
  call void @llvm.dbg.value(metadata i32 %10, metadata !19007, metadata !DIExpression()) #23, !dbg !19566
  call void @llvm.dbg.value(metadata i32 %10, metadata !19001, metadata !DIExpression()) #23, !dbg !19562
  call void @llvm.dbg.value(metadata i32 %10, metadata !19559, metadata !DIExpression()), !dbg !19561
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19560
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !19556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19560
  call void @llvm.dbg.value(metadata i32 undef, metadata !19068, metadata !DIExpression()) #23, !dbg !19575
  call void @llvm.dbg.value(metadata i32 undef, metadata !19082, metadata !DIExpression()) #23, !dbg !19580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !19582, !srcloc !19088
  call void @llvm.dbg.value(metadata i32 undef, metadata !19557, metadata !DIExpression()), !dbg !19561
  %11 = sext i32 %6 to i64, !dbg !19574
  %12 = add i64 %5, %11, !dbg !19583
  ret i64 %12, !dbg !19584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !19585 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !19586
  %2 = trunc i64 %1 to i32, !dbg !19587
  ret i32 %2, !dbg !19588
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !19589 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !19590
  ret i64 %1, !dbg !19591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !19592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19594, metadata !DIExpression()), !dbg !19601
  %2 = icmp eq i32 %0, 0, !dbg !19602
  br i1 %2, label %10, label %3, !dbg !19604

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !19605
  call void @llvm.dbg.value(metadata i32 %4, metadata !19595, metadata !DIExpression()), !dbg !19601
  %5 = mul i32 %0, 200, !dbg !19606
  call void @llvm.dbg.value(metadata i32 %5, metadata !19596, metadata !DIExpression()), !dbg !19601
  br label %6, !dbg !19607

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !19608
  call void @llvm.dbg.value(metadata i32 %7, metadata !19597, metadata !DIExpression()), !dbg !19609
  %8 = sub i32 %7, %4, !dbg !19610
  %9 = icmp ult i32 %8, %5, !dbg !19612
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !19613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !19614 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !19615
  ret i32 %1, !dbg !19616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !19617 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !19619
  ret i32 %1, !dbg !19620
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !19621 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !19625, metadata !DIExpression()), !dbg !19627
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !19628

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !19629
  br label %14, !dbg !19633

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !19626, metadata !DIExpression()), !dbg !19627
  %6 = icmp slt i64 %2, -1, !dbg !19634
  br i1 %6, label %7, label %9, !dbg !19637

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !19638
  br label %14, !dbg !19639

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !19641
  %11 = icmp ugt i64 %2, 1, !dbg !19642
  %12 = select i1 %11, i64 %2, i64 1, !dbg !19642
  %13 = add nsw i64 %10, %12, !dbg !19643
  br label %14, !dbg !19644

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !19645
  ret i64 %15, !dbg !19646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !19647 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.451, i32 0, i32 0)) #24, !dbg !19649
  ret void, !dbg !19650
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !19651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !19653, metadata !DIExpression()), !dbg !19675
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !19654, metadata !DIExpression()), !dbg !19676
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !19677

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.454, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.455, i32 0, i32 0), i32 noundef 24) #24, !dbg !19681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.456, i32 0, i32 0)) #24, !dbg !19681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.455, i32 0, i32 0), i32 noundef 24) #24, !dbg !19681
  unreachable, !dbg !19681

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !19654, metadata !DIExpression()), !dbg !19676
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19684
  br i1 %5, label %7, label %6, !dbg !19685

6:                                                ; preds = %3
  ret i32 0, !dbg !19686

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !19687
  %9 = load i8*, i8** %8, align 4, !dbg !19687
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !19690
  %11 = load i32, i32* %10, align 4, !dbg !19690
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #25, !dbg !19691
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !19692
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !19654, metadata !DIExpression()), !dbg !19676
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19693
  br i1 %13, label %2, label %3, !dbg !19677, !llvm.loop !19694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !19696 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19700, metadata !DIExpression()), !dbg !19703
  call void @llvm.dbg.value(metadata i8* %1, metadata !19701, metadata !DIExpression()), !dbg !19703
  call void @llvm.dbg.value(metadata i32 %2, metadata !19702, metadata !DIExpression()), !dbg !19703
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19704
  tail call fastcc void @z_waitq_init.457(%struct._wait_q_t* noundef nonnull %4) #25, !dbg !19705
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19706
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #24, !dbg !19707
  ret void, !dbg !19708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.457(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !19709 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19714, metadata !DIExpression()), !dbg !19715
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !19716
  tail call fastcc void @sys_dlist_init.458(%struct._dnode* noundef %2) #25, !dbg !19717
  ret void, !dbg !19718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.458(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !19719 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19724, metadata !DIExpression()), !dbg !19725
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19726
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19727
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19728
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19729
  ret void, !dbg !19730
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !19731 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19742, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19739, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i32 %1, metadata !19740, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i32 %2, metadata !19741, metadata !DIExpression()), !dbg !19752
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #24, !dbg !19753
  call void @llvm.dbg.value(metadata i64 %6, metadata !19744, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i8* null, metadata !19745, metadata !DIExpression()), !dbg !19752
  %7 = icmp eq i64 %5, -1, !dbg !19754
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19754
  call void @llvm.dbg.value(metadata i64 %8, metadata !19744, metadata !DIExpression()), !dbg !19752
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19756, metadata !DIExpression()) #23, !dbg !19763
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19765, !srcloc !19771
  call void @llvm.dbg.value(metadata i32 undef, metadata !19768, metadata !DIExpression()) #23, !dbg !19772
  call void @llvm.dbg.value(metadata i32 undef, metadata !19769, metadata !DIExpression()) #23, !dbg !19772
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()) #23, !dbg !19763
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !19773
  br i1 %11, label %13, label %12, !dbg !19776

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.459, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 148) #24, !dbg !19777
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.461, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !19777
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 148) #24, !dbg !19777
  unreachable, !dbg !19777

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19768, metadata !DIExpression()) #23, !dbg !19772
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()) #23, !dbg !19763
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !19779
  call void @llvm.dbg.value(metadata i32 undef, metadata !19746, metadata !DIExpression()), !dbg !19752
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !19780, !srcloc !19789
  call void @llvm.dbg.value(metadata i32 %14, metadata !19783, metadata !DIExpression()) #23, !dbg !19790
  %15 = icmp eq i32 %14, 0, !dbg !19791
  %16 = icmp eq i64 %5, 0, !dbg !19792
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19792
  br i1 %17, label %18, label %25, !dbg !19792

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19745, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i8 0, metadata !19751, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i32 undef, metadata !19746, metadata !DIExpression()), !dbg !19752
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #24, !dbg !19793
  call void @llvm.dbg.value(metadata i8* %20, metadata !19745, metadata !DIExpression()), !dbg !19752
  %21 = tail call i64 @sys_clock_tick_get() #24, !dbg !19795
  call void @llvm.dbg.value(metadata i64 %21, metadata !19743, metadata !DIExpression()), !dbg !19752
  %22 = icmp eq i8* %20, null, !dbg !19796
  br i1 %22, label %23, label %43, !dbg !19798

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !19746, metadata !DIExpression()), !dbg !19752
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19798

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.455, i32 0, i32 0), i32 noundef 76) #24, !dbg !19799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.463, i32 0, i32 0)) #24, !dbg !19799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.455, i32 0, i32 0), i32 noundef 76) #24, !dbg !19799
  unreachable, !dbg !19799

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19751, metadata !DIExpression()), !dbg !19752
  %29 = sub nsw i64 %8, %27, !dbg !19801
  %30 = icmp slt i64 %29, 1, !dbg !19802
  br i1 %30, label %43, label %31, !dbg !19803

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19752
  call void @llvm.dbg.value(metadata i8 undef, metadata !19751, metadata !DIExpression()), !dbg !19752
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19804
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19804
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #24, !dbg !19804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19756, metadata !DIExpression()) #23, !dbg !19805
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19807, !srcloc !19771
  call void @llvm.dbg.value(metadata i32 undef, metadata !19768, metadata !DIExpression()) #23, !dbg !19809
  call void @llvm.dbg.value(metadata i32 undef, metadata !19769, metadata !DIExpression()) #23, !dbg !19809
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()) #23, !dbg !19805
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !19810
  br i1 %37, label %39, label %38, !dbg !19811

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.459, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 148) #24, !dbg !19812
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.461, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !19812
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 148) #24, !dbg !19812
  unreachable, !dbg !19812

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !19751, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i32 undef, metadata !19768, metadata !DIExpression()) #23, !dbg !19809
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()) #23, !dbg !19805
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !19813
  call void @llvm.dbg.value(metadata i32 undef, metadata !19746, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i8* null, metadata !19745, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i32 undef, metadata !19746, metadata !DIExpression()), !dbg !19752
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #24, !dbg !19793
  call void @llvm.dbg.value(metadata i8* %40, metadata !19745, metadata !DIExpression()), !dbg !19752
  %41 = tail call i64 @sys_clock_tick_get() #24, !dbg !19795
  call void @llvm.dbg.value(metadata i64 %41, metadata !19743, metadata !DIExpression()), !dbg !19752
  %42 = icmp eq i8* %40, null, !dbg !19796
  br i1 %42, label %26, label %43, !dbg !19798, !llvm.loop !19814

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19793
  call void @llvm.dbg.value(metadata i8* %45, metadata !19745, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.value(metadata i32 undef, metadata !19817, metadata !DIExpression()) #23, !dbg !19823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19822, metadata !DIExpression()) #23, !dbg !19823
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !19825
  br i1 %46, label %48, label %47, !dbg !19828

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 194) #24, !dbg !19829
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.465, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !19829
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 194) #24, !dbg !19829
  unreachable, !dbg !19829

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19752
  call void @llvm.dbg.value(metadata i32 %49, metadata !19817, metadata !DIExpression()) #23, !dbg !19823
  call void @llvm.dbg.value(metadata i32 %49, metadata !19831, metadata !DIExpression()) #23, !dbg !19834
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #23, !dbg !19836, !srcloc !19837
  ret i8* %45, !dbg !19838
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19839 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19845, metadata !DIExpression()), !dbg !19847
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19843, metadata !DIExpression()), !dbg !19847
  call void @llvm.dbg.value(metadata i32 %1, metadata !19844, metadata !DIExpression()), !dbg !19847
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #25, !dbg !19848
  call void @llvm.dbg.value(metadata i8* %4, metadata !19846, metadata !DIExpression()), !dbg !19847
  ret i8* %4, !dbg !19849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19850 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19854, metadata !DIExpression()), !dbg !19857
  call void @llvm.dbg.value(metadata i8* %1, metadata !19855, metadata !DIExpression()), !dbg !19857
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19756, metadata !DIExpression()) #23, !dbg !19859
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !19861, !srcloc !19771
  call void @llvm.dbg.value(metadata i32 undef, metadata !19768, metadata !DIExpression()) #23, !dbg !19863
  call void @llvm.dbg.value(metadata i32 undef, metadata !19769, metadata !DIExpression()) #23, !dbg !19863
  call void @llvm.dbg.value(metadata i32 undef, metadata !19762, metadata !DIExpression()) #23, !dbg !19859
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !19864
  br i1 %5, label %7, label %6, !dbg !19865

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.459, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 148) #24, !dbg !19866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.461, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !19866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 148) #24, !dbg !19866
  unreachable, !dbg !19866

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19861
  call void @llvm.dbg.value(metadata i32 %8, metadata !19768, metadata !DIExpression()) #23, !dbg !19863
  call void @llvm.dbg.value(metadata i32 %8, metadata !19762, metadata !DIExpression()) #23, !dbg !19859
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !19867
  call void @llvm.dbg.value(metadata i32 %8, metadata !19856, metadata !DIExpression()), !dbg !19857
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19868
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #24, !dbg !19869
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19870
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #24, !dbg !19872
  %12 = icmp eq i32 %11, 0, !dbg !19873
  br i1 %12, label %15, label %13, !dbg !19874

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19875
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #24, !dbg !19875
  br label %19, !dbg !19877

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19817, metadata !DIExpression()) #23, !dbg !19878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19822, metadata !DIExpression()) #23, !dbg !19878
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !19881
  br i1 %16, label %18, label %17, !dbg !19882

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 194) #24, !dbg !19883
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.465, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !19883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.460, i32 0, i32 0), i32 noundef 194) #24, !dbg !19883
  unreachable, !dbg !19883

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19817, metadata !DIExpression()) #23, !dbg !19878
  call void @llvm.dbg.value(metadata i32 %8, metadata !19831, metadata !DIExpression()) #23, !dbg !19884
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !19886, !srcloc !19837
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19887
}

; Function Attrs: noinline nounwind optsize
define internal i32 @k_sys_work_q_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !19888 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.log_source_const_data*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !19890, metadata !DIExpression()), !dbg !19896
  %4 = bitcast i64* %2 to i8*, !dbg !19897
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !19897
  call void @llvm.dbg.declare(metadata %struct.log_source_const_data* %3, metadata !19891, metadata !DIExpression()), !dbg !19898
  %5 = load i64, i64* bitcast (%struct.log_source_const_data* @__const.k_sys_work_q_init.cfg to i64*), align 8, !dbg !19898
  store i64 %5, i64* %2, align 8, !dbg !19898
  call void @k_work_queue_start(%struct.k_work_q* noundef nonnull @k_sys_work_q, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @sys_work_q_stack, i32 0, i32 0), i32 noundef 1024, i32 noundef -1, %struct.log_source_const_data* noundef nonnull %3) #24, !dbg !19899
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !19900
  ret i32 0, !dbg !19901
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1358, !2, !2951, !27, !456, !588, !612, !2953, !2955, !2988, !3022, !3024, !622, !3026, !3029, !3040, !3087, !3089, !3117, !3145, !3188, !3259, !3304, !3332, !1049, !1059, !1071, !1176, !1369, !1648, !3337, !1910, !3339, !3342, !3419, !3433, !3445, !3570, !1940, !3573, !1946, !2306, !3591, !3593, !2327, !2432, !2457, !2639, !3694, !2751, !3697, !2792, !2819}
!llvm.ident = !{!3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699, !3699}
!llvm.module.flags = !{!3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !27, file: !106, line: 16, type: !282, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !323, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/work_queue/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !307, !319, !190, !321}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_wq_info", file: !106, line: 68, size: 192, elements: !107)
!106 = !DIFile(filename: "zephyr/samples/subsys/zbus/work_queue/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!107 = !{!108, !263, !318}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !105, file: !106, line: 69, baseType: !109, size: 128)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work", file: !110, line: 3663, size: 128, elements: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !{!112, !119, !125, !262}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !109, file: !110, line: 3669, baseType: !113, size: 32)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !114, line: 33, baseType: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !114, line: 29, size: 32, elements: !116)
!116 = !{!117}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !115, file: !114, line: 30, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !109, file: !110, line: 3672, baseType: !120, size: 32, offset: 32)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_work_handler_t", file: !110, line: 3071, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!122 = !DISubroutineType(types: !123)
!123 = !{null, !124}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !109, file: !110, line: 3675, baseType: !126, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work_q", file: !110, line: 3810, size: 1408, elements: !128)
!128 = !{!129, !252, !259, !260, !261}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !127, file: !110, line: 3812, baseType: !130, size: 1152)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !132)
!131 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!132 = !{!133, !205, !218, !219, !220, !225, !226, !247}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !130, file: !131, line: 247, baseType: !134, size: 384)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !135)
!135 = !{!136, !164, !172, !175, !176, !189, !191, !192}
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !131, line: 60, baseType: !137, size: 64)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !131, line: 60, size: 64, elements: !138)
!138 = !{!139, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !137, file: !131, line: 61, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !143)
!143 = !{!144, !150}
!144 = !DIDerivedType(tag: DW_TAG_member, scope: !142, file: !141, line: 38, baseType: !145, size: 32)
!145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !142, file: !141, line: 38, size: 32, elements: !146)
!146 = !{!147, !149}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !145, file: !141, line: 39, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !145, file: !141, line: 40, baseType: !148, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, scope: !142, file: !141, line: 42, baseType: !151, size: 32, offset: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !142, file: !141, line: 42, size: 32, elements: !152)
!152 = !{!153, !154}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !151, file: !141, line: 43, baseType: !148, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !151, file: !141, line: 44, baseType: !148, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !137, file: !131, line: 62, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !158)
!157 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !156, file: !157, line: 50, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !162)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!162 = !{!163}
!163 = !DISubrange(count: 2)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !134, file: !131, line: 68, baseType: !165, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !168)
!167 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !169)
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !168, file: !167, line: 232, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !142)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !134, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !174)
!174 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !134, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!176 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !131, line: 90, baseType: !177, size: 16, offset: 112)
!177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !131, line: 90, size: 16, elements: !178)
!178 = !{!179, !186}
!179 = !DIDerivedType(tag: DW_TAG_member, scope: !177, file: !131, line: 91, baseType: !180, size: 16)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !177, file: !131, line: 91, size: 16, elements: !181)
!181 = !{!182, !185}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !180, file: !131, line: 96, baseType: !183, size: 8)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !184)
!184 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !180, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !177, file: !131, line: 100, baseType: !187, size: 16)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !188)
!188 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !134, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !134, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !134, file: !131, line: 131, baseType: !193, size: 192, offset: 192)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !194)
!194 = !{!195, !196, !202}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !193, file: !167, line: 245, baseType: !140, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !193, file: !167, line: 246, baseType: !197, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !198)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = !DISubroutineType(types: !200)
!200 = !{null, !201}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !193, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !204)
!204 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !130, file: !131, line: 250, baseType: !206, size: 288, offset: 384)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !208)
!207 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216, !217}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !206, file: !207, line: 26, baseType: !190, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !206, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !206, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !206, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !206, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !206, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !206, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !206, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !206, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !130, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !130, file: !131, line: 256, baseType: !166, size: 64, offset: 704)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !130, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !222, size: 256, elements: !223)
!222 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!223 = !{!224}
!224 = !DISubrange(count: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !130, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !130, file: !131, line: 325, baseType: !227, size: 32, offset: 1056)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 32)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !229)
!229 = !{!230, !241, !242}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !228, file: !110, line: 5074, baseType: !231, size: 96)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !233)
!232 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!233 = !{!234, !237, !238}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !231, file: !232, line: 57, baseType: !235, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !232, line: 57, flags: DIFlagFwdDecl)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !231, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !231, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !240, line: 214, baseType: !32)
!240 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !228, file: !110, line: 5075, baseType: !166, size: 64, offset: 96)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !228, file: !110, line: 5076, baseType: !243, size: 32, offset: 160)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !243, file: !244, line: 52, baseType: !22, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !130, file: !131, line: 343, baseType: !248, size: 64, offset: 1088)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !249)
!249 = !{!250, !251}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !248, file: !207, line: 63, baseType: !190, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !248, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !127, file: !110, line: 3819, baseType: !253, size: 64, offset: 1152)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !114, line: 40, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !114, line: 35, size: 64, elements: !255)
!255 = !{!256, !258}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !254, file: !114, line: 36, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !254, file: !114, line: 37, baseType: !257, size: 32, offset: 32)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "notifyq", scope: !127, file: !110, line: 3822, baseType: !166, size: 64, offset: 1216)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "drainq", scope: !127, file: !110, line: 3825, baseType: !166, size: 64, offset: 1280)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !127, file: !110, line: 3828, baseType: !190, size: 32, offset: 1344)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !109, file: !110, line: 3683, baseType: !190, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !105, file: !106, line: 70, baseType: !264, size: 32, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !267, line: 29, size: 192, elements: !268)
!267 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!268 = !{!269, !271, !273, !274, !280, !289}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !266, file: !267, line: 35, baseType: !270, size: 16)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !187)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !266, file: !267, line: 40, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !266, file: !267, line: 45, baseType: !272, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !266, file: !267, line: 51, baseType: !275, size: 32, offset: 96)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!279, !13, !239}
!279 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !266, file: !267, line: 56, baseType: !281, size: 32, offset: 128)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !110, line: 2720, size: 160, elements: !283)
!283 = !{!284, !285, !287, !288}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !282, file: !110, line: 2722, baseType: !166, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !282, file: !110, line: 2724, baseType: !286, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !282, file: !110, line: 2727, baseType: !190, size: 32, offset: 96)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !282, file: !110, line: 2730, baseType: !103, size: 32, offset: 128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !266, file: !267, line: 67, baseType: !290, size: 32, offset: 160)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !294)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !267, line: 85, size: 96, elements: !295)
!295 = !{!296, !297, !313}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !294, file: !267, line: 91, baseType: !279, size: 8)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !294, file: !267, line: 93, baseType: !298, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 32)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !110, line: 4204, size: 352, elements: !301)
!301 = !{!302, !303, !304, !305, !306, !308, !309, !310, !311, !312}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !300, file: !110, line: 4206, baseType: !166, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !300, file: !110, line: 4208, baseType: !243, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !300, file: !110, line: 4210, baseType: !239, size: 32, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !300, file: !110, line: 4212, baseType: !190, size: 32, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !300, file: !110, line: 4214, baseType: !307, size: 32, offset: 160)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !300, file: !110, line: 4216, baseType: !307, size: 32, offset: 192)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !300, file: !110, line: 4218, baseType: !307, size: 32, offset: 224)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !300, file: !110, line: 4220, baseType: !307, size: 32, offset: 256)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !300, file: !110, line: 4222, baseType: !190, size: 32, offset: 288)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !300, file: !110, line: 4227, baseType: !173, size: 8, offset: 320)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !294, file: !267, line: 96, baseType: !314, size: 32, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !264}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !105, file: !106, line: 71, baseType: !173, size: 8, offset: 160)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !320, line: 46, baseType: !203)
!320 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !322)
!322 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!323 = !{!25, !324, !326, !328, !330, !332, !334, !336, !338, !340, !342, !344, !346, !379, !383, !385, !387, !389, !391, !393, !395, !397, !399, !404, !409, !411, !413, !415, !417, !419, !421, !423, !431, !436, !443, !448, !450, !452}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "version_chan", scope: !27, file: !106, line: 16, type: !265, isLocal: false, isDefinition: true, align: 32)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "_zbus_mutex_sensor_data_chan", scope: !27, file: !106, line: 26, type: !282, isLocal: true, isDefinition: true, align: 32)
!328 = !DIGlobalVariableExpression(var: !329, expr: !DIExpression())
!329 = distinct !DIGlobalVariable(name: "sensor_data_chan", scope: !27, file: !106, line: 26, type: !265, isLocal: false, isDefinition: true, align: 32)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "fast_handler1_lis", scope: !27, file: !106, line: 46, type: !294, isLocal: false, isDefinition: true, align: 32)
!332 = !DIGlobalVariableExpression(var: !333, expr: !DIExpression())
!333 = distinct !DIGlobalVariable(name: "fast_handler2_lis", scope: !27, file: !106, line: 56, type: !294, isLocal: false, isDefinition: true, align: 32)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "fast_handler3_lis", scope: !27, file: !106, line: 66, type: !294, isLocal: false, isDefinition: true, align: 32)
!336 = !DIGlobalVariableExpression(var: !337, expr: !DIExpression())
!337 = distinct !DIGlobalVariable(name: "delay_handler1_lis", scope: !27, file: !106, line: 97, type: !294, isLocal: false, isDefinition: true, align: 32)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "delay_handler2_lis", scope: !27, file: !106, line: 106, type: !294, isLocal: false, isDefinition: true, align: 32)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "delay_handler3_lis", scope: !27, file: !106, line: 115, type: !294, isLocal: false, isDefinition: true, align: 32)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_thread_handler1_sub", scope: !27, file: !106, line: 128, type: !300, isLocal: false, isDefinition: true, align: 32)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "thread_handler1_sub", scope: !27, file: !106, line: 128, type: !294, isLocal: false, isDefinition: true, align: 32)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "_k_thread_data_thread_handler1_id", scope: !27, file: !106, line: 145, type: !348, isLocal: false, isDefinition: true, align: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !110, line: 620, size: 384, elements: !349)
!349 = !{!350, !351, !359, !360, !365, !366, !367, !368, !369, !370, !372, !376}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !348, file: !110, line: 621, baseType: !286, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !348, file: !110, line: 622, baseType: !352, size: 32, offset: 32)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !354, line: 44, baseType: !355)
!354 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !356, line: 47, size: 8, elements: !357)
!356 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = !{!358}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !355, file: !356, line: 48, baseType: !222, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !348, file: !110, line: 623, baseType: !32, size: 32, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !348, file: !110, line: 624, baseType: !361, size: 32, offset: 96)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !354, line: 46, baseType: !362)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 32)
!363 = !DISubroutineType(types: !364)
!364 = !{null, !102, !102, !102}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !348, file: !110, line: 625, baseType: !102, size: 32, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !348, file: !110, line: 626, baseType: !102, size: 32, offset: 160)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !348, file: !110, line: 627, baseType: !102, size: 32, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !348, file: !110, line: 628, baseType: !103, size: 32, offset: 224)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !348, file: !110, line: 629, baseType: !190, size: 32, offset: 256)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !348, file: !110, line: 630, baseType: !371, size: 32, offset: 288)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !348, file: !110, line: 631, baseType: !373, size: 32, offset: 320)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 32)
!374 = !DISubroutineType(types: !375)
!375 = !{null}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !348, file: !110, line: 632, baseType: !377, size: 32, offset: 352)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "thread_handler1_id", scope: !27, file: !106, line: 145, type: !381, isLocal: false, isDefinition: true)
!381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !382)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !286)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_thread_handler2_sub", scope: !27, file: !106, line: 147, type: !300, isLocal: false, isDefinition: true, align: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "thread_handler2_sub", scope: !27, file: !106, line: 147, type: !294, isLocal: false, isDefinition: true, align: 32)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "_k_thread_data_thread_handler2_id", scope: !27, file: !106, line: 164, type: !348, isLocal: false, isDefinition: true, align: 32)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "thread_handler2_id", scope: !27, file: !106, line: 164, type: !381, isLocal: false, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_thread_handler3_sub", scope: !27, file: !106, line: 166, type: !300, isLocal: false, isDefinition: true, align: 32)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "thread_handler3_sub", scope: !27, file: !106, line: 166, type: !294, isLocal: false, isDefinition: true, align: 32)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "_k_thread_data_thread_handler3_id", scope: !27, file: !106, line: 183, type: !348, isLocal: false, isDefinition: true, align: 32)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "thread_handler3_id", scope: !27, file: !106, line: 183, type: !381, isLocal: false, isDefinition: true)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_thread_handler1_sub", scope: !27, file: !106, line: 128, type: !401, isLocal: true, isDefinition: true, align: 32)
!401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !222, size: 128, elements: !402)
!402 = !{!403}
!403 = !DISubrange(count: 16)
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread_handler1_id", scope: !27, file: !106, line: 145, type: !406, isLocal: false, isDefinition: true, align: 64)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 8192, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 1024)
!409 = !DIGlobalVariableExpression(var: !410, expr: !DIExpression())
!410 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread_handler1_id", scope: !27, file: !106, line: 145, type: !130, isLocal: false, isDefinition: true)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_thread_handler2_sub", scope: !27, file: !106, line: 147, type: !401, isLocal: true, isDefinition: true, align: 32)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread_handler2_id", scope: !27, file: !106, line: 164, type: !406, isLocal: false, isDefinition: true, align: 64)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread_handler2_id", scope: !27, file: !106, line: 164, type: !130, isLocal: false, isDefinition: true)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_thread_handler3_sub", scope: !27, file: !106, line: 166, type: !401, isLocal: true, isDefinition: true, align: 32)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread_handler3_id", scope: !27, file: !106, line: 183, type: !406, isLocal: false, isDefinition: true, align: 64)
!421 = !DIGlobalVariableExpression(var: !422, expr: !DIExpression())
!422 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread_handler3_id", scope: !27, file: !106, line: 183, type: !130, isLocal: false, isDefinition: true)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !27, file: !106, line: 16, type: !425, isLocal: true, isDefinition: true)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !426, line: 9, size: 32, elements: !427)
!426 = !DIFile(filename: "zephyr/samples/subsys/zbus/work_queue/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!427 = !{!428, !429, !430}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !425, file: !426, line: 10, baseType: !173, size: 8)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !425, file: !426, line: 11, baseType: !173, size: 8, offset: 8)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !425, file: !426, line: 12, baseType: !187, size: 16, offset: 16)
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !27, file: !106, line: 16, type: !433, isLocal: true, isDefinition: true)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 32, elements: !434)
!434 = !{!435}
!435 = !DISubrange(count: 1)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "_zbus_message_sensor_data_chan", scope: !27, file: !106, line: 26, type: !438, isLocal: true, isDefinition: true)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !426, line: 15, size: 96, elements: !439)
!439 = !{!440, !441, !442}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !438, file: !426, line: 16, baseType: !190, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "press", scope: !438, file: !426, line: 17, baseType: !190, size: 32, offset: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "humidity", scope: !438, file: !426, line: 18, baseType: !190, size: 32, offset: 64)
!443 = !DIGlobalVariableExpression(var: !444, expr: !DIExpression())
!444 = distinct !DIGlobalVariable(name: "_zbus_observers_sensor_data_chan", scope: !27, file: !106, line: 26, type: !445, isLocal: true, isDefinition: true)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 320, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 10)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "wq_handler1", scope: !27, file: !106, line: 74, type: !105, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "wq_handler2", scope: !27, file: !106, line: 75, type: !105, isLocal: true, isDefinition: true)
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "wq_handler3", scope: !27, file: !106, line: 76, type: !105, isLocal: true, isDefinition: true)
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "_k_thread_obj_peripheral_thread_id", scope: !456, file: !462, line: 30, type: !467, isLocal: false, isDefinition: true)
!456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !458, globals: !459, splitDebugInlining: false, nameTableKind: None)
!457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/work_queue/src/sensors.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!458 = !{!319, !102, !103, !190, !321}
!459 = !{!460, !579, !583, !454}
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "_k_thread_data_peripheral_thread_id", scope: !456, file: !462, line: 30, type: !463, isLocal: false, isDefinition: true, align: 32)
!462 = !DIFile(filename: "zephyr/samples/subsys/zbus/work_queue/src/sensors.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !110, line: 620, size: 384, elements: !464)
!464 = !{!465, !563, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !463, file: !110, line: 621, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !468)
!468 = !{!469, !527, !539, !540, !541, !542, !543, !558}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !467, file: !131, line: 247, baseType: !470, size: 384)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !471)
!471 = !{!472, !496, !503, !504, !505, !514, !515, !516}
!472 = !DIDerivedType(tag: DW_TAG_member, scope: !470, file: !131, line: 60, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !470, file: !131, line: 60, size: 64, elements: !474)
!474 = !{!475, !490}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !473, file: !131, line: 61, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !478)
!478 = !{!479, !485}
!479 = !DIDerivedType(tag: DW_TAG_member, scope: !477, file: !141, line: 38, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !477, file: !141, line: 38, size: 32, elements: !481)
!481 = !{!482, !484}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !480, file: !141, line: 39, baseType: !483, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !480, file: !141, line: 40, baseType: !483, size: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, scope: !477, file: !141, line: 42, baseType: !486, size: 32, offset: 32)
!486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !477, file: !141, line: 42, size: 32, elements: !487)
!487 = !{!488, !489}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !486, file: !141, line: 43, baseType: !483, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !486, file: !141, line: 44, baseType: !483, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !473, file: !131, line: 62, baseType: !491, size: 64)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !492)
!492 = !{!493}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !491, file: !157, line: 50, baseType: !494, size: 64)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 64, elements: !162)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !470, file: !131, line: 68, baseType: !497, size: 32, offset: 64)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !500)
!500 = !{!501}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !499, file: !167, line: 232, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !477)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !470, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !470, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!505 = !DIDerivedType(tag: DW_TAG_member, scope: !470, file: !131, line: 90, baseType: !506, size: 16, offset: 112)
!506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !470, file: !131, line: 90, size: 16, elements: !507)
!507 = !{!508, !513}
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !506, file: !131, line: 91, baseType: !509, size: 16)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !506, file: !131, line: 91, size: 16, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !509, file: !131, line: 96, baseType: !183, size: 8)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !509, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !506, file: !131, line: 100, baseType: !187, size: 16)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !470, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !470, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !470, file: !131, line: 131, baseType: !517, size: 192, offset: 192)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !518)
!518 = !{!519, !520, !526}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !517, file: !167, line: 245, baseType: !476, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !517, file: !167, line: 246, baseType: !521, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DISubroutineType(types: !524)
!524 = !{null, !525}
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !517, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !467, file: !131, line: 250, baseType: !528, size: 288, offset: 384)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !529)
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !528, file: !207, line: 26, baseType: !190, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !528, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !528, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !528, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !528, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !528, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !528, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !528, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !528, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !467, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !467, file: !131, line: 256, baseType: !498, size: 64, offset: 704)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !467, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !467, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !467, file: !131, line: 325, baseType: !544, size: 32, offset: 1056)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !546)
!546 = !{!547, !553, !554}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !545, file: !110, line: 5074, baseType: !548, size: 96)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !549)
!549 = !{!550, !551, !552}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !548, file: !232, line: 57, baseType: !235, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !548, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !548, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !545, file: !110, line: 5075, baseType: !498, size: 64, offset: 96)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !545, file: !110, line: 5076, baseType: !555, size: 32, offset: 160)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !555, file: !244, line: 52, baseType: !22, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !467, file: !131, line: 343, baseType: !559, size: 64, offset: 1088)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !560)
!560 = !{!561, !562}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !559, file: !207, line: 63, baseType: !190, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !559, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !463, file: !110, line: 622, baseType: !564, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !354, line: 44, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !356, line: 47, size: 8, elements: !567)
!567 = !{!568}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !566, file: !356, line: 48, baseType: !222, size: 8)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !463, file: !110, line: 623, baseType: !32, size: 32, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !463, file: !110, line: 624, baseType: !361, size: 32, offset: 96)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !463, file: !110, line: 625, baseType: !102, size: 32, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !463, file: !110, line: 626, baseType: !102, size: 32, offset: 160)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !463, file: !110, line: 627, baseType: !102, size: 32, offset: 192)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !463, file: !110, line: 628, baseType: !103, size: 32, offset: 224)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !463, file: !110, line: 629, baseType: !190, size: 32, offset: 256)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !463, file: !110, line: 630, baseType: !371, size: 32, offset: 288)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !463, file: !110, line: 631, baseType: !373, size: 32, offset: 320)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !463, file: !110, line: 632, baseType: !377, size: 32, offset: 352)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "peripheral_thread_id", scope: !456, file: !462, line: 30, type: !581, isLocal: false, isDefinition: true)
!581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !582)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !466)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(name: "_k_thread_stack_peripheral_thread_id", scope: !456, file: !462, line: 30, type: !585, isLocal: false, isDefinition: true, align: 64)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 8192, elements: !407)
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !588, file: !603, line: 18, type: !604, isLocal: false, isDefinition: true)
!588 = distinct !DICompileUnit(language: DW_LANG_C99, file: !589, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !590, globals: !602, splitDebugInlining: false, nameTableKind: None)
!589 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!590 = !{!22, !102, !24, !591, !593, !595, !239, !103, !596, !597, !599, !600, !307, !601, !187, !377}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 32)
!592 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 32)
!598 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!602 = !{!586}
!603 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !606, line: 16, size: 64, elements: !607)
!606 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !605, file: !606, line: 17, baseType: !377, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !605, file: !606, line: 18, baseType: !173, size: 8, offset: 32)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "_char_out", scope: !612, file: !616, line: 54, type: !617, isLocal: false, isDefinition: true)
!612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, globals: !615, splitDebugInlining: false, nameTableKind: None)
!613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!614 = !{!102, !103}
!615 = !{!610}
!616 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DISubroutineType(types: !619)
!619 = !{!103, !103}
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !622, file: !1034, line: 258, type: !1035, isLocal: true, isDefinition: true, align: 32)
!622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !623, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !624, retainedTypes: !907, globals: !1033, splitDebugInlining: false, nameTableKind: None)
!623 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!624 = !{!625, !657, !667, !716, !722, !843, !878}
!625 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !626, line: 54, baseType: !32, size: 32, elements: !627)
!626 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!627 = !{!628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656}
!628 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!629 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!630 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!631 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!632 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!633 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!634 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!635 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!636 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!637 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!638 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!639 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!640 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!641 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!642 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!643 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!644 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!645 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!646 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!647 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!648 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!649 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!650 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!651 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!652 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!653 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!654 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!655 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!656 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!657 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !626, line: 224, baseType: !32, size: 32, elements: !658)
!658 = !{!659, !660, !661, !662, !663, !664, !665, !666}
!659 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!660 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!661 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!662 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!663 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!664 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!665 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!666 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !626, line: 275, baseType: !32, size: 32, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!669 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!670 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!671 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!672 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!673 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!674 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!675 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!676 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!677 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!678 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!679 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!680 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!681 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!682 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!683 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!684 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!685 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!686 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!687 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!688 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!689 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!690 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!691 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!692 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!693 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!694 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!695 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!696 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!697 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!698 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!699 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!700 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!701 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!702 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!703 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!704 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!705 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!706 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!707 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!708 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!709 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!710 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!711 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!712 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!713 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!714 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!715 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !626, line: 327, baseType: !32, size: 32, elements: !717)
!717 = !{!718, !719, !720, !721}
!718 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!719 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!720 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!721 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!722 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !723, line: 76, baseType: !32, size: 32, elements: !724)
!723 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!724 = !{!725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842}
!725 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!726 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!727 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!728 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!729 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!730 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!731 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!732 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!733 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!734 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!735 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!736 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!737 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!738 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!739 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!740 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!741 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!742 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!743 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!744 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!745 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!746 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!747 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!748 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!749 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!750 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!751 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!752 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!753 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!754 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!755 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!756 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!757 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!758 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!759 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!760 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!761 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!762 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!763 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!764 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!765 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!766 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!767 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!768 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!769 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!770 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!771 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!772 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!773 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!774 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!775 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!776 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!777 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!778 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!779 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!780 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!781 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!782 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!783 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!784 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!785 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!786 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!787 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!788 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!789 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!790 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!791 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!792 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!793 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!794 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!795 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!796 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!797 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!798 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!799 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!800 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!801 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!802 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!803 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!804 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!805 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!806 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!807 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!808 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!809 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!810 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!811 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!812 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!813 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!814 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!815 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!816 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!817 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!818 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!819 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!820 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!821 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!822 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!823 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!824 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!825 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!826 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!827 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!828 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!829 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!830 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!831 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!832 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!833 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!834 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!835 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!836 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!837 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!838 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!839 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!840 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!841 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!842 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!843 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !626, line: 237, baseType: !32, size: 32, elements: !844)
!844 = !{!845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!845 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!846 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!847 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!848 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!849 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!850 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!851 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!852 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!853 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!854 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!855 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!856 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!857 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!858 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!859 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!860 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!861 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!862 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!863 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!864 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!865 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!866 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!867 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!868 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!869 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!870 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!871 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!872 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!873 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!874 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!875 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!876 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!877 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !723, line: 44, baseType: !32, size: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906}
!880 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!881 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!882 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!883 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!884 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!885 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!886 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!887 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!888 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!889 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!890 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!891 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!892 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!893 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!894 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!895 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!896 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!897 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!898 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!899 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!900 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!901 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!902 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!903 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!904 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!905 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!906 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!907 = !{!908, !980, !1021, !1032, !190}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !910, line: 4575, baseType: !911)
!910 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 4532, size: 390144, elements: !912)
!912 = !{!913, !915, !916, !917, !918, !922, !932, !936, !946, !950}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !911, file: !910, line: 4533, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !190)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !911, file: !910, line: 4534, baseType: !914, size: 32, offset: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !911, file: !910, line: 4535, baseType: !914, size: 32, offset: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !911, file: !910, line: 4536, baseType: !914, size: 32, offset: 96)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !911, file: !910, line: 4537, baseType: !919, size: 16256, offset: 128)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 16256, elements: !920)
!920 = !{!921}
!921 = !DISubrange(count: 2032)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !911, file: !910, line: 4543, baseType: !923, size: 4224, offset: 16384)
!923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 4224, elements: !930)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !910, line: 4538, size: 128, elements: !925)
!925 = !{!926, !927, !928, !929}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !924, file: !910, line: 4539, baseType: !914, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !924, file: !910, line: 4540, baseType: !914, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !924, file: !910, line: 4541, baseType: !914, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !924, file: !910, line: 4542, baseType: !914, size: 32, offset: 96)
!930 = !{!931}
!931 = !DISubrange(count: 33)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !911, file: !910, line: 4544, baseType: !933, size: 110464, offset: 20608)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 110464, elements: !934)
!934 = !{!935}
!935 = !DISubrange(count: 13808)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !911, file: !910, line: 4550, baseType: !937, size: 24448, offset: 131072)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 24448, elements: !944)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !910, line: 4545, size: 128, elements: !939)
!939 = !{!940, !941, !942, !943}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !938, file: !910, line: 4546, baseType: !914, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !938, file: !910, line: 4547, baseType: !914, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !938, file: !910, line: 4548, baseType: !914, size: 32, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !938, file: !910, line: 4549, baseType: !914, size: 32, offset: 96)
!944 = !{!945}
!945 = !DISubrange(count: 191)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !911, file: !910, line: 4551, baseType: !947, size: 106624, offset: 155520)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 106624, elements: !948)
!948 = !{!949}
!949 = !DISubrange(count: 13328)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !911, file: !910, line: 4574, baseType: !951, size: 128000, offset: 262144)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 128000, elements: !978)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !910, line: 4552, size: 1024, elements: !953)
!953 = !{!954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !974, !975, !976, !977}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !952, file: !910, line: 4553, baseType: !914, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !952, file: !910, line: 4554, baseType: !914, size: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !952, file: !910, line: 4555, baseType: !914, size: 32, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !952, file: !910, line: 4556, baseType: !914, size: 32, offset: 96)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !952, file: !910, line: 4557, baseType: !914, size: 32, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !952, file: !910, line: 4558, baseType: !914, size: 32, offset: 160)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !952, file: !910, line: 4559, baseType: !914, size: 32, offset: 192)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !952, file: !910, line: 4560, baseType: !914, size: 32, offset: 224)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !952, file: !910, line: 4561, baseType: !914, size: 32, offset: 256)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !952, file: !910, line: 4562, baseType: !914, size: 32, offset: 288)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !952, file: !910, line: 4563, baseType: !914, size: 32, offset: 320)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !952, file: !910, line: 4564, baseType: !914, size: 32, offset: 352)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !952, file: !910, line: 4565, baseType: !914, size: 32, offset: 384)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !952, file: !910, line: 4566, baseType: !914, size: 32, offset: 416)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !952, file: !910, line: 4567, baseType: !914, size: 32, offset: 448)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !952, file: !910, line: 4568, baseType: !914, size: 32, offset: 480)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !952, file: !910, line: 4569, baseType: !971, size: 384, offset: 512)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 384, elements: !972)
!972 = !{!973}
!973 = !DISubrange(count: 48)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !952, file: !910, line: 4570, baseType: !914, size: 32, offset: 896)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !952, file: !910, line: 4571, baseType: !914, size: 32, offset: 928)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !952, file: !910, line: 4572, baseType: !914, size: 32, offset: 960)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !952, file: !910, line: 4573, baseType: !914, size: 32, offset: 992)
!978 = !{!979}
!979 = !DISubrange(count: 125)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !910, line: 38320, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 38303, size: 23040, elements: !983)
!983 = !{!984, !986, !988, !989, !990, !991, !995, !999, !1003, !1007, !1011}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !982, file: !910, line: 38304, baseType: !985, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !982, file: !910, line: 38305, baseType: !987, size: 256, offset: 32)
!987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 256, elements: !223)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !982, file: !910, line: 38306, baseType: !914, size: 32, offset: 288)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !982, file: !910, line: 38307, baseType: !914, size: 32, offset: 320)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !982, file: !910, line: 38308, baseType: !914, size: 32, offset: 352)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !982, file: !910, line: 38309, baseType: !992, size: 3712, offset: 384)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 3712, elements: !993)
!993 = !{!994}
!994 = !DISubrange(count: 464)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !982, file: !910, line: 38310, baseType: !996, size: 864, offset: 4096)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 864, elements: !997)
!997 = !{!998}
!998 = !DISubrange(count: 27)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !982, file: !910, line: 38311, baseType: !1000, size: 3232, offset: 4960)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 3232, elements: !1001)
!1001 = !{!1002}
!1002 = !DISubrange(count: 404)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !982, file: !910, line: 38312, baseType: !1004, size: 3776, offset: 8192)
!1004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 3776, elements: !1005)
!1005 = !{!1006}
!1006 = !DISubrange(count: 118)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !982, file: !910, line: 38313, baseType: !1008, size: 4416, offset: 11968)
!1008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 4416, elements: !1009)
!1009 = !{!1010}
!1010 = !DISubrange(count: 552)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !982, file: !910, line: 38319, baseType: !1012, size: 6656, offset: 16384)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1013, size: 6656, elements: !1019)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !910, line: 38314, size: 128, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !1013, file: !910, line: 38315, baseType: !914, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !1013, file: !910, line: 38316, baseType: !914, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !1013, file: !910, line: 38317, baseType: !914, size: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !1013, file: !910, line: 38318, baseType: !914, size: 32, offset: 96)
!1019 = !{!1020}
!1020 = !DISubrange(count: 52)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !910, line: 43319, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 43313, size: 80, elements: !1024)
!1024 = !{!1025, !1027, !1028, !1030, !1031}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !1023, file: !910, line: 43314, baseType: !1026, size: 16)
!1026 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !187)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !1023, file: !910, line: 43315, baseType: !1026, size: 16, offset: 16)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !1023, file: !910, line: 43316, baseType: !1029, size: 16, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !1023, file: !910, line: 43317, baseType: !1026, size: 16, offset: 48)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !1023, file: !910, line: 43318, baseType: !1026, size: 16, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!1033 = !{!620}
!1034 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !1038)
!1037 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1038 = !{!1039, !1046}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1036, file: !1037, line: 60, baseType: !1040, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!103, !1043}
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1045 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1037, line: 48, flags: DIFlagFwdDecl)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1036, file: !1037, line: 65, baseType: !1043, size: 32, offset: 32)
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1049, file: !1056, line: 21, type: !617, isLocal: true, isDefinition: true)
!1049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1051, globals: !1055, splitDebugInlining: false, nameTableKind: None)
!1050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1051 = !{!1052, !103, !102}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1054, line: 22, baseType: !103)
!1054 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1055 = !{!1047}
!1056 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1059, file: !1063, line: 10, type: !1064, isLocal: false, isDefinition: true)
!1059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1060, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1061, globals: !1062, splitDebugInlining: false, nameTableKind: None)
!1060 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1061 = !{!319, !102, !103}
!1062 = !{!1057}
!1063 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !606, line: 16, size: 64, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1065, file: !606, line: 17, baseType: !377, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1065, file: !606, line: 18, baseType: !173, size: 8, offset: 32)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1071, file: !1167, line: 603, type: !1169, isLocal: true, isDefinition: true, align: 32)
!1071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1073, globals: !1164, splitDebugInlining: false, nameTableKind: None)
!1072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1073 = !{!102, !103, !1074}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1077, line: 336, size: 608, elements: !1078)
!1077 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1078 = !{!1079, !1105, !1109, !1113, !1126, !1131, !1137, !1142, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1076, file: !1077, line: 365, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!103, !1083, !1104}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1086, line: 378, size: 192, elements: !1087)
!1086 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1087 = !{!1088, !1089, !1090, !1091, !1097, !1098}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1085, file: !1086, line: 380, baseType: !377, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1085, file: !1086, line: 382, baseType: !13, size: 32, offset: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1085, file: !1086, line: 384, baseType: !13, size: 32, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1085, file: !1086, line: 386, baseType: !1092, size: 32, offset: 96)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1086, line: 351, size: 16, elements: !1094)
!1094 = !{!1095, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1093, file: !1086, line: 359, baseType: !173, size: 8)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1093, file: !1086, line: 364, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1085, file: !1086, line: 388, baseType: !102, size: 32, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1085, file: !1086, line: 396, baseType: !1099, size: 32, offset: 160)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !1086, line: 43, baseType: !1102)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !1103)
!1103 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1076, file: !1077, line: 366, baseType: !1106, size: 32, offset: 32)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !1083, !174}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1076, file: !1077, line: 374, baseType: !1110, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!103, !1083}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1076, file: !1077, line: 377, baseType: !1114, size: 32, offset: 96)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!103, !1083, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1077, line: 122, size: 64, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1125}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1119, file: !1077, line: 123, baseType: !190, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1119, file: !1077, line: 124, baseType: !173, size: 8, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1119, file: !1077, line: 125, baseType: !173, size: 8, offset: 40)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1119, file: !1077, line: 126, baseType: !173, size: 8, offset: 48)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1119, file: !1077, line: 127, baseType: !173, size: 8, offset: 56)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1076, file: !1077, line: 379, baseType: !1127, size: 32, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!103, !1083, !1130}
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1076, file: !1077, line: 384, baseType: !1132, size: 32, offset: 160)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!103, !1083, !1135, !103}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1076, file: !1077, line: 393, baseType: !1138, size: 32, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!103, !1083, !601, !1141}
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1076, file: !1077, line: 402, baseType: !1143, size: 32, offset: 224)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !1083}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1076, file: !1077, line: 405, baseType: !1143, size: 32, offset: 256)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1076, file: !1077, line: 408, baseType: !1110, size: 32, offset: 288)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1076, file: !1077, line: 411, baseType: !1143, size: 32, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1076, file: !1077, line: 414, baseType: !1143, size: 32, offset: 352)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1076, file: !1077, line: 417, baseType: !1110, size: 32, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1076, file: !1077, line: 420, baseType: !1110, size: 32, offset: 416)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1076, file: !1077, line: 423, baseType: !1143, size: 32, offset: 448)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1076, file: !1077, line: 426, baseType: !1143, size: 32, offset: 480)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1076, file: !1077, line: 429, baseType: !1110, size: 32, offset: 512)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1076, file: !1077, line: 432, baseType: !1110, size: 32, offset: 544)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1076, file: !1077, line: 435, baseType: !1157, size: 32, offset: 576)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{null, !1083, !1160, !102}
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1077, line: 142, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{null, !1083, !102}
!1164 = !{!1069, !1165}
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1071, file: !1167, line: 38, type: !1168, isLocal: true, isDefinition: true)
!1167 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !1171)
!1171 = !{!1172, !1173}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1170, file: !1037, line: 60, baseType: !1110, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1170, file: !1037, line: 65, baseType: !1083, size: 32, offset: 32)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !1176, file: !1279, line: 318, type: !1355, isLocal: false, isDefinition: true)
!1176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1177, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1178, retainedTypes: !1195, globals: !1276, splitDebugInlining: false, nameTableKind: None)
!1177 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1178 = !{!1179, !1185, !1190}
!1179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1180, line: 506, baseType: !32, size: 32, elements: !1181)
!1180 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = !{!1182, !1183, !1184}
!1182 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1183 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1184 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1180, line: 512, baseType: !32, size: 32, elements: !1186)
!1186 = !{!1187, !1188, !1189}
!1187 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1188 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1189 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !1191, line: 66, baseType: !32, size: 32, elements: !1192)
!1191 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1192 = !{!1193, !1194}
!1193 = !DIEnumerator(name: "gpioPinClear", value: 0)
!1194 = !DIEnumerator(name: "gpioPinSet", value: 1)
!1195 = !{!1196, !1265, !1270, !1231, !1185, !1179, !1275, !102, !1032, !1246, !307}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1180, line: 523, size: 288, elements: !1199)
!1199 = !{!1200, !1221, !1227, !1232, !1236, !1237, !1238, !1242, !1261}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1198, file: !1180, line: 524, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!103, !1204, !1219, !1220}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1086, line: 378, size: 192, elements: !1207)
!1207 = !{!1208, !1209, !1210, !1211, !1217, !1218}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1206, file: !1086, line: 380, baseType: !377, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1206, file: !1086, line: 382, baseType: !13, size: 32, offset: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1206, file: !1086, line: 384, baseType: !13, size: 32, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1206, file: !1086, line: 386, baseType: !1212, size: 32, offset: 96)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1086, line: 351, size: 16, elements: !1214)
!1214 = !{!1215, !1216}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1213, file: !1086, line: 359, baseType: !173, size: 8)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1213, file: !1086, line: 364, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1206, file: !1086, line: 388, baseType: !102, size: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1206, file: !1086, line: 396, baseType: !1099, size: 32, offset: 160)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1180, line: 237, baseType: !173)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1180, line: 257, baseType: !190)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1198, file: !1180, line: 530, baseType: !1222, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!103, !1204, !1225}
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1180, line: 229, baseType: !190)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1198, file: !1180, line: 532, baseType: !1228, size: 32, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!103, !1204, !1231, !1226}
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1180, line: 216, baseType: !190)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1198, file: !1180, line: 535, baseType: !1233, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!103, !1204, !1231}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1198, file: !1180, line: 537, baseType: !1233, size: 32, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1198, file: !1180, line: 539, baseType: !1233, size: 32, offset: 160)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1198, file: !1180, line: 541, baseType: !1239, size: 32, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!103, !1204, !1219, !1179, !1185}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1198, file: !1180, line: 544, baseType: !1243, size: 32, offset: 224)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!103, !1204, !1246, !279}
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1180, line: 478, size: 96, elements: !1248)
!1248 = !{!1249, !1255, !1260}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1247, file: !1180, line: 482, baseType: !1250, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !114, line: 33, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !114, line: 29, size: 32, elements: !1252)
!1252 = !{!1253}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1251, file: !114, line: 30, baseType: !1254, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1247, file: !1180, line: 485, baseType: !1256, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1180, line: 464, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{null, !1204, !1246, !1231}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1247, file: !1180, line: 493, baseType: !1231, size: 32, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1198, file: !1180, line: 547, baseType: !1262, size: 32, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!190, !1204}
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1180, line: 428, size: 32, elements: !1268)
!1268 = !{!1269}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1267, file: !1180, line: 434, baseType: !1231, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1180, line: 441, size: 32, elements: !1273)
!1273 = !{!1274}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1272, file: !1180, line: 447, baseType: !1231, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1276 = !{!1174, !1277, !1283, !1285, !1295, !1307, !1309, !1340, !1342, !1353}
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1176, file: !1279, line: 318, type: !1280, isLocal: false, isDefinition: true, align: 16)
!1279 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 400, elements: !1281)
!1281 = !{!1282}
!1282 = !DISubrange(count: 25)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1176, file: !1279, line: 318, type: !1205, isLocal: false, isDefinition: true, align: 32)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1176, file: !1279, line: 318, type: !1287, isLocal: true, isDefinition: true, align: 32)
!1287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !1289)
!1289 = !{!1290, !1294}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1288, file: !1037, line: 60, baseType: !1291, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!103, !1204}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1288, file: !1037, line: 65, baseType: !1204, size: 32, offset: 32)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !1176, file: !1279, line: 318, type: !1297, isLocal: true, isDefinition: true)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1279, line: 33, size: 96, elements: !1298)
!1298 = !{!1299, !1300}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1297, file: !1279, line: 35, baseType: !1272, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1297, file: !1279, line: 37, baseType: !1301, size: 64, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !114, line: 40, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !114, line: 35, size: 64, elements: !1303)
!1303 = !{!1304, !1306}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1302, file: !114, line: 36, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1302, file: !114, line: 37, baseType: !1305, size: 32, offset: 32)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1176, file: !1279, line: 318, type: !1213, isLocal: true, isDefinition: true, align: 8)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !1176, file: !1279, line: 318, type: !1311, isLocal: true, isDefinition: true)
!1311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1279, line: 23, size: 128, elements: !1313)
!1313 = !{!1314, !1315, !1328, !1339}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1312, file: !1279, line: 25, baseType: !1267, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1312, file: !1279, line: 26, baseType: !1316, size: 32, offset: 32)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !910, line: 19729, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 19720, size: 256, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1318, file: !910, line: 19721, baseType: !914, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1318, file: !910, line: 19722, baseType: !914, size: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1318, file: !910, line: 19723, baseType: !985, size: 32, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1318, file: !910, line: 19724, baseType: !914, size: 32, offset: 96)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1318, file: !910, line: 19725, baseType: !914, size: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1318, file: !910, line: 19726, baseType: !914, size: 32, offset: 160)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1318, file: !910, line: 19727, baseType: !914, size: 32, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1318, file: !910, line: 19728, baseType: !914, size: 32, offset: 224)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1312, file: !1279, line: 28, baseType: !1329, size: 32, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1332, line: 51, size: 128, elements: !1333)
!1332 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1333 = !{!1334, !1335, !1336, !1337, !1338}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1331, file: !1332, line: 52, baseType: !190, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1331, file: !1332, line: 53, baseType: !190, size: 32, offset: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1331, file: !1332, line: 54, baseType: !190, size: 32, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1331, file: !1332, line: 55, baseType: !173, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1331, file: !1332, line: 56, baseType: !190, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1312, file: !1279, line: 29, baseType: !173, size: 8, offset: 96)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !1176, file: !1279, line: 249, type: !1197, isLocal: true, isDefinition: true)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1344, file: !1279, line: 318, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1344 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1279, file: !1279, line: 318, type: !1292, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !1345)
!1345 = !{!1346}
!1346 = !DILocalVariable(name: "port", arg: 1, scope: !1344, file: !1279, line: 318, type: !1204)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1352}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1347, file: !10, line: 55, baseType: !371, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1347, file: !10, line: 57, baseType: !371, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1347, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1347, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1344, file: !1279, line: 318, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1330, size: 2048, elements: !402)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1358, file: !1363, line: 7, type: !1364, isLocal: false, isDefinition: true, align: 16)
!1358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1360, splitDebugInlining: false, nameTableKind: None)
!1359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1360 = !{!1356, !1361}
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1358, file: !1363, line: 12, type: !1364, isLocal: false, isDefinition: true, align: 16)
!1363 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 48, elements: !1365)
!1365 = !{!1366}
!1366 = !DISubrange(count: 3)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1369, file: !1566, line: 339, type: !1564, isLocal: true, isDefinition: true)
!1369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1370, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1371, retainedTypes: !1457, globals: !1602, splitDebugInlining: false, nameTableKind: None)
!1370 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1371 = !{!30, !1372, !1410, !1438, !1442, !1446, !1451}
!1372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1373, line: 122, baseType: !32, size: 32, elements: !1374)
!1373 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1374 = !{!1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409}
!1375 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1376 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1377 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1378 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1379 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1380 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1381 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1382 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1383 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1384 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1385 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1386 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1387 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1388 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1389 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1390 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1391 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1392 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1393 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1394 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1395 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1396 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1397 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1398 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1399 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1400 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1401 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1402 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1403 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1404 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1405 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1406 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1407 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1408 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1409 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1410 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1373, line: 91, baseType: !32, size: 32, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437}
!1412 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1413 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1414 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1415 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1416 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1417 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1418 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1419 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1420 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1421 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1422 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1423 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1424 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1425 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1426 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1427 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1428 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1429 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1430 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1431 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1432 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1433 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1434 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1435 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1436 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1437 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1438 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1373, line: 60, baseType: !32, size: 32, elements: !1439)
!1439 = !{!1440, !1441}
!1440 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1441 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1373, line: 67, baseType: !32, size: 32, elements: !1443)
!1443 = !{!1444, !1445}
!1444 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1445 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1446 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1373, line: 74, baseType: !32, size: 32, elements: !1447)
!1447 = !{!1448, !1449, !1450}
!1448 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1449 = !DIEnumerator(name: "uartParityEven", value: 256)
!1450 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1451 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1373, line: 82, baseType: !32, size: 32, elements: !1452)
!1452 = !{!1453, !1454, !1455, !1456}
!1453 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1454 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1455 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1456 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1457 = !{!102, !103, !1458, !1537, !1563, !1601, !190, !279, !173}
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1077, line: 336, size: 608, elements: !1461)
!1461 = !{!1462, !1481, !1485, !1489, !1502, !1507, !1511, !1515, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1460, file: !1077, line: 365, baseType: !1463, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!103, !1466, !1104}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1086, line: 378, size: 192, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473, !1479, !1480}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1468, file: !1086, line: 380, baseType: !377, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1468, file: !1086, line: 382, baseType: !13, size: 32, offset: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1468, file: !1086, line: 384, baseType: !13, size: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1468, file: !1086, line: 386, baseType: !1474, size: 32, offset: 96)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1086, line: 351, size: 16, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1475, file: !1086, line: 359, baseType: !173, size: 8)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1475, file: !1086, line: 364, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1468, file: !1086, line: 388, baseType: !102, size: 32, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1468, file: !1086, line: 396, baseType: !1099, size: 32, offset: 160)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1460, file: !1077, line: 366, baseType: !1482, size: 32, offset: 32)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{null, !1466, !174}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1460, file: !1077, line: 374, baseType: !1486, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!103, !1466}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1460, file: !1077, line: 377, baseType: !1490, size: 32, offset: 96)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!103, !1466, !1493}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1077, line: 122, size: 64, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1501}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1495, file: !1077, line: 123, baseType: !190, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1495, file: !1077, line: 124, baseType: !173, size: 8, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1495, file: !1077, line: 125, baseType: !173, size: 8, offset: 40)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1495, file: !1077, line: 126, baseType: !173, size: 8, offset: 48)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1495, file: !1077, line: 127, baseType: !173, size: 8, offset: 56)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1460, file: !1077, line: 379, baseType: !1503, size: 32, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!103, !1466, !1506}
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1460, file: !1077, line: 384, baseType: !1508, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!103, !1466, !1135, !103}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1460, file: !1077, line: 393, baseType: !1512, size: 32, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!103, !1466, !601, !1141}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1460, file: !1077, line: 402, baseType: !1516, size: 32, offset: 224)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{null, !1466}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1460, file: !1077, line: 405, baseType: !1516, size: 32, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1460, file: !1077, line: 408, baseType: !1486, size: 32, offset: 288)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1460, file: !1077, line: 411, baseType: !1516, size: 32, offset: 320)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1460, file: !1077, line: 414, baseType: !1516, size: 32, offset: 352)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1460, file: !1077, line: 417, baseType: !1486, size: 32, offset: 384)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1460, file: !1077, line: 420, baseType: !1486, size: 32, offset: 416)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1460, file: !1077, line: 423, baseType: !1516, size: 32, offset: 448)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1460, file: !1077, line: 426, baseType: !1516, size: 32, offset: 480)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1460, file: !1077, line: 429, baseType: !1486, size: 32, offset: 512)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1460, file: !1077, line: 432, baseType: !1486, size: 32, offset: 544)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1460, file: !1077, line: 435, baseType: !1530, size: 32, offset: 576)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{null, !1466, !1533, !102}
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1077, line: 142, baseType: !1534)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{null, !1466, !102}
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !910, line: 41342, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 41322, size: 1504, elements: !1540)
!1540 = !{!1541, !1542, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1539, file: !910, line: 41323, baseType: !985, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1539, file: !910, line: 41324, baseType: !1543, size: 480, offset: 32)
!1543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 480, elements: !1544)
!1544 = !{!1545}
!1545 = !DISubrange(count: 60)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1539, file: !910, line: 41325, baseType: !914, size: 32, offset: 512)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1539, file: !910, line: 41326, baseType: !1543, size: 480, offset: 544)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1539, file: !910, line: 41327, baseType: !914, size: 32, offset: 1024)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1539, file: !910, line: 41328, baseType: !914, size: 32, offset: 1056)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1539, file: !910, line: 41329, baseType: !914, size: 32, offset: 1088)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1539, file: !910, line: 41330, baseType: !914, size: 32, offset: 1120)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1539, file: !910, line: 41331, baseType: !914, size: 32, offset: 1152)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1539, file: !910, line: 41332, baseType: !914, size: 32, offset: 1184)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1539, file: !910, line: 41333, baseType: !914, size: 32, offset: 1216)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1539, file: !910, line: 41334, baseType: !914, size: 32, offset: 1248)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1539, file: !910, line: 41335, baseType: !914, size: 32, offset: 1280)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1539, file: !910, line: 41336, baseType: !914, size: 32, offset: 1312)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1539, file: !910, line: 41337, baseType: !914, size: 32, offset: 1344)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1539, file: !910, line: 41338, baseType: !985, size: 32, offset: 1376)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1539, file: !910, line: 41339, baseType: !914, size: 32, offset: 1408)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1539, file: !910, line: 41340, baseType: !914, size: 32, offset: 1440)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1539, file: !910, line: 41341, baseType: !914, size: 32, offset: 1472)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1566, line: 29, size: 160, elements: !1567)
!1566 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1567 = !{!1568, !1569, !1570, !1571, !1600}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1565, file: !1566, line: 30, baseType: !1537, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1565, file: !1566, line: 31, baseType: !190, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1565, file: !1566, line: 32, baseType: !173, size: 8, offset: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1565, file: !1566, line: 33, baseType: !1572, size: 32, offset: 96)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1575, line: 60, size: 64, elements: !1576)
!1575 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1576 = !{!1577, !1599}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1574, file: !1575, line: 69, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1575, line: 50, size: 64, elements: !1581)
!1581 = !{!1582, !1597, !1598}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1580, file: !1575, line: 52, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1585)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1332, line: 64, baseType: !1586)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1332, line: 59, size: 160, elements: !1587)
!1587 = !{!1588, !1596}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1586, file: !1332, line: 60, baseType: !1589, size: 128)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1332, line: 51, size: 128, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1589, file: !1332, line: 52, baseType: !190, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1589, file: !1332, line: 53, baseType: !190, size: 32, offset: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1589, file: !1332, line: 54, baseType: !190, size: 32, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1589, file: !1332, line: 55, baseType: !173, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1589, file: !1332, line: 56, baseType: !190, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1586, file: !1332, line: 61, baseType: !190, size: 32, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1580, file: !1575, line: 54, baseType: !173, size: 8, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1580, file: !1575, line: 56, baseType: !173, size: 8, offset: 40)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1574, file: !1575, line: 71, baseType: !173, size: 8, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1565, file: !1566, line: 35, baseType: !1516, size: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!1602 = !{!1603, !1608, !1610, !1617, !1623, !1625, !1367, !1627, !1629, !1632, !1635}
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1369, file: !1566, line: 339, type: !1605, isLocal: false, isDefinition: true, align: 16)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 96, elements: !1606)
!1606 = !{!1607}
!1607 = !DISubrange(count: 6)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1369, file: !1566, line: 339, type: !1467, isLocal: false, isDefinition: true, align: 32)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1369, file: !1566, line: 339, type: !1612, isLocal: true, isDefinition: true, align: 32)
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1613, file: !1037, line: 60, baseType: !1486, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1613, file: !1037, line: 65, baseType: !1466, size: 32, offset: 32)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1369, file: !1566, line: 339, type: !1619, isLocal: true, isDefinition: true)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1566, line: 39, size: 64, elements: !1620)
!1620 = !{!1621, !1622}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1619, file: !1566, line: 41, baseType: !1533, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1619, file: !1566, line: 42, baseType: !102, size: 32, offset: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1369, file: !1566, line: 339, type: !1475, isLocal: true, isDefinition: true, align: 8)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1369, file: !1566, line: 270, type: !1459, isLocal: true, isDefinition: true)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1369, file: !1566, line: 339, type: !1573, isLocal: true, isDefinition: true)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1369, file: !1566, line: 339, type: !1631, isLocal: true, isDefinition: true)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1579, size: 64, elements: !434)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1369, file: !1566, line: 339, type: !1634, isLocal: true, isDefinition: true)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1584, size: 320, elements: !162)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1637, file: !1566, line: 339, type: !1640, isLocal: true, isDefinition: true, align: 32)
!1637 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1566, file: !1566, line: 339, type: !1517, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !1638)
!1638 = !{!1639}
!1639 = !DILocalVariable(name: "dev", arg: 1, scope: !1637, file: !1566, line: 339, type: !1466)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1640, file: !10, line: 55, baseType: !371, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1640, file: !10, line: 57, baseType: !371, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1640, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1640, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1648, file: !1873, line: 65, type: !914, isLocal: true, isDefinition: true)
!1648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1650, retainedTypes: !1791, globals: !1870, splitDebugInlining: false, nameTableKind: None)
!1649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1650 = !{!1651}
!1651 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !910, line: 103, baseType: !103, size: 32, elements: !1652)
!1652 = !{!1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790}
!1653 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1654 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1655 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1656 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1657 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1658 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1659 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1660 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1661 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1662 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1663 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1664 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1665 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1666 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1667 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1668 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1669 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1670 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1671 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1672 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1673 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1674 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1675 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1676 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1677 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1678 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1679 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1680 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1681 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1682 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1683 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1684 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1685 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1686 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1687 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1688 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1689 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1690 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1691 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1692 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1693 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1694 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1695 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1696 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1697 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1698 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1699 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1700 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1701 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1702 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1703 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1704 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1705 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1706 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1707 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1708 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1709 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1710 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1711 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1712 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1713 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1714 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1715 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1716 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1717 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1718 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1719 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1720 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1721 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1722 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1723 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1724 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1725 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1726 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1727 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1728 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1729 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1730 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1731 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1732 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1733 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1734 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1735 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1736 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1737 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1738 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1739 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1740 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1741 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1742 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1743 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1744 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1745 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1746 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1747 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1748 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1749 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1750 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1751 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1752 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1753 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1754 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1755 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1756 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1757 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1758 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1759 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1760 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1761 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1762 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1763 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1764 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1765 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1766 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1767 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1768 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1769 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1770 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1771 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1772 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1773 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1774 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1775 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1776 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1777 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1778 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1779 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1780 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1781 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1782 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1783 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1784 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1785 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1786 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1787 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1788 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1789 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1790 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1791 = !{!319, !1792, !371, !173, !190, !1801, !1834}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1794, line: 770, baseType: !1795)
!1794 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 764, size: 128, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1795, file: !1794, line: 766, baseType: !914, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1795, file: !1794, line: 767, baseType: !914, size: 32, offset: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1795, file: !1794, line: 768, baseType: !914, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1795, file: !1794, line: 769, baseType: !985, size: 32, offset: 96)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1794, line: 426, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 411, size: 28704, elements: !1804)
!1804 = !{!1805, !1809, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1824, !1829, !1833}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1803, file: !1794, line: 413, baseType: !1806, size: 256)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 256, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 8)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1803, file: !1794, line: 414, baseType: !1810, size: 768, offset: 256)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 768, elements: !1811)
!1811 = !{!1812}
!1812 = !DISubrange(count: 24)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1803, file: !1794, line: 415, baseType: !1806, size: 256, offset: 1024)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1803, file: !1794, line: 416, baseType: !1810, size: 768, offset: 1280)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1803, file: !1794, line: 417, baseType: !1806, size: 256, offset: 2048)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1803, file: !1794, line: 418, baseType: !1810, size: 768, offset: 2304)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1803, file: !1794, line: 419, baseType: !1806, size: 256, offset: 3072)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1803, file: !1794, line: 420, baseType: !1810, size: 768, offset: 3328)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1803, file: !1794, line: 421, baseType: !1806, size: 256, offset: 4096)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1803, file: !1794, line: 422, baseType: !1821, size: 1792, offset: 4352)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 1792, elements: !1822)
!1822 = !{!1823}
!1823 = !DISubrange(count: 56)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1803, file: !1794, line: 423, baseType: !1825, size: 1920, offset: 6144)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1920, elements: !1827)
!1826 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!1827 = !{!1828}
!1828 = !DISubrange(count: 240)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1803, file: !1794, line: 424, baseType: !1830, size: 20608, offset: 8064)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 20608, elements: !1831)
!1831 = !{!1832}
!1832 = !DISubrange(count: 644)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1803, file: !1794, line: 425, baseType: !914, size: 32, offset: 28672)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841, !1842, !1843, !1844, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1857, !1858, !1859, !1863, !1867, !1869}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1836, file: !1794, line: 447, baseType: !985, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1836, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1836, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1836, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1836, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1836, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1836, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 96, elements: !1846)
!1846 = !{!1847}
!1847 = !DISubrange(count: 12)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1836, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1836, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1836, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1836, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1836, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1836, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1836, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1836, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 64, elements: !162)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1836, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1836, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1836, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 128, elements: !1861)
!1861 = !{!1862}
!1862 = !DISubrange(count: 4)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1836, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 160, elements: !1865)
!1865 = !{!1866}
!1866 = !DISubrange(count: 5)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1836, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 160, elements: !1865)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1836, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!1870 = !{!1871, !1897, !1902, !1904, !1906, !1646}
!1871 = !DIGlobalVariableExpression(var: !1872, expr: !DIExpression())
!1872 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1648, file: !1873, line: 285, type: !1874, isLocal: true, isDefinition: true, align: 32)
!1873 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !1876)
!1876 = !{!1877, !1896}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1875, file: !1037, line: 60, baseType: !1878, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!103, !1881}
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1086, line: 378, size: 192, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1894, !1895}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1883, file: !1086, line: 380, baseType: !377, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1883, file: !1086, line: 382, baseType: !13, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1883, file: !1086, line: 384, baseType: !13, size: 32, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1883, file: !1086, line: 386, baseType: !1889, size: 32, offset: 96)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1086, line: 351, size: 16, elements: !1891)
!1891 = !{!1892, !1893}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1890, file: !1086, line: 359, baseType: !173, size: 8)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1890, file: !1086, line: 364, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1883, file: !1086, line: 388, baseType: !102, size: 32, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1883, file: !1086, line: 396, baseType: !1099, size: 32, offset: 160)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1875, file: !1037, line: 65, baseType: !1881, size: 32, offset: 32)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "lock", scope: !1648, file: !1873, line: 34, type: !1899, isLocal: true, isDefinition: true)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !1900)
!1900 = !{!1901}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1899, file: !244, line: 52, baseType: !22, size: 32)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "last_load", scope: !1648, file: !1873, line: 36, type: !190, isLocal: true, isDefinition: true)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1648, file: !1873, line: 48, type: !190, isLocal: true, isDefinition: true)
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1648, file: !1873, line: 54, type: !190, isLocal: true, isDefinition: true)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1910, file: !1914, line: 69, type: !1915, isLocal: true, isDefinition: true, align: 32)
!1910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1912, globals: !1913, splitDebugInlining: false, nameTableKind: None)
!1911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1912 = !{!1032, !22}
!1913 = !{!1908}
!1914 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !1917)
!1917 = !{!1918, !1937}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1916, file: !1037, line: 60, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!103, !1922}
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1086, line: 378, size: 192, elements: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1935, !1936}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1924, file: !1086, line: 380, baseType: !377, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1924, file: !1086, line: 382, baseType: !13, size: 32, offset: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1924, file: !1086, line: 384, baseType: !13, size: 32, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1924, file: !1086, line: 386, baseType: !1930, size: 32, offset: 96)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1086, line: 351, size: 16, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1931, file: !1086, line: 359, baseType: !173, size: 8)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1931, file: !1086, line: 364, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1924, file: !1086, line: 388, baseType: !102, size: 32, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1924, file: !1086, line: 396, baseType: !1099, size: 32, offset: 160)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1916, file: !1037, line: 65, baseType: !1922, size: 32, offset: 32)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1940, file: !1943, line: 23, type: !1141, isLocal: false, isDefinition: true)
!1940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, globals: !1942, splitDebugInlining: false, nameTableKind: None)
!1941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1942 = !{!1938}
!1943 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1946, file: !1950, line: 37, type: !2197, isLocal: false, isDefinition: true)
!1946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1948, retainedTypes: !1957, globals: !2030, splitDebugInlining: false, nameTableKind: None)
!1947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!1948 = !{!1949, !30, !1651}
!1949 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1950, line: 63, baseType: !32, size: 32, elements: !1951)
!1950 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1951 = !{!1952, !1953, !1954, !1955, !1956}
!1952 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1953 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1954 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1955 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1956 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1957 = !{!239, !102, !103, !1958, !307, !190, !1988, !371, !173, !2013}
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1961, line: 51, size: 64, elements: !1962)
!1961 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1962 = !{!1963, !1983}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1960, file: !1961, line: 52, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1961, line: 38, baseType: !1965)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!103, !1968, !601, !187}
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1086, line: 378, size: 192, elements: !1971)
!1971 = !{!1972, !1973, !1974, !1975, !1981, !1982}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1970, file: !1086, line: 380, baseType: !377, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1970, file: !1086, line: 382, baseType: !13, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1970, file: !1086, line: 384, baseType: !13, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1970, file: !1086, line: 386, baseType: !1976, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1086, line: 351, size: 16, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1977, file: !1086, line: 359, baseType: !173, size: 8)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1977, file: !1086, line: 364, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1970, file: !1086, line: 388, baseType: !102, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1970, file: !1086, line: 396, baseType: !1099, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1960, file: !1961, line: 53, baseType: !1984, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1961, line: 47, baseType: !1985)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!103, !1968, !601, !187, !190}
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !1991)
!1991 = !{!1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1990, file: !1794, line: 447, baseType: !985, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1990, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1990, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1990, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1990, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1990, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1990, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1990, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1990, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1990, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1990, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1990, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1990, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1990, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1990, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1990, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1990, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1990, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1990, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1990, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1990, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1794, line: 426, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 411, size: 28704, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2015, file: !1794, line: 413, baseType: !1806, size: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2015, file: !1794, line: 414, baseType: !1810, size: 768, offset: 256)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2015, file: !1794, line: 415, baseType: !1806, size: 256, offset: 1024)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2015, file: !1794, line: 416, baseType: !1810, size: 768, offset: 1280)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2015, file: !1794, line: 417, baseType: !1806, size: 256, offset: 2048)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2015, file: !1794, line: 418, baseType: !1810, size: 768, offset: 2304)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2015, file: !1794, line: 419, baseType: !1806, size: 256, offset: 3072)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2015, file: !1794, line: 420, baseType: !1810, size: 768, offset: 3328)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2015, file: !1794, line: 421, baseType: !1806, size: 256, offset: 4096)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2015, file: !1794, line: 422, baseType: !1821, size: 1792, offset: 4352)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2015, file: !1794, line: 423, baseType: !1825, size: 1920, offset: 6144)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2015, file: !1794, line: 424, baseType: !1830, size: 20608, offset: 8064)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2015, file: !1794, line: 425, baseType: !914, size: 32, offset: 28672)
!2030 = !{!1944, !2031, !2151, !2157, !2159, !2162, !2167, !2169, !2174}
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "_kernel", scope: !1946, file: !1950, line: 40, type: !2033, isLocal: false, isDefinition: true)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !167, line: 158, size: 288, elements: !2034)
!2034 = !{!2035, !2146}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2033, file: !167, line: 159, baseType: !2036, size: 192)
!2036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2037, size: 192, elements: !434)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !167, line: 100, size: 192, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2139, !2140, !2141, !2142}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2037, file: !167, line: 102, baseType: !190, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2037, file: !167, line: 105, baseType: !307, size: 32, offset: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2037, file: !167, line: 108, baseType: !2042, size: 32, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 32)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !2044)
!2044 = !{!2045, !2103, !2115, !2116, !2117, !2118, !2119, !2134}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2043, file: !131, line: 247, baseType: !2046, size: 384)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !2047)
!2047 = !{!2048, !2072, !2079, !2080, !2081, !2090, !2091, !2092}
!2048 = !DIDerivedType(tag: DW_TAG_member, scope: !2046, file: !131, line: 60, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2046, file: !131, line: 60, size: 64, elements: !2050)
!2050 = !{!2051, !2066}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2049, file: !131, line: 61, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2054)
!2054 = !{!2055, !2061}
!2055 = !DIDerivedType(tag: DW_TAG_member, scope: !2053, file: !141, line: 38, baseType: !2056, size: 32)
!2056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2053, file: !141, line: 38, size: 32, elements: !2057)
!2057 = !{!2058, !2060}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2056, file: !141, line: 39, baseType: !2059, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2056, file: !141, line: 40, baseType: !2059, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, scope: !2053, file: !141, line: 42, baseType: !2062, size: 32, offset: 32)
!2062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2053, file: !141, line: 42, size: 32, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2062, file: !141, line: 43, baseType: !2059, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2062, file: !141, line: 44, baseType: !2059, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2049, file: !131, line: 62, baseType: !2067, size: 64)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2068)
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2067, file: !157, line: 50, baseType: !2070, size: 64)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2071, size: 64, elements: !162)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2046, file: !131, line: 68, baseType: !2073, size: 32, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !2076)
!2076 = !{!2077}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2075, file: !167, line: 232, baseType: !2078, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2053)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2046, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2046, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!2081 = !DIDerivedType(tag: DW_TAG_member, scope: !2046, file: !131, line: 90, baseType: !2082, size: 16, offset: 112)
!2082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2046, file: !131, line: 90, size: 16, elements: !2083)
!2083 = !{!2084, !2089}
!2084 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !131, line: 91, baseType: !2085, size: 16)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !131, line: 91, size: 16, elements: !2086)
!2086 = !{!2087, !2088}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2085, file: !131, line: 96, baseType: !183, size: 8)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2085, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2082, file: !131, line: 100, baseType: !187, size: 16)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2046, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2046, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2046, file: !131, line: 131, baseType: !2093, size: 192, offset: 192)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !2094)
!2094 = !{!2095, !2096, !2102}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2093, file: !167, line: 245, baseType: !2052, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2093, file: !167, line: 246, baseType: !2097, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !2101}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2093, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2043, file: !131, line: 250, baseType: !2104, size: 288, offset: 384)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2104, file: !207, line: 26, baseType: !190, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2104, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2104, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2104, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2104, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2104, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2104, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2104, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2104, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2043, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2043, file: !131, line: 256, baseType: !2074, size: 64, offset: 704)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2043, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2043, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2043, file: !131, line: 325, baseType: !2120, size: 32, offset: 1056)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !2122)
!2122 = !{!2123, !2129, !2130}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2121, file: !110, line: 5074, baseType: !2124, size: 96)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !2125)
!2125 = !{!2126, !2127, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2124, file: !232, line: 57, baseType: !235, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2124, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2124, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2121, file: !110, line: 5075, baseType: !2074, size: 64, offset: 96)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2121, file: !110, line: 5076, baseType: !2131, size: 32, offset: 160)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2132)
!2132 = !{!2133}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2131, file: !244, line: 52, baseType: !22, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2043, file: !131, line: 343, baseType: !2135, size: 64, offset: 1088)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2135, file: !207, line: 63, baseType: !190, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2135, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2037, file: !167, line: 111, baseType: !2042, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2037, file: !167, line: 124, baseType: !103, size: 32, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2037, file: !167, line: 127, baseType: !173, size: 8, offset: 160)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2037, file: !167, line: 153, baseType: !2143, offset: 168)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2144, line: 33, elements: !2145)
!2144 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2145 = !{}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2033, file: !167, line: 170, baseType: !2147, size: 96, offset: 192)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !167, line: 83, size: 96, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2147, file: !167, line: 86, baseType: !2042, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2147, file: !167, line: 90, baseType: !2078, size: 64, offset: 32)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1946, file: !1950, line: 43, type: !2153, isLocal: false, isDefinition: true, align: 64)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2154, size: 8192, elements: !407)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !356, line: 47, size: 8, elements: !2155)
!2155 = !{!2156}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2154, file: !356, line: 48, baseType: !222, size: 8)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1946, file: !1950, line: 44, type: !2043, isLocal: false, isDefinition: true)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1946, file: !1950, line: 48, type: !2161, isLocal: false, isDefinition: true)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2043, size: 1152, elements: !434)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1946, file: !1950, line: 86, type: !2164, isLocal: false, isDefinition: true, align: 64)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2154, size: 16384, elements: !2165)
!2165 = !{!435, !2166}
!2166 = !DISubrange(count: 2048)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1946, file: !1950, line: 217, type: !279, isLocal: false, isDefinition: true)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1946, file: !1950, line: 50, type: !2171, isLocal: true, isDefinition: true, align: 64)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2154, size: 2560, elements: !2172)
!2172 = !{!435, !2173}
!2173 = !DISubrange(count: 320)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "levels", scope: !2176, file: !1950, line: 232, type: !2196, isLocal: true, isDefinition: true)
!2176 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1950, file: !1950, line: 230, type: !2177, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !2179)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{null, !1949}
!2179 = !{!2180, !2181, !2191, !2195}
!2180 = !DILocalVariable(name: "level", arg: 1, scope: !2176, file: !1950, line: 230, type: !1949)
!2181 = !DILocalVariable(name: "entry", scope: !2176, file: !1950, line: 244, type: !2182)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !2185)
!2185 = !{!2186, !2190}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2184, file: !1037, line: 60, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!103, !1968}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2184, file: !1037, line: 65, baseType: !1968, size: 32, offset: 32)
!2191 = !DILocalVariable(name: "dev", scope: !2192, file: !1950, line: 247, type: !1968)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !1950, line: 246, column: 64)
!2193 = distinct !DILexicalBlock(scope: !2194, file: !1950, line: 246, column: 2)
!2194 = distinct !DILexicalBlock(scope: !2176, file: !1950, line: 246, column: 2)
!2195 = !DILocalVariable(name: "rc", scope: !2192, file: !1950, line: 248, type: !103)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2182, size: 192, elements: !1606)
!2197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2198)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !606, line: 16, size: 64, elements: !2199)
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2198, file: !606, line: 17, baseType: !377, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2198, file: !606, line: 18, baseType: !173, size: 8, offset: 32)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "states_str", scope: !2204, file: !2205, line: 276, type: !2324, isLocal: true, isDefinition: true)
!2204 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2205, file: !2205, line: 271, type: !2206, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !2315)
!2205 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!377, !2208, !307, !239}
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !2209)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !2211)
!2211 = !{!2212, !2270, !2282, !2283, !2284, !2285, !2286, !2301}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2210, file: !131, line: 247, baseType: !2213, size: 384)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !2214)
!2214 = !{!2215, !2239, !2246, !2247, !2248, !2257, !2258, !2259}
!2215 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !131, line: 60, baseType: !2216, size: 64)
!2216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !131, line: 60, size: 64, elements: !2217)
!2217 = !{!2218, !2233}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2216, file: !131, line: 61, baseType: !2219, size: 64)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2220)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2221)
!2221 = !{!2222, !2228}
!2222 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !141, line: 38, baseType: !2223, size: 32)
!2223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2220, file: !141, line: 38, size: 32, elements: !2224)
!2224 = !{!2225, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2223, file: !141, line: 39, baseType: !2226, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2223, file: !141, line: 40, baseType: !2226, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !141, line: 42, baseType: !2229, size: 32, offset: 32)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2220, file: !141, line: 42, size: 32, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2229, file: !141, line: 43, baseType: !2226, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2229, file: !141, line: 44, baseType: !2226, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2216, file: !131, line: 62, baseType: !2234, size: 64)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2235)
!2235 = !{!2236}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2234, file: !157, line: 50, baseType: !2237, size: 64)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, size: 64, elements: !162)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2213, file: !131, line: 68, baseType: !2240, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !2243)
!2243 = !{!2244}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2242, file: !167, line: 232, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2220)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2213, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2213, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !131, line: 90, baseType: !2249, size: 16, offset: 112)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !131, line: 90, size: 16, elements: !2250)
!2250 = !{!2251, !2256}
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2249, file: !131, line: 91, baseType: !2252, size: 16)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2249, file: !131, line: 91, size: 16, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2252, file: !131, line: 96, baseType: !183, size: 8)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2252, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2249, file: !131, line: 100, baseType: !187, size: 16)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2213, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2213, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2213, file: !131, line: 131, baseType: !2260, size: 192, offset: 192)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !2261)
!2261 = !{!2262, !2263, !2269}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2260, file: !167, line: 245, baseType: !2219, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2260, file: !167, line: 246, baseType: !2264, size: 32, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !2265)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{null, !2268}
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2260, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2210, file: !131, line: 250, baseType: !2271, size: 288, offset: 384)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2271, file: !207, line: 26, baseType: !190, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2271, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2271, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2271, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2271, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2271, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2271, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2271, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2271, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2210, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2210, file: !131, line: 256, baseType: !2241, size: 64, offset: 704)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2210, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2210, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2210, file: !131, line: 325, baseType: !2287, size: 32, offset: 1056)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !2289)
!2289 = !{!2290, !2296, !2297}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2288, file: !110, line: 5074, baseType: !2291, size: 96)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !2292)
!2292 = !{!2293, !2294, !2295}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2291, file: !232, line: 57, baseType: !235, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2291, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2291, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2288, file: !110, line: 5075, baseType: !2241, size: 64, offset: 96)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2288, file: !110, line: 5076, baseType: !2298, size: 32, offset: 160)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2299)
!2299 = !{!2300}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2298, file: !244, line: 52, baseType: !22, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2210, file: !131, line: 343, baseType: !2302, size: 64, offset: 1088)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !2303)
!2303 = !{!2304, !2305}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2302, file: !207, line: 63, baseType: !190, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2302, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!2306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2308, globals: !2310, splitDebugInlining: false, nameTableKind: None)
!2307 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2308 = !{!102, !377, !319, !173, !22, !103, !2309, !24, !239, !307, !190, !321}
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2310 = !{!2202, !2311}
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "states_sz", scope: !2204, file: !2205, line: 279, type: !2313, isLocal: true, isDefinition: true)
!2313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2314, size: 256, elements: !1807)
!2314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!2315 = !{!2316, !2317, !2318, !2319, !2320, !2321, !2322}
!2316 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2204, file: !2205, line: 271, type: !2208)
!2317 = !DILocalVariable(name: "buf", arg: 2, scope: !2204, file: !2205, line: 271, type: !307)
!2318 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2204, file: !2205, line: 271, type: !239)
!2319 = !DILocalVariable(name: "off", scope: !2204, file: !2205, line: 273, type: !239)
!2320 = !DILocalVariable(name: "bit", scope: !2204, file: !2205, line: 274, type: !173)
!2321 = !DILocalVariable(name: "thread_state", scope: !2204, file: !2205, line: 275, type: !173)
!2322 = !DILocalVariable(name: "index", scope: !2323, file: !2205, line: 293, type: !173)
!2323 = distinct !DILexicalBlock(scope: !2204, file: !2205, line: 293, column: 2)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 256, elements: !1807)
!2325 = !DIGlobalVariableExpression(var: !2326, expr: !DIExpression())
!2326 = distinct !DIGlobalVariable(name: "lock", scope: !2327, file: !2429, line: 47, type: !2420, isLocal: true, isDefinition: true)
!2327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2328, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2329, globals: !2428, splitDebugInlining: false, nameTableKind: None)
!2328 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2329 = !{!279, !102, !103, !2330, !2345}
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2332)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2333)
!2333 = !{!2334, !2340}
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !141, line: 38, baseType: !2335, size: 32)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !141, line: 38, size: 32, elements: !2336)
!2336 = !{!2337, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2335, file: !141, line: 39, baseType: !2338, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2335, file: !141, line: 40, baseType: !2338, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !141, line: 42, baseType: !2341, size: 32, offset: 32)
!2341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !141, line: 42, size: 32, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2341, file: !141, line: 43, baseType: !2338, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2341, file: !141, line: 44, baseType: !2338, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !2347)
!2347 = !{!2348, !2392, !2404, !2405, !2406, !2407, !2408, !2423}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2346, file: !131, line: 247, baseType: !2349, size: 384)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !2350)
!2350 = !{!2351, !2361, !2368, !2369, !2370, !2379, !2380, !2381}
!2351 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !131, line: 60, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !131, line: 60, size: 64, elements: !2353)
!2353 = !{!2354, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2352, file: !131, line: 61, baseType: !2331, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2352, file: !131, line: 62, baseType: !2356, size: 64)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2357)
!2357 = !{!2358}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2356, file: !157, line: 50, baseType: !2359, size: 64)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2360, size: 64, elements: !162)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2349, file: !131, line: 68, baseType: !2362, size: 32, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2364, file: !167, line: 232, baseType: !2367, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2332)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2349, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2349, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!2370 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !131, line: 90, baseType: !2371, size: 16, offset: 112)
!2371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !131, line: 90, size: 16, elements: !2372)
!2372 = !{!2373, !2378}
!2373 = !DIDerivedType(tag: DW_TAG_member, scope: !2371, file: !131, line: 91, baseType: !2374, size: 16)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2371, file: !131, line: 91, size: 16, elements: !2375)
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2374, file: !131, line: 96, baseType: !183, size: 8)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2374, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2371, file: !131, line: 100, baseType: !187, size: 16)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2349, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2349, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2349, file: !131, line: 131, baseType: !2382, size: 192, offset: 192)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !2383)
!2383 = !{!2384, !2385, !2391}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2382, file: !167, line: 245, baseType: !2331, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2382, file: !167, line: 246, baseType: !2386, size: 32, offset: 64)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !2387)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{null, !2390}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2382, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2346, file: !131, line: 250, baseType: !2393, size: 288, offset: 384)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2393, file: !207, line: 26, baseType: !190, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2393, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2393, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2393, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2393, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2393, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2393, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2393, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2393, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2346, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2346, file: !131, line: 256, baseType: !2363, size: 64, offset: 704)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2346, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2346, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2346, file: !131, line: 325, baseType: !2409, size: 32, offset: 1056)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !2411)
!2411 = !{!2412, !2418, !2419}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2410, file: !110, line: 5074, baseType: !2413, size: 96)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !2414)
!2414 = !{!2415, !2416, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2413, file: !232, line: 57, baseType: !235, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2413, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2413, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2410, file: !110, line: 5075, baseType: !2363, size: 64, offset: 96)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2410, file: !110, line: 5076, baseType: !2420, size: 32, offset: 160)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2421)
!2421 = !{!2422}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2420, file: !244, line: 52, baseType: !22, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2346, file: !131, line: 343, baseType: !2424, size: 64, offset: 1088)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !2425)
!2425 = !{!2426, !2427}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2424, file: !207, line: 63, baseType: !190, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2424, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!2428 = !{!2325}
!2429 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(name: "lock", scope: !2432, file: !2451, line: 39, type: !2452, isLocal: true, isDefinition: true)
!2432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2434, globals: !2450, splitDebugInlining: false, nameTableKind: None)
!2433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2434 = !{!102, !279, !103, !2435}
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2437)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2438)
!2438 = !{!2439, !2445}
!2439 = !DIDerivedType(tag: DW_TAG_member, scope: !2437, file: !141, line: 38, baseType: !2440, size: 32)
!2440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2437, file: !141, line: 38, size: 32, elements: !2441)
!2441 = !{!2442, !2444}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2440, file: !141, line: 39, baseType: !2443, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2440, file: !141, line: 40, baseType: !2443, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !2437, file: !141, line: 42, baseType: !2446, size: 32, offset: 32)
!2446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2437, file: !141, line: 42, size: 32, elements: !2447)
!2447 = !{!2448, !2449}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2446, file: !141, line: 43, baseType: !2443, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2446, file: !141, line: 44, baseType: !2443, size: 32)
!2450 = !{!2430}
!2451 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2453)
!2453 = !{!2454}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2452, file: !244, line: 52, baseType: !22, size: 32)
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(name: "lock", scope: !2457, file: !2636, line: 63, type: !2591, isLocal: true, isDefinition: true)
!2457 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2458, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2459, retainedTypes: !2483, globals: !2633, splitDebugInlining: false, nameTableKind: None)
!2458 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/work.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2459 = !{!2460, !30}
!2460 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !110, line: 3591, baseType: !32, size: 32, elements: !2461)
!2461 = !{!2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482}
!2462 = !DIEnumerator(name: "K_WORK_RUNNING_BIT", value: 0)
!2463 = !DIEnumerator(name: "K_WORK_CANCELING_BIT", value: 1)
!2464 = !DIEnumerator(name: "K_WORK_QUEUED_BIT", value: 2)
!2465 = !DIEnumerator(name: "K_WORK_DELAYED_BIT", value: 3)
!2466 = !DIEnumerator(name: "K_WORK_MASK", value: 15)
!2467 = !DIEnumerator(name: "K_WORK_DELAYABLE_BIT", value: 8)
!2468 = !DIEnumerator(name: "K_WORK_DELAYABLE", value: 256)
!2469 = !DIEnumerator(name: "K_WORK_QUEUE_STARTED_BIT", value: 0)
!2470 = !DIEnumerator(name: "K_WORK_QUEUE_STARTED", value: 1)
!2471 = !DIEnumerator(name: "K_WORK_QUEUE_BUSY_BIT", value: 1)
!2472 = !DIEnumerator(name: "K_WORK_QUEUE_BUSY", value: 2)
!2473 = !DIEnumerator(name: "K_WORK_QUEUE_DRAIN_BIT", value: 2)
!2474 = !DIEnumerator(name: "K_WORK_QUEUE_DRAIN", value: 4)
!2475 = !DIEnumerator(name: "K_WORK_QUEUE_PLUGGED_BIT", value: 3)
!2476 = !DIEnumerator(name: "K_WORK_QUEUE_PLUGGED", value: 8)
!2477 = !DIEnumerator(name: "K_WORK_QUEUE_NO_YIELD_BIT", value: 8)
!2478 = !DIEnumerator(name: "K_WORK_QUEUE_NO_YIELD", value: 256)
!2479 = !DIEnumerator(name: "K_WORK_RUNNING", value: 1)
!2480 = !DIEnumerator(name: "K_WORK_CANCELING", value: 2)
!2481 = !DIEnumerator(name: "K_WORK_QUEUED", value: 4)
!2482 = !DIEnumerator(name: "K_WORK_DELAYED", value: 8)
!2483 = !{!102, !319, !103, !2484, !307, !2610, !2620, !2499, !2621, !2627}
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work", file: !110, line: 3663, size: 128, elements: !2486)
!2486 = !{!2487, !2493, !2498, !2609}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2485, file: !110, line: 3669, baseType: !2488, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !114, line: 33, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !114, line: 29, size: 32, elements: !2490)
!2490 = !{!2491}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2489, file: !114, line: 30, baseType: !2492, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2485, file: !110, line: 3672, baseType: !2494, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_work_handler_t", file: !110, line: 3071, baseType: !2495)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{null, !2484}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2485, file: !110, line: 3675, baseType: !2499, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work_q", file: !110, line: 3810, size: 1408, elements: !2501)
!2501 = !{!2502, !2599, !2606, !2607, !2608}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2500, file: !110, line: 3812, baseType: !2503, size: 1152)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !2504)
!2504 = !{!2505, !2563, !2575, !2576, !2577, !2578, !2579, !2594}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2503, file: !131, line: 247, baseType: !2506, size: 384)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !2507)
!2507 = !{!2508, !2532, !2539, !2540, !2541, !2550, !2551, !2552}
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2506, file: !131, line: 60, baseType: !2509, size: 64)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2506, file: !131, line: 60, size: 64, elements: !2510)
!2510 = !{!2511, !2526}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2509, file: !131, line: 61, baseType: !2512, size: 64)
!2512 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2513)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2514)
!2514 = !{!2515, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, scope: !2513, file: !141, line: 38, baseType: !2516, size: 32)
!2516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2513, file: !141, line: 38, size: 32, elements: !2517)
!2517 = !{!2518, !2520}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2516, file: !141, line: 39, baseType: !2519, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2516, file: !141, line: 40, baseType: !2519, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2513, file: !141, line: 42, baseType: !2522, size: 32, offset: 32)
!2522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2513, file: !141, line: 42, size: 32, elements: !2523)
!2523 = !{!2524, !2525}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2522, file: !141, line: 43, baseType: !2519, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2522, file: !141, line: 44, baseType: !2519, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2509, file: !131, line: 62, baseType: !2527, size: 64)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2528)
!2528 = !{!2529}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2527, file: !157, line: 50, baseType: !2530, size: 64)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 64, elements: !162)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2506, file: !131, line: 68, baseType: !2533, size: 32, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !2535)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !2536)
!2536 = !{!2537}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2535, file: !167, line: 232, baseType: !2538, size: 64)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2513)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2506, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2506, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2506, file: !131, line: 90, baseType: !2542, size: 16, offset: 112)
!2542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2506, file: !131, line: 90, size: 16, elements: !2543)
!2543 = !{!2544, !2549}
!2544 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !131, line: 91, baseType: !2545, size: 16)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2542, file: !131, line: 91, size: 16, elements: !2546)
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2545, file: !131, line: 96, baseType: !183, size: 8)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2545, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2542, file: !131, line: 100, baseType: !187, size: 16)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2506, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2506, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2506, file: !131, line: 131, baseType: !2553, size: 192, offset: 192)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !2554)
!2554 = !{!2555, !2556, !2562}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2553, file: !167, line: 245, baseType: !2512, size: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2553, file: !167, line: 246, baseType: !2557, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !2558)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{null, !2561}
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2553, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2503, file: !131, line: 250, baseType: !2564, size: 288, offset: 384)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !2565)
!2565 = !{!2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2564, file: !207, line: 26, baseType: !190, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2564, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2564, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2564, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2564, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2564, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2564, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2564, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2564, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2503, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2503, file: !131, line: 256, baseType: !2534, size: 64, offset: 704)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2503, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2503, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2503, file: !131, line: 325, baseType: !2580, size: 32, offset: 1056)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !2582)
!2582 = !{!2583, !2589, !2590}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2581, file: !110, line: 5074, baseType: !2584, size: 96)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !2585)
!2585 = !{!2586, !2587, !2588}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2584, file: !232, line: 57, baseType: !235, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2584, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2584, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2581, file: !110, line: 5075, baseType: !2534, size: 64, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2581, file: !110, line: 5076, baseType: !2591, size: 32, offset: 160)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2592)
!2592 = !{!2593}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2591, file: !244, line: 52, baseType: !22, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2503, file: !131, line: 343, baseType: !2595, size: 64, offset: 1088)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !2596)
!2596 = !{!2597, !2598}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2595, file: !207, line: 63, baseType: !190, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2595, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2500, file: !110, line: 3819, baseType: !2600, size: 64, offset: 1152)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !114, line: 40, baseType: !2601)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !114, line: 35, size: 64, elements: !2602)
!2602 = !{!2603, !2605}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2601, file: !114, line: 36, baseType: !2604, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2601, file: !114, line: 37, baseType: !2604, size: 32, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "notifyq", scope: !2500, file: !110, line: 3822, baseType: !2534, size: 64, offset: 1216)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "drainq", scope: !2500, file: !110, line: 3825, baseType: !2534, size: 64, offset: 1280)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2500, file: !110, line: 3828, baseType: !190, size: 32, offset: 1344)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2485, file: !110, line: 3683, baseType: !190, size: 32, offset: 96)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_work_flusher", file: !110, line: 3740, size: 256, elements: !2612)
!2612 = !{!2613, !2614}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2611, file: !110, line: 3741, baseType: !2485, size: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2611, file: !110, line: 3742, baseType: !2615, size: 128, offset: 128)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !110, line: 2909, size: 128, elements: !2616)
!2616 = !{!2617, !2618, !2619}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2615, file: !110, line: 2910, baseType: !2534, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2615, file: !110, line: 2911, baseType: !32, size: 32, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2615, file: !110, line: 2912, baseType: !32, size: 32, offset: 96)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 32)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_work_canceller", file: !110, line: 3751, size: 192, elements: !2623)
!2623 = !{!2624, !2625, !2626}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2622, file: !110, line: 3752, baseType: !2488, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2622, file: !110, line: 3753, baseType: !2484, size: 32, offset: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2622, file: !110, line: 3754, baseType: !2615, size: 128, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work_delayable", file: !110, line: 3691, size: 384, elements: !2629)
!2629 = !{!2630, !2631, !2632}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2628, file: !110, line: 3693, baseType: !2485, size: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2628, file: !110, line: 3696, baseType: !2553, size: 192, offset: 128)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2628, file: !110, line: 3699, baseType: !2499, size: 32, offset: 320)
!2633 = !{!2455, !2634}
!2634 = !DIGlobalVariableExpression(var: !2635, expr: !DIExpression())
!2635 = distinct !DIGlobalVariable(name: "pending_cancels", scope: !2457, file: !2636, line: 81, type: !2600, isLocal: true, isDefinition: true)
!2636 = !DIFile(filename: "zephyr/kernel/work.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2637 = !DIGlobalVariableExpression(var: !2638, expr: !DIExpression())
!2638 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2639, file: !2744, line: 56, type: !2731, isLocal: false, isDefinition: true)
!2639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2641, globals: !2741, splitDebugInlining: false, nameTableKind: None)
!2640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2641 = !{!2642, !307, !102, !2739, !601, !319, !371, !103, !190, !321, !2740}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !2644)
!2644 = !{!2645, !2703, !2715, !2716, !2717, !2718, !2719, !2734}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2643, file: !131, line: 247, baseType: !2646, size: 384)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !2647)
!2647 = !{!2648, !2672, !2679, !2680, !2681, !2690, !2691, !2692}
!2648 = !DIDerivedType(tag: DW_TAG_member, scope: !2646, file: !131, line: 60, baseType: !2649, size: 64)
!2649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2646, file: !131, line: 60, size: 64, elements: !2650)
!2650 = !{!2651, !2666}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2649, file: !131, line: 61, baseType: !2652, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2654)
!2654 = !{!2655, !2661}
!2655 = !DIDerivedType(tag: DW_TAG_member, scope: !2653, file: !141, line: 38, baseType: !2656, size: 32)
!2656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2653, file: !141, line: 38, size: 32, elements: !2657)
!2657 = !{!2658, !2660}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2656, file: !141, line: 39, baseType: !2659, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2656, file: !141, line: 40, baseType: !2659, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, scope: !2653, file: !141, line: 42, baseType: !2662, size: 32, offset: 32)
!2662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2653, file: !141, line: 42, size: 32, elements: !2663)
!2663 = !{!2664, !2665}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2662, file: !141, line: 43, baseType: !2659, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2662, file: !141, line: 44, baseType: !2659, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2649, file: !131, line: 62, baseType: !2667, size: 64)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2668)
!2668 = !{!2669}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2667, file: !157, line: 50, baseType: !2670, size: 64)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2671, size: 64, elements: !162)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2646, file: !131, line: 68, baseType: !2673, size: 32, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !2676)
!2676 = !{!2677}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2675, file: !167, line: 232, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2653)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2646, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2646, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!2681 = !DIDerivedType(tag: DW_TAG_member, scope: !2646, file: !131, line: 90, baseType: !2682, size: 16, offset: 112)
!2682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2646, file: !131, line: 90, size: 16, elements: !2683)
!2683 = !{!2684, !2689}
!2684 = !DIDerivedType(tag: DW_TAG_member, scope: !2682, file: !131, line: 91, baseType: !2685, size: 16)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2682, file: !131, line: 91, size: 16, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2685, file: !131, line: 96, baseType: !183, size: 8)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2685, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2682, file: !131, line: 100, baseType: !187, size: 16)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2646, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2646, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2646, file: !131, line: 131, baseType: !2693, size: 192, offset: 192)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !2694)
!2694 = !{!2695, !2696, !2702}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2693, file: !167, line: 245, baseType: !2652, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2693, file: !167, line: 246, baseType: !2697, size: 32, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !2698)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 32)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{null, !2701}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2693, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2643, file: !131, line: 250, baseType: !2704, size: 288, offset: 384)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2704, file: !207, line: 26, baseType: !190, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2704, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2704, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2704, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2704, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2704, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2704, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2704, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2704, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2643, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2643, file: !131, line: 256, baseType: !2674, size: 64, offset: 704)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2643, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2643, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2643, file: !131, line: 325, baseType: !2720, size: 32, offset: 1056)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 32)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !2722)
!2722 = !{!2723, !2729, !2730}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2721, file: !110, line: 5074, baseType: !2724, size: 96)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !2725)
!2725 = !{!2726, !2727, !2728}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2724, file: !232, line: 57, baseType: !235, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2724, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2724, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2721, file: !110, line: 5075, baseType: !2674, size: 64, offset: 96)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2721, file: !110, line: 5076, baseType: !2731, size: 32, offset: 160)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2732)
!2732 = !{!2733}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2731, file: !244, line: 52, baseType: !22, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2643, file: !131, line: 343, baseType: !2735, size: 64, offset: 1088)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2735, file: !207, line: 63, baseType: !190, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2735, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!2741 = !{!2637, !2742, !2745, !2747}
!2742 = !DIGlobalVariableExpression(var: !2743, expr: !DIExpression())
!2743 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2639, file: !2744, line: 404, type: !103, isLocal: true, isDefinition: true)
!2744 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2745 = !DIGlobalVariableExpression(var: !2746, expr: !DIExpression())
!2746 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2639, file: !2744, line: 405, type: !103, isLocal: true, isDefinition: true)
!2747 = !DIGlobalVariableExpression(var: !2748, expr: !DIExpression())
!2748 = distinct !DIGlobalVariable(name: "pending_current", scope: !2639, file: !2744, line: 425, type: !2642, isLocal: true, isDefinition: true)
!2749 = !DIGlobalVariableExpression(var: !2750, expr: !DIExpression())
!2750 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2751, file: !2781, line: 19, type: !2787, isLocal: true, isDefinition: true)
!2751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2752, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2753, globals: !2778, splitDebugInlining: false, nameTableKind: None)
!2752 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2753 = !{!319, !102, !371, !190, !321, !103, !2754, !307, !203}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !2756)
!2756 = !{!2757, !2772, !2777}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2755, file: !167, line: 245, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2760)
!2760 = !{!2761, !2767}
!2761 = !DIDerivedType(tag: DW_TAG_member, scope: !2759, file: !141, line: 38, baseType: !2762, size: 32)
!2762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2759, file: !141, line: 38, size: 32, elements: !2763)
!2763 = !{!2764, !2766}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2762, file: !141, line: 39, baseType: !2765, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2762, file: !141, line: 40, baseType: !2765, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, scope: !2759, file: !141, line: 42, baseType: !2768, size: 32, offset: 32)
!2768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2759, file: !141, line: 42, size: 32, elements: !2769)
!2769 = !{!2770, !2771}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2768, file: !141, line: 43, baseType: !2765, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2768, file: !141, line: 44, baseType: !2765, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2755, file: !167, line: 246, baseType: !2773, size: 32, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !2774)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 32)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{null, !2754}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2755, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!2778 = !{!2779, !2749, !2782, !2784}
!2779 = !DIGlobalVariableExpression(var: !2780, expr: !DIExpression())
!2780 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2751, file: !2781, line: 15, type: !321, isLocal: true, isDefinition: true)
!2781 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2782 = !DIGlobalVariableExpression(var: !2783, expr: !DIExpression())
!2783 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2751, file: !2781, line: 25, type: !103, isLocal: true, isDefinition: true)
!2784 = !DIGlobalVariableExpression(var: !2785, expr: !DIExpression())
!2785 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2751, file: !2781, line: 17, type: !2786, isLocal: true, isDefinition: true)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2759)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2788)
!2788 = !{!2789}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2787, file: !244, line: 52, baseType: !22, size: 32)
!2790 = !DIGlobalVariableExpression(var: !2791, expr: !DIExpression())
!2791 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2792, file: !2811, line: 55, type: !2812, isLocal: true, isDefinition: true, align: 32)
!2792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2793, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2794, globals: !2810, splitDebugInlining: false, nameTableKind: None)
!2793 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2794 = !{!102, !319, !103, !2795}
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2798)
!2798 = !{!2799, !2805}
!2799 = !DIDerivedType(tag: DW_TAG_member, scope: !2797, file: !141, line: 38, baseType: !2800, size: 32)
!2800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2797, file: !141, line: 38, size: 32, elements: !2801)
!2801 = !{!2802, !2804}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2800, file: !141, line: 39, baseType: !2803, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2800, file: !141, line: 40, baseType: !2803, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, scope: !2797, file: !141, line: 42, baseType: !2806, size: 32, offset: 32)
!2806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2797, file: !141, line: 42, size: 32, elements: !2807)
!2807 = !{!2808, !2809}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2806, file: !141, line: 43, baseType: !2803, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2806, file: !141, line: 44, baseType: !2803, size: 32)
!2810 = !{!2790}
!2811 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2813)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !2814)
!2814 = !{!2815, !2816}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2813, file: !1037, line: 60, baseType: !1040, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2813, file: !1037, line: 65, baseType: !1043, size: 32, offset: 32)
!2817 = !DIGlobalVariableExpression(var: !2818, expr: !DIExpression())
!2818 = distinct !DIGlobalVariable(name: "__init_k_sys_work_q_init", scope: !2819, file: !2825, line: 37, type: !2946, isLocal: true, isDefinition: true, align: 32)
!2819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2821, globals: !2822, splitDebugInlining: false, nameTableKind: None)
!2820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/system_work_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2821 = !{!102, !103, !239}
!2822 = !{!2817, !2823, !2940}
!2823 = !DIGlobalVariableExpression(var: !2824, expr: !DIExpression())
!2824 = distinct !DIGlobalVariable(name: "k_sys_work_q", scope: !2819, file: !2825, line: 20, type: !2826, isLocal: false, isDefinition: true)
!2825 = !DIFile(filename: "zephyr/kernel/system_work_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work_q", file: !110, line: 3810, size: 1408, elements: !2827)
!2827 = !{!2828, !2925, !2937, !2938, !2939}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2826, file: !110, line: 3812, baseType: !2829, size: 1152)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !2830)
!2830 = !{!2831, !2889, !2901, !2902, !2903, !2904, !2905, !2920}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2829, file: !131, line: 247, baseType: !2832, size: 384)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !2833)
!2833 = !{!2834, !2858, !2865, !2866, !2867, !2876, !2877, !2878}
!2834 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !131, line: 60, baseType: !2835, size: 64)
!2835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !131, line: 60, size: 64, elements: !2836)
!2836 = !{!2837, !2852}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2835, file: !131, line: 61, baseType: !2838, size: 64)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !2840)
!2840 = !{!2841, !2847}
!2841 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !141, line: 38, baseType: !2842, size: 32)
!2842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !141, line: 38, size: 32, elements: !2843)
!2843 = !{!2844, !2846}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2842, file: !141, line: 39, baseType: !2845, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2842, file: !141, line: 40, baseType: !2845, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !141, line: 42, baseType: !2848, size: 32, offset: 32)
!2848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !141, line: 42, size: 32, elements: !2849)
!2849 = !{!2850, !2851}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2848, file: !141, line: 43, baseType: !2845, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2848, file: !141, line: 44, baseType: !2845, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2835, file: !131, line: 62, baseType: !2853, size: 64)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2854)
!2854 = !{!2855}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2853, file: !157, line: 50, baseType: !2856, size: 64)
!2856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2857, size: 64, elements: !162)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2832, file: !131, line: 68, baseType: !2859, size: 32, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !2861)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !2862)
!2862 = !{!2863}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2861, file: !167, line: 232, baseType: !2864, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2839)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2832, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2832, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!2867 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !131, line: 90, baseType: !2868, size: 16, offset: 112)
!2868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !131, line: 90, size: 16, elements: !2869)
!2869 = !{!2870, !2875}
!2870 = !DIDerivedType(tag: DW_TAG_member, scope: !2868, file: !131, line: 91, baseType: !2871, size: 16)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2868, file: !131, line: 91, size: 16, elements: !2872)
!2872 = !{!2873, !2874}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2871, file: !131, line: 96, baseType: !183, size: 8)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2871, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2868, file: !131, line: 100, baseType: !187, size: 16)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2832, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2832, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2832, file: !131, line: 131, baseType: !2879, size: 192, offset: 192)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !2880)
!2880 = !{!2881, !2882, !2888}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2879, file: !167, line: 245, baseType: !2838, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2879, file: !167, line: 246, baseType: !2883, size: 32, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !2884)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{null, !2887}
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2879, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2829, file: !131, line: 250, baseType: !2890, size: 288, offset: 384)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2890, file: !207, line: 26, baseType: !190, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2890, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2890, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2890, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2890, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2890, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2890, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2890, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2890, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2829, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2829, file: !131, line: 256, baseType: !2860, size: 64, offset: 704)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2829, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2829, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2829, file: !131, line: 325, baseType: !2906, size: 32, offset: 1056)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 32)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !2908)
!2908 = !{!2909, !2915, !2916}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2907, file: !110, line: 5074, baseType: !2910, size: 96)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !2911)
!2911 = !{!2912, !2913, !2914}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2910, file: !232, line: 57, baseType: !235, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2910, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2910, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2907, file: !110, line: 5075, baseType: !2860, size: 64, offset: 96)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2907, file: !110, line: 5076, baseType: !2917, size: 32, offset: 160)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !2918)
!2918 = !{!2919}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2917, file: !244, line: 52, baseType: !22, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2829, file: !131, line: 343, baseType: !2921, size: 64, offset: 1088)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2921, file: !207, line: 63, baseType: !190, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2921, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2826, file: !110, line: 3819, baseType: !2926, size: 64, offset: 1152)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !114, line: 40, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !114, line: 35, size: 64, elements: !2928)
!2928 = !{!2929, !2936}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2927, file: !114, line: 36, baseType: !2930, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !114, line: 33, baseType: !2932)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !114, line: 29, size: 32, elements: !2933)
!2933 = !{!2934}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2932, file: !114, line: 30, baseType: !2935, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2927, file: !114, line: 37, baseType: !2930, size: 32, offset: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "notifyq", scope: !2826, file: !110, line: 3822, baseType: !2860, size: 64, offset: 1216)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "drainq", scope: !2826, file: !110, line: 3825, baseType: !2860, size: 64, offset: 1280)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2826, file: !110, line: 3828, baseType: !190, size: 32, offset: 1344)
!2940 = !DIGlobalVariableExpression(var: !2941, expr: !DIExpression())
!2941 = distinct !DIGlobalVariable(name: "sys_work_q_stack", scope: !2819, file: !2825, line: 17, type: !2942, isLocal: true, isDefinition: true, align: 64)
!2942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2943, size: 8192, elements: !407)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !356, line: 47, size: 8, elements: !2944)
!2944 = !{!2945}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2943, file: !356, line: 48, baseType: !222, size: 8)
!2946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1037, line: 51, size: 64, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2947, file: !1037, line: 60, baseType: !1040, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2947, file: !1037, line: 65, baseType: !1043, size: 32, offset: 32)
!2951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!2952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2954, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!2954 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2957, retainedTypes: !2965, splitDebugInlining: false, nameTableKind: None)
!2956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2957 = !{!30, !2958}
!2958 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2959, line: 54, baseType: !32, size: 32, elements: !2960)
!2959 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2960 = !{!2961, !2962, !2963, !2964}
!2961 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2962 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2963 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2964 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2965 = !{!102, !239, !601, !24, !2966, !22, !2972, !103, !1601, !2987}
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2959, line: 58, baseType: !2968)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2959, line: 58, size: 64, elements: !2969)
!2969 = !{!2970}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2968, file: !2959, line: 58, baseType: !2971, size: 64)
!2971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !222, size: 64, elements: !1807)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2959, line: 68, size: 128, elements: !2974)
!2974 = !{!2975, !2978, !2979, !2980}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2973, file: !2959, line: 69, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2977, size: 64, elements: !162)
!2977 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2959, line: 61, baseType: !190)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2973, file: !2959, line: 70, baseType: !2977, size: 32, offset: 64)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2973, file: !2959, line: 71, baseType: !190, size: 32, offset: 96)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2973, file: !2959, line: 77, baseType: !2981, offset: 128)
!2981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2982, elements: !2985)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2959, line: 64, size: 32, elements: !2983)
!2983 = !{!2984}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2982, file: !2959, line: 65, baseType: !2977, size: 32)
!2985 = !{!2986}
!2986 = !DISubrange(count: 0)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!2988 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2989, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2990, retainedTypes: !3010, splitDebugInlining: false, nameTableKind: None)
!2989 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!2990 = !{!2991, !2999}
!2991 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2992, line: 69, baseType: !32, size: 32, elements: !2993)
!2992 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2993 = !{!2994, !2995, !2996, !2997, !2998}
!2994 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2995 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2996 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2997 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2998 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2999 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2992, line: 56, baseType: !32, size: 32, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009}
!3001 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3002 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3003 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3004 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3005 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3006 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3007 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3008 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3009 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3010 = !{!103, !2991, !2999, !3011, !184, !1103, !3013, !3014, !174, !188, !377, !239, !102, !22, !32, !596, !3016, !3017, !598, !597, !204, !599, !3012, !3018, !3019, !3020, !3021}
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2992, line: 31, baseType: !3012)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !204)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !240, line: 329, baseType: !32)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2992, line: 32, baseType: !3015)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !322)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !240, line: 145, baseType: !103)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 32)
!3022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!3023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3024 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3025, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3025 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3027, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3028, splitDebugInlining: false, nameTableKind: None)
!3027 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3028 = !{!377, !174, !103, !32}
!3029 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3030, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3031, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!3030 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3031 = !{!3032, !30}
!3032 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3033, line: 27, baseType: !32, size: 32, elements: !3034)
!3033 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3034 = !{!3035, !3036, !3037, !3038, !3039}
!3035 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3036 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3037 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3038 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3039 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3042, retainedTypes: !3043, splitDebugInlining: false, nameTableKind: None)
!3041 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3042 = !{!1651, !3032, !30}
!3043 = !{!3044, !3045, !102, !103, !371, !190, !173, !3062}
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !910, line: 249, baseType: !1651)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1794, line: 426, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 411, size: 28704, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3047, file: !1794, line: 413, baseType: !1806, size: 256)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3047, file: !1794, line: 414, baseType: !1810, size: 768, offset: 256)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3047, file: !1794, line: 415, baseType: !1806, size: 256, offset: 1024)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3047, file: !1794, line: 416, baseType: !1810, size: 768, offset: 1280)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3047, file: !1794, line: 417, baseType: !1806, size: 256, offset: 2048)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3047, file: !1794, line: 418, baseType: !1810, size: 768, offset: 2304)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3047, file: !1794, line: 419, baseType: !1806, size: 256, offset: 3072)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3047, file: !1794, line: 420, baseType: !1810, size: 768, offset: 3328)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3047, file: !1794, line: 421, baseType: !1806, size: 256, offset: 4096)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3047, file: !1794, line: 422, baseType: !1821, size: 1792, offset: 4352)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3047, file: !1794, line: 423, baseType: !1825, size: 1920, offset: 6144)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3047, file: !1794, line: 424, baseType: !1830, size: 20608, offset: 8064)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3047, file: !1794, line: 425, baseType: !914, size: 32, offset: 28672)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 32)
!3063 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !3064)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !3065)
!3065 = !{!3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3064, file: !1794, line: 447, baseType: !985, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3064, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3064, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3064, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3064, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3064, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3064, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3064, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3064, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3064, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3064, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3064, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3064, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3064, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3064, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3064, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3064, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3064, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3064, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3064, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3064, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!3087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3088, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!3088 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3089 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3090, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3091, splitDebugInlining: false, nameTableKind: None)
!3090 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3091 = !{!102, !103, !22, !3092}
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !3094)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !3095)
!3095 = !{!3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3094, file: !1794, line: 447, baseType: !985, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3094, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3094, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3094, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3094, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3094, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3094, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3094, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3094, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3094, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3094, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3094, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3094, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3094, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3094, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3094, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3094, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3094, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3094, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3094, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3094, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!3117 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3118, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3119, splitDebugInlining: false, nameTableKind: None)
!3118 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3119 = !{!3120, !102, !103}
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3122, file: !1794, line: 447, baseType: !985, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3122, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3122, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3122, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3122, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3122, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3122, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3122, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3122, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3122, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3122, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3122, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3122, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3122, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3122, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3122, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3122, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3122, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3122, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3122, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3122, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!3145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3147, splitDebugInlining: false, nameTableKind: None)
!3146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3147 = !{!3148, !190, !102, !103}
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3150, line: 98, size: 256, elements: !3151)
!3150 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3151 = !{!3152, !3157, !3162, !3167, !3172, !3177, !3182, !3187}
!3152 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !3150, line: 99, baseType: !3153, size: 32)
!3153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !3150, line: 99, size: 32, elements: !3154)
!3154 = !{!3155, !3156}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3153, file: !3150, line: 99, baseType: !190, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3153, file: !3150, line: 99, baseType: !190, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !3150, line: 100, baseType: !3158, size: 32, offset: 32)
!3158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !3150, line: 100, size: 32, elements: !3159)
!3159 = !{!3160, !3161}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3158, file: !3150, line: 100, baseType: !190, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3158, file: !3150, line: 100, baseType: !190, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !3150, line: 101, baseType: !3163, size: 32, offset: 64)
!3163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !3150, line: 101, size: 32, elements: !3164)
!3164 = !{!3165, !3166}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3163, file: !3150, line: 101, baseType: !190, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3163, file: !3150, line: 101, baseType: !190, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !3150, line: 102, baseType: !3168, size: 32, offset: 96)
!3168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !3150, line: 102, size: 32, elements: !3169)
!3169 = !{!3170, !3171}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3168, file: !3150, line: 102, baseType: !190, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3168, file: !3150, line: 102, baseType: !190, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !3150, line: 103, baseType: !3173, size: 32, offset: 128)
!3173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !3150, line: 103, size: 32, elements: !3174)
!3174 = !{!3175, !3176}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3173, file: !3150, line: 103, baseType: !190, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3173, file: !3150, line: 103, baseType: !190, size: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !3150, line: 104, baseType: !3178, size: 32, offset: 160)
!3178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !3150, line: 104, size: 32, elements: !3179)
!3179 = !{!3180, !3181}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3178, file: !3150, line: 104, baseType: !190, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3178, file: !3150, line: 104, baseType: !190, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !3150, line: 105, baseType: !3183, size: 32, offset: 192)
!3183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3149, file: !3150, line: 105, size: 32, elements: !3184)
!3184 = !{!3185, !3186}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3183, file: !3150, line: 105, baseType: !190, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3183, file: !3150, line: 105, baseType: !190, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3149, file: !3150, line: 106, baseType: !190, size: 32, offset: 224)
!3188 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3189, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3031, retainedTypes: !3190, splitDebugInlining: false, nameTableKind: None)
!3189 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3190 = !{!3191, !102, !103, !3216, !2987, !190}
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 32)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !3193)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !3194)
!3194 = !{!3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3193, file: !1794, line: 447, baseType: !985, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3193, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3193, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3193, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3193, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3193, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3193, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3193, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3193, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3193, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3193, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3193, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3193, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3193, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3193, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3193, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3193, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3193, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3193, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3193, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3193, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3150, line: 141, baseType: !3218)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3150, line: 97, size: 256, elements: !3219)
!3219 = !{!3220}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3218, file: !3150, line: 107, baseType: !3221, size: 256)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3150, line: 98, size: 256, elements: !3222)
!3222 = !{!3223, !3228, !3233, !3238, !3243, !3248, !3253, !3258}
!3223 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3150, line: 99, baseType: !3224, size: 32)
!3224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3150, line: 99, size: 32, elements: !3225)
!3225 = !{!3226, !3227}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3224, file: !3150, line: 99, baseType: !190, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3224, file: !3150, line: 99, baseType: !190, size: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3150, line: 100, baseType: !3229, size: 32, offset: 32)
!3229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3150, line: 100, size: 32, elements: !3230)
!3230 = !{!3231, !3232}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3229, file: !3150, line: 100, baseType: !190, size: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3229, file: !3150, line: 100, baseType: !190, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3150, line: 101, baseType: !3234, size: 32, offset: 64)
!3234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3150, line: 101, size: 32, elements: !3235)
!3235 = !{!3236, !3237}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3234, file: !3150, line: 101, baseType: !190, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3234, file: !3150, line: 101, baseType: !190, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3150, line: 102, baseType: !3239, size: 32, offset: 96)
!3239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3150, line: 102, size: 32, elements: !3240)
!3240 = !{!3241, !3242}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3239, file: !3150, line: 102, baseType: !190, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3239, file: !3150, line: 102, baseType: !190, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3150, line: 103, baseType: !3244, size: 32, offset: 128)
!3244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3150, line: 103, size: 32, elements: !3245)
!3245 = !{!3246, !3247}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3244, file: !3150, line: 103, baseType: !190, size: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3244, file: !3150, line: 103, baseType: !190, size: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3150, line: 104, baseType: !3249, size: 32, offset: 160)
!3249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3150, line: 104, size: 32, elements: !3250)
!3250 = !{!3251, !3252}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3249, file: !3150, line: 104, baseType: !190, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3249, file: !3150, line: 104, baseType: !190, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3150, line: 105, baseType: !3254, size: 32, offset: 192)
!3254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3150, line: 105, size: 32, elements: !3255)
!3255 = !{!3256, !3257}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3254, file: !3150, line: 105, baseType: !190, size: 32)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3254, file: !3150, line: 105, baseType: !190, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3221, file: !3150, line: 106, baseType: !190, size: 32, offset: 224)
!3259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3260, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1650, retainedTypes: !3261, splitDebugInlining: false, nameTableKind: None)
!3260 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3261 = !{!3044, !371, !173, !190, !3262, !3279}
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1794, line: 426, baseType: !3264)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 411, size: 28704, elements: !3265)
!3265 = !{!3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3264, file: !1794, line: 413, baseType: !1806, size: 256)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3264, file: !1794, line: 414, baseType: !1810, size: 768, offset: 256)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3264, file: !1794, line: 415, baseType: !1806, size: 256, offset: 1024)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3264, file: !1794, line: 416, baseType: !1810, size: 768, offset: 1280)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3264, file: !1794, line: 417, baseType: !1806, size: 256, offset: 2048)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3264, file: !1794, line: 418, baseType: !1810, size: 768, offset: 2304)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3264, file: !1794, line: 419, baseType: !1806, size: 256, offset: 3072)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3264, file: !1794, line: 420, baseType: !1810, size: 768, offset: 3328)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3264, file: !1794, line: 421, baseType: !1806, size: 256, offset: 4096)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3264, file: !1794, line: 422, baseType: !1821, size: 1792, offset: 4352)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3264, file: !1794, line: 423, baseType: !1825, size: 1920, offset: 6144)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3264, file: !1794, line: 424, baseType: !1830, size: 20608, offset: 8064)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3264, file: !1794, line: 425, baseType: !914, size: 32, offset: 28672)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 32)
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !3281)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3281, file: !1794, line: 447, baseType: !985, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3281, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3281, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3281, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3281, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3281, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3281, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3281, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3281, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3281, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3281, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3281, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3281, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3281, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3281, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3281, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3281, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3281, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3281, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3281, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3281, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!3304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3305, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3306, splitDebugInlining: false, nameTableKind: None)
!3305 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3306 = !{!3307, !102, !103}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1794, line: 468, baseType: !3309)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1794, line: 445, size: 1120, elements: !3310)
!3310 = !{!3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3309, file: !1794, line: 447, baseType: !985, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3309, file: !1794, line: 448, baseType: !914, size: 32, offset: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3309, file: !1794, line: 449, baseType: !914, size: 32, offset: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3309, file: !1794, line: 450, baseType: !914, size: 32, offset: 96)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3309, file: !1794, line: 451, baseType: !914, size: 32, offset: 128)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3309, file: !1794, line: 452, baseType: !914, size: 32, offset: 160)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3309, file: !1794, line: 453, baseType: !1845, size: 96, offset: 192)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3309, file: !1794, line: 454, baseType: !914, size: 32, offset: 288)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3309, file: !1794, line: 455, baseType: !914, size: 32, offset: 320)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3309, file: !1794, line: 456, baseType: !914, size: 32, offset: 352)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3309, file: !1794, line: 457, baseType: !914, size: 32, offset: 384)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3309, file: !1794, line: 458, baseType: !914, size: 32, offset: 416)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3309, file: !1794, line: 459, baseType: !914, size: 32, offset: 448)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3309, file: !1794, line: 460, baseType: !914, size: 32, offset: 480)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3309, file: !1794, line: 461, baseType: !1856, size: 64, offset: 512)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3309, file: !1794, line: 462, baseType: !985, size: 32, offset: 576)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3309, file: !1794, line: 463, baseType: !985, size: 32, offset: 608)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3309, file: !1794, line: 464, baseType: !1860, size: 128, offset: 640)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3309, file: !1794, line: 465, baseType: !1864, size: 160, offset: 768)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3309, file: !1794, line: 466, baseType: !1868, size: 160, offset: 928)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3309, file: !1794, line: 467, baseType: !914, size: 32, offset: 1088)
!3332 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3333, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3334, splitDebugInlining: false, nameTableKind: None)
!3333 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3334 = !{!222, !307, !239, !1104, !3335, !174, !102}
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 32)
!3336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !174)
!3337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3338, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3338 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3339 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3340, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3341, splitDebugInlining: false, nameTableKind: None)
!3340 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3341 = !{!1032, !190}
!3342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3344, retainedTypes: !3354, splitDebugInlining: false, nameTableKind: None)
!3343 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3344 = !{!3345}
!3345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !3346, line: 62, baseType: !32, size: 32, elements: !3347)
!3346 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3347 = !{!3348, !3349, !3350, !3351, !3352, !3353}
!3348 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!3349 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!3350 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!3351 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!3352 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!3353 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!3354 = !{!3355, !3418, !190, !279, !1032}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 32)
!3356 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !910, line: 8619, baseType: !3357)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 8563, size: 3072, elements: !3358)
!3358 = !{!3359, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3357, file: !910, line: 8564, baseType: !3360, size: 768)
!3360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 768, elements: !3361)
!3361 = !{!3362}
!3362 = !DISubrange(count: 96)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3357, file: !910, line: 8565, baseType: !914, size: 32, offset: 768)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3357, file: !910, line: 8566, baseType: !914, size: 32, offset: 800)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3357, file: !910, line: 8567, baseType: !914, size: 32, offset: 832)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3357, file: !910, line: 8568, baseType: !914, size: 32, offset: 864)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3357, file: !910, line: 8569, baseType: !914, size: 32, offset: 896)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3357, file: !910, line: 8570, baseType: !914, size: 32, offset: 928)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3357, file: !910, line: 8571, baseType: !914, size: 32, offset: 960)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3357, file: !910, line: 8572, baseType: !914, size: 32, offset: 992)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3357, file: !910, line: 8573, baseType: !914, size: 32, offset: 1024)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3357, file: !910, line: 8574, baseType: !3373, size: 96, offset: 1056)
!3373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 96, elements: !1846)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3357, file: !910, line: 8575, baseType: !914, size: 32, offset: 1152)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3357, file: !910, line: 8576, baseType: !3373, size: 96, offset: 1184)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3357, file: !910, line: 8577, baseType: !914, size: 32, offset: 1280)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3357, file: !910, line: 8578, baseType: !3373, size: 96, offset: 1312)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3357, file: !910, line: 8579, baseType: !914, size: 32, offset: 1408)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3357, file: !910, line: 8580, baseType: !914, size: 32, offset: 1440)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3357, file: !910, line: 8581, baseType: !914, size: 32, offset: 1472)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3357, file: !910, line: 8582, baseType: !914, size: 32, offset: 1504)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3357, file: !910, line: 8583, baseType: !914, size: 32, offset: 1536)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3357, file: !910, line: 8584, baseType: !914, size: 32, offset: 1568)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3357, file: !910, line: 8585, baseType: !914, size: 32, offset: 1600)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3357, file: !910, line: 8586, baseType: !914, size: 32, offset: 1632)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3357, file: !910, line: 8587, baseType: !914, size: 32, offset: 1664)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3357, file: !910, line: 8588, baseType: !914, size: 32, offset: 1696)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3357, file: !910, line: 8589, baseType: !914, size: 32, offset: 1728)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3357, file: !910, line: 8590, baseType: !914, size: 32, offset: 1760)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3357, file: !910, line: 8591, baseType: !914, size: 32, offset: 1792)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3357, file: !910, line: 8592, baseType: !914, size: 32, offset: 1824)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3357, file: !910, line: 8593, baseType: !914, size: 32, offset: 1856)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3357, file: !910, line: 8594, baseType: !914, size: 32, offset: 1888)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3357, file: !910, line: 8595, baseType: !914, size: 32, offset: 1920)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3357, file: !910, line: 8596, baseType: !914, size: 32, offset: 1952)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3357, file: !910, line: 8597, baseType: !914, size: 32, offset: 1984)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3357, file: !910, line: 8598, baseType: !914, size: 32, offset: 2016)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3357, file: !910, line: 8599, baseType: !914, size: 32, offset: 2048)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3357, file: !910, line: 8600, baseType: !3373, size: 96, offset: 2080)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3357, file: !910, line: 8601, baseType: !914, size: 32, offset: 2176)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3357, file: !910, line: 8602, baseType: !3373, size: 96, offset: 2208)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3357, file: !910, line: 8603, baseType: !914, size: 32, offset: 2304)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3357, file: !910, line: 8604, baseType: !3373, size: 96, offset: 2336)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3357, file: !910, line: 8605, baseType: !914, size: 32, offset: 2432)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3357, file: !910, line: 8606, baseType: !914, size: 32, offset: 2464)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3357, file: !910, line: 8607, baseType: !914, size: 32, offset: 2496)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3357, file: !910, line: 8608, baseType: !914, size: 32, offset: 2528)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3357, file: !910, line: 8609, baseType: !914, size: 32, offset: 2560)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3357, file: !910, line: 8610, baseType: !3373, size: 96, offset: 2592)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3357, file: !910, line: 8611, baseType: !914, size: 32, offset: 2688)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3357, file: !910, line: 8612, baseType: !3373, size: 96, offset: 2720)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3357, file: !910, line: 8613, baseType: !914, size: 32, offset: 2816)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3357, file: !910, line: 8614, baseType: !3373, size: 96, offset: 2848)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3357, file: !910, line: 8615, baseType: !914, size: 32, offset: 2944)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3357, file: !910, line: 8616, baseType: !914, size: 32, offset: 2976)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3357, file: !910, line: 8617, baseType: !914, size: 32, offset: 3008)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3357, file: !910, line: 8618, baseType: !914, size: 32, offset: 3040)
!3418 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!3419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3420, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3421, splitDebugInlining: false, nameTableKind: None)
!3420 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3421 = !{!3422, !3426, !1190}
!3422 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !1191, line: 49, baseType: !32, size: 32, elements: !3423)
!3423 = !{!3424, !3425}
!3424 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!3425 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!3426 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !1191, line: 56, baseType: !32, size: 32, elements: !3427)
!3427 = !{!3428, !3429, !3430, !3431, !3432}
!3428 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!3429 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!3430 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!3431 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!3432 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!3433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3435, retainedTypes: !3444, splitDebugInlining: false, nameTableKind: None)
!3434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3435 = !{!1451, !3436, !3440}
!3436 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1373, line: 179, baseType: !32, size: 32, elements: !3437)
!3437 = !{!3438, !3439}
!3438 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!3439 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!3440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1373, line: 194, baseType: !32, size: 32, elements: !3441)
!3441 = !{!3442, !3443}
!3442 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!3443 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!3444 = !{!190, !1601}
!3445 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3446, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3447, retainedTypes: !3458, splitDebugInlining: false, nameTableKind: None)
!3446 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3447 = !{!625, !3448}
!3448 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !3346, line: 128, baseType: !32, size: 32, elements: !3449)
!3449 = !{!3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457}
!3450 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!3451 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!3452 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!3453 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!3454 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!3455 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!3456 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!3457 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!3458 = !{!190, !3459, !3511, !1032}
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 32)
!3460 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !910, line: 4575, baseType: !3461)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 4532, size: 390144, elements: !3462)
!3462 = !{!3463, !3464, !3465, !3466, !3467, !3468, !3476, !3477, !3485, !3486}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !3461, file: !910, line: 4533, baseType: !914, size: 32)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !3461, file: !910, line: 4534, baseType: !914, size: 32, offset: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !3461, file: !910, line: 4535, baseType: !914, size: 32, offset: 64)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !3461, file: !910, line: 4536, baseType: !914, size: 32, offset: 96)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3461, file: !910, line: 4537, baseType: !919, size: 16256, offset: 128)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3461, file: !910, line: 4543, baseType: !3469, size: 4224, offset: 16384)
!3469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3470, size: 4224, elements: !930)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3461, file: !910, line: 4538, size: 128, elements: !3471)
!3471 = !{!3472, !3473, !3474, !3475}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3470, file: !910, line: 4539, baseType: !914, size: 32)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !3470, file: !910, line: 4540, baseType: !914, size: 32, offset: 32)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !3470, file: !910, line: 4541, baseType: !914, size: 32, offset: 64)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !3470, file: !910, line: 4542, baseType: !914, size: 32, offset: 96)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3461, file: !910, line: 4544, baseType: !933, size: 110464, offset: 20608)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3461, file: !910, line: 4550, baseType: !3478, size: 24448, offset: 131072)
!3478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3479, size: 24448, elements: !944)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3461, file: !910, line: 4545, size: 128, elements: !3480)
!3480 = !{!3481, !3482, !3483, !3484}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3479, file: !910, line: 4546, baseType: !914, size: 32)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !3479, file: !910, line: 4547, baseType: !914, size: 32, offset: 32)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !3479, file: !910, line: 4548, baseType: !914, size: 32, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !3479, file: !910, line: 4549, baseType: !914, size: 32, offset: 96)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3461, file: !910, line: 4551, baseType: !947, size: 106624, offset: 155520)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3461, file: !910, line: 4574, baseType: !3487, size: 128000, offset: 262144)
!3487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3488, size: 128000, elements: !978)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3461, file: !910, line: 4552, size: 1024, elements: !3489)
!3489 = !{!3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !3488, file: !910, line: 4553, baseType: !914, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !3488, file: !910, line: 4554, baseType: !914, size: 32, offset: 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !3488, file: !910, line: 4555, baseType: !914, size: 32, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !3488, file: !910, line: 4556, baseType: !914, size: 32, offset: 96)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !3488, file: !910, line: 4557, baseType: !914, size: 32, offset: 128)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !3488, file: !910, line: 4558, baseType: !914, size: 32, offset: 160)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !3488, file: !910, line: 4559, baseType: !914, size: 32, offset: 192)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !3488, file: !910, line: 4560, baseType: !914, size: 32, offset: 224)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !3488, file: !910, line: 4561, baseType: !914, size: 32, offset: 256)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !3488, file: !910, line: 4562, baseType: !914, size: 32, offset: 288)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !3488, file: !910, line: 4563, baseType: !914, size: 32, offset: 320)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !3488, file: !910, line: 4564, baseType: !914, size: 32, offset: 352)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !3488, file: !910, line: 4565, baseType: !914, size: 32, offset: 384)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !3488, file: !910, line: 4566, baseType: !914, size: 32, offset: 416)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !3488, file: !910, line: 4567, baseType: !914, size: 32, offset: 448)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !3488, file: !910, line: 4568, baseType: !914, size: 32, offset: 480)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3488, file: !910, line: 4569, baseType: !971, size: 384, offset: 512)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !3488, file: !910, line: 4570, baseType: !914, size: 32, offset: 896)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !3488, file: !910, line: 4571, baseType: !914, size: 32, offset: 928)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !3488, file: !910, line: 4572, baseType: !914, size: 32, offset: 960)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3488, file: !910, line: 4573, baseType: !914, size: 32, offset: 992)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 32)
!3512 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !910, line: 8619, baseType: !3513)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 8563, size: 3072, elements: !3514)
!3514 = !{!3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3513, file: !910, line: 8564, baseType: !3360, size: 768)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3513, file: !910, line: 8565, baseType: !914, size: 32, offset: 768)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3513, file: !910, line: 8566, baseType: !914, size: 32, offset: 800)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3513, file: !910, line: 8567, baseType: !914, size: 32, offset: 832)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3513, file: !910, line: 8568, baseType: !914, size: 32, offset: 864)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3513, file: !910, line: 8569, baseType: !914, size: 32, offset: 896)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3513, file: !910, line: 8570, baseType: !914, size: 32, offset: 928)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3513, file: !910, line: 8571, baseType: !914, size: 32, offset: 960)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3513, file: !910, line: 8572, baseType: !914, size: 32, offset: 992)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3513, file: !910, line: 8573, baseType: !914, size: 32, offset: 1024)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3513, file: !910, line: 8574, baseType: !3373, size: 96, offset: 1056)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3513, file: !910, line: 8575, baseType: !914, size: 32, offset: 1152)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3513, file: !910, line: 8576, baseType: !3373, size: 96, offset: 1184)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3513, file: !910, line: 8577, baseType: !914, size: 32, offset: 1280)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3513, file: !910, line: 8578, baseType: !3373, size: 96, offset: 1312)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3513, file: !910, line: 8579, baseType: !914, size: 32, offset: 1408)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3513, file: !910, line: 8580, baseType: !914, size: 32, offset: 1440)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3513, file: !910, line: 8581, baseType: !914, size: 32, offset: 1472)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3513, file: !910, line: 8582, baseType: !914, size: 32, offset: 1504)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3513, file: !910, line: 8583, baseType: !914, size: 32, offset: 1536)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3513, file: !910, line: 8584, baseType: !914, size: 32, offset: 1568)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3513, file: !910, line: 8585, baseType: !914, size: 32, offset: 1600)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3513, file: !910, line: 8586, baseType: !914, size: 32, offset: 1632)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3513, file: !910, line: 8587, baseType: !914, size: 32, offset: 1664)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3513, file: !910, line: 8588, baseType: !914, size: 32, offset: 1696)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3513, file: !910, line: 8589, baseType: !914, size: 32, offset: 1728)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3513, file: !910, line: 8590, baseType: !914, size: 32, offset: 1760)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3513, file: !910, line: 8591, baseType: !914, size: 32, offset: 1792)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3513, file: !910, line: 8592, baseType: !914, size: 32, offset: 1824)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3513, file: !910, line: 8593, baseType: !914, size: 32, offset: 1856)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3513, file: !910, line: 8594, baseType: !914, size: 32, offset: 1888)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3513, file: !910, line: 8595, baseType: !914, size: 32, offset: 1920)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3513, file: !910, line: 8596, baseType: !914, size: 32, offset: 1952)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3513, file: !910, line: 8597, baseType: !914, size: 32, offset: 1984)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3513, file: !910, line: 8598, baseType: !914, size: 32, offset: 2016)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3513, file: !910, line: 8599, baseType: !914, size: 32, offset: 2048)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3513, file: !910, line: 8600, baseType: !3373, size: 96, offset: 2080)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3513, file: !910, line: 8601, baseType: !914, size: 32, offset: 2176)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3513, file: !910, line: 8602, baseType: !3373, size: 96, offset: 2208)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3513, file: !910, line: 8603, baseType: !914, size: 32, offset: 2304)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3513, file: !910, line: 8604, baseType: !3373, size: 96, offset: 2336)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3513, file: !910, line: 8605, baseType: !914, size: 32, offset: 2432)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3513, file: !910, line: 8606, baseType: !914, size: 32, offset: 2464)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3513, file: !910, line: 8607, baseType: !914, size: 32, offset: 2496)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3513, file: !910, line: 8608, baseType: !914, size: 32, offset: 2528)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3513, file: !910, line: 8609, baseType: !914, size: 32, offset: 2560)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3513, file: !910, line: 8610, baseType: !3373, size: 96, offset: 2592)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3513, file: !910, line: 8611, baseType: !914, size: 32, offset: 2688)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3513, file: !910, line: 8612, baseType: !3373, size: 96, offset: 2720)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3513, file: !910, line: 8613, baseType: !914, size: 32, offset: 2816)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3513, file: !910, line: 8614, baseType: !3373, size: 96, offset: 2848)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3513, file: !910, line: 8615, baseType: !914, size: 32, offset: 2944)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3513, file: !910, line: 8616, baseType: !914, size: 32, offset: 2976)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3513, file: !910, line: 8617, baseType: !914, size: 32, offset: 3008)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3513, file: !910, line: 8618, baseType: !914, size: 32, offset: 3040)
!3570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3571, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3572, splitDebugInlining: false, nameTableKind: None)
!3571 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3572 = !{!102, !239}
!3573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3575, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!3574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3575 = !{!3576, !3583, !3032, !30}
!3576 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3577, line: 14, baseType: !32, size: 32, elements: !3578)
!3577 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3578 = !{!3579, !3580, !3581, !3582}
!3579 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3580 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3581 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3582 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3577, line: 42, baseType: !32, size: 32, elements: !3584)
!3584 = !{!3585, !3586, !3587, !3588, !3589, !3590}
!3585 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3586 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3587 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3588 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3589 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3590 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!3592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3594, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3595, splitDebugInlining: false, nameTableKind: None)
!3594 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3595 = !{!102, !103, !3596, !3611}
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 32)
!3597 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !3598)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !3599)
!3599 = !{!3600, !3606}
!3600 = !DIDerivedType(tag: DW_TAG_member, scope: !3598, file: !141, line: 38, baseType: !3601, size: 32)
!3601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3598, file: !141, line: 38, size: 32, elements: !3602)
!3602 = !{!3603, !3605}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3601, file: !141, line: 39, baseType: !3604, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3601, file: !141, line: 40, baseType: !3604, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, scope: !3598, file: !141, line: 42, baseType: !3607, size: 32, offset: 32)
!3607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3598, file: !141, line: 42, size: 32, elements: !3608)
!3608 = !{!3609, !3610}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3607, file: !141, line: 43, baseType: !3604, size: 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3607, file: !141, line: 44, baseType: !3604, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 32)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !3613)
!3613 = !{!3614, !3658, !3670, !3671, !3672, !3673, !3674, !3689}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3612, file: !131, line: 247, baseType: !3615, size: 384)
!3615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !3616)
!3616 = !{!3617, !3627, !3634, !3635, !3636, !3645, !3646, !3647}
!3617 = !DIDerivedType(tag: DW_TAG_member, scope: !3615, file: !131, line: 60, baseType: !3618, size: 64)
!3618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3615, file: !131, line: 60, size: 64, elements: !3619)
!3619 = !{!3620, !3621}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3618, file: !131, line: 61, baseType: !3597, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3618, file: !131, line: 62, baseType: !3622, size: 64)
!3622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !3623)
!3623 = !{!3624}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3622, file: !157, line: 50, baseType: !3625, size: 64)
!3625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3626, size: 64, elements: !162)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 32)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3615, file: !131, line: 68, baseType: !3628, size: 32, offset: 64)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 32)
!3629 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !3630)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !3631)
!3631 = !{!3632}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3630, file: !167, line: 232, baseType: !3633, size: 64)
!3633 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !3598)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3615, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3615, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!3636 = !DIDerivedType(tag: DW_TAG_member, scope: !3615, file: !131, line: 90, baseType: !3637, size: 16, offset: 112)
!3637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3615, file: !131, line: 90, size: 16, elements: !3638)
!3638 = !{!3639, !3644}
!3639 = !DIDerivedType(tag: DW_TAG_member, scope: !3637, file: !131, line: 91, baseType: !3640, size: 16)
!3640 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3637, file: !131, line: 91, size: 16, elements: !3641)
!3641 = !{!3642, !3643}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3640, file: !131, line: 96, baseType: !183, size: 8)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3640, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3637, file: !131, line: 100, baseType: !187, size: 16)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3615, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3615, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3615, file: !131, line: 131, baseType: !3648, size: 192, offset: 192)
!3648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !3649)
!3649 = !{!3650, !3651, !3657}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3648, file: !167, line: 245, baseType: !3597, size: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3648, file: !167, line: 246, baseType: !3652, size: 32, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !3653)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 32)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{null, !3656}
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3648, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3612, file: !131, line: 250, baseType: !3659, size: 288, offset: 384)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !3660)
!3660 = !{!3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3659, file: !207, line: 26, baseType: !190, size: 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3659, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3659, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3659, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3659, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3659, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3659, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3659, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3659, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3612, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3612, file: !131, line: 256, baseType: !3629, size: 64, offset: 704)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3612, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3612, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3612, file: !131, line: 325, baseType: !3675, size: 32, offset: 1056)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 32)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !3677)
!3677 = !{!3678, !3684, !3685}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3676, file: !110, line: 5074, baseType: !3679, size: 96)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !3680)
!3680 = !{!3681, !3682, !3683}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3679, file: !232, line: 57, baseType: !235, size: 32)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3679, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3679, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3676, file: !110, line: 5075, baseType: !3629, size: 64, offset: 96)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3676, file: !110, line: 5076, baseType: !3686, size: 32, offset: 160)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !3687)
!3687 = !{!3688}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3686, file: !244, line: 52, baseType: !22, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3612, file: !131, line: 343, baseType: !3690, size: 64, offset: 1088)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !3691)
!3691 = !{!3692, !3693}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3690, file: !207, line: 63, baseType: !190, size: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3690, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!3694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3695, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3696, splitDebugInlining: false, nameTableKind: None)
!3695 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3696 = !{!22, !102, !103}
!3697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !614, splitDebugInlining: false, nameTableKind: None)
!3698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!3699 = !{!"Ubuntu clang version 14.0.6"}
!3700 = !{i32 7, !"Dwarf Version", i32 4}
!3701 = !{i32 2, !"Debug Info Version", i32 3}
!3702 = !{i32 1, !"wchar_size", i32 4}
!3703 = !{i32 1, !"min_enum_size", i32 4}
!3704 = !{i32 1, !"branch-target-enforcement", i32 0}
!3705 = !{i32 1, !"sign-return-address", i32 0}
!3706 = !{i32 1, !"sign-return-address-all", i32 0}
!3707 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3708 = !{i32 7, !"frame-pointer", i32 2}
!3709 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3710, file: !3710, line: 26, type: !374, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !2145)
!3710 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3711 = !DILocation(line: 28, column: 1, scope: !3709)
!3712 = !{i64 2155083653, i64 2155083673, i64 2155083736}
!3713 = !DILocation(line: 29, column: 1, scope: !3709)
!3714 = !{i64 2155084068, i64 2155084088, i64 2155084151}
!3715 = !DILocation(line: 30, column: 1, scope: !3709)
!3716 = !{i64 2155084487, i64 2155084507, i64 2155084570}
!3717 = !DILocation(line: 31, column: 1, scope: !3709)
!3718 = !{i64 2155088967, i64 2155088987, i64 2155089050}
!3719 = !DILocation(line: 33, column: 1, scope: !3709)
!3720 = !{i64 2155089259, i64 2155089279, i64 2155089342}
!3721 = !DILocation(line: 35, column: 1, scope: !3709)
!3722 = !{i64 2155089584, i64 2155089604, i64 2155089667}
!3723 = !DILocation(line: 50, column: 1, scope: !3709)
!3724 = !{i64 2155090011, i64 2155090031, i64 2155090094}
!3725 = !DILocation(line: 54, column: 1, scope: !3709)
!3726 = !{i64 2155090450, i64 2155090470, i64 2155090533}
!3727 = !DILocation(line: 61, column: 1, scope: !3709)
!3728 = !{i64 2155090767, i64 2155090787, i64 2155090850}
!3729 = !DILocation(line: 63, column: 1, scope: !3709)
!3730 = !{i64 2155091147, i64 2155091167, i64 2155091230}
!3731 = !DILocation(line: 64, column: 1, scope: !3709)
!3732 = !{i64 2155091669, i64 2155091689, i64 2155091752}
!3733 = !DILocation(line: 65, column: 1, scope: !3709)
!3734 = !{i64 2155092167, i64 2155092187, i64 2155092250}
!3735 = !DILocation(line: 66, column: 1, scope: !3709)
!3736 = !{i64 2155092649, i64 2155092669, i64 2155092732}
!3737 = !DILocation(line: 67, column: 1, scope: !3709)
!3738 = !{i64 2155093156, i64 2155093176, i64 2155093239}
!3739 = !DILocation(line: 68, column: 1, scope: !3709)
!3740 = !{i64 2155093644, i64 2155093664, i64 2155093727}
!3741 = !DILocation(line: 70, column: 1, scope: !3709)
!3742 = !{i64 2155094112, i64 2155094132, i64 2155094195}
!3743 = !DILocation(line: 71, column: 1, scope: !3709)
!3744 = !{i64 2155094554, i64 2155094574, i64 2155094637}
!3745 = !DILocation(line: 72, column: 1, scope: !3709)
!3746 = !{i64 2155095012, i64 2155095032, i64 2155095095}
!3747 = !DILocation(line: 97, column: 1, scope: !3709)
!3748 = !{i64 2155095319, i64 2155095339, i64 2155095402}
!3749 = !DILocation(line: 99, column: 1, scope: !3709)
!3750 = !{i64 2155095537, i64 2155095557, i64 2155095620}
!3751 = !DILocation(line: 102, column: 1, scope: !3709)
!3752 = !{i64 2155095794, i64 2155095814, i64 2155095877}
!3753 = !DILocation(line: 105, column: 1, scope: !3709)
!3754 = !{i64 2155096034, i64 2155096054, i64 2155096117}
!3755 = !DILocation(line: 115, column: 1, scope: !3709)
!3756 = !{i64 2155096373, i64 2155096393, i64 2155096456}
!3757 = !DILocation(line: 118, column: 1, scope: !3709)
!3758 = !{i64 2155096717, i64 2155096737, i64 2155096800}
!3759 = !DILocation(line: 32, column: 1, scope: !3760)
!3760 = !DILexicalBlockFile(scope: !3709, file: !3761, discriminator: 0)
!3761 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3762 = !{i64 2155097073, i64 2155097093, i64 2155097156}
!3763 = !DILocation(line: 33, column: 1, scope: !3760)
!3764 = !{i64 2155097585, i64 2155097605, i64 2155097668}
!3765 = !DILocation(line: 53, column: 1, scope: !3760)
!3766 = !{i64 2155098093, i64 2155098113, i64 2155098176}
!3767 = !DILocation(line: 54, column: 1, scope: !3760)
!3768 = !{i64 2155102572, i64 2155102592, i64 2155102655}
!3769 = !DILocation(line: 55, column: 1, scope: !3760)
!3770 = !{i64 2155102990, i64 2155103010, i64 2155103073}
!3771 = !DILocation(line: 56, column: 1, scope: !3760)
!3772 = !{i64 2155103408, i64 2155103428, i64 2155103491}
!3773 = !DILocation(line: 57, column: 1, scope: !3760)
!3774 = !{i64 2155103826, i64 2155103846, i64 2155103909}
!3775 = !DILocation(line: 58, column: 1, scope: !3760)
!3776 = !{i64 2155104244, i64 2155104264, i64 2155104327}
!3777 = !DILocation(line: 59, column: 1, scope: !3760)
!3778 = !{i64 2155104662, i64 2155104682, i64 2155104745}
!3779 = !DILocation(line: 60, column: 1, scope: !3760)
!3780 = !{i64 2155105086, i64 2155105106, i64 2155105169}
!3781 = !DILocation(line: 61, column: 1, scope: !3760)
!3782 = !{i64 2155105403, i64 2155105423, i64 2155105486}
!3783 = !DILocation(line: 70, column: 1, scope: !3760)
!3784 = !{i64 2155105632, i64 2155105652, i64 2155105715}
!3785 = !DILocation(line: 72, column: 1, scope: !3760)
!3786 = !{i64 2155105964, i64 2155105984, i64 2155106047}
!3787 = !DILocation(line: 73, column: 1, scope: !3760)
!3788 = !{i64 2155106414, i64 2155106434, i64 2155106497}
!3789 = !DILocation(line: 74, column: 1, scope: !3760)
!3790 = !{i64 2155106864, i64 2155106884, i64 2155106947}
!3791 = !DILocation(line: 75, column: 1, scope: !3760)
!3792 = !{i64 2155107314, i64 2155107334, i64 2155107397}
!3793 = !DILocation(line: 76, column: 1, scope: !3760)
!3794 = !{i64 2155107764, i64 2155107784, i64 2155107847}
!3795 = !DILocation(line: 77, column: 1, scope: !3760)
!3796 = !{i64 2155108214, i64 2155108234, i64 2155108297}
!3797 = !DILocation(line: 78, column: 1, scope: !3760)
!3798 = !{i64 2155108664, i64 2155108684, i64 2155108747}
!3799 = !DILocation(line: 79, column: 1, scope: !3760)
!3800 = !{i64 2155109114, i64 2155109134, i64 2155109197}
!3801 = !DILocation(line: 80, column: 1, scope: !3760)
!3802 = !{i64 2155109567, i64 2155109587, i64 2155109650}
!3803 = !DILocation(line: 84, column: 1, scope: !3760)
!3804 = !{i64 2155109899, i64 2155109919, i64 2155109982}
!3805 = !DILocation(line: 106, column: 1, scope: !3760)
!3806 = !{i64 2155110149, i64 2155110169, i64 2155110232}
!3807 = !DILocation(line: 11, column: 1, scope: !3808)
!3808 = !DILexicalBlockFile(scope: !3709, file: !3809, discriminator: 0)
!3809 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3810 = distinct !DISubprogram(name: "dh3_cb", scope: !106, file: !106, line: 108, type: !316, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3811)
!3811 = !{!3812}
!3812 = !DILocalVariable(name: "chan", arg: 1, scope: !3810, file: !106, line: 108, type: !264)
!3813 = !DILocation(line: 0, scope: !3810)
!3814 = !DILocation(line: 110, column: 19, scope: !3810)
!3815 = !DILocation(line: 112, column: 2, scope: !3810)
!3816 = !DILocation(line: 113, column: 1, scope: !3810)
!3817 = distinct !DISubprogram(name: "dh2_cb", scope: !106, file: !106, line: 99, type: !316, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3818)
!3818 = !{!3819}
!3819 = !DILocalVariable(name: "chan", arg: 1, scope: !3817, file: !106, line: 99, type: !264)
!3820 = !DILocation(line: 0, scope: !3817)
!3821 = !DILocation(line: 101, column: 19, scope: !3817)
!3822 = !DILocation(line: 103, column: 2, scope: !3817)
!3823 = !DILocation(line: 104, column: 1, scope: !3817)
!3824 = distinct !DISubprogram(name: "dh1_cb", scope: !106, file: !106, line: 90, type: !316, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3825)
!3825 = !{!3826}
!3826 = !DILocalVariable(name: "chan", arg: 1, scope: !3824, file: !106, line: 90, type: !264)
!3827 = !DILocation(line: 0, scope: !3824)
!3828 = !DILocation(line: 92, column: 19, scope: !3824)
!3829 = !DILocation(line: 94, column: 2, scope: !3824)
!3830 = !DILocation(line: 95, column: 1, scope: !3824)
!3831 = distinct !DISubprogram(name: "fh3_cb", scope: !106, file: !106, line: 58, type: !316, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3832)
!3832 = !{!3833, !3834}
!3833 = !DILocalVariable(name: "chan", arg: 1, scope: !3831, file: !106, line: 58, type: !264)
!3834 = !DILocalVariable(name: "msg", scope: !3831, file: !106, line: 60, type: !3835)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 32)
!3836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !438)
!3837 = !DILocation(line: 0, scope: !3831)
!3838 = !DILocation(line: 60, column: 33, scope: !3831)
!3839 = !DILocation(line: 62, column: 2, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !106, line: 62, column: 2)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !106, line: 62, column: 2)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !106, line: 62, column: 2)
!3843 = distinct !DILexicalBlock(scope: !3831, file: !106, line: 62, column: 2)
!3844 = !DILocation(line: 64, column: 1, scope: !3831)
!3845 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !267, file: !267, line: 416, type: !3846, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3848)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!13, !264}
!3848 = !{!3849}
!3849 = !DILocalVariable(name: "chan", arg: 1, scope: !3845, file: !267, line: 416, type: !264)
!3850 = !DILocation(line: 0, scope: !3845)
!3851 = !DILocation(line: 418, column: 2, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !267, line: 418, column: 2)
!3853 = distinct !DILexicalBlock(scope: !3845, file: !267, line: 418, column: 2)
!3854 = !DILocation(line: 418, column: 2, scope: !3853)
!3855 = !DILocation(line: 418, column: 2, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3852, file: !267, line: 418, column: 2)
!3857 = !DILocation(line: 420, column: 15, scope: !3845)
!3858 = !DILocation(line: 420, column: 2, scope: !3845)
!3859 = distinct !DISubprogram(name: "fh2_cb", scope: !106, file: !106, line: 48, type: !316, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3860)
!3860 = !{!3861, !3862}
!3861 = !DILocalVariable(name: "chan", arg: 1, scope: !3859, file: !106, line: 48, type: !264)
!3862 = !DILocalVariable(name: "msg", scope: !3859, file: !106, line: 50, type: !3835)
!3863 = !DILocation(line: 0, scope: !3859)
!3864 = !DILocation(line: 50, column: 33, scope: !3859)
!3865 = !DILocation(line: 52, column: 2, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !106, line: 52, column: 2)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !106, line: 52, column: 2)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !106, line: 52, column: 2)
!3869 = distinct !DILexicalBlock(scope: !3859, file: !106, line: 52, column: 2)
!3870 = !DILocation(line: 54, column: 1, scope: !3859)
!3871 = distinct !DISubprogram(name: "fh1_cb", scope: !106, file: !106, line: 38, type: !316, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3872)
!3872 = !{!3873, !3874}
!3873 = !DILocalVariable(name: "chan", arg: 1, scope: !3871, file: !106, line: 38, type: !264)
!3874 = !DILocalVariable(name: "msg", scope: !3871, file: !106, line: 40, type: !3835)
!3875 = !DILocation(line: 0, scope: !3871)
!3876 = !DILocation(line: 40, column: 33, scope: !3871)
!3877 = !DILocation(line: 42, column: 2, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !106, line: 42, column: 2)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !106, line: 42, column: 2)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !106, line: 42, column: 2)
!3881 = distinct !DILexicalBlock(scope: !3871, file: !106, line: 42, column: 2)
!3882 = !DILocation(line: 44, column: 1, scope: !3871)
!3883 = distinct !DISubprogram(name: "thread_handler1_task", scope: !106, file: !106, line: 130, type: !374, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3884)
!3884 = !{!3885, !3886}
!3885 = !DILocalVariable(name: "chan", scope: !3883, file: !106, line: 132, type: !264)
!3886 = !DILocalVariable(name: "msg", scope: !3887, file: !106, line: 135, type: !438)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !106, line: 134, column: 65)
!3888 = !DILocation(line: 132, column: 2, scope: !3883)
!3889 = !DILocation(line: 0, scope: !3883)
!3890 = !DILocation(line: 134, column: 10, scope: !3883)
!3891 = !DILocation(line: 134, column: 9, scope: !3883)
!3892 = !DILocation(line: 134, column: 2, scope: !3883)
!3893 = !DILocation(line: 135, column: 3, scope: !3887)
!3894 = !DILocation(line: 135, column: 21, scope: !3887)
!3895 = !DILocation(line: 137, column: 18, scope: !3887)
!3896 = !DILocation(line: 137, column: 3, scope: !3887)
!3897 = !DILocation(line: 139, column: 3, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !106, line: 139, column: 3)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !106, line: 139, column: 3)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !106, line: 139, column: 3)
!3901 = distinct !DILexicalBlock(scope: !3887, file: !106, line: 139, column: 3)
!3902 = !DILocation(line: 142, column: 2, scope: !3883)
!3903 = distinct !{!3903, !3892, !3902}
!3904 = !DILocation(line: 143, column: 1, scope: !3883)
!3905 = distinct !DISubprogram(name: "thread_handler2_task", scope: !106, file: !106, line: 149, type: !374, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3906)
!3906 = !{!3907, !3908}
!3907 = !DILocalVariable(name: "chan", scope: !3905, file: !106, line: 151, type: !264)
!3908 = !DILocalVariable(name: "msg", scope: !3909, file: !106, line: 154, type: !438)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !106, line: 153, column: 65)
!3910 = !DILocation(line: 151, column: 2, scope: !3905)
!3911 = !DILocation(line: 0, scope: !3905)
!3912 = !DILocation(line: 153, column: 10, scope: !3905)
!3913 = !DILocation(line: 153, column: 9, scope: !3905)
!3914 = !DILocation(line: 153, column: 2, scope: !3905)
!3915 = !DILocation(line: 154, column: 3, scope: !3909)
!3916 = !DILocation(line: 154, column: 21, scope: !3909)
!3917 = !DILocation(line: 156, column: 18, scope: !3909)
!3918 = !DILocation(line: 156, column: 3, scope: !3909)
!3919 = !DILocation(line: 158, column: 3, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !106, line: 158, column: 3)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !106, line: 158, column: 3)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !106, line: 158, column: 3)
!3923 = distinct !DILexicalBlock(scope: !3909, file: !106, line: 158, column: 3)
!3924 = !DILocation(line: 161, column: 2, scope: !3905)
!3925 = distinct !{!3925, !3914, !3924}
!3926 = !DILocation(line: 162, column: 1, scope: !3905)
!3927 = distinct !DISubprogram(name: "thread_handler3_task", scope: !106, file: !106, line: 168, type: !374, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3928)
!3928 = !{!3929, !3930}
!3929 = !DILocalVariable(name: "chan", scope: !3927, file: !106, line: 170, type: !264)
!3930 = !DILocalVariable(name: "msg", scope: !3931, file: !106, line: 173, type: !438)
!3931 = distinct !DILexicalBlock(scope: !3927, file: !106, line: 172, column: 65)
!3932 = !DILocation(line: 170, column: 2, scope: !3927)
!3933 = !DILocation(line: 0, scope: !3927)
!3934 = !DILocation(line: 172, column: 10, scope: !3927)
!3935 = !DILocation(line: 172, column: 9, scope: !3927)
!3936 = !DILocation(line: 172, column: 2, scope: !3927)
!3937 = !DILocation(line: 173, column: 3, scope: !3931)
!3938 = !DILocation(line: 173, column: 21, scope: !3931)
!3939 = !DILocation(line: 175, column: 18, scope: !3931)
!3940 = !DILocation(line: 175, column: 3, scope: !3931)
!3941 = !DILocation(line: 177, column: 3, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !106, line: 177, column: 3)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !106, line: 177, column: 3)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !106, line: 177, column: 3)
!3945 = distinct !DILexicalBlock(scope: !3931, file: !106, line: 177, column: 3)
!3946 = !DILocation(line: 180, column: 2, scope: !3927)
!3947 = distinct !{!3947, !3936, !3946}
!3948 = !DILocation(line: 181, column: 1, scope: !3927)
!3949 = distinct !DISubprogram(name: "main", scope: !106, file: !106, line: 117, type: !374, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3950)
!3950 = !{!3951}
!3951 = !DILocalVariable(name: "v", scope: !3949, file: !106, line: 123, type: !3952)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!3953 = !DILocation(line: 119, column: 2, scope: !3949)
!3954 = !DILocation(line: 120, column: 2, scope: !3949)
!3955 = !DILocation(line: 121, column: 2, scope: !3949)
!3956 = !DILocation(line: 0, scope: !3949)
!3957 = !DILocation(line: 126, column: 1, scope: !3949)
!3958 = distinct !DISubprogram(name: "wq_dh_cb", scope: !106, file: !106, line: 78, type: !122, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3959)
!3959 = !{!3960, !3961, !3962}
!3960 = !DILocalVariable(name: "item", arg: 1, scope: !3958, file: !106, line: 78, type: !124)
!3961 = !DILocalVariable(name: "msg", scope: !3958, file: !106, line: 80, type: !438)
!3962 = !DILocalVariable(name: "sens", scope: !3958, file: !106, line: 81, type: !104)
!3963 = !DILocation(line: 0, scope: !3958)
!3964 = !DILocation(line: 80, column: 2, scope: !3958)
!3965 = !DILocation(line: 80, column: 20, scope: !3958)
!3966 = !DILocation(line: 83, column: 23, scope: !3958)
!3967 = !DILocation(line: 83, column: 2, scope: !3958)
!3968 = !DILocation(line: 85, column: 2, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !106, line: 85, column: 2)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !106, line: 85, column: 2)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !106, line: 85, column: 2)
!3972 = distinct !DILexicalBlock(scope: !3958, file: !106, line: 85, column: 2)
!3973 = !DILocation(line: 88, column: 1, scope: !3958)
!3974 = distinct !DISubprogram(name: "peripheral_thread", scope: !462, file: !462, line: 13, type: !374, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !456, retainedNodes: !3975)
!3975 = !{!3976}
!3976 = !DILocalVariable(name: "sm", scope: !3974, file: !462, line: 15, type: !3977)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !426, line: 15, size: 96, elements: !3978)
!3978 = !{!3979, !3980, !3981}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3977, file: !426, line: 16, baseType: !190, size: 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "press", scope: !3977, file: !426, line: 17, baseType: !190, size: 32, offset: 32)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "humidity", scope: !3977, file: !426, line: 18, baseType: !190, size: 32, offset: 64)
!3982 = !DILocation(line: 15, column: 2, scope: !3974)
!3983 = !DILocation(line: 15, column: 20, scope: !3974)
!3984 = !DILocation(line: 0, scope: !3974)
!3985 = !DILocation(line: 17, column: 2, scope: !3974)
!3986 = !DILocation(line: 22, column: 15, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3974, file: !462, line: 17, column: 12)
!3988 = !DILocation(line: 21, column: 11, scope: !3987)
!3989 = !DILocation(line: 20, column: 12, scope: !3987)
!3990 = !DILocation(line: 24, column: 3, scope: !3987)
!3991 = !DILocation(line: 26, column: 3, scope: !3987)
!3992 = distinct !{!3992, !3985, !3993}
!3993 = !DILocation(line: 27, column: 2, scope: !3974)
!3994 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3995, file: !3995, line: 403, type: !3996, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !456, retainedNodes: !3998)
!3995 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!321, !321}
!3998 = !{!3999}
!3999 = !DILocalVariable(name: "t", arg: 1, scope: !3994, file: !3995, line: 403, type: !321)
!4000 = !DILocation(line: 0, scope: !3994)
!4001 = !DILocalVariable(name: "t", arg: 1, scope: !4002, file: !3995, line: 102, type: !321)
!4002 = distinct !DISubprogram(name: "z_tmcvt", scope: !3995, file: !3995, line: 102, type: !4003, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !456, retainedNodes: !4005)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!321, !321, !190, !190, !279, !279, !279, !279}
!4005 = !{!4001, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015}
!4006 = !DILocalVariable(name: "from_hz", arg: 2, scope: !4002, file: !3995, line: 102, type: !190)
!4007 = !DILocalVariable(name: "to_hz", arg: 3, scope: !4002, file: !3995, line: 103, type: !190)
!4008 = !DILocalVariable(name: "const_hz", arg: 4, scope: !4002, file: !3995, line: 103, type: !279)
!4009 = !DILocalVariable(name: "result32", arg: 5, scope: !4002, file: !3995, line: 104, type: !279)
!4010 = !DILocalVariable(name: "round_up", arg: 6, scope: !4002, file: !3995, line: 104, type: !279)
!4011 = !DILocalVariable(name: "round_off", arg: 7, scope: !4002, file: !3995, line: 105, type: !279)
!4012 = !DILocalVariable(name: "mul_ratio", scope: !4002, file: !3995, line: 107, type: !279)
!4013 = !DILocalVariable(name: "div_ratio", scope: !4002, file: !3995, line: 109, type: !279)
!4014 = !DILocalVariable(name: "off", scope: !4002, file: !3995, line: 116, type: !321)
!4015 = !DILocalVariable(name: "rdivisor", scope: !4016, file: !3995, line: 119, type: !190)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !3995, line: 118, column: 18)
!4017 = distinct !DILexicalBlock(scope: !4002, file: !3995, line: 118, column: 6)
!4018 = !DILocation(line: 0, scope: !4002, inlinedAt: !4019)
!4019 = distinct !DILocation(line: 406, column: 9, scope: !3994)
!4020 = !DILocation(line: 145, column: 13, scope: !4021, inlinedAt: !4019)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !3995, line: 144, column: 10)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !3995, line: 142, column: 7)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !3995, line: 141, column: 24)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !3995, line: 141, column: 13)
!4025 = distinct !DILexicalBlock(scope: !4002, file: !3995, line: 134, column: 6)
!4026 = !DILocation(line: 406, column: 2, scope: !3994)
!4027 = distinct !DISubprogram(name: "k_msleep", scope: !110, file: !110, line: 439, type: !4028, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !456, retainedNodes: !4030)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!371, !371}
!4030 = !{!4031}
!4031 = !DILocalVariable(name: "ms", arg: 1, scope: !4027, file: !110, line: 439, type: !371)
!4032 = !DILocation(line: 0, scope: !4027)
!4033 = !DILocation(line: 441, column: 17, scope: !4027)
!4034 = !DILocation(line: 441, column: 9, scope: !4027)
!4035 = !DILocation(line: 441, column: 2, scope: !4027)
!4036 = distinct !DISubprogram(name: "k_sleep", scope: !4037, file: !4037, line: 91, type: !4038, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !456, retainedNodes: !4044)
!4037 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!371, !4040}
!4040 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !4041)
!4041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !4042)
!4042 = !{!4043}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !4041, file: !320, line: 66, baseType: !319, size: 64)
!4044 = !{!4045}
!4045 = !DILocalVariable(name: "timeout", arg: 1, scope: !4036, file: !4037, line: 91, type: !4040)
!4046 = !DILocation(line: 0, scope: !4036)
!4047 = !DILocation(line: 99, column: 2, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4036, file: !4037, line: 99, column: 2)
!4049 = !{i64 2151240701}
!4050 = !DILocation(line: 100, column: 9, scope: !4036)
!4051 = !DILocation(line: 100, column: 2, scope: !4036)
!4052 = distinct !DISubprogram(name: "cbvprintf_package", scope: !603, file: !603, line: 233, type: !4053, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4062)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!103, !102, !239, !190, !377, !4055}
!4055 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4056, line: 99, baseType: !4057)
!4056 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4056, line: 40, baseType: !4058)
!4058 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !603, baseType: !4059)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4060)
!4060 = !{!4061}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4059, file: !603, line: 18, baseType: !102, size: 32)
!4062 = !{!4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4098, !4107, !4110, !4111, !4114, !4117, !4120, !4123, !4129}
!4063 = !DILocalVariable(name: "packaged", arg: 1, scope: !4052, file: !603, line: 233, type: !102)
!4064 = !DILocalVariable(name: "len", arg: 2, scope: !4052, file: !603, line: 233, type: !239)
!4065 = !DILocalVariable(name: "flags", arg: 3, scope: !4052, file: !603, line: 233, type: !190)
!4066 = !DILocalVariable(name: "fmt", arg: 4, scope: !4052, file: !603, line: 234, type: !377)
!4067 = !DILocalVariable(name: "ap", arg: 5, scope: !4052, file: !603, line: 234, type: !4055)
!4068 = !DILocalVariable(name: "buf0", scope: !4052, file: !603, line: 247, type: !601)
!4069 = !DILocalVariable(name: "buf", scope: !4052, file: !603, line: 248, type: !601)
!4070 = !DILocalVariable(name: "size", scope: !4052, file: !603, line: 249, type: !32)
!4071 = !DILocalVariable(name: "align", scope: !4052, file: !603, line: 250, type: !32)
!4072 = !DILocalVariable(name: "str_ptr_pos", scope: !4052, file: !603, line: 251, type: !4073)
!4073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 128, elements: !402)
!4074 = !DILocalVariable(name: "str_ptr_arg", scope: !4052, file: !603, line: 252, type: !4073)
!4075 = !DILocalVariable(name: "s_idx", scope: !4052, file: !603, line: 253, type: !32)
!4076 = !DILocalVariable(name: "s_rw_cnt", scope: !4052, file: !603, line: 254, type: !32)
!4077 = !DILocalVariable(name: "s_ro_cnt", scope: !4052, file: !603, line: 255, type: !32)
!4078 = !DILocalVariable(name: "arg_idx", scope: !4052, file: !603, line: 256, type: !103)
!4079 = !DILocalVariable(name: "i", scope: !4052, file: !603, line: 257, type: !32)
!4080 = !DILocalVariable(name: "s", scope: !4052, file: !603, line: 258, type: !377)
!4081 = !DILocalVariable(name: "parsing", scope: !4052, file: !603, line: 259, type: !279)
!4082 = !DILocalVariable(name: "rws_pos_en", scope: !4052, file: !603, line: 263, type: !279)
!4083 = !DILocalVariable(name: "fros_cnt", scope: !4052, file: !603, line: 268, type: !103)
!4084 = !DILocalVariable(name: "is_str_arg", scope: !4052, file: !603, line: 269, type: !279)
!4085 = !DILocalVariable(name: "pkg_hdr", scope: !4052, file: !603, line: 270, type: !4086)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 32)
!4087 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4088, line: 78, size: 32, elements: !4089)
!4088 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4089 = !{!4090, !4097}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4087, file: !4088, line: 80, baseType: !4091, size: 32)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4088, line: 45, size: 32, elements: !4092)
!4092 = !{!4093, !4094, !4095, !4096}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4091, file: !4088, line: 47, baseType: !173, size: 8)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4091, file: !4088, line: 50, baseType: !173, size: 8, offset: 8)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4091, file: !4088, line: 53, baseType: !173, size: 8, offset: 16)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4091, file: !4088, line: 56, baseType: !173, size: 8, offset: 24)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4087, file: !4088, line: 82, baseType: !102, size: 32)
!4098 = !DILocalVariable(name: "v", scope: !4099, file: !603, line: 567, type: !4103)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !603, line: 562, column: 14)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !603, line: 481, column: 18)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !603, line: 466, column: 3)
!4102 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 343, column: 15)
!4103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4052, file: !603, line: 567, size: 64, elements: !4104)
!4104 = !{!4105, !4106}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4103, file: !603, line: 567, baseType: !594, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4103, file: !603, line: 567, baseType: !592, size: 64)
!4107 = !DILocalVariable(name: "is_ro", scope: !4108, file: !603, line: 620, type: !279)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !603, line: 613, column: 19)
!4109 = distinct !DILexicalBlock(scope: !4102, file: !603, line: 613, column: 7)
!4110 = !DILocalVariable(name: "do_ro", scope: !4108, file: !603, line: 621, type: !279)
!4111 = !DILocalVariable(name: "s_ptr_idx", scope: !4112, file: !603, line: 626, type: !190)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !603, line: 625, column: 11)
!4113 = distinct !DILexicalBlock(scope: !4108, file: !603, line: 623, column: 8)
!4114 = !DILocalVariable(name: "v", scope: !4115, file: !603, line: 684, type: !103)
!4115 = distinct !DILexicalBlock(scope: !4116, file: !603, line: 683, column: 35)
!4116 = distinct !DILexicalBlock(scope: !4109, file: !603, line: 683, column: 14)
!4117 = !DILocalVariable(name: "v", scope: !4118, file: !603, line: 691, type: !598)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !603, line: 690, column: 36)
!4119 = distinct !DILexicalBlock(scope: !4116, file: !603, line: 690, column: 14)
!4120 = !DILocalVariable(name: "v", scope: !4121, file: !603, line: 698, type: !204)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !603, line: 697, column: 41)
!4122 = distinct !DILexicalBlock(scope: !4119, file: !603, line: 697, column: 14)
!4123 = !DILocalVariable(name: "pos", scope: !4124, file: !603, line: 762, type: !173)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !603, line: 757, column: 31)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !603, line: 757, column: 3)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !603, line: 757, column: 3)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !603, line: 756, column: 16)
!4128 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 756, column: 6)
!4129 = !DILabel(scope: !4108, name: "process_string", file: !603, line: 615)
!4130 = !DILocation(line: 0, scope: !4052)
!4131 = !DILocation(line: 251, column: 2, scope: !4052)
!4132 = !DILocation(line: 251, column: 10, scope: !4052)
!4133 = !DILocation(line: 252, column: 2, scope: !4052)
!4134 = !DILocation(line: 252, column: 10, scope: !4052)
!4135 = !DILocation(line: 263, column: 29, scope: !4052)
!4136 = !DILocation(line: 263, column: 21, scope: !4052)
!4137 = !DILocation(line: 268, column: 21, scope: !4052)
!4138 = !DILocation(line: 268, column: 19, scope: !4052)
!4139 = !DILocation(line: 273, column: 6, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 273, column: 6)
!4141 = !DILocation(line: 273, column: 26, scope: !4140)
!4142 = !DILocation(line: 273, column: 6, scope: !4052)
!4143 = !DILocation(line: 297, column: 6, scope: !4052)
!4144 = !DILocation(line: 305, column: 11, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 305, column: 6)
!4146 = !DILocation(line: 305, column: 6, scope: !4052)
!4147 = !DILocation(line: 327, column: 19, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 327, column: 6)
!4149 = !DILocation(line: 327, column: 22, scope: !4148)
!4150 = !DILocation(line: 327, column: 33, scope: !4148)
!4151 = !DILocation(line: 327, column: 50, scope: !4148)
!4152 = !DILocation(line: 327, column: 6, scope: !4052)
!4153 = !DILocation(line: 338, column: 9, scope: !4052)
!4154 = !DILocation(line: 341, column: 2, scope: !4052)
!4155 = !DILocation(line: 472, column: 8, scope: !4101)
!4156 = !DILocation(line: 473, column: 14, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !603, line: 473, column: 9)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !603, line: 472, column: 18)
!4159 = distinct !DILexicalBlock(scope: !4101, file: !603, line: 472, column: 8)
!4160 = !DILocation(line: 473, column: 9, scope: !4158)
!4161 = !DILocation(line: 479, column: 5, scope: !4158)
!4162 = !DILocation(line: 468, column: 9, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4101, file: !603, line: 468, column: 8)
!4164 = !DILocation(line: 468, column: 8, scope: !4163)
!4165 = !DILocation(line: 468, column: 15, scope: !4163)
!4166 = !DILocation(line: 468, column: 8, scope: !4101)
!4167 = distinct !{!4167, !4168, !4169}
!4168 = !DILocation(line: 343, column: 2, scope: !4052)
!4169 = !DILocation(line: 712, column: 2, scope: !4052)
!4170 = !DILocation(line: 481, column: 4, scope: !4101)
!4171 = !DILocation(line: 484, column: 12, scope: !4100)
!4172 = !DILocation(line: 485, column: 5, scope: !4100)
!4173 = !DILocation(line: 505, column: 5, scope: !4100)
!4174 = !DILocation(line: 518, column: 5, scope: !4100)
!4175 = !DILocation(line: 523, column: 5, scope: !4100)
!4176 = !DILocation(line: 532, column: 9, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4100, file: !603, line: 532, column: 9)
!4178 = !DILocation(line: 532, column: 17, scope: !4177)
!4179 = !DILocation(line: 532, column: 9, scope: !4100)
!4180 = !DILocation(line: 533, column: 10, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !603, line: 533, column: 10)
!4182 = distinct !DILexicalBlock(scope: !4177, file: !603, line: 532, column: 25)
!4183 = !DILocation(line: 533, column: 18, scope: !4181)
!4184 = !DILocation(line: 0, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4099, file: !603, line: 569, column: 9)
!4186 = !DILocation(line: 0, scope: !4099)
!4187 = !DILocation(line: 579, column: 20, scope: !4099)
!4188 = !DILocation(line: 579, column: 11, scope: !4099)
!4189 = !DILocation(line: 580, column: 9, scope: !4099)
!4190 = !DILocation(line: 582, column: 21, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !603, line: 582, column: 10)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !603, line: 580, column: 23)
!4193 = distinct !DILexicalBlock(scope: !4099, file: !603, line: 580, column: 9)
!4194 = !DILocation(line: 582, column: 28, scope: !4191)
!4195 = !DILocation(line: 582, column: 10, scope: !4192)
!4196 = !DILocation(line: 0, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !603, line: 587, column: 17)
!4198 = distinct !DILexicalBlock(scope: !4192, file: !603, line: 585, column: 10)
!4199 = !DILocation(line: 593, column: 9, scope: !4099)
!4200 = !DILocation(line: 600, column: 5, scope: !4100)
!4201 = !DILocation(line: 605, column: 18, scope: !4102)
!4202 = !DILocation(line: 605, column: 9, scope: !4102)
!4203 = !DILocation(line: 608, column: 20, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4102, file: !603, line: 608, column: 7)
!4205 = !DILocation(line: 608, column: 23, scope: !4204)
!4206 = !DILocation(line: 608, column: 34, scope: !4204)
!4207 = !DILocation(line: 608, column: 41, scope: !4204)
!4208 = !DILocation(line: 608, column: 7, scope: !4102)
!4209 = !DILocation(line: 613, column: 7, scope: !4102)
!4210 = !DILocation(line: 614, column: 8, scope: !4108)
!4211 = !DILocation(line: 614, column: 4, scope: !4108)
!4212 = !DILocation(line: 256, column: 6, scope: !4052)
!4213 = !DILocation(line: 254, column: 15, scope: !4052)
!4214 = !DILocation(line: 320, column: 7, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4145, file: !603, line: 305, column: 20)
!4216 = !DILocation(line: 615, column: 1, scope: !4108)
!4217 = !DILocation(line: 616, column: 8, scope: !4108)
!4218 = !DILocation(line: 617, column: 5, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !603, line: 616, column: 22)
!4220 = distinct !DILexicalBlock(scope: !4108, file: !603, line: 616, column: 8)
!4221 = !DILocation(line: 617, column: 25, scope: !4219)
!4222 = !DILocation(line: 618, column: 4, scope: !4219)
!4223 = !DILocation(line: 620, column: 26, scope: !4108)
!4224 = !DILocation(line: 620, column: 29, scope: !4108)
!4225 = !DILocation(line: 620, column: 17, scope: !4108)
!4226 = !DILocation(line: 620, column: 43, scope: !4108)
!4227 = !DILocation(line: 0, scope: !4108)
!4228 = !DILocation(line: 623, column: 14, scope: !4113)
!4229 = !DILocation(line: 626, column: 26, scope: !4112)
!4230 = !DILocation(line: 626, column: 37, scope: !4112)
!4231 = !DILocation(line: 0, scope: !4112)
!4232 = !DILocation(line: 634, column: 15, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4112, file: !603, line: 634, column: 9)
!4234 = !DILocation(line: 635, column: 6, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !603, line: 635, column: 6)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !603, line: 635, column: 6)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !603, line: 635, column: 6)
!4238 = distinct !DILexicalBlock(scope: !4233, file: !603, line: 634, column: 44)
!4239 = !DILocation(line: 639, column: 15, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4112, file: !603, line: 639, column: 9)
!4241 = !DILocation(line: 639, column: 9, scope: !4112)
!4242 = !DILocation(line: 640, column: 6, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !603, line: 640, column: 6)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !603, line: 640, column: 6)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !603, line: 640, column: 6)
!4246 = distinct !DILexicalBlock(scope: !4240, file: !603, line: 639, column: 43)
!4247 = !DILocation(line: 644, column: 9, scope: !4112)
!4248 = !DILocation(line: 649, column: 27, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !603, line: 644, column: 23)
!4250 = distinct !DILexicalBlock(scope: !4112, file: !603, line: 644, column: 9)
!4251 = !DILocation(line: 649, column: 6, scope: !4249)
!4252 = !DILocation(line: 649, column: 25, scope: !4249)
!4253 = !DILocation(line: 650, column: 27, scope: !4249)
!4254 = !DILocation(line: 650, column: 6, scope: !4249)
!4255 = !DILocation(line: 650, column: 25, scope: !4249)
!4256 = !DILocation(line: 651, column: 10, scope: !4249)
!4257 = !DILocation(line: 653, column: 26, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !603, line: 651, column: 17)
!4259 = distinct !DILexicalBlock(scope: !4249, file: !603, line: 651, column: 10)
!4260 = !DILocation(line: 654, column: 15, scope: !4258)
!4261 = !DILocation(line: 655, column: 6, scope: !4258)
!4262 = !DILocation(line: 656, column: 15, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4259, file: !603, line: 655, column: 13)
!4264 = !DILocation(line: 658, column: 16, scope: !4250)
!4265 = !DILocation(line: 663, column: 10, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !603, line: 658, column: 23)
!4267 = distinct !DILexicalBlock(scope: !4250, file: !603, line: 658, column: 16)
!4268 = !DILocation(line: 664, column: 5, scope: !4266)
!4269 = !DILocation(line: 664, column: 16, scope: !4267)
!4270 = !DILocation(line: 669, column: 10, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !603, line: 664, column: 28)
!4272 = distinct !DILexicalBlock(scope: !4267, file: !603, line: 664, column: 16)
!4273 = !DILocation(line: 670, column: 5, scope: !4271)
!4274 = !DILocation(line: 675, column: 13, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4272, file: !603, line: 670, column: 12)
!4276 = !DILocation(line: 675, column: 27, scope: !4275)
!4277 = !DILocation(line: 675, column: 10, scope: !4275)
!4278 = !DILocation(line: 678, column: 10, scope: !4112)
!4279 = !DILocation(line: 680, column: 8, scope: !4108)
!4280 = !DILocation(line: 683, column: 14, scope: !4109)
!4281 = !DILocation(line: 684, column: 12, scope: !4115)
!4282 = !DILocation(line: 0, scope: !4115)
!4283 = !DILocation(line: 686, column: 8, scope: !4115)
!4284 = !DILocation(line: 687, column: 5, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !603, line: 686, column: 22)
!4286 = distinct !DILexicalBlock(scope: !4115, file: !603, line: 686, column: 8)
!4287 = !DILocation(line: 687, column: 17, scope: !4285)
!4288 = !DILocation(line: 688, column: 4, scope: !4285)
!4289 = !DILocation(line: 698, column: 18, scope: !4121)
!4290 = !DILocation(line: 0, scope: !4121)
!4291 = !DILocation(line: 700, column: 8, scope: !4121)
!4292 = !DILocation(line: 704, column: 6, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !603, line: 703, column: 12)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !603, line: 701, column: 9)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !603, line: 700, column: 22)
!4296 = distinct !DILexicalBlock(scope: !4121, file: !603, line: 700, column: 8)
!4297 = !DILocation(line: 704, column: 24, scope: !4293)
!4298 = !DILocation(line: 706, column: 4, scope: !4295)
!4299 = !DILocation(line: 709, column: 4, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !603, line: 709, column: 4)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !603, line: 709, column: 4)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !603, line: 709, column: 4)
!4303 = distinct !DILexicalBlock(scope: !4122, file: !603, line: 708, column: 10)
!4304 = !DILocation(line: 0, scope: !4116)
!4305 = !DILocation(line: 0, scope: !4102)
!4306 = !DILocation(line: 720, column: 6, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 720, column: 6)
!4308 = !DILocation(line: 720, column: 17, scope: !4307)
!4309 = !DILocation(line: 720, column: 31, scope: !4307)
!4310 = !DILocation(line: 720, column: 6, scope: !4052)
!4311 = !DILocation(line: 721, column: 3, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !603, line: 721, column: 3)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !603, line: 721, column: 3)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !603, line: 721, column: 3)
!4315 = distinct !DILexicalBlock(scope: !4307, file: !603, line: 720, column: 38)
!4316 = !DILocation(line: 729, column: 6, scope: !4052)
!4317 = !DILocation(line: 730, column: 21, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !603, line: 729, column: 20)
!4319 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 729, column: 6)
!4320 = !DILocation(line: 730, column: 27, scope: !4318)
!4321 = !DILocation(line: 730, column: 3, scope: !4318)
!4322 = !DILocation(line: 737, column: 22, scope: !4052)
!4323 = !DILocation(line: 737, column: 20, scope: !4052)
!4324 = !DILocation(line: 0, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 739, column: 6)
!4326 = !DILocation(line: 745, column: 17, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4325, file: !603, line: 743, column: 9)
!4328 = !DILocation(line: 745, column: 25, scope: !4327)
!4329 = !DILocation(line: 746, column: 17, scope: !4327)
!4330 = !DILocation(line: 746, column: 28, scope: !4327)
!4331 = !DILocation(line: 749, column: 29, scope: !4052)
!4332 = !DILocation(line: 749, column: 16, scope: !4052)
!4333 = !DILocation(line: 749, column: 27, scope: !4052)
!4334 = !DILocation(line: 756, column: 6, scope: !4128)
!4335 = !DILocation(line: 756, column: 6, scope: !4052)
!4336 = !DILocation(line: 757, column: 3, scope: !4126)
!4337 = !DILocation(line: 758, column: 10, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4124, file: !603, line: 758, column: 8)
!4339 = !DILocation(line: 758, column: 25, scope: !4338)
!4340 = !DILocation(line: 758, column: 8, scope: !4124)
!4341 = !DILocation(line: 0, scope: !4124)
!4342 = !DILocation(line: 765, column: 8, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4124, file: !603, line: 765, column: 8)
!4344 = !DILocation(line: 765, column: 19, scope: !4343)
!4345 = !DILocation(line: 765, column: 23, scope: !4343)
!4346 = !DILocation(line: 765, column: 8, scope: !4124)
!4347 = !DILocation(line: 762, column: 33, scope: !4124)
!4348 = !DILocation(line: 769, column: 8, scope: !4124)
!4349 = !DILocation(line: 769, column: 11, scope: !4124)
!4350 = !DILocation(line: 757, column: 27, scope: !4125)
!4351 = !DILocation(line: 757, column: 17, scope: !4125)
!4352 = distinct !{!4352, !4336, !4353}
!4353 = !DILocation(line: 770, column: 3, scope: !4126)
!4354 = !DILocation(line: 774, column: 16, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !603, line: 774, column: 2)
!4356 = distinct !DILexicalBlock(scope: !4052, file: !603, line: 774, column: 2)
!4357 = !DILocation(line: 774, column: 2, scope: !4356)
!4358 = !DILocation(line: 776, column: 16, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !603, line: 776, column: 7)
!4360 = distinct !DILexicalBlock(scope: !4355, file: !603, line: 774, column: 30)
!4361 = !DILocation(line: 776, column: 19, scope: !4359)
!4362 = !DILocation(line: 776, column: 34, scope: !4359)
!4363 = !DILocation(line: 776, column: 7, scope: !4360)
!4364 = !DILocation(line: 780, column: 7, scope: !4360)
!4365 = !DILocation(line: 782, column: 13, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !603, line: 780, column: 19)
!4367 = distinct !DILexicalBlock(scope: !4360, file: !603, line: 780, column: 7)
!4368 = !DILocation(line: 782, column: 8, scope: !4366)
!4369 = !DILocation(line: 782, column: 11, scope: !4366)
!4370 = !DILocation(line: 783, column: 3, scope: !4366)
!4371 = !DILocation(line: 785, column: 26, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4367, file: !603, line: 783, column: 10)
!4373 = !DILocation(line: 785, column: 41, scope: !4372)
!4374 = !DILocation(line: 785, column: 24, scope: !4372)
!4375 = !DILocation(line: 785, column: 8, scope: !4372)
!4376 = !DILocation(line: 787, column: 52, scope: !4372)
!4377 = !DILocation(line: 789, column: 11, scope: !4372)
!4378 = !DILocation(line: 789, column: 21, scope: !4372)
!4379 = !DILocation(line: 0, scope: !4367)
!4380 = !DILocation(line: 793, column: 7, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4360, file: !603, line: 793, column: 7)
!4382 = !DILocation(line: 793, column: 18, scope: !4381)
!4383 = !DILocation(line: 793, column: 22, scope: !4381)
!4384 = !DILocation(line: 793, column: 29, scope: !4381)
!4385 = !DILocation(line: 793, column: 7, scope: !4360)
!4386 = !DILocation(line: 797, column: 12, scope: !4360)
!4387 = !DILocation(line: 797, column: 7, scope: !4360)
!4388 = !DILocation(line: 797, column: 10, scope: !4360)
!4389 = !DILocation(line: 799, column: 3, scope: !4360)
!4390 = !DILocation(line: 800, column: 7, scope: !4360)
!4391 = !DILocation(line: 801, column: 2, scope: !4360)
!4392 = !DILocation(line: 338, column: 4, scope: !4052)
!4393 = !DILocation(line: 774, column: 26, scope: !4355)
!4394 = distinct !{!4394, !4357, !4395}
!4395 = !DILocation(line: 801, column: 2, scope: !4356)
!4396 = !DILocation(line: 808, column: 9, scope: !4052)
!4397 = !DILocation(line: 808, column: 2, scope: !4052)
!4398 = !DILocation(line: 813, column: 1, scope: !4052)
!4399 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !603, file: !603, line: 33, type: !4400, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4402)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!279, !377}
!4402 = !{!4403}
!4403 = !DILocalVariable(name: "addr", arg: 1, scope: !4399, file: !603, line: 33, type: !377)
!4404 = !DILocation(line: 0, scope: !4399)
!4405 = !DILocation(line: 41, column: 9, scope: !4399)
!4406 = !DILocation(line: 41, column: 2, scope: !4399)
!4407 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4408, file: !4408, line: 24, type: !4409, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4411)
!4408 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!279, !13}
!4411 = !{!4412}
!4412 = !DILocalVariable(name: "addr", arg: 1, scope: !4407, file: !4408, line: 24, type: !13)
!4413 = !DILocation(line: 0, scope: !4407)
!4414 = !DILocation(line: 49, column: 30, scope: !4407)
!4415 = !DILocation(line: 49, column: 57, scope: !4407)
!4416 = !DILocation(line: 49, column: 2, scope: !4407)
!4417 = distinct !DISubprogram(name: "cbprintf_package", scope: !603, file: !603, line: 815, type: !4418, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4420)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!103, !102, !239, !190, !377, null}
!4420 = !{!4421, !4422, !4423, !4424, !4425, !4426}
!4421 = !DILocalVariable(name: "packaged", arg: 1, scope: !4417, file: !603, line: 815, type: !102)
!4422 = !DILocalVariable(name: "len", arg: 2, scope: !4417, file: !603, line: 815, type: !239)
!4423 = !DILocalVariable(name: "flags", arg: 3, scope: !4417, file: !603, line: 815, type: !190)
!4424 = !DILocalVariable(name: "format", arg: 4, scope: !4417, file: !603, line: 816, type: !377)
!4425 = !DILocalVariable(name: "ap", scope: !4417, file: !603, line: 818, type: !4055)
!4426 = !DILocalVariable(name: "ret", scope: !4417, file: !603, line: 819, type: !103)
!4427 = !DILocation(line: 0, scope: !4417)
!4428 = !DILocation(line: 818, column: 2, scope: !4417)
!4429 = !DILocation(line: 818, column: 10, scope: !4417)
!4430 = !DILocation(line: 821, column: 2, scope: !4417)
!4431 = !DILocation(line: 822, column: 8, scope: !4417)
!4432 = !DILocation(line: 823, column: 2, scope: !4417)
!4433 = !DILocation(line: 825, column: 1, scope: !4417)
!4434 = !DILocation(line: 824, column: 2, scope: !4417)
!4435 = distinct !DISubprogram(name: "cbpprintf_external", scope: !603, file: !603, line: 827, type: !4436, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4446)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{!103, !4438, !4442, !102, !102}
!4438 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4088, line: 297, baseType: !4439)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 32)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!103, null}
!4442 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4088, line: 328, baseType: !4443)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 32)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!103, !4438, !102, !377, !4055}
!4446 = !{!4447, !4448, !4449, !4450, !4451, !4452, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465}
!4447 = !DILocalVariable(name: "out", arg: 1, scope: !4435, file: !603, line: 827, type: !4438)
!4448 = !DILocalVariable(name: "formatter", arg: 2, scope: !4435, file: !603, line: 828, type: !4442)
!4449 = !DILocalVariable(name: "ctx", arg: 3, scope: !4435, file: !603, line: 829, type: !102)
!4450 = !DILocalVariable(name: "packaged", arg: 4, scope: !4435, file: !603, line: 829, type: !102)
!4451 = !DILocalVariable(name: "buf", scope: !4435, file: !603, line: 831, type: !601)
!4452 = !DILocalVariable(name: "hdr", scope: !4435, file: !603, line: 832, type: !4453)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 32)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4088, line: 96, size: 64, elements: !4455)
!4455 = !{!4456, !4457}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4454, file: !4088, line: 98, baseType: !4087, size: 32)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4454, file: !4088, line: 101, baseType: !307, size: 32, offset: 32)
!4458 = !DILocalVariable(name: "s", scope: !4435, file: !603, line: 833, type: !307)
!4459 = !DILocalVariable(name: "ps", scope: !4435, file: !603, line: 833, type: !600)
!4460 = !DILocalVariable(name: "i", scope: !4435, file: !603, line: 834, type: !32)
!4461 = !DILocalVariable(name: "args_size", scope: !4435, file: !603, line: 834, type: !32)
!4462 = !DILocalVariable(name: "s_nbr", scope: !4435, file: !603, line: 834, type: !32)
!4463 = !DILocalVariable(name: "ros_nbr", scope: !4435, file: !603, line: 834, type: !32)
!4464 = !DILocalVariable(name: "rws_nbr", scope: !4435, file: !603, line: 834, type: !32)
!4465 = !DILocalVariable(name: "s_idx", scope: !4435, file: !603, line: 834, type: !32)
!4466 = !DILocation(line: 0, scope: !4435)
!4467 = !DILocation(line: 836, column: 10, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4435, file: !603, line: 836, column: 6)
!4469 = !DILocation(line: 836, column: 6, scope: !4435)
!4470 = !DILocation(line: 842, column: 28, scope: !4435)
!4471 = !DILocation(line: 842, column: 14, scope: !4435)
!4472 = !DILocation(line: 852, column: 16, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !603, line: 852, column: 2)
!4474 = distinct !DILexicalBlock(scope: !4435, file: !603, line: 852, column: 2)
!4475 = !DILocation(line: 852, column: 2, scope: !4474)
!4476 = !DILocation(line: 841, column: 28, scope: !4435)
!4477 = !DILocation(line: 841, column: 14, scope: !4435)
!4478 = !DILocation(line: 841, column: 32, scope: !4435)
!4479 = !DILocation(line: 847, column: 19, scope: !4435)
!4480 = !DILocation(line: 843, column: 28, scope: !4435)
!4481 = !DILocation(line: 843, column: 14, scope: !4435)
!4482 = !DILocation(line: 847, column: 31, scope: !4435)
!4483 = !DILocation(line: 844, column: 28, scope: !4435)
!4484 = !DILocation(line: 844, column: 14, scope: !4435)
!4485 = !DILocation(line: 847, column: 45, scope: !4435)
!4486 = !DILocation(line: 847, column: 41, scope: !4435)
!4487 = !DILocation(line: 854, column: 24, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4473, file: !603, line: 852, column: 30)
!4489 = !DILocation(line: 854, column: 11, scope: !4488)
!4490 = !DILocation(line: 855, column: 30, scope: !4488)
!4491 = !DILocation(line: 855, column: 22, scope: !4488)
!4492 = !DILocation(line: 855, column: 8, scope: !4488)
!4493 = !DILocation(line: 857, column: 7, scope: !4488)
!4494 = !DILocation(line: 859, column: 8, scope: !4488)
!4495 = !DILocation(line: 859, column: 18, scope: !4488)
!4496 = !DILocation(line: 859, column: 5, scope: !4488)
!4497 = !DILocation(line: 852, column: 26, scope: !4473)
!4498 = distinct !{!4498, !4475, !4499}
!4499 = !DILocation(line: 860, column: 2, scope: !4474)
!4500 = !DILocation(line: 863, column: 6, scope: !4435)
!4501 = !DILocation(line: 866, column: 56, scope: !4435)
!4502 = !DILocation(line: 866, column: 9, scope: !4435)
!4503 = !DILocation(line: 866, column: 2, scope: !4435)
!4504 = !DILocation(line: 867, column: 1, scope: !4435)
!4505 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !603, file: !603, line: 179, type: !4506, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4508)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!103, !4438, !4442, !102, !377, !102}
!4508 = !{!4509, !4510, !4511, !4512, !4513, !4514}
!4509 = !DILocalVariable(name: "out", arg: 1, scope: !4505, file: !603, line: 179, type: !4438)
!4510 = !DILocalVariable(name: "formatter", arg: 2, scope: !4505, file: !603, line: 180, type: !4442)
!4511 = !DILocalVariable(name: "ctx", arg: 3, scope: !4505, file: !603, line: 181, type: !102)
!4512 = !DILocalVariable(name: "fmt", arg: 4, scope: !4505, file: !603, line: 182, type: !377)
!4513 = !DILocalVariable(name: "buf", arg: 5, scope: !4505, file: !603, line: 182, type: !102)
!4514 = !DILocalVariable(name: "u", scope: !4505, file: !603, line: 187, type: !4515)
!4515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4505, file: !603, line: 184, size: 32, elements: !4516)
!4516 = !{!4517, !4518}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4515, file: !603, line: 185, baseType: !4055, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4515, file: !603, line: 186, baseType: !102, size: 32)
!4519 = !DILocation(line: 0, scope: !4505)
!4520 = !DILocation(line: 191, column: 9, scope: !4505)
!4521 = !DILocation(line: 191, column: 2, scope: !4505)
!4522 = distinct !DISubprogram(name: "is_ptr", scope: !603, file: !603, line: 881, type: !4523, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4525)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!279, !377, !103}
!4525 = !{!4526, !4527, !4528, !4529, !4530}
!4526 = !DILocalVariable(name: "fmt", arg: 1, scope: !4522, file: !603, line: 881, type: !377)
!4527 = !DILocalVariable(name: "n", arg: 2, scope: !4522, file: !603, line: 881, type: !103)
!4528 = !DILocalVariable(name: "c", scope: !4522, file: !603, line: 883, type: !222)
!4529 = !DILocalVariable(name: "mod", scope: !4522, file: !603, line: 884, type: !279)
!4530 = !DILocalVariable(name: "cnt", scope: !4522, file: !603, line: 885, type: !103)
!4531 = !DILocation(line: 0, scope: !4522)
!4532 = !DILocation(line: 887, column: 14, scope: !4522)
!4533 = !DILocation(line: 887, column: 22, scope: !4522)
!4534 = !DILocation(line: 887, column: 2, scope: !4522)
!4535 = !DILocation(line: 887, column: 18, scope: !4522)
!4536 = !DILocation(line: 888, column: 7, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4522, file: !603, line: 887, column: 31)
!4538 = !DILocation(line: 889, column: 12, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !603, line: 889, column: 8)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !603, line: 888, column: 12)
!4541 = distinct !DILexicalBlock(scope: !4537, file: !603, line: 888, column: 7)
!4542 = !DILocation(line: 889, column: 8, scope: !4540)
!4543 = !DILocation(line: 890, column: 11, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !603, line: 890, column: 9)
!4545 = distinct !DILexicalBlock(scope: !4539, file: !603, line: 889, column: 18)
!4546 = !DILocation(line: 890, column: 9, scope: !4545)
!4547 = !DILocation(line: 892, column: 16, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !603, line: 892, column: 16)
!4549 = !DILocation(line: 892, column: 16, scope: !4544)
!4550 = !DILocation(line: 895, column: 15, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4539, file: !603, line: 895, column: 15)
!4552 = !DILocation(line: 895, column: 15, scope: !4539)
!4553 = !DILocation(line: 900, column: 9, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4537, file: !603, line: 900, column: 7)
!4555 = !DILocation(line: 900, column: 7, scope: !4537)
!4556 = distinct !{!4556, !4534, !4557}
!4557 = !DILocation(line: 903, column: 2, scope: !4522)
!4558 = !DILocation(line: 906, column: 1, scope: !4522)
!4559 = distinct !DISubprogram(name: "is_fmt_spec", scope: !603, file: !603, line: 873, type: !4560, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!279, !222}
!4562 = !{!4563}
!4563 = !DILocalVariable(name: "c", arg: 1, scope: !4559, file: !603, line: 873, type: !222)
!4564 = !DILocation(line: 0, scope: !4559)
!4565 = !DILocation(line: 875, column: 19, scope: !4559)
!4566 = !DILocation(line: 875, column: 2, scope: !4559)
!4567 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !603, file: !603, line: 908, type: !4568, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4574)
!4568 = !DISubroutineType(types: !4569)
!4569 = !{!103, !102, !239, !4570, !102, !190, !2987, !239}
!4570 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4088, line: 308, baseType: !4571)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 32)
!4572 = !DISubroutineType(types: !4573)
!4573 = !{!103, !13, !239, !102}
!4574 = !{!4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4592, !4593, !4594, !4595, !4596, !4602, !4605, !4606, !4607, !4609, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4625, !4628, !4629, !4630, !4631, !4632, !4633, !4635, !4638, !4639, !4640}
!4575 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4567, file: !603, line: 908, type: !102)
!4576 = !DILocalVariable(name: "in_len", arg: 2, scope: !4567, file: !603, line: 909, type: !239)
!4577 = !DILocalVariable(name: "cb", arg: 3, scope: !4567, file: !603, line: 910, type: !4570)
!4578 = !DILocalVariable(name: "ctx", arg: 4, scope: !4567, file: !603, line: 911, type: !102)
!4579 = !DILocalVariable(name: "flags", arg: 5, scope: !4567, file: !603, line: 912, type: !190)
!4580 = !DILocalVariable(name: "strl", arg: 6, scope: !4567, file: !603, line: 913, type: !2987)
!4581 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4567, file: !603, line: 914, type: !239)
!4582 = !DILocalVariable(name: "buf", scope: !4567, file: !603, line: 918, type: !601)
!4583 = !DILocalVariable(name: "buf32", scope: !4567, file: !603, line: 919, type: !1601)
!4584 = !DILocalVariable(name: "args_size", scope: !4567, file: !603, line: 920, type: !32)
!4585 = !DILocalVariable(name: "ros_nbr", scope: !4567, file: !603, line: 920, type: !32)
!4586 = !DILocalVariable(name: "rws_nbr", scope: !4567, file: !603, line: 920, type: !32)
!4587 = !DILocalVariable(name: "fmt_present", scope: !4567, file: !603, line: 921, type: !279)
!4588 = !DILocalVariable(name: "rw_cpy", scope: !4567, file: !603, line: 922, type: !279)
!4589 = !DILocalVariable(name: "ro_cpy", scope: !4567, file: !603, line: 923, type: !279)
!4590 = !DILocalVariable(name: "in_desc", scope: !4567, file: !603, line: 924, type: !4591)
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 32)
!4592 = !DILocalVariable(name: "out_len", scope: !4567, file: !603, line: 960, type: !103)
!4593 = !DILocalVariable(name: "fmt", scope: !4567, file: !603, line: 965, type: !377)
!4594 = !DILocalVariable(name: "str_pos", scope: !4567, file: !603, line: 966, type: !601)
!4595 = !DILocalVariable(name: "strl_cnt", scope: !4567, file: !603, line: 967, type: !239)
!4596 = !DILocalVariable(name: "i", scope: !4597, file: !603, line: 973, type: !103)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !603, line: 973, column: 4)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !603, line: 972, column: 15)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !603, line: 972, column: 7)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !603, line: 970, column: 18)
!4601 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 970, column: 6)
!4602 = !DILocalVariable(name: "str", scope: !4603, file: !603, line: 974, type: !377)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !603, line: 973, column: 38)
!4604 = distinct !DILexicalBlock(scope: !4597, file: !603, line: 973, column: 4)
!4605 = !DILocalVariable(name: "len", scope: !4603, file: !603, line: 975, type: !103)
!4606 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4600, file: !603, line: 990, type: !279)
!4607 = !DILocalVariable(name: "i", scope: !4608, file: !603, line: 995, type: !103)
!4608 = distinct !DILexicalBlock(scope: !4600, file: !603, line: 995, column: 3)
!4609 = !DILocalVariable(name: "arg_idx", scope: !4610, file: !603, line: 996, type: !173)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !603, line: 995, column: 37)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !603, line: 995, column: 3)
!4612 = !DILocalVariable(name: "arg_pos", scope: !4610, file: !603, line: 997, type: !173)
!4613 = !DILocalVariable(name: "str", scope: !4610, file: !603, line: 998, type: !377)
!4614 = !DILocalVariable(name: "is_ro", scope: !4610, file: !603, line: 999, type: !279)
!4615 = !DILocalVariable(name: "len", scope: !4610, file: !603, line: 1000, type: !103)
!4616 = !DILocalVariable(name: "out_desc", scope: !4567, file: !603, line: 1038, type: !4091)
!4617 = !DILocalVariable(name: "cpy_str_pos", scope: !4567, file: !603, line: 1040, type: !4073)
!4618 = !DILocalVariable(name: "keep_str_pos", scope: !4567, file: !603, line: 1042, type: !4073)
!4619 = !DILocalVariable(name: "scpy_cnt", scope: !4567, file: !603, line: 1043, type: !173)
!4620 = !DILocalVariable(name: "keep_cnt", scope: !4567, file: !603, line: 1044, type: !173)
!4621 = !DILocalVariable(name: "dst", scope: !4567, file: !603, line: 1045, type: !601)
!4622 = !DILocalVariable(name: "rv", scope: !4567, file: !603, line: 1046, type: !103)
!4623 = !DILocalVariable(name: "i", scope: !4624, file: !603, line: 1074, type: !103)
!4624 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 1074, column: 2)
!4625 = !DILocalVariable(name: "arg_idx", scope: !4626, file: !603, line: 1075, type: !173)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !603, line: 1074, column: 36)
!4627 = distinct !DILexicalBlock(scope: !4624, file: !603, line: 1074, column: 2)
!4628 = !DILocalVariable(name: "arg_pos", scope: !4626, file: !603, line: 1076, type: !173)
!4629 = !DILocalVariable(name: "str", scope: !4626, file: !603, line: 1077, type: !377)
!4630 = !DILocalVariable(name: "is_ro", scope: !4626, file: !603, line: 1078, type: !279)
!4631 = !DILocalVariable(name: "in_desc_backup", scope: !4567, file: !603, line: 1114, type: !4091)
!4632 = !DILocalVariable(name: "strs_len", scope: !4567, file: !603, line: 1134, type: !239)
!4633 = !DILocalVariable(name: "i", scope: !4634, file: !603, line: 1143, type: !103)
!4634 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 1143, column: 2)
!4635 = !DILocalVariable(name: "loc", scope: !4636, file: !603, line: 1144, type: !173)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !603, line: 1143, column: 37)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !603, line: 1143, column: 2)
!4638 = !DILocalVariable(name: "str", scope: !4636, file: !603, line: 1145, type: !377)
!4639 = !DILocalVariable(name: "str_len", scope: !4636, file: !603, line: 1146, type: !187)
!4640 = !DILabel(scope: !4641, name: "calculate_string_length", file: !603, line: 1021)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !603, line: 1020, column: 56)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !603, line: 1020, column: 15)
!4643 = distinct !DILexicalBlock(scope: !4610, file: !603, line: 1014, column: 8)
!4644 = !DILocation(line: 0, scope: !4567)
!4645 = !DILocation(line: 916, column: 2, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !603, line: 916, column: 2)
!4647 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 916, column: 2)
!4648 = !DILocation(line: 916, column: 2, scope: !4647)
!4649 = !DILocation(line: 916, column: 2, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !603, line: 916, column: 2)
!4651 = !DILocation(line: 919, column: 20, scope: !4567)
!4652 = !DILocation(line: 921, column: 27, scope: !4567)
!4653 = !DILocation(line: 921, column: 21, scope: !4567)
!4654 = !DILocation(line: 926, column: 18, scope: !4567)
!4655 = !DILocation(line: 926, column: 11, scope: !4567)
!4656 = !DILocation(line: 926, column: 34, scope: !4567)
!4657 = !DILocation(line: 931, column: 21, scope: !4567)
!4658 = !DILocation(line: 931, column: 12, scope: !4567)
!4659 = !DILocation(line: 932, column: 11, scope: !4567)
!4660 = !DILocation(line: 932, column: 19, scope: !4567)
!4661 = !DILocation(line: 938, column: 21, scope: !4567)
!4662 = !DILocation(line: 938, column: 12, scope: !4567)
!4663 = !DILocation(line: 939, column: 19, scope: !4567)
!4664 = !DILocation(line: 939, column: 23, scope: !4567)
!4665 = !DILocation(line: 946, column: 14, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 946, column: 6)
!4667 = !DILocation(line: 947, column: 7, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !603, line: 947, column: 7)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !603, line: 946, column: 26)
!4670 = !DILocation(line: 947, column: 7, scope: !4669)
!4671 = !DILocation(line: 948, column: 4, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4668, file: !603, line: 947, column: 11)
!4673 = !DILocation(line: 949, column: 3, scope: !4672)
!4674 = !DILocation(line: 958, column: 23, scope: !4567)
!4675 = !DILocation(line: 958, column: 14, scope: !4567)
!4676 = !DILocation(line: 958, column: 27, scope: !4567)
!4677 = !DILocation(line: 965, column: 41, scope: !4567)
!4678 = !DILocation(line: 965, column: 20, scope: !4567)
!4679 = !DILocation(line: 966, column: 22, scope: !4567)
!4680 = !DILocation(line: 970, column: 9, scope: !4601)
!4681 = !DILocation(line: 970, column: 6, scope: !4567)
!4682 = !DILocation(line: 972, column: 7, scope: !4600)
!4683 = !DILocation(line: 0, scope: !4597)
!4684 = !DILocation(line: 973, column: 4, scope: !4597)
!4685 = !DILocation(line: 974, column: 46, scope: !4603)
!4686 = !DILocation(line: 974, column: 40, scope: !4603)
!4687 = !DILocation(line: 974, column: 23, scope: !4603)
!4688 = !DILocation(line: 0, scope: !4603)
!4689 = !DILocation(line: 975, column: 15, scope: !4603)
!4690 = !DILocation(line: 978, column: 14, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4603, file: !603, line: 978, column: 9)
!4692 = !DILocation(line: 979, column: 25, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4691, file: !603, line: 978, column: 38)
!4694 = !DILocation(line: 979, column: 19, scope: !4693)
!4695 = !DILocation(line: 979, column: 6, scope: !4693)
!4696 = !DILocation(line: 979, column: 23, scope: !4693)
!4697 = !DILocation(line: 980, column: 5, scope: !4693)
!4698 = !DILocation(line: 981, column: 13, scope: !4603)
!4699 = !DILocation(line: 982, column: 12, scope: !4603)
!4700 = !DILocation(line: 973, column: 34, scope: !4604)
!4701 = !DILocation(line: 973, column: 22, scope: !4604)
!4702 = distinct !{!4702, !4684, !4703}
!4703 = !DILocation(line: 983, column: 4, scope: !4597)
!4704 = !DILocation(line: 985, column: 16, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !603, line: 985, column: 8)
!4706 = distinct !DILexicalBlock(scope: !4599, file: !603, line: 984, column: 10)
!4707 = !DILocation(line: 967, column: 9, scope: !4567)
!4708 = !DILocation(line: 971, column: 11, scope: !4600)
!4709 = !DILocation(line: 0, scope: !4600)
!4710 = !DILocation(line: 0, scope: !4608)
!4711 = !DILocation(line: 995, column: 21, scope: !4611)
!4712 = !DILocation(line: 995, column: 3, scope: !4608)
!4713 = !DILocation(line: 990, column: 34, scope: !4600)
!4714 = !DILocation(line: 990, column: 26, scope: !4600)
!4715 = !DILocation(line: 996, column: 30, scope: !4610)
!4716 = !DILocation(line: 0, scope: !4610)
!4717 = !DILocation(line: 997, column: 30, scope: !4610)
!4718 = !DILocation(line: 997, column: 22, scope: !4610)
!4719 = !DILocation(line: 998, column: 39, scope: !4610)
!4720 = !DILocation(line: 998, column: 22, scope: !4610)
!4721 = !DILocation(line: 999, column: 17, scope: !4610)
!4722 = !DILocation(line: 1002, column: 20, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4610, file: !603, line: 1002, column: 8)
!4724 = !DILocation(line: 996, column: 22, scope: !4610)
!4725 = !DILocation(line: 1002, column: 35, scope: !4723)
!4726 = !DILocation(line: 1002, column: 23, scope: !4723)
!4727 = !DILocation(line: 1002, column: 8, scope: !4610)
!4728 = !DILocation(line: 1003, column: 5, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !603, line: 1003, column: 5)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !603, line: 1003, column: 5)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !603, line: 1003, column: 5)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !603, line: 1003, column: 5)
!4733 = distinct !DILexicalBlock(scope: !4723, file: !603, line: 1002, column: 45)
!4734 = !DILocation(line: 1010, column: 13, scope: !4733)
!4735 = !DILocation(line: 1011, column: 5, scope: !4733)
!4736 = !DILocation(line: 1014, column: 8, scope: !4610)
!4737 = !DILocation(line: 1015, column: 9, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4643, file: !603, line: 1014, column: 15)
!4739 = !DILocation(line: 1018, column: 14, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !603, line: 1017, column: 12)
!4741 = distinct !DILexicalBlock(scope: !4738, file: !603, line: 1015, column: 9)
!4742 = !DILocation(line: 1020, column: 4, scope: !4738)
!4743 = !DILocation(line: 1020, column: 15, scope: !4643)
!4744 = !DILocation(line: 1021, column: 1, scope: !4641)
!4745 = !DILocation(line: 1022, column: 11, scope: !4641)
!4746 = !DILocation(line: 1025, column: 14, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4641, file: !603, line: 1025, column: 9)
!4748 = !DILocation(line: 1026, column: 25, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4747, file: !603, line: 1025, column: 38)
!4750 = !DILocation(line: 1026, column: 19, scope: !4749)
!4751 = !DILocation(line: 1026, column: 6, scope: !4749)
!4752 = !DILocation(line: 1026, column: 23, scope: !4749)
!4753 = !DILocation(line: 1027, column: 5, scope: !4749)
!4754 = !DILocation(line: 1031, column: 21, scope: !4641)
!4755 = !DILocation(line: 1031, column: 13, scope: !4641)
!4756 = !DILocation(line: 1032, column: 4, scope: !4641)
!4757 = !DILocation(line: 995, column: 33, scope: !4611)
!4758 = distinct !{!4758, !4712, !4759}
!4759 = !DILocation(line: 1033, column: 3, scope: !4608)
!4760 = !DILocation(line: 1040, column: 10, scope: !4567)
!4761 = !DILocation(line: 1042, column: 10, scope: !4567)
!4762 = !DILocation(line: 1052, column: 6, scope: !4567)
!4763 = !DILocation(line: 1055, column: 9, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !603, line: 1052, column: 14)
!4765 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 1052, column: 6)
!4766 = !DILocation(line: 1056, column: 2, scope: !4764)
!4767 = !DILocation(line: 1056, column: 21, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4765, file: !603, line: 1056, column: 13)
!4769 = !DILocation(line: 1066, column: 3, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !603, line: 1065, column: 11)
!4771 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 1065, column: 6)
!4772 = !DILocation(line: 1067, column: 2, scope: !4770)
!4773 = !DILocation(line: 1068, column: 10, scope: !4567)
!4774 = !DILocation(line: 0, scope: !4624)
!4775 = !DILocation(line: 1074, column: 20, scope: !4627)
!4776 = !DILocation(line: 1074, column: 2, scope: !4624)
!4777 = !DILocation(line: 1110, column: 24, scope: !4567)
!4778 = !DILocation(line: 1053, column: 12, scope: !4764)
!4779 = !DILocation(line: 1054, column: 12, scope: !4764)
!4780 = !DILocation(line: 1108, column: 30, scope: !4567)
!4781 = !DILocation(line: 1108, column: 40, scope: !4567)
!4782 = !DILocation(line: 1108, column: 38, scope: !4567)
!4783 = !DILocation(line: 1109, column: 31, scope: !4567)
!4784 = !DILocation(line: 1109, column: 24, scope: !4567)
!4785 = !DILocation(line: 1110, column: 31, scope: !4567)
!4786 = !DILocation(line: 1114, column: 31, scope: !4567)
!4787 = !DILocation(line: 1114, column: 48, scope: !4567)
!4788 = !DILocation(line: 1115, column: 13, scope: !4567)
!4789 = !DILocation(line: 1118, column: 7, scope: !4567)
!4790 = !DILocation(line: 1119, column: 9, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 1119, column: 6)
!4792 = !DILocation(line: 1119, column: 6, scope: !4567)
!4793 = !DILocation(line: 1075, column: 29, scope: !4626)
!4794 = !DILocation(line: 1075, column: 21, scope: !4626)
!4795 = !DILocation(line: 0, scope: !4626)
!4796 = !DILocation(line: 1076, column: 29, scope: !4626)
!4797 = !DILocation(line: 1076, column: 21, scope: !4626)
!4798 = !DILocation(line: 1077, column: 38, scope: !4626)
!4799 = !DILocation(line: 1077, column: 21, scope: !4626)
!4800 = !DILocation(line: 1078, column: 16, scope: !4626)
!4801 = !DILocation(line: 1080, column: 19, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4626, file: !603, line: 1080, column: 7)
!4803 = !DILocation(line: 1080, column: 34, scope: !4802)
!4804 = !DILocation(line: 1080, column: 22, scope: !4802)
!4805 = !DILocation(line: 1080, column: 7, scope: !4626)
!4806 = !DILocation(line: 1084, column: 7, scope: !4626)
!4807 = !DILocation(line: 1085, column: 8, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !603, line: 1084, column: 14)
!4809 = distinct !DILexicalBlock(scope: !4626, file: !603, line: 1084, column: 7)
!4810 = !DILocation(line: 1086, column: 5, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !603, line: 1086, column: 5)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !603, line: 1086, column: 5)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !603, line: 1085, column: 49)
!4814 = distinct !DILexicalBlock(scope: !4808, file: !603, line: 1085, column: 8)
!4815 = !DILocation(line: 1086, column: 5, scope: !4812)
!4816 = !DILocation(line: 1086, column: 5, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4811, file: !603, line: 1086, column: 5)
!4818 = !DILocation(line: 1087, column: 25, scope: !4813)
!4819 = !DILocation(line: 1087, column: 5, scope: !4813)
!4820 = !DILocation(line: 1088, column: 4, scope: !4813)
!4821 = !DILocation(line: 1088, column: 15, scope: !4814)
!4822 = !DILocation(line: 1089, column: 5, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !603, line: 1089, column: 5)
!4824 = distinct !DILexicalBlock(scope: !4825, file: !603, line: 1089, column: 5)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !603, line: 1088, column: 61)
!4826 = distinct !DILexicalBlock(scope: !4814, file: !603, line: 1088, column: 15)
!4827 = !DILocation(line: 1089, column: 5, scope: !4824)
!4828 = !DILocation(line: 1089, column: 5, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4823, file: !603, line: 1089, column: 5)
!4830 = !DILocation(line: 1090, column: 26, scope: !4825)
!4831 = !DILocation(line: 1090, column: 5, scope: !4825)
!4832 = !DILocation(line: 1091, column: 4, scope: !4825)
!4833 = !DILocation(line: 1095, column: 8, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4809, file: !603, line: 1094, column: 10)
!4835 = !DILocation(line: 1096, column: 5, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !603, line: 1096, column: 5)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !603, line: 1096, column: 5)
!4838 = distinct !DILexicalBlock(scope: !4839, file: !603, line: 1095, column: 49)
!4839 = distinct !DILexicalBlock(scope: !4834, file: !603, line: 1095, column: 8)
!4840 = !DILocation(line: 1096, column: 5, scope: !4837)
!4841 = !DILocation(line: 1096, column: 5, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4836, file: !603, line: 1096, column: 5)
!4843 = !DILocation(line: 1097, column: 25, scope: !4838)
!4844 = !DILocation(line: 1097, column: 5, scope: !4838)
!4845 = !DILocation(line: 1098, column: 4, scope: !4838)
!4846 = !DILocation(line: 1099, column: 5, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !603, line: 1099, column: 5)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !603, line: 1099, column: 5)
!4849 = distinct !DILexicalBlock(scope: !4839, file: !603, line: 1098, column: 11)
!4850 = !DILocation(line: 1099, column: 5, scope: !4848)
!4851 = !DILocation(line: 1099, column: 5, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4847, file: !603, line: 1099, column: 5)
!4853 = !DILocation(line: 1100, column: 26, scope: !4849)
!4854 = !DILocation(line: 1100, column: 5, scope: !4849)
!4855 = !DILocation(line: 1100, column: 30, scope: !4849)
!4856 = !DILocation(line: 1101, column: 26, scope: !4849)
!4857 = !DILocation(line: 1101, column: 5, scope: !4849)
!4858 = !DILocation(line: 0, scope: !4809)
!4859 = !DILocation(line: 1074, column: 32, scope: !4627)
!4860 = distinct !{!4860, !4776, !4861}
!4861 = !DILocation(line: 1104, column: 2, scope: !4624)
!4862 = !DILocation(line: 1124, column: 13, scope: !4567)
!4863 = !DILocation(line: 1127, column: 10, scope: !4567)
!4864 = !DILocation(line: 1127, column: 7, scope: !4567)
!4865 = !DILocation(line: 1128, column: 9, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 1128, column: 6)
!4867 = !DILocation(line: 1128, column: 6, scope: !4567)
!4868 = !DILocation(line: 1134, column: 27, scope: !4567)
!4869 = !DILocation(line: 1136, column: 7, scope: !4567)
!4870 = !DILocation(line: 1137, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4567, file: !603, line: 1137, column: 6)
!4872 = !DILocation(line: 1137, column: 6, scope: !4567)
!4873 = !DILocation(line: 1131, column: 10, scope: !4567)
!4874 = !DILocation(line: 1140, column: 10, scope: !4567)
!4875 = !DILocation(line: 0, scope: !4634)
!4876 = !DILocation(line: 1143, column: 20, scope: !4637)
!4877 = !DILocation(line: 1143, column: 2, scope: !4634)
!4878 = !DILocation(line: 1144, column: 3, scope: !4636)
!4879 = !DILocation(line: 1144, column: 17, scope: !4636)
!4880 = !DILocation(line: 0, scope: !4636)
!4881 = !DILocation(line: 1144, column: 11, scope: !4636)
!4882 = !DILocation(line: 1145, column: 38, scope: !4636)
!4883 = !DILocation(line: 1145, column: 21, scope: !4636)
!4884 = !DILocation(line: 1146, column: 22, scope: !4636)
!4885 = !DILocation(line: 1146, column: 29, scope: !4636)
!4886 = !DILocation(line: 1148, column: 8, scope: !4636)
!4887 = !DILocation(line: 1149, column: 10, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4636, file: !603, line: 1149, column: 7)
!4889 = !DILocation(line: 1149, column: 7, scope: !4636)
!4890 = !DILocation(line: 1154, column: 8, scope: !4636)
!4891 = !DILocation(line: 1155, column: 10, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4636, file: !603, line: 1155, column: 7)
!4893 = !DILocation(line: 1155, column: 7, scope: !4636)
!4894 = !DILocation(line: 1159, column: 2, scope: !4637)
!4895 = !DILocation(line: 1152, column: 11, scope: !4636)
!4896 = !DILocation(line: 1158, column: 11, scope: !4636)
!4897 = !DILocation(line: 1143, column: 33, scope: !4637)
!4898 = distinct !{!4898, !4877, !4899}
!4899 = !DILocation(line: 1159, column: 2, scope: !4634)
!4900 = !DILocation(line: 1162, column: 8, scope: !4567)
!4901 = !DILocation(line: 1164, column: 2, scope: !4567)
!4902 = !DILocation(line: 1165, column: 1, scope: !4567)
!4903 = distinct !DISubprogram(name: "get_package_len", scope: !603, file: !603, line: 196, type: !4904, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4906)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!239, !102}
!4906 = !{!4907, !4908, !4909, !4910, !4911, !4912, !4913}
!4907 = !DILocalVariable(name: "packaged", arg: 1, scope: !4903, file: !603, line: 196, type: !102)
!4908 = !DILocalVariable(name: "buf", scope: !4903, file: !603, line: 200, type: !601)
!4909 = !DILocalVariable(name: "start", scope: !4903, file: !603, line: 201, type: !601)
!4910 = !DILocalVariable(name: "args_size", scope: !4903, file: !603, line: 202, type: !32)
!4911 = !DILocalVariable(name: "s_nbr", scope: !4903, file: !603, line: 202, type: !32)
!4912 = !DILocalVariable(name: "ros_nbr", scope: !4903, file: !603, line: 202, type: !32)
!4913 = !DILocalVariable(name: "i", scope: !4914, file: !603, line: 215, type: !103)
!4914 = distinct !DILexicalBlock(scope: !4903, file: !603, line: 215, column: 2)
!4915 = !DILocation(line: 0, scope: !4903)
!4916 = !DILocation(line: 198, column: 2, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !603, line: 198, column: 2)
!4918 = distinct !DILexicalBlock(scope: !4903, file: !603, line: 198, column: 2)
!4919 = !DILocation(line: 198, column: 2, scope: !4918)
!4920 = !DILocation(line: 198, column: 2, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !603, line: 198, column: 2)
!4922 = !DILocation(line: 204, column: 14, scope: !4903)
!4923 = !DILocation(line: 204, column: 21, scope: !4903)
!4924 = !DILocation(line: 205, column: 14, scope: !4903)
!4925 = !DILocation(line: 206, column: 14, scope: !4903)
!4926 = !DILocation(line: 209, column: 6, scope: !4903)
!4927 = !DILocation(line: 212, column: 6, scope: !4903)
!4928 = !DILocation(line: 0, scope: !4914)
!4929 = !DILocation(line: 215, column: 20, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4914, file: !603, line: 215, column: 2)
!4931 = !DILocation(line: 215, column: 2, scope: !4914)
!4932 = !DILocation(line: 220, column: 33, scope: !4903)
!4933 = !DILocation(line: 220, column: 2, scope: !4903)
!4934 = !DILocation(line: 216, column: 6, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4930, file: !603, line: 215, column: 34)
!4936 = !DILocation(line: 217, column: 10, scope: !4935)
!4937 = !DILocation(line: 217, column: 36, scope: !4935)
!4938 = !DILocation(line: 217, column: 7, scope: !4935)
!4939 = !DILocation(line: 215, column: 30, scope: !4930)
!4940 = distinct !{!4940, !4931, !4941}
!4941 = !DILocation(line: 218, column: 2, scope: !4914)
!4942 = distinct !DISubprogram(name: "append_string", scope: !603, file: !603, line: 223, type: !4943, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !588, retainedNodes: !4945)
!4943 = !DISubroutineType(types: !4944)
!4944 = !{!103, !4570, !102, !377, !187}
!4945 = !{!4946, !4947, !4948, !4949}
!4946 = !DILocalVariable(name: "cb", arg: 1, scope: !4942, file: !603, line: 223, type: !4570)
!4947 = !DILocalVariable(name: "ctx", arg: 2, scope: !4942, file: !603, line: 223, type: !102)
!4948 = !DILocalVariable(name: "str", arg: 3, scope: !4942, file: !603, line: 223, type: !377)
!4949 = !DILocalVariable(name: "strl", arg: 4, scope: !4942, file: !603, line: 223, type: !187)
!4950 = !DILocation(line: 0, scope: !4942)
!4951 = !DILocation(line: 225, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4942, file: !603, line: 225, column: 6)
!4953 = !DILocation(line: 225, column: 6, scope: !4942)
!4954 = !DILocation(line: 226, column: 14, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !603, line: 225, column: 18)
!4956 = !DILocation(line: 226, column: 12, scope: !4955)
!4957 = !DILocation(line: 226, column: 3, scope: !4955)
!4958 = !DILocation(line: 229, column: 14, scope: !4942)
!4959 = !DILocation(line: 229, column: 9, scope: !4942)
!4960 = !DILocation(line: 229, column: 27, scope: !4942)
!4961 = !DILocation(line: 229, column: 39, scope: !4942)
!4962 = !DILocation(line: 230, column: 17, scope: !4942)
!4963 = !DILocation(line: 230, column: 9, scope: !4942)
!4964 = !DILocation(line: 230, column: 2, scope: !4942)
!4965 = !DILocation(line: 231, column: 1, scope: !4942)
!4966 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !616, file: !616, line: 45, type: !618, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !4967)
!4967 = !{!4968}
!4968 = !DILocalVariable(name: "c", arg: 1, scope: !4966, file: !616, line: 45, type: !103)
!4969 = !DILocation(line: 0, scope: !4966)
!4970 = !DILocation(line: 50, column: 2, scope: !4966)
!4971 = distinct !DISubprogram(name: "__printk_hook_install", scope: !616, file: !616, line: 63, type: !4972, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !4974)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{null, !617}
!4974 = !{!4975}
!4975 = !DILocalVariable(name: "fn", arg: 1, scope: !4971, file: !616, line: 63, type: !617)
!4976 = !DILocation(line: 0, scope: !4971)
!4977 = !DILocation(line: 65, column: 12, scope: !4971)
!4978 = !DILocation(line: 66, column: 1, scope: !4971)
!4979 = distinct !DISubprogram(name: "__printk_get_hook", scope: !616, file: !616, line: 76, type: !4980, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !2145)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{!102}
!4982 = !DILocation(line: 78, column: 9, scope: !4979)
!4983 = !DILocation(line: 78, column: 2, scope: !4979)
!4984 = distinct !DISubprogram(name: "vprintk", scope: !616, file: !616, line: 113, type: !4985, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !4993)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{null, !377, !4987}
!4987 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4056, line: 99, baseType: !4988)
!4988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4056, line: 40, baseType: !4989)
!4989 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !616, baseType: !4990)
!4990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4991)
!4991 = !{!4992}
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4990, file: !616, line: 79, baseType: !102, size: 32)
!4993 = !{!4994, !4995, !4996}
!4994 = !DILocalVariable(name: "fmt", arg: 1, scope: !4984, file: !616, line: 113, type: !377)
!4995 = !DILocalVariable(name: "ap", arg: 2, scope: !4984, file: !616, line: 113, type: !4987)
!4996 = !DILocalVariable(name: "ctx", scope: !4997, file: !616, line: 121, type: !4999)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !616, line: 120, column: 27)
!4998 = distinct !DILexicalBlock(scope: !4984, file: !616, line: 120, column: 6)
!4999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !616, line: 81, size: 32, elements: !5000)
!5000 = !{!5001, !5002}
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4999, file: !616, line: 85, baseType: !32, size: 32)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4999, file: !616, line: 86, baseType: !5003, offset: 32)
!5003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !222, elements: !2985)
!5004 = !DILocation(line: 0, scope: !4984)
!5005 = !DILocation(line: 148, column: 3, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4998, file: !616, line: 138, column: 9)
!5007 = !DILocation(line: 155, column: 1, scope: !4984)
!5008 = distinct !DISubprogram(name: "char_out", scope: !616, file: !616, line: 107, type: !5009, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !5011)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{!103, !103, !102}
!5011 = !{!5012, !5013}
!5012 = !DILocalVariable(name: "c", arg: 1, scope: !5008, file: !616, line: 107, type: !103)
!5013 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5008, file: !616, line: 107, type: !102)
!5014 = !DILocation(line: 0, scope: !5008)
!5015 = !DILocation(line: 110, column: 9, scope: !5008)
!5016 = !DILocation(line: 110, column: 2, scope: !5008)
!5017 = distinct !DISubprogram(name: "cbvprintf", scope: !4088, file: !4088, line: 739, type: !5018, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !5020)
!5018 = !DISubroutineType(types: !5019)
!5019 = !{!103, !4438, !102, !377, !4987}
!5020 = !{!5021, !5022, !5023, !5024}
!5021 = !DILocalVariable(name: "out", arg: 1, scope: !5017, file: !4088, line: 739, type: !4438)
!5022 = !DILocalVariable(name: "ctx", arg: 2, scope: !5017, file: !4088, line: 739, type: !102)
!5023 = !DILocalVariable(name: "format", arg: 3, scope: !5017, file: !4088, line: 739, type: !377)
!5024 = !DILocalVariable(name: "ap", arg: 4, scope: !5017, file: !4088, line: 739, type: !4987)
!5025 = !DILocation(line: 0, scope: !5017)
!5026 = !DILocation(line: 741, column: 9, scope: !5017)
!5027 = !DILocation(line: 741, column: 2, scope: !5017)
!5028 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !616, file: !616, line: 157, type: !5029, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !5031)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{null, !307, !239}
!5031 = !{!5032, !5033, !5034}
!5032 = !DILocalVariable(name: "c", arg: 1, scope: !5028, file: !616, line: 157, type: !307)
!5033 = !DILocalVariable(name: "n", arg: 2, scope: !5028, file: !616, line: 157, type: !239)
!5034 = !DILocalVariable(name: "i", scope: !5028, file: !616, line: 159, type: !239)
!5035 = !DILocation(line: 0, scope: !5028)
!5036 = !DILocation(line: 164, column: 16, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !616, line: 164, column: 2)
!5038 = distinct !DILexicalBlock(scope: !5028, file: !616, line: 164, column: 2)
!5039 = !DILocation(line: 164, column: 2, scope: !5038)
!5040 = !DILocation(line: 165, column: 3, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5037, file: !616, line: 164, column: 26)
!5042 = !DILocation(line: 165, column: 13, scope: !5041)
!5043 = !DILocation(line: 164, column: 22, scope: !5037)
!5044 = distinct !{!5044, !5039, !5045}
!5045 = !DILocation(line: 166, column: 2, scope: !5038)
!5046 = !DILocation(line: 171, column: 1, scope: !5028)
!5047 = distinct !DISubprogram(name: "printk", scope: !616, file: !616, line: 203, type: !5048, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !5050)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{null, !377, null}
!5050 = !{!5051, !5052}
!5051 = !DILocalVariable(name: "fmt", arg: 1, scope: !5047, file: !616, line: 203, type: !377)
!5052 = !DILocalVariable(name: "ap", scope: !5047, file: !616, line: 205, type: !4987)
!5053 = !DILocation(line: 0, scope: !5047)
!5054 = !DILocation(line: 205, column: 2, scope: !5047)
!5055 = !DILocation(line: 205, column: 10, scope: !5047)
!5056 = !DILocation(line: 207, column: 2, scope: !5047)
!5057 = !DILocation(line: 209, column: 2, scope: !5047)
!5058 = !DILocation(line: 211, column: 2, scope: !5047)
!5059 = !DILocation(line: 212, column: 1, scope: !5047)
!5060 = distinct !DISubprogram(name: "snprintk", scope: !616, file: !616, line: 239, type: !5061, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !5063)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!103, !307, !239, !377, null}
!5063 = !{!5064, !5065, !5066, !5067, !5068}
!5064 = !DILocalVariable(name: "str", arg: 1, scope: !5060, file: !616, line: 239, type: !307)
!5065 = !DILocalVariable(name: "size", arg: 2, scope: !5060, file: !616, line: 239, type: !239)
!5066 = !DILocalVariable(name: "fmt", arg: 3, scope: !5060, file: !616, line: 239, type: !377)
!5067 = !DILocalVariable(name: "ap", scope: !5060, file: !616, line: 241, type: !4987)
!5068 = !DILocalVariable(name: "ret", scope: !5060, file: !616, line: 242, type: !103)
!5069 = !DILocation(line: 0, scope: !5060)
!5070 = !DILocation(line: 241, column: 2, scope: !5060)
!5071 = !DILocation(line: 241, column: 10, scope: !5060)
!5072 = !DILocation(line: 244, column: 2, scope: !5060)
!5073 = !DILocation(line: 245, column: 8, scope: !5060)
!5074 = !DILocation(line: 246, column: 2, scope: !5060)
!5075 = !DILocation(line: 249, column: 1, scope: !5060)
!5076 = !DILocation(line: 248, column: 2, scope: !5060)
!5077 = distinct !DISubprogram(name: "vsnprintk", scope: !616, file: !616, line: 251, type: !5078, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !5080)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!103, !307, !239, !377, !4987}
!5080 = !{!5081, !5082, !5083, !5084, !5085}
!5081 = !DILocalVariable(name: "str", arg: 1, scope: !5077, file: !616, line: 251, type: !307)
!5082 = !DILocalVariable(name: "size", arg: 2, scope: !5077, file: !616, line: 251, type: !239)
!5083 = !DILocalVariable(name: "fmt", arg: 3, scope: !5077, file: !616, line: 251, type: !377)
!5084 = !DILocalVariable(name: "ap", arg: 4, scope: !5077, file: !616, line: 251, type: !4987)
!5085 = !DILocalVariable(name: "ctx", scope: !5077, file: !616, line: 253, type: !5086)
!5086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !616, line: 217, size: 96, elements: !5087)
!5087 = !{!5088, !5089, !5090}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5086, file: !616, line: 218, baseType: !307, size: 32)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5086, file: !616, line: 219, baseType: !103, size: 32, offset: 32)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5086, file: !616, line: 220, baseType: !103, size: 32, offset: 64)
!5091 = !DILocation(line: 0, scope: !5077)
!5092 = !DILocation(line: 253, column: 2, scope: !5077)
!5093 = !DILocation(line: 253, column: 21, scope: !5077)
!5094 = !DILocation(line: 253, column: 27, scope: !5077)
!5095 = !DILocation(line: 255, column: 2, scope: !5077)
!5096 = !DILocation(line: 257, column: 10, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5077, file: !616, line: 257, column: 6)
!5098 = !DILocation(line: 257, column: 22, scope: !5097)
!5099 = !DILocation(line: 257, column: 16, scope: !5097)
!5100 = !DILocation(line: 257, column: 6, scope: !5077)
!5101 = !DILocation(line: 258, column: 3, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5097, file: !616, line: 257, column: 27)
!5103 = !DILocation(line: 258, column: 18, scope: !5102)
!5104 = !DILocation(line: 259, column: 2, scope: !5102)
!5105 = !DILocation(line: 262, column: 1, scope: !5077)
!5106 = !DILocation(line: 261, column: 2, scope: !5077)
!5107 = distinct !DISubprogram(name: "str_out", scope: !616, file: !616, line: 223, type: !5108, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !612, retainedNodes: !5111)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!103, !103, !5110}
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 32)
!5111 = !{!5112, !5113}
!5112 = !DILocalVariable(name: "c", arg: 1, scope: !5107, file: !616, line: 223, type: !103)
!5113 = !DILocalVariable(name: "ctx", arg: 2, scope: !5107, file: !616, line: 223, type: !5110)
!5114 = !DILocation(line: 0, scope: !5107)
!5115 = !DILocation(line: 225, column: 11, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5107, file: !616, line: 225, column: 6)
!5117 = !DILocation(line: 225, column: 15, scope: !5116)
!5118 = !DILocation(line: 0, scope: !5116)
!5119 = !DILocation(line: 225, column: 23, scope: !5116)
!5120 = !DILocation(line: 225, column: 45, scope: !5116)
!5121 = !DILocation(line: 225, column: 37, scope: !5116)
!5122 = !DILocation(line: 225, column: 6, scope: !5107)
!5123 = !DILocation(line: 226, column: 8, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5116, file: !616, line: 225, column: 50)
!5125 = !DILocation(line: 226, column: 13, scope: !5124)
!5126 = !DILocation(line: 227, column: 3, scope: !5124)
!5127 = !DILocation(line: 230, column: 29, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5107, file: !616, line: 230, column: 6)
!5129 = !DILocation(line: 230, column: 17, scope: !5128)
!5130 = !DILocation(line: 230, column: 6, scope: !5107)
!5131 = !DILocation(line: 231, column: 22, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5128, file: !616, line: 230, column: 34)
!5133 = !DILocation(line: 231, column: 3, scope: !5132)
!5134 = !DILocation(line: 231, column: 26, scope: !5132)
!5135 = !DILocation(line: 232, column: 2, scope: !5132)
!5136 = !DILocation(line: 233, column: 28, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5128, file: !616, line: 232, column: 9)
!5138 = !DILocation(line: 233, column: 22, scope: !5137)
!5139 = !DILocation(line: 233, column: 3, scope: !5137)
!5140 = !DILocation(line: 233, column: 26, scope: !5137)
!5141 = !DILocation(line: 237, column: 1, scope: !5107)
!5142 = distinct !DISubprogram(name: "z_thread_entry", scope: !5143, file: !5143, line: 30, type: !5144, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2953, retainedNodes: !5146)
!5143 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5144 = !DISubroutineType(types: !5145)
!5145 = !{null, !361, !102, !102, !102}
!5146 = !{!5147, !5148, !5149, !5150}
!5147 = !DILocalVariable(name: "entry", arg: 1, scope: !5142, file: !5143, line: 30, type: !361)
!5148 = !DILocalVariable(name: "p1", arg: 2, scope: !5142, file: !5143, line: 31, type: !102)
!5149 = !DILocalVariable(name: "p2", arg: 3, scope: !5142, file: !5143, line: 31, type: !102)
!5150 = !DILocalVariable(name: "p3", arg: 4, scope: !5142, file: !5143, line: 31, type: !102)
!5151 = !DILocation(line: 0, scope: !5142)
!5152 = !DILocation(line: 36, column: 2, scope: !5142)
!5153 = !DILocation(line: 38, column: 17, scope: !5142)
!5154 = !DILocation(line: 38, column: 2, scope: !5142)
!5155 = !DILocation(line: 45, column: 2, scope: !5142)
!5156 = distinct !DISubprogram(name: "k_current_get", scope: !110, file: !110, line: 530, type: !5157, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2953, retainedNodes: !2145)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!5159}
!5159 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !5160)
!5160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 32)
!5161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !5162)
!5162 = !{!5163, !5221, !5233, !5234, !5235, !5236, !5237, !5252}
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5161, file: !131, line: 247, baseType: !5164, size: 384)
!5164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !5165)
!5165 = !{!5166, !5190, !5197, !5198, !5199, !5208, !5209, !5210}
!5166 = !DIDerivedType(tag: DW_TAG_member, scope: !5164, file: !131, line: 60, baseType: !5167, size: 64)
!5167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5164, file: !131, line: 60, size: 64, elements: !5168)
!5168 = !{!5169, !5184}
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5167, file: !131, line: 61, baseType: !5170, size: 64)
!5170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !5171)
!5171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !5172)
!5172 = !{!5173, !5179}
!5173 = !DIDerivedType(tag: DW_TAG_member, scope: !5171, file: !141, line: 38, baseType: !5174, size: 32)
!5174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5171, file: !141, line: 38, size: 32, elements: !5175)
!5175 = !{!5176, !5178}
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5174, file: !141, line: 39, baseType: !5177, size: 32)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 32)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5174, file: !141, line: 40, baseType: !5177, size: 32)
!5179 = !DIDerivedType(tag: DW_TAG_member, scope: !5171, file: !141, line: 42, baseType: !5180, size: 32, offset: 32)
!5180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5171, file: !141, line: 42, size: 32, elements: !5181)
!5181 = !{!5182, !5183}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5180, file: !141, line: 43, baseType: !5177, size: 32)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5180, file: !141, line: 44, baseType: !5177, size: 32)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5167, file: !131, line: 62, baseType: !5185, size: 64)
!5185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !5186)
!5186 = !{!5187}
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5185, file: !157, line: 50, baseType: !5188, size: 64)
!5188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5189, size: 64, elements: !162)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 32)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5164, file: !131, line: 68, baseType: !5191, size: 32, offset: 64)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 32)
!5192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !5193)
!5193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !5194)
!5194 = !{!5195}
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5193, file: !167, line: 232, baseType: !5196, size: 64)
!5196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !5171)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5164, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5164, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!5199 = !DIDerivedType(tag: DW_TAG_member, scope: !5164, file: !131, line: 90, baseType: !5200, size: 16, offset: 112)
!5200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5164, file: !131, line: 90, size: 16, elements: !5201)
!5201 = !{!5202, !5207}
!5202 = !DIDerivedType(tag: DW_TAG_member, scope: !5200, file: !131, line: 91, baseType: !5203, size: 16)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5200, file: !131, line: 91, size: 16, elements: !5204)
!5204 = !{!5205, !5206}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5203, file: !131, line: 96, baseType: !183, size: 8)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5203, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5200, file: !131, line: 100, baseType: !187, size: 16)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5164, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5164, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5164, file: !131, line: 131, baseType: !5211, size: 192, offset: 192)
!5211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !5212)
!5212 = !{!5213, !5214, !5220}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5211, file: !167, line: 245, baseType: !5170, size: 64)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5211, file: !167, line: 246, baseType: !5215, size: 32, offset: 64)
!5215 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !5216)
!5216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5217, size: 32)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{null, !5219}
!5219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 32)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5211, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5161, file: !131, line: 250, baseType: !5222, size: 288, offset: 384)
!5222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !5223)
!5223 = !{!5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232}
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5222, file: !207, line: 26, baseType: !190, size: 32)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5222, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5222, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5222, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5222, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5222, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5222, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5222, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5222, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5161, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5161, file: !131, line: 256, baseType: !5192, size: 64, offset: 704)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5161, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5161, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5161, file: !131, line: 325, baseType: !5238, size: 32, offset: 1056)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 32)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !5240)
!5240 = !{!5241, !5247, !5248}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5239, file: !110, line: 5074, baseType: !5242, size: 96)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !5243)
!5243 = !{!5244, !5245, !5246}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5242, file: !232, line: 57, baseType: !235, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5242, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5242, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5239, file: !110, line: 5075, baseType: !5192, size: 64, offset: 96)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5239, file: !110, line: 5076, baseType: !5249, size: 32, offset: 160)
!5249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !5250)
!5250 = !{!5251}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5249, file: !244, line: 52, baseType: !22, size: 32)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5161, file: !131, line: 343, baseType: !5253, size: 64, offset: 1088)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !5254)
!5254 = !{!5255, !5256}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5253, file: !207, line: 63, baseType: !190, size: 32)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5253, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!5257 = !DILocation(line: 535, column: 9, scope: !5156)
!5258 = !DILocation(line: 535, column: 2, scope: !5156)
!5259 = distinct !DISubprogram(name: "k_thread_abort", scope: !4037, file: !4037, line: 188, type: !5260, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2953, retainedNodes: !5262)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{null, !5159}
!5262 = !{!5263}
!5263 = !DILocalVariable(name: "thread", arg: 1, scope: !5259, file: !4037, line: 188, type: !5159)
!5264 = !DILocation(line: 0, scope: !5259)
!5265 = !DILocation(line: 197, column: 2, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5259, file: !4037, line: 197, column: 2)
!5267 = !{i64 2151041875}
!5268 = !DILocation(line: 198, column: 2, scope: !5259)
!5269 = !DILocation(line: 199, column: 1, scope: !5259)
!5270 = distinct !DISubprogram(name: "z_current_get", scope: !4037, file: !4037, line: 173, type: !5157, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2953, retainedNodes: !2145)
!5271 = !DILocation(line: 180, column: 2, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5270, file: !4037, line: 180, column: 2)
!5273 = !{i64 2151041807}
!5274 = !DILocation(line: 181, column: 9, scope: !5270)
!5275 = !DILocation(line: 181, column: 2, scope: !5270)
!5276 = distinct !DISubprogram(name: "sys_heap_free", scope: !5277, file: !5277, line: 163, type: !5278, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5286)
!5277 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5278 = !DISubroutineType(types: !5279)
!5279 = !{null, !5280, !102}
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 32)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !5282)
!5282 = !{!5283, !5284, !5285}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5281, file: !232, line: 57, baseType: !2972, size: 32)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5281, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5281, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!5286 = !{!5287, !5288, !5289, !5290}
!5287 = !DILocalVariable(name: "heap", arg: 1, scope: !5276, file: !5277, line: 163, type: !5280)
!5288 = !DILocalVariable(name: "mem", arg: 2, scope: !5276, file: !5277, line: 163, type: !102)
!5289 = !DILocalVariable(name: "h", scope: !5276, file: !5277, line: 168, type: !2972)
!5290 = !DILocalVariable(name: "c", scope: !5276, file: !5277, line: 169, type: !2977)
!5291 = !DILocation(line: 0, scope: !5276)
!5292 = !DILocation(line: 165, column: 10, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5276, file: !5277, line: 165, column: 6)
!5294 = !DILocation(line: 165, column: 6, scope: !5276)
!5295 = !DILocation(line: 168, column: 27, scope: !5276)
!5296 = !DILocation(line: 169, column: 16, scope: !5276)
!5297 = !{i32 0, i32 536870912}
!5298 = !DILocation(line: 175, column: 2, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !5277, line: 175, column: 2)
!5300 = distinct !DILexicalBlock(scope: !5276, file: !5277, line: 175, column: 2)
!5301 = !DILocation(line: 175, column: 2, scope: !5300)
!5302 = !DILocation(line: 175, column: 2, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5299, file: !5277, line: 175, column: 2)
!5304 = !DILocation(line: 183, column: 2, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !5277, line: 183, column: 2)
!5306 = distinct !DILexicalBlock(scope: !5276, file: !5277, line: 183, column: 2)
!5307 = !DILocation(line: 183, column: 2, scope: !5306)
!5308 = !DILocation(line: 183, column: 2, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5305, file: !5277, line: 183, column: 2)
!5310 = !DILocation(line: 187, column: 2, scope: !5276)
!5311 = !DILocation(line: 197, column: 2, scope: !5276)
!5312 = !DILocation(line: 198, column: 1, scope: !5276)
!5313 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5277, file: !5277, line: 157, type: !5314, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5316)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!2977, !2972, !102}
!5316 = !{!5317, !5318, !5319, !5320}
!5317 = !DILocalVariable(name: "h", arg: 1, scope: !5313, file: !5277, line: 157, type: !2972)
!5318 = !DILocalVariable(name: "p", arg: 2, scope: !5313, file: !5277, line: 157, type: !102)
!5319 = !DILocalVariable(name: "mem", scope: !5313, file: !5277, line: 159, type: !601)
!5320 = !DILocalVariable(name: "base", scope: !5313, file: !5277, line: 159, type: !601)
!5321 = !DILocation(line: 0, scope: !5313)
!5322 = !DILocation(line: 159, column: 39, scope: !5313)
!5323 = !DILocation(line: 160, column: 14, scope: !5313)
!5324 = !DILocation(line: 160, column: 38, scope: !5313)
!5325 = !DILocation(line: 160, column: 46, scope: !5313)
!5326 = !DILocation(line: 160, column: 2, scope: !5313)
!5327 = distinct !DISubprogram(name: "chunk_used", scope: !2959, file: !2959, line: 137, type: !5328, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5330)
!5328 = !DISubroutineType(types: !5329)
!5329 = !{!279, !2972, !2977}
!5330 = !{!5331, !5332}
!5331 = !DILocalVariable(name: "h", arg: 1, scope: !5327, file: !2959, line: 137, type: !2972)
!5332 = !DILocalVariable(name: "c", arg: 2, scope: !5327, file: !2959, line: 137, type: !2977)
!5333 = !DILocation(line: 0, scope: !5327)
!5334 = !DILocation(line: 139, column: 9, scope: !5327)
!5335 = !DILocation(line: 139, column: 42, scope: !5327)
!5336 = !DILocation(line: 139, column: 2, scope: !5327)
!5337 = distinct !DISubprogram(name: "right_chunk", scope: !2959, file: !2959, line: 204, type: !5338, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5340)
!5338 = !DISubroutineType(types: !5339)
!5339 = !{!2977, !2972, !2977}
!5340 = !{!5341, !5342}
!5341 = !DILocalVariable(name: "h", arg: 1, scope: !5337, file: !2959, line: 204, type: !2972)
!5342 = !DILocalVariable(name: "c", arg: 2, scope: !5337, file: !2959, line: 204, type: !2977)
!5343 = !DILocation(line: 0, scope: !5337)
!5344 = !DILocation(line: 206, column: 13, scope: !5337)
!5345 = !DILocation(line: 206, column: 11, scope: !5337)
!5346 = !DILocation(line: 206, column: 2, scope: !5337)
!5347 = distinct !DISubprogram(name: "left_chunk", scope: !2959, file: !2959, line: 199, type: !5338, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5348)
!5348 = !{!5349, !5350}
!5349 = !DILocalVariable(name: "h", arg: 1, scope: !5347, file: !2959, line: 199, type: !2972)
!5350 = !DILocalVariable(name: "c", arg: 2, scope: !5347, file: !2959, line: 199, type: !2977)
!5351 = !DILocation(line: 0, scope: !5347)
!5352 = !DILocation(line: 201, column: 13, scope: !5347)
!5353 = !DILocation(line: 201, column: 11, scope: !5347)
!5354 = !DILocation(line: 201, column: 2, scope: !5347)
!5355 = distinct !DISubprogram(name: "set_chunk_used", scope: !2959, file: !2959, line: 147, type: !5356, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5358)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{null, !2972, !2977, !279}
!5358 = !{!5359, !5360, !5361, !5362, !5363}
!5359 = !DILocalVariable(name: "h", arg: 1, scope: !5355, file: !2959, line: 147, type: !2972)
!5360 = !DILocalVariable(name: "c", arg: 2, scope: !5355, file: !2959, line: 147, type: !2977)
!5361 = !DILocalVariable(name: "used", arg: 3, scope: !5355, file: !2959, line: 147, type: !279)
!5362 = !DILocalVariable(name: "buf", scope: !5355, file: !2959, line: 149, type: !2966)
!5363 = !DILocalVariable(name: "cmem", scope: !5355, file: !2959, line: 150, type: !102)
!5364 = !DILocation(line: 0, scope: !5355)
!5365 = !DILocation(line: 149, column: 22, scope: !5355)
!5366 = !DILocation(line: 0, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !2959, line: 159, column: 7)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !2959, line: 158, column: 9)
!5369 = distinct !DILexicalBlock(scope: !5355, file: !2959, line: 152, column: 6)
!5370 = !DILocation(line: 159, column: 7, scope: !5368)
!5371 = !DILocation(line: 165, column: 1, scope: !5355)
!5372 = distinct !DISubprogram(name: "free_chunk", scope: !5277, file: !5277, line: 133, type: !5373, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5375)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !2972, !2977}
!5375 = !{!5376, !5377}
!5376 = !DILocalVariable(name: "h", arg: 1, scope: !5372, file: !5277, line: 133, type: !2972)
!5377 = !DILocalVariable(name: "c", arg: 2, scope: !5372, file: !5277, line: 133, type: !2977)
!5378 = !DILocation(line: 0, scope: !5372)
!5379 = !DILocation(line: 136, column: 21, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5372, file: !5277, line: 136, column: 6)
!5381 = !DILocation(line: 136, column: 7, scope: !5380)
!5382 = !DILocation(line: 136, column: 6, scope: !5372)
!5383 = !DILocation(line: 137, column: 3, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !5277, line: 136, column: 41)
!5385 = !DILocation(line: 138, column: 22, scope: !5384)
!5386 = !DILocation(line: 138, column: 3, scope: !5384)
!5387 = !DILocation(line: 139, column: 2, scope: !5384)
!5388 = !DILocation(line: 142, column: 21, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5372, file: !5277, line: 142, column: 6)
!5390 = !DILocation(line: 142, column: 7, scope: !5389)
!5391 = !DILocation(line: 142, column: 6, scope: !5372)
!5392 = !DILocation(line: 143, column: 3, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5389, file: !5277, line: 142, column: 40)
!5394 = !DILocation(line: 144, column: 19, scope: !5393)
!5395 = !DILocation(line: 144, column: 3, scope: !5393)
!5396 = !DILocation(line: 145, column: 7, scope: !5393)
!5397 = !DILocation(line: 146, column: 2, scope: !5393)
!5398 = !DILocation(line: 148, column: 2, scope: !5372)
!5399 = !DILocation(line: 149, column: 1, scope: !5372)
!5400 = distinct !DISubprogram(name: "free_list_remove", scope: !5277, file: !5277, line: 60, type: !5373, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5401)
!5401 = !{!5402, !5403, !5404}
!5402 = !DILocalVariable(name: "h", arg: 1, scope: !5400, file: !5277, line: 60, type: !2972)
!5403 = !DILocalVariable(name: "c", arg: 2, scope: !5400, file: !5277, line: 60, type: !2977)
!5404 = !DILocalVariable(name: "bidx", scope: !5405, file: !5277, line: 63, type: !103)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !5277, line: 62, column: 31)
!5406 = distinct !DILexicalBlock(scope: !5400, file: !5277, line: 62, column: 6)
!5407 = !DILocation(line: 0, scope: !5400)
!5408 = !DILocation(line: 63, column: 28, scope: !5405)
!5409 = !{i32 0, i32 32768}
!5410 = !DILocation(line: 63, column: 14, scope: !5405)
!5411 = !DILocation(line: 0, scope: !5405)
!5412 = !DILocation(line: 64, column: 3, scope: !5405)
!5413 = !DILocation(line: 66, column: 1, scope: !5400)
!5414 = distinct !DISubprogram(name: "merge_chunks", scope: !5277, file: !5277, line: 125, type: !5415, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5417)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{null, !2972, !2977, !2977}
!5417 = !{!5418, !5419, !5420, !5421}
!5418 = !DILocalVariable(name: "h", arg: 1, scope: !5414, file: !5277, line: 125, type: !2972)
!5419 = !DILocalVariable(name: "lc", arg: 2, scope: !5414, file: !5277, line: 125, type: !2977)
!5420 = !DILocalVariable(name: "rc", arg: 3, scope: !5414, file: !5277, line: 125, type: !2977)
!5421 = !DILocalVariable(name: "newsz", scope: !5414, file: !5277, line: 127, type: !5422)
!5422 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2959, line: 62, baseType: !190)
!5423 = !DILocation(line: 0, scope: !5414)
!5424 = !DILocation(line: 127, column: 20, scope: !5414)
!5425 = !DILocation(line: 127, column: 40, scope: !5414)
!5426 = !DILocation(line: 127, column: 38, scope: !5414)
!5427 = !DILocation(line: 129, column: 2, scope: !5414)
!5428 = !DILocation(line: 130, column: 25, scope: !5414)
!5429 = !DILocation(line: 130, column: 2, scope: !5414)
!5430 = !DILocation(line: 131, column: 1, scope: !5414)
!5431 = distinct !DISubprogram(name: "free_list_add", scope: !5277, file: !5277, line: 98, type: !5373, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5432)
!5432 = !{!5433, !5434, !5435}
!5433 = !DILocalVariable(name: "h", arg: 1, scope: !5431, file: !5277, line: 98, type: !2972)
!5434 = !DILocalVariable(name: "c", arg: 2, scope: !5431, file: !5277, line: 98, type: !2977)
!5435 = !DILocalVariable(name: "bidx", scope: !5436, file: !5277, line: 101, type: !103)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !5277, line: 100, column: 31)
!5437 = distinct !DILexicalBlock(scope: !5431, file: !5277, line: 100, column: 6)
!5438 = !DILocation(line: 0, scope: !5431)
!5439 = !DILocation(line: 101, column: 28, scope: !5436)
!5440 = !DILocation(line: 101, column: 14, scope: !5436)
!5441 = !DILocation(line: 0, scope: !5436)
!5442 = !DILocation(line: 102, column: 3, scope: !5436)
!5443 = !DILocation(line: 104, column: 1, scope: !5431)
!5444 = distinct !DISubprogram(name: "chunk_size", scope: !2959, file: !2959, line: 142, type: !5445, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5447)
!5445 = !DISubroutineType(types: !5446)
!5446 = !{!5422, !2972, !2977}
!5447 = !{!5448, !5449}
!5448 = !DILocalVariable(name: "h", arg: 1, scope: !5444, file: !2959, line: 142, type: !2972)
!5449 = !DILocalVariable(name: "c", arg: 2, scope: !5444, file: !2959, line: 142, type: !2977)
!5450 = !DILocation(line: 0, scope: !5444)
!5451 = !DILocation(line: 144, column: 9, scope: !5444)
!5452 = !DILocation(line: 144, column: 42, scope: !5444)
!5453 = !DILocation(line: 144, column: 2, scope: !5444)
!5454 = distinct !DISubprogram(name: "bucket_idx", scope: !2959, file: !2959, line: 250, type: !5455, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5457)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{!103, !2972, !5422}
!5457 = !{!5458, !5459, !5460}
!5458 = !DILocalVariable(name: "h", arg: 1, scope: !5454, file: !2959, line: 250, type: !2972)
!5459 = !DILocalVariable(name: "sz", arg: 2, scope: !5454, file: !2959, line: 250, type: !5422)
!5460 = !DILocalVariable(name: "usable_sz", scope: !5454, file: !2959, line: 252, type: !32)
!5461 = !DILocation(line: 0, scope: !5454)
!5462 = !DILocation(line: 252, column: 32, scope: !5454)
!5463 = !DILocation(line: 252, column: 30, scope: !5454)
!5464 = !DILocation(line: 252, column: 50, scope: !5454)
!5465 = !DILocation(line: 253, column: 14, scope: !5454)
!5466 = !{i32 0, i32 33}
!5467 = !DILocation(line: 253, column: 12, scope: !5454)
!5468 = !DILocation(line: 253, column: 2, scope: !5454)
!5469 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5277, file: !5277, line: 68, type: !5470, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5472)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{null, !2972, !2977, !103}
!5472 = !{!5473, !5474, !5475, !5476, !5478, !5481}
!5473 = !DILocalVariable(name: "h", arg: 1, scope: !5469, file: !5277, line: 68, type: !2972)
!5474 = !DILocalVariable(name: "c", arg: 2, scope: !5469, file: !5277, line: 68, type: !2977)
!5475 = !DILocalVariable(name: "bidx", arg: 3, scope: !5469, file: !5277, line: 68, type: !103)
!5476 = !DILocalVariable(name: "b", scope: !5469, file: !5277, line: 70, type: !5477)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 32)
!5478 = !DILocalVariable(name: "second", scope: !5479, file: !5277, line: 84, type: !2977)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !5277, line: 80, column: 9)
!5480 = distinct !DILexicalBlock(scope: !5469, file: !5277, line: 72, column: 6)
!5481 = !DILocalVariable(name: "first", scope: !5479, file: !5277, line: 85, type: !2977)
!5482 = !DILocation(line: 0, scope: !5469)
!5483 = !DILocation(line: 72, column: 9, scope: !5480)
!5484 = !DILocation(line: 72, column: 14, scope: !5480)
!5485 = !DILocation(line: 72, column: 6, scope: !5469)
!5486 = !DILocation(line: 76, column: 23, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5480, file: !5277, line: 72, column: 21)
!5488 = !DILocation(line: 76, column: 6, scope: !5487)
!5489 = !DILocation(line: 76, column: 20, scope: !5487)
!5490 = !DILocation(line: 77, column: 11, scope: !5487)
!5491 = !DILocation(line: 78, column: 3, scope: !5487)
!5492 = !DILocation(line: 79, column: 3, scope: !5487)
!5493 = !DILocation(line: 80, column: 2, scope: !5487)
!5494 = !DILocation(line: 0, scope: !5479)
!5495 = !DILocation(line: 85, column: 21, scope: !5479)
!5496 = !{i32 0, i32 65536}
!5497 = !DILocation(line: 87, column: 3, scope: !5479)
!5498 = !DILocation(line: 88, column: 3, scope: !5479)
!5499 = !DILocation(line: 89, column: 3, scope: !5479)
!5500 = !DILocation(line: 90, column: 3, scope: !5479)
!5501 = !DILocation(line: 96, column: 1, scope: !5469)
!5502 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2959, file: !2959, line: 187, type: !5415, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5503)
!5503 = !{!5504, !5505, !5506}
!5504 = !DILocalVariable(name: "h", arg: 1, scope: !5502, file: !2959, line: 187, type: !2972)
!5505 = !DILocalVariable(name: "c", arg: 2, scope: !5502, file: !2959, line: 187, type: !2977)
!5506 = !DILocalVariable(name: "prev", arg: 3, scope: !5502, file: !2959, line: 188, type: !2977)
!5507 = !DILocation(line: 0, scope: !5502)
!5508 = !DILocation(line: 190, column: 2, scope: !5502)
!5509 = !DILocation(line: 191, column: 1, scope: !5502)
!5510 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2959, file: !2959, line: 193, type: !5415, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5511)
!5511 = !{!5512, !5513, !5514}
!5512 = !DILocalVariable(name: "h", arg: 1, scope: !5510, file: !2959, line: 193, type: !2972)
!5513 = !DILocalVariable(name: "c", arg: 2, scope: !5510, file: !2959, line: 193, type: !2977)
!5514 = !DILocalVariable(name: "next", arg: 3, scope: !5510, file: !2959, line: 194, type: !2977)
!5515 = !DILocation(line: 0, scope: !5510)
!5516 = !DILocation(line: 196, column: 2, scope: !5510)
!5517 = !DILocation(line: 197, column: 1, scope: !5510)
!5518 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2959, file: !2959, line: 177, type: !5338, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5519)
!5519 = !{!5520, !5521}
!5520 = !DILocalVariable(name: "h", arg: 1, scope: !5518, file: !2959, line: 177, type: !2972)
!5521 = !DILocalVariable(name: "c", arg: 2, scope: !5518, file: !2959, line: 177, type: !2977)
!5522 = !DILocation(line: 0, scope: !5518)
!5523 = !DILocation(line: 179, column: 9, scope: !5518)
!5524 = !DILocation(line: 179, column: 2, scope: !5518)
!5525 = distinct !DISubprogram(name: "chunk_field", scope: !2959, file: !2959, line: 107, type: !5526, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5528)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!2977, !2972, !2977, !2958}
!5528 = !{!5529, !5530, !5531, !5532, !5533}
!5529 = !DILocalVariable(name: "h", arg: 1, scope: !5525, file: !2959, line: 107, type: !2972)
!5530 = !DILocalVariable(name: "c", arg: 2, scope: !5525, file: !2959, line: 107, type: !2977)
!5531 = !DILocalVariable(name: "f", arg: 3, scope: !5525, file: !2959, line: 108, type: !2958)
!5532 = !DILocalVariable(name: "buf", scope: !5525, file: !2959, line: 110, type: !2966)
!5533 = !DILocalVariable(name: "cmem", scope: !5525, file: !2959, line: 111, type: !102)
!5534 = !DILocation(line: 0, scope: !5525)
!5535 = !DILocation(line: 110, column: 22, scope: !5525)
!5536 = !DILocation(line: 111, column: 15, scope: !5525)
!5537 = !DILocation(line: 116, column: 11, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !2959, line: 115, column: 9)
!5539 = distinct !DILexicalBlock(scope: !5525, file: !2959, line: 113, column: 6)
!5540 = !DILocation(line: 116, column: 10, scope: !5538)
!5541 = !DILocation(line: 118, column: 1, scope: !5525)
!5542 = distinct !DISubprogram(name: "chunk_buf", scope: !2959, file: !2959, line: 101, type: !5543, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5545)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{!2966, !2972}
!5545 = !{!5546}
!5546 = !DILocalVariable(name: "h", arg: 1, scope: !5542, file: !2959, line: 101, type: !2972)
!5547 = !DILocation(line: 0, scope: !5542)
!5548 = !DILocation(line: 104, column: 9, scope: !5542)
!5549 = !DILocation(line: 104, column: 2, scope: !5542)
!5550 = distinct !DISubprogram(name: "chunk_set", scope: !2959, file: !2959, line: 120, type: !5551, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5553)
!5551 = !DISubroutineType(types: !5552)
!5552 = !{null, !2972, !2977, !2958, !2977}
!5553 = !{!5554, !5555, !5556, !5557, !5558, !5559}
!5554 = !DILocalVariable(name: "h", arg: 1, scope: !5550, file: !2959, line: 120, type: !2972)
!5555 = !DILocalVariable(name: "c", arg: 2, scope: !5550, file: !2959, line: 120, type: !2977)
!5556 = !DILocalVariable(name: "f", arg: 3, scope: !5550, file: !2959, line: 121, type: !2958)
!5557 = !DILocalVariable(name: "val", arg: 4, scope: !5550, file: !2959, line: 121, type: !2977)
!5558 = !DILocalVariable(name: "buf", scope: !5550, file: !2959, line: 125, type: !2966)
!5559 = !DILocalVariable(name: "cmem", scope: !5550, file: !2959, line: 126, type: !102)
!5560 = !DILocation(line: 0, scope: !5550)
!5561 = !DILocation(line: 125, column: 22, scope: !5550)
!5562 = !DILocation(line: 126, column: 15, scope: !5550)
!5563 = !DILocation(line: 133, column: 27, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !2959, line: 131, column: 9)
!5565 = distinct !DILexicalBlock(scope: !5550, file: !2959, line: 128, column: 6)
!5566 = !DILocation(line: 133, column: 4, scope: !5564)
!5567 = !DILocation(line: 133, column: 3, scope: !5564)
!5568 = !DILocation(line: 133, column: 25, scope: !5564)
!5569 = !DILocation(line: 135, column: 1, scope: !5550)
!5570 = distinct !DISubprogram(name: "min_chunk_size", scope: !2959, file: !2959, line: 240, type: !5571, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5573)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!5422, !2972}
!5573 = !{!5574}
!5574 = !DILocalVariable(name: "h", arg: 1, scope: !5570, file: !2959, line: 240, type: !2972)
!5575 = !DILocation(line: 0, scope: !5570)
!5576 = !DILocation(line: 242, column: 9, scope: !5570)
!5577 = !DILocation(line: 242, column: 2, scope: !5570)
!5578 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2959, file: !2959, line: 235, type: !5579, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5581)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!5422, !2972, !239}
!5581 = !{!5582, !5583}
!5582 = !DILocalVariable(name: "h", arg: 1, scope: !5578, file: !2959, line: 235, type: !2972)
!5583 = !DILocalVariable(name: "bytes", arg: 2, scope: !5578, file: !2959, line: 235, type: !239)
!5584 = !DILocation(line: 0, scope: !5578)
!5585 = !DILocation(line: 237, column: 39, scope: !5578)
!5586 = !DILocation(line: 237, column: 9, scope: !5578)
!5587 = !DILocation(line: 237, column: 2, scope: !5578)
!5588 = distinct !DISubprogram(name: "chunksz", scope: !2959, file: !2959, line: 230, type: !5589, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5591)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{!5422, !239}
!5591 = !{!5592}
!5592 = !DILocalVariable(name: "bytes", arg: 1, scope: !5588, file: !2959, line: 230, type: !239)
!5593 = !DILocation(line: 0, scope: !5588)
!5594 = !DILocation(line: 232, column: 29, scope: !5588)
!5595 = !DILocation(line: 232, column: 35, scope: !5588)
!5596 = !DILocation(line: 232, column: 2, scope: !5588)
!5597 = distinct !DISubprogram(name: "set_chunk_size", scope: !2959, file: !2959, line: 172, type: !5598, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5600)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{null, !2972, !2977, !5422}
!5600 = !{!5601, !5602, !5603}
!5601 = !DILocalVariable(name: "h", arg: 1, scope: !5597, file: !2959, line: 172, type: !2972)
!5602 = !DILocalVariable(name: "c", arg: 2, scope: !5597, file: !2959, line: 172, type: !2977)
!5603 = !DILocalVariable(name: "size", arg: 3, scope: !5597, file: !2959, line: 172, type: !5422)
!5604 = !DILocation(line: 0, scope: !5597)
!5605 = !DILocation(line: 174, column: 38, scope: !5597)
!5606 = !DILocation(line: 174, column: 2, scope: !5597)
!5607 = !DILocation(line: 175, column: 1, scope: !5597)
!5608 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2959, file: !2959, line: 209, type: !5598, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5609)
!5609 = !{!5610, !5611, !5612}
!5610 = !DILocalVariable(name: "h", arg: 1, scope: !5608, file: !2959, line: 209, type: !2972)
!5611 = !DILocalVariable(name: "c", arg: 2, scope: !5608, file: !2959, line: 209, type: !2977)
!5612 = !DILocalVariable(name: "size", arg: 3, scope: !5608, file: !2959, line: 210, type: !5422)
!5613 = !DILocation(line: 0, scope: !5608)
!5614 = !DILocation(line: 212, column: 2, scope: !5608)
!5615 = !DILocation(line: 213, column: 1, scope: !5608)
!5616 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5277, file: !5277, line: 34, type: !5470, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5617)
!5617 = !{!5618, !5619, !5620, !5621, !5622, !5625}
!5618 = !DILocalVariable(name: "h", arg: 1, scope: !5616, file: !5277, line: 34, type: !2972)
!5619 = !DILocalVariable(name: "c", arg: 2, scope: !5616, file: !5277, line: 34, type: !2977)
!5620 = !DILocalVariable(name: "bidx", arg: 3, scope: !5616, file: !5277, line: 34, type: !103)
!5621 = !DILocalVariable(name: "b", scope: !5616, file: !5277, line: 36, type: !5477)
!5622 = !DILocalVariable(name: "first", scope: !5623, file: !5277, line: 47, type: !2977)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !5277, line: 46, column: 9)
!5624 = distinct !DILexicalBlock(scope: !5616, file: !5277, line: 42, column: 6)
!5625 = !DILocalVariable(name: "second", scope: !5623, file: !5277, line: 48, type: !2977)
!5626 = !DILocation(line: 0, scope: !5616)
!5627 = !DILocation(line: 36, column: 29, scope: !5616)
!5628 = !DILocation(line: 42, column: 6, scope: !5624)
!5629 = !DILocation(line: 42, column: 28, scope: !5624)
!5630 = !DILocation(line: 42, column: 6, scope: !5616)
!5631 = !DILocation(line: 44, column: 24, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5624, file: !5277, line: 42, column: 34)
!5633 = !DILocation(line: 44, column: 23, scope: !5632)
!5634 = !DILocation(line: 44, column: 6, scope: !5632)
!5635 = !DILocation(line: 44, column: 20, scope: !5632)
!5636 = !DILocation(line: 45, column: 6, scope: !5632)
!5637 = !DILocation(line: 45, column: 11, scope: !5632)
!5638 = !DILocation(line: 46, column: 2, scope: !5632)
!5639 = !DILocation(line: 47, column: 21, scope: !5623)
!5640 = !DILocation(line: 0, scope: !5623)
!5641 = !DILocation(line: 50, column: 6, scope: !5623)
!5642 = !DILocation(line: 50, column: 11, scope: !5623)
!5643 = !DILocation(line: 51, column: 3, scope: !5623)
!5644 = !DILocation(line: 52, column: 3, scope: !5623)
!5645 = !DILocation(line: 58, column: 1, scope: !5616)
!5646 = distinct !DISubprogram(name: "next_free_chunk", scope: !2959, file: !2959, line: 182, type: !5338, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5647)
!5647 = !{!5648, !5649}
!5648 = !DILocalVariable(name: "h", arg: 1, scope: !5646, file: !2959, line: 182, type: !2972)
!5649 = !DILocalVariable(name: "c", arg: 2, scope: !5646, file: !2959, line: 182, type: !2977)
!5650 = !DILocation(line: 0, scope: !5646)
!5651 = !DILocation(line: 184, column: 9, scope: !5646)
!5652 = !DILocation(line: 184, column: 2, scope: !5646)
!5653 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5277, file: !5277, line: 200, type: !5654, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5656)
!5654 = !DISubroutineType(types: !5655)
!5655 = !{!239, !5280, !102}
!5656 = !{!5657, !5658, !5659, !5660, !5661, !5662, !5663}
!5657 = !DILocalVariable(name: "heap", arg: 1, scope: !5653, file: !5277, line: 200, type: !5280)
!5658 = !DILocalVariable(name: "mem", arg: 2, scope: !5653, file: !5277, line: 200, type: !102)
!5659 = !DILocalVariable(name: "h", scope: !5653, file: !5277, line: 202, type: !2972)
!5660 = !DILocalVariable(name: "c", scope: !5653, file: !5277, line: 203, type: !2977)
!5661 = !DILocalVariable(name: "addr", scope: !5653, file: !5277, line: 204, type: !239)
!5662 = !DILocalVariable(name: "chunk_base", scope: !5653, file: !5277, line: 205, type: !239)
!5663 = !DILocalVariable(name: "chunk_sz", scope: !5653, file: !5277, line: 206, type: !239)
!5664 = !DILocation(line: 0, scope: !5653)
!5665 = !DILocation(line: 202, column: 27, scope: !5653)
!5666 = !DILocation(line: 203, column: 16, scope: !5653)
!5667 = !DILocation(line: 204, column: 16, scope: !5653)
!5668 = !DILocation(line: 205, column: 31, scope: !5653)
!5669 = !DILocation(line: 205, column: 22, scope: !5653)
!5670 = !DILocation(line: 206, column: 20, scope: !5653)
!5671 = !DILocation(line: 206, column: 37, scope: !5653)
!5672 = !DILocation(line: 208, column: 26, scope: !5653)
!5673 = !DILocation(line: 208, column: 18, scope: !5653)
!5674 = !DILocation(line: 208, column: 2, scope: !5653)
!5675 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5277, file: !5277, line: 263, type: !5676, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5678)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{!102, !5280, !239}
!5678 = !{!5679, !5680, !5681, !5682, !5683, !5684}
!5679 = !DILocalVariable(name: "heap", arg: 1, scope: !5675, file: !5277, line: 263, type: !5280)
!5680 = !DILocalVariable(name: "bytes", arg: 2, scope: !5675, file: !5277, line: 263, type: !239)
!5681 = !DILocalVariable(name: "h", scope: !5675, file: !5277, line: 265, type: !2972)
!5682 = !DILocalVariable(name: "mem", scope: !5675, file: !5277, line: 266, type: !102)
!5683 = !DILocalVariable(name: "chunk_sz", scope: !5675, file: !5277, line: 272, type: !5422)
!5684 = !DILocalVariable(name: "c", scope: !5675, file: !5277, line: 273, type: !2977)
!5685 = !DILocation(line: 0, scope: !5675)
!5686 = !DILocation(line: 265, column: 27, scope: !5675)
!5687 = !DILocation(line: 268, column: 12, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5675, file: !5277, line: 268, column: 6)
!5689 = !DILocation(line: 268, column: 18, scope: !5688)
!5690 = !DILocation(line: 268, column: 21, scope: !5688)
!5691 = !DILocation(line: 268, column: 6, scope: !5675)
!5692 = !DILocation(line: 272, column: 23, scope: !5675)
!5693 = !DILocation(line: 273, column: 16, scope: !5675)
!5694 = !DILocation(line: 274, column: 8, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5675, file: !5277, line: 274, column: 6)
!5696 = !DILocation(line: 274, column: 6, scope: !5675)
!5697 = !DILocation(line: 279, column: 6, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5675, file: !5277, line: 279, column: 6)
!5699 = !DILocation(line: 279, column: 23, scope: !5698)
!5700 = !DILocation(line: 279, column: 6, scope: !5675)
!5701 = !DILocation(line: 280, column: 24, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !5277, line: 279, column: 35)
!5703 = !DILocation(line: 280, column: 3, scope: !5702)
!5704 = !DILocation(line: 281, column: 3, scope: !5702)
!5705 = !DILocation(line: 282, column: 2, scope: !5702)
!5706 = !DILocation(line: 284, column: 2, scope: !5675)
!5707 = !DILocation(line: 286, column: 8, scope: !5675)
!5708 = !DILocation(line: 298, column: 2, scope: !5675)
!5709 = !DILocation(line: 299, column: 1, scope: !5675)
!5710 = distinct !DISubprogram(name: "size_too_big", scope: !2959, file: !2959, line: 256, type: !5711, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5713)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!279, !2972, !239}
!5713 = !{!5714, !5715}
!5714 = !DILocalVariable(name: "h", arg: 1, scope: !5710, file: !2959, line: 256, type: !2972)
!5715 = !DILocalVariable(name: "bytes", arg: 2, scope: !5710, file: !2959, line: 256, type: !239)
!5716 = !DILocation(line: 0, scope: !5710)
!5717 = !DILocation(line: 262, column: 16, scope: !5710)
!5718 = !DILocation(line: 262, column: 36, scope: !5710)
!5719 = !DILocation(line: 262, column: 30, scope: !5710)
!5720 = !DILocation(line: 262, column: 2, scope: !5710)
!5721 = distinct !DISubprogram(name: "alloc_chunk", scope: !5277, file: !5277, line: 211, type: !5722, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5724)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!2977, !2972, !5422}
!5724 = !{!5725, !5726, !5727, !5728, !5729, !5732, !5733, !5735, !5736, !5739}
!5725 = !DILocalVariable(name: "h", arg: 1, scope: !5721, file: !5277, line: 211, type: !2972)
!5726 = !DILocalVariable(name: "sz", arg: 2, scope: !5721, file: !5277, line: 211, type: !5422)
!5727 = !DILocalVariable(name: "bi", scope: !5721, file: !5277, line: 213, type: !103)
!5728 = !DILocalVariable(name: "b", scope: !5721, file: !5277, line: 214, type: !5477)
!5729 = !DILocalVariable(name: "first", scope: !5730, file: !5277, line: 233, type: !2977)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !5277, line: 232, column: 15)
!5731 = distinct !DILexicalBlock(scope: !5721, file: !5277, line: 232, column: 6)
!5732 = !DILocalVariable(name: "i", scope: !5730, file: !5277, line: 234, type: !103)
!5733 = !DILocalVariable(name: "c", scope: !5734, file: !5277, line: 236, type: !2977)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !5277, line: 235, column: 6)
!5735 = !DILocalVariable(name: "bmask", scope: !5721, file: !5277, line: 249, type: !190)
!5736 = !DILocalVariable(name: "minbucket", scope: !5737, file: !5277, line: 252, type: !103)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !5277, line: 251, column: 19)
!5738 = distinct !DILexicalBlock(scope: !5721, file: !5277, line: 251, column: 6)
!5739 = !DILocalVariable(name: "c", scope: !5737, file: !5277, line: 253, type: !2977)
!5740 = !DILocation(line: 0, scope: !5721)
!5741 = !DILocation(line: 213, column: 11, scope: !5721)
!5742 = !DILocation(line: 232, column: 9, scope: !5731)
!5743 = !DILocation(line: 232, column: 6, scope: !5731)
!5744 = !DILocation(line: 232, column: 6, scope: !5721)
!5745 = !DILocation(line: 236, column: 21, scope: !5734)
!5746 = !DILocation(line: 0, scope: !5730)
!5747 = !DILocation(line: 0, scope: !5734)
!5748 = !DILocation(line: 237, column: 8, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5734, file: !5277, line: 237, column: 8)
!5750 = !DILocation(line: 237, column: 25, scope: !5749)
!5751 = !DILocation(line: 237, column: 8, scope: !5734)
!5752 = !DILocation(line: 238, column: 5, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5749, file: !5277, line: 237, column: 32)
!5754 = !DILocation(line: 241, column: 14, scope: !5734)
!5755 = !DILocation(line: 241, column: 12, scope: !5734)
!5756 = !DILocation(line: 243, column: 12, scope: !5730)
!5757 = !DILocation(line: 243, column: 16, scope: !5730)
!5758 = distinct !{!5758, !5759, !5760}
!5759 = !DILocation(line: 235, column: 3, scope: !5730)
!5760 = !DILocation(line: 243, column: 35, scope: !5730)
!5761 = !DILocation(line: 249, column: 22, scope: !5721)
!5762 = !DILocation(line: 249, column: 39, scope: !5721)
!5763 = !DILocation(line: 249, column: 36, scope: !5721)
!5764 = !DILocation(line: 251, column: 12, scope: !5738)
!5765 = !DILocation(line: 251, column: 6, scope: !5721)
!5766 = !DILocation(line: 252, column: 19, scope: !5737)
!5767 = !DILocation(line: 0, scope: !5737)
!5768 = !DILocation(line: 253, column: 39, scope: !5737)
!5769 = !DILocation(line: 255, column: 3, scope: !5737)
!5770 = !DILocation(line: 261, column: 1, scope: !5721)
!5771 = distinct !DISubprogram(name: "split_chunks", scope: !5277, file: !5277, line: 109, type: !5415, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5772)
!5772 = !{!5773, !5774, !5775, !5776, !5777, !5778}
!5773 = !DILocalVariable(name: "h", arg: 1, scope: !5771, file: !5277, line: 109, type: !2972)
!5774 = !DILocalVariable(name: "lc", arg: 2, scope: !5771, file: !5277, line: 109, type: !2977)
!5775 = !DILocalVariable(name: "rc", arg: 3, scope: !5771, file: !5277, line: 109, type: !2977)
!5776 = !DILocalVariable(name: "sz0", scope: !5771, file: !5277, line: 114, type: !5422)
!5777 = !DILocalVariable(name: "lsz", scope: !5771, file: !5277, line: 115, type: !5422)
!5778 = !DILocalVariable(name: "rsz", scope: !5771, file: !5277, line: 116, type: !5422)
!5779 = !DILocation(line: 0, scope: !5771)
!5780 = !DILocation(line: 114, column: 18, scope: !5771)
!5781 = !DILocation(line: 115, column: 21, scope: !5771)
!5782 = !DILocation(line: 116, column: 22, scope: !5771)
!5783 = !DILocation(line: 118, column: 2, scope: !5771)
!5784 = !DILocation(line: 119, column: 2, scope: !5771)
!5785 = !DILocation(line: 120, column: 2, scope: !5771)
!5786 = !DILocation(line: 121, column: 25, scope: !5771)
!5787 = !DILocation(line: 121, column: 2, scope: !5771)
!5788 = !DILocation(line: 122, column: 1, scope: !5771)
!5789 = distinct !DISubprogram(name: "chunk_mem", scope: !5277, file: !5277, line: 24, type: !5790, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5792)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{!102, !2972, !2977}
!5792 = !{!5793, !5794, !5795, !5796}
!5793 = !DILocalVariable(name: "h", arg: 1, scope: !5789, file: !5277, line: 24, type: !2972)
!5794 = !DILocalVariable(name: "c", arg: 2, scope: !5789, file: !5277, line: 24, type: !2977)
!5795 = !DILocalVariable(name: "buf", scope: !5789, file: !5277, line: 26, type: !2966)
!5796 = !DILocalVariable(name: "ret", scope: !5789, file: !5277, line: 27, type: !601)
!5797 = !DILocation(line: 0, scope: !5789)
!5798 = !DILocation(line: 26, column: 22, scope: !5789)
!5799 = !DILocation(line: 27, column: 38, scope: !5789)
!5800 = !DILocation(line: 31, column: 2, scope: !5789)
!5801 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5277, file: !5277, line: 301, type: !5802, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5804)
!5802 = !DISubroutineType(types: !5803)
!5803 = !{!102, !5280, !239, !239}
!5804 = !{!5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816}
!5805 = !DILocalVariable(name: "heap", arg: 1, scope: !5801, file: !5277, line: 301, type: !5280)
!5806 = !DILocalVariable(name: "align", arg: 2, scope: !5801, file: !5277, line: 301, type: !239)
!5807 = !DILocalVariable(name: "bytes", arg: 3, scope: !5801, file: !5277, line: 301, type: !239)
!5808 = !DILocalVariable(name: "h", scope: !5801, file: !5277, line: 303, type: !2972)
!5809 = !DILocalVariable(name: "gap", scope: !5801, file: !5277, line: 304, type: !239)
!5810 = !DILocalVariable(name: "rew", scope: !5801, file: !5277, line: 304, type: !239)
!5811 = !DILocalVariable(name: "padded_sz", scope: !5801, file: !5277, line: 335, type: !5422)
!5812 = !DILocalVariable(name: "c0", scope: !5801, file: !5277, line: 336, type: !2977)
!5813 = !DILocalVariable(name: "mem", scope: !5801, file: !5277, line: 341, type: !601)
!5814 = !DILocalVariable(name: "end", scope: !5801, file: !5277, line: 345, type: !2966)
!5815 = !DILocalVariable(name: "c", scope: !5801, file: !5277, line: 348, type: !2977)
!5816 = !DILocalVariable(name: "c_end", scope: !5801, file: !5277, line: 349, type: !2977)
!5817 = !DILocation(line: 0, scope: !5801)
!5818 = !DILocation(line: 303, column: 27, scope: !5801)
!5819 = !DILocation(line: 313, column: 16, scope: !5801)
!5820 = !DILocation(line: 313, column: 14, scope: !5801)
!5821 = !DILocation(line: 314, column: 12, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 314, column: 6)
!5823 = !DILocation(line: 314, column: 6, scope: !5801)
!5824 = !DILocation(line: 315, column: 9, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5822, file: !5277, line: 314, column: 20)
!5826 = !DILocation(line: 316, column: 9, scope: !5825)
!5827 = !DILocation(line: 318, column: 13, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !5277, line: 318, column: 7)
!5829 = distinct !DILexicalBlock(scope: !5822, file: !5277, line: 317, column: 9)
!5830 = !DILocation(line: 318, column: 7, scope: !5829)
!5831 = !DILocation(line: 319, column: 11, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5828, file: !5277, line: 318, column: 39)
!5833 = !DILocation(line: 319, column: 4, scope: !5832)
!5834 = !DILocation(line: 0, scope: !5822)
!5835 = !DILocation(line: 324, column: 2, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !5277, line: 324, column: 2)
!5837 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 324, column: 2)
!5838 = !DILocation(line: 324, column: 2, scope: !5837)
!5839 = !DILocation(line: 324, column: 2, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5836, file: !5277, line: 324, column: 2)
!5841 = !DILocation(line: 326, column: 12, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 326, column: 6)
!5843 = !DILocation(line: 326, column: 17, scope: !5842)
!5844 = !DILocation(line: 326, column: 20, scope: !5842)
!5845 = !DILocation(line: 326, column: 6, scope: !5801)
!5846 = !DILocation(line: 335, column: 50, scope: !5801)
!5847 = !DILocation(line: 335, column: 58, scope: !5801)
!5848 = !DILocation(line: 335, column: 24, scope: !5801)
!5849 = !DILocation(line: 336, column: 17, scope: !5801)
!5850 = !DILocation(line: 338, column: 9, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 338, column: 6)
!5852 = !DILocation(line: 338, column: 6, scope: !5801)
!5853 = !DILocation(line: 341, column: 17, scope: !5801)
!5854 = !DILocation(line: 344, column: 20, scope: !5801)
!5855 = !DILocation(line: 344, column: 8, scope: !5801)
!5856 = !DILocation(line: 344, column: 47, scope: !5801)
!5857 = !DILocation(line: 345, column: 39, scope: !5801)
!5858 = !DILocation(line: 348, column: 16, scope: !5801)
!5859 = !DILocation(line: 349, column: 26, scope: !5801)
!5860 = !DILocation(line: 349, column: 24, scope: !5801)
!5861 = !DILocation(line: 353, column: 8, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 353, column: 6)
!5863 = !DILocation(line: 353, column: 6, scope: !5801)
!5864 = !DILocation(line: 354, column: 3, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5862, file: !5277, line: 353, column: 14)
!5866 = !DILocation(line: 355, column: 3, scope: !5865)
!5867 = !DILocation(line: 356, column: 2, scope: !5865)
!5868 = !DILocation(line: 359, column: 6, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5801, file: !5277, line: 359, column: 6)
!5870 = !DILocation(line: 359, column: 24, scope: !5869)
!5871 = !DILocation(line: 359, column: 6, scope: !5801)
!5872 = !DILocation(line: 360, column: 3, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5869, file: !5277, line: 359, column: 33)
!5874 = !DILocation(line: 361, column: 3, scope: !5873)
!5875 = !DILocation(line: 362, column: 2, scope: !5873)
!5876 = !DILocation(line: 364, column: 2, scope: !5801)
!5877 = !DILocation(line: 377, column: 1, scope: !5801)
!5878 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5277, file: !5277, line: 379, type: !5879, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5881)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!102, !5280, !102, !239, !239}
!5881 = !{!5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5897, !5898}
!5882 = !DILocalVariable(name: "heap", arg: 1, scope: !5878, file: !5277, line: 379, type: !5280)
!5883 = !DILocalVariable(name: "ptr", arg: 2, scope: !5878, file: !5277, line: 379, type: !102)
!5884 = !DILocalVariable(name: "align", arg: 3, scope: !5878, file: !5277, line: 380, type: !239)
!5885 = !DILocalVariable(name: "bytes", arg: 4, scope: !5878, file: !5277, line: 380, type: !239)
!5886 = !DILocalVariable(name: "h", scope: !5878, file: !5277, line: 382, type: !2972)
!5887 = !DILocalVariable(name: "c", scope: !5878, file: !5277, line: 399, type: !2977)
!5888 = !DILocalVariable(name: "rc", scope: !5878, file: !5277, line: 400, type: !2977)
!5889 = !DILocalVariable(name: "align_gap", scope: !5878, file: !5277, line: 401, type: !239)
!5890 = !DILocalVariable(name: "chunks_need", scope: !5878, file: !5277, line: 402, type: !5422)
!5891 = !DILocalVariable(name: "split_size", scope: !5892, file: !5277, line: 435, type: !5422)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !5277, line: 433, column: 61)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !5277, line: 432, column: 13)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !5277, line: 409, column: 13)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !5277, line: 406, column: 13)
!5896 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 404, column: 6)
!5897 = !DILocalVariable(name: "ptr2", scope: !5878, file: !5277, line: 474, type: !102)
!5898 = !DILocalVariable(name: "prev_size", scope: !5899, file: !5277, line: 477, type: !239)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !5277, line: 476, column: 20)
!5900 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 476, column: 6)
!5901 = !DILocation(line: 0, scope: !5878)
!5902 = !DILocation(line: 382, column: 27, scope: !5878)
!5903 = !DILocation(line: 385, column: 10, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 385, column: 6)
!5905 = !DILocation(line: 385, column: 6, scope: !5878)
!5906 = !DILocation(line: 386, column: 10, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5904, file: !5277, line: 385, column: 19)
!5908 = !DILocation(line: 386, column: 3, scope: !5907)
!5909 = !DILocation(line: 388, column: 12, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 388, column: 6)
!5911 = !DILocation(line: 388, column: 6, scope: !5878)
!5912 = !DILocation(line: 389, column: 3, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !5277, line: 388, column: 18)
!5914 = !DILocation(line: 390, column: 3, scope: !5913)
!5915 = !DILocation(line: 393, column: 2, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5917, file: !5277, line: 393, column: 2)
!5917 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 393, column: 2)
!5918 = !DILocation(line: 393, column: 2, scope: !5917)
!5919 = !DILocation(line: 393, column: 2, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !5277, line: 393, column: 2)
!5921 = !DILocation(line: 395, column: 6, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5878, file: !5277, line: 395, column: 6)
!5923 = !DILocation(line: 395, column: 6, scope: !5878)
!5924 = !DILocation(line: 399, column: 16, scope: !5878)
!5925 = !DILocation(line: 400, column: 17, scope: !5878)
!5926 = !DILocation(line: 401, column: 49, scope: !5878)
!5927 = !DILocation(line: 401, column: 36, scope: !5878)
!5928 = !DILocation(line: 402, column: 52, scope: !5878)
!5929 = !DILocation(line: 402, column: 26, scope: !5878)
!5930 = !DILocation(line: 404, column: 6, scope: !5896)
!5931 = !DILocation(line: 404, column: 12, scope: !5896)
!5932 = !DILocation(line: 406, column: 13, scope: !5895)
!5933 = !DILocation(line: 406, column: 30, scope: !5895)
!5934 = !DILocation(line: 406, column: 13, scope: !5896)
!5935 = !DILocation(line: 409, column: 30, scope: !5894)
!5936 = !DILocation(line: 409, column: 13, scope: !5895)
!5937 = !DILocation(line: 420, column: 24, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5894, file: !5277, line: 409, column: 45)
!5939 = !DILocation(line: 420, column: 3, scope: !5938)
!5940 = !DILocation(line: 421, column: 3, scope: !5938)
!5941 = !DILocation(line: 422, column: 3, scope: !5938)
!5942 = !DILocation(line: 431, column: 3, scope: !5938)
!5943 = !DILocation(line: 432, column: 14, scope: !5893)
!5944 = !DILocation(line: 432, column: 32, scope: !5893)
!5945 = !DILocation(line: 433, column: 26, scope: !5893)
!5946 = !DILocation(line: 433, column: 24, scope: !5893)
!5947 = !DILocation(line: 433, column: 44, scope: !5893)
!5948 = !DILocation(line: 432, column: 13, scope: !5894)
!5949 = !DILocation(line: 435, column: 38, scope: !5892)
!5950 = !DILocation(line: 0, scope: !5892)
!5951 = !DILocation(line: 445, column: 3, scope: !5892)
!5952 = !DILocation(line: 447, column: 20, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5892, file: !5277, line: 447, column: 7)
!5954 = !DILocation(line: 447, column: 18, scope: !5953)
!5955 = !DILocation(line: 447, column: 7, scope: !5892)
!5956 = !DILocation(line: 448, column: 27, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !5277, line: 447, column: 39)
!5958 = !DILocation(line: 448, column: 4, scope: !5957)
!5959 = !DILocation(line: 449, column: 4, scope: !5957)
!5960 = !DILocation(line: 450, column: 3, scope: !5957)
!5961 = !DILocation(line: 452, column: 3, scope: !5892)
!5962 = !DILocation(line: 453, column: 3, scope: !5892)
!5963 = !DILocation(line: 474, column: 15, scope: !5878)
!5964 = !DILocation(line: 476, column: 11, scope: !5900)
!5965 = !DILocation(line: 476, column: 6, scope: !5878)
!5966 = !DILocation(line: 477, column: 42, scope: !5899)
!5967 = !DILocation(line: 477, column: 22, scope: !5899)
!5968 = !DILocation(line: 477, column: 60, scope: !5899)
!5969 = !DILocation(line: 0, scope: !5899)
!5970 = !DILocation(line: 479, column: 21, scope: !5899)
!5971 = !DILocation(line: 479, column: 3, scope: !5899)
!5972 = !DILocation(line: 480, column: 3, scope: !5899)
!5973 = !DILocation(line: 481, column: 2, scope: !5899)
!5974 = !DILocation(line: 483, column: 1, scope: !5878)
!5975 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2959, file: !2959, line: 245, type: !5976, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5978)
!5976 = !DISubroutineType(types: !5977)
!5977 = !{!239, !2972, !5422}
!5978 = !{!5979, !5980}
!5979 = !DILocalVariable(name: "h", arg: 1, scope: !5975, file: !2959, line: 245, type: !2972)
!5980 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5975, file: !2959, line: 245, type: !5422)
!5981 = !DILocation(line: 0, scope: !5975)
!5982 = !DILocation(line: 247, column: 20, scope: !5975)
!5983 = !DILocation(line: 247, column: 33, scope: !5975)
!5984 = !DILocation(line: 247, column: 2, scope: !5975)
!5985 = distinct !DISubprogram(name: "sys_heap_init", scope: !5277, file: !5277, line: 485, type: !5986, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !5988)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{null, !5280, !102, !239}
!5988 = !{!5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998}
!5989 = !DILocalVariable(name: "heap", arg: 1, scope: !5985, file: !5277, line: 485, type: !5280)
!5990 = !DILocalVariable(name: "mem", arg: 2, scope: !5985, file: !5277, line: 485, type: !102)
!5991 = !DILocalVariable(name: "bytes", arg: 3, scope: !5985, file: !5277, line: 485, type: !239)
!5992 = !DILocalVariable(name: "addr", scope: !5985, file: !5277, line: 502, type: !22)
!5993 = !DILocalVariable(name: "end", scope: !5985, file: !5277, line: 503, type: !22)
!5994 = !DILocalVariable(name: "heap_sz", scope: !5985, file: !5277, line: 504, type: !5422)
!5995 = !DILocalVariable(name: "h", scope: !5985, file: !5277, line: 509, type: !2972)
!5996 = !DILocalVariable(name: "nb_buckets", scope: !5985, file: !5277, line: 520, type: !103)
!5997 = !DILocalVariable(name: "chunk0_size", scope: !5985, file: !5277, line: 521, type: !5422)
!5998 = !DILocalVariable(name: "i", scope: !5999, file: !5277, line: 526, type: !103)
!5999 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 526, column: 2)
!6000 = !DILocation(line: 0, scope: !5985)
!6001 = !DILocation(line: 491, column: 3, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !5277, line: 491, column: 3)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !5277, line: 491, column: 3)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !5277, line: 489, column: 46)
!6005 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 489, column: 6)
!6006 = !DILocation(line: 491, column: 3, scope: !6003)
!6007 = !DILocation(line: 491, column: 3, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6002, file: !5277, line: 491, column: 3)
!6009 = !DILocation(line: 498, column: 2, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !5277, line: 498, column: 2)
!6011 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 498, column: 2)
!6012 = !DILocation(line: 498, column: 2, scope: !6011)
!6013 = !DILocation(line: 498, column: 2, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !5277, line: 498, column: 2)
!6015 = !DILocation(line: 499, column: 8, scope: !5985)
!6016 = !DILocation(line: 502, column: 19, scope: !5985)
!6017 = !DILocation(line: 503, column: 18, scope: !5985)
!6018 = !DILocation(line: 504, column: 27, scope: !5985)
!6019 = !DILocation(line: 504, column: 35, scope: !5985)
!6020 = !DILocation(line: 507, column: 2, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6022, file: !5277, line: 507, column: 2)
!6022 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 507, column: 2)
!6023 = !DILocation(line: 507, column: 2, scope: !6022)
!6024 = !DILocation(line: 507, column: 2, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !5277, line: 507, column: 2)
!6026 = !DILocation(line: 509, column: 21, scope: !5985)
!6027 = !DILocation(line: 510, column: 8, scope: !5985)
!6028 = !DILocation(line: 510, column: 13, scope: !5985)
!6029 = !DILocation(line: 511, column: 5, scope: !5985)
!6030 = !DILocation(line: 511, column: 15, scope: !5985)
!6031 = !DILocation(line: 512, column: 5, scope: !5985)
!6032 = !DILocation(line: 512, column: 19, scope: !5985)
!6033 = !DILocation(line: 520, column: 19, scope: !5985)
!6034 = !DILocation(line: 522, column: 21, scope: !5985)
!6035 = !DILocation(line: 521, column: 56, scope: !5985)
!6036 = !DILocation(line: 521, column: 26, scope: !5985)
!6037 = !DILocation(line: 524, column: 2, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !5277, line: 524, column: 2)
!6039 = distinct !DILexicalBlock(scope: !5985, file: !5277, line: 524, column: 2)
!6040 = !DILocation(line: 524, column: 2, scope: !6039)
!6041 = !DILocation(line: 0, scope: !5999)
!6042 = !DILocation(line: 526, column: 20, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !5999, file: !5277, line: 526, column: 2)
!6044 = !DILocation(line: 526, column: 2, scope: !5999)
!6045 = !DILocation(line: 524, column: 2, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6038, file: !5277, line: 524, column: 2)
!6047 = !DILocation(line: 531, column: 2, scope: !5985)
!6048 = !DILocation(line: 532, column: 2, scope: !5985)
!6049 = !DILocation(line: 533, column: 2, scope: !5985)
!6050 = !DILocation(line: 536, column: 41, scope: !5985)
!6051 = !DILocation(line: 536, column: 2, scope: !5985)
!6052 = !DILocation(line: 537, column: 2, scope: !5985)
!6053 = !DILocation(line: 540, column: 2, scope: !5985)
!6054 = !DILocation(line: 541, column: 2, scope: !5985)
!6055 = !DILocation(line: 542, column: 2, scope: !5985)
!6056 = !DILocation(line: 544, column: 2, scope: !5985)
!6057 = !DILocation(line: 545, column: 1, scope: !5985)
!6058 = !DILocation(line: 527, column: 17, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6043, file: !5277, line: 526, column: 39)
!6060 = !DILocation(line: 527, column: 22, scope: !6059)
!6061 = !DILocation(line: 526, column: 35, scope: !6043)
!6062 = distinct !{!6062, !6044, !6063}
!6063 = !DILocation(line: 528, column: 2, scope: !5999)
!6064 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2992, file: !2992, line: 1338, type: !6065, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6073)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!103, !4438, !102, !377, !6067, !190}
!6067 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4056, line: 99, baseType: !6068)
!6068 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4056, line: 40, baseType: !6069)
!6069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2992, baseType: !6070)
!6070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6071)
!6071 = !{!6072}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6070, file: !2992, baseType: !102, size: 32)
!6073 = !{!6074, !6075, !6076, !6077, !6078, !6079, !6083, !6084, !6085, !6087, !6092, !6135, !6138, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6150, !6151, !6152, !6156, !6159, !6161, !6164, !6165, !6166, !6171, !6177, !6180, !6184, !6190, !6194, !6197, !6199, !6202}
!6074 = !DILocalVariable(name: "out", arg: 1, scope: !6064, file: !2992, line: 1338, type: !4438)
!6075 = !DILocalVariable(name: "ctx", arg: 2, scope: !6064, file: !2992, line: 1338, type: !102)
!6076 = !DILocalVariable(name: "fp", arg: 3, scope: !6064, file: !2992, line: 1338, type: !377)
!6077 = !DILocalVariable(name: "ap", arg: 4, scope: !6064, file: !2992, line: 1339, type: !6067)
!6078 = !DILocalVariable(name: "flags", arg: 5, scope: !6064, file: !2992, line: 1339, type: !190)
!6079 = !DILocalVariable(name: "buf", scope: !6064, file: !2992, line: 1341, type: !6080)
!6080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !222, size: 176, elements: !6081)
!6081 = !{!6082}
!6082 = !DISubrange(count: 22)
!6083 = !DILocalVariable(name: "count", scope: !6064, file: !2992, line: 1342, type: !239)
!6084 = !DILocalVariable(name: "sint", scope: !6064, file: !2992, line: 1343, type: !3011)
!6085 = !DILocalVariable(name: "tagged_ap", scope: !6064, file: !2992, line: 1345, type: !6086)
!6086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!6087 = !DILocalVariable(name: "rc", scope: !6088, file: !2992, line: 1377, type: !103)
!6088 = distinct !DILexicalBlock(scope: !6089, file: !2992, line: 1377, column: 4)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !2992, line: 1376, column: 19)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1376, column: 7)
!6091 = distinct !DILexicalBlock(scope: !6064, file: !2992, line: 1375, column: 19)
!6092 = !DILocalVariable(name: "state", scope: !6091, file: !2992, line: 1395, type: !6093)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6064, file: !2992, line: 1392, size: 192, elements: !6094)
!6094 = !{!6095, !6103}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6093, file: !2992, line: 1393, baseType: !6096, size: 64)
!6096 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2992, line: 166, size: 64, elements: !6097)
!6097 = !{!6098, !6099, !6100, !6101, !6102}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6096, file: !2992, line: 168, baseType: !3011, size: 64)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6096, file: !2992, line: 171, baseType: !3014, size: 64)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6096, file: !2992, line: 174, baseType: !594, size: 64)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6096, file: !2992, line: 177, baseType: !592, size: 64)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6096, file: !2992, line: 180, baseType: !102, size: 32)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6093, file: !2992, line: 1394, baseType: !6104, size: 96, offset: 64)
!6104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2992, line: 189, size: 96, elements: !6105)
!6105 = !{!6106, !6107, !6108, !6109, !6110, !6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6130}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6104, file: !2992, line: 191, baseType: !279, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6104, file: !2992, line: 194, baseType: !279, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6104, file: !2992, line: 197, baseType: !279, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6104, file: !2992, line: 200, baseType: !279, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6104, file: !2992, line: 203, baseType: !279, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6104, file: !2992, line: 206, baseType: !279, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6104, file: !2992, line: 209, baseType: !279, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6104, file: !2992, line: 212, baseType: !279, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6104, file: !2992, line: 219, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6104, file: !2992, line: 222, baseType: !279, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6104, file: !2992, line: 229, baseType: !279, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6104, file: !2992, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6104, file: !2992, line: 238, baseType: !279, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6104, file: !2992, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6104, file: !2992, line: 244, baseType: !279, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6104, file: !2992, line: 247, baseType: !279, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6104, file: !2992, line: 252, baseType: !279, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6104, file: !2992, line: 257, baseType: !279, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6104, file: !2992, line: 260, baseType: !174, size: 8, offset: 24)
!6125 = !DIDerivedType(tag: DW_TAG_member, scope: !6104, file: !2992, line: 262, baseType: !6126, size: 32, offset: 32)
!6126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6104, file: !2992, line: 262, size: 32, elements: !6127)
!6127 = !{!6128, !6129}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6126, file: !2992, line: 267, baseType: !103, size: 32)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6126, file: !2992, line: 289, baseType: !103, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, scope: !6104, file: !2992, line: 292, baseType: !6131, size: 32, offset: 64)
!6131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6104, file: !2992, line: 292, size: 32, elements: !6132)
!6132 = !{!6133, !6134}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6131, file: !2992, line: 297, baseType: !103, size: 32)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6131, file: !2992, line: 306, baseType: !103, size: 32)
!6135 = !DILocalVariable(name: "conv", scope: !6091, file: !2992, line: 1400, type: !6136)
!6136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6137)
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6104, size: 32)
!6138 = !DILocalVariable(name: "value", scope: !6091, file: !2992, line: 1401, type: !6139)
!6139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6140)
!6140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 32)
!6141 = !DILocalVariable(name: "sp", scope: !6091, file: !2992, line: 1402, type: !377)
!6142 = !DILocalVariable(name: "width", scope: !6091, file: !2992, line: 1403, type: !103)
!6143 = !DILocalVariable(name: "precision", scope: !6091, file: !2992, line: 1404, type: !103)
!6144 = !DILocalVariable(name: "bps", scope: !6091, file: !2992, line: 1405, type: !377)
!6145 = !DILocalVariable(name: "bpe", scope: !6091, file: !2992, line: 1406, type: !377)
!6146 = !DILocalVariable(name: "sign", scope: !6091, file: !2992, line: 1407, type: !222)
!6147 = !DILocalVariable(name: "arg", scope: !6148, file: !2992, line: 1432, type: !103)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !2992, line: 1431, column: 24)
!6149 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1431, column: 7)
!6150 = !DILocalVariable(name: "specifier_cat", scope: !6091, file: !2992, line: 1468, type: !2991)
!6151 = !DILocalVariable(name: "length_mod", scope: !6091, file: !2992, line: 1470, type: !2999)
!6152 = !DILocalVariable(name: "rc", scope: !6153, file: !2992, line: 1575, type: !103)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !2992, line: 1575, column: 4)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !2992, line: 1574, column: 43)
!6155 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1574, column: 7)
!6156 = !DILocalVariable(name: "rc", scope: !6157, file: !2992, line: 1584, type: !103)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !2992, line: 1584, column: 4)
!6158 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1582, column: 28)
!6159 = !DILocalVariable(name: "len", scope: !6160, file: !2992, line: 1589, type: !239)
!6160 = distinct !DILexicalBlock(scope: !6158, file: !2992, line: 1586, column: 13)
!6161 = !DILocalVariable(name: "len", scope: !6162, file: !2992, line: 1641, type: !239)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !2992, line: 1640, column: 24)
!6163 = distinct !DILexicalBlock(scope: !6158, file: !2992, line: 1640, column: 8)
!6164 = !DILocalVariable(name: "nj_len", scope: !6091, file: !2992, line: 1722, type: !239)
!6165 = !DILocalVariable(name: "pad_len", scope: !6091, file: !2992, line: 1723, type: !103)
!6166 = !DILocalVariable(name: "pad", scope: !6167, file: !2992, line: 1751, type: !222)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !2992, line: 1750, column: 26)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !2992, line: 1750, column: 8)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !2992, line: 1747, column: 18)
!6170 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1747, column: 7)
!6171 = !DILocalVariable(name: "rc", scope: !6172, file: !2992, line: 1758, type: !103)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !2992, line: 1758, column: 7)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !2992, line: 1757, column: 21)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !2992, line: 1757, column: 10)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !2992, line: 1756, column: 26)
!6176 = distinct !DILexicalBlock(scope: !6167, file: !2992, line: 1756, column: 9)
!6177 = !DILocalVariable(name: "rc", scope: !6178, file: !2992, line: 1765, type: !103)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !2992, line: 1765, column: 6)
!6179 = distinct !DILexicalBlock(scope: !6167, file: !2992, line: 1764, column: 25)
!6180 = !DILocalVariable(name: "rc", scope: !6181, file: !2992, line: 1774, type: !103)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !2992, line: 1774, column: 4)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !2992, line: 1773, column: 18)
!6183 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1773, column: 7)
!6184 = !DILocalVariable(name: "rc", scope: !6185, file: !2992, line: 1819, type: !103)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !2992, line: 1819, column: 5)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !2992, line: 1818, column: 44)
!6187 = distinct !DILexicalBlock(scope: !6188, file: !2992, line: 1818, column: 8)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !2992, line: 1817, column: 10)
!6189 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1777, column: 7)
!6190 = !DILocalVariable(name: "rc", scope: !6191, file: !2992, line: 1823, type: !103)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !2992, line: 1823, column: 5)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !2992, line: 1822, column: 26)
!6193 = distinct !DILexicalBlock(scope: !6188, file: !2992, line: 1822, column: 8)
!6194 = !DILocalVariable(name: "rc", scope: !6195, file: !2992, line: 1828, type: !103)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !2992, line: 1828, column: 5)
!6196 = distinct !DILexicalBlock(scope: !6188, file: !2992, line: 1827, column: 26)
!6197 = !DILocalVariable(name: "rc", scope: !6198, file: !2992, line: 1831, type: !103)
!6198 = distinct !DILexicalBlock(scope: !6188, file: !2992, line: 1831, column: 4)
!6199 = !DILocalVariable(name: "rc", scope: !6200, file: !2992, line: 1836, type: !103)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !2992, line: 1836, column: 4)
!6201 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1835, column: 21)
!6202 = !DILabel(scope: !6158, name: "prec_int_pad0", file: !2992, line: 1634)
!6203 = !DILocation(line: 0, scope: !6064)
!6204 = !DILocation(line: 1341, column: 2, scope: !6064)
!6205 = !DILocation(line: 1341, column: 7, scope: !6064)
!6206 = !DILocation(line: 1375, column: 2, scope: !6064)
!6207 = !DILocation(line: 1342, column: 9, scope: !6064)
!6208 = !DILocation(line: 1375, column: 9, scope: !6064)
!6209 = !DILocation(line: 1377, column: 4, scope: !6088)
!6210 = !DILocation(line: 0, scope: !6088)
!6211 = !DILocation(line: 1377, column: 4, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6088, file: !2992, line: 1377, column: 4)
!6213 = distinct !{!6213, !6206, !6214}
!6214 = !DILocation(line: 1839, column: 2, scope: !6064)
!6215 = !DILocation(line: 1392, column: 3, scope: !6091)
!6216 = !DILocation(line: 1395, column: 5, scope: !6091)
!6217 = !DILocation(line: 0, scope: !6091)
!6218 = !DILocation(line: 1409, column: 8, scope: !6091)
!6219 = !DILocation(line: 1414, column: 13, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1414, column: 7)
!6221 = !DILocation(line: 1414, column: 7, scope: !6091)
!6222 = !DILocation(line: 1415, column: 12, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6220, file: !2992, line: 1414, column: 25)
!6224 = !DILocation(line: 1417, column: 14, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6223, file: !2992, line: 1417, column: 8)
!6226 = !DILocation(line: 1417, column: 8, scope: !6223)
!6227 = !DILocation(line: 1418, column: 21, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6225, file: !2992, line: 1417, column: 19)
!6229 = !DILocation(line: 1419, column: 13, scope: !6228)
!6230 = !DILocation(line: 1420, column: 4, scope: !6228)
!6231 = !DILocation(line: 1421, column: 20, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6220, file: !2992, line: 1421, column: 14)
!6233 = !DILocation(line: 1421, column: 14, scope: !6220)
!6234 = !DILocation(line: 1431, column: 13, scope: !6149)
!6235 = !DILocation(line: 1431, column: 7, scope: !6091)
!6236 = !DILocation(line: 1432, column: 14, scope: !6148)
!6237 = !DILocation(line: 0, scope: !6148)
!6238 = !DILocation(line: 1434, column: 12, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6148, file: !2992, line: 1434, column: 8)
!6240 = !DILocation(line: 1434, column: 8, scope: !6148)
!6241 = !DILocation(line: 1435, column: 24, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6239, file: !2992, line: 1434, column: 17)
!6243 = !DILocation(line: 1436, column: 4, scope: !6242)
!6244 = !DILocation(line: 1439, column: 20, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6149, file: !2992, line: 1439, column: 14)
!6246 = !DILocation(line: 1439, column: 14, scope: !6149)
!6247 = !DILocation(line: 1469, column: 37, scope: !6091)
!6248 = !DILocation(line: 1448, column: 20, scope: !6091)
!6249 = !DILocation(line: 1449, column: 22, scope: !6091)
!6250 = !DILocation(line: 1471, column: 34, scope: !6091)
!6251 = !DILocation(line: 1478, column: 7, scope: !6091)
!6252 = !DILocation(line: 1479, column: 4, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !2992, line: 1478, column: 40)
!6254 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1478, column: 7)
!6255 = !DILocation(line: 1484, column: 19, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6253, file: !2992, line: 1479, column: 24)
!6257 = !DILocation(line: 1484, column: 17, scope: !6256)
!6258 = !DILocation(line: 1485, column: 5, scope: !6256)
!6259 = !DILocation(line: 1492, column: 20, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !2992, line: 1491, column: 12)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !2992, line: 1487, column: 9)
!6262 = !DILocation(line: 1492, column: 18, scope: !6260)
!6263 = !DILocation(line: 1494, column: 5, scope: !6256)
!6264 = !DILocation(line: 1497, column: 23, scope: !6256)
!6265 = !DILocation(line: 1496, column: 17, scope: !6256)
!6266 = !DILocation(line: 1498, column: 5, scope: !6256)
!6267 = !DILocation(line: 1501, column: 23, scope: !6256)
!6268 = !DILocation(line: 1500, column: 17, scope: !6256)
!6269 = !DILocation(line: 1502, column: 5, scope: !6256)
!6270 = !DILocation(line: 1513, column: 23, scope: !6256)
!6271 = !DILocation(line: 1513, column: 6, scope: !6256)
!6272 = !DILocation(line: 1512, column: 17, scope: !6256)
!6273 = !DILocation(line: 1514, column: 5, scope: !6256)
!6274 = !DILocation(line: 0, scope: !6256)
!6275 = !DILocation(line: 1516, column: 8, scope: !6253)
!6276 = !DILocation(line: 1517, column: 19, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !2992, line: 1516, column: 33)
!6278 = distinct !DILexicalBlock(scope: !6253, file: !2992, line: 1516, column: 8)
!6279 = !DILocation(line: 1517, column: 17, scope: !6277)
!6280 = !DILocation(line: 1518, column: 4, scope: !6277)
!6281 = !DILocation(line: 1519, column: 19, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !2992, line: 1518, column: 39)
!6283 = distinct !DILexicalBlock(scope: !6278, file: !2992, line: 1518, column: 15)
!6284 = !DILocation(line: 1519, column: 17, scope: !6282)
!6285 = !DILocation(line: 1520, column: 4, scope: !6282)
!6286 = !DILocation(line: 1522, column: 4, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !2992, line: 1521, column: 47)
!6288 = distinct !DILexicalBlock(scope: !6254, file: !2992, line: 1521, column: 14)
!6289 = !DILocation(line: 1527, column: 19, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !2992, line: 1522, column: 24)
!6291 = !DILocation(line: 1527, column: 17, scope: !6290)
!6292 = !DILocation(line: 1528, column: 5, scope: !6290)
!6293 = !DILocation(line: 0, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6290, file: !2992, line: 1530, column: 9)
!6295 = !DILocation(line: 1540, column: 23, scope: !6290)
!6296 = !DILocation(line: 1539, column: 17, scope: !6290)
!6297 = !DILocation(line: 1542, column: 5, scope: !6290)
!6298 = !DILocation(line: 1545, column: 23, scope: !6290)
!6299 = !DILocation(line: 1544, column: 17, scope: !6290)
!6300 = !DILocation(line: 1547, column: 5, scope: !6290)
!6301 = !DILocation(line: 1551, column: 23, scope: !6290)
!6302 = !DILocation(line: 1551, column: 6, scope: !6290)
!6303 = !DILocation(line: 1550, column: 17, scope: !6290)
!6304 = !DILocation(line: 1552, column: 5, scope: !6290)
!6305 = !DILocation(line: 0, scope: !6290)
!6306 = !DILocation(line: 1554, column: 8, scope: !6287)
!6307 = !DILocation(line: 1555, column: 19, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !2992, line: 1554, column: 33)
!6309 = distinct !DILexicalBlock(scope: !6287, file: !2992, line: 1554, column: 8)
!6310 = !DILocation(line: 1555, column: 17, scope: !6308)
!6311 = !DILocation(line: 1556, column: 4, scope: !6308)
!6312 = !DILocation(line: 1557, column: 19, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !2992, line: 1556, column: 39)
!6314 = distinct !DILexicalBlock(scope: !6309, file: !2992, line: 1556, column: 15)
!6315 = !DILocation(line: 1557, column: 17, scope: !6313)
!6316 = !DILocation(line: 1558, column: 4, scope: !6313)
!6317 = !DILocation(line: 0, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !2992, line: 1560, column: 8)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !2992, line: 1559, column: 45)
!6320 = distinct !DILexicalBlock(scope: !6288, file: !2992, line: 1559, column: 14)
!6321 = !DILocation(line: 1566, column: 17, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !2992, line: 1565, column: 46)
!6323 = distinct !DILexicalBlock(scope: !6320, file: !2992, line: 1565, column: 14)
!6324 = !DILocation(line: 1566, column: 15, scope: !6322)
!6325 = !DILocation(line: 1567, column: 3, scope: !6322)
!6326 = !DILocation(line: 1574, column: 21, scope: !6155)
!6327 = !DILocation(line: 1575, column: 4, scope: !6153)
!6328 = !DILocation(line: 0, scope: !6153)
!6329 = !DILocation(line: 1575, column: 4, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6153, file: !2992, line: 1575, column: 4)
!6331 = !DILocation(line: 1582, column: 17, scope: !6091)
!6332 = !DILocation(line: 1582, column: 3, scope: !6091)
!6333 = !DILocation(line: 1584, column: 4, scope: !6157)
!6334 = !DILocation(line: 0, scope: !6157)
!6335 = !DILocation(line: 1584, column: 4, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6157, file: !2992, line: 1584, column: 4)
!6337 = !DILocation(line: 1587, column: 31, scope: !6160)
!6338 = !DILocation(line: 1591, column: 18, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6160, file: !2992, line: 1591, column: 8)
!6340 = !DILocation(line: 1591, column: 8, scope: !6160)
!6341 = !DILocation(line: 1592, column: 11, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6339, file: !2992, line: 1591, column: 24)
!6343 = !DILocation(line: 0, scope: !6160)
!6344 = !DILocation(line: 1593, column: 4, scope: !6342)
!6345 = !DILocation(line: 1594, column: 11, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6339, file: !2992, line: 1593, column: 11)
!6347 = !DILocation(line: 1604, column: 51, scope: !6158)
!6348 = !DILocation(line: 1604, column: 13, scope: !6158)
!6349 = !DILocation(line: 1604, column: 11, scope: !6158)
!6350 = !DILocation(line: 1606, column: 4, scope: !6158)
!6351 = !DILocation(line: 1609, column: 14, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6158, file: !2992, line: 1609, column: 8)
!6353 = !DILocation(line: 1609, column: 8, scope: !6158)
!6354 = !DILocation(line: 1619, column: 18, scope: !6158)
!6355 = !DILocation(line: 1620, column: 13, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6158, file: !2992, line: 1620, column: 8)
!6357 = !DILocation(line: 1620, column: 8, scope: !6158)
!6358 = !DILocation(line: 1622, column: 36, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6356, file: !2992, line: 1620, column: 18)
!6360 = !DILocation(line: 1622, column: 17, scope: !6359)
!6361 = !DILocation(line: 1623, column: 4, scope: !6359)
!6362 = !DILocation(line: 1632, column: 29, scope: !6158)
!6363 = !DILocation(line: 1632, column: 10, scope: !6158)
!6364 = !DILocation(line: 1632, column: 4, scope: !6158)
!6365 = !DILocation(line: 1407, column: 8, scope: !6091)
!6366 = !DILocation(line: 0, scope: !6158)
!6367 = !DILocation(line: 1634, column: 3, scope: !6158)
!6368 = !DILocation(line: 1640, column: 18, scope: !6163)
!6369 = !DILocation(line: 1640, column: 8, scope: !6158)
!6370 = !DILocation(line: 1729, column: 13, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1729, column: 7)
!6372 = !DILocation(line: 1641, column: 22, scope: !6162)
!6373 = !DILocation(line: 0, scope: !6162)
!6374 = !DILocation(line: 1646, column: 21, scope: !6162)
!6375 = !DILocation(line: 1649, column: 13, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6162, file: !2992, line: 1649, column: 9)
!6377 = !DILocation(line: 1649, column: 9, scope: !6162)
!6378 = !DILocation(line: 1650, column: 35, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6376, file: !2992, line: 1649, column: 34)
!6380 = !DILocation(line: 1650, column: 23, scope: !6379)
!6381 = !DILocation(line: 1651, column: 5, scope: !6379)
!6382 = !DILocation(line: 1660, column: 15, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6158, file: !2992, line: 1660, column: 8)
!6384 = !DILocation(line: 1660, column: 19, scope: !6383)
!6385 = !DILocation(line: 1660, column: 8, scope: !6158)
!6386 = !DILocation(line: 1661, column: 23, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6383, file: !2992, line: 1660, column: 28)
!6388 = !DILocation(line: 1661, column: 11, scope: !6387)
!6389 = !DILocation(line: 1665, column: 22, scope: !6387)
!6390 = !DILocation(line: 1666, column: 21, scope: !6387)
!6391 = !DILocation(line: 1668, column: 5, scope: !6387)
!6392 = !DILocation(line: 1677, column: 30, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !2992, line: 1676, column: 49)
!6394 = distinct !DILexicalBlock(scope: !6158, file: !2992, line: 1676, column: 8)
!6395 = !DILocation(line: 1677, column: 5, scope: !6393)
!6396 = !DILocation(line: 1680, column: 4, scope: !6158)
!6397 = !DILocation(line: 0, scope: !6339)
!6398 = !DILocation(line: 1597, column: 14, scope: !6160)
!6399 = !DILocation(line: 1699, column: 11, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1699, column: 7)
!6401 = !DILocation(line: 1699, column: 7, scope: !6091)
!6402 = !DILocation(line: 1725, column: 7, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1725, column: 7)
!6404 = !DILocation(line: 1725, column: 12, scope: !6403)
!6405 = !DILocation(line: 1747, column: 13, scope: !6170)
!6406 = !DILocation(line: 1747, column: 7, scope: !6091)
!6407 = !DILocation(line: 1722, column: 24, scope: !6091)
!6408 = !DILocation(line: 1725, column: 7, scope: !6091)
!6409 = !DILocation(line: 1729, column: 7, scope: !6091)
!6410 = !DILocation(line: 1736, column: 13, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6091, file: !2992, line: 1736, column: 7)
!6412 = !DILocation(line: 1735, column: 19, scope: !6091)
!6413 = !DILocation(line: 1736, column: 7, scope: !6091)
!6414 = !DILocation(line: 1748, column: 10, scope: !6169)
!6415 = !DILocation(line: 1750, column: 15, scope: !6168)
!6416 = !DILocation(line: 1750, column: 8, scope: !6169)
!6417 = !DILocation(line: 0, scope: !6167)
!6418 = !DILocation(line: 1756, column: 15, scope: !6176)
!6419 = !DILocation(line: 1756, column: 9, scope: !6167)
!6420 = !DILocation(line: 1758, column: 7, scope: !6172)
!6421 = !DILocation(line: 0, scope: !6172)
!6422 = !DILocation(line: 1758, column: 7, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6172, file: !2992, line: 1758, column: 7)
!6424 = !DILocation(line: 1764, column: 5, scope: !6167)
!6425 = !DILocation(line: 0, scope: !6169)
!6426 = !DILocation(line: 1764, column: 20, scope: !6167)
!6427 = !DILocation(line: 1764, column: 17, scope: !6167)
!6428 = !DILocation(line: 1765, column: 6, scope: !6178)
!6429 = !DILocation(line: 0, scope: !6178)
!6430 = !DILocation(line: 1765, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6178, file: !2992, line: 1765, column: 6)
!6432 = distinct !{!6432, !6424, !6433}
!6433 = !DILocation(line: 1766, column: 5, scope: !6167)
!6434 = !DILocation(line: 1773, column: 12, scope: !6183)
!6435 = !DILocation(line: 1773, column: 7, scope: !6091)
!6436 = !DILocation(line: 1773, column: 7, scope: !6183)
!6437 = !DILocation(line: 1774, column: 4, scope: !6181)
!6438 = !DILocation(line: 0, scope: !6181)
!6439 = !DILocation(line: 1774, column: 4, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6181, file: !2992, line: 1774, column: 4)
!6441 = !DILocation(line: 1818, column: 8, scope: !6187)
!6442 = !DILocation(line: 1818, column: 27, scope: !6187)
!6443 = !DILocation(line: 1818, column: 25, scope: !6187)
!6444 = !DILocation(line: 1818, column: 8, scope: !6188)
!6445 = !DILocation(line: 1819, column: 5, scope: !6185)
!6446 = !DILocation(line: 0, scope: !6185)
!6447 = !DILocation(line: 1819, column: 5, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6185, file: !2992, line: 1819, column: 5)
!6449 = !DILocation(line: 1822, column: 14, scope: !6193)
!6450 = !DILocation(line: 1822, column: 8, scope: !6188)
!6451 = !DILocation(line: 1823, column: 5, scope: !6191)
!6452 = !DILocation(line: 0, scope: !6191)
!6453 = !DILocation(line: 1823, column: 5, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6191, file: !2992, line: 1823, column: 5)
!6455 = !DILocation(line: 1826, column: 20, scope: !6188)
!6456 = !DILocation(line: 1827, column: 4, scope: !6188)
!6457 = !DILocation(line: 0, scope: !6188)
!6458 = !DILocation(line: 1827, column: 21, scope: !6188)
!6459 = !DILocation(line: 1827, column: 18, scope: !6188)
!6460 = !DILocation(line: 1828, column: 5, scope: !6195)
!6461 = !DILocation(line: 0, scope: !6195)
!6462 = !DILocation(line: 1828, column: 5, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6195, file: !2992, line: 1828, column: 5)
!6464 = distinct !{!6464, !6456, !6465}
!6465 = !DILocation(line: 1829, column: 4, scope: !6188)
!6466 = !DILocation(line: 1831, column: 4, scope: !6198)
!6467 = !DILocation(line: 0, scope: !6198)
!6468 = !DILocation(line: 1831, column: 4, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6198, file: !2992, line: 1831, column: 4)
!6470 = !DILocation(line: 1835, column: 16, scope: !6091)
!6471 = !DILocation(line: 1835, column: 3, scope: !6091)
!6472 = !DILocation(line: 1836, column: 4, scope: !6200)
!6473 = !DILocation(line: 0, scope: !6200)
!6474 = !DILocation(line: 1836, column: 4, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6200, file: !2992, line: 1836, column: 4)
!6476 = !DILocation(line: 1837, column: 4, scope: !6201)
!6477 = distinct !{!6477, !6471, !6478}
!6478 = !DILocation(line: 1838, column: 3, scope: !6091)
!6479 = !DILocation(line: 1844, column: 1, scope: !6064)
!6480 = distinct !DISubprogram(name: "extract_conversion", scope: !2992, file: !2992, line: 642, type: !6481, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6483)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!377, !6137, !377}
!6483 = !{!6484, !6485}
!6484 = !DILocalVariable(name: "conv", arg: 1, scope: !6480, file: !2992, line: 642, type: !6137)
!6485 = !DILocalVariable(name: "sp", arg: 2, scope: !6480, file: !2992, line: 643, type: !377)
!6486 = !DILocation(line: 0, scope: !6480)
!6487 = !DILocation(line: 645, column: 10, scope: !6480)
!6488 = !DILocation(line: 653, column: 2, scope: !6480)
!6489 = !DILocation(line: 654, column: 6, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6480, file: !2992, line: 654, column: 6)
!6491 = !DILocation(line: 654, column: 10, scope: !6490)
!6492 = !DILocation(line: 654, column: 6, scope: !6480)
!6493 = !DILocation(line: 655, column: 24, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6490, file: !2992, line: 654, column: 18)
!6495 = !DILocation(line: 655, column: 19, scope: !6494)
!6496 = !DILocation(line: 656, column: 3, scope: !6494)
!6497 = !DILocation(line: 659, column: 7, scope: !6480)
!6498 = !DILocation(line: 660, column: 7, scope: !6480)
!6499 = !DILocation(line: 661, column: 7, scope: !6480)
!6500 = !DILocation(line: 662, column: 7, scope: !6480)
!6501 = !DILocation(line: 663, column: 7, scope: !6480)
!6502 = !DILocation(line: 665, column: 2, scope: !6480)
!6503 = !DILocation(line: 666, column: 1, scope: !6480)
!6504 = distinct !DISubprogram(name: "outs", scope: !2992, file: !2992, line: 1319, type: !6505, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6507)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!103, !4438, !102, !377, !377}
!6507 = !{!6508, !6509, !6510, !6511, !6512, !6513}
!6508 = !DILocalVariable(name: "out", arg: 1, scope: !6504, file: !2992, line: 1319, type: !4438)
!6509 = !DILocalVariable(name: "ctx", arg: 2, scope: !6504, file: !2992, line: 1320, type: !102)
!6510 = !DILocalVariable(name: "sp", arg: 3, scope: !6504, file: !2992, line: 1321, type: !377)
!6511 = !DILocalVariable(name: "ep", arg: 4, scope: !6504, file: !2992, line: 1322, type: !377)
!6512 = !DILocalVariable(name: "count", scope: !6504, file: !2992, line: 1324, type: !239)
!6513 = !DILocalVariable(name: "rc", scope: !6514, file: !2992, line: 1327, type: !103)
!6514 = distinct !DILexicalBlock(scope: !6504, file: !2992, line: 1326, column: 45)
!6515 = !DILocation(line: 0, scope: !6504)
!6516 = !DILocation(line: 1326, column: 2, scope: !6504)
!6517 = !DILocation(line: 1324, column: 9, scope: !6504)
!6518 = !DILocation(line: 1326, column: 13, scope: !6504)
!6519 = !DILocation(line: 1326, column: 19, scope: !6504)
!6520 = !DILocation(line: 1327, column: 21, scope: !6514)
!6521 = !DILocation(line: 1326, column: 36, scope: !6504)
!6522 = !DILocation(line: 1326, column: 39, scope: !6504)
!6523 = !DILocation(line: 1327, column: 24, scope: !6514)
!6524 = !DILocation(line: 1327, column: 16, scope: !6514)
!6525 = !DILocation(line: 1327, column: 12, scope: !6514)
!6526 = !DILocation(line: 0, scope: !6514)
!6527 = !DILocation(line: 1329, column: 10, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6514, file: !2992, line: 1329, column: 7)
!6529 = !DILocation(line: 1329, column: 7, scope: !6514)
!6530 = distinct !{!6530, !6516, !6531}
!6531 = !DILocation(line: 1333, column: 2, scope: !6504)
!6532 = !DILocation(line: 1336, column: 1, scope: !6504)
!6533 = distinct !DISubprogram(name: "encode_uint", scope: !2992, file: !2992, line: 788, type: !6534, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!307, !3014, !6137, !307, !377}
!6536 = !{!6537, !6538, !6539, !6540, !6541, !6542, !6544, !6545}
!6537 = !DILocalVariable(name: "value", arg: 1, scope: !6533, file: !2992, line: 788, type: !3014)
!6538 = !DILocalVariable(name: "conv", arg: 2, scope: !6533, file: !2992, line: 789, type: !6137)
!6539 = !DILocalVariable(name: "bps", arg: 3, scope: !6533, file: !2992, line: 790, type: !307)
!6540 = !DILocalVariable(name: "bpe", arg: 4, scope: !6533, file: !2992, line: 791, type: !377)
!6541 = !DILocalVariable(name: "upcase", scope: !6533, file: !2992, line: 793, type: !279)
!6542 = !DILocalVariable(name: "radix", scope: !6533, file: !2992, line: 794, type: !6543)
!6543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6544 = !DILocalVariable(name: "bp", scope: !6533, file: !2992, line: 795, type: !307)
!6545 = !DILocalVariable(name: "lsv", scope: !6546, file: !2992, line: 798, type: !32)
!6546 = distinct !DILexicalBlock(scope: !6533, file: !2992, line: 797, column: 5)
!6547 = !DILocation(line: 0, scope: !6533)
!6548 = !DILocation(line: 793, column: 35, scope: !6533)
!6549 = !DILocation(line: 793, column: 24, scope: !6533)
!6550 = !DILocation(line: 793, column: 16, scope: !6533)
!6551 = !DILocation(line: 794, column: 29, scope: !6533)
!6552 = !DILocation(line: 795, column: 24, scope: !6533)
!6553 = !DILocation(line: 795, column: 17, scope: !6533)
!6554 = !DILocation(line: 797, column: 2, scope: !6533)
!6555 = !DILocation(line: 802, column: 9, scope: !6546)
!6556 = !DILocation(line: 798, column: 22, scope: !6546)
!6557 = !DILocation(line: 0, scope: !6546)
!6558 = !DILocation(line: 800, column: 16, scope: !6546)
!6559 = !DILocation(line: 800, column: 11, scope: !6546)
!6560 = !DILocation(line: 800, column: 4, scope: !6546)
!6561 = !DILocation(line: 800, column: 9, scope: !6546)
!6562 = !DILocation(line: 803, column: 18, scope: !6533)
!6563 = !DILocation(line: 803, column: 24, scope: !6533)
!6564 = !DILocation(line: 803, column: 2, scope: !6546)
!6565 = distinct !{!6565, !6554, !6566}
!6566 = !DILocation(line: 803, column: 37, scope: !6533)
!6567 = !DILocation(line: 808, column: 12, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6533, file: !2992, line: 808, column: 6)
!6569 = !DILocation(line: 808, column: 6, scope: !6533)
!6570 = !DILocation(line: 809, column: 7, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6568, file: !2992, line: 808, column: 23)
!6572 = !DILocation(line: 813, column: 3, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6574, file: !2992, line: 811, column: 27)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !2992, line: 811, column: 14)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !2992, line: 809, column: 7)
!6576 = !DILocation(line: 0, scope: !6575)
!6577 = !DILocation(line: 818, column: 2, scope: !6533)
!6578 = distinct !DISubprogram(name: "store_count", scope: !2992, file: !2992, line: 1280, type: !6579, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6583)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{null, !6581, !102, !103}
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6582, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6104)
!6583 = !{!6584, !6585, !6586}
!6584 = !DILocalVariable(name: "conv", arg: 1, scope: !6578, file: !2992, line: 1280, type: !6581)
!6585 = !DILocalVariable(name: "dp", arg: 2, scope: !6578, file: !2992, line: 1281, type: !102)
!6586 = !DILocalVariable(name: "count", arg: 3, scope: !6578, file: !2992, line: 1282, type: !103)
!6587 = !DILocation(line: 0, scope: !6578)
!6588 = !DILocation(line: 1284, column: 38, scope: !6578)
!6589 = !DILocation(line: 1284, column: 2, scope: !6578)
!6590 = !DILocation(line: 1286, column: 4, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6578, file: !2992, line: 1284, column: 50)
!6592 = !DILocation(line: 1286, column: 14, scope: !6591)
!6593 = !DILocation(line: 1287, column: 3, scope: !6591)
!6594 = !DILocation(line: 1289, column: 24, scope: !6591)
!6595 = !DILocation(line: 1289, column: 22, scope: !6591)
!6596 = !DILocation(line: 1290, column: 3, scope: !6591)
!6597 = !DILocation(line: 1292, column: 18, scope: !6591)
!6598 = !DILocation(line: 1292, column: 4, scope: !6591)
!6599 = !DILocation(line: 1292, column: 16, scope: !6591)
!6600 = !DILocation(line: 1293, column: 3, scope: !6591)
!6601 = !DILocation(line: 1295, column: 4, scope: !6591)
!6602 = !DILocation(line: 1295, column: 15, scope: !6591)
!6603 = !DILocation(line: 1296, column: 3, scope: !6591)
!6604 = !DILocation(line: 1298, column: 22, scope: !6591)
!6605 = !DILocation(line: 1298, column: 4, scope: !6591)
!6606 = !DILocation(line: 1298, column: 20, scope: !6591)
!6607 = !DILocation(line: 1299, column: 3, scope: !6591)
!6608 = !DILocation(line: 1301, column: 21, scope: !6591)
!6609 = !DILocation(line: 1301, column: 4, scope: !6591)
!6610 = !DILocation(line: 1301, column: 19, scope: !6591)
!6611 = !DILocation(line: 1302, column: 3, scope: !6591)
!6612 = !DILocation(line: 1304, column: 4, scope: !6591)
!6613 = !DILocation(line: 1304, column: 17, scope: !6591)
!6614 = !DILocation(line: 1305, column: 3, scope: !6591)
!6615 = !DILocation(line: 1307, column: 4, scope: !6591)
!6616 = !DILocation(line: 1307, column: 20, scope: !6591)
!6617 = !DILocation(line: 1308, column: 3, scope: !6591)
!6618 = !DILocation(line: 1316, column: 1, scope: !6578)
!6619 = distinct !DISubprogram(name: "isupper", scope: !6620, file: !6620, line: 16, type: !618, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6621)
!6620 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6621 = !{!6622}
!6622 = !DILocalVariable(name: "a", arg: 1, scope: !6619, file: !6620, line: 16, type: !103)
!6623 = !DILocation(line: 0, scope: !6619)
!6624 = !DILocation(line: 18, column: 29, scope: !6619)
!6625 = !DILocation(line: 18, column: 45, scope: !6619)
!6626 = !DILocation(line: 18, column: 2, scope: !6619)
!6627 = distinct !DISubprogram(name: "conversion_radix", scope: !2992, file: !2992, line: 761, type: !6628, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6630)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!239, !222}
!6630 = !{!6631}
!6631 = !DILocalVariable(name: "specifier", arg: 1, scope: !6627, file: !2992, line: 761, type: !222)
!6632 = !DILocation(line: 0, scope: !6627)
!6633 = !DILocation(line: 763, column: 2, scope: !6627)
!6634 = !DILocation(line: 770, column: 3, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6627, file: !2992, line: 763, column: 21)
!6636 = !DILocation(line: 774, column: 3, scope: !6635)
!6637 = !DILocation(line: 0, scope: !6635)
!6638 = !DILocation(line: 776, column: 1, scope: !6627)
!6639 = distinct !DISubprogram(name: "extract_flags", scope: !2992, file: !2992, line: 339, type: !6481, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6640)
!6640 = !{!6641, !6642, !6643}
!6641 = !DILocalVariable(name: "conv", arg: 1, scope: !6639, file: !2992, line: 339, type: !6137)
!6642 = !DILocalVariable(name: "sp", arg: 2, scope: !6639, file: !2992, line: 340, type: !377)
!6643 = !DILocalVariable(name: "loop", scope: !6639, file: !2992, line: 342, type: !279)
!6644 = !DILocation(line: 0, scope: !6639)
!6645 = !DILocation(line: 344, column: 2, scope: !6639)
!6646 = !DILocation(line: 345, column: 11, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6639, file: !2992, line: 344, column: 5)
!6648 = !DILocation(line: 345, column: 3, scope: !6647)
!6649 = !DILocation(line: 351, column: 4, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6647, file: !2992, line: 345, column: 16)
!6651 = !DILocation(line: 354, column: 4, scope: !6650)
!6652 = !DILocation(line: 357, column: 4, scope: !6650)
!6653 = !DILocation(line: 360, column: 4, scope: !6650)
!6654 = !DILocation(line: 0, scope: !6650)
!6655 = !DILocation(line: 370, column: 12, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6639, file: !2992, line: 370, column: 6)
!6657 = !DILocation(line: 370, column: 22, scope: !6656)
!6658 = !DILocation(line: 371, column: 19, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6656, file: !2992, line: 370, column: 42)
!6660 = !DILocation(line: 372, column: 2, scope: !6659)
!6661 = !DILocation(line: 376, column: 2, scope: !6639)
!6662 = distinct !DISubprogram(name: "extract_width", scope: !2992, file: !2992, line: 388, type: !6481, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6663)
!6663 = !{!6664, !6665, !6666, !6667}
!6664 = !DILocalVariable(name: "conv", arg: 1, scope: !6662, file: !2992, line: 388, type: !6137)
!6665 = !DILocalVariable(name: "sp", arg: 2, scope: !6662, file: !2992, line: 389, type: !377)
!6666 = !DILocalVariable(name: "wp", scope: !6662, file: !2992, line: 398, type: !377)
!6667 = !DILocalVariable(name: "width", scope: !6662, file: !2992, line: 399, type: !239)
!6668 = !DILocation(line: 0, scope: !6662)
!6669 = !DILocation(line: 391, column: 8, scope: !6662)
!6670 = !DILocation(line: 391, column: 22, scope: !6662)
!6671 = !DILocation(line: 393, column: 6, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6662, file: !2992, line: 393, column: 6)
!6673 = !DILocation(line: 393, column: 10, scope: !6672)
!6674 = !DILocation(line: 393, column: 6, scope: !6662)
!6675 = !DILocation(line: 394, column: 20, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6672, file: !2992, line: 393, column: 18)
!6677 = !DILocation(line: 395, column: 10, scope: !6676)
!6678 = !DILocation(line: 395, column: 3, scope: !6676)
!6679 = !DILocation(line: 399, column: 17, scope: !6662)
!6680 = !DILocation(line: 401, column: 6, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6662, file: !2992, line: 401, column: 6)
!6682 = !DILocation(line: 401, column: 9, scope: !6681)
!6683 = !DILocation(line: 401, column: 6, scope: !6662)
!6684 = !DILocation(line: 402, column: 23, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6681, file: !2992, line: 401, column: 16)
!6686 = !DILocation(line: 403, column: 9, scope: !6685)
!6687 = !DILocation(line: 403, column: 21, scope: !6685)
!6688 = !DILocation(line: 405, column: 11, scope: !6685)
!6689 = !DILocation(line: 404, column: 21, scope: !6685)
!6690 = !DILocation(line: 406, column: 2, scope: !6685)
!6691 = !DILocation(line: 409, column: 1, scope: !6662)
!6692 = distinct !DISubprogram(name: "extract_prec", scope: !2992, file: !2992, line: 420, type: !6481, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6693)
!6693 = !{!6694, !6695, !6696}
!6694 = !DILocalVariable(name: "conv", arg: 1, scope: !6692, file: !2992, line: 420, type: !6137)
!6695 = !DILocalVariable(name: "sp", arg: 2, scope: !6692, file: !2992, line: 421, type: !377)
!6696 = !DILocalVariable(name: "prec", scope: !6692, file: !2992, line: 435, type: !239)
!6697 = !DILocation(line: 0, scope: !6692)
!6698 = !DILocation(line: 423, column: 24, scope: !6692)
!6699 = !DILocation(line: 423, column: 28, scope: !6692)
!6700 = !DILocation(line: 423, column: 8, scope: !6692)
!6701 = !DILocation(line: 423, column: 21, scope: !6692)
!6702 = !DILocation(line: 425, column: 6, scope: !6692)
!6703 = !DILocation(line: 428, column: 2, scope: !6692)
!6704 = !DILocation(line: 430, column: 6, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6692, file: !2992, line: 430, column: 6)
!6706 = !DILocation(line: 430, column: 10, scope: !6705)
!6707 = !DILocation(line: 430, column: 6, scope: !6692)
!6708 = !DILocation(line: 431, column: 19, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6705, file: !2992, line: 430, column: 18)
!6710 = !DILocation(line: 432, column: 10, scope: !6709)
!6711 = !DILocation(line: 432, column: 3, scope: !6709)
!6712 = !DILocation(line: 435, column: 16, scope: !6692)
!6713 = !DILocation(line: 437, column: 8, scope: !6692)
!6714 = !DILocation(line: 437, column: 19, scope: !6692)
!6715 = !DILocation(line: 439, column: 10, scope: !6692)
!6716 = !DILocation(line: 438, column: 20, scope: !6692)
!6717 = !DILocation(line: 441, column: 9, scope: !6692)
!6718 = !DILocation(line: 442, column: 1, scope: !6692)
!6719 = distinct !DISubprogram(name: "extract_length", scope: !2992, file: !2992, line: 453, type: !6481, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6720)
!6720 = !{!6721, !6722}
!6721 = !DILocalVariable(name: "conv", arg: 1, scope: !6719, file: !2992, line: 453, type: !6137)
!6722 = !DILocalVariable(name: "sp", arg: 2, scope: !6719, file: !2992, line: 454, type: !377)
!6723 = !DILocation(line: 0, scope: !6719)
!6724 = !DILocation(line: 456, column: 10, scope: !6719)
!6725 = !DILocation(line: 456, column: 2, scope: !6719)
!6726 = !DILocation(line: 458, column: 8, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !2992, line: 458, column: 7)
!6728 = distinct !DILexicalBlock(scope: !6719, file: !2992, line: 456, column: 15)
!6729 = !DILocation(line: 458, column: 7, scope: !6727)
!6730 = !DILocation(line: 458, column: 13, scope: !6727)
!6731 = !DILocation(line: 0, scope: !6727)
!6732 = !DILocation(line: 458, column: 7, scope: !6728)
!6733 = !DILocation(line: 459, column: 21, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6727, file: !2992, line: 458, column: 21)
!6735 = !DILocation(line: 460, column: 4, scope: !6734)
!6736 = !DILocation(line: 461, column: 3, scope: !6734)
!6737 = !DILocation(line: 462, column: 21, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6727, file: !2992, line: 461, column: 10)
!6739 = !DILocation(line: 466, column: 8, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6728, file: !2992, line: 466, column: 7)
!6741 = !DILocation(line: 466, column: 7, scope: !6740)
!6742 = !DILocation(line: 466, column: 13, scope: !6740)
!6743 = !DILocation(line: 0, scope: !6740)
!6744 = !DILocation(line: 466, column: 7, scope: !6728)
!6745 = !DILocation(line: 467, column: 21, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6740, file: !2992, line: 466, column: 21)
!6747 = !DILocation(line: 468, column: 4, scope: !6746)
!6748 = !DILocation(line: 469, column: 3, scope: !6746)
!6749 = !DILocation(line: 470, column: 21, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6740, file: !2992, line: 469, column: 10)
!6751 = !DILocation(line: 474, column: 9, scope: !6728)
!6752 = !DILocation(line: 474, column: 20, scope: !6728)
!6753 = !DILocation(line: 475, column: 3, scope: !6728)
!6754 = !DILocation(line: 476, column: 3, scope: !6728)
!6755 = !DILocation(line: 478, column: 9, scope: !6728)
!6756 = !DILocation(line: 478, column: 20, scope: !6728)
!6757 = !DILocation(line: 479, column: 3, scope: !6728)
!6758 = !DILocation(line: 480, column: 3, scope: !6728)
!6759 = !DILocation(line: 482, column: 9, scope: !6728)
!6760 = !DILocation(line: 482, column: 20, scope: !6728)
!6761 = !DILocation(line: 483, column: 3, scope: !6728)
!6762 = !DILocation(line: 484, column: 3, scope: !6728)
!6763 = !DILocation(line: 486, column: 9, scope: !6728)
!6764 = !DILocation(line: 486, column: 20, scope: !6728)
!6765 = !DILocation(line: 487, column: 3, scope: !6728)
!6766 = !DILocation(line: 492, column: 21, scope: !6728)
!6767 = !DILocation(line: 493, column: 3, scope: !6728)
!6768 = !DILocation(line: 495, column: 9, scope: !6728)
!6769 = !DILocation(line: 495, column: 20, scope: !6728)
!6770 = !DILocation(line: 496, column: 3, scope: !6728)
!6771 = !DILocation(line: 498, column: 2, scope: !6719)
!6772 = distinct !DISubprogram(name: "extract_specifier", scope: !2992, file: !2992, line: 513, type: !6481, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6773)
!6773 = !{!6774, !6775, !6776, !6777}
!6774 = !DILocalVariable(name: "conv", arg: 1, scope: !6772, file: !2992, line: 513, type: !6137)
!6775 = !DILocalVariable(name: "sp", arg: 2, scope: !6772, file: !2992, line: 514, type: !377)
!6776 = !DILocalVariable(name: "unsupported", scope: !6772, file: !2992, line: 516, type: !279)
!6777 = !DILabel(scope: !6778, name: "int_conv", file: !2992, line: 526)
!6778 = distinct !DILexicalBlock(scope: !6772, file: !2992, line: 520, column: 27)
!6779 = !DILocation(line: 0, scope: !6772)
!6780 = !DILocation(line: 518, column: 20, scope: !6772)
!6781 = !DILocation(line: 518, column: 8, scope: !6772)
!6782 = !DILocation(line: 518, column: 18, scope: !6772)
!6783 = !DILocation(line: 520, column: 2, scope: !6772)
!6784 = !DILocation(line: 525, column: 3, scope: !6778)
!6785 = !DILocation(line: 0, scope: !6778)
!6786 = !DILocation(line: 526, column: 1, scope: !6778)
!6787 = !DILocation(line: 528, column: 24, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6778, file: !2992, line: 528, column: 7)
!6789 = !DILocation(line: 528, column: 7, scope: !6778)
!6790 = !DILocation(line: 535, column: 23, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6778, file: !2992, line: 535, column: 7)
!6792 = !DILocation(line: 535, column: 7, scope: !6778)
!6793 = !DILocation(line: 536, column: 36, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6791, file: !2992, line: 535, column: 31)
!6795 = !DILocation(line: 537, column: 3, scope: !6794)
!6796 = !DILocation(line: 570, column: 9, scope: !6778)
!6797 = !DILocation(line: 570, column: 23, scope: !6778)
!6798 = !DILocation(line: 575, column: 4, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !2992, line: 573, column: 48)
!6800 = distinct !DILexicalBlock(scope: !6778, file: !2992, line: 573, column: 7)
!6801 = !DILocation(line: 603, column: 9, scope: !6778)
!6802 = !DILocation(line: 603, column: 23, scope: !6778)
!6803 = !DILocation(line: 605, column: 24, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6778, file: !2992, line: 605, column: 7)
!6805 = !DILocation(line: 605, column: 7, scope: !6778)
!6806 = !DILocation(line: 612, column: 9, scope: !6778)
!6807 = !DILocation(line: 612, column: 23, scope: !6778)
!6808 = !DILocation(line: 619, column: 24, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6778, file: !2992, line: 619, column: 7)
!6810 = !DILocation(line: 619, column: 7, scope: !6778)
!6811 = !DILocation(line: 625, column: 9, scope: !6778)
!6812 = !DILocation(line: 625, column: 17, scope: !6778)
!6813 = !DILocation(line: 626, column: 3, scope: !6778)
!6814 = !DILocation(line: 629, column: 20, scope: !6772)
!6815 = !DILocation(line: 629, column: 8, scope: !6772)
!6816 = !DILocation(line: 518, column: 23, scope: !6772)
!6817 = !DILocation(line: 631, column: 2, scope: !6772)
!6818 = distinct !DISubprogram(name: "extract_decimal", scope: !2992, file: !2992, line: 318, type: !6819, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6821)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!239, !595}
!6821 = !{!6822, !6823, !6824}
!6822 = !DILocalVariable(name: "str", arg: 1, scope: !6818, file: !2992, line: 318, type: !595)
!6823 = !DILocalVariable(name: "sp", scope: !6818, file: !2992, line: 320, type: !377)
!6824 = !DILocalVariable(name: "val", scope: !6818, file: !2992, line: 321, type: !239)
!6825 = !DILocation(line: 0, scope: !6818)
!6826 = !DILocation(line: 320, column: 19, scope: !6818)
!6827 = !DILocation(line: 323, column: 37, scope: !6818)
!6828 = !DILocation(line: 323, column: 17, scope: !6818)
!6829 = !DILocation(line: 323, column: 9, scope: !6818)
!6830 = !DILocation(line: 323, column: 2, scope: !6818)
!6831 = !DILocation(line: 324, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6818, file: !2992, line: 323, column: 43)
!6833 = !DILocation(line: 324, column: 24, scope: !6832)
!6834 = !DILocation(line: 324, column: 19, scope: !6832)
!6835 = !DILocation(line: 324, column: 27, scope: !6832)
!6836 = distinct !{!6836, !6830, !6837}
!6837 = !DILocation(line: 325, column: 2, scope: !6818)
!6838 = !DILocation(line: 326, column: 7, scope: !6818)
!6839 = !DILocation(line: 327, column: 2, scope: !6818)
!6840 = distinct !DISubprogram(name: "isdigit", scope: !6620, file: !6620, line: 43, type: !618, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !6841)
!6841 = !{!6842}
!6842 = !DILocalVariable(name: "a", arg: 1, scope: !6840, file: !6620, line: 43, type: !103)
!6843 = !DILocation(line: 0, scope: !6840)
!6844 = !DILocation(line: 45, column: 29, scope: !6840)
!6845 = !DILocation(line: 45, column: 45, scope: !6840)
!6846 = !DILocation(line: 45, column: 2, scope: !6840)
!6847 = distinct !DISubprogram(name: "assert_post_action", scope: !6848, file: !6848, line: 26, type: !6849, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !6851)
!6848 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !377, !32}
!6851 = !{!6852, !6853}
!6852 = !DILocalVariable(name: "file", arg: 1, scope: !6847, file: !6848, line: 26, type: !377)
!6853 = !DILocalVariable(name: "line", arg: 2, scope: !6847, file: !6848, line: 26, type: !32)
!6854 = !DILocation(line: 0, scope: !6847)
!6855 = !DILocation(line: 43, column: 2, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6847, file: !6848, line: 43, column: 2)
!6857 = !{i64 2151047219, i64 2151047235, i64 2151047261, i64 2151047289, i64 2151047309}
!6858 = !DILocation(line: 44, column: 1, scope: !6847)
!6859 = distinct !DISubprogram(name: "assert_print", scope: !6848, file: !6848, line: 46, type: !5048, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !6860)
!6860 = !{!6861, !6862}
!6861 = !DILocalVariable(name: "fmt", arg: 1, scope: !6859, file: !6848, line: 46, type: !377)
!6862 = !DILocalVariable(name: "ap", scope: !6859, file: !6848, line: 48, type: !6863)
!6863 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4056, line: 99, baseType: !6864)
!6864 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4056, line: 40, baseType: !6865)
!6865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6848, baseType: !6866)
!6866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6867)
!6867 = !{!6868}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6866, file: !6848, line: 48, baseType: !102, size: 32)
!6869 = !DILocation(line: 0, scope: !6859)
!6870 = !DILocation(line: 48, column: 2, scope: !6859)
!6871 = !DILocation(line: 48, column: 10, scope: !6859)
!6872 = !DILocation(line: 50, column: 2, scope: !6859)
!6873 = !DILocation(line: 52, column: 2, scope: !6859)
!6874 = !DILocation(line: 54, column: 2, scope: !6859)
!6875 = !DILocation(line: 55, column: 1, scope: !6859)
!6876 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6877, file: !6877, line: 9, type: !374, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3024, retainedNodes: !2145)
!6877 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!6878 = !DILocation(line: 11, column: 1, scope: !6876)
!6879 = !{i64 2147559719, i64 2147559762, i64 2147559802}
!6880 = !DILocation(line: 12, column: 1, scope: !6876)
!6881 = !{i64 2147563946, i64 2147563989, i64 2147564029}
!6882 = !DILocation(line: 13, column: 1, scope: !6876)
!6883 = !{i64 2147564155, i64 2147564198, i64 2147564238}
!6884 = !DILocation(line: 14, column: 1, scope: !6876)
!6885 = !{i64 2147564372, i64 2147564415, i64 2147564455}
!6886 = !DILocation(line: 15, column: 1, scope: !6876)
!6887 = !{i64 2147564541, i64 2147564584, i64 2147564624}
!6888 = !DILocation(line: 16, column: 1, scope: !6876)
!6889 = !{i64 2147564726, i64 2147564769, i64 2147564809}
!6890 = !DILocation(line: 17, column: 1, scope: !6876)
!6891 = !{i64 2147564943, i64 2147564986, i64 2147565026}
!6892 = !DILocation(line: 18, column: 1, scope: !6876)
!6893 = !{i64 2147565106, i64 2147565149, i64 2147565189}
!6894 = !DILocation(line: 19, column: 1, scope: !6876)
!6895 = !{i64 2147565290, i64 2147565333, i64 2147565373}
!6896 = !DILocation(line: 20, column: 1, scope: !6876)
!6897 = !{i64 2147565470, i64 2147565513, i64 2147565553}
!6898 = !DILocation(line: 21, column: 1, scope: !6876)
!6899 = !{i64 2147565713, i64 2147565756, i64 2147565796}
!6900 = !DILocation(line: 22, column: 1, scope: !6876)
!6901 = !{i64 2147565949, i64 2147565992, i64 2147566032}
!6902 = !DILocation(line: 23, column: 1, scope: !6876)
!6903 = !{i64 2147566152, i64 2147566195, i64 2147566235}
!6904 = !DILocation(line: 24, column: 1, scope: !6876)
!6905 = !{i64 2147566355, i64 2147566398, i64 2147566438}
!6906 = !DILocation(line: 25, column: 1, scope: !6876)
!6907 = !{i64 2147566554, i64 2147566597, i64 2147566637}
!6908 = !DILocation(line: 26, column: 1, scope: !6876)
!6909 = !{i64 2147566729, i64 2147566772, i64 2147566812}
!6910 = !DILocation(line: 27, column: 1, scope: !6876)
!6911 = !{i64 2147566937, i64 2147566980, i64 2147567020}
!6912 = !DILocation(line: 28, column: 1, scope: !6876)
!6913 = !{i64 2147567141, i64 2147567184, i64 2147567224}
!6914 = !DILocation(line: 29, column: 1, scope: !6876)
!6915 = !{i64 2147567334, i64 2147567377, i64 2147567417}
!6916 = !DILocation(line: 30, column: 1, scope: !6876)
!6917 = !{i64 2147567536, i64 2147567579, i64 2147567619}
!6918 = !DILocation(line: 31, column: 1, scope: !6876)
!6919 = !{i64 2147567735, i64 2147567778, i64 2147567818}
!6920 = !DILocation(line: 32, column: 1, scope: !6876)
!6921 = !{i64 2147567962, i64 2147568005, i64 2147568045}
!6922 = !DILocation(line: 33, column: 1, scope: !6876)
!6923 = !{i64 2147568177, i64 2147568220, i64 2147568260}
!6924 = !DILocation(line: 34, column: 1, scope: !6876)
!6925 = !{i64 2147568364, i64 2147568407, i64 2147568447}
!6926 = !DILocation(line: 35, column: 1, scope: !6876)
!6927 = !{i64 2147568536, i64 2147568579, i64 2147568619}
!6928 = !DILocation(line: 36, column: 1, scope: !6876)
!6929 = !{i64 2147568738, i64 2147568781, i64 2147568821}
!6930 = !DILocation(line: 37, column: 1, scope: !6876)
!6931 = !{i64 2147568937, i64 2147568980, i64 2147569020}
!6932 = !DILocation(line: 38, column: 1, scope: !6876)
!6933 = !{i64 2147569112, i64 2147569155, i64 2147569195}
!6934 = !DILocation(line: 39, column: 1, scope: !6876)
!6935 = !{i64 2147569365, i64 2147569408, i64 2147569448}
!6936 = !DILocation(line: 40, column: 1, scope: !6876)
!6937 = !{i64 2147569603, i64 2147569646, i64 2147569686}
!6938 = !DILocation(line: 41, column: 1, scope: !6876)
!6939 = !{i64 2147569838, i64 2147569881, i64 2147569921}
!6940 = !DILocation(line: 42, column: 1, scope: !6876)
!6941 = !{i64 2147570064, i64 2147570107, i64 2147570147}
!6942 = !DILocation(line: 43, column: 1, scope: !6876)
!6943 = !{i64 2147570299, i64 2147570342, i64 2147570382}
!6944 = !DILocation(line: 44, column: 1, scope: !6876)
!6945 = !{i64 2147570534, i64 2147570577, i64 2147570617}
!6946 = !DILocation(line: 45, column: 1, scope: !6876)
!6947 = !{i64 2147570775, i64 2147570818, i64 2147570858}
!6948 = !DILocation(line: 46, column: 1, scope: !6876)
!6949 = !{i64 2147571010, i64 2147571053, i64 2147571093}
!6950 = !DILocation(line: 47, column: 1, scope: !6876)
!6951 = !{i64 2147571239, i64 2147571282, i64 2147571322}
!6952 = !DILocation(line: 48, column: 1, scope: !6876)
!6953 = !{i64 2147571474, i64 2147571517, i64 2147571557}
!6954 = !DILocation(line: 49, column: 1, scope: !6876)
!6955 = !{i64 2147571724, i64 2147571767, i64 2147571807}
!6956 = !DILocation(line: 50, column: 1, scope: !6876)
!6957 = !{i64 2147571953, i64 2147571996, i64 2147572036}
!6958 = !DILocation(line: 51, column: 1, scope: !6876)
!6959 = !{i64 2147572161, i64 2147572204, i64 2147572244}
!6960 = !DILocation(line: 52, column: 1, scope: !6876)
!6961 = !{i64 2147572372, i64 2147572415, i64 2147572455}
!6962 = !DILocation(line: 53, column: 1, scope: !6876)
!6963 = !{i64 2147572607, i64 2147572650, i64 2147572690}
!6964 = !DILocation(line: 54, column: 1, scope: !6876)
!6965 = !{i64 2147576897, i64 2147576940, i64 2147576980}
!6966 = !DILocation(line: 55, column: 1, scope: !6876)
!6967 = !{i64 2147577114, i64 2147577157, i64 2147577197}
!6968 = !DILocation(line: 56, column: 1, scope: !6876)
!6969 = !{i64 2147577343, i64 2147577386, i64 2147577426}
!6970 = !DILocation(line: 57, column: 1, scope: !6876)
!6971 = !{i64 2147577581, i64 2147577624, i64 2147577664}
!6972 = !DILocation(line: 58, column: 1, scope: !6876)
!6973 = !{i64 2147577813, i64 2147577856, i64 2147577896}
!6974 = !DILocation(line: 59, column: 1, scope: !6876)
!6975 = !{i64 2147578039, i64 2147578082, i64 2147578122}
!6976 = !DILocation(line: 60, column: 1, scope: !6876)
!6977 = !{i64 2147578256, i64 2147578299, i64 2147578339}
!6978 = !DILocation(line: 61, column: 1, scope: !6876)
!6979 = !{i64 2147578488, i64 2147578531, i64 2147578571}
!6980 = !DILocation(line: 62, column: 1, scope: !6876)
!6981 = !{i64 2147578714, i64 2147578757, i64 2147578797}
!6982 = !DILocation(line: 63, column: 1, scope: !6876)
!6983 = !{i64 2147578928, i64 2147578971, i64 2147579011}
!6984 = !DILocation(line: 64, column: 1, scope: !6876)
!6985 = !{i64 2147579148, i64 2147579191, i64 2147579231}
!6986 = !DILocation(line: 65, column: 1, scope: !6876)
!6987 = !{i64 2147579380, i64 2147579423, i64 2147579463}
!6988 = !DILocation(line: 66, column: 1, scope: !6876)
!6989 = !{i64 2147579588, i64 2147579631, i64 2147579671}
!6990 = !DILocation(line: 67, column: 1, scope: !6876)
!6991 = !{i64 2147579793, i64 2147579836, i64 2147579876}
!6992 = !DILocation(line: 68, column: 1, scope: !6876)
!6993 = !{i64 2147580010, i64 2147580053, i64 2147580093}
!6994 = !DILocation(line: 69, column: 1, scope: !6876)
!6995 = !{i64 2147580224, i64 2147580267, i64 2147580307}
!6996 = !DILocation(line: 70, column: 1, scope: !6876)
!6997 = !{i64 2147580450, i64 2147580493, i64 2147580533}
!6998 = !DILocation(line: 71, column: 1, scope: !6876)
!6999 = !{i64 2147580670, i64 2147580713, i64 2147580753}
!7000 = !DILocation(line: 72, column: 1, scope: !6876)
!7001 = !{i64 2147580875, i64 2147580918, i64 2147580958}
!7002 = !DILocation(line: 73, column: 1, scope: !6876)
!7003 = !{i64 2147581107, i64 2147581150, i64 2147581190}
!7004 = !DILocation(line: 74, column: 1, scope: !6876)
!7005 = !{i64 2147581342, i64 2147581385, i64 2147581425}
!7006 = !DILocation(line: 75, column: 1, scope: !6876)
!7007 = !{i64 2147581592, i64 2147581635, i64 2147581675}
!7008 = !DILocation(line: 76, column: 1, scope: !6876)
!7009 = !{i64 2147581842, i64 2147581885, i64 2147581925}
!7010 = !DILocation(line: 77, column: 1, scope: !6876)
!7011 = !{i64 2147582080, i64 2147582123, i64 2147582163}
!7012 = !DILocation(line: 78, column: 1, scope: !6876)
!7013 = !{i64 2147582291, i64 2147582334, i64 2147582374}
!7014 = !DILocation(line: 79, column: 1, scope: !6876)
!7015 = !{i64 2147582508, i64 2147582551, i64 2147582591}
!7016 = !DILocation(line: 80, column: 1, scope: !6876)
!7017 = !{i64 2147582704, i64 2147582747, i64 2147582787}
!7018 = !DILocation(line: 81, column: 1, scope: !6876)
!7019 = !{i64 2147582906, i64 2147582949, i64 2147582989}
!7020 = !DILocation(line: 82, column: 1, scope: !6876)
!7021 = !{i64 2147583093, i64 2147583136, i64 2147583176}
!7022 = !DILocation(line: 83, column: 1, scope: !6876)
!7023 = !{i64 2147583283, i64 2147583326, i64 2147583366}
!7024 = !DILocation(line: 84, column: 1, scope: !6876)
!7025 = !{i64 2147583470, i64 2147583513, i64 2147583553}
!7026 = !DILocation(line: 85, column: 1, scope: !6876)
!7027 = !{i64 2147583666, i64 2147583709, i64 2147583749}
!7028 = !DILocation(line: 86, column: 1, scope: !6876)
!7029 = !{i64 2147583862, i64 2147583905, i64 2147583945}
!7030 = !DILocation(line: 87, column: 1, scope: !6876)
!7031 = !{i64 2147584073, i64 2147584116, i64 2147584156}
!7032 = !DILocation(line: 88, column: 1, scope: !6876)
!7033 = !{i64 2147584281, i64 2147584324, i64 2147584364}
!7034 = !DILocation(line: 89, column: 1, scope: !6876)
!7035 = !{i64 2147584465, i64 2147584508, i64 2147584548}
!7036 = !DILocation(line: 90, column: 1, scope: !6876)
!7037 = !{i64 2147584661, i64 2147584704, i64 2147584744}
!7038 = !DILocation(line: 91, column: 1, scope: !6876)
!7039 = !{i64 2147584854, i64 2147584897, i64 2147584937}
!7040 = !DILocation(line: 92, column: 1, scope: !6876)
!7041 = !{i64 2147585101, i64 2147585144, i64 2147585184}
!7042 = !DILocation(line: 93, column: 1, scope: !6876)
!7043 = !{i64 2147585324, i64 2147585367, i64 2147585407}
!7044 = !DILocation(line: 94, column: 1, scope: !6876)
!7045 = !{i64 2147585529, i64 2147585572, i64 2147585612}
!7046 = !DILocation(line: 95, column: 1, scope: !6876)
!7047 = !{i64 2147589783, i64 2147589826, i64 2147589866}
!7048 = !DILocation(line: 96, column: 1, scope: !6876)
!7049 = !{i64 2147589949, i64 2147589992, i64 2147590032}
!7050 = !DILocation(line: 97, column: 1, scope: !6876)
!7051 = !{i64 2147590133, i64 2147590176, i64 2147590216}
!7052 = !DILocation(line: 98, column: 1, scope: !6876)
!7053 = !{i64 2147590323, i64 2147590366, i64 2147590406}
!7054 = !DILocation(line: 99, column: 1, scope: !6876)
!7055 = !{i64 2147590507, i64 2147590550, i64 2147590590}
!7056 = !DILocation(line: 100, column: 1, scope: !6876)
!7057 = !{i64 2147590721, i64 2147590764, i64 2147590804}
!7058 = !DILocation(line: 101, column: 1, scope: !6876)
!7059 = !{i64 2147590932, i64 2147590975, i64 2147591015}
!7060 = !DILocation(line: 102, column: 1, scope: !6876)
!7061 = !{i64 2147591155, i64 2147591198, i64 2147591238}
!7062 = !DILocation(line: 103, column: 1, scope: !6876)
!7063 = !{i64 2147591339, i64 2147591382, i64 2147591422}
!7064 = !DILocation(line: 104, column: 1, scope: !6876)
!7065 = !{i64 2147591505, i64 2147591548, i64 2147591588}
!7066 = !DILocation(line: 105, column: 1, scope: !6876)
!7067 = !{i64 2147591686, i64 2147591729, i64 2147591769}
!7068 = !DILocation(line: 106, column: 1, scope: !6876)
!7069 = !{i64 2147591879, i64 2147591922, i64 2147591962}
!7070 = !DILocation(line: 107, column: 1, scope: !6876)
!7071 = !{i64 2147592105, i64 2147592148, i64 2147592188}
!7072 = !DILocation(line: 108, column: 1, scope: !6876)
!7073 = !{i64 2147592319, i64 2147592362, i64 2147592402}
!7074 = !DILocation(line: 109, column: 1, scope: !6876)
!7075 = !{i64 2147592545, i64 2147592588, i64 2147592628}
!7076 = !DILocation(line: 110, column: 1, scope: !6876)
!7077 = !{i64 2147592762, i64 2147592805, i64 2147592845}
!7078 = !DILocation(line: 111, column: 1, scope: !6876)
!7079 = !{i64 2147593039, i64 2147593082, i64 2147593122}
!7080 = !DILocation(line: 112, column: 1, scope: !6876)
!7081 = !{i64 2147593265, i64 2147593308, i64 2147593348}
!7082 = !DILocation(line: 113, column: 1, scope: !6876)
!7083 = !{i64 2147593473, i64 2147593516, i64 2147593556}
!7084 = !DILocation(line: 114, column: 1, scope: !6876)
!7085 = !{i64 2147593669, i64 2147593712, i64 2147593752}
!7086 = !DILocation(line: 115, column: 1, scope: !6876)
!7087 = !{i64 2147593934, i64 2147593977, i64 2147594017}
!7088 = !DILocation(line: 116, column: 1, scope: !6876)
!7089 = !{i64 2147594148, i64 2147594191, i64 2147594231}
!7090 = !DILocation(line: 117, column: 1, scope: !6876)
!7091 = !{i64 2147594311, i64 2147594354, i64 2147594394}
!7092 = !DILocation(line: 118, column: 1, scope: !6876)
!7093 = !{i64 2147594498, i64 2147594541, i64 2147594581}
!7094 = !DILocation(line: 119, column: 1, scope: !6876)
!7095 = !{i64 2147594706, i64 2147594749, i64 2147594789}
!7096 = !DILocation(line: 120, column: 1, scope: !6876)
!7097 = !{i64 2147594902, i64 2147594945, i64 2147594985}
!7098 = !DILocation(line: 121, column: 1, scope: !6876)
!7099 = !{i64 2147595095, i64 2147595138, i64 2147595178}
!7100 = !DILocation(line: 122, column: 1, scope: !6876)
!7101 = !{i64 2147595277, i64 2147595320, i64 2147595360}
!7102 = !DILocation(line: 123, column: 1, scope: !6876)
!7103 = !{i64 2147595491, i64 2147595534, i64 2147595574}
!7104 = !DILocation(line: 124, column: 1, scope: !6876)
!7105 = !{i64 2147595690, i64 2147595733, i64 2147595773}
!7106 = !DILocation(line: 125, column: 1, scope: !6876)
!7107 = !{i64 2147595925, i64 2147595968, i64 2147596008}
!7108 = !DILocation(line: 126, column: 1, scope: !6876)
!7109 = !{i64 2147596175, i64 2147596218, i64 2147596258}
!7110 = !DILocation(line: 127, column: 1, scope: !6876)
!7111 = !{i64 2147596377, i64 2147596420, i64 2147596460}
!7112 = !DILocation(line: 128, column: 1, scope: !6876)
!7113 = !{i64 2147596600, i64 2147596643, i64 2147596683}
!7114 = !DILocation(line: 129, column: 1, scope: !6876)
!7115 = !{i64 2147596814, i64 2147596857, i64 2147596897}
!7116 = !DILocation(line: 130, column: 1, scope: !6876)
!7117 = !{i64 2147597058, i64 2147597101, i64 2147597141}
!7118 = !DILocation(line: 131, column: 1, scope: !6876)
!7119 = !{i64 2147597287, i64 2147597330, i64 2147597370}
!7120 = !DILocation(line: 132, column: 1, scope: !6876)
!7121 = !{i64 2147597513, i64 2147597556, i64 2147597596}
!7122 = !DILocation(line: 133, column: 1, scope: !6876)
!7123 = !{i64 2147597772, i64 2147597815, i64 2147597855}
!7124 = !DILocation(line: 134, column: 1, scope: !6876)
!7125 = !{i64 2147597992, i64 2147598035, i64 2147598075}
!7126 = !DILocation(line: 135, column: 1, scope: !6876)
!7127 = !{i64 2147598224, i64 2147598267, i64 2147598307}
!7128 = !DILocation(line: 136, column: 1, scope: !6876)
!7129 = !{i64 2147598465, i64 2147598508, i64 2147598548}
!7130 = !DILocation(line: 137, column: 1, scope: !6876)
!7131 = !{i64 2147602767, i64 2147602810, i64 2147602850}
!7132 = !DILocation(line: 138, column: 1, scope: !6876)
!7133 = !{i64 2147602990, i64 2147603033, i64 2147603073}
!7134 = !DILocation(line: 139, column: 1, scope: !6876)
!7135 = !{i64 2147603207, i64 2147603250, i64 2147603290}
!7136 = !DILocation(line: 140, column: 1, scope: !6876)
!7137 = !{i64 2147603448, i64 2147603491, i64 2147603531}
!7138 = !DILocation(line: 141, column: 1, scope: !6876)
!7139 = !{i64 2147603635, i64 2147603678, i64 2147603718}
!7140 = !DILocation(line: 142, column: 1, scope: !6876)
!7141 = !{i64 2147603864, i64 2147603907, i64 2147603947}
!7142 = !DILocation(line: 143, column: 1, scope: !6876)
!7143 = !{i64 2147604078, i64 2147604121, i64 2147604161}
!7144 = !DILocation(line: 144, column: 1, scope: !6876)
!7145 = !{i64 2147604280, i64 2147604323, i64 2147604363}
!7146 = !DILocation(line: 145, column: 1, scope: !6876)
!7147 = !{i64 2147604476, i64 2147604519, i64 2147604559}
!7148 = !DILocation(line: 146, column: 1, scope: !6876)
!7149 = !{i64 2147604688, i64 2147604731, i64 2147604771}
!7150 = !DILocation(line: 147, column: 1, scope: !6876)
!7151 = !{i64 2147604909, i64 2147604952, i64 2147604992}
!7152 = !DILocation(line: 148, column: 1, scope: !6876)
!7153 = !{i64 2147605123, i64 2147605166, i64 2147605206}
!7154 = !DILocation(line: 149, column: 1, scope: !6876)
!7155 = !{i64 2147605313, i64 2147605356, i64 2147605396}
!7156 = !DILocation(line: 150, column: 1, scope: !6876)
!7157 = !{i64 2147605512, i64 2147605555, i64 2147605595}
!7158 = !DILocation(line: 151, column: 1, scope: !6876)
!7159 = !{i64 2147605717, i64 2147605760, i64 2147605800}
!7160 = !DILocation(line: 152, column: 1, scope: !6876)
!7161 = !{i64 2147605937, i64 2147605980, i64 2147606020}
!7162 = !DILocation(line: 153, column: 1, scope: !6876)
!7163 = !{i64 2147606138, i64 2147606181, i64 2147606221}
!7164 = !DILocation(line: 154, column: 1, scope: !6876)
!7165 = !{i64 2147606337, i64 2147606380, i64 2147606420}
!7166 = !DILocation(line: 155, column: 1, scope: !6876)
!7167 = !{i64 2147606506, i64 2147606549, i64 2147606589}
!7168 = !DILocation(line: 156, column: 1, scope: !6876)
!7169 = !{i64 2147606690, i64 2147606733, i64 2147606773}
!7170 = !DILocation(line: 157, column: 1, scope: !6876)
!7171 = !{i64 2147606874, i64 2147606917, i64 2147606957}
!7172 = !DILocation(line: 158, column: 1, scope: !6876)
!7173 = !{i64 2147607061, i64 2147607104, i64 2147607144}
!7174 = !DILocation(line: 159, column: 1, scope: !6876)
!7175 = !{i64 2147607245, i64 2147607288, i64 2147607328}
!7176 = !DILocation(line: 160, column: 1, scope: !6876)
!7177 = !{i64 2147607432, i64 2147607475, i64 2147607515}
!7178 = !DILocation(line: 161, column: 1, scope: !6876)
!7179 = !{i64 2147607644, i64 2147607687, i64 2147607727}
!7180 = !DILocation(line: 162, column: 1, scope: !6876)
!7181 = !{i64 2147607882, i64 2147607925, i64 2147607965}
!7182 = !DILocation(line: 163, column: 1, scope: !6876)
!7183 = !{i64 2147608112, i64 2147608155, i64 2147608195}
!7184 = !DILocation(line: 164, column: 1, scope: !6876)
!7185 = !{i64 2147608341, i64 2147608384, i64 2147608424}
!7186 = !DILocation(line: 165, column: 1, scope: !6876)
!7187 = !{i64 2147608528, i64 2147608571, i64 2147608611}
!7188 = !DILocation(line: 166, column: 1, scope: !6876)
!7189 = !{i64 2147608724, i64 2147608767, i64 2147608807}
!7190 = !DILocation(line: 167, column: 1, scope: !6876)
!7191 = !{i64 2147608932, i64 2147608975, i64 2147609015}
!7192 = !DILocation(line: 168, column: 1, scope: !6876)
!7193 = !{i64 2147609144, i64 2147609187, i64 2147609227}
!7194 = !DILocation(line: 169, column: 1, scope: !6876)
!7195 = !{i64 2147609343, i64 2147609386, i64 2147609426}
!7196 = !DILocation(line: 170, column: 1, scope: !6876)
!7197 = !{i64 2147609581, i64 2147609624, i64 2147609664}
!7198 = !DILocation(line: 171, column: 1, scope: !6876)
!7199 = !{i64 2147609777, i64 2147609820, i64 2147609860}
!7200 = !DILocation(line: 172, column: 1, scope: !6876)
!7201 = !{i64 2147609979, i64 2147610022, i64 2147610062}
!7202 = !DILocation(line: 173, column: 1, scope: !6876)
!7203 = !{i64 2147610172, i64 2147610215, i64 2147610255}
!7204 = !DILocation(line: 174, column: 1, scope: !6876)
!7205 = !{i64 2147610406, i64 2147610449, i64 2147610489}
!7206 = !DILocation(line: 175, column: 1, scope: !6876)
!7207 = !{i64 2147610569, i64 2147610612, i64 2147610652}
!7208 = !DILocation(line: 176, column: 1, scope: !6876)
!7209 = !{i64 2147610808, i64 2147610851, i64 2147610891}
!7210 = !DILocation(line: 177, column: 1, scope: !6876)
!7211 = !{i64 2147611047, i64 2147611090, i64 2147611130}
!7212 = !DILocation(line: 178, column: 1, scope: !6876)
!7213 = !{i64 2147611283, i64 2147611326, i64 2147611366}
!7214 = !DILocation(line: 179, column: 1, scope: !6876)
!7215 = !{i64 2147611513, i64 2147611556, i64 2147611596}
!7216 = !DILocation(line: 180, column: 1, scope: !6876)
!7217 = !{i64 2147611700, i64 2147611743, i64 2147611783}
!7218 = !DILocation(line: 181, column: 1, scope: !6876)
!7219 = !{i64 2147615960, i64 2147616003, i64 2147616043}
!7220 = !DILocation(line: 182, column: 1, scope: !6876)
!7221 = !{i64 2147616231, i64 2147616274, i64 2147616314}
!7222 = !DILocation(line: 183, column: 1, scope: !6876)
!7223 = !{i64 2147616406, i64 2147616449, i64 2147616489}
!7224 = !DILocation(line: 184, column: 1, scope: !6876)
!7225 = !{i64 2147616640, i64 2147616683, i64 2147616723}
!7226 = !DILocation(line: 185, column: 1, scope: !6876)
!7227 = !{i64 2147616848, i64 2147616891, i64 2147616931}
!7228 = !DILocation(line: 186, column: 1, scope: !6876)
!7229 = !{i64 2147617066, i64 2147617109, i64 2147617149}
!7230 = !DILocation(line: 187, column: 1, scope: !6876)
!7231 = !{i64 2147617256, i64 2147617299, i64 2147617339}
!7232 = !DILocation(line: 188, column: 1, scope: !6876)
!7233 = !{i64 2147617488, i64 2147617531, i64 2147617571}
!7234 = !DILocation(line: 189, column: 1, scope: !6876)
!7235 = !{i64 2147617708, i64 2147617751, i64 2147617791}
!7236 = !DILocation(line: 190, column: 1, scope: !6876)
!7237 = !{i64 2147617904, i64 2147617947, i64 2147617987}
!7238 = !DILocation(line: 191, column: 1, scope: !6876)
!7239 = !{i64 2147618110, i64 2147618153, i64 2147618193}
!7240 = !DILocation(line: 192, column: 1, scope: !6876)
!7241 = !{i64 2147618315, i64 2147618358, i64 2147618398}
!7242 = !DILocation(line: 193, column: 1, scope: !6876)
!7243 = !{i64 2147618541, i64 2147618584, i64 2147618624}
!7244 = !DILocation(line: 194, column: 1, scope: !6876)
!7245 = !{i64 2147618749, i64 2147618792, i64 2147618832}
!7246 = !DILocation(line: 195, column: 1, scope: !6876)
!7247 = !{i64 2147618945, i64 2147618988, i64 2147619028}
!7248 = !DILocation(line: 196, column: 1, scope: !6876)
!7249 = !{i64 2147619177, i64 2147619220, i64 2147619260}
!7250 = !DILocation(line: 197, column: 1, scope: !6876)
!7251 = !{i64 2147619355, i64 2147619398, i64 2147619438}
!7252 = !DILocation(line: 198, column: 1, scope: !6876)
!7253 = !{i64 2147619564, i64 2147619607, i64 2147619647}
!7254 = !DILocation(line: 199, column: 1, scope: !6876)
!7255 = !{i64 2147619772, i64 2147619815, i64 2147619855}
!7256 = !DILocation(line: 200, column: 1, scope: !6876)
!7257 = !{i64 2147619968, i64 2147620011, i64 2147620051}
!7258 = !DILocation(line: 201, column: 1, scope: !6876)
!7259 = !{i64 2147620200, i64 2147620243, i64 2147620283}
!7260 = !DILocation(line: 202, column: 1, scope: !6876)
!7261 = !{i64 2147620402, i64 2147620445, i64 2147620485}
!7262 = !DILocation(line: 203, column: 1, scope: !6876)
!7263 = !{i64 2147620652, i64 2147620695, i64 2147620735}
!7264 = !DILocation(line: 204, column: 1, scope: !6876)
!7265 = !{i64 2147620890, i64 2147620933, i64 2147620973}
!7266 = !DILocation(line: 205, column: 1, scope: !6876)
!7267 = !{i64 2147621098, i64 2147621141, i64 2147621181}
!7268 = !DILocation(line: 206, column: 1, scope: !6876)
!7269 = !{i64 2147621294, i64 2147621337, i64 2147621377}
!7270 = !DILocation(line: 207, column: 1, scope: !6876)
!7271 = !{i64 2147621472, i64 2147621515, i64 2147621555}
!7272 = !DILocation(line: 208, column: 1, scope: !6876)
!7273 = !{i64 2147621689, i64 2147621732, i64 2147621772}
!7274 = !DILocation(line: 209, column: 1, scope: !6876)
!7275 = !{i64 2147621894, i64 2147621937, i64 2147621977}
!7276 = !DILocation(line: 210, column: 1, scope: !6876)
!7277 = !{i64 2147622129, i64 2147622172, i64 2147622212}
!7278 = !DILocation(line: 211, column: 1, scope: !6876)
!7279 = !{i64 2147622352, i64 2147622395, i64 2147622435}
!7280 = !DILocation(line: 212, column: 1, scope: !6876)
!7281 = !{i64 2147622569, i64 2147622612, i64 2147622652}
!7282 = !DILocation(line: 213, column: 1, scope: !6876)
!7283 = !{i64 2147622774, i64 2147622817, i64 2147622857}
!7284 = !DILocation(line: 214, column: 1, scope: !6876)
!7285 = !{i64 2147622982, i64 2147623025, i64 2147623065}
!7286 = !DILocation(line: 215, column: 1, scope: !6876)
!7287 = !{i64 2147623178, i64 2147623221, i64 2147623261}
!7288 = !DILocation(line: 216, column: 1, scope: !6876)
!7289 = !{i64 2147623392, i64 2147623435, i64 2147623475}
!7290 = !DILocation(line: 217, column: 1, scope: !6876)
!7291 = !{i64 2147623600, i64 2147623643, i64 2147623683}
!7292 = !DILocation(line: 218, column: 1, scope: !6876)
!7293 = !{i64 2147623790, i64 2147623833, i64 2147623873}
!7294 = !DILocation(line: 219, column: 1, scope: !6876)
!7295 = !{i64 2147624004, i64 2147624047, i64 2147624087}
!7296 = !DILocation(line: 220, column: 1, scope: !6876)
!7297 = !{i64 2147624266, i64 2147624309, i64 2147624349}
!7298 = !DILocation(line: 221, column: 1, scope: !6876)
!7299 = !{i64 2147624477, i64 2147624520, i64 2147624560}
!7300 = !DILocation(line: 222, column: 1, scope: !6876)
!7301 = !{i64 2147624721, i64 2147624764, i64 2147624804}
!7302 = !DILocation(line: 223, column: 1, scope: !6876)
!7303 = !{i64 2147628993, i64 2147629036, i64 2147629076}
!7304 = !DILocation(line: 224, column: 1, scope: !6876)
!7305 = !{i64 2147629222, i64 2147629265, i64 2147629305}
!7306 = !DILocation(line: 225, column: 1, scope: !6876)
!7307 = !{i64 2147629487, i64 2147629530, i64 2147629570}
!7308 = !DILocation(line: 226, column: 1, scope: !6876)
!7309 = !{i64 2147629692, i64 2147629735, i64 2147629775}
!7310 = !DILocation(line: 227, column: 1, scope: !6876)
!7311 = !{i64 2147629888, i64 2147629931, i64 2147629971}
!7312 = !DILocation(line: 228, column: 1, scope: !6876)
!7313 = !{i64 2147630111, i64 2147630154, i64 2147630194}
!7314 = !DILocation(line: 229, column: 1, scope: !6876)
!7315 = !{i64 2147630274, i64 2147630317, i64 2147630357}
!7316 = !DILocation(line: 230, column: 1, scope: !6876)
!7317 = !{i64 2147630479, i64 2147630522, i64 2147630562}
!7318 = !DILocation(line: 231, column: 1, scope: !6876)
!7319 = !{i64 2147630699, i64 2147630742, i64 2147630782}
!7320 = !DILocation(line: 232, column: 1, scope: !6876)
!7321 = !{i64 2147630913, i64 2147630956, i64 2147630996}
!7322 = !DILocation(line: 233, column: 1, scope: !6876)
!7323 = !{i64 2147631157, i64 2147631200, i64 2147631240}
!7324 = !DILocation(line: 234, column: 1, scope: !6876)
!7325 = !{i64 2147631389, i64 2147631432, i64 2147631472}
!7326 = !DILocation(line: 235, column: 1, scope: !6876)
!7327 = !{i64 2147631603, i64 2147631646, i64 2147631686}
!7328 = !DILocation(line: 236, column: 1, scope: !6876)
!7329 = !{i64 2147631814, i64 2147631857, i64 2147631897}
!7330 = !DILocation(line: 237, column: 1, scope: !6876)
!7331 = !{i64 2147632007, i64 2147632050, i64 2147632090}
!7332 = !DILocation(line: 238, column: 1, scope: !6876)
!7333 = !{i64 2147632206, i64 2147632249, i64 2147632289}
!7334 = !DILocation(line: 239, column: 1, scope: !6876)
!7335 = !{i64 2147632378, i64 2147632421, i64 2147632461}
!7336 = !DILocation(line: 240, column: 1, scope: !6876)
!7337 = !{i64 2147632571, i64 2147632614, i64 2147632654}
!7338 = !DILocation(line: 241, column: 1, scope: !6876)
!7339 = !{i64 2147632743, i64 2147632786, i64 2147632826}
!7340 = !DILocation(line: 242, column: 1, scope: !6876)
!7341 = !{i64 2147632933, i64 2147632976, i64 2147633016}
!7342 = !DILocation(line: 243, column: 1, scope: !6876)
!7343 = !{i64 2147633126, i64 2147633169, i64 2147633209}
!7344 = !DILocation(line: 244, column: 1, scope: !6876)
!7345 = !{i64 2147633322, i64 2147633365, i64 2147633405}
!7346 = !DILocation(line: 245, column: 1, scope: !6876)
!7347 = !{i64 2147633485, i64 2147633528, i64 2147633568}
!7348 = !DILocation(line: 246, column: 1, scope: !6876)
!7349 = !{i64 2147633687, i64 2147633730, i64 2147633770}
!7350 = !DILocation(line: 247, column: 1, scope: !6876)
!7351 = !{i64 2147633892, i64 2147633935, i64 2147633975}
!7352 = !DILocation(line: 248, column: 1, scope: !6876)
!7353 = !{i64 2147634100, i64 2147634143, i64 2147634183}
!7354 = !DILocation(line: 249, column: 1, scope: !6876)
!7355 = !{i64 2147634293, i64 2147634336, i64 2147634376}
!7356 = !DILocation(line: 250, column: 1, scope: !6876)
!7357 = !{i64 2147634480, i64 2147634523, i64 2147634563}
!7358 = !DILocation(line: 251, column: 1, scope: !6876)
!7359 = !{i64 2147634707, i64 2147634750, i64 2147634790}
!7360 = !DILocation(line: 252, column: 1, scope: !6876)
!7361 = !{i64 2147634873, i64 2147634916, i64 2147634956}
!7362 = !DILocation(line: 253, column: 1, scope: !6876)
!7363 = !{i64 2147635111, i64 2147635154, i64 2147635194}
!7364 = !DILocation(line: 254, column: 1, scope: !6876)
!7365 = !{i64 2147635361, i64 2147635404, i64 2147635444}
!7366 = !DILocation(line: 255, column: 1, scope: !6876)
!7367 = !{i64 2147635569, i64 2147635612, i64 2147635652}
!7368 = !DILocation(line: 256, column: 1, scope: !6876)
!7369 = !{i64 2147635765, i64 2147635808, i64 2147635848}
!7370 = !DILocation(line: 257, column: 1, scope: !6876)
!7371 = !{i64 2147635982, i64 2147636025, i64 2147636065}
!7372 = !DILocation(line: 258, column: 1, scope: !6876)
!7373 = !{i64 2147636274, i64 2147636317, i64 2147636357}
!7374 = !DILocation(line: 259, column: 1, scope: !6876)
!7375 = !{i64 2147636506, i64 2147636549, i64 2147636589}
!7376 = !DILocation(line: 260, column: 1, scope: !6876)
!7377 = !{i64 2147636723, i64 2147636766, i64 2147636806}
!7378 = !DILocation(line: 261, column: 1, scope: !6876)
!7379 = !{i64 2147636930, i64 2147636973, i64 2147637013}
!7380 = !DILocation(line: 262, column: 1, scope: !6876)
!7381 = !{i64 2147637131, i64 2147637174, i64 2147637214}
!7382 = !DILocation(line: 263, column: 1, scope: !6876)
!7383 = !{i64 2147637363, i64 2147637406, i64 2147637446}
!7384 = !DILocation(line: 264, column: 1, scope: !6876)
!7385 = !{i64 2147637571, i64 2147637614, i64 2147637654}
!7386 = !DILocation(line: 265, column: 1, scope: !6876)
!7387 = !{i64 2147637761, i64 2147637804, i64 2147637844}
!7388 = !DILocation(line: 266, column: 1, scope: !6876)
!7389 = !{i64 2147642048, i64 2147642091, i64 2147642131}
!7390 = !DILocation(line: 267, column: 1, scope: !6876)
!7391 = !{i64 2147642237, i64 2147642280, i64 2147642320}
!7392 = !DILocation(line: 268, column: 1, scope: !6876)
!7393 = !{i64 2147642508, i64 2147642551, i64 2147642591}
!7394 = !DILocation(line: 269, column: 1, scope: !6876)
!7395 = !{i64 2147642728, i64 2147642771, i64 2147642811}
!7396 = !DILocation(line: 270, column: 1, scope: !6876)
!7397 = !{i64 2147642981, i64 2147643024, i64 2147643064}
!7398 = !DILocation(line: 271, column: 1, scope: !6876)
!7399 = !{i64 2147643189, i64 2147643232, i64 2147643272}
!7400 = !DILocation(line: 272, column: 1, scope: !6876)
!7401 = !{i64 2147643421, i64 2147643464, i64 2147643504}
!7402 = !DILocation(line: 273, column: 1, scope: !6876)
!7403 = !{i64 2147643632, i64 2147643675, i64 2147643715}
!7404 = !DILocation(line: 274, column: 1, scope: !6876)
!7405 = !{i64 2147643822, i64 2147643865, i64 2147643905}
!7406 = !DILocation(line: 275, column: 1, scope: !6876)
!7407 = !{i64 2147644036, i64 2147644079, i64 2147644119}
!7408 = !DILocation(line: 276, column: 1, scope: !6876)
!7409 = !{i64 2147644235, i64 2147644278, i64 2147644318}
!7410 = !DILocation(line: 277, column: 1, scope: !6876)
!7411 = !{i64 2147644422, i64 2147644465, i64 2147644505}
!7412 = !DILocation(line: 278, column: 1, scope: !6876)
!7413 = !{i64 2147644630, i64 2147644673, i64 2147644713}
!7414 = !DILocation(line: 279, column: 1, scope: !6876)
!7415 = !{i64 2147644859, i64 2147644902, i64 2147644942}
!7416 = !DILocation(line: 280, column: 1, scope: !6876)
!7417 = !{i64 2147645061, i64 2147645104, i64 2147645144}
!7418 = !DILocation(line: 281, column: 1, scope: !6876)
!7419 = !{i64 2147645260, i64 2147645303, i64 2147645343}
!7420 = !DILocation(line: 282, column: 1, scope: !6876)
!7421 = !{i64 2147645477, i64 2147645520, i64 2147645560}
!7422 = !DILocation(line: 284, column: 1, scope: !6876)
!7423 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !1034, file: !1034, line: 225, type: !1041, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !7424)
!7424 = !{!7425}
!7425 = !DILocalVariable(name: "arg", arg: 1, scope: !7423, file: !1034, line: 225, type: !1043)
!7426 = !DILocation(line: 0, scope: !7423)
!7427 = !DILocation(line: 230, column: 2, scope: !7423)
!7428 = !DILocation(line: 233, column: 2, scope: !7423)
!7429 = !DILocation(line: 236, column: 2, scope: !7423)
!7430 = !DILocation(line: 255, column: 2, scope: !7423)
!7431 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !1034, file: !1034, line: 50, type: !374, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !2145)
!7432 = !DILocation(line: 53, column: 2, scope: !7431)
!7433 = !DILocation(line: 54, column: 1, scope: !7431)
!7434 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !1034, file: !1034, line: 14, type: !374, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !2145)
!7435 = !DILocation(line: 23, column: 2, scope: !7434)
!7436 = !DILocation(line: 24, column: 2, scope: !7434)
!7437 = !DILocation(line: 25, column: 2, scope: !7434)
!7438 = !DILocation(line: 27, column: 2, scope: !7434)
!7439 = !DILocation(line: 31, column: 2, scope: !7434)
!7440 = !DILocation(line: 33, column: 2, scope: !7434)
!7441 = !DILocation(line: 36, column: 2, scope: !7434)
!7442 = !DILocation(line: 37, column: 2, scope: !7434)
!7443 = !DILocation(line: 40, column: 2, scope: !7434)
!7444 = !DILocation(line: 41, column: 2, scope: !7434)
!7445 = !DILocation(line: 42, column: 2, scope: !7434)
!7446 = !DILocation(line: 43, column: 2, scope: !7434)
!7447 = !DILocation(line: 44, column: 2, scope: !7434)
!7448 = !DILocation(line: 47, column: 2, scope: !7434)
!7449 = !DILocation(line: 48, column: 1, scope: !7434)
!7450 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !1034, file: !1034, line: 57, type: !374, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !2145)
!7451 = !DILocation(line: 61, column: 2, scope: !7450)
!7452 = !DILocation(line: 63, column: 2, scope: !7450)
!7453 = !DILocation(line: 80, column: 1, scope: !7450)
!7454 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !7455, file: !7455, line: 164, type: !7456, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !7458)
!7455 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7456 = !DISubroutineType(types: !7457)
!7457 = !{null, !980, !190, !173, !279, !279}
!7458 = !{!7459, !7460, !7461, !7462, !7463}
!7459 = !DILocalVariable(name: "base", arg: 1, scope: !7454, file: !7455, line: 164, type: !980)
!7460 = !DILocalVariable(name: "pdap", arg: 2, scope: !7454, file: !7455, line: 164, type: !190)
!7461 = !DILocalVariable(name: "perm", arg: 3, scope: !7454, file: !7455, line: 164, type: !173)
!7462 = !DILocalVariable(name: "sreq", arg: 4, scope: !7454, file: !7455, line: 164, type: !279)
!7463 = !DILocalVariable(name: "lock", arg: 5, scope: !7454, file: !7455, line: 164, type: !279)
!7464 = !DILocation(line: 0, scope: !7454)
!7465 = !DILocation(line: 166, column: 24, scope: !7454)
!7466 = !DILocation(line: 166, column: 5, scope: !7454)
!7467 = !DILocation(line: 166, column: 22, scope: !7454)
!7468 = !DILocation(line: 167, column: 1, scope: !7454)
!7469 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !626, file: !626, line: 454, type: !7470, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !7472)
!7470 = !DISubroutineType(types: !7471)
!7471 = !{null, !908, !190, !190}
!7472 = !{!7473, !7474, !7475}
!7473 = !DILocalVariable(name: "base", arg: 1, scope: !7469, file: !626, line: 454, type: !908)
!7474 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !7469, file: !626, line: 454, type: !190)
!7475 = !DILocalVariable(name: "control", arg: 3, scope: !7469, file: !626, line: 454, type: !190)
!7476 = !DILocation(line: 0, scope: !7469)
!7477 = !DILocation(line: 456, column: 5, scope: !7469)
!7478 = !DILocation(line: 456, column: 22, scope: !7469)
!7479 = !DILocation(line: 457, column: 1, scope: !7469)
!7480 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !626, file: !626, line: 379, type: !7481, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !7483)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{null, !908, !190}
!7483 = !{!7484, !7485}
!7484 = !DILocalVariable(name: "base", arg: 1, scope: !7480, file: !626, line: 379, type: !908)
!7485 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !7480, file: !626, line: 379, type: !190)
!7486 = !DILocation(line: 0, scope: !7480)
!7487 = !DILocation(line: 381, column: 26, scope: !7480)
!7488 = !DILocation(line: 382, column: 1, scope: !7480)
!7489 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !7490, file: !7490, line: 136, type: !7491, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !7493)
!7490 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7491 = !DISubroutineType(types: !7492)
!7492 = !{null, !1021}
!7493 = !{!7494}
!7494 = !DILocalVariable(name: "base", arg: 1, scope: !7489, file: !7490, line: 136, type: !1021)
!7495 = !DILocation(line: 0, scope: !7489)
!7496 = !DILocation(line: 138, column: 16, scope: !7489)
!7497 = !DILocation(line: 139, column: 1, scope: !7489)
!7498 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !7455, file: !7455, line: 136, type: !7499, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !7501)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{null, !980, !190, !190, !279}
!7501 = !{!7502, !7503, !7504, !7505}
!7502 = !DILocalVariable(name: "base", arg: 1, scope: !7498, file: !7455, line: 136, type: !980)
!7503 = !DILocalVariable(name: "mda", arg: 2, scope: !7498, file: !7455, line: 136, type: !190)
!7504 = !DILocalVariable(name: "domainId", arg: 3, scope: !7498, file: !7455, line: 136, type: !190)
!7505 = !DILocalVariable(name: "lock", arg: 4, scope: !7498, file: !7455, line: 136, type: !279)
!7506 = !DILocation(line: 0, scope: !7498)
!7507 = !DILocation(line: 140, column: 20, scope: !7498)
!7508 = !DILocation(line: 141, column: 1, scope: !7498)
!7509 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7510, file: !7510, line: 14, type: !5048, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3026, retainedNodes: !7511)
!7510 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7511 = !{!7512, !7513}
!7512 = !DILocalVariable(name: "fmt", arg: 1, scope: !7509, file: !7510, line: 14, type: !377)
!7513 = !DILocalVariable(name: "ap", scope: !7509, file: !7510, line: 16, type: !7514)
!7514 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4056, line: 99, baseType: !7515)
!7515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4056, line: 40, baseType: !7516)
!7516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7510, baseType: !7517)
!7517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7518)
!7518 = !{!7519}
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7517, file: !7510, line: 16, baseType: !102, size: 32)
!7520 = !DILocation(line: 0, scope: !7509)
!7521 = !DILocation(line: 16, column: 2, scope: !7509)
!7522 = !DILocation(line: 16, column: 10, scope: !7509)
!7523 = !DILocation(line: 18, column: 2, scope: !7509)
!7524 = !DILocation(line: 19, column: 2, scope: !7509)
!7525 = !DILocation(line: 20, column: 2, scope: !7509)
!7526 = !DILocation(line: 21, column: 1, scope: !7509)
!7527 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7510, file: !7510, line: 23, type: !7528, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3026, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{null, !377, !7514}
!7530 = !{!7531, !7532}
!7531 = !DILocalVariable(name: "fmt", arg: 1, scope: !7527, file: !7510, line: 23, type: !377)
!7532 = !DILocalVariable(name: "ap", arg: 2, scope: !7527, file: !7510, line: 23, type: !7514)
!7533 = !DILocation(line: 0, scope: !7527)
!7534 = !DILocation(line: 25, column: 2, scope: !7527)
!7535 = !DILocation(line: 26, column: 1, scope: !7527)
!7536 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7510, file: !7510, line: 52, type: !7537, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3026, retainedNodes: !7539)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{null, !103, !13, !239}
!7539 = !{!7540, !7541, !7542, !7543}
!7540 = !DILocalVariable(name: "level", arg: 1, scope: !7536, file: !7510, line: 52, type: !103)
!7541 = !DILocalVariable(name: "data", arg: 2, scope: !7536, file: !7510, line: 52, type: !13)
!7542 = !DILocalVariable(name: "size", arg: 3, scope: !7536, file: !7510, line: 52, type: !239)
!7543 = !DILocalVariable(name: "data_buffer", scope: !7536, file: !7510, line: 54, type: !377)
!7544 = !DILocation(line: 0, scope: !7536)
!7545 = !DILocation(line: 55, column: 14, scope: !7536)
!7546 = !DILocation(line: 55, column: 2, scope: !7536)
!7547 = !DILocation(line: 56, column: 3, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7536, file: !7510, line: 55, column: 20)
!7549 = !DILocation(line: 57, column: 3, scope: !7548)
!7550 = !DILocation(line: 59, column: 7, scope: !7548)
!7551 = distinct !{!7551, !7546, !7552}
!7552 = !DILocation(line: 65, column: 2, scope: !7536)
!7553 = !DILocation(line: 66, column: 1, scope: !7536)
!7554 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7555, file: !7555, line: 175, type: !7556, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3026, retainedNodes: !7558)
!7555 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7556 = !DISubroutineType(types: !7557)
!7557 = !{!222, !103}
!7558 = !{!7559}
!7559 = !DILocalVariable(name: "level", arg: 1, scope: !7554, file: !7555, line: 175, type: !103)
!7560 = !DILocation(line: 0, scope: !7554)
!7561 = !DILocation(line: 177, column: 2, scope: !7554)
!7562 = !DILocation(line: 189, column: 1, scope: !7554)
!7563 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7510, file: !7510, line: 28, type: !7564, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3026, retainedNodes: !7566)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{null, !377, !239}
!7566 = !{!7567, !7568, !7569, !7571, !7573}
!7567 = !DILocalVariable(name: "data", arg: 1, scope: !7563, file: !7510, line: 28, type: !377)
!7568 = !DILocalVariable(name: "length", arg: 2, scope: !7563, file: !7510, line: 28, type: !239)
!7569 = !DILocalVariable(name: "i", scope: !7570, file: !7510, line: 30, type: !239)
!7570 = distinct !DILexicalBlock(scope: !7563, file: !7510, line: 30, column: 2)
!7571 = !DILocalVariable(name: "i", scope: !7572, file: !7510, line: 40, type: !239)
!7572 = distinct !DILexicalBlock(scope: !7563, file: !7510, line: 40, column: 2)
!7573 = !DILocalVariable(name: "c", scope: !7574, file: !7510, line: 42, type: !174)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !7510, line: 41, column: 19)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !7510, line: 41, column: 7)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !7510, line: 40, column: 54)
!7577 = distinct !DILexicalBlock(scope: !7572, file: !7510, line: 40, column: 2)
!7578 = !DILocation(line: 0, scope: !7563)
!7579 = !DILocation(line: 0, scope: !7570)
!7580 = !DILocation(line: 30, column: 2, scope: !7570)
!7581 = !DILocation(line: 38, column: 2, scope: !7563)
!7582 = !DILocation(line: 0, scope: !7572)
!7583 = !DILocation(line: 40, column: 2, scope: !7572)
!7584 = !DILocation(line: 31, column: 9, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !7510, line: 31, column: 7)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !7510, line: 30, column: 54)
!7587 = distinct !DILexicalBlock(scope: !7570, file: !7510, line: 30, column: 2)
!7588 = !DILocation(line: 31, column: 7, scope: !7586)
!7589 = !DILocation(line: 32, column: 35, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7585, file: !7510, line: 31, column: 19)
!7591 = !DILocation(line: 32, column: 20, scope: !7590)
!7592 = !DILocation(line: 32, column: 4, scope: !7590)
!7593 = !DILocation(line: 33, column: 3, scope: !7590)
!7594 = !DILocation(line: 34, column: 4, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7585, file: !7510, line: 33, column: 10)
!7596 = !DILocation(line: 30, column: 50, scope: !7587)
!7597 = !DILocation(line: 30, column: 24, scope: !7587)
!7598 = distinct !{!7598, !7580, !7599}
!7599 = !DILocation(line: 36, column: 2, scope: !7570)
!7600 = !DILocation(line: 49, column: 2, scope: !7563)
!7601 = !DILocation(line: 50, column: 1, scope: !7563)
!7602 = !DILocation(line: 41, column: 9, scope: !7575)
!7603 = !DILocation(line: 41, column: 7, scope: !7576)
!7604 = !DILocation(line: 42, column: 22, scope: !7574)
!7605 = !DILocation(line: 0, scope: !7574)
!7606 = !DILocation(line: 44, column: 25, scope: !7574)
!7607 = !DILocation(line: 44, column: 17, scope: !7574)
!7608 = !DILocation(line: 44, column: 33, scope: !7574)
!7609 = !DILocation(line: 44, column: 4, scope: !7574)
!7610 = !DILocation(line: 45, column: 3, scope: !7574)
!7611 = !DILocation(line: 46, column: 4, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7575, file: !7510, line: 45, column: 10)
!7613 = !DILocation(line: 40, column: 50, scope: !7577)
!7614 = !DILocation(line: 40, column: 24, scope: !7577)
!7615 = distinct !{!7615, !7583, !7616}
!7616 = !DILocation(line: 48, column: 2, scope: !7572)
!7617 = distinct !DISubprogram(name: "isprint", scope: !6620, file: !6620, line: 37, type: !618, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3026, retainedNodes: !7618)
!7618 = !{!7619}
!7619 = !DILocalVariable(name: "c", arg: 1, scope: !7617, file: !6620, line: 37, type: !103)
!7620 = !DILocation(line: 0, scope: !7617)
!7621 = !DILocation(line: 39, column: 38, scope: !7617)
!7622 = !DILocation(line: 39, column: 2, scope: !7617)
!7623 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7624, file: !7624, line: 57, type: !7625, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7671)
!7624 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7625 = !DISubroutineType(types: !7626)
!7626 = !{null, !32, !7627}
!7627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7628, size: 32)
!7628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7629)
!7629 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3150, line: 141, baseType: !7630)
!7630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3150, line: 97, size: 256, elements: !7631)
!7631 = !{!7632}
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7630, file: !3150, line: 107, baseType: !7633, size: 256)
!7633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3150, line: 98, size: 256, elements: !7634)
!7634 = !{!7635, !7640, !7645, !7650, !7655, !7660, !7665, !7670}
!7635 = !DIDerivedType(tag: DW_TAG_member, scope: !7633, file: !3150, line: 99, baseType: !7636, size: 32)
!7636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7633, file: !3150, line: 99, size: 32, elements: !7637)
!7637 = !{!7638, !7639}
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7636, file: !3150, line: 99, baseType: !190, size: 32)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7636, file: !3150, line: 99, baseType: !190, size: 32)
!7640 = !DIDerivedType(tag: DW_TAG_member, scope: !7633, file: !3150, line: 100, baseType: !7641, size: 32, offset: 32)
!7641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7633, file: !3150, line: 100, size: 32, elements: !7642)
!7642 = !{!7643, !7644}
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7641, file: !3150, line: 100, baseType: !190, size: 32)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7641, file: !3150, line: 100, baseType: !190, size: 32)
!7645 = !DIDerivedType(tag: DW_TAG_member, scope: !7633, file: !3150, line: 101, baseType: !7646, size: 32, offset: 64)
!7646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7633, file: !3150, line: 101, size: 32, elements: !7647)
!7647 = !{!7648, !7649}
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7646, file: !3150, line: 101, baseType: !190, size: 32)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7646, file: !3150, line: 101, baseType: !190, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_member, scope: !7633, file: !3150, line: 102, baseType: !7651, size: 32, offset: 96)
!7651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7633, file: !3150, line: 102, size: 32, elements: !7652)
!7652 = !{!7653, !7654}
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7651, file: !3150, line: 102, baseType: !190, size: 32)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7651, file: !3150, line: 102, baseType: !190, size: 32)
!7655 = !DIDerivedType(tag: DW_TAG_member, scope: !7633, file: !3150, line: 103, baseType: !7656, size: 32, offset: 128)
!7656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7633, file: !3150, line: 103, size: 32, elements: !7657)
!7657 = !{!7658, !7659}
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7656, file: !3150, line: 103, baseType: !190, size: 32)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7656, file: !3150, line: 103, baseType: !190, size: 32)
!7660 = !DIDerivedType(tag: DW_TAG_member, scope: !7633, file: !3150, line: 104, baseType: !7661, size: 32, offset: 160)
!7661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7633, file: !3150, line: 104, size: 32, elements: !7662)
!7662 = !{!7663, !7664}
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7661, file: !3150, line: 104, baseType: !190, size: 32)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7661, file: !3150, line: 104, baseType: !190, size: 32)
!7665 = !DIDerivedType(tag: DW_TAG_member, scope: !7633, file: !3150, line: 105, baseType: !7666, size: 32, offset: 192)
!7666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7633, file: !3150, line: 105, size: 32, elements: !7667)
!7667 = !{!7668, !7669}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7666, file: !3150, line: 105, baseType: !190, size: 32)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7666, file: !3150, line: 105, baseType: !190, size: 32)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7633, file: !3150, line: 106, baseType: !190, size: 32, offset: 224)
!7671 = !{!7672, !7673}
!7672 = !DILocalVariable(name: "reason", arg: 1, scope: !7623, file: !7624, line: 57, type: !32)
!7673 = !DILocalVariable(name: "esf", arg: 2, scope: !7623, file: !7624, line: 57, type: !7627)
!7674 = !DILocation(line: 0, scope: !7623)
!7675 = !DILocation(line: 60, column: 10, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7623, file: !7624, line: 60, column: 6)
!7677 = !DILocation(line: 60, column: 6, scope: !7623)
!7678 = !DILocation(line: 61, column: 3, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7676, file: !7624, line: 60, column: 19)
!7680 = !DILocation(line: 62, column: 2, scope: !7679)
!7681 = !DILocation(line: 63, column: 2, scope: !7623)
!7682 = !DILocation(line: 64, column: 1, scope: !7623)
!7683 = distinct !DISubprogram(name: "esf_dump", scope: !7624, file: !7624, line: 20, type: !7684, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7686)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{null, !7627}
!7686 = !{!7687}
!7687 = !DILocalVariable(name: "esf", arg: 1, scope: !7683, file: !7624, line: 20, type: !7627)
!7688 = !DILocation(line: 0, scope: !7683)
!7689 = !DILocation(line: 22, column: 2, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7624, line: 22, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !7624, line: 22, column: 2)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !7624, line: 22, column: 2)
!7693 = distinct !DILexicalBlock(scope: !7683, file: !7624, line: 22, column: 2)
!7694 = !DILocation(line: 24, column: 2, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7696, file: !7624, line: 24, column: 2)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !7624, line: 24, column: 2)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !7624, line: 24, column: 2)
!7698 = distinct !DILexicalBlock(scope: !7683, file: !7624, line: 24, column: 2)
!7699 = !DILocation(line: 26, column: 2, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !7624, line: 26, column: 2)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !7624, line: 26, column: 2)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !7624, line: 26, column: 2)
!7703 = distinct !DILexicalBlock(scope: !7683, file: !7624, line: 26, column: 2)
!7704 = !DILocation(line: 53, column: 2, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !7624, line: 53, column: 2)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7624, line: 53, column: 2)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !7624, line: 53, column: 2)
!7708 = distinct !DILexicalBlock(scope: !7683, file: !7624, line: 53, column: 2)
!7709 = !DILocation(line: 55, column: 1, scope: !7683)
!7710 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7624, file: !7624, line: 82, type: !7711, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7726)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{null, !7627, !7713}
!7713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7714, size: 32)
!7714 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !207, line: 37, baseType: !7715)
!7715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !7716)
!7716 = !{!7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725}
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7715, file: !207, line: 26, baseType: !190, size: 32)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7715, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7715, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7715, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7715, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7715, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7715, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7715, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7715, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!7726 = !{!7727, !7728, !7729}
!7727 = !DILocalVariable(name: "esf", arg: 1, scope: !7710, file: !7624, line: 82, type: !7627)
!7728 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7710, file: !7624, line: 82, type: !7713)
!7729 = !DILocalVariable(name: "reason", scope: !7710, file: !7624, line: 88, type: !32)
!7730 = !DILocation(line: 0, scope: !7710)
!7731 = !DILocation(line: 88, column: 35, scope: !7710)
!7732 = !DILocation(line: 108, column: 2, scope: !7710)
!7733 = !DILocation(line: 131, column: 1, scope: !7710)
!7734 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7624, file: !7624, line: 133, type: !7735, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7737)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{null, !102}
!7737 = !{!7738, !7739, !7740}
!7738 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7734, file: !7624, line: 133, type: !102)
!7739 = !DILocalVariable(name: "ssf_contents", scope: !7734, file: !7624, line: 135, type: !1601)
!7740 = !DILocalVariable(name: "oops_esf", scope: !7734, file: !7624, line: 136, type: !7629)
!7741 = !DILocation(line: 0, scope: !7734)
!7742 = !DILocation(line: 136, column: 2, scope: !7734)
!7743 = !DILocation(line: 136, column: 15, scope: !7734)
!7744 = !DILocation(line: 139, column: 22, scope: !7734)
!7745 = !DILocation(line: 139, column: 17, scope: !7734)
!7746 = !DILocation(line: 139, column: 20, scope: !7734)
!7747 = !DILocation(line: 141, column: 2, scope: !7734)
!7748 = !DILocation(line: 142, column: 2, scope: !7734)
!7749 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7750, file: !7750, line: 40, type: !7751, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7753)
!7750 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7751 = !DISubroutineType(types: !7752)
!7752 = !{null, !32}
!7753 = !{!7754}
!7754 = !DILocalVariable(name: "irq", arg: 1, scope: !7749, file: !7750, line: 40, type: !32)
!7755 = !DILocation(line: 0, scope: !7749)
!7756 = !DILocation(line: 42, column: 2, scope: !7749)
!7757 = !DILocation(line: 43, column: 1, scope: !7749)
!7758 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1794, file: !1794, line: 1684, type: !7759, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7761)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{null, !3044}
!7761 = !{!7762}
!7762 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7758, file: !1794, line: 1684, type: !3044)
!7763 = !DILocation(line: 0, scope: !7758)
!7764 = !DILocation(line: 1686, column: 23, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7758, file: !1794, line: 1686, column: 7)
!7766 = !DILocation(line: 1686, column: 7, scope: !7758)
!7767 = !DILocation(line: 1688, column: 5, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7765, file: !1794, line: 1687, column: 3)
!7769 = !{i64 2154452210}
!7770 = !DILocation(line: 1689, column: 81, scope: !7768)
!7771 = !DILocation(line: 1689, column: 60, scope: !7768)
!7772 = !DILocation(line: 1689, column: 34, scope: !7768)
!7773 = !DILocation(line: 1689, column: 5, scope: !7768)
!7774 = !DILocation(line: 1689, column: 43, scope: !7768)
!7775 = !DILocation(line: 1690, column: 5, scope: !7768)
!7776 = !{i64 2154452324}
!7777 = !DILocation(line: 1691, column: 3, scope: !7768)
!7778 = !DILocation(line: 1692, column: 1, scope: !7758)
!7779 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7750, file: !7750, line: 45, type: !7751, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7780)
!7780 = !{!7781}
!7781 = !DILocalVariable(name: "irq", arg: 1, scope: !7779, file: !7750, line: 45, type: !32)
!7782 = !DILocation(line: 0, scope: !7779)
!7783 = !DILocation(line: 47, column: 2, scope: !7779)
!7784 = !DILocation(line: 48, column: 1, scope: !7779)
!7785 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1794, file: !1794, line: 1722, type: !7759, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7786)
!7786 = !{!7787}
!7787 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7785, file: !1794, line: 1722, type: !3044)
!7788 = !DILocation(line: 0, scope: !7785)
!7789 = !DILocation(line: 1724, column: 23, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7785, file: !1794, line: 1724, column: 7)
!7791 = !DILocation(line: 1724, column: 7, scope: !7785)
!7792 = !DILocation(line: 1726, column: 81, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7790, file: !1794, line: 1725, column: 3)
!7794 = !DILocation(line: 1726, column: 60, scope: !7793)
!7795 = !DILocation(line: 1726, column: 34, scope: !7793)
!7796 = !DILocation(line: 1726, column: 5, scope: !7793)
!7797 = !DILocation(line: 1726, column: 43, scope: !7793)
!7798 = !DILocation(line: 271, column: 3, scope: !7799, inlinedAt: !7801)
!7799 = distinct !DISubprogram(name: "__DSB", scope: !7800, file: !7800, line: 269, type: !374, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !2145)
!7800 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7801 = distinct !DILocation(line: 1727, column: 5, scope: !7793)
!7802 = !{i64 6906597}
!7803 = !DILocation(line: 260, column: 3, scope: !7804, inlinedAt: !7805)
!7804 = distinct !DISubprogram(name: "__ISB", scope: !7800, file: !7800, line: 258, type: !374, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !2145)
!7805 = distinct !DILocation(line: 1728, column: 5, scope: !7793)
!7806 = !{i64 6906314}
!7807 = !DILocation(line: 1729, column: 3, scope: !7793)
!7808 = !DILocation(line: 1730, column: 1, scope: !7785)
!7809 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7750, file: !7750, line: 50, type: !7810, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7812)
!7810 = !DISubroutineType(types: !7811)
!7811 = !{!103, !32}
!7812 = !{!7813}
!7813 = !DILocalVariable(name: "irq", arg: 1, scope: !7809, file: !7750, line: 50, type: !32)
!7814 = !DILocation(line: 0, scope: !7809)
!7815 = !DILocation(line: 52, column: 20, scope: !7809)
!7816 = !DILocation(line: 52, column: 9, scope: !7809)
!7817 = !DILocation(line: 52, column: 41, scope: !7809)
!7818 = !DILocation(line: 52, column: 39, scope: !7809)
!7819 = !DILocation(line: 52, column: 2, scope: !7809)
!7820 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7750, file: !7750, line: 64, type: !7821, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7823)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{null, !32, !32, !190}
!7823 = !{!7824, !7825, !7826}
!7824 = !DILocalVariable(name: "irq", arg: 1, scope: !7820, file: !7750, line: 64, type: !32)
!7825 = !DILocalVariable(name: "prio", arg: 2, scope: !7820, file: !7750, line: 64, type: !32)
!7826 = !DILocalVariable(name: "flags", arg: 3, scope: !7820, file: !7750, line: 64, type: !190)
!7827 = !DILocation(line: 0, scope: !7820)
!7828 = !DILocation(line: 83, column: 8, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !7750, line: 82, column: 9)
!7830 = distinct !DILexicalBlock(scope: !7820, file: !7750, line: 76, column: 6)
!7831 = !DILocation(line: 91, column: 2, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7750, line: 91, column: 2)
!7833 = distinct !DILexicalBlock(scope: !7820, file: !7750, line: 91, column: 2)
!7834 = !DILocation(line: 91, column: 2, scope: !7833)
!7835 = !DILocation(line: 91, column: 2, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !7750, line: 91, column: 2)
!7837 = !DILocation(line: 95, column: 2, scope: !7820)
!7838 = !DILocation(line: 96, column: 1, scope: !7820)
!7839 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1794, file: !1794, line: 1814, type: !7840, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7842)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{null, !3044, !190}
!7842 = !{!7843, !7844}
!7843 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7839, file: !1794, line: 1814, type: !3044)
!7844 = !DILocalVariable(name: "priority", arg: 2, scope: !7839, file: !1794, line: 1814, type: !190)
!7845 = !DILocation(line: 0, scope: !7839)
!7846 = !DILocation(line: 0, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7839, file: !1794, line: 1816, column: 7)
!7848 = !DILocation(line: 1816, column: 7, scope: !7839)
!7849 = !DILocation(line: 1824, column: 1, scope: !7839)
!7850 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7750, file: !7750, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !7851)
!7851 = !{!7852}
!7852 = !DILocalVariable(name: "unused", arg: 1, scope: !7850, file: !7750, line: 155, type: !13)
!7853 = !DILocation(line: 0, scope: !7850)
!7854 = !DILocation(line: 159, column: 2, scope: !7850)
!7855 = !DILocation(line: 160, column: 1, scope: !7850)
!7856 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7857, file: !7857, line: 87, type: !374, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !2145)
!7857 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7858 = !DILocation(line: 89, column: 2, scope: !7856)
!7859 = !DILocation(line: 90, column: 2, scope: !7856)
!7860 = !DILocation(line: 91, column: 1, scope: !7856)
!7861 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7857, file: !7857, line: 23, type: !374, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!7862 = !DISubprogram(name: "z_arm_int_exit", scope: !7863, file: !7863, line: 153, type: !374, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!7863 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7864 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7865, file: !7865, line: 256, type: !374, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !2145)
!7865 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7866 = !DILocation(line: 258, column: 2, scope: !7864)
!7867 = !DILocation(line: 260, column: 2, scope: !7864)
!7868 = !DILocation(line: 262, column: 2, scope: !7864)
!7869 = !DILocation(line: 263, column: 2, scope: !7864)
!7870 = !DILocation(line: 267, column: 2, scope: !7864)
!7871 = !DILocation(line: 268, column: 2, scope: !7864)
!7872 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7865, file: !7865, line: 53, type: !374, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !2145)
!7873 = !DILocation(line: 55, column: 12, scope: !7872)
!7874 = !DILocation(line: 271, column: 3, scope: !7875, inlinedAt: !7876)
!7875 = distinct !DISubprogram(name: "__DSB", scope: !7800, file: !7800, line: 269, type: !374, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !2145)
!7876 = distinct !DILocation(line: 56, column: 2, scope: !7872)
!7877 = !{i64 6942371}
!7878 = !DILocation(line: 260, column: 3, scope: !7879, inlinedAt: !7880)
!7879 = distinct !DISubprogram(name: "__ISB", scope: !7800, file: !7800, line: 258, type: !374, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !2145)
!7880 = distinct !DILocation(line: 57, column: 2, scope: !7872)
!7881 = !{i64 6942088}
!7882 = !DILocation(line: 58, column: 1, scope: !7872)
!7883 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7865, file: !7865, line: 96, type: !374, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !2145)
!7884 = !DILocation(line: 103, column: 13, scope: !7883)
!7885 = !DILocation(line: 975, column: 3, scope: !7886, inlinedAt: !7891)
!7886 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7800, file: !7800, line: 971, type: !7887, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !7889)
!7887 = !DISubroutineType(types: !7888)
!7888 = !{!190}
!7889 = !{!7890}
!7890 = !DILocalVariable(name: "result", scope: !7886, file: !7800, line: 973, type: !190)
!7891 = distinct !DILocation(line: 189, column: 16, scope: !7883)
!7892 = !{i64 6963201}
!7893 = !DILocation(line: 0, scope: !7886, inlinedAt: !7891)
!7894 = !DILocation(line: 189, column: 32, scope: !7883)
!7895 = !DILocalVariable(name: "control", arg: 1, scope: !7896, file: !7800, line: 1001, type: !190)
!7896 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7800, file: !7800, line: 1001, type: !7897, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !7899)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{null, !190}
!7899 = !{!7895}
!7900 = !DILocation(line: 0, scope: !7896, inlinedAt: !7901)
!7901 = distinct !DILocation(line: 189, column: 2, scope: !7883)
!7902 = !DILocation(line: 1003, column: 3, scope: !7896, inlinedAt: !7901)
!7903 = !{i64 6963921}
!7904 = !DILocation(line: 260, column: 3, scope: !7879, inlinedAt: !7905)
!7905 = distinct !DILocation(line: 1004, column: 3, scope: !7896, inlinedAt: !7901)
!7906 = !DILocation(line: 191, column: 1, scope: !7883)
!7907 = distinct !DISubprogram(name: "arch_swap", scope: !7908, file: !7908, line: 33, type: !7810, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !7909)
!7908 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7909 = !{!7910}
!7910 = !DILocalVariable(name: "key", arg: 1, scope: !7907, file: !7908, line: 33, type: !32)
!7911 = !DILocation(line: 0, scope: !7907)
!7912 = !DILocation(line: 36, column: 2, scope: !7907)
!7913 = !DILocation(line: 36, column: 17, scope: !7907)
!7914 = !DILocation(line: 36, column: 25, scope: !7907)
!7915 = !DILocation(line: 37, column: 37, scope: !7907)
!7916 = !DILocation(line: 37, column: 17, scope: !7907)
!7917 = !DILocation(line: 37, column: 35, scope: !7907)
!7918 = !DILocation(line: 41, column: 12, scope: !7907)
!7919 = !DILocalVariable(name: "key", arg: 1, scope: !7920, file: !7921, line: 84, type: !32)
!7920 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !7922)
!7921 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7922 = !{!7919}
!7923 = !DILocation(line: 0, scope: !7920, inlinedAt: !7924)
!7924 = distinct !DILocation(line: 44, column: 2, scope: !7907)
!7925 = !DILocation(line: 95, column: 2, scope: !7920, inlinedAt: !7924)
!7926 = !{i64 2844276}
!7927 = !DILocation(line: 53, column: 9, scope: !7907)
!7928 = !DILocation(line: 53, column: 24, scope: !7907)
!7929 = !DILocation(line: 53, column: 2, scope: !7907)
!7930 = distinct !DISubprogram(name: "arch_new_thread", scope: !7931, file: !7931, line: 56, type: !7932, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !8036)
!7931 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7932 = !DISubroutineType(types: !7933)
!7933 = !{null, !7934, !8031, !307, !361, !102, !102, !102}
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7935, size: 32)
!7935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !7936)
!7936 = !{!7937, !7995, !8007, !8008, !8009, !8010, !8011, !8026}
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7935, file: !131, line: 247, baseType: !7938, size: 384)
!7938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !7939)
!7939 = !{!7940, !7964, !7971, !7972, !7973, !7982, !7983, !7984}
!7940 = !DIDerivedType(tag: DW_TAG_member, scope: !7938, file: !131, line: 60, baseType: !7941, size: 64)
!7941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7938, file: !131, line: 60, size: 64, elements: !7942)
!7942 = !{!7943, !7958}
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7941, file: !131, line: 61, baseType: !7944, size: 64)
!7944 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !7945)
!7945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !7946)
!7946 = !{!7947, !7953}
!7947 = !DIDerivedType(tag: DW_TAG_member, scope: !7945, file: !141, line: 38, baseType: !7948, size: 32)
!7948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7945, file: !141, line: 38, size: 32, elements: !7949)
!7949 = !{!7950, !7952}
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7948, file: !141, line: 39, baseType: !7951, size: 32)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 32)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7948, file: !141, line: 40, baseType: !7951, size: 32)
!7953 = !DIDerivedType(tag: DW_TAG_member, scope: !7945, file: !141, line: 42, baseType: !7954, size: 32, offset: 32)
!7954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7945, file: !141, line: 42, size: 32, elements: !7955)
!7955 = !{!7956, !7957}
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7954, file: !141, line: 43, baseType: !7951, size: 32)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7954, file: !141, line: 44, baseType: !7951, size: 32)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7941, file: !131, line: 62, baseType: !7959, size: 64)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !7960)
!7960 = !{!7961}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7959, file: !157, line: 50, baseType: !7962, size: 64)
!7962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7963, size: 64, elements: !162)
!7963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 32)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7938, file: !131, line: 68, baseType: !7965, size: 32, offset: 64)
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7966, size: 32)
!7966 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !7967)
!7967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !7968)
!7968 = !{!7969}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7967, file: !167, line: 232, baseType: !7970, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !7945)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7938, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7938, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!7973 = !DIDerivedType(tag: DW_TAG_member, scope: !7938, file: !131, line: 90, baseType: !7974, size: 16, offset: 112)
!7974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7938, file: !131, line: 90, size: 16, elements: !7975)
!7975 = !{!7976, !7981}
!7976 = !DIDerivedType(tag: DW_TAG_member, scope: !7974, file: !131, line: 91, baseType: !7977, size: 16)
!7977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7974, file: !131, line: 91, size: 16, elements: !7978)
!7978 = !{!7979, !7980}
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7977, file: !131, line: 96, baseType: !183, size: 8)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7977, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7974, file: !131, line: 100, baseType: !187, size: 16)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7938, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7938, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7938, file: !131, line: 131, baseType: !7985, size: 192, offset: 192)
!7985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !7986)
!7986 = !{!7987, !7988, !7994}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7985, file: !167, line: 245, baseType: !7944, size: 64)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7985, file: !167, line: 246, baseType: !7989, size: 32, offset: 64)
!7989 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !7990)
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 32)
!7991 = !DISubroutineType(types: !7992)
!7992 = !{null, !7993}
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 32)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7985, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7935, file: !131, line: 250, baseType: !7996, size: 288, offset: 384)
!7996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !7997)
!7997 = !{!7998, !7999, !8000, !8001, !8002, !8003, !8004, !8005, !8006}
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7996, file: !207, line: 26, baseType: !190, size: 32)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7996, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7996, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7996, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7996, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7996, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7996, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7996, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7996, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7935, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7935, file: !131, line: 256, baseType: !7966, size: 64, offset: 704)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7935, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7935, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7935, file: !131, line: 325, baseType: !8012, size: 32, offset: 1056)
!8012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8013, size: 32)
!8013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !8014)
!8014 = !{!8015, !8021, !8022}
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8013, file: !110, line: 5074, baseType: !8016, size: 96)
!8016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !8017)
!8017 = !{!8018, !8019, !8020}
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8016, file: !232, line: 57, baseType: !235, size: 32)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8016, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8016, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8013, file: !110, line: 5075, baseType: !7966, size: 64, offset: 96)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8013, file: !110, line: 5076, baseType: !8023, size: 32, offset: 160)
!8023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !8024)
!8024 = !{!8025}
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8023, file: !244, line: 52, baseType: !22, size: 32)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7935, file: !131, line: 343, baseType: !8027, size: 64, offset: 1088)
!8027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !8028)
!8028 = !{!8029, !8030}
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8027, file: !207, line: 63, baseType: !190, size: 32)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8027, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 32)
!8032 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !354, line: 44, baseType: !8033)
!8033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !356, line: 47, size: 8, elements: !8034)
!8034 = !{!8035}
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8033, file: !356, line: 48, baseType: !222, size: 8)
!8036 = !{!8037, !8038, !8039, !8040, !8041, !8042, !8043, !8044}
!8037 = !DILocalVariable(name: "thread", arg: 1, scope: !7930, file: !7931, line: 56, type: !7934)
!8038 = !DILocalVariable(name: "stack", arg: 2, scope: !7930, file: !7931, line: 56, type: !8031)
!8039 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7930, file: !7931, line: 57, type: !307)
!8040 = !DILocalVariable(name: "entry", arg: 4, scope: !7930, file: !7931, line: 57, type: !361)
!8041 = !DILocalVariable(name: "p1", arg: 5, scope: !7930, file: !7931, line: 58, type: !102)
!8042 = !DILocalVariable(name: "p2", arg: 6, scope: !7930, file: !7931, line: 58, type: !102)
!8043 = !DILocalVariable(name: "p3", arg: 7, scope: !7930, file: !7931, line: 58, type: !102)
!8044 = !DILocalVariable(name: "iframe", scope: !7930, file: !7931, line: 60, type: !3148)
!8045 = !DILocation(line: 0, scope: !7930)
!8046 = !DILocation(line: 85, column: 11, scope: !7930)
!8047 = !DILocation(line: 93, column: 10, scope: !7930)
!8048 = !DILocation(line: 98, column: 13, scope: !7930)
!8049 = !DILocation(line: 100, column: 15, scope: !7930)
!8050 = !DILocation(line: 100, column: 10, scope: !7930)
!8051 = !DILocation(line: 100, column: 13, scope: !7930)
!8052 = !DILocation(line: 101, column: 15, scope: !7930)
!8053 = !DILocation(line: 101, column: 10, scope: !7930)
!8054 = !DILocation(line: 101, column: 13, scope: !7930)
!8055 = !DILocation(line: 102, column: 15, scope: !7930)
!8056 = !DILocation(line: 102, column: 10, scope: !7930)
!8057 = !DILocation(line: 102, column: 13, scope: !7930)
!8058 = !DILocation(line: 103, column: 15, scope: !7930)
!8059 = !DILocation(line: 103, column: 10, scope: !7930)
!8060 = !DILocation(line: 103, column: 13, scope: !7930)
!8061 = !DILocation(line: 106, column: 10, scope: !7930)
!8062 = !DILocation(line: 106, column: 15, scope: !7930)
!8063 = !DILocation(line: 122, column: 29, scope: !7930)
!8064 = !DILocation(line: 122, column: 23, scope: !7930)
!8065 = !DILocation(line: 122, column: 27, scope: !7930)
!8066 = !DILocation(line: 123, column: 15, scope: !7930)
!8067 = !DILocation(line: 123, column: 23, scope: !7930)
!8068 = !DILocation(line: 143, column: 1, scope: !7930)
!8069 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7931, file: !7931, line: 530, type: !8070, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !8072)
!8070 = !DISubroutineType(types: !8071)
!8071 = !{null, !7934, !307, !361}
!8072 = !{!8073, !8074, !8075}
!8073 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8069, file: !7931, line: 530, type: !7934)
!8074 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8069, file: !7931, line: 530, type: !307)
!8075 = !DILocalVariable(name: "_main", arg: 3, scope: !8069, file: !7931, line: 531, type: !361)
!8076 = !DILocation(line: 0, scope: !8069)
!8077 = !DILocation(line: 535, column: 11, scope: !8069)
!8078 = !DILocation(line: 576, column: 2, scope: !8069)
!8079 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8080 = !DILocation(line: 603, column: 2, scope: !8069)
!8081 = distinct !DISubprogram(name: "z_arm_fault", scope: !8082, file: !8082, line: 1036, type: !8083, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8098)
!8082 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8083 = !DISubroutineType(types: !8084)
!8084 = !{null, !190, !190, !190, !8085}
!8085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8086, size: 32)
!8086 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !207, line: 37, baseType: !8087)
!8087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !8088)
!8088 = !{!8089, !8090, !8091, !8092, !8093, !8094, !8095, !8096, !8097}
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8087, file: !207, line: 26, baseType: !190, size: 32)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8087, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8087, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8087, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8087, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8087, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8087, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8087, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8087, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!8098 = !{!8099, !8100, !8101, !8102, !8103, !8104, !8105, !8106, !8107, !8108}
!8099 = !DILocalVariable(name: "msp", arg: 1, scope: !8081, file: !8082, line: 1036, type: !190)
!8100 = !DILocalVariable(name: "psp", arg: 2, scope: !8081, file: !8082, line: 1036, type: !190)
!8101 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8081, file: !8082, line: 1036, type: !190)
!8102 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8081, file: !8082, line: 1037, type: !8085)
!8103 = !DILocalVariable(name: "reason", scope: !8081, file: !8082, line: 1039, type: !190)
!8104 = !DILocalVariable(name: "fault", scope: !8081, file: !8082, line: 1040, type: !103)
!8105 = !DILocalVariable(name: "recoverable", scope: !8081, file: !8082, line: 1041, type: !279)
!8106 = !DILocalVariable(name: "nested_exc", scope: !8081, file: !8082, line: 1041, type: !279)
!8107 = !DILocalVariable(name: "esf", scope: !8081, file: !8082, line: 1042, type: !3216)
!8108 = !DILocalVariable(name: "esf_copy", scope: !8081, file: !8082, line: 1047, type: !3217)
!8109 = !DILocation(line: 0, scope: !8081)
!8110 = !DILocation(line: 1040, column: 19, scope: !8081)
!8111 = !DILocation(line: 1041, column: 2, scope: !8081)
!8112 = !DILocation(line: 1047, column: 2, scope: !8081)
!8113 = !DILocation(line: 1047, column: 15, scope: !8081)
!8114 = !DILocalVariable(name: "key", arg: 1, scope: !8115, file: !7921, line: 84, type: !32)
!8115 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8116)
!8116 = !{!8114}
!8117 = !DILocation(line: 0, scope: !8115, inlinedAt: !8118)
!8118 = distinct !DILocation(line: 1050, column: 2, scope: !8081)
!8119 = !DILocation(line: 95, column: 2, scope: !8115, inlinedAt: !8118)
!8120 = !{i64 2877520}
!8121 = !DILocation(line: 1055, column: 9, scope: !8081)
!8122 = !DILocation(line: 1056, column: 2, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !8082, line: 1056, column: 2)
!8124 = distinct !DILexicalBlock(scope: !8081, file: !8082, line: 1056, column: 2)
!8125 = !DILocation(line: 1056, column: 2, scope: !8124)
!8126 = !DILocation(line: 1056, column: 2, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8123, file: !8082, line: 1056, column: 2)
!8128 = !DILocation(line: 1040, column: 24, scope: !8081)
!8129 = !DILocation(line: 1063, column: 11, scope: !8081)
!8130 = !DILocation(line: 1064, column: 6, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8081, file: !8082, line: 1064, column: 6)
!8132 = !{i8 0, i8 2}
!8133 = !DILocation(line: 1064, column: 6, scope: !8081)
!8134 = !DILocation(line: 1070, column: 20, scope: !8081)
!8135 = !DILocation(line: 1070, column: 2, scope: !8081)
!8136 = !DILocation(line: 1089, column: 6, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8081, file: !8082, line: 1089, column: 6)
!8138 = !DILocation(line: 0, scope: !8137)
!8139 = !DILocation(line: 1089, column: 6, scope: !8081)
!8140 = !DILocation(line: 1090, column: 28, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !8082, line: 1090, column: 7)
!8142 = distinct !DILexicalBlock(scope: !8137, file: !8082, line: 1089, column: 18)
!8143 = !DILocation(line: 1090, column: 44, scope: !8141)
!8144 = !DILocation(line: 1090, column: 7, scope: !8142)
!8145 = !DILocation(line: 1091, column: 24, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8141, file: !8082, line: 1090, column: 50)
!8147 = !DILocation(line: 1092, column: 3, scope: !8146)
!8148 = !DILocation(line: 1094, column: 23, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8137, file: !8082, line: 1093, column: 9)
!8150 = !DILocation(line: 1097, column: 2, scope: !8081)
!8151 = !DILocation(line: 1098, column: 1, scope: !8081)
!8152 = distinct !DISubprogram(name: "get_esf", scope: !8082, file: !8082, line: 894, type: !8153, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8156)
!8153 = !DISubroutineType(types: !8154)
!8154 = !{!3216, !190, !190, !190, !8155}
!8155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!8156 = !{!8157, !8158, !8159, !8160, !8161, !8162}
!8157 = !DILocalVariable(name: "msp", arg: 1, scope: !8152, file: !8082, line: 894, type: !190)
!8158 = !DILocalVariable(name: "psp", arg: 2, scope: !8152, file: !8082, line: 894, type: !190)
!8159 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8152, file: !8082, line: 894, type: !190)
!8160 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8152, file: !8082, line: 895, type: !8155)
!8161 = !DILocalVariable(name: "alternative_state_exc", scope: !8152, file: !8082, line: 897, type: !279)
!8162 = !DILocalVariable(name: "ptr_esf", scope: !8152, file: !8082, line: 898, type: !3216)
!8163 = !DILocation(line: 0, scope: !8152)
!8164 = !DILocation(line: 900, column: 14, scope: !8152)
!8165 = !DILocation(line: 902, column: 49, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8152, file: !8082, line: 902, column: 6)
!8167 = !DILocation(line: 902, column: 6, scope: !8152)
!8168 = !DILocation(line: 983, column: 44, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8152, file: !8082, line: 983, column: 6)
!8170 = !DILocation(line: 985, column: 3, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8172, file: !8082, line: 985, column: 3)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !8082, line: 985, column: 3)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !8082, line: 985, column: 3)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !8082, line: 985, column: 3)
!8175 = distinct !DILexicalBlock(scope: !8169, file: !8082, line: 984, column: 47)
!8176 = !DILocation(line: 986, column: 3, scope: !8175)
!8177 = !DILocation(line: 983, column: 18, scope: !8169)
!8178 = !DILocation(line: 991, column: 7, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !8082, line: 990, column: 30)
!8180 = distinct !DILexicalBlock(scope: !8152, file: !8082, line: 990, column: 6)
!8181 = !DILocation(line: 998, column: 16, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8183, file: !8082, line: 995, column: 10)
!8183 = distinct !DILexicalBlock(scope: !8179, file: !8082, line: 991, column: 7)
!8184 = !DILocation(line: 1002, column: 2, scope: !8152)
!8185 = !DILocation(line: 1003, column: 1, scope: !8152)
!8186 = distinct !DISubprogram(name: "fault_handle", scope: !8082, file: !8082, line: 786, type: !8187, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8189)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!190, !3216, !103, !8155}
!8189 = !{!8190, !8191, !8192, !8193}
!8190 = !DILocalVariable(name: "esf", arg: 1, scope: !8186, file: !8082, line: 786, type: !3216)
!8191 = !DILocalVariable(name: "fault", arg: 2, scope: !8186, file: !8082, line: 786, type: !103)
!8192 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8186, file: !8082, line: 786, type: !8155)
!8193 = !DILocalVariable(name: "reason", scope: !8186, file: !8082, line: 788, type: !190)
!8194 = !DILocation(line: 0, scope: !8186)
!8195 = !DILocation(line: 790, column: 15, scope: !8186)
!8196 = !DILocation(line: 792, column: 2, scope: !8186)
!8197 = !DILocation(line: 794, column: 12, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8186, file: !8082, line: 792, column: 17)
!8199 = !DILocation(line: 795, column: 3, scope: !8198)
!8200 = !DILocation(line: 800, column: 12, scope: !8198)
!8201 = !DILocation(line: 801, column: 3, scope: !8198)
!8202 = !DILocation(line: 803, column: 12, scope: !8198)
!8203 = !DILocation(line: 804, column: 3, scope: !8198)
!8204 = !DILocation(line: 806, column: 12, scope: !8198)
!8205 = !DILocation(line: 807, column: 3, scope: !8198)
!8206 = !DILocation(line: 814, column: 3, scope: !8198)
!8207 = !DILocation(line: 815, column: 3, scope: !8198)
!8208 = !DILocation(line: 820, column: 3, scope: !8198)
!8209 = !DILocation(line: 821, column: 3, scope: !8198)
!8210 = !DILocation(line: 829, column: 2, scope: !8186)
!8211 = distinct !DISubprogram(name: "hard_fault", scope: !8082, file: !8082, line: 709, type: !8212, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8214)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!190, !3216, !8155}
!8214 = !{!8215, !8216, !8217}
!8215 = !DILocalVariable(name: "esf", arg: 1, scope: !8211, file: !8082, line: 709, type: !3216)
!8216 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8211, file: !8082, line: 709, type: !8155)
!8217 = !DILocalVariable(name: "reason", scope: !8211, file: !8082, line: 711, type: !190)
!8218 = !DILocation(line: 0, scope: !8211)
!8219 = !DILocation(line: 713, column: 2, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !8082, line: 713, column: 2)
!8221 = distinct !DILexicalBlock(scope: !8222, file: !8082, line: 713, column: 2)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !8082, line: 713, column: 2)
!8223 = distinct !DILexicalBlock(scope: !8211, file: !8082, line: 713, column: 2)
!8224 = !DILocation(line: 732, column: 15, scope: !8211)
!8225 = !DILocation(line: 734, column: 12, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8211, file: !8082, line: 734, column: 6)
!8227 = !DILocation(line: 734, column: 17, scope: !8226)
!8228 = !DILocation(line: 734, column: 41, scope: !8226)
!8229 = !DILocation(line: 734, column: 6, scope: !8211)
!8230 = !DILocation(line: 735, column: 3, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !8082, line: 735, column: 3)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !8082, line: 735, column: 3)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !8082, line: 735, column: 3)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !8082, line: 735, column: 3)
!8235 = distinct !DILexicalBlock(scope: !8226, file: !8082, line: 734, column: 47)
!8236 = !DILocation(line: 736, column: 2, scope: !8235)
!8237 = !DILocation(line: 736, column: 19, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8226, file: !8082, line: 736, column: 13)
!8239 = !DILocation(line: 736, column: 49, scope: !8238)
!8240 = !DILocation(line: 736, column: 13, scope: !8226)
!8241 = !DILocation(line: 737, column: 3, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !8082, line: 737, column: 3)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !8082, line: 737, column: 3)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !8082, line: 737, column: 3)
!8245 = distinct !DILexicalBlock(scope: !8246, file: !8082, line: 737, column: 3)
!8246 = distinct !DILexicalBlock(scope: !8238, file: !8082, line: 736, column: 55)
!8247 = !DILocation(line: 738, column: 2, scope: !8246)
!8248 = !DILocation(line: 738, column: 19, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8238, file: !8082, line: 738, column: 13)
!8250 = !DILocation(line: 738, column: 24, scope: !8249)
!8251 = !DILocation(line: 738, column: 47, scope: !8249)
!8252 = !DILocation(line: 738, column: 13, scope: !8238)
!8253 = !DILocation(line: 739, column: 3, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !8082, line: 739, column: 3)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !8082, line: 739, column: 3)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !8082, line: 739, column: 3)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !8082, line: 739, column: 3)
!8258 = distinct !DILexicalBlock(scope: !8249, file: !8082, line: 738, column: 53)
!8259 = !DILocation(line: 740, column: 7, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8258, file: !8082, line: 740, column: 7)
!8261 = !DILocation(line: 740, column: 7, scope: !8258)
!8262 = !DILocation(line: 741, column: 4, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !8082, line: 741, column: 4)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !8082, line: 741, column: 4)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !8082, line: 741, column: 4)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !8082, line: 741, column: 4)
!8267 = distinct !DILexicalBlock(scope: !8260, file: !8082, line: 740, column: 38)
!8268 = !DILocation(line: 742, column: 24, scope: !8267)
!8269 = !DILocation(line: 743, column: 3, scope: !8267)
!8270 = !DILocation(line: 743, column: 20, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8260, file: !8082, line: 743, column: 14)
!8272 = !DILocation(line: 743, column: 25, scope: !8271)
!8273 = !DILocation(line: 743, column: 52, scope: !8271)
!8274 = !DILocation(line: 743, column: 14, scope: !8260)
!8275 = !DILocation(line: 744, column: 13, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8271, file: !8082, line: 743, column: 58)
!8277 = !DILocation(line: 745, column: 3, scope: !8276)
!8278 = !DILocation(line: 745, column: 20, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8271, file: !8082, line: 745, column: 14)
!8280 = !DILocation(line: 745, column: 25, scope: !8279)
!8281 = !DILocation(line: 745, column: 52, scope: !8279)
!8282 = !DILocation(line: 745, column: 14, scope: !8271)
!8283 = !DILocation(line: 746, column: 13, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8279, file: !8082, line: 745, column: 58)
!8285 = !DILocation(line: 747, column: 3, scope: !8284)
!8286 = !DILocation(line: 747, column: 20, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8279, file: !8082, line: 747, column: 14)
!8288 = !DILocation(line: 747, column: 52, scope: !8287)
!8289 = !DILocation(line: 747, column: 14, scope: !8279)
!8290 = !DILocation(line: 748, column: 13, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8287, file: !8082, line: 747, column: 58)
!8292 = !DILocation(line: 754, column: 4, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !8082, line: 754, column: 4)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !8082, line: 754, column: 4)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !8082, line: 754, column: 4)
!8296 = distinct !DILexicalBlock(scope: !8287, file: !8082, line: 753, column: 10)
!8297 = !DILocation(line: 758, column: 3, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !8082, line: 758, column: 3)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !8082, line: 758, column: 3)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !8082, line: 758, column: 3)
!8301 = distinct !DILexicalBlock(scope: !8249, file: !8082, line: 757, column: 9)
!8302 = !DILocation(line: 766, column: 2, scope: !8211)
!8303 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8082, file: !8082, line: 229, type: !8187, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8304)
!8304 = !{!8305, !8306, !8307, !8308, !8309, !8310}
!8305 = !DILocalVariable(name: "esf", arg: 1, scope: !8303, file: !8082, line: 229, type: !3216)
!8306 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8303, file: !8082, line: 229, type: !103)
!8307 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8303, file: !8082, line: 230, type: !8155)
!8308 = !DILocalVariable(name: "reason", scope: !8303, file: !8082, line: 232, type: !190)
!8309 = !DILocalVariable(name: "mmfar", scope: !8303, file: !8082, line: 233, type: !190)
!8310 = !DILocalVariable(name: "temp", scope: !8311, file: !8082, line: 254, type: !190)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !8082, line: 244, column: 48)
!8312 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 244, column: 6)
!8313 = !DILocation(line: 0, scope: !8303)
!8314 = !DILocation(line: 235, column: 2, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8316, file: !8082, line: 235, column: 2)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !8082, line: 235, column: 2)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !8082, line: 235, column: 2)
!8318 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 235, column: 2)
!8319 = !DILocation(line: 237, column: 12, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 237, column: 6)
!8321 = !DILocation(line: 237, column: 17, scope: !8320)
!8322 = !DILocation(line: 237, column: 41, scope: !8320)
!8323 = !DILocation(line: 237, column: 6, scope: !8303)
!8324 = !DILocation(line: 238, column: 3, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !8082, line: 238, column: 3)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !8082, line: 238, column: 3)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !8082, line: 238, column: 3)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !8082, line: 238, column: 3)
!8329 = distinct !DILexicalBlock(scope: !8320, file: !8082, line: 237, column: 47)
!8330 = !DILocation(line: 240, column: 2, scope: !8329)
!8331 = !DILocation(line: 241, column: 12, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 241, column: 6)
!8333 = !DILocation(line: 241, column: 17, scope: !8332)
!8334 = !DILocation(line: 241, column: 43, scope: !8332)
!8335 = !DILocation(line: 241, column: 6, scope: !8303)
!8336 = !DILocation(line: 242, column: 3, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !8082, line: 242, column: 3)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !8082, line: 242, column: 3)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !8082, line: 242, column: 3)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !8082, line: 242, column: 3)
!8341 = distinct !DILexicalBlock(scope: !8332, file: !8082, line: 241, column: 49)
!8342 = !DILocation(line: 243, column: 2, scope: !8341)
!8343 = !DILocation(line: 244, column: 12, scope: !8312)
!8344 = !DILocation(line: 244, column: 17, scope: !8312)
!8345 = !DILocation(line: 244, column: 42, scope: !8312)
!8346 = !DILocation(line: 244, column: 6, scope: !8303)
!8347 = !DILocation(line: 245, column: 3, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !8082, line: 245, column: 3)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !8082, line: 245, column: 3)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !8082, line: 245, column: 3)
!8351 = distinct !DILexicalBlock(scope: !8311, file: !8082, line: 245, column: 3)
!8352 = !DILocation(line: 254, column: 24, scope: !8311)
!8353 = !DILocation(line: 0, scope: !8311)
!8354 = !DILocation(line: 256, column: 13, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8311, file: !8082, line: 256, column: 7)
!8356 = !DILocation(line: 256, column: 18, scope: !8355)
!8357 = !DILocation(line: 256, column: 44, scope: !8355)
!8358 = !DILocation(line: 256, column: 7, scope: !8311)
!8359 = !DILocation(line: 258, column: 4, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !8082, line: 258, column: 4)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !8082, line: 258, column: 4)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !8082, line: 258, column: 4)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !8082, line: 258, column: 4)
!8364 = distinct !DILexicalBlock(scope: !8355, file: !8082, line: 256, column: 50)
!8365 = !DILocation(line: 259, column: 24, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8364, file: !8082, line: 259, column: 8)
!8367 = !DILocation(line: 259, column: 8, scope: !8364)
!8368 = !DILocation(line: 261, column: 15, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8366, file: !8082, line: 259, column: 30)
!8370 = !DILocation(line: 262, column: 4, scope: !8369)
!8371 = !DILocation(line: 265, column: 12, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 265, column: 6)
!8373 = !DILocation(line: 265, column: 17, scope: !8372)
!8374 = !DILocation(line: 265, column: 42, scope: !8372)
!8375 = !DILocation(line: 265, column: 6, scope: !8303)
!8376 = !DILocation(line: 266, column: 3, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !8082, line: 266, column: 3)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !8082, line: 266, column: 3)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !8082, line: 266, column: 3)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !8082, line: 266, column: 3)
!8381 = distinct !DILexicalBlock(scope: !8372, file: !8082, line: 265, column: 48)
!8382 = !DILocation(line: 267, column: 2, scope: !8381)
!8383 = !DILocation(line: 269, column: 12, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 269, column: 6)
!8385 = !DILocation(line: 269, column: 17, scope: !8384)
!8386 = !DILocation(line: 269, column: 41, scope: !8384)
!8387 = !DILocation(line: 269, column: 6, scope: !8303)
!8388 = !DILocation(line: 270, column: 3, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !8082, line: 270, column: 3)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !8082, line: 270, column: 3)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !8082, line: 270, column: 3)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8082, line: 270, column: 3)
!8393 = distinct !DILexicalBlock(scope: !8384, file: !8082, line: 269, column: 47)
!8394 = !DILocation(line: 272, column: 2, scope: !8393)
!8395 = !DILocation(line: 288, column: 12, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 288, column: 6)
!8397 = !DILocation(line: 288, column: 17, scope: !8396)
!8398 = !DILocation(line: 288, column: 41, scope: !8396)
!8399 = !DILocation(line: 289, column: 9, scope: !8396)
!8400 = !DILocation(line: 289, column: 14, scope: !8396)
!8401 = !DILocation(line: 288, column: 6, scope: !8303)
!8402 = !DILocation(line: 348, column: 2, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !8082, line: 348, column: 2)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !8082, line: 348, column: 2)
!8405 = distinct !DILexicalBlock(scope: !8396, file: !8082, line: 289, column: 40)
!8406 = !DILocation(line: 348, column: 2, scope: !8404)
!8407 = !DILocation(line: 348, column: 2, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8403, file: !8082, line: 348, column: 2)
!8409 = !DILocation(line: 360, column: 12, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8303, file: !8082, line: 360, column: 6)
!8411 = !DILocation(line: 360, column: 17, scope: !8410)
!8412 = !DILocation(line: 360, column: 41, scope: !8410)
!8413 = !DILocation(line: 360, column: 6, scope: !8303)
!8414 = !DILocation(line: 361, column: 14, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8410, file: !8082, line: 360, column: 47)
!8416 = !DILocation(line: 362, column: 2, scope: !8415)
!8417 = !DILocation(line: 366, column: 12, scope: !8303)
!8418 = !DILocation(line: 369, column: 15, scope: !8303)
!8419 = !DILocation(line: 371, column: 2, scope: !8303)
!8420 = distinct !DISubprogram(name: "bus_fault", scope: !8082, file: !8082, line: 383, type: !8421, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8423)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{!103, !3216, !103, !8155}
!8423 = !{!8424, !8425, !8426, !8427, !8428}
!8424 = !DILocalVariable(name: "esf", arg: 1, scope: !8420, file: !8082, line: 383, type: !3216)
!8425 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8420, file: !8082, line: 383, type: !103)
!8426 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8420, file: !8082, line: 383, type: !8155)
!8427 = !DILocalVariable(name: "reason", scope: !8420, file: !8082, line: 385, type: !190)
!8428 = !DILocalVariable(name: "bfar", scope: !8429, file: !8082, line: 405, type: !190)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !8082, line: 395, column: 42)
!8430 = distinct !DILexicalBlock(scope: !8420, file: !8082, line: 395, column: 6)
!8431 = !DILocation(line: 0, scope: !8420)
!8432 = !DILocation(line: 387, column: 2, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !8082, line: 387, column: 2)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !8082, line: 387, column: 2)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !8082, line: 387, column: 2)
!8436 = distinct !DILexicalBlock(scope: !8420, file: !8082, line: 387, column: 2)
!8437 = !DILocation(line: 389, column: 11, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8420, file: !8082, line: 389, column: 6)
!8439 = !DILocation(line: 389, column: 16, scope: !8438)
!8440 = !DILocation(line: 389, column: 6, scope: !8420)
!8441 = !DILocation(line: 390, column: 3, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !8082, line: 390, column: 3)
!8443 = distinct !DILexicalBlock(scope: !8444, file: !8082, line: 390, column: 3)
!8444 = distinct !DILexicalBlock(scope: !8445, file: !8082, line: 390, column: 3)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !8082, line: 390, column: 3)
!8446 = distinct !DILexicalBlock(scope: !8438, file: !8082, line: 389, column: 39)
!8447 = !DILocation(line: 391, column: 2, scope: !8446)
!8448 = !DILocation(line: 392, column: 11, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8420, file: !8082, line: 392, column: 6)
!8450 = !DILocation(line: 392, column: 16, scope: !8449)
!8451 = !DILocation(line: 392, column: 6, scope: !8420)
!8452 = !DILocation(line: 393, column: 3, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !8082, line: 393, column: 3)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !8082, line: 393, column: 3)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !8082, line: 393, column: 3)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !8082, line: 393, column: 3)
!8457 = distinct !DILexicalBlock(scope: !8449, file: !8082, line: 392, column: 41)
!8458 = !DILocation(line: 394, column: 2, scope: !8457)
!8459 = !DILocation(line: 395, column: 11, scope: !8430)
!8460 = !DILocation(line: 395, column: 16, scope: !8430)
!8461 = !DILocation(line: 395, column: 6, scope: !8420)
!8462 = !DILocation(line: 396, column: 3, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !8082, line: 396, column: 3)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !8082, line: 396, column: 3)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !8082, line: 396, column: 3)
!8466 = distinct !DILexicalBlock(scope: !8429, file: !8082, line: 396, column: 3)
!8467 = !DILocation(line: 405, column: 3, scope: !8429)
!8468 = !DILocation(line: 0, scope: !8429)
!8469 = !DILocation(line: 407, column: 13, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8429, file: !8082, line: 407, column: 7)
!8471 = !DILocation(line: 407, column: 18, scope: !8470)
!8472 = !DILocation(line: 407, column: 44, scope: !8470)
!8473 = !DILocation(line: 407, column: 7, scope: !8429)
!8474 = !DILocation(line: 408, column: 4, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8082, line: 408, column: 4)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !8082, line: 408, column: 4)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !8082, line: 408, column: 4)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !8082, line: 408, column: 4)
!8479 = distinct !DILexicalBlock(scope: !8470, file: !8082, line: 407, column: 50)
!8480 = !DILocation(line: 409, column: 24, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8479, file: !8082, line: 409, column: 8)
!8482 = !DILocation(line: 409, column: 8, scope: !8479)
!8483 = !DILocation(line: 411, column: 15, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8481, file: !8082, line: 409, column: 30)
!8485 = !DILocation(line: 412, column: 4, scope: !8484)
!8486 = !DILocation(line: 415, column: 11, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8420, file: !8082, line: 415, column: 6)
!8488 = !DILocation(line: 415, column: 16, scope: !8487)
!8489 = !DILocation(line: 415, column: 6, scope: !8420)
!8490 = !DILocation(line: 416, column: 3, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !8082, line: 416, column: 3)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !8082, line: 416, column: 3)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !8082, line: 416, column: 3)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !8082, line: 416, column: 3)
!8495 = distinct !DILexicalBlock(scope: !8487, file: !8082, line: 415, column: 44)
!8496 = !DILocation(line: 417, column: 2, scope: !8495)
!8497 = !DILocation(line: 418, column: 12, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8420, file: !8082, line: 418, column: 6)
!8499 = !DILocation(line: 418, column: 17, scope: !8498)
!8500 = !DILocation(line: 418, column: 41, scope: !8498)
!8501 = !DILocation(line: 418, column: 6, scope: !8420)
!8502 = !DILocation(line: 423, column: 18, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8498, file: !8082, line: 423, column: 13)
!8504 = !DILocation(line: 423, column: 23, scope: !8503)
!8505 = !DILocation(line: 423, column: 13, scope: !8498)
!8506 = !DILocation(line: 0, scope: !8498)
!8507 = !DILocation(line: 524, column: 12, scope: !8420)
!8508 = !DILocation(line: 526, column: 15, scope: !8420)
!8509 = !DILocation(line: 528, column: 2, scope: !8420)
!8510 = distinct !DISubprogram(name: "usage_fault", scope: !8082, file: !8082, line: 539, type: !8511, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8515)
!8511 = !DISubroutineType(types: !8512)
!8512 = !{!190, !8513}
!8513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8514, size: 32)
!8514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3217)
!8515 = !{!8516, !8517}
!8516 = !DILocalVariable(name: "esf", arg: 1, scope: !8510, file: !8082, line: 539, type: !8513)
!8517 = !DILocalVariable(name: "reason", scope: !8510, file: !8082, line: 541, type: !190)
!8518 = !DILocation(line: 0, scope: !8510)
!8519 = !DILocation(line: 543, column: 2, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8521, file: !8082, line: 543, column: 2)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !8082, line: 543, column: 2)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !8082, line: 543, column: 2)
!8523 = distinct !DILexicalBlock(scope: !8510, file: !8082, line: 543, column: 2)
!8524 = !DILocation(line: 546, column: 12, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8510, file: !8082, line: 546, column: 6)
!8526 = !DILocation(line: 546, column: 17, scope: !8525)
!8527 = !DILocation(line: 546, column: 43, scope: !8525)
!8528 = !DILocation(line: 546, column: 6, scope: !8510)
!8529 = !DILocation(line: 547, column: 3, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !8082, line: 547, column: 3)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !8082, line: 547, column: 3)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !8082, line: 547, column: 3)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !8082, line: 547, column: 3)
!8534 = distinct !DILexicalBlock(scope: !8525, file: !8082, line: 546, column: 49)
!8535 = !DILocation(line: 548, column: 2, scope: !8534)
!8536 = !DILocation(line: 549, column: 12, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8510, file: !8082, line: 549, column: 6)
!8538 = !DILocation(line: 549, column: 17, scope: !8537)
!8539 = !DILocation(line: 549, column: 43, scope: !8537)
!8540 = !DILocation(line: 549, column: 6, scope: !8510)
!8541 = !DILocation(line: 550, column: 3, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !8082, line: 550, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !8082, line: 550, column: 3)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !8082, line: 550, column: 3)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !8082, line: 550, column: 3)
!8546 = distinct !DILexicalBlock(scope: !8537, file: !8082, line: 549, column: 49)
!8547 = !DILocation(line: 551, column: 2, scope: !8546)
!8548 = !DILocation(line: 567, column: 12, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8510, file: !8082, line: 567, column: 6)
!8550 = !DILocation(line: 567, column: 17, scope: !8549)
!8551 = !DILocation(line: 567, column: 38, scope: !8549)
!8552 = !DILocation(line: 567, column: 6, scope: !8510)
!8553 = !DILocation(line: 568, column: 3, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !8082, line: 568, column: 3)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !8082, line: 568, column: 3)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !8082, line: 568, column: 3)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !8082, line: 568, column: 3)
!8558 = distinct !DILexicalBlock(scope: !8549, file: !8082, line: 567, column: 44)
!8559 = !DILocation(line: 569, column: 2, scope: !8558)
!8560 = !DILocation(line: 570, column: 12, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8510, file: !8082, line: 570, column: 6)
!8562 = !DILocation(line: 570, column: 17, scope: !8561)
!8563 = !DILocation(line: 570, column: 39, scope: !8561)
!8564 = !DILocation(line: 570, column: 6, scope: !8510)
!8565 = !DILocation(line: 571, column: 3, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !8082, line: 571, column: 3)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !8082, line: 571, column: 3)
!8568 = distinct !DILexicalBlock(scope: !8569, file: !8082, line: 571, column: 3)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !8082, line: 571, column: 3)
!8570 = distinct !DILexicalBlock(scope: !8561, file: !8082, line: 570, column: 45)
!8571 = !DILocation(line: 572, column: 2, scope: !8570)
!8572 = !DILocation(line: 573, column: 12, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8510, file: !8082, line: 573, column: 6)
!8574 = !DILocation(line: 573, column: 17, scope: !8573)
!8575 = !DILocation(line: 573, column: 42, scope: !8573)
!8576 = !DILocation(line: 573, column: 6, scope: !8510)
!8577 = !DILocation(line: 574, column: 3, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !8082, line: 574, column: 3)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !8082, line: 574, column: 3)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !8082, line: 574, column: 3)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !8082, line: 574, column: 3)
!8582 = distinct !DILexicalBlock(scope: !8573, file: !8082, line: 573, column: 48)
!8583 = !DILocation(line: 575, column: 2, scope: !8582)
!8584 = !DILocation(line: 576, column: 12, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8510, file: !8082, line: 576, column: 6)
!8586 = !DILocation(line: 576, column: 17, scope: !8585)
!8587 = !DILocation(line: 576, column: 44, scope: !8585)
!8588 = !DILocation(line: 576, column: 6, scope: !8510)
!8589 = !DILocation(line: 577, column: 3, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !8082, line: 577, column: 3)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !8082, line: 577, column: 3)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !8082, line: 577, column: 3)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8082, line: 577, column: 3)
!8594 = distinct !DILexicalBlock(scope: !8585, file: !8082, line: 576, column: 50)
!8595 = !DILocation(line: 578, column: 2, scope: !8594)
!8596 = !DILocation(line: 581, column: 12, scope: !8510)
!8597 = !DILocation(line: 583, column: 2, scope: !8510)
!8598 = distinct !DISubprogram(name: "debug_monitor", scope: !8082, file: !8082, line: 632, type: !8599, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8601)
!8599 = !DISubroutineType(types: !8600)
!8600 = !{null, !3216, !8155}
!8601 = !{!8602, !8603}
!8602 = !DILocalVariable(name: "esf", arg: 1, scope: !8598, file: !8082, line: 632, type: !3216)
!8603 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8598, file: !8082, line: 632, type: !8155)
!8604 = !DILocation(line: 0, scope: !8598)
!8605 = !DILocation(line: 634, column: 15, scope: !8598)
!8606 = !DILocation(line: 636, column: 2, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !8082, line: 636, column: 2)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !8082, line: 636, column: 2)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !8082, line: 636, column: 2)
!8610 = distinct !DILexicalBlock(scope: !8598, file: !8082, line: 636, column: 2)
!8611 = !DILocation(line: 652, column: 1, scope: !8598)
!8612 = distinct !DISubprogram(name: "reserved_exception", scope: !8082, file: !8082, line: 776, type: !8613, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8615)
!8613 = !DISubroutineType(types: !8614)
!8614 = !{null, !8513, !103}
!8615 = !{!8616, !8617}
!8616 = !DILocalVariable(name: "esf", arg: 1, scope: !8612, file: !8082, line: 776, type: !8513)
!8617 = !DILocalVariable(name: "fault", arg: 2, scope: !8612, file: !8082, line: 776, type: !103)
!8618 = !DILocation(line: 0, scope: !8612)
!8619 = !DILocation(line: 780, column: 2, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !8082, line: 780, column: 2)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !8082, line: 780, column: 2)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8082, line: 780, column: 2)
!8623 = distinct !DILexicalBlock(scope: !8612, file: !8082, line: 780, column: 2)
!8624 = !DILocation(line: 783, column: 1, scope: !8612)
!8625 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8082, file: !8082, line: 658, type: !8626, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !8628)
!8626 = !DISubroutineType(types: !8627)
!8627 = !{!279, !3216}
!8628 = !{!8629, !8630, !8631}
!8629 = !DILocalVariable(name: "esf", arg: 1, scope: !8625, file: !8082, line: 658, type: !3216)
!8630 = !DILocalVariable(name: "ret_addr", scope: !8625, file: !8082, line: 660, type: !2987)
!8631 = !DILocalVariable(name: "fault_insn", scope: !8625, file: !8082, line: 686, type: !187)
!8632 = !DILocation(line: 0, scope: !8625)
!8633 = !DILocation(line: 660, column: 46, scope: !8625)
!8634 = !DILocation(line: 660, column: 23, scope: !8625)
!8635 = !DILocation(line: 682, column: 11, scope: !8625)
!8636 = !DILocation(line: 271, column: 3, scope: !8637, inlinedAt: !8638)
!8637 = distinct !DISubprogram(name: "__DSB", scope: !7800, file: !7800, line: 269, type: !374, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !2145)
!8638 = distinct !DILocation(line: 683, column: 2, scope: !8625)
!8639 = !{i64 6969475}
!8640 = !DILocation(line: 260, column: 3, scope: !8641, inlinedAt: !8642)
!8641 = distinct !DISubprogram(name: "__ISB", scope: !7800, file: !7800, line: 258, type: !374, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !2145)
!8642 = distinct !DILocation(line: 684, column: 2, scope: !8625)
!8643 = !{i64 6969192}
!8644 = !DILocation(line: 686, column: 35, scope: !8625)
!8645 = !DILocation(line: 686, column: 24, scope: !8625)
!8646 = !DILocation(line: 688, column: 11, scope: !8625)
!8647 = !DILocation(line: 271, column: 3, scope: !8637, inlinedAt: !8648)
!8648 = distinct !DILocation(line: 689, column: 2, scope: !8625)
!8649 = !DILocation(line: 260, column: 3, scope: !8641, inlinedAt: !8650)
!8650 = distinct !DILocation(line: 690, column: 2, scope: !8625)
!8651 = !DILocation(line: 693, column: 45, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8625, file: !8082, line: 693, column: 6)
!8653 = !DILocation(line: 699, column: 1, scope: !8625)
!8654 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8082, file: !8082, line: 1107, type: !374, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !2145)
!8655 = !DILocation(line: 1111, column: 11, scope: !8654)
!8656 = !DILocation(line: 1136, column: 1, scope: !8654)
!8657 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8658, file: !8658, line: 26, type: !374, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !8659)
!8658 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8659 = !{!8660}
!8660 = !DILocalVariable(name: "irq", scope: !8657, file: !8658, line: 28, type: !103)
!8661 = !DILocation(line: 0, scope: !8657)
!8662 = !DILocation(line: 30, column: 2, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8657, file: !8658, line: 30, column: 2)
!8664 = !DILocation(line: 31, column: 3, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8666, file: !8658, line: 30, column: 39)
!8666 = distinct !DILexicalBlock(scope: !8663, file: !8658, line: 30, column: 2)
!8667 = !DILocation(line: 30, column: 35, scope: !8666)
!8668 = !DILocation(line: 30, column: 13, scope: !8666)
!8669 = distinct !{!8669, !8662, !8670}
!8670 = !DILocation(line: 32, column: 2, scope: !8663)
!8671 = !DILocation(line: 33, column: 1, scope: !8657)
!8672 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1794, file: !1794, line: 1814, type: !7840, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !8673)
!8673 = !{!8674, !8675}
!8674 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8672, file: !1794, line: 1814, type: !3044)
!8675 = !DILocalVariable(name: "priority", arg: 2, scope: !8672, file: !1794, line: 1814, type: !190)
!8676 = !DILocation(line: 0, scope: !8672)
!8677 = !DILocation(line: 1816, column: 7, scope: !8672)
!8678 = !DILocation(line: 0, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8672, file: !1794, line: 1816, column: 7)
!8680 = !DILocation(line: 1824, column: 1, scope: !8672)
!8681 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8682, file: !8682, line: 27, type: !8683, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3304, retainedNodes: !8783)
!8682 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8683 = !DISubroutineType(types: !8684)
!8684 = !{null, !8685}
!8685 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !8686)
!8686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8687, size: 32)
!8687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !8688)
!8688 = !{!8689, !8747, !8759, !8760, !8761, !8762, !8763, !8778}
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8687, file: !131, line: 247, baseType: !8690, size: 384)
!8690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !8691)
!8691 = !{!8692, !8716, !8723, !8724, !8725, !8734, !8735, !8736}
!8692 = !DIDerivedType(tag: DW_TAG_member, scope: !8690, file: !131, line: 60, baseType: !8693, size: 64)
!8693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8690, file: !131, line: 60, size: 64, elements: !8694)
!8694 = !{!8695, !8710}
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8693, file: !131, line: 61, baseType: !8696, size: 64)
!8696 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !8697)
!8697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !8698)
!8698 = !{!8699, !8705}
!8699 = !DIDerivedType(tag: DW_TAG_member, scope: !8697, file: !141, line: 38, baseType: !8700, size: 32)
!8700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8697, file: !141, line: 38, size: 32, elements: !8701)
!8701 = !{!8702, !8704}
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8700, file: !141, line: 39, baseType: !8703, size: 32)
!8703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8697, size: 32)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8700, file: !141, line: 40, baseType: !8703, size: 32)
!8705 = !DIDerivedType(tag: DW_TAG_member, scope: !8697, file: !141, line: 42, baseType: !8706, size: 32, offset: 32)
!8706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8697, file: !141, line: 42, size: 32, elements: !8707)
!8707 = !{!8708, !8709}
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8706, file: !141, line: 43, baseType: !8703, size: 32)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8706, file: !141, line: 44, baseType: !8703, size: 32)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8693, file: !131, line: 62, baseType: !8711, size: 64)
!8711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !8712)
!8712 = !{!8713}
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8711, file: !157, line: 50, baseType: !8714, size: 64)
!8714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8715, size: 64, elements: !162)
!8715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8711, size: 32)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8690, file: !131, line: 68, baseType: !8717, size: 32, offset: 64)
!8717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8718, size: 32)
!8718 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !8719)
!8719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !8720)
!8720 = !{!8721}
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8719, file: !167, line: 232, baseType: !8722, size: 64)
!8722 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !8697)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8690, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8690, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!8725 = !DIDerivedType(tag: DW_TAG_member, scope: !8690, file: !131, line: 90, baseType: !8726, size: 16, offset: 112)
!8726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8690, file: !131, line: 90, size: 16, elements: !8727)
!8727 = !{!8728, !8733}
!8728 = !DIDerivedType(tag: DW_TAG_member, scope: !8726, file: !131, line: 91, baseType: !8729, size: 16)
!8729 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8726, file: !131, line: 91, size: 16, elements: !8730)
!8730 = !{!8731, !8732}
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8729, file: !131, line: 96, baseType: !183, size: 8)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8729, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8726, file: !131, line: 100, baseType: !187, size: 16)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8690, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8690, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8690, file: !131, line: 131, baseType: !8737, size: 192, offset: 192)
!8737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !8738)
!8738 = !{!8739, !8740, !8746}
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8737, file: !167, line: 245, baseType: !8696, size: 64)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8737, file: !167, line: 246, baseType: !8741, size: 32, offset: 64)
!8741 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !8742)
!8742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8743, size: 32)
!8743 = !DISubroutineType(types: !8744)
!8744 = !{null, !8745}
!8745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8737, size: 32)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8737, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8687, file: !131, line: 250, baseType: !8748, size: 288, offset: 384)
!8748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !8749)
!8749 = !{!8750, !8751, !8752, !8753, !8754, !8755, !8756, !8757, !8758}
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8748, file: !207, line: 26, baseType: !190, size: 32)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8748, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8748, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8748, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8748, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8748, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8748, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8748, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8748, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8687, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8687, file: !131, line: 256, baseType: !8718, size: 64, offset: 704)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8687, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8687, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8687, file: !131, line: 325, baseType: !8764, size: 32, offset: 1056)
!8764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8765, size: 32)
!8765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !8766)
!8766 = !{!8767, !8773, !8774}
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8765, file: !110, line: 5074, baseType: !8768, size: 96)
!8768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !8769)
!8769 = !{!8770, !8771, !8772}
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8768, file: !232, line: 57, baseType: !235, size: 32)
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8768, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8768, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8765, file: !110, line: 5075, baseType: !8718, size: 64, offset: 96)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8765, file: !110, line: 5076, baseType: !8775, size: 32, offset: 160)
!8775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !8776)
!8776 = !{!8777}
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8775, file: !244, line: 52, baseType: !22, size: 32)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8687, file: !131, line: 343, baseType: !8779, size: 64, offset: 1088)
!8779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !8780)
!8780 = !{!8781, !8782}
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8779, file: !207, line: 63, baseType: !190, size: 32)
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8779, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!8783 = !{!8784}
!8784 = !DILocalVariable(name: "thread", arg: 1, scope: !8681, file: !8682, line: 27, type: !8685)
!8785 = !DILocation(line: 0, scope: !8681)
!8786 = !DILocation(line: 29, column: 6, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8681, file: !8682, line: 29, column: 6)
!8788 = !DILocation(line: 29, column: 15, scope: !8787)
!8789 = !DILocation(line: 29, column: 6, scope: !8681)
!8790 = !DILocation(line: 1031, column: 3, scope: !8791, inlinedAt: !8794)
!8791 = distinct !DISubprogram(name: "__get_IPSR", scope: !7800, file: !7800, line: 1027, type: !7887, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3304, retainedNodes: !8792)
!8792 = !{!8793}
!8793 = !DILocalVariable(name: "result", scope: !8791, file: !7800, line: 1029, type: !190)
!8794 = distinct !DILocation(line: 48, column: 10, scope: !8795, inlinedAt: !8799)
!8795 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8796, file: !8796, line: 46, type: !8797, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3304, retainedNodes: !2145)
!8796 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8797 = !DISubroutineType(types: !8798)
!8798 = !{!279}
!8799 = distinct !DILocation(line: 30, column: 7, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8801, file: !8682, line: 30, column: 7)
!8801 = distinct !DILexicalBlock(scope: !8787, file: !8682, line: 29, column: 26)
!8802 = !{i64 6970699}
!8803 = !DILocation(line: 0, scope: !8791, inlinedAt: !8794)
!8804 = !DILocation(line: 48, column: 9, scope: !8795, inlinedAt: !8799)
!8805 = !DILocation(line: 30, column: 7, scope: !8801)
!8806 = !DILocation(line: 42, column: 14, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8800, file: !8682, line: 30, column: 25)
!8808 = !DILocation(line: 48, column: 15, scope: !8807)
!8809 = !DILocation(line: 49, column: 3, scope: !8807)
!8810 = !DILocation(line: 52, column: 2, scope: !8681)
!8811 = !DILocation(line: 53, column: 1, scope: !8681)
!8812 = distinct !DISubprogram(name: "strcpy", scope: !8813, file: !8813, line: 20, type: !8814, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8818)
!8813 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8814 = !DISubroutineType(types: !8815)
!8815 = !{!307, !8816, !8817}
!8816 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !307)
!8817 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !377)
!8818 = !{!8819, !8820, !8821}
!8819 = !DILocalVariable(name: "d", arg: 1, scope: !8812, file: !8813, line: 20, type: !8816)
!8820 = !DILocalVariable(name: "s", arg: 2, scope: !8812, file: !8813, line: 20, type: !8817)
!8821 = !DILocalVariable(name: "dest", scope: !8812, file: !8813, line: 22, type: !307)
!8822 = !DILocation(line: 0, scope: !8812)
!8823 = !DILocation(line: 24, column: 9, scope: !8812)
!8824 = !DILocation(line: 24, column: 12, scope: !8812)
!8825 = !DILocation(line: 24, column: 2, scope: !8812)
!8826 = !DILocation(line: 25, column: 6, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8812, file: !8813, line: 24, column: 21)
!8828 = !DILocation(line: 26, column: 4, scope: !8827)
!8829 = !DILocation(line: 27, column: 4, scope: !8827)
!8830 = distinct !{!8830, !8825, !8831}
!8831 = !DILocation(line: 28, column: 2, scope: !8812)
!8832 = !DILocation(line: 30, column: 5, scope: !8812)
!8833 = !DILocation(line: 32, column: 2, scope: !8812)
!8834 = distinct !DISubprogram(name: "strncpy", scope: !8813, file: !8813, line: 42, type: !8835, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8837)
!8835 = !DISubroutineType(types: !8836)
!8836 = !{!307, !8816, !8817, !239}
!8837 = !{!8838, !8839, !8840, !8841}
!8838 = !DILocalVariable(name: "d", arg: 1, scope: !8834, file: !8813, line: 42, type: !8816)
!8839 = !DILocalVariable(name: "s", arg: 2, scope: !8834, file: !8813, line: 42, type: !8817)
!8840 = !DILocalVariable(name: "n", arg: 3, scope: !8834, file: !8813, line: 42, type: !239)
!8841 = !DILocalVariable(name: "dest", scope: !8834, file: !8813, line: 44, type: !307)
!8842 = !DILocation(line: 0, scope: !8834)
!8843 = !DILocation(line: 46, column: 12, scope: !8834)
!8844 = !DILocation(line: 46, column: 17, scope: !8834)
!8845 = !DILocation(line: 46, column: 20, scope: !8834)
!8846 = !DILocation(line: 46, column: 23, scope: !8834)
!8847 = !DILocation(line: 46, column: 2, scope: !8834)
!8848 = !DILocation(line: 47, column: 6, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8834, file: !8813, line: 46, column: 32)
!8850 = !DILocation(line: 48, column: 4, scope: !8849)
!8851 = !DILocation(line: 49, column: 4, scope: !8849)
!8852 = !DILocation(line: 50, column: 4, scope: !8849)
!8853 = distinct !{!8853, !8847, !8854}
!8854 = !DILocation(line: 51, column: 2, scope: !8834)
!8855 = !DILocation(line: 54, column: 6, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8834, file: !8813, line: 53, column: 16)
!8857 = !DILocation(line: 55, column: 4, scope: !8856)
!8858 = !DILocation(line: 56, column: 4, scope: !8856)
!8859 = !DILocation(line: 53, column: 11, scope: !8834)
!8860 = !DILocation(line: 53, column: 2, scope: !8834)
!8861 = distinct !{!8861, !8860, !8862}
!8862 = !DILocation(line: 57, column: 2, scope: !8834)
!8863 = !DILocation(line: 59, column: 2, scope: !8834)
!8864 = distinct !DISubprogram(name: "strchr", scope: !8813, file: !8813, line: 69, type: !8865, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8867)
!8865 = !DISubroutineType(types: !8866)
!8866 = !{!307, !377, !103}
!8867 = !{!8868, !8869, !8870}
!8868 = !DILocalVariable(name: "s", arg: 1, scope: !8864, file: !8813, line: 69, type: !377)
!8869 = !DILocalVariable(name: "c", arg: 2, scope: !8864, file: !8813, line: 69, type: !103)
!8870 = !DILocalVariable(name: "tmp", scope: !8864, file: !8813, line: 71, type: !222)
!8871 = !DILocation(line: 0, scope: !8864)
!8872 = !DILocation(line: 73, column: 2, scope: !8864)
!8873 = !DILocation(line: 73, column: 10, scope: !8864)
!8874 = !DILocation(line: 73, column: 13, scope: !8864)
!8875 = !DILocation(line: 73, column: 21, scope: !8864)
!8876 = !DILocation(line: 74, column: 4, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8864, file: !8813, line: 73, column: 38)
!8878 = distinct !{!8878, !8872, !8879}
!8879 = !DILocation(line: 75, column: 2, scope: !8864)
!8880 = !DILocation(line: 77, column: 9, scope: !8864)
!8881 = !DILocation(line: 77, column: 2, scope: !8864)
!8882 = distinct !DISubprogram(name: "strrchr", scope: !8813, file: !8813, line: 87, type: !8865, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8883)
!8883 = !{!8884, !8885, !8886}
!8884 = !DILocalVariable(name: "s", arg: 1, scope: !8882, file: !8813, line: 87, type: !377)
!8885 = !DILocalVariable(name: "c", arg: 2, scope: !8882, file: !8813, line: 87, type: !103)
!8886 = !DILocalVariable(name: "match", scope: !8882, file: !8813, line: 89, type: !307)
!8887 = !DILocation(line: 0, scope: !8882)
!8888 = !DILocation(line: 91, column: 2, scope: !8882)
!8889 = !DILocation(line: 92, column: 7, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8891, file: !8813, line: 92, column: 7)
!8891 = distinct !DILexicalBlock(scope: !8882, file: !8813, line: 91, column: 5)
!8892 = !DILocation(line: 92, column: 10, scope: !8890)
!8893 = !DILocation(line: 92, column: 7, scope: !8891)
!8894 = !DILocation(line: 95, column: 13, scope: !8882)
!8895 = !DILocation(line: 95, column: 2, scope: !8891)
!8896 = distinct !{!8896, !8888, !8897}
!8897 = !DILocation(line: 95, column: 15, scope: !8882)
!8898 = !DILocation(line: 97, column: 2, scope: !8882)
!8899 = distinct !DISubprogram(name: "strlen", scope: !8813, file: !8813, line: 107, type: !8900, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8902)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{!239, !377}
!8902 = !{!8903, !8904}
!8903 = !DILocalVariable(name: "s", arg: 1, scope: !8899, file: !8813, line: 107, type: !377)
!8904 = !DILocalVariable(name: "n", scope: !8899, file: !8813, line: 109, type: !239)
!8905 = !DILocation(line: 0, scope: !8899)
!8906 = !DILocation(line: 111, column: 9, scope: !8899)
!8907 = !DILocation(line: 111, column: 12, scope: !8899)
!8908 = !DILocation(line: 111, column: 2, scope: !8899)
!8909 = !DILocation(line: 112, column: 4, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8899, file: !8813, line: 111, column: 21)
!8911 = !DILocation(line: 113, column: 4, scope: !8910)
!8912 = distinct !{!8912, !8908, !8913}
!8913 = !DILocation(line: 114, column: 2, scope: !8899)
!8914 = !DILocation(line: 116, column: 2, scope: !8899)
!8915 = distinct !DISubprogram(name: "strnlen", scope: !8813, file: !8813, line: 126, type: !8916, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8918)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{!239, !377, !239}
!8918 = !{!8919, !8920, !8921}
!8919 = !DILocalVariable(name: "s", arg: 1, scope: !8915, file: !8813, line: 126, type: !377)
!8920 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8915, file: !8813, line: 126, type: !239)
!8921 = !DILocalVariable(name: "n", scope: !8915, file: !8813, line: 128, type: !239)
!8922 = !DILocation(line: 0, scope: !8915)
!8923 = !DILocation(line: 130, column: 9, scope: !8915)
!8924 = !DILocation(line: 130, column: 12, scope: !8915)
!8925 = !DILocation(line: 130, column: 20, scope: !8915)
!8926 = !DILocation(line: 130, column: 2, scope: !8915)
!8927 = !DILocation(line: 131, column: 4, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8915, file: !8813, line: 130, column: 35)
!8929 = !DILocation(line: 132, column: 4, scope: !8928)
!8930 = distinct !{!8930, !8926, !8931}
!8931 = !DILocation(line: 133, column: 2, scope: !8915)
!8932 = !DILocation(line: 135, column: 2, scope: !8915)
!8933 = distinct !DISubprogram(name: "strcmp", scope: !8813, file: !8813, line: 145, type: !8934, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8936)
!8934 = !DISubroutineType(types: !8935)
!8935 = !{!103, !377, !377}
!8936 = !{!8937, !8938}
!8937 = !DILocalVariable(name: "s1", arg: 1, scope: !8933, file: !8813, line: 145, type: !377)
!8938 = !DILocalVariable(name: "s2", arg: 2, scope: !8933, file: !8813, line: 145, type: !377)
!8939 = !DILocation(line: 0, scope: !8933)
!8940 = !DILocation(line: 147, column: 10, scope: !8933)
!8941 = !DILocation(line: 147, column: 17, scope: !8933)
!8942 = !DILocation(line: 147, column: 14, scope: !8933)
!8943 = !DILocation(line: 147, column: 22, scope: !8933)
!8944 = !DILocation(line: 148, column: 5, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8933, file: !8813, line: 147, column: 40)
!8946 = !DILocation(line: 149, column: 5, scope: !8945)
!8947 = distinct !{!8947, !8948, !8949}
!8948 = !DILocation(line: 147, column: 2, scope: !8933)
!8949 = !DILocation(line: 150, column: 2, scope: !8933)
!8950 = !DILocation(line: 152, column: 9, scope: !8933)
!8951 = !DILocation(line: 152, column: 15, scope: !8933)
!8952 = !DILocation(line: 152, column: 13, scope: !8933)
!8953 = !DILocation(line: 152, column: 2, scope: !8933)
!8954 = distinct !DISubprogram(name: "strncmp", scope: !8813, file: !8813, line: 162, type: !8955, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8957)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!103, !377, !377, !239}
!8957 = !{!8958, !8959, !8960}
!8958 = !DILocalVariable(name: "s1", arg: 1, scope: !8954, file: !8813, line: 162, type: !377)
!8959 = !DILocalVariable(name: "s2", arg: 2, scope: !8954, file: !8813, line: 162, type: !377)
!8960 = !DILocalVariable(name: "n", arg: 3, scope: !8954, file: !8813, line: 162, type: !239)
!8961 = !DILocation(line: 0, scope: !8954)
!8962 = !DILocation(line: 164, column: 17, scope: !8954)
!8963 = !DILocation(line: 164, column: 21, scope: !8954)
!8964 = !DILocation(line: 164, column: 28, scope: !8954)
!8965 = !DILocation(line: 164, column: 25, scope: !8954)
!8966 = !DILocation(line: 164, column: 33, scope: !8954)
!8967 = !DILocation(line: 165, column: 5, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8954, file: !8813, line: 164, column: 51)
!8969 = !DILocation(line: 166, column: 5, scope: !8968)
!8970 = !DILocation(line: 167, column: 4, scope: !8968)
!8971 = distinct !{!8971, !8972, !8973}
!8972 = !DILocation(line: 164, column: 2, scope: !8954)
!8973 = !DILocation(line: 168, column: 2, scope: !8954)
!8974 = !DILocation(line: 170, column: 25, scope: !8954)
!8975 = !DILocation(line: 170, column: 31, scope: !8954)
!8976 = !DILocation(line: 170, column: 29, scope: !8954)
!8977 = !DILocation(line: 170, column: 9, scope: !8954)
!8978 = !DILocation(line: 170, column: 2, scope: !8954)
!8979 = distinct !DISubprogram(name: "strtok_r", scope: !8813, file: !8813, line: 180, type: !8980, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{!307, !307, !377, !600}
!8982 = !{!8983, !8984, !8985, !8986, !8987}
!8983 = !DILocalVariable(name: "str", arg: 1, scope: !8979, file: !8813, line: 180, type: !307)
!8984 = !DILocalVariable(name: "sep", arg: 2, scope: !8979, file: !8813, line: 180, type: !377)
!8985 = !DILocalVariable(name: "state", arg: 3, scope: !8979, file: !8813, line: 180, type: !600)
!8986 = !DILocalVariable(name: "start", scope: !8979, file: !8813, line: 182, type: !307)
!8987 = !DILocalVariable(name: "end", scope: !8979, file: !8813, line: 182, type: !307)
!8988 = !DILocation(line: 0, scope: !8979)
!8989 = !DILocation(line: 184, column: 10, scope: !8979)
!8990 = !DILocation(line: 184, column: 22, scope: !8979)
!8991 = !DILocation(line: 187, column: 9, scope: !8979)
!8992 = !DILocation(line: 187, column: 16, scope: !8979)
!8993 = !DILocation(line: 187, column: 19, scope: !8979)
!8994 = !DILocation(line: 187, column: 2, scope: !8979)
!8995 = !DILocation(line: 188, column: 8, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8979, file: !8813, line: 187, column: 40)
!8997 = distinct !{!8997, !8994, !8998}
!8998 = !DILocation(line: 189, column: 2, scope: !8979)
!8999 = !DILocation(line: 198, column: 9, scope: !8979)
!9000 = !DILocation(line: 198, column: 18, scope: !8979)
!9001 = !DILocation(line: 198, column: 17, scope: !8979)
!9002 = !DILocation(line: 198, column: 2, scope: !8979)
!9003 = !DILocation(line: 199, column: 6, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8979, file: !8813, line: 198, column: 37)
!9005 = !DILocation(line: 198, column: 14, scope: !8979)
!9006 = distinct !{!9006, !9002, !9007}
!9007 = !DILocation(line: 200, column: 2, scope: !8979)
!9008 = !DILocation(line: 203, column: 8, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !8813, line: 202, column: 20)
!9010 = distinct !DILexicalBlock(scope: !8979, file: !8813, line: 202, column: 6)
!9011 = !DILocation(line: 204, column: 16, scope: !9009)
!9012 = !DILocation(line: 205, column: 2, scope: !9009)
!9013 = !DILocation(line: 210, column: 1, scope: !8979)
!9014 = distinct !DISubprogram(name: "strcat", scope: !8813, file: !8813, line: 212, type: !8814, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !9015)
!9015 = !{!9016, !9017}
!9016 = !DILocalVariable(name: "dest", arg: 1, scope: !9014, file: !8813, line: 212, type: !8816)
!9017 = !DILocalVariable(name: "src", arg: 2, scope: !9014, file: !8813, line: 212, type: !8817)
!9018 = !DILocation(line: 0, scope: !9014)
!9019 = !DILocation(line: 214, column: 16, scope: !9014)
!9020 = !DILocation(line: 214, column: 14, scope: !9014)
!9021 = !DILocation(line: 214, column: 2, scope: !9014)
!9022 = !DILocation(line: 215, column: 2, scope: !9014)
!9023 = distinct !DISubprogram(name: "strncat", scope: !8813, file: !8813, line: 218, type: !8835, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !9024)
!9024 = !{!9025, !9026, !9027, !9028, !9029}
!9025 = !DILocalVariable(name: "dest", arg: 1, scope: !9023, file: !8813, line: 218, type: !8816)
!9026 = !DILocalVariable(name: "src", arg: 2, scope: !9023, file: !8813, line: 218, type: !8817)
!9027 = !DILocalVariable(name: "n", arg: 3, scope: !9023, file: !8813, line: 219, type: !239)
!9028 = !DILocalVariable(name: "orig_dest", scope: !9023, file: !8813, line: 221, type: !307)
!9029 = !DILocalVariable(name: "len", scope: !9023, file: !8813, line: 222, type: !239)
!9030 = !DILocation(line: 0, scope: !9023)
!9031 = !DILocation(line: 222, column: 15, scope: !9023)
!9032 = !DILocation(line: 224, column: 7, scope: !9023)
!9033 = !DILocation(line: 225, column: 14, scope: !9023)
!9034 = !DILocation(line: 225, column: 19, scope: !9023)
!9035 = !DILocation(line: 225, column: 11, scope: !9023)
!9036 = !DILocation(line: 225, column: 23, scope: !9023)
!9037 = !DILocation(line: 225, column: 28, scope: !9023)
!9038 = !DILocation(line: 225, column: 2, scope: !9023)
!9039 = !DILocation(line: 226, column: 17, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9023, file: !8813, line: 225, column: 38)
!9041 = !DILocation(line: 226, column: 8, scope: !9040)
!9042 = !DILocation(line: 226, column: 11, scope: !9040)
!9043 = distinct !{!9043, !9038, !9044}
!9044 = !DILocation(line: 227, column: 2, scope: !9023)
!9045 = !DILocation(line: 228, column: 8, scope: !9023)
!9046 = !DILocation(line: 230, column: 2, scope: !9023)
!9047 = distinct !DISubprogram(name: "memcmp", scope: !8813, file: !8813, line: 239, type: !9048, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !9050)
!9048 = !DISubroutineType(types: !9049)
!9049 = !{!103, !13, !13, !239}
!9050 = !{!9051, !9052, !9053, !9054, !9055}
!9051 = !DILocalVariable(name: "m1", arg: 1, scope: !9047, file: !8813, line: 239, type: !13)
!9052 = !DILocalVariable(name: "m2", arg: 2, scope: !9047, file: !8813, line: 239, type: !13)
!9053 = !DILocalVariable(name: "n", arg: 3, scope: !9047, file: !8813, line: 239, type: !239)
!9054 = !DILocalVariable(name: "c1", scope: !9047, file: !8813, line: 241, type: !377)
!9055 = !DILocalVariable(name: "c2", scope: !9047, file: !8813, line: 242, type: !377)
!9056 = !DILocation(line: 0, scope: !9047)
!9057 = !DILocation(line: 244, column: 7, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9047, file: !8813, line: 244, column: 6)
!9059 = !DILocation(line: 244, column: 6, scope: !9047)
!9060 = !DILocation(line: 248, column: 10, scope: !9047)
!9061 = !DILocation(line: 248, column: 14, scope: !9047)
!9062 = !DILocation(line: 248, column: 19, scope: !9047)
!9063 = !DILocation(line: 248, column: 2, scope: !9047)
!9064 = !DILocation(line: 248, column: 23, scope: !9047)
!9065 = !DILocation(line: 248, column: 30, scope: !9047)
!9066 = !DILocation(line: 248, column: 27, scope: !9047)
!9067 = !DILocation(line: 249, column: 5, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9047, file: !8813, line: 248, column: 36)
!9069 = !DILocation(line: 250, column: 5, scope: !9068)
!9070 = distinct !{!9070, !9063, !9071}
!9071 = !DILocation(line: 251, column: 2, scope: !9047)
!9072 = !DILocation(line: 253, column: 9, scope: !9047)
!9073 = !DILocation(line: 253, column: 15, scope: !9047)
!9074 = !DILocation(line: 253, column: 13, scope: !9047)
!9075 = !DILocation(line: 253, column: 2, scope: !9047)
!9076 = !DILocation(line: 254, column: 1, scope: !9047)
!9077 = distinct !DISubprogram(name: "memmove", scope: !8813, file: !8813, line: 263, type: !9078, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !9080)
!9078 = !DISubroutineType(types: !9079)
!9079 = !{!102, !102, !13, !239}
!9080 = !{!9081, !9082, !9083, !9084, !9085}
!9081 = !DILocalVariable(name: "d", arg: 1, scope: !9077, file: !8813, line: 263, type: !102)
!9082 = !DILocalVariable(name: "s", arg: 2, scope: !9077, file: !8813, line: 263, type: !13)
!9083 = !DILocalVariable(name: "n", arg: 3, scope: !9077, file: !8813, line: 263, type: !239)
!9084 = !DILocalVariable(name: "dest", scope: !9077, file: !8813, line: 265, type: !307)
!9085 = !DILocalVariable(name: "src", scope: !9077, file: !8813, line: 266, type: !377)
!9086 = !DILocation(line: 0, scope: !9077)
!9087 = !DILocation(line: 268, column: 21, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9077, file: !8813, line: 268, column: 6)
!9089 = !DILocation(line: 268, column: 28, scope: !9088)
!9090 = !DILocation(line: 268, column: 6, scope: !9077)
!9091 = !DILocation(line: 280, column: 12, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9088, file: !8813, line: 278, column: 9)
!9093 = !DILocation(line: 280, column: 3, scope: !9092)
!9094 = !DILocation(line: 275, column: 5, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !8813, line: 274, column: 17)
!9096 = distinct !DILexicalBlock(scope: !9088, file: !8813, line: 268, column: 33)
!9097 = !DILocation(line: 276, column: 14, scope: !9095)
!9098 = !DILocation(line: 276, column: 4, scope: !9095)
!9099 = !DILocation(line: 276, column: 12, scope: !9095)
!9100 = !DILocation(line: 274, column: 12, scope: !9096)
!9101 = !DILocation(line: 274, column: 3, scope: !9096)
!9102 = distinct !{!9102, !9101, !9103}
!9103 = !DILocation(line: 277, column: 3, scope: !9096)
!9104 = !DILocation(line: 281, column: 12, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9092, file: !8813, line: 280, column: 17)
!9106 = !DILocation(line: 281, column: 10, scope: !9105)
!9107 = !DILocation(line: 282, column: 8, scope: !9105)
!9108 = !DILocation(line: 283, column: 7, scope: !9105)
!9109 = !DILocation(line: 284, column: 5, scope: !9105)
!9110 = distinct !{!9110, !9093, !9111}
!9111 = !DILocation(line: 285, column: 3, scope: !9092)
!9112 = !DILocation(line: 288, column: 2, scope: !9077)
!9113 = distinct !DISubprogram(name: "memcpy", scope: !8813, file: !8813, line: 298, type: !9114, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !9118)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!102, !9116, !9117, !239}
!9116 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9117 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9118 = !{!9119, !9120, !9121, !9122, !9123}
!9119 = !DILocalVariable(name: "d", arg: 1, scope: !9113, file: !8813, line: 298, type: !9116)
!9120 = !DILocalVariable(name: "s", arg: 2, scope: !9113, file: !8813, line: 298, type: !9117)
!9121 = !DILocalVariable(name: "n", arg: 3, scope: !9113, file: !8813, line: 298, type: !239)
!9122 = !DILocalVariable(name: "d_byte", scope: !9113, file: !8813, line: 302, type: !1104)
!9123 = !DILocalVariable(name: "s_byte", scope: !9113, file: !8813, line: 303, type: !3335)
!9124 = !DILocation(line: 0, scope: !9113)
!9125 = !DILocation(line: 337, column: 11, scope: !9113)
!9126 = !DILocation(line: 337, column: 2, scope: !9113)
!9127 = !DILocation(line: 338, column: 25, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9113, file: !8813, line: 337, column: 16)
!9129 = !DILocation(line: 338, column: 17, scope: !9128)
!9130 = !DILocation(line: 338, column: 11, scope: !9128)
!9131 = !DILocation(line: 338, column: 15, scope: !9128)
!9132 = !DILocation(line: 339, column: 4, scope: !9128)
!9133 = distinct !{!9133, !9126, !9134}
!9134 = !DILocation(line: 340, column: 2, scope: !9113)
!9135 = !DILocation(line: 342, column: 2, scope: !9113)
!9136 = distinct !DISubprogram(name: "memset", scope: !8813, file: !8813, line: 352, type: !9137, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !9139)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{!102, !102, !103, !239}
!9139 = !{!9140, !9141, !9142, !9143, !9144}
!9140 = !DILocalVariable(name: "buf", arg: 1, scope: !9136, file: !8813, line: 352, type: !102)
!9141 = !DILocalVariable(name: "c", arg: 2, scope: !9136, file: !8813, line: 352, type: !103)
!9142 = !DILocalVariable(name: "n", arg: 3, scope: !9136, file: !8813, line: 352, type: !239)
!9143 = !DILocalVariable(name: "d_byte", scope: !9136, file: !8813, line: 356, type: !1104)
!9144 = !DILocalVariable(name: "c_byte", scope: !9136, file: !8813, line: 357, type: !174)
!9145 = !DILocation(line: 0, scope: !9136)
!9146 = !DILocation(line: 357, column: 25, scope: !9136)
!9147 = !DILocation(line: 389, column: 11, scope: !9136)
!9148 = !DILocation(line: 389, column: 2, scope: !9136)
!9149 = !DILocation(line: 390, column: 11, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9136, file: !8813, line: 389, column: 16)
!9151 = !DILocation(line: 390, column: 15, scope: !9150)
!9152 = !DILocation(line: 391, column: 4, scope: !9150)
!9153 = distinct !{!9153, !9148, !9154}
!9154 = !DILocation(line: 392, column: 2, scope: !9136)
!9155 = !DILocation(line: 394, column: 2, scope: !9136)
!9156 = distinct !DISubprogram(name: "memchr", scope: !8813, file: !8813, line: 404, type: !9157, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3332, retainedNodes: !9159)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{!102, !13, !103, !239}
!9159 = !{!9160, !9161, !9162, !9163}
!9160 = !DILocalVariable(name: "s", arg: 1, scope: !9156, file: !8813, line: 404, type: !13)
!9161 = !DILocalVariable(name: "c", arg: 2, scope: !9156, file: !8813, line: 404, type: !103)
!9162 = !DILocalVariable(name: "n", arg: 3, scope: !9156, file: !8813, line: 404, type: !239)
!9163 = !DILocalVariable(name: "p", scope: !9164, file: !8813, line: 407, type: !3335)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !8813, line: 406, column: 14)
!9165 = distinct !DILexicalBlock(scope: !9156, file: !8813, line: 406, column: 6)
!9166 = !DILocation(line: 0, scope: !9156)
!9167 = !DILocation(line: 406, column: 8, scope: !9165)
!9168 = !DILocation(line: 406, column: 6, scope: !9156)
!9169 = !DILocation(line: 409, column: 3, scope: !9164)
!9170 = !DILocation(line: 0, scope: !9164)
!9171 = !DILocation(line: 410, column: 8, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !8813, line: 410, column: 8)
!9173 = distinct !DILexicalBlock(scope: !9164, file: !8813, line: 409, column: 6)
!9174 = !DILocation(line: 410, column: 13, scope: !9172)
!9175 = !DILocation(line: 410, column: 8, scope: !9173)
!9176 = distinct !{!9176, !9169, !9177}
!9177 = !DILocation(line: 414, column: 20, scope: !9164)
!9178 = !DILocation(line: 417, column: 2, scope: !9156)
!9179 = !DILocation(line: 418, column: 1, scope: !9156)
!9180 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1056, file: !1056, line: 23, type: !4972, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9181)
!9181 = !{!9182}
!9182 = !DILocalVariable(name: "hook", arg: 1, scope: !9180, file: !1056, line: 23, type: !617)
!9183 = !DILocation(line: 0, scope: !9180)
!9184 = !DILocation(line: 25, column: 15, scope: !9180)
!9185 = !DILocation(line: 26, column: 1, scope: !9180)
!9186 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1056, file: !1056, line: 14, type: !618, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9187)
!9187 = !{!9188}
!9188 = !DILocalVariable(name: "c", arg: 1, scope: !9186, file: !1056, line: 14, type: !103)
!9189 = !DILocation(line: 0, scope: !9186)
!9190 = !DILocation(line: 18, column: 2, scope: !9186)
!9191 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1056, file: !1056, line: 28, type: !9192, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9194)
!9192 = !DISubroutineType(types: !9193)
!9193 = !{!103, !103, !1052}
!9194 = !{!9195, !9196}
!9195 = !DILocalVariable(name: "c", arg: 1, scope: !9191, file: !1056, line: 28, type: !103)
!9196 = !DILocalVariable(name: "stream", arg: 2, scope: !9191, file: !1056, line: 28, type: !1052)
!9197 = !DILocation(line: 0, scope: !9191)
!9198 = !DILocation(line: 30, column: 27, scope: !9191)
!9199 = !DILocation(line: 30, column: 50, scope: !9191)
!9200 = !DILocation(line: 30, column: 9, scope: !9191)
!9201 = !DILocation(line: 30, column: 2, scope: !9191)
!9202 = distinct !DISubprogram(name: "fputc", scope: !1056, file: !1056, line: 41, type: !9192, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9203)
!9203 = !{!9204, !9205}
!9204 = !DILocalVariable(name: "c", arg: 1, scope: !9202, file: !1056, line: 41, type: !103)
!9205 = !DILocalVariable(name: "stream", arg: 2, scope: !9202, file: !1056, line: 41, type: !1052)
!9206 = !DILocation(line: 0, scope: !9202)
!9207 = !DILocation(line: 43, column: 9, scope: !9202)
!9208 = !DILocation(line: 43, column: 2, scope: !9202)
!9209 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9210, file: !9210, line: 72, type: !9192, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9211)
!9210 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!9211 = !{!9212, !9213}
!9212 = !DILocalVariable(name: "c", arg: 1, scope: !9209, file: !9210, line: 72, type: !103)
!9213 = !DILocalVariable(name: "stream", arg: 2, scope: !9209, file: !9210, line: 72, type: !1052)
!9214 = !DILocation(line: 0, scope: !9209)
!9215 = !DILocation(line: 81, column: 2, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9209, file: !9210, line: 81, column: 2)
!9217 = !{i64 2151107244}
!9218 = !DILocation(line: 82, column: 9, scope: !9209)
!9219 = !DILocation(line: 82, column: 2, scope: !9209)
!9220 = distinct !DISubprogram(name: "fputs", scope: !1056, file: !1056, line: 46, type: !9221, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9224)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!103, !8817, !9223}
!9223 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1052)
!9224 = !{!9225, !9226, !9227, !9228}
!9225 = !DILocalVariable(name: "s", arg: 1, scope: !9220, file: !1056, line: 46, type: !8817)
!9226 = !DILocalVariable(name: "stream", arg: 2, scope: !9220, file: !1056, line: 46, type: !9223)
!9227 = !DILocalVariable(name: "len", scope: !9220, file: !1056, line: 48, type: !103)
!9228 = !DILocalVariable(name: "ret", scope: !9220, file: !1056, line: 49, type: !103)
!9229 = !DILocation(line: 0, scope: !9220)
!9230 = !DILocation(line: 48, column: 12, scope: !9220)
!9231 = !DILocation(line: 51, column: 8, scope: !9220)
!9232 = !DILocation(line: 53, column: 13, scope: !9220)
!9233 = !DILocation(line: 53, column: 9, scope: !9220)
!9234 = !DILocation(line: 53, column: 2, scope: !9220)
!9235 = distinct !DISubprogram(name: "fwrite", scope: !1056, file: !1056, line: 99, type: !9236, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9238)
!9236 = !DISubroutineType(types: !9237)
!9237 = !{!239, !9117, !239, !239, !9223}
!9238 = !{!9239, !9240, !9241, !9242}
!9239 = !DILocalVariable(name: "ptr", arg: 1, scope: !9235, file: !1056, line: 99, type: !9117)
!9240 = !DILocalVariable(name: "size", arg: 2, scope: !9235, file: !1056, line: 99, type: !239)
!9241 = !DILocalVariable(name: "nitems", arg: 3, scope: !9235, file: !1056, line: 99, type: !239)
!9242 = !DILocalVariable(name: "stream", arg: 4, scope: !9235, file: !1056, line: 100, type: !9223)
!9243 = !DILocation(line: 0, scope: !9235)
!9244 = !DILocation(line: 102, column: 9, scope: !9235)
!9245 = !DILocation(line: 102, column: 2, scope: !9235)
!9246 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9210, file: !9210, line: 96, type: !9236, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9247)
!9247 = !{!9248, !9249, !9250, !9251}
!9248 = !DILocalVariable(name: "ptr", arg: 1, scope: !9246, file: !9210, line: 96, type: !9117)
!9249 = !DILocalVariable(name: "size", arg: 2, scope: !9246, file: !9210, line: 96, type: !239)
!9250 = !DILocalVariable(name: "nitems", arg: 3, scope: !9246, file: !9210, line: 96, type: !239)
!9251 = !DILocalVariable(name: "stream", arg: 4, scope: !9246, file: !9210, line: 96, type: !9223)
!9252 = !DILocation(line: 0, scope: !9246)
!9253 = !DILocation(line: 107, column: 2, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9246, file: !9210, line: 107, column: 2)
!9255 = !{i64 2151107348}
!9256 = !DILocation(line: 108, column: 9, scope: !9246)
!9257 = !DILocation(line: 108, column: 2, scope: !9246)
!9258 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1056, file: !1056, line: 56, type: !9236, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9259)
!9259 = !{!9260, !9261, !9262, !9263, !9264, !9265, !9266, !9267}
!9260 = !DILocalVariable(name: "ptr", arg: 1, scope: !9258, file: !1056, line: 56, type: !9117)
!9261 = !DILocalVariable(name: "size", arg: 2, scope: !9258, file: !1056, line: 56, type: !239)
!9262 = !DILocalVariable(name: "nitems", arg: 3, scope: !9258, file: !1056, line: 57, type: !239)
!9263 = !DILocalVariable(name: "stream", arg: 4, scope: !9258, file: !1056, line: 57, type: !9223)
!9264 = !DILocalVariable(name: "i", scope: !9258, file: !1056, line: 59, type: !239)
!9265 = !DILocalVariable(name: "j", scope: !9258, file: !1056, line: 60, type: !239)
!9266 = !DILocalVariable(name: "p", scope: !9258, file: !1056, line: 61, type: !3335)
!9267 = !DILabel(scope: !9258, name: "done", file: !1056, line: 82)
!9268 = !DILocation(line: 0, scope: !9258)
!9269 = !DILocation(line: 63, column: 14, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9258, file: !1056, line: 63, column: 6)
!9271 = !DILocation(line: 63, column: 24, scope: !9270)
!9272 = !DILocation(line: 72, column: 3, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9258, file: !1056, line: 70, column: 5)
!9274 = !DILocation(line: 0, scope: !9273)
!9275 = !DILocation(line: 73, column: 8, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !1056, line: 73, column: 8)
!9277 = distinct !DILexicalBlock(scope: !9273, file: !1056, line: 72, column: 6)
!9278 = !DILocation(line: 73, column: 29, scope: !9276)
!9279 = !DILocation(line: 73, column: 27, scope: !9276)
!9280 = !DILocation(line: 73, column: 21, scope: !9276)
!9281 = !DILocation(line: 73, column: 33, scope: !9276)
!9282 = !DILocation(line: 73, column: 8, scope: !9277)
!9283 = !DILocation(line: 76, column: 5, scope: !9277)
!9284 = !DILocation(line: 77, column: 14, scope: !9273)
!9285 = !DILocation(line: 77, column: 3, scope: !9277)
!9286 = distinct !{!9286, !9272, !9287}
!9287 = !DILocation(line: 77, column: 17, scope: !9273)
!9288 = !DILocation(line: 79, column: 4, scope: !9273)
!9289 = !DILocation(line: 80, column: 13, scope: !9258)
!9290 = !DILocation(line: 80, column: 2, scope: !9273)
!9291 = distinct !{!9291, !9292, !9293}
!9292 = !DILocation(line: 70, column: 2, scope: !9258)
!9293 = !DILocation(line: 80, column: 16, scope: !9258)
!9294 = !DILocation(line: 82, column: 1, scope: !9258)
!9295 = !DILocation(line: 83, column: 17, scope: !9258)
!9296 = !DILocation(line: 83, column: 2, scope: !9258)
!9297 = !DILocation(line: 84, column: 1, scope: !9258)
!9298 = distinct !DISubprogram(name: "puts", scope: !1056, file: !1056, line: 106, type: !9299, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1049, retainedNodes: !9301)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{!103, !377}
!9301 = !{!9302}
!9302 = !DILocalVariable(name: "s", arg: 1, scope: !9298, file: !1056, line: 106, type: !377)
!9303 = !DILocation(line: 0, scope: !9298)
!9304 = !DILocation(line: 108, column: 6, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9298, file: !1056, line: 108, column: 6)
!9306 = !DILocation(line: 108, column: 23, scope: !9305)
!9307 = !DILocation(line: 108, column: 6, scope: !9298)
!9308 = !DILocation(line: 112, column: 9, scope: !9298)
!9309 = !DILocation(line: 112, column: 29, scope: !9298)
!9310 = !DILocation(line: 112, column: 2, scope: !9298)
!9311 = !DILocation(line: 113, column: 1, scope: !9298)
!9312 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1063, file: !1063, line: 12, type: !9313, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9319)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!9315, !321}
!9315 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !9316)
!9316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !9317)
!9317 = !{!9318}
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9316, file: !320, line: 66, baseType: !319, size: 64)
!9319 = !{!9320, !9321}
!9320 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9312, file: !1063, line: 12, type: !321)
!9321 = !DILocalVariable(name: "now_ticks", scope: !9312, file: !1063, line: 14, type: !203)
!9322 = !DILocation(line: 0, scope: !9312)
!9323 = !DILocation(line: 14, column: 22, scope: !9312)
!9324 = !DILocation(line: 16, column: 9, scope: !9312)
!9325 = !DILocation(line: 17, column: 1, scope: !9312)
!9326 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1063, file: !1063, line: 103, type: !9327, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9470)
!9327 = !DISubroutineType(types: !9328)
!9328 = !{!103, !9329, !13, !9315}
!9329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9330, size: 32)
!9330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9331)
!9331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !267, line: 29, size: 192, elements: !9332)
!9332 = !{!9333, !9334, !9335, !9336, !9337, !9442}
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9331, file: !267, line: 35, baseType: !270, size: 16)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9331, file: !267, line: 40, baseType: !272, size: 32, offset: 32)
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9331, file: !267, line: 45, baseType: !272, size: 32, offset: 64)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9331, file: !267, line: 51, baseType: !275, size: 32, offset: 96)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9331, file: !267, line: 56, baseType: !9338, size: 32, offset: 128)
!9338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9339, size: 32)
!9339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !110, line: 2720, size: 160, elements: !9340)
!9340 = !{!9341, !9360, !9440, !9441}
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9339, file: !110, line: 2722, baseType: !9342, size: 64)
!9342 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !9343)
!9343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !9344)
!9344 = !{!9345}
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9343, file: !167, line: 232, baseType: !9346, size: 64)
!9346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !9347)
!9347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !9348)
!9348 = !{!9349, !9355}
!9349 = !DIDerivedType(tag: DW_TAG_member, scope: !9347, file: !141, line: 38, baseType: !9350, size: 32)
!9350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9347, file: !141, line: 38, size: 32, elements: !9351)
!9351 = !{!9352, !9354}
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9350, file: !141, line: 39, baseType: !9353, size: 32)
!9353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9347, size: 32)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9350, file: !141, line: 40, baseType: !9353, size: 32)
!9355 = !DIDerivedType(tag: DW_TAG_member, scope: !9347, file: !141, line: 42, baseType: !9356, size: 32, offset: 32)
!9356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9347, file: !141, line: 42, size: 32, elements: !9357)
!9357 = !{!9358, !9359}
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9356, file: !141, line: 43, baseType: !9353, size: 32)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9356, file: !141, line: 44, baseType: !9353, size: 32)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9339, file: !110, line: 2724, baseType: !9361, size: 32, offset: 64)
!9361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9362, size: 32)
!9362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !9363)
!9363 = !{!9364, !9404, !9416, !9417, !9418, !9419, !9420, !9435}
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9362, file: !131, line: 247, baseType: !9365, size: 384)
!9365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !9366)
!9366 = !{!9367, !9378, !9380, !9381, !9382, !9391, !9392, !9393}
!9367 = !DIDerivedType(tag: DW_TAG_member, scope: !9365, file: !131, line: 60, baseType: !9368, size: 64)
!9368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9365, file: !131, line: 60, size: 64, elements: !9369)
!9369 = !{!9370, !9372}
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9368, file: !131, line: 61, baseType: !9371, size: 64)
!9371 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !9347)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9368, file: !131, line: 62, baseType: !9373, size: 64)
!9373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !9374)
!9374 = !{!9375}
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9373, file: !157, line: 50, baseType: !9376, size: 64)
!9376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9377, size: 64, elements: !162)
!9377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9373, size: 32)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9365, file: !131, line: 68, baseType: !9379, size: 32, offset: 64)
!9379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9342, size: 32)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9365, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9365, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!9382 = !DIDerivedType(tag: DW_TAG_member, scope: !9365, file: !131, line: 90, baseType: !9383, size: 16, offset: 112)
!9383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9365, file: !131, line: 90, size: 16, elements: !9384)
!9384 = !{!9385, !9390}
!9385 = !DIDerivedType(tag: DW_TAG_member, scope: !9383, file: !131, line: 91, baseType: !9386, size: 16)
!9386 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9383, file: !131, line: 91, size: 16, elements: !9387)
!9387 = !{!9388, !9389}
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9386, file: !131, line: 96, baseType: !183, size: 8)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9386, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9383, file: !131, line: 100, baseType: !187, size: 16)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9365, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9365, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9365, file: !131, line: 131, baseType: !9394, size: 192, offset: 192)
!9394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !9395)
!9395 = !{!9396, !9397, !9403}
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9394, file: !167, line: 245, baseType: !9371, size: 64)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9394, file: !167, line: 246, baseType: !9398, size: 32, offset: 64)
!9398 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !9399)
!9399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9400, size: 32)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{null, !9402}
!9402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9394, size: 32)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9394, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9362, file: !131, line: 250, baseType: !9405, size: 288, offset: 384)
!9405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !9406)
!9406 = !{!9407, !9408, !9409, !9410, !9411, !9412, !9413, !9414, !9415}
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9405, file: !207, line: 26, baseType: !190, size: 32)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9405, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9405, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9405, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9405, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9405, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9405, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9405, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9405, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9362, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9362, file: !131, line: 256, baseType: !9342, size: 64, offset: 704)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9362, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9362, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9362, file: !131, line: 325, baseType: !9421, size: 32, offset: 1056)
!9421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9422, size: 32)
!9422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !9423)
!9423 = !{!9424, !9430, !9431}
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9422, file: !110, line: 5074, baseType: !9425, size: 96)
!9425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !9426)
!9426 = !{!9427, !9428, !9429}
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9425, file: !232, line: 57, baseType: !235, size: 32)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9425, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9425, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9422, file: !110, line: 5075, baseType: !9342, size: 64, offset: 96)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9422, file: !110, line: 5076, baseType: !9432, size: 32, offset: 160)
!9432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !9433)
!9433 = !{!9434}
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9432, file: !244, line: 52, baseType: !22, size: 32)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9362, file: !131, line: 343, baseType: !9436, size: 64, offset: 1088)
!9436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !9437)
!9437 = !{!9438, !9439}
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9436, file: !207, line: 63, baseType: !190, size: 32)
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9436, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9339, file: !110, line: 2727, baseType: !190, size: 32, offset: 96)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9339, file: !110, line: 2730, baseType: !103, size: 32, offset: 128)
!9442 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9331, file: !267, line: 67, baseType: !9443, size: 32, offset: 160)
!9443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9444, size: 32)
!9444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9445)
!9445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9446, size: 32)
!9446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9447)
!9447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !267, line: 85, size: 96, elements: !9448)
!9448 = !{!9449, !9450, !9465}
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9447, file: !267, line: 91, baseType: !279, size: 8)
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9447, file: !267, line: 93, baseType: !9451, size: 32, offset: 32)
!9451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9452)
!9452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9453, size: 32)
!9453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !110, line: 4204, size: 352, elements: !9454)
!9454 = !{!9455, !9456, !9457, !9458, !9459, !9460, !9461, !9462, !9463, !9464}
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9453, file: !110, line: 4206, baseType: !9342, size: 64)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9453, file: !110, line: 4208, baseType: !9432, size: 32, offset: 64)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9453, file: !110, line: 4210, baseType: !239, size: 32, offset: 96)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9453, file: !110, line: 4212, baseType: !190, size: 32, offset: 128)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9453, file: !110, line: 4214, baseType: !307, size: 32, offset: 160)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9453, file: !110, line: 4216, baseType: !307, size: 32, offset: 192)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9453, file: !110, line: 4218, baseType: !307, size: 32, offset: 224)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9453, file: !110, line: 4220, baseType: !307, size: 32, offset: 256)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9453, file: !110, line: 4222, baseType: !190, size: 32, offset: 288)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9453, file: !110, line: 4227, baseType: !173, size: 8, offset: 320)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9447, file: !267, line: 96, baseType: !9466, size: 32, offset: 64)
!9466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9467)
!9467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9468, size: 32)
!9468 = !DISubroutineType(types: !9469)
!9469 = !{null, !9329}
!9470 = !{!9471, !9472, !9473, !9474, !9475}
!9471 = !DILocalVariable(name: "chan", arg: 1, scope: !9326, file: !1063, line: 103, type: !9329)
!9472 = !DILocalVariable(name: "msg", arg: 2, scope: !9326, file: !1063, line: 103, type: !13)
!9473 = !DILocalVariable(name: "timeout", arg: 3, scope: !9326, file: !1063, line: 103, type: !9315)
!9474 = !DILocalVariable(name: "err", scope: !9326, file: !1063, line: 105, type: !103)
!9475 = !DILocalVariable(name: "end_ticks", scope: !9326, file: !1063, line: 106, type: !321)
!9476 = !DILocation(line: 0, scope: !9326)
!9477 = !DILocation(line: 106, column: 23, scope: !9326)
!9478 = !DILocation(line: 108, column: 2, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9480, file: !1063, line: 108, column: 2)
!9480 = distinct !DILexicalBlock(scope: !9326, file: !1063, line: 108, column: 2)
!9481 = !DILocation(line: 108, column: 2, scope: !9480)
!9482 = !DILocation(line: 108, column: 2, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9479, file: !1063, line: 108, column: 2)
!9484 = !DILocation(line: 109, column: 2, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !1063, line: 109, column: 2)
!9486 = distinct !DILexicalBlock(scope: !9326, file: !1063, line: 109, column: 2)
!9487 = !DILocation(line: 109, column: 2, scope: !9486)
!9488 = !DILocation(line: 109, column: 2, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9485, file: !1063, line: 109, column: 2)
!9490 = !DILocation(line: 110, column: 2, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9492, file: !1063, line: 110, column: 2)
!9492 = distinct !DILexicalBlock(scope: !9326, file: !1063, line: 110, column: 2)
!9493 = !DILocation(line: 110, column: 2, scope: !9492)
!9494 = !DILocation(line: 110, column: 2, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9491, file: !1063, line: 110, column: 2)
!9496 = !DILocation(line: 112, column: 12, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9326, file: !1063, line: 112, column: 6)
!9498 = !DILocation(line: 112, column: 22, scope: !9497)
!9499 = !DILocation(line: 112, column: 30, scope: !9497)
!9500 = !DILocation(line: 112, column: 61, scope: !9497)
!9501 = !DILocation(line: 112, column: 55, scope: !9497)
!9502 = !DILocation(line: 112, column: 34, scope: !9497)
!9503 = !DILocation(line: 112, column: 6, scope: !9326)
!9504 = !DILocation(line: 116, column: 27, scope: !9326)
!9505 = !DILocation(line: 116, column: 8, scope: !9326)
!9506 = !DILocation(line: 117, column: 6, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9326, file: !1063, line: 117, column: 6)
!9508 = !DILocation(line: 117, column: 6, scope: !9326)
!9509 = !DILocation(line: 121, column: 15, scope: !9326)
!9510 = !DILocation(line: 121, column: 35, scope: !9326)
!9511 = !DILocation(line: 121, column: 29, scope: !9326)
!9512 = !DILocation(line: 121, column: 2, scope: !9326)
!9513 = !DILocation(line: 123, column: 8, scope: !9326)
!9514 = !DILocation(line: 125, column: 23, scope: !9326)
!9515 = !DILocation(line: 125, column: 2, scope: !9326)
!9516 = !DILocation(line: 127, column: 2, scope: !9326)
!9517 = !DILocation(line: 128, column: 1, scope: !9326)
!9518 = distinct !DISubprogram(name: "k_mutex_lock", scope: !4037, file: !4037, line: 927, type: !9519, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9521)
!9519 = !DISubroutineType(types: !9520)
!9520 = !{!103, !9338, !9315}
!9521 = !{!9522, !9523}
!9522 = !DILocalVariable(name: "mutex", arg: 1, scope: !9518, file: !4037, line: 927, type: !9338)
!9523 = !DILocalVariable(name: "timeout", arg: 2, scope: !9518, file: !4037, line: 927, type: !9315)
!9524 = !DILocation(line: 0, scope: !9518)
!9525 = !DILocation(line: 936, column: 2, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9518, file: !4037, line: 936, column: 2)
!9527 = !{i64 2151048985}
!9528 = !DILocation(line: 937, column: 9, scope: !9518)
!9529 = !DILocation(line: 937, column: 2, scope: !9518)
!9530 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1063, file: !1063, line: 66, type: !9531, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9533)
!9531 = !DISubroutineType(types: !9532)
!9532 = !{!103, !9329, !321}
!9533 = !{!9534, !9535, !9536, !9537, !9538, !9540}
!9534 = !DILocalVariable(name: "chan", arg: 1, scope: !9530, file: !1063, line: 66, type: !9329)
!9535 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9530, file: !1063, line: 66, type: !321)
!9536 = !DILocalVariable(name: "last_error", scope: !9530, file: !1063, line: 68, type: !103)
!9537 = !DILocalVariable(name: "err", scope: !9530, file: !1063, line: 68, type: !103)
!9538 = !DILocalVariable(name: "obs", scope: !9539, file: !1063, line: 70, type: !9443)
!9539 = distinct !DILexicalBlock(scope: !9530, file: !1063, line: 70, column: 2)
!9540 = !DILocalVariable(name: "obs", scope: !9541, file: !1063, line: 81, type: !9443)
!9541 = distinct !DILexicalBlock(scope: !9530, file: !1063, line: 81, column: 2)
!9542 = !DILocation(line: 0, scope: !9530)
!9543 = !DILocation(line: 70, column: 54, scope: !9539)
!9544 = !DILocation(line: 0, scope: !9539)
!9545 = !DILocation(line: 70, column: 65, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9539, file: !1063, line: 70, column: 2)
!9547 = !DILocation(line: 70, column: 70, scope: !9546)
!9548 = !DILocation(line: 70, column: 2, scope: !9539)
!9549 = !DILocation(line: 81, column: 54, scope: !9541)
!9550 = !DILocation(line: 81, column: 65, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9541, file: !1063, line: 81, column: 2)
!9552 = !DILocation(line: 0, scope: !9541)
!9553 = !DILocation(line: 81, column: 70, scope: !9551)
!9554 = !DILocation(line: 81, column: 2, scope: !9541)
!9555 = !DILocation(line: 71, column: 15, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !1063, line: 71, column: 7)
!9557 = distinct !DILexicalBlock(scope: !9546, file: !1063, line: 70, column: 86)
!9558 = !DILocation(line: 71, column: 23, scope: !9556)
!9559 = !DILocation(line: 71, column: 35, scope: !9556)
!9560 = !DILocation(line: 71, column: 44, scope: !9556)
!9561 = !DILocation(line: 71, column: 7, scope: !9557)
!9562 = !DILocation(line: 72, column: 4, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9556, file: !1063, line: 71, column: 54)
!9564 = !DILocation(line: 73, column: 3, scope: !9563)
!9565 = !DILocation(line: 70, column: 79, scope: !9546)
!9566 = distinct !{!9566, !9548, !9567}
!9567 = !DILocation(line: 74, column: 2, scope: !9539)
!9568 = !DILocation(line: 100, column: 2, scope: !9530)
!9569 = !DILocation(line: 82, column: 15, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1063, line: 82, column: 7)
!9571 = distinct !DILexicalBlock(scope: !9551, file: !1063, line: 81, column: 86)
!9572 = !DILocation(line: 82, column: 23, scope: !9570)
!9573 = !DILocation(line: 82, column: 35, scope: !9570)
!9574 = !DILocation(line: 82, column: 41, scope: !9570)
!9575 = !DILocation(line: 82, column: 7, scope: !9571)
!9576 = !DILocation(line: 83, column: 43, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9570, file: !1063, line: 82, column: 51)
!9578 = !DILocation(line: 83, column: 10, scope: !9577)
!9579 = !DILocation(line: 84, column: 4, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !1063, line: 84, column: 4)
!9581 = distinct !DILexicalBlock(scope: !9577, file: !1063, line: 84, column: 4)
!9582 = !DILocation(line: 84, column: 4, scope: !9581)
!9583 = !DILocation(line: 84, column: 4, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9580, file: !1063, line: 84, column: 4)
!9585 = !DILocation(line: 81, column: 79, scope: !9551)
!9586 = distinct !{!9586, !9554, !9587}
!9587 = !DILocation(line: 92, column: 2, scope: !9541)
!9588 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !4037, file: !4037, line: 944, type: !9589, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9591)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{!103, !9338}
!9591 = !{!9592}
!9592 = !DILocalVariable(name: "mutex", arg: 1, scope: !9588, file: !4037, line: 944, type: !9338)
!9593 = !DILocation(line: 0, scope: !9588)
!9594 = !DILocation(line: 952, column: 2, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9588, file: !4037, line: 952, column: 2)
!9596 = !{i64 2151049053}
!9597 = !DILocation(line: 953, column: 9, scope: !9588)
!9598 = !DILocation(line: 953, column: 2, scope: !9588)
!9599 = distinct !DISubprogram(name: "k_msgq_put", scope: !4037, file: !4037, line: 1129, type: !9600, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9602)
!9600 = !DISubroutineType(types: !9601)
!9601 = !{!103, !9452, !13, !9315}
!9602 = !{!9603, !9604, !9605}
!9603 = !DILocalVariable(name: "msgq", arg: 1, scope: !9599, file: !4037, line: 1129, type: !9452)
!9604 = !DILocalVariable(name: "data", arg: 2, scope: !9599, file: !4037, line: 1129, type: !13)
!9605 = !DILocalVariable(name: "timeout", arg: 3, scope: !9599, file: !4037, line: 1129, type: !9315)
!9606 = !DILocation(line: 0, scope: !9599)
!9607 = !DILocation(line: 1139, column: 2, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9599, file: !4037, line: 1139, column: 2)
!9609 = !{i64 2151049801}
!9610 = !DILocation(line: 1140, column: 9, scope: !9599)
!9611 = !DILocation(line: 1140, column: 2, scope: !9599)
!9612 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1063, file: !1063, line: 130, type: !9613, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9615)
!9613 = !DISubroutineType(types: !9614)
!9614 = !{!103, !9329, !102, !9315}
!9615 = !{!9616, !9617, !9618, !9619}
!9616 = !DILocalVariable(name: "chan", arg: 1, scope: !9612, file: !1063, line: 130, type: !9329)
!9617 = !DILocalVariable(name: "msg", arg: 2, scope: !9612, file: !1063, line: 130, type: !102)
!9618 = !DILocalVariable(name: "timeout", arg: 3, scope: !9612, file: !1063, line: 130, type: !9315)
!9619 = !DILocalVariable(name: "err", scope: !9612, file: !1063, line: 132, type: !103)
!9620 = !DILocation(line: 0, scope: !9612)
!9621 = !DILocation(line: 134, column: 2, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9623, file: !1063, line: 134, column: 2)
!9623 = distinct !DILexicalBlock(scope: !9612, file: !1063, line: 134, column: 2)
!9624 = !DILocation(line: 134, column: 2, scope: !9623)
!9625 = !DILocation(line: 134, column: 2, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9622, file: !1063, line: 134, column: 2)
!9627 = !DILocation(line: 135, column: 2, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9629, file: !1063, line: 135, column: 2)
!9629 = distinct !DILexicalBlock(scope: !9612, file: !1063, line: 135, column: 2)
!9630 = !DILocation(line: 135, column: 2, scope: !9629)
!9631 = !DILocation(line: 135, column: 2, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9628, file: !1063, line: 135, column: 2)
!9633 = !DILocation(line: 136, column: 2, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9635, file: !1063, line: 136, column: 2)
!9635 = distinct !DILexicalBlock(scope: !9612, file: !1063, line: 136, column: 2)
!9636 = !DILocation(line: 136, column: 2, scope: !9635)
!9637 = !DILocation(line: 136, column: 2, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9634, file: !1063, line: 136, column: 2)
!9639 = !DILocation(line: 138, column: 27, scope: !9612)
!9640 = !DILocation(line: 138, column: 8, scope: !9612)
!9641 = !DILocation(line: 139, column: 6, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9612, file: !1063, line: 139, column: 6)
!9643 = !DILocation(line: 139, column: 6, scope: !9612)
!9644 = !DILocation(line: 143, column: 20, scope: !9612)
!9645 = !DILocation(line: 143, column: 35, scope: !9612)
!9646 = !DILocation(line: 143, column: 29, scope: !9612)
!9647 = !DILocation(line: 143, column: 2, scope: !9612)
!9648 = !DILocation(line: 145, column: 30, scope: !9612)
!9649 = !DILocation(line: 145, column: 9, scope: !9612)
!9650 = !DILocation(line: 145, column: 2, scope: !9612)
!9651 = !DILocation(line: 146, column: 1, scope: !9612)
!9652 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1063, file: !1063, line: 148, type: !9653, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9655)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!103, !9329, !9315}
!9655 = !{!9656, !9657, !9658, !9659}
!9656 = !DILocalVariable(name: "chan", arg: 1, scope: !9652, file: !1063, line: 148, type: !9329)
!9657 = !DILocalVariable(name: "timeout", arg: 2, scope: !9652, file: !1063, line: 148, type: !9315)
!9658 = !DILocalVariable(name: "err", scope: !9652, file: !1063, line: 150, type: !103)
!9659 = !DILocalVariable(name: "end_ticks", scope: !9652, file: !1063, line: 151, type: !321)
!9660 = !DILocation(line: 0, scope: !9652)
!9661 = !DILocation(line: 151, column: 23, scope: !9652)
!9662 = !DILocation(line: 153, column: 2, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !1063, line: 153, column: 2)
!9664 = distinct !DILexicalBlock(scope: !9652, file: !1063, line: 153, column: 2)
!9665 = !DILocation(line: 153, column: 2, scope: !9664)
!9666 = !DILocation(line: 153, column: 2, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9663, file: !1063, line: 153, column: 2)
!9668 = !DILocation(line: 154, column: 2, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !1063, line: 154, column: 2)
!9670 = distinct !DILexicalBlock(scope: !9652, file: !1063, line: 154, column: 2)
!9671 = !DILocation(line: 154, column: 2, scope: !9670)
!9672 = !DILocation(line: 154, column: 2, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9669, file: !1063, line: 154, column: 2)
!9674 = !DILocation(line: 156, column: 27, scope: !9652)
!9675 = !DILocation(line: 156, column: 8, scope: !9652)
!9676 = !DILocation(line: 157, column: 6, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9652, file: !1063, line: 157, column: 6)
!9678 = !DILocation(line: 157, column: 6, scope: !9652)
!9679 = !DILocation(line: 161, column: 8, scope: !9652)
!9680 = !DILocation(line: 163, column: 23, scope: !9652)
!9681 = !DILocation(line: 163, column: 2, scope: !9652)
!9682 = !DILocation(line: 165, column: 2, scope: !9652)
!9683 = !DILocation(line: 166, column: 1, scope: !9652)
!9684 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1063, file: !1063, line: 168, type: !9653, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9685)
!9685 = !{!9686, !9687, !9688}
!9686 = !DILocalVariable(name: "chan", arg: 1, scope: !9684, file: !1063, line: 168, type: !9329)
!9687 = !DILocalVariable(name: "timeout", arg: 2, scope: !9684, file: !1063, line: 168, type: !9315)
!9688 = !DILocalVariable(name: "err", scope: !9684, file: !1063, line: 173, type: !103)
!9689 = !DILocation(line: 0, scope: !9684)
!9690 = !DILocation(line: 170, column: 2, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9692, file: !1063, line: 170, column: 2)
!9692 = distinct !DILexicalBlock(scope: !9684, file: !1063, line: 170, column: 2)
!9693 = !DILocation(line: 170, column: 2, scope: !9692)
!9694 = !DILocation(line: 170, column: 2, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9691, file: !1063, line: 170, column: 2)
!9696 = !DILocation(line: 171, column: 2, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9698, file: !1063, line: 171, column: 2)
!9698 = distinct !DILexicalBlock(scope: !9684, file: !1063, line: 171, column: 2)
!9699 = !DILocation(line: 171, column: 2, scope: !9698)
!9700 = !DILocation(line: 171, column: 2, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9697, file: !1063, line: 171, column: 2)
!9702 = !DILocation(line: 173, column: 31, scope: !9684)
!9703 = !DILocation(line: 173, column: 12, scope: !9684)
!9704 = !DILocation(line: 180, column: 1, scope: !9684)
!9705 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1063, file: !1063, line: 182, type: !9706, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9708)
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!103, !9329}
!9708 = !{!9709, !9710}
!9709 = !DILocalVariable(name: "chan", arg: 1, scope: !9705, file: !1063, line: 182, type: !9329)
!9710 = !DILocalVariable(name: "err", scope: !9705, file: !1063, line: 187, type: !103)
!9711 = !DILocation(line: 0, scope: !9705)
!9712 = !DILocation(line: 184, column: 2, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !1063, line: 184, column: 2)
!9714 = distinct !DILexicalBlock(scope: !9705, file: !1063, line: 184, column: 2)
!9715 = !DILocation(line: 184, column: 2, scope: !9714)
!9716 = !DILocation(line: 184, column: 2, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9713, file: !1063, line: 184, column: 2)
!9718 = !DILocation(line: 185, column: 2, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9720, file: !1063, line: 185, column: 2)
!9720 = distinct !DILexicalBlock(scope: !9705, file: !1063, line: 185, column: 2)
!9721 = !DILocation(line: 185, column: 2, scope: !9720)
!9722 = !DILocation(line: 185, column: 2, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9719, file: !1063, line: 185, column: 2)
!9724 = !DILocation(line: 187, column: 33, scope: !9705)
!9725 = !DILocation(line: 187, column: 12, scope: !9705)
!9726 = !DILocation(line: 189, column: 2, scope: !9705)
!9727 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1063, file: !1063, line: 192, type: !9728, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9731)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!103, !9445, !9730, !9315}
!9730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9329, size: 32)
!9731 = !{!9732, !9733, !9734}
!9732 = !DILocalVariable(name: "sub", arg: 1, scope: !9727, file: !1063, line: 192, type: !9445)
!9733 = !DILocalVariable(name: "chan", arg: 2, scope: !9727, file: !1063, line: 192, type: !9730)
!9734 = !DILocalVariable(name: "timeout", arg: 3, scope: !9727, file: !1063, line: 193, type: !9315)
!9735 = !DILocation(line: 0, scope: !9727)
!9736 = !DILocation(line: 195, column: 2, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !1063, line: 195, column: 2)
!9738 = distinct !DILexicalBlock(scope: !9727, file: !1063, line: 195, column: 2)
!9739 = !DILocation(line: 195, column: 2, scope: !9738)
!9740 = !DILocation(line: 195, column: 2, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !1063, line: 195, column: 2)
!9742 = !DILocation(line: 196, column: 2, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9744, file: !1063, line: 196, column: 2)
!9744 = distinct !DILexicalBlock(scope: !9727, file: !1063, line: 196, column: 2)
!9745 = !DILocation(line: 196, column: 2, scope: !9744)
!9746 = !DILocation(line: 196, column: 2, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9743, file: !1063, line: 196, column: 2)
!9748 = !DILocation(line: 197, column: 2, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !1063, line: 197, column: 2)
!9750 = distinct !DILexicalBlock(scope: !9727, file: !1063, line: 197, column: 2)
!9751 = !DILocation(line: 197, column: 2, scope: !9750)
!9752 = !DILocation(line: 197, column: 2, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9749, file: !1063, line: 197, column: 2)
!9754 = !DILocation(line: 199, column: 11, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9727, file: !1063, line: 199, column: 6)
!9756 = !DILocation(line: 199, column: 17, scope: !9755)
!9757 = !DILocation(line: 199, column: 6, scope: !9727)
!9758 = !DILocation(line: 203, column: 32, scope: !9727)
!9759 = !DILocation(line: 203, column: 9, scope: !9727)
!9760 = !DILocation(line: 203, column: 2, scope: !9727)
!9761 = !DILocation(line: 204, column: 1, scope: !9727)
!9762 = distinct !DISubprogram(name: "k_msgq_get", scope: !4037, file: !4037, line: 1147, type: !9763, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !9765)
!9763 = !DISubroutineType(types: !9764)
!9764 = !{!103, !9452, !102, !9315}
!9765 = !{!9766, !9767, !9768}
!9766 = !DILocalVariable(name: "msgq", arg: 1, scope: !9762, file: !4037, line: 1147, type: !9452)
!9767 = !DILocalVariable(name: "data", arg: 2, scope: !9762, file: !4037, line: 1147, type: !102)
!9768 = !DILocalVariable(name: "timeout", arg: 3, scope: !9762, file: !4037, line: 1147, type: !9315)
!9769 = !DILocation(line: 0, scope: !9762)
!9770 = !DILocation(line: 1157, column: 2, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9762, file: !4037, line: 1157, column: 2)
!9772 = !{i64 2151049869}
!9773 = !DILocation(line: 1158, column: 9, scope: !9762)
!9774 = !DILocation(line: 1158, column: 2, scope: !9762)
!9775 = distinct !DISubprogram(name: "uart_console_init", scope: !1167, file: !1167, line: 588, type: !1111, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9776)
!9776 = !{!9777}
!9777 = !DILocalVariable(name: "arg", arg: 1, scope: !9775, file: !1167, line: 588, type: !1083)
!9778 = !DILocation(line: 0, scope: !9775)
!9779 = !DILocation(line: 593, column: 7, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9775, file: !1167, line: 593, column: 6)
!9781 = !DILocation(line: 593, column: 6, scope: !9775)
!9782 = !DILocation(line: 597, column: 2, scope: !9775)
!9783 = !DILocation(line: 599, column: 2, scope: !9775)
!9784 = !DILocation(line: 600, column: 1, scope: !9775)
!9785 = distinct !DISubprogram(name: "device_is_ready", scope: !9786, file: !9786, line: 47, type: !9787, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9789)
!9786 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!9787 = !DISubroutineType(types: !9788)
!9788 = !{!279, !1083}
!9789 = !{!9790}
!9790 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !9786, line: 47, type: !1083)
!9791 = !DILocation(line: 0, scope: !9785)
!9792 = !DILocation(line: 55, column: 2, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9785, file: !9786, line: 55, column: 2)
!9794 = !{i64 2151379894}
!9795 = !DILocation(line: 56, column: 9, scope: !9785)
!9796 = !DILocation(line: 56, column: 2, scope: !9785)
!9797 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1167, file: !1167, line: 573, type: !374, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !2145)
!9798 = !DILocation(line: 576, column: 2, scope: !9797)
!9799 = !DILocation(line: 579, column: 2, scope: !9797)
!9800 = !DILocation(line: 581, column: 1, scope: !9797)
!9801 = distinct !DISubprogram(name: "console_out", scope: !1167, file: !1167, line: 77, type: !618, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9802)
!9802 = !{!9803}
!9803 = !DILocalVariable(name: "c", arg: 1, scope: !9801, file: !1167, line: 77, type: !103)
!9804 = !DILocation(line: 0, scope: !9801)
!9805 = !DILocation(line: 89, column: 11, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9801, file: !1167, line: 89, column: 6)
!9807 = !DILocation(line: 89, column: 6, scope: !9801)
!9808 = !DILocation(line: 90, column: 3, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9806, file: !1167, line: 89, column: 17)
!9810 = !DILocation(line: 91, column: 2, scope: !9809)
!9811 = !DILocation(line: 92, column: 34, scope: !9801)
!9812 = !DILocation(line: 92, column: 2, scope: !9801)
!9813 = !DILocation(line: 94, column: 2, scope: !9801)
!9814 = distinct !DISubprogram(name: "uart_poll_out", scope: !9815, file: !9815, line: 95, type: !1107, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9816)
!9815 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/work_queue")
!9816 = !{!9817, !9818}
!9817 = !DILocalVariable(name: "dev", arg: 1, scope: !9814, file: !9815, line: 95, type: !1083)
!9818 = !DILocalVariable(name: "out_char", arg: 2, scope: !9814, file: !9815, line: 95, type: !174)
!9819 = !DILocation(line: 0, scope: !9814)
!9820 = !DILocation(line: 105, column: 2, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9814, file: !9815, line: 105, column: 2)
!9822 = !{i64 2151463139}
!9823 = !DILocation(line: 106, column: 2, scope: !9814)
!9824 = !DILocation(line: 107, column: 1, scope: !9814)
!9825 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1077, file: !1077, line: 574, type: !1107, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9826)
!9826 = !{!9827, !9828, !9829}
!9827 = !DILocalVariable(name: "dev", arg: 1, scope: !9825, file: !1077, line: 574, type: !1083)
!9828 = !DILocalVariable(name: "out_char", arg: 2, scope: !9825, file: !1077, line: 575, type: !174)
!9829 = !DILocalVariable(name: "api", scope: !9825, file: !1077, line: 577, type: !1074)
!9830 = !DILocation(line: 0, scope: !9825)
!9831 = !DILocation(line: 578, column: 40, scope: !9825)
!9832 = !DILocation(line: 580, column: 7, scope: !9825)
!9833 = !DILocation(line: 580, column: 2, scope: !9825)
!9834 = !DILocation(line: 581, column: 1, scope: !9825)
!9835 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !1086, file: !1086, line: 730, type: !9787, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9836)
!9836 = !{!9837}
!9837 = !DILocalVariable(name: "dev", arg: 1, scope: !9835, file: !1086, line: 730, type: !1083)
!9838 = !DILocation(line: 0, scope: !9835)
!9839 = !DILocation(line: 732, column: 9, scope: !9835)
!9840 = !DILocation(line: 732, column: 2, scope: !9835)
!9841 = distinct !DISubprogram(name: "uart_register_input", scope: !1167, file: !1167, line: 560, type: !9842, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9889)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{null, !9844, !9844, !9886}
!9844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9845, size: 32)
!9845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !110, line: 2208, size: 160, elements: !9846)
!9846 = !{!9847}
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9845, file: !110, line: 2209, baseType: !9848, size: 160)
!9848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !110, line: 1709, size: 160, elements: !9849)
!9849 = !{!9850, !9863, !9867}
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9848, file: !110, line: 1710, baseType: !9851, size: 64)
!9851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9852, line: 46, baseType: !9853)
!9852 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9852, line: 41, size: 64, elements: !9854)
!9854 = !{!9855, !9862}
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9853, file: !9852, line: 42, baseType: !9856, size: 32)
!9856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9857, size: 32)
!9857 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9852, line: 39, baseType: !9858)
!9858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9852, line: 35, size: 32, elements: !9859)
!9859 = !{!9860}
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9858, file: !9852, line: 36, baseType: !9861, size: 32)
!9861 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9852, line: 32, baseType: !190)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9853, file: !9852, line: 43, baseType: !9856, size: 32, offset: 32)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9848, file: !110, line: 1711, baseType: !9864, size: 32, offset: 64)
!9864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !9865)
!9865 = !{!9866}
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9864, file: !244, line: 52, baseType: !22, size: 32)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9848, file: !110, line: 1712, baseType: !9868, size: 64, offset: 96)
!9868 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !9869)
!9869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !9870)
!9870 = !{!9871}
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9869, file: !167, line: 232, baseType: !9872, size: 64)
!9872 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !9873)
!9873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !9874)
!9874 = !{!9875, !9881}
!9875 = !DIDerivedType(tag: DW_TAG_member, scope: !9873, file: !141, line: 38, baseType: !9876, size: 32)
!9876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9873, file: !141, line: 38, size: 32, elements: !9877)
!9877 = !{!9878, !9880}
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9876, file: !141, line: 39, baseType: !9879, size: 32)
!9879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9873, size: 32)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9876, file: !141, line: 40, baseType: !9879, size: 32)
!9881 = !DIDerivedType(tag: DW_TAG_member, scope: !9873, file: !141, line: 42, baseType: !9882, size: 32, offset: 32)
!9882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9873, file: !141, line: 42, size: 32, elements: !9883)
!9883 = !{!9884, !9885}
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9882, file: !141, line: 43, baseType: !9879, size: 32)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9882, file: !141, line: 44, baseType: !9879, size: 32)
!9886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9887, size: 32)
!9887 = !DISubroutineType(types: !9888)
!9888 = !{!173, !307, !173}
!9889 = !{!9890, !9891, !9892}
!9890 = !DILocalVariable(name: "avail", arg: 1, scope: !9841, file: !1167, line: 560, type: !9844)
!9891 = !DILocalVariable(name: "lines", arg: 2, scope: !9841, file: !1167, line: 560, type: !9844)
!9892 = !DILocalVariable(name: "completion", arg: 3, scope: !9841, file: !1167, line: 561, type: !9886)
!9893 = !DILocation(line: 0, scope: !9841)
!9894 = !DILocation(line: 566, column: 1, scope: !9841)
!9895 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1279, file: !1279, line: 40, type: !1202, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9896)
!9896 = !{!9897, !9898, !9899, !9900, !9902, !9903, !9908, !9909}
!9897 = !DILocalVariable(name: "port", arg: 1, scope: !9895, file: !1279, line: 40, type: !1204)
!9898 = !DILocalVariable(name: "pin", arg: 2, scope: !9895, file: !1279, line: 40, type: !1219)
!9899 = !DILocalVariable(name: "flags", arg: 3, scope: !9895, file: !1279, line: 41, type: !1220)
!9900 = !DILocalVariable(name: "config", scope: !9895, file: !1279, line: 43, type: !9901)
!9901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!9902 = !DILocalVariable(name: "base", scope: !9895, file: !1279, line: 44, type: !1316)
!9903 = !DILocalVariable(name: "pin_cfg", scope: !9895, file: !1279, line: 52, type: !9904)
!9904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1332, line: 59, size: 160, elements: !9905)
!9905 = !{!9906, !9907}
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9904, file: !1332, line: 60, baseType: !1331, size: 128)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9904, file: !1332, line: 61, baseType: !190, size: 32, offset: 128)
!9908 = !DILocalVariable(name: "gpio_cfg_reg", scope: !9895, file: !1279, line: 54, type: !1032)
!9909 = !DILocalVariable(name: "reg", scope: !9895, file: !1279, line: 56, type: !190)
!9910 = !DILocation(line: 0, scope: !9895)
!9911 = !DILocation(line: 43, column: 47, scope: !9895)
!9912 = !DILocation(line: 44, column: 28, scope: !9895)
!9913 = !DILocation(line: 46, column: 35, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9895, file: !1279, line: 46, column: 6)
!9915 = !DILocation(line: 50, column: 2, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9917, file: !1279, line: 50, column: 2)
!9917 = distinct !DILexicalBlock(scope: !9895, file: !1279, line: 50, column: 2)
!9918 = !DILocation(line: 50, column: 2, scope: !9917)
!9919 = !DILocation(line: 50, column: 2, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9916, file: !1279, line: 50, column: 2)
!9921 = !DILocation(line: 52, column: 2, scope: !9895)
!9922 = !DILocation(line: 52, column: 25, scope: !9895)
!9923 = !DILocation(line: 55, column: 32, scope: !9895)
!9924 = !DILocation(line: 55, column: 47, scope: !9895)
!9925 = !DILocation(line: 55, column: 3, scope: !9895)
!9926 = !DILocation(line: 56, column: 17, scope: !9895)
!9927 = !DILocation(line: 66, column: 13, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9895, file: !1279, line: 66, column: 6)
!9929 = !DILocation(line: 66, column: 34, scope: !9928)
!9930 = !DILocation(line: 66, column: 6, scope: !9895)
!9931 = !DILocation(line: 70, column: 36, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9895, file: !1279, line: 70, column: 6)
!9933 = !DILocation(line: 70, column: 14, scope: !9932)
!9934 = !DILocation(line: 70, column: 30, scope: !9932)
!9935 = !DILocation(line: 72, column: 7, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9932, file: !1279, line: 70, column: 72)
!9937 = !DILocation(line: 73, column: 8, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !1279, line: 72, column: 38)
!9939 = distinct !DILexicalBlock(scope: !9936, file: !1279, line: 72, column: 7)
!9940 = !DILocation(line: 74, column: 3, scope: !9938)
!9941 = !DILocation(line: 75, column: 8, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9939, file: !1279, line: 74, column: 10)
!9943 = !DILocation(line: 79, column: 7, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9932, file: !1279, line: 77, column: 9)
!9945 = !DILocation(line: 0, scope: !9932)
!9946 = !DILocation(line: 84, column: 27, scope: !9895)
!9947 = !DILocation(line: 84, column: 26, scope: !9895)
!9948 = !DILocation(line: 84, column: 2, scope: !9895)
!9949 = !DILocation(line: 86, column: 10, scope: !9895)
!9950 = !DILocation(line: 86, column: 25, scope: !9895)
!9951 = !DILocation(line: 87, column: 2, scope: !9895)
!9952 = !DILocation(line: 98, column: 2, scope: !9895)
!9953 = !DILocation(line: 99, column: 2, scope: !9895)
!9954 = !DILocation(line: 101, column: 6, scope: !9895)
!9955 = !DILocation(line: 103, column: 14, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !1279, line: 103, column: 7)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !1279, line: 101, column: 35)
!9958 = distinct !DILexicalBlock(scope: !9895, file: !1279, line: 101, column: 6)
!9959 = !DILocation(line: 103, column: 38, scope: !9956)
!9960 = !DILocation(line: 103, column: 7, scope: !9957)
!9961 = !DILocation(line: 105, column: 21, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9956, file: !1279, line: 105, column: 14)
!9963 = !DILocation(line: 105, column: 46, scope: !9962)
!9964 = !DILocation(line: 105, column: 14, scope: !9956)
!9965 = !DILocation(line: 0, scope: !9956)
!9966 = !DILocation(line: 110, column: 3, scope: !9957)
!9967 = !DILocation(line: 111, column: 2, scope: !9957)
!9968 = !DILocation(line: 113, column: 3, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9958, file: !1279, line: 111, column: 9)
!9970 = !DILocation(line: 117, column: 1, scope: !9895)
!9971 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1279, file: !1279, line: 119, type: !9972, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9974)
!9972 = !DISubroutineType(types: !9973)
!9973 = !{!103, !1204, !1601}
!9974 = !{!9975, !9976, !9977, !9978}
!9975 = !DILocalVariable(name: "port", arg: 1, scope: !9971, file: !1279, line: 119, type: !1204)
!9976 = !DILocalVariable(name: "value", arg: 2, scope: !9971, file: !1279, line: 119, type: !1601)
!9977 = !DILocalVariable(name: "config", scope: !9971, file: !1279, line: 121, type: !9901)
!9978 = !DILocalVariable(name: "base", scope: !9971, file: !1279, line: 122, type: !1316)
!9979 = !DILocation(line: 0, scope: !9971)
!9980 = !DILocation(line: 121, column: 47, scope: !9971)
!9981 = !DILocation(line: 122, column: 28, scope: !9971)
!9982 = !DILocation(line: 124, column: 11, scope: !9971)
!9983 = !DILocation(line: 124, column: 9, scope: !9971)
!9984 = !DILocation(line: 126, column: 2, scope: !9971)
!9985 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1279, file: !1279, line: 129, type: !1229, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9986)
!9986 = !{!9987, !9988, !9989, !9990, !9991}
!9987 = !DILocalVariable(name: "port", arg: 1, scope: !9985, file: !1279, line: 129, type: !1204)
!9988 = !DILocalVariable(name: "mask", arg: 2, scope: !9985, file: !1279, line: 130, type: !1231)
!9989 = !DILocalVariable(name: "value", arg: 3, scope: !9985, file: !1279, line: 131, type: !1226)
!9990 = !DILocalVariable(name: "config", scope: !9985, file: !1279, line: 133, type: !9901)
!9991 = !DILocalVariable(name: "base", scope: !9985, file: !1279, line: 134, type: !1316)
!9992 = !DILocation(line: 0, scope: !9985)
!9993 = !DILocation(line: 133, column: 47, scope: !9985)
!9994 = !DILocation(line: 134, column: 28, scope: !9985)
!9995 = !DILocation(line: 137, column: 5, scope: !9985)
!9996 = !DILocation(line: 137, column: 32, scope: !9985)
!9997 = !DILocation(line: 137, column: 30, scope: !9985)
!9998 = !DILocation(line: 137, column: 48, scope: !9985)
!9999 = !DILocation(line: 137, column: 39, scope: !9985)
!10000 = !DILocation(line: 136, column: 2, scope: !9985)
!10001 = !DILocation(line: 139, column: 2, scope: !9985)
!10002 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1279, file: !1279, line: 142, type: !1234, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10003)
!10003 = !{!10004, !10005, !10006, !10007}
!10004 = !DILocalVariable(name: "port", arg: 1, scope: !10002, file: !1279, line: 142, type: !1204)
!10005 = !DILocalVariable(name: "pins", arg: 2, scope: !10002, file: !1279, line: 143, type: !1231)
!10006 = !DILocalVariable(name: "config", scope: !10002, file: !1279, line: 145, type: !9901)
!10007 = !DILocalVariable(name: "base", scope: !10002, file: !1279, line: 146, type: !1316)
!10008 = !DILocation(line: 0, scope: !10002)
!10009 = !DILocation(line: 145, column: 47, scope: !10002)
!10010 = !DILocation(line: 146, column: 28, scope: !10002)
!10011 = !DILocation(line: 148, column: 29, scope: !10002)
!10012 = !DILocation(line: 148, column: 54, scope: !10002)
!10013 = !DILocation(line: 148, column: 2, scope: !10002)
!10014 = !DILocation(line: 150, column: 2, scope: !10002)
!10015 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1279, file: !1279, line: 153, type: !1234, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10016)
!10016 = !{!10017, !10018, !10019, !10020}
!10017 = !DILocalVariable(name: "port", arg: 1, scope: !10015, file: !1279, line: 153, type: !1204)
!10018 = !DILocalVariable(name: "pins", arg: 2, scope: !10015, file: !1279, line: 154, type: !1231)
!10019 = !DILocalVariable(name: "config", scope: !10015, file: !1279, line: 156, type: !9901)
!10020 = !DILocalVariable(name: "base", scope: !10015, file: !1279, line: 157, type: !1316)
!10021 = !DILocation(line: 0, scope: !10015)
!10022 = !DILocation(line: 156, column: 47, scope: !10015)
!10023 = !DILocation(line: 157, column: 28, scope: !10015)
!10024 = !DILocation(line: 159, column: 29, scope: !10015)
!10025 = !DILocation(line: 159, column: 56, scope: !10015)
!10026 = !DILocation(line: 159, column: 54, scope: !10015)
!10027 = !DILocation(line: 159, column: 2, scope: !10015)
!10028 = !DILocation(line: 161, column: 2, scope: !10015)
!10029 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1279, file: !1279, line: 164, type: !1234, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10030)
!10030 = !{!10031, !10032, !10033, !10034}
!10031 = !DILocalVariable(name: "port", arg: 1, scope: !10029, file: !1279, line: 164, type: !1204)
!10032 = !DILocalVariable(name: "pins", arg: 2, scope: !10029, file: !1279, line: 165, type: !1231)
!10033 = !DILocalVariable(name: "config", scope: !10029, file: !1279, line: 167, type: !9901)
!10034 = !DILocalVariable(name: "base", scope: !10029, file: !1279, line: 168, type: !1316)
!10035 = !DILocation(line: 0, scope: !10029)
!10036 = !DILocation(line: 167, column: 47, scope: !10029)
!10037 = !DILocation(line: 168, column: 28, scope: !10029)
!10038 = !DILocation(line: 170, column: 29, scope: !10029)
!10039 = !DILocation(line: 170, column: 54, scope: !10029)
!10040 = !DILocation(line: 170, column: 2, scope: !10029)
!10041 = !DILocation(line: 172, column: 2, scope: !10029)
!10042 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1279, file: !1279, line: 175, type: !1240, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10043)
!10043 = !{!10044, !10045, !10046, !10047, !10048, !10049, !10050, !10051, !10052, !10053}
!10044 = !DILocalVariable(name: "port", arg: 1, scope: !10042, file: !1279, line: 175, type: !1204)
!10045 = !DILocalVariable(name: "pin", arg: 2, scope: !10042, file: !1279, line: 176, type: !1219)
!10046 = !DILocalVariable(name: "mode", arg: 3, scope: !10042, file: !1279, line: 177, type: !1179)
!10047 = !DILocalVariable(name: "trig", arg: 4, scope: !10042, file: !1279, line: 178, type: !1185)
!10048 = !DILocalVariable(name: "config", scope: !10042, file: !1279, line: 180, type: !9901)
!10049 = !DILocalVariable(name: "base", scope: !10042, file: !1279, line: 181, type: !1316)
!10050 = !DILocalVariable(name: "icr_reg", scope: !10042, file: !1279, line: 182, type: !1032)
!10051 = !DILocalVariable(name: "key", scope: !10042, file: !1279, line: 183, type: !32)
!10052 = !DILocalVariable(name: "icr_val", scope: !10042, file: !1279, line: 184, type: !190)
!10053 = !DILocalVariable(name: "shift", scope: !10042, file: !1279, line: 185, type: !173)
!10054 = !DILocation(line: 0, scope: !10042)
!10055 = !DILocation(line: 180, column: 47, scope: !10042)
!10056 = !DILocation(line: 181, column: 28, scope: !10042)
!10057 = !DILocation(line: 187, column: 14, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10042, file: !1279, line: 187, column: 6)
!10059 = !DILocation(line: 187, column: 21, scope: !10058)
!10060 = !DILocation(line: 187, column: 19, scope: !10058)
!10061 = !DILocation(line: 187, column: 31, scope: !10058)
!10062 = !DILocation(line: 188, column: 6, scope: !10058)
!10063 = !DILocation(line: 193, column: 12, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10042, file: !1279, line: 193, column: 6)
!10065 = !DILocation(line: 193, column: 35, scope: !10064)
!10066 = !DILocation(line: 195, column: 42, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10064, file: !1279, line: 195, column: 13)
!10068 = !DILocation(line: 198, column: 19, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10067, file: !1279, line: 198, column: 13)
!10070 = !DILocation(line: 198, column: 43, scope: !10069)
!10071 = !DILocation(line: 0, scope: !10064)
!10072 = !DILocation(line: 205, column: 10, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10042, file: !1279, line: 205, column: 6)
!10074 = !DILocation(line: 205, column: 6, scope: !10042)
!10075 = !DILocation(line: 206, column: 14, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10073, file: !1279, line: 205, column: 17)
!10077 = !DILocation(line: 207, column: 21, scope: !10076)
!10078 = !DILocation(line: 208, column: 2, scope: !10076)
!10079 = !DILocation(line: 208, column: 17, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10073, file: !1279, line: 208, column: 13)
!10081 = !DILocation(line: 208, column: 13, scope: !10073)
!10082 = !DILocation(line: 209, column: 14, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10080, file: !1279, line: 208, column: 24)
!10084 = !DILocation(line: 210, column: 21, scope: !10083)
!10085 = !DILocation(line: 0, scope: !10073)
!10086 = !DILocation(line: 55, column: 2, scope: !10087, inlinedAt: !10093)
!10087 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10090)
!10088 = !DISubroutineType(types: !10089)
!10089 = !{!32}
!10090 = !{!10091, !10092}
!10091 = !DILocalVariable(name: "key", scope: !10087, file: !7921, line: 44, type: !32)
!10092 = !DILocalVariable(name: "tmp", scope: !10087, file: !7921, line: 53, type: !32)
!10093 = distinct !DILocation(line: 215, column: 8, scope: !10042)
!10094 = !{i64 3055315}
!10095 = !DILocation(line: 0, scope: !10087, inlinedAt: !10093)
!10096 = !DILocation(line: 217, column: 14, scope: !10042)
!10097 = !DILocation(line: 217, column: 33, scope: !10042)
!10098 = !DILocation(line: 217, column: 30, scope: !10042)
!10099 = !DILocation(line: 217, column: 25, scope: !10042)
!10100 = !DILocation(line: 217, column: 23, scope: !10042)
!10101 = !DILocation(line: 217, column: 52, scope: !10042)
!10102 = !DILocation(line: 217, column: 41, scope: !10042)
!10103 = !DILocation(line: 217, column: 11, scope: !10042)
!10104 = !DILocation(line: 219, column: 2, scope: !10042)
!10105 = !DILocation(line: 220, column: 2, scope: !10042)
!10106 = !DILocation(line: 221, column: 2, scope: !10042)
!10107 = !DILocalVariable(name: "key", arg: 1, scope: !10108, file: !7921, line: 84, type: !32)
!10108 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10109)
!10109 = !{!10107}
!10110 = !DILocation(line: 0, scope: !10108, inlinedAt: !10111)
!10111 = distinct !DILocation(line: 223, column: 2, scope: !10042)
!10112 = !DILocation(line: 95, column: 2, scope: !10108, inlinedAt: !10111)
!10113 = !{i64 3056132}
!10114 = !DILocation(line: 225, column: 2, scope: !10042)
!10115 = !DILocation(line: 226, column: 1, scope: !10042)
!10116 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1279, file: !1279, line: 228, type: !1244, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10117)
!10117 = !{!10118, !10119, !10120, !10121}
!10118 = !DILocalVariable(name: "port", arg: 1, scope: !10116, file: !1279, line: 228, type: !1204)
!10119 = !DILocalVariable(name: "cb", arg: 2, scope: !10116, file: !1279, line: 229, type: !1246)
!10120 = !DILocalVariable(name: "set", arg: 3, scope: !10116, file: !1279, line: 229, type: !279)
!10121 = !DILocalVariable(name: "data", scope: !10116, file: !1279, line: 231, type: !10122)
!10122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!10123 = !DILocation(line: 0, scope: !10116)
!10124 = !DILocation(line: 231, column: 37, scope: !10116)
!10125 = !DILocation(line: 233, column: 37, scope: !10116)
!10126 = !DILocation(line: 233, column: 9, scope: !10116)
!10127 = !DILocation(line: 233, column: 2, scope: !10116)
!10128 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10129, file: !10129, line: 38, type: !10130, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10133)
!10129 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10130 = !DISubroutineType(types: !10131)
!10131 = !{!103, !10132, !1246, !279}
!10132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!10133 = !{!10134, !10135, !10136}
!10134 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10128, file: !10129, line: 38, type: !10132)
!10135 = !DILocalVariable(name: "callback", arg: 2, scope: !10128, file: !10129, line: 39, type: !1246)
!10136 = !DILocalVariable(name: "set", arg: 3, scope: !10128, file: !10129, line: 40, type: !279)
!10137 = !DILocation(line: 0, scope: !10128)
!10138 = !DILocation(line: 42, column: 2, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10140, file: !10129, line: 42, column: 2)
!10140 = distinct !DILexicalBlock(scope: !10128, file: !10129, line: 42, column: 2)
!10141 = !DILocation(line: 42, column: 2, scope: !10140)
!10142 = !DILocation(line: 42, column: 2, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10139, file: !10129, line: 42, column: 2)
!10144 = !DILocation(line: 43, column: 2, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10146, file: !10129, line: 43, column: 2)
!10146 = distinct !DILexicalBlock(scope: !10128, file: !10129, line: 43, column: 2)
!10147 = !DILocation(line: 43, column: 2, scope: !10146)
!10148 = !DILocation(line: 43, column: 2, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !10129, line: 43, column: 2)
!10150 = !DILocation(line: 45, column: 7, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10128, file: !10129, line: 45, column: 6)
!10152 = !DILocation(line: 45, column: 6, scope: !10128)
!10153 = !DILocation(line: 46, column: 56, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10155, file: !10129, line: 46, column: 7)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !10129, line: 45, column: 38)
!10156 = !DILocation(line: 46, column: 8, scope: !10154)
!10157 = !DILocation(line: 46, column: 7, scope: !10155)
!10158 = !DILocation(line: 51, column: 13, scope: !10151)
!10159 = !DILocation(line: 56, column: 43, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !10129, line: 55, column: 11)
!10161 = distinct !DILexicalBlock(scope: !10128, file: !10129, line: 55, column: 6)
!10162 = !DILocation(line: 56, column: 3, scope: !10160)
!10163 = !DILocation(line: 57, column: 2, scope: !10160)
!10164 = !DILocation(line: 60, column: 1, scope: !10128)
!10165 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !114, file: !114, line: 261, type: !10166, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10168)
!10166 = !DISubroutineType(types: !10167)
!10167 = !{!279, !10132}
!10168 = !{!10169}
!10169 = !DILocalVariable(name: "list", arg: 1, scope: !10165, file: !114, line: 261, type: !10132)
!10170 = !DILocation(line: 0, scope: !10165)
!10171 = !DILocation(line: 261, column: 1, scope: !10165)
!10172 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !114, file: !114, line: 417, type: !10173, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!279, !10132, !1305}
!10175 = !{!10176, !10177, !10178, !10179}
!10176 = !DILocalVariable(name: "list", arg: 1, scope: !10172, file: !114, line: 417, type: !10132)
!10177 = !DILocalVariable(name: "node", arg: 2, scope: !10172, file: !114, line: 417, type: !1305)
!10178 = !DILocalVariable(name: "prev", scope: !10172, file: !114, line: 417, type: !1305)
!10179 = !DILocalVariable(name: "test", scope: !10172, file: !114, line: 417, type: !1305)
!10180 = !DILocation(line: 0, scope: !10172)
!10181 = !DILocation(line: 417, column: 1, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10172, file: !114, line: 417, column: 1)
!10183 = !DILocation(line: 417, column: 1, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10182, file: !114, line: 417, column: 1)
!10185 = !DILocation(line: 417, column: 1, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !114, line: 417, column: 1)
!10187 = distinct !DILexicalBlock(scope: !10184, file: !114, line: 417, column: 1)
!10188 = !DILocation(line: 417, column: 1, scope: !10187)
!10189 = distinct !{!10189, !10181, !10181}
!10190 = !DILocation(line: 417, column: 1, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10186, file: !114, line: 417, column: 1)
!10192 = !DILocation(line: 417, column: 1, scope: !10172)
!10193 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !114, file: !114, line: 298, type: !10194, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10196)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{null, !10132, !1305}
!10196 = !{!10197, !10198}
!10197 = !DILocalVariable(name: "list", arg: 1, scope: !10193, file: !114, line: 298, type: !10132)
!10198 = !DILocalVariable(name: "node", arg: 2, scope: !10193, file: !114, line: 298, type: !1305)
!10199 = !DILocation(line: 0, scope: !10193)
!10200 = !DILocation(line: 298, column: 1, scope: !10193)
!10201 = !DILocation(line: 298, column: 1, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10193, file: !114, line: 298, column: 1)
!10203 = !DILocation(line: 298, column: 1, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10202, file: !114, line: 298, column: 1)
!10205 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !114, file: !114, line: 231, type: !10206, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10208)
!10206 = !DISubroutineType(types: !10207)
!10207 = !{!1305, !10132}
!10208 = !{!10209}
!10209 = !DILocalVariable(name: "list", arg: 1, scope: !10205, file: !114, line: 231, type: !10132)
!10210 = !DILocation(line: 0, scope: !10205)
!10211 = !DILocation(line: 233, column: 15, scope: !10205)
!10212 = !DILocation(line: 233, column: 2, scope: !10205)
!10213 = distinct !DISubprogram(name: "z_snode_next_set", scope: !114, file: !114, line: 209, type: !10214, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10216)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{null, !1305, !1305}
!10216 = !{!10217, !10218}
!10217 = !DILocalVariable(name: "parent", arg: 1, scope: !10213, file: !114, line: 209, type: !1305)
!10218 = !DILocalVariable(name: "child", arg: 2, scope: !10213, file: !114, line: 209, type: !1305)
!10219 = !DILocation(line: 0, scope: !10213)
!10220 = !DILocation(line: 211, column: 10, scope: !10213)
!10221 = !DILocation(line: 211, column: 15, scope: !10213)
!10222 = !DILocation(line: 212, column: 1, scope: !10213)
!10223 = distinct !DISubprogram(name: "z_slist_head_set", scope: !114, file: !114, line: 214, type: !10194, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10224)
!10224 = !{!10225, !10226}
!10225 = !DILocalVariable(name: "list", arg: 1, scope: !10223, file: !114, line: 214, type: !10132)
!10226 = !DILocalVariable(name: "node", arg: 2, scope: !10223, file: !114, line: 214, type: !1305)
!10227 = !DILocation(line: 0, scope: !10223)
!10228 = !DILocation(line: 216, column: 8, scope: !10223)
!10229 = !DILocation(line: 216, column: 13, scope: !10223)
!10230 = !DILocation(line: 217, column: 1, scope: !10223)
!10231 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !114, file: !114, line: 243, type: !10206, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10232)
!10232 = !{!10233}
!10233 = !DILocalVariable(name: "list", arg: 1, scope: !10231, file: !114, line: 243, type: !10132)
!10234 = !DILocation(line: 0, scope: !10231)
!10235 = !DILocation(line: 245, column: 15, scope: !10231)
!10236 = !DILocation(line: 245, column: 2, scope: !10231)
!10237 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !114, file: !114, line: 219, type: !10194, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10238)
!10238 = !{!10239, !10240}
!10239 = !DILocalVariable(name: "list", arg: 1, scope: !10237, file: !114, line: 219, type: !10132)
!10240 = !DILocalVariable(name: "node", arg: 2, scope: !10237, file: !114, line: 219, type: !1305)
!10241 = !DILocation(line: 0, scope: !10237)
!10242 = !DILocation(line: 221, column: 8, scope: !10237)
!10243 = !DILocation(line: 221, column: 13, scope: !10237)
!10244 = !DILocation(line: 222, column: 1, scope: !10237)
!10245 = distinct !DISubprogram(name: "sys_slist_remove", scope: !114, file: !114, line: 401, type: !10246, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10248)
!10246 = !DISubroutineType(types: !10247)
!10247 = !{null, !10132, !1305, !1305}
!10248 = !{!10249, !10250, !10251}
!10249 = !DILocalVariable(name: "list", arg: 1, scope: !10245, file: !114, line: 401, type: !10132)
!10250 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10245, file: !114, line: 401, type: !1305)
!10251 = !DILocalVariable(name: "node", arg: 3, scope: !10245, file: !114, line: 401, type: !1305)
!10252 = !DILocation(line: 0, scope: !10245)
!10253 = !DILocation(line: 401, column: 1, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10245, file: !114, line: 401, column: 1)
!10255 = !DILocation(line: 0, scope: !10254)
!10256 = !DILocation(line: 401, column: 1, scope: !10245)
!10257 = !DILocation(line: 401, column: 1, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10254, file: !114, line: 401, column: 1)
!10259 = !DILocation(line: 401, column: 1, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10258, file: !114, line: 401, column: 1)
!10261 = !DILocation(line: 401, column: 1, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10260, file: !114, line: 401, column: 1)
!10263 = !DILocation(line: 401, column: 1, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10254, file: !114, line: 401, column: 1)
!10265 = !DILocation(line: 401, column: 1, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10264, file: !114, line: 401, column: 1)
!10267 = !DILocation(line: 401, column: 1, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10266, file: !114, line: 401, column: 1)
!10269 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !114, file: !114, line: 285, type: !10270, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10272)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!1305, !1305}
!10272 = !{!10273}
!10273 = !DILocalVariable(name: "node", arg: 1, scope: !10269, file: !114, line: 285, type: !1305)
!10274 = !DILocation(line: 0, scope: !10269)
!10275 = !DILocation(line: 285, column: 1, scope: !10269)
!10276 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !114, file: !114, line: 274, type: !10270, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10277)
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "node", arg: 1, scope: !10276, file: !114, line: 274, type: !1305)
!10279 = !DILocation(line: 0, scope: !10276)
!10280 = !DILocation(line: 274, column: 1, scope: !10276)
!10281 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !114, file: !114, line: 204, type: !10270, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10282)
!10282 = !{!10283}
!10283 = !DILocalVariable(name: "node", arg: 1, scope: !10281, file: !114, line: 204, type: !1305)
!10284 = !DILocation(line: 0, scope: !10281)
!10285 = !DILocation(line: 206, column: 15, scope: !10281)
!10286 = !DILocation(line: 206, column: 2, scope: !10281)
!10287 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !1191, file: !1191, line: 131, type: !10288, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10290)
!10288 = !DISubroutineType(types: !10289)
!10289 = !{!190, !1316}
!10290 = !{!10291}
!10291 = !DILocalVariable(name: "base", arg: 1, scope: !10287, file: !1191, line: 131, type: !1316)
!10292 = !DILocation(line: 0, scope: !10287)
!10293 = !DILocation(line: 133, column: 12, scope: !10287)
!10294 = !DILocation(line: 133, column: 5, scope: !10287)
!10295 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !1191, file: !1191, line: 178, type: !10296, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10298)
!10296 = !DISubroutineType(types: !10297)
!10297 = !{null, !1316, !190}
!10298 = !{!10299, !10300}
!10299 = !DILocalVariable(name: "base", arg: 1, scope: !10295, file: !1191, line: 178, type: !1316)
!10300 = !DILocalVariable(name: "portVal", arg: 2, scope: !10295, file: !1191, line: 178, type: !190)
!10301 = !DILocation(line: 0, scope: !10295)
!10302 = !DILocation(line: 180, column: 5, scope: !10295)
!10303 = !DILocation(line: 180, column: 23, scope: !10295)
!10304 = !DILocation(line: 181, column: 1, scope: !10295)
!10305 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1279, file: !1279, line: 236, type: !10306, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{null, !1204}
!10308 = !{!10309, !10310, !10311, !10312}
!10309 = !DILocalVariable(name: "port", arg: 1, scope: !10305, file: !1279, line: 236, type: !1204)
!10310 = !DILocalVariable(name: "config", scope: !10305, file: !1279, line: 238, type: !9901)
!10311 = !DILocalVariable(name: "data", scope: !10305, file: !1279, line: 239, type: !10122)
!10312 = !DILocalVariable(name: "int_status", scope: !10305, file: !1279, line: 240, type: !190)
!10313 = !DILocation(line: 0, scope: !10305)
!10314 = !DILocation(line: 238, column: 47, scope: !10305)
!10315 = !DILocation(line: 239, column: 37, scope: !10305)
!10316 = !DILocation(line: 242, column: 23, scope: !10305)
!10317 = !DILocation(line: 242, column: 29, scope: !10305)
!10318 = !DILocation(line: 244, column: 20, scope: !10305)
!10319 = !DILocation(line: 246, column: 29, scope: !10305)
!10320 = !DILocation(line: 246, column: 2, scope: !10305)
!10321 = !DILocation(line: 247, column: 1, scope: !10305)
!10322 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10129, file: !10129, line: 69, type: !10323, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10325)
!10323 = !DISubroutineType(types: !10324)
!10324 = !{null, !10132, !1204, !190}
!10325 = !{!10326, !10327, !10328, !10329, !10330}
!10326 = !DILocalVariable(name: "list", arg: 1, scope: !10322, file: !10129, line: 69, type: !10132)
!10327 = !DILocalVariable(name: "port", arg: 2, scope: !10322, file: !10129, line: 70, type: !1204)
!10328 = !DILocalVariable(name: "pins", arg: 3, scope: !10322, file: !10129, line: 71, type: !190)
!10329 = !DILocalVariable(name: "cb", scope: !10322, file: !10129, line: 73, type: !1246)
!10330 = !DILocalVariable(name: "tmp", scope: !10322, file: !10129, line: 73, type: !1246)
!10331 = !DILocation(line: 0, scope: !10322)
!10332 = !DILocation(line: 75, column: 2, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10322, file: !10129, line: 75, column: 2)
!10334 = !DILocation(line: 0, scope: !10333)
!10335 = !DILocation(line: 76, column: 11, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10337, file: !10129, line: 76, column: 7)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !10129, line: 75, column: 57)
!10338 = distinct !DILexicalBlock(scope: !10333, file: !10129, line: 75, column: 2)
!10339 = !DILocation(line: 76, column: 20, scope: !10336)
!10340 = !DILocation(line: 76, column: 7, scope: !10337)
!10341 = !DILocation(line: 77, column: 4, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !10129, line: 77, column: 4)
!10343 = distinct !DILexicalBlock(scope: !10344, file: !10129, line: 77, column: 4)
!10344 = distinct !DILexicalBlock(scope: !10336, file: !10129, line: 76, column: 28)
!10345 = !DILocation(line: 77, column: 4, scope: !10343)
!10346 = !DILocation(line: 77, column: 4, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10342, file: !10129, line: 77, column: 4)
!10348 = !DILocation(line: 78, column: 4, scope: !10344)
!10349 = !DILocation(line: 79, column: 3, scope: !10344)
!10350 = !DILocation(line: 75, column: 2, scope: !10338)
!10351 = !DILocation(line: 81, column: 1, scope: !10322)
!10352 = !DILocation(line: 0, scope: !1344)
!10353 = !DILocation(line: 318, column: 1, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !1344, file: !1279, line: 318, column: 1)
!10355 = !DILocation(line: 318, column: 1, scope: !1344)
!10356 = !DILocation(line: 318, column: 1, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !1344, file: !1279, line: 318, column: 1)
!10358 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1566, file: !1566, line: 114, type: !1464, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10359)
!10359 = !{!10360, !10361, !10362, !10363}
!10360 = !DILocalVariable(name: "dev", arg: 1, scope: !10358, file: !1566, line: 114, type: !1466)
!10361 = !DILocalVariable(name: "c", arg: 2, scope: !10358, file: !1566, line: 114, type: !1104)
!10362 = !DILocalVariable(name: "uart", scope: !10358, file: !1566, line: 116, type: !1537)
!10363 = !DILocalVariable(name: "ret", scope: !10358, file: !1566, line: 117, type: !103)
!10364 = !DILocation(line: 0, scope: !10358)
!10365 = !DILocation(line: 116, column: 20, scope: !10358)
!10366 = !DILocation(line: 119, column: 6, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10358, file: !1566, line: 119, column: 6)
!10368 = !DILocation(line: 119, column: 6, scope: !10358)
!10369 = !DILocation(line: 120, column: 8, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10367, file: !1566, line: 119, column: 55)
!10371 = !DILocation(line: 120, column: 6, scope: !10370)
!10372 = !DILocation(line: 122, column: 7, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10370, file: !1566, line: 122, column: 7)
!10374 = !DILocation(line: 122, column: 7, scope: !10370)
!10375 = !DILocation(line: 123, column: 4, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10373, file: !1566, line: 122, column: 54)
!10377 = !DILocation(line: 124, column: 3, scope: !10376)
!10378 = !DILocation(line: 128, column: 2, scope: !10358)
!10379 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1566, file: !1566, line: 105, type: !1483, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10380)
!10380 = !{!10381, !10382, !10383}
!10381 = !DILocalVariable(name: "dev", arg: 1, scope: !10379, file: !1566, line: 105, type: !1466)
!10382 = !DILocalVariable(name: "c", arg: 2, scope: !10379, file: !1566, line: 105, type: !174)
!10383 = !DILocalVariable(name: "uart", scope: !10379, file: !1566, line: 107, type: !1537)
!10384 = !DILocation(line: 0, scope: !10379)
!10385 = !DILocation(line: 107, column: 20, scope: !10379)
!10386 = !DILocation(line: 109, column: 2, scope: !10379)
!10387 = !DILocation(line: 109, column: 10, scope: !10379)
!10388 = distinct !{!10388, !10386, !10389}
!10389 = !DILocation(line: 110, column: 2, scope: !10379)
!10390 = !DILocation(line: 111, column: 2, scope: !10379)
!10391 = !DILocation(line: 112, column: 1, scope: !10379)
!10392 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1566, file: !1566, line: 133, type: !1509, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10393)
!10393 = !{!10394, !10395, !10396, !10397, !10398}
!10394 = !DILocalVariable(name: "dev", arg: 1, scope: !10392, file: !1566, line: 133, type: !1466)
!10395 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10392, file: !1566, line: 134, type: !1135)
!10396 = !DILocalVariable(name: "size", arg: 3, scope: !10392, file: !1566, line: 135, type: !103)
!10397 = !DILocalVariable(name: "uart", scope: !10392, file: !1566, line: 137, type: !1537)
!10398 = !DILocalVariable(name: "num_tx", scope: !10392, file: !1566, line: 138, type: !32)
!10399 = !DILocation(line: 0, scope: !10392)
!10400 = !DILocation(line: 137, column: 20, scope: !10392)
!10401 = !DILocation(line: 140, column: 26, scope: !10392)
!10402 = !DILocation(line: 140, column: 31, scope: !10392)
!10403 = !DILocation(line: 141, column: 6, scope: !10392)
!10404 = !DILocation(line: 140, column: 2, scope: !10392)
!10405 = !DILocation(line: 143, column: 22, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10392, file: !1566, line: 141, column: 51)
!10407 = !DILocation(line: 143, column: 3, scope: !10406)
!10408 = !DILocation(line: 144, column: 9, scope: !10406)
!10409 = distinct !{!10409, !10404, !10410}
!10410 = !DILocation(line: 145, column: 2, scope: !10392)
!10411 = !DILocation(line: 147, column: 2, scope: !10392)
!10412 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1566, file: !1566, line: 150, type: !1513, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10413)
!10413 = !{!10414, !10415, !10416, !10417, !10418}
!10414 = !DILocalVariable(name: "dev", arg: 1, scope: !10412, file: !1566, line: 150, type: !1466)
!10415 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10412, file: !1566, line: 150, type: !601)
!10416 = !DILocalVariable(name: "size", arg: 3, scope: !10412, file: !1566, line: 151, type: !1141)
!10417 = !DILocalVariable(name: "uart", scope: !10412, file: !1566, line: 153, type: !1537)
!10418 = !DILocalVariable(name: "num_rx", scope: !10412, file: !1566, line: 154, type: !32)
!10419 = !DILocation(line: 0, scope: !10412)
!10420 = !DILocation(line: 153, column: 20, scope: !10412)
!10421 = !DILocation(line: 156, column: 26, scope: !10412)
!10422 = !DILocation(line: 156, column: 31, scope: !10412)
!10423 = !DILocation(line: 157, column: 6, scope: !10412)
!10424 = !DILocation(line: 156, column: 2, scope: !10412)
!10425 = !DILocation(line: 159, column: 23, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10412, file: !1566, line: 157, column: 51)
!10427 = !DILocation(line: 159, column: 17, scope: !10426)
!10428 = !DILocation(line: 159, column: 3, scope: !10426)
!10429 = !DILocation(line: 159, column: 21, scope: !10426)
!10430 = distinct !{!10430, !10424, !10431}
!10431 = !DILocation(line: 160, column: 2, scope: !10412)
!10432 = !DILocation(line: 162, column: 6, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10412, file: !1566, line: 162, column: 6)
!10434 = !DILocation(line: 162, column: 6, scope: !10412)
!10435 = !DILocation(line: 163, column: 3, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10433, file: !1566, line: 162, column: 53)
!10437 = !DILocation(line: 164, column: 2, scope: !10436)
!10438 = !DILocation(line: 166, column: 2, scope: !10412)
!10439 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1566, file: !1566, line: 169, type: !1517, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10440)
!10440 = !{!10441, !10442}
!10441 = !DILocalVariable(name: "dev", arg: 1, scope: !10439, file: !1566, line: 169, type: !1466)
!10442 = !DILocalVariable(name: "uart", scope: !10439, file: !1566, line: 171, type: !1537)
!10443 = !DILocation(line: 0, scope: !10439)
!10444 = !DILocation(line: 171, column: 20, scope: !10439)
!10445 = !DILocation(line: 173, column: 2, scope: !10439)
!10446 = !DILocation(line: 174, column: 1, scope: !10439)
!10447 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1566, file: !1566, line: 176, type: !1517, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10448)
!10448 = !{!10449, !10450}
!10449 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !1566, line: 176, type: !1466)
!10450 = !DILocalVariable(name: "uart", scope: !10447, file: !1566, line: 178, type: !1537)
!10451 = !DILocation(line: 0, scope: !10447)
!10452 = !DILocation(line: 178, column: 20, scope: !10447)
!10453 = !DILocation(line: 180, column: 2, scope: !10447)
!10454 = !DILocation(line: 181, column: 1, scope: !10447)
!10455 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1566, file: !1566, line: 183, type: !1487, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10456)
!10456 = !{!10457, !10458}
!10457 = !DILocalVariable(name: "dev", arg: 1, scope: !10455, file: !1566, line: 183, type: !1466)
!10458 = !DILocalVariable(name: "uart", scope: !10455, file: !1566, line: 185, type: !1537)
!10459 = !DILocation(line: 0, scope: !10455)
!10460 = !DILocation(line: 185, column: 20, scope: !10455)
!10461 = !DILocation(line: 187, column: 9, scope: !10455)
!10462 = !DILocation(line: 187, column: 2, scope: !10455)
!10463 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1566, file: !1566, line: 190, type: !1517, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10464)
!10464 = !{!10465, !10466}
!10465 = !DILocalVariable(name: "dev", arg: 1, scope: !10463, file: !1566, line: 190, type: !1466)
!10466 = !DILocalVariable(name: "uart", scope: !10463, file: !1566, line: 192, type: !1537)
!10467 = !DILocation(line: 0, scope: !10463)
!10468 = !DILocation(line: 192, column: 20, scope: !10463)
!10469 = !DILocation(line: 194, column: 2, scope: !10463)
!10470 = !DILocation(line: 195, column: 1, scope: !10463)
!10471 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1566, file: !1566, line: 197, type: !1517, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10472)
!10472 = !{!10473, !10474}
!10473 = !DILocalVariable(name: "dev", arg: 1, scope: !10471, file: !1566, line: 197, type: !1466)
!10474 = !DILocalVariable(name: "uart", scope: !10471, file: !1566, line: 199, type: !1537)
!10475 = !DILocation(line: 0, scope: !10471)
!10476 = !DILocation(line: 199, column: 20, scope: !10471)
!10477 = !DILocation(line: 201, column: 2, scope: !10471)
!10478 = !DILocation(line: 202, column: 1, scope: !10471)
!10479 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1566, file: !1566, line: 204, type: !1487, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10480)
!10480 = !{!10481, !10482}
!10481 = !DILocalVariable(name: "dev", arg: 1, scope: !10479, file: !1566, line: 204, type: !1466)
!10482 = !DILocalVariable(name: "uart", scope: !10479, file: !1566, line: 206, type: !1537)
!10483 = !DILocation(line: 0, scope: !10479)
!10484 = !DILocation(line: 206, column: 20, scope: !10479)
!10485 = !DILocation(line: 208, column: 9, scope: !10479)
!10486 = !DILocation(line: 208, column: 2, scope: !10479)
!10487 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1566, file: !1566, line: 211, type: !1517, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10488)
!10488 = !{!10489, !10490}
!10489 = !DILocalVariable(name: "dev", arg: 1, scope: !10487, file: !1566, line: 211, type: !1466)
!10490 = !DILocalVariable(name: "uart", scope: !10487, file: !1566, line: 213, type: !1537)
!10491 = !DILocation(line: 0, scope: !10487)
!10492 = !DILocation(line: 213, column: 20, scope: !10487)
!10493 = !DILocation(line: 215, column: 2, scope: !10487)
!10494 = !DILocation(line: 216, column: 2, scope: !10487)
!10495 = !DILocation(line: 217, column: 1, scope: !10487)
!10496 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1566, file: !1566, line: 219, type: !1517, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10497)
!10497 = !{!10498, !10499}
!10498 = !DILocalVariable(name: "dev", arg: 1, scope: !10496, file: !1566, line: 219, type: !1466)
!10499 = !DILocalVariable(name: "uart", scope: !10496, file: !1566, line: 221, type: !1537)
!10500 = !DILocation(line: 0, scope: !10496)
!10501 = !DILocation(line: 221, column: 20, scope: !10496)
!10502 = !DILocation(line: 223, column: 2, scope: !10496)
!10503 = !DILocation(line: 224, column: 2, scope: !10496)
!10504 = !DILocation(line: 225, column: 1, scope: !10496)
!10505 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1566, file: !1566, line: 227, type: !1487, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10506)
!10506 = !{!10507, !10508}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !1566, line: 227, type: !1466)
!10508 = !DILocalVariable(name: "uart", scope: !10505, file: !1566, line: 229, type: !1537)
!10509 = !DILocation(line: 0, scope: !10505)
!10510 = !DILocation(line: 229, column: 20, scope: !10505)
!10511 = !DILocation(line: 231, column: 9, scope: !10505)
!10512 = !DILocation(line: 231, column: 53, scope: !10505)
!10513 = !DILocation(line: 232, column: 3, scope: !10505)
!10514 = !DILocation(line: 231, column: 2, scope: !10505)
!10515 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1566, file: !1566, line: 235, type: !1487, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10516)
!10516 = !{!10517}
!10517 = !DILocalVariable(name: "dev", arg: 1, scope: !10515, file: !1566, line: 235, type: !1466)
!10518 = !DILocation(line: 0, scope: !10515)
!10519 = !DILocation(line: 237, column: 2, scope: !10515)
!10520 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1566, file: !1566, line: 240, type: !1531, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10521)
!10521 = !{!10522, !10523, !10524, !10525}
!10522 = !DILocalVariable(name: "dev", arg: 1, scope: !10520, file: !1566, line: 240, type: !1466)
!10523 = !DILocalVariable(name: "cb", arg: 2, scope: !10520, file: !1566, line: 241, type: !1533)
!10524 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10520, file: !1566, line: 242, type: !102)
!10525 = !DILocalVariable(name: "data", scope: !10520, file: !1566, line: 244, type: !10526)
!10526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!10527 = !DILocation(line: 0, scope: !10520)
!10528 = !DILocation(line: 244, column: 36, scope: !10520)
!10529 = !DILocation(line: 246, column: 8, scope: !10520)
!10530 = !DILocation(line: 246, column: 17, scope: !10520)
!10531 = !DILocation(line: 247, column: 8, scope: !10520)
!10532 = !DILocation(line: 247, column: 16, scope: !10520)
!10533 = !DILocation(line: 248, column: 1, scope: !10520)
!10534 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1373, file: !1373, line: 392, type: !10535, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!279, !1537, !190}
!10537 = !{!10538, !10539, !10540}
!10538 = !DILocalVariable(name: "base", arg: 1, scope: !10534, file: !1373, line: 392, type: !1537)
!10539 = !DILocalVariable(name: "flag", arg: 2, scope: !10534, file: !1373, line: 392, type: !190)
!10540 = !DILocalVariable(name: "uart_reg", scope: !10534, file: !1373, line: 393, type: !1032)
!10541 = !DILocation(line: 0, scope: !10534)
!10542 = !DILocation(line: 395, column: 29, scope: !10534)
!10543 = !DILocation(line: 395, column: 52, scope: !10534)
!10544 = !DILocation(line: 395, column: 44, scope: !10534)
!10545 = !DILocation(line: 395, column: 16, scope: !10534)
!10546 = !DILocation(line: 396, column: 20, scope: !10534)
!10547 = !DILocation(line: 396, column: 39, scope: !10534)
!10548 = !DILocation(line: 396, column: 12, scope: !10534)
!10549 = !DILocation(line: 396, column: 5, scope: !10534)
!10550 = distinct !DISubprogram(name: "UART_Getchar", scope: !1373, file: !1373, line: 358, type: !10551, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10553)
!10551 = !DISubroutineType(types: !10552)
!10552 = !{!173, !1537}
!10553 = !{!10554}
!10554 = !DILocalVariable(name: "base", arg: 1, scope: !10550, file: !1373, line: 358, type: !1537)
!10555 = !DILocation(line: 0, scope: !10550)
!10556 = !DILocation(line: 360, column: 22, scope: !10550)
!10557 = !DILocation(line: 360, column: 12, scope: !10550)
!10558 = !DILocation(line: 360, column: 5, scope: !10550)
!10559 = distinct !DISubprogram(name: "UART_Putchar", scope: !1373, file: !1373, line: 346, type: !10560, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10562)
!10560 = !DISubroutineType(types: !10561)
!10561 = !{null, !1537, !173}
!10562 = !{!10563, !10564}
!10563 = !DILocalVariable(name: "base", arg: 1, scope: !10559, file: !1373, line: 346, type: !1537)
!10564 = !DILocalVariable(name: "data", arg: 2, scope: !10559, file: !1373, line: 346, type: !173)
!10565 = !DILocation(line: 0, scope: !10559)
!10566 = !DILocation(line: 348, column: 28, scope: !10559)
!10567 = !DILocation(line: 348, column: 5, scope: !10559)
!10568 = !DILocation(line: 348, column: 25, scope: !10559)
!10569 = !DILocation(line: 349, column: 1, scope: !10559)
!10570 = !DILocation(line: 0, scope: !1637)
!10571 = !DILocation(line: 339, column: 1, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !1637, file: !1566, line: 339, column: 1)
!10573 = !DILocation(line: 339, column: 1, scope: !1637)
!10574 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1566, file: !1566, line: 260, type: !1517, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10575)
!10575 = !{!10576, !10577}
!10576 = !DILocalVariable(name: "dev", arg: 1, scope: !10574, file: !1566, line: 260, type: !1466)
!10577 = !DILocalVariable(name: "data", scope: !10574, file: !1566, line: 262, type: !10526)
!10578 = !DILocation(line: 0, scope: !10574)
!10579 = !DILocation(line: 262, column: 36, scope: !10574)
!10580 = !DILocation(line: 264, column: 12, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10574, file: !1566, line: 264, column: 6)
!10582 = !DILocation(line: 264, column: 6, scope: !10581)
!10583 = !DILocation(line: 264, column: 6, scope: !10574)
!10584 = !DILocation(line: 265, column: 29, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10581, file: !1566, line: 264, column: 22)
!10586 = !DILocation(line: 265, column: 3, scope: !10585)
!10587 = !DILocation(line: 266, column: 2, scope: !10585)
!10588 = !DILocation(line: 267, column: 1, scope: !10574)
!10589 = distinct !DISubprogram(name: "uart_imx_init", scope: !1566, file: !1566, line: 56, type: !1487, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10590)
!10590 = !{!10591, !10592, !10593, !10594, !10595, !10596}
!10591 = !DILocalVariable(name: "dev", arg: 1, scope: !10589, file: !1566, line: 56, type: !1466)
!10592 = !DILocalVariable(name: "uart", scope: !10589, file: !1566, line: 58, type: !1537)
!10593 = !DILocalVariable(name: "config", scope: !10589, file: !1566, line: 59, type: !1563)
!10594 = !DILocalVariable(name: "old_level", scope: !10589, file: !1566, line: 60, type: !32)
!10595 = !DILocalVariable(name: "err", scope: !10589, file: !1566, line: 61, type: !103)
!10596 = !DILocalVariable(name: "initConfig", scope: !10589, file: !1566, line: 67, type: !10597)
!10597 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1373, line: 57, baseType: !10598)
!10598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1373, line: 49, size: 192, elements: !10599)
!10599 = !{!10600, !10601, !10602, !10603, !10604, !10605}
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10598, file: !1373, line: 51, baseType: !190, size: 32)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10598, file: !1373, line: 52, baseType: !190, size: 32, offset: 32)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10598, file: !1373, line: 53, baseType: !190, size: 32, offset: 64)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10598, file: !1373, line: 54, baseType: !190, size: 32, offset: 96)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10598, file: !1373, line: 55, baseType: !190, size: 32, offset: 128)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10598, file: !1373, line: 56, baseType: !190, size: 32, offset: 160)
!10606 = !DILocation(line: 0, scope: !10589)
!10607 = !DILocation(line: 58, column: 20, scope: !10589)
!10608 = !DILocation(line: 55, column: 2, scope: !10609, inlinedAt: !10613)
!10609 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10610)
!10610 = !{!10611, !10612}
!10611 = !DILocalVariable(name: "key", scope: !10609, file: !7921, line: 44, type: !32)
!10612 = !DILocalVariable(name: "tmp", scope: !10609, file: !7921, line: 53, type: !32)
!10613 = distinct !DILocation(line: 64, column: 14, scope: !10589)
!10614 = !{i64 2849886}
!10615 = !DILocation(line: 0, scope: !10609, inlinedAt: !10613)
!10616 = !DILocation(line: 67, column: 2, scope: !10589)
!10617 = !DILocation(line: 67, column: 21, scope: !10589)
!10618 = !DILocation(line: 67, column: 34, scope: !10589)
!10619 = !DILocation(line: 68, column: 23, scope: !10589)
!10620 = !DILocation(line: 75, column: 36, scope: !10589)
!10621 = !DILocation(line: 75, column: 8, scope: !10589)
!10622 = !DILocation(line: 76, column: 6, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10589, file: !1566, line: 76, column: 6)
!10624 = !DILocation(line: 76, column: 6, scope: !10589)
!10625 = !DILocation(line: 81, column: 26, scope: !10589)
!10626 = !DILocation(line: 81, column: 24, scope: !10589)
!10627 = !DILocation(line: 83, column: 2, scope: !10589)
!10628 = !DILocation(line: 86, column: 2, scope: !10589)
!10629 = !DILocation(line: 87, column: 2, scope: !10589)
!10630 = !DILocalVariable(name: "key", arg: 1, scope: !10631, file: !7921, line: 84, type: !32)
!10631 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10632)
!10632 = !{!10630}
!10633 = !DILocation(line: 0, scope: !10631, inlinedAt: !10634)
!10634 = distinct !DILocation(line: 90, column: 2, scope: !10589)
!10635 = !DILocation(line: 95, column: 2, scope: !10631, inlinedAt: !10634)
!10636 = !{i64 2850703}
!10637 = !DILocation(line: 93, column: 10, scope: !10589)
!10638 = !DILocation(line: 93, column: 2, scope: !10589)
!10639 = !DILocation(line: 97, column: 34, scope: !10589)
!10640 = !DILocation(line: 97, column: 26, scope: !10589)
!10641 = !DILocation(line: 97, column: 2, scope: !10589)
!10642 = !DILocation(line: 100, column: 2, scope: !10589)
!10643 = !DILocation(line: 102, column: 2, scope: !10589)
!10644 = !DILocation(line: 103, column: 1, scope: !10589)
!10645 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1575, file: !1575, line: 342, type: !10646, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10648)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{!103, !1572, !173}
!10648 = !{!10649, !10650, !10651, !10652}
!10649 = !DILocalVariable(name: "config", arg: 1, scope: !10645, file: !1575, line: 342, type: !1572)
!10650 = !DILocalVariable(name: "id", arg: 2, scope: !10645, file: !1575, line: 343, type: !173)
!10651 = !DILocalVariable(name: "ret", scope: !10645, file: !1575, line: 345, type: !103)
!10652 = !DILocalVariable(name: "state", scope: !10645, file: !1575, line: 346, type: !1578)
!10653 = !DILocation(line: 0, scope: !10645)
!10654 = !DILocation(line: 346, column: 2, scope: !10645)
!10655 = !DILocation(line: 348, column: 8, scope: !10645)
!10656 = !DILocation(line: 349, column: 10, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10645, file: !1575, line: 349, column: 6)
!10658 = !DILocation(line: 349, column: 6, scope: !10645)
!10659 = !DILocation(line: 353, column: 44, scope: !10645)
!10660 = !DILocation(line: 353, column: 9, scope: !10645)
!10661 = !DILocation(line: 353, column: 2, scope: !10645)
!10662 = !DILocation(line: 354, column: 1, scope: !10645)
!10663 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1373, file: !1373, line: 444, type: !10560, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10664)
!10664 = !{!10665, !10666}
!10665 = !DILocalVariable(name: "base", arg: 1, scope: !10663, file: !1373, line: 444, type: !1537)
!10666 = !DILocalVariable(name: "watermark", arg: 2, scope: !10663, file: !1373, line: 444, type: !173)
!10667 = !DILocation(line: 0, scope: !10663)
!10668 = !DILocation(line: 447, column: 28, scope: !10663)
!10669 = !DILocation(line: 447, column: 48, scope: !10663)
!10670 = !DILocation(line: 447, column: 72, scope: !10663)
!10671 = !DILocation(line: 447, column: 25, scope: !10663)
!10672 = !DILocation(line: 448, column: 1, scope: !10663)
!10673 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1373, file: !1373, line: 458, type: !10560, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10674)
!10674 = !{!10675, !10676}
!10675 = !DILocalVariable(name: "base", arg: 1, scope: !10673, file: !1373, line: 458, type: !1537)
!10676 = !DILocalVariable(name: "watermark", arg: 2, scope: !10673, file: !1373, line: 458, type: !173)
!10677 = !DILocation(line: 0, scope: !10673)
!10678 = !DILocation(line: 461, column: 28, scope: !10673)
!10679 = !DILocation(line: 461, column: 48, scope: !10673)
!10680 = !DILocation(line: 461, column: 72, scope: !10673)
!10681 = !DILocation(line: 461, column: 25, scope: !10673)
!10682 = !DILocation(line: 462, column: 1, scope: !10673)
!10683 = distinct !DISubprogram(name: "UART_Enable", scope: !1373, file: !1373, line: 242, type: !10684, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10686)
!10684 = !DISubroutineType(types: !10685)
!10685 = !{null, !1537}
!10686 = !{!10687}
!10687 = !DILocalVariable(name: "base", arg: 1, scope: !10683, file: !1373, line: 242, type: !1537)
!10688 = !DILocation(line: 0, scope: !10683)
!10689 = !DILocation(line: 244, column: 5, scope: !10683)
!10690 = !DILocation(line: 244, column: 25, scope: !10683)
!10691 = !DILocation(line: 245, column: 1, scope: !10683)
!10692 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1575, file: !1575, line: 316, type: !10693, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10695)
!10693 = !DISubroutineType(types: !10694)
!10694 = !{!103, !1572, !1578}
!10695 = !{!10696, !10697, !10698}
!10696 = !DILocalVariable(name: "config", arg: 1, scope: !10692, file: !1575, line: 317, type: !1572)
!10697 = !DILocalVariable(name: "state", arg: 2, scope: !10692, file: !1575, line: 318, type: !1578)
!10698 = !DILocalVariable(name: "reg", scope: !10692, file: !1575, line: 320, type: !22)
!10699 = !DILocation(line: 0, scope: !10692)
!10700 = !DILocation(line: 329, column: 39, scope: !10692)
!10701 = !DILocation(line: 329, column: 52, scope: !10692)
!10702 = !DILocation(line: 329, column: 9, scope: !10692)
!10703 = !DILocation(line: 329, column: 2, scope: !10692)
!10704 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1873, file: !1873, line: 270, type: !1879, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10705)
!10705 = !{!10706}
!10706 = !DILocalVariable(name: "dev", arg: 1, scope: !10704, file: !1873, line: 270, type: !1881)
!10707 = !DILocation(line: 0, scope: !10704)
!10708 = !DILocation(line: 274, column: 2, scope: !10704)
!10709 = !DILocation(line: 275, column: 12, scope: !10704)
!10710 = !DILocation(line: 276, column: 15, scope: !10704)
!10711 = !DILocation(line: 277, column: 16, scope: !10704)
!10712 = !DILocation(line: 278, column: 15, scope: !10704)
!10713 = !DILocation(line: 279, column: 16, scope: !10704)
!10714 = !DILocation(line: 282, column: 2, scope: !10704)
!10715 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1794, file: !1794, line: 1814, type: !7840, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10716)
!10716 = !{!10717, !10718}
!10717 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10715, file: !1794, line: 1814, type: !3044)
!10718 = !DILocalVariable(name: "priority", arg: 2, scope: !10715, file: !1794, line: 1814, type: !190)
!10719 = !DILocation(line: 0, scope: !10715)
!10720 = !DILocation(line: 1822, column: 46, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !1794, line: 1821, column: 3)
!10722 = distinct !DILexicalBlock(scope: !10715, file: !1794, line: 1816, column: 7)
!10723 = !DILocation(line: 1824, column: 1, scope: !10715)
!10724 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1873, file: !1873, line: 118, type: !7735, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10725)
!10725 = !{!10726, !10727}
!10726 = !DILocalVariable(name: "arg", arg: 1, scope: !10724, file: !1873, line: 118, type: !102)
!10727 = !DILocalVariable(name: "dticks", scope: !10724, file: !1873, line: 121, type: !190)
!10728 = !DILocation(line: 0, scope: !10724)
!10729 = !DILocation(line: 124, column: 2, scope: !10724)
!10730 = !DILocation(line: 129, column: 17, scope: !10724)
!10731 = !DILocation(line: 129, column: 14, scope: !10724)
!10732 = !DILocation(line: 130, column: 15, scope: !10724)
!10733 = !DILocation(line: 145, column: 27, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10735, file: !1873, line: 132, column: 16)
!10735 = distinct !DILexicalBlock(scope: !10724, file: !1873, line: 132, column: 6)
!10736 = !DILocation(line: 145, column: 25, scope: !10734)
!10737 = !DILocation(line: 145, column: 45, scope: !10734)
!10738 = !DILocation(line: 146, column: 30, scope: !10734)
!10739 = !DILocation(line: 146, column: 20, scope: !10734)
!10740 = !DILocation(line: 147, column: 3, scope: !10734)
!10741 = !DILocation(line: 151, column: 2, scope: !10724)
!10742 = !DILocation(line: 152, column: 1, scope: !10724)
!10743 = distinct !DISubprogram(name: "elapsed", scope: !1873, file: !1873, line: 85, type: !7887, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10744)
!10744 = !{!10745, !10746, !10747}
!10745 = !DILocalVariable(name: "val1", scope: !10743, file: !1873, line: 87, type: !190)
!10746 = !DILocalVariable(name: "ctrl", scope: !10743, file: !1873, line: 88, type: !190)
!10747 = !DILocalVariable(name: "val2", scope: !10743, file: !1873, line: 89, type: !190)
!10748 = !DILocation(line: 87, column: 27, scope: !10743)
!10749 = !DILocation(line: 0, scope: !10743)
!10750 = !DILocation(line: 88, column: 27, scope: !10743)
!10751 = !DILocation(line: 89, column: 27, scope: !10743)
!10752 = !DILocation(line: 105, column: 12, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10743, file: !1873, line: 105, column: 6)
!10754 = !DILocation(line: 106, column: 6, scope: !10753)
!10755 = !DILocation(line: 107, column: 16, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10753, file: !1873, line: 106, column: 24)
!10757 = !DILocation(line: 111, column: 18, scope: !10756)
!10758 = !DILocation(line: 112, column: 2, scope: !10756)
!10759 = !DILocation(line: 114, column: 20, scope: !10743)
!10760 = !DILocation(line: 114, column: 30, scope: !10743)
!10761 = !DILocation(line: 114, column: 28, scope: !10743)
!10762 = !DILocation(line: 114, column: 2, scope: !10743)
!10763 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1873, file: !1873, line: 154, type: !10764, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10766)
!10764 = !DISubroutineType(types: !10765)
!10765 = !{null, !371, !279}
!10766 = !{!10767, !10768, !10769, !10770, !10771, !10772, !10773, !10778, !10779}
!10767 = !DILocalVariable(name: "ticks", arg: 1, scope: !10763, file: !1873, line: 154, type: !371)
!10768 = !DILocalVariable(name: "idle", arg: 2, scope: !10763, file: !1873, line: 154, type: !279)
!10769 = !DILocalVariable(name: "delay", scope: !10763, file: !1873, line: 169, type: !190)
!10770 = !DILocalVariable(name: "val1", scope: !10763, file: !1873, line: 170, type: !190)
!10771 = !DILocalVariable(name: "val2", scope: !10763, file: !1873, line: 170, type: !190)
!10772 = !DILocalVariable(name: "last_load_", scope: !10763, file: !1873, line: 171, type: !190)
!10773 = !DILocalVariable(name: "key", scope: !10763, file: !1873, line: 176, type: !10774)
!10774 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !10775)
!10775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !10776)
!10776 = !{!10777}
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10775, file: !244, line: 33, baseType: !103, size: 32)
!10778 = !DILocalVariable(name: "pending", scope: !10763, file: !1873, line: 178, type: !190)
!10779 = !DILocalVariable(name: "unannounced", scope: !10763, file: !1873, line: 185, type: !190)
!10780 = !DILocation(line: 0, scope: !10763)
!10781 = !DILocation(line: 162, column: 49, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10763, file: !1873, line: 162, column: 6)
!10783 = !DILocation(line: 163, column: 17, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10782, file: !1873, line: 162, column: 78)
!10785 = !DILocation(line: 164, column: 13, scope: !10784)
!10786 = !DILocation(line: 165, column: 3, scope: !10784)
!10787 = !DILocation(line: 171, column: 24, scope: !10763)
!10788 = !DILocation(line: 173, column: 10, scope: !10763)
!10789 = !DILocation(line: 174, column: 10, scope: !10763)
!10790 = !DILocalVariable(name: "l", arg: 1, scope: !10791, file: !244, line: 136, type: !10794)
!10791 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !10792, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10795)
!10792 = !DISubroutineType(types: !10793)
!10793 = !{!10774, !10794}
!10794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!10795 = !{!10790, !10796}
!10796 = !DILocalVariable(name: "k", scope: !10791, file: !244, line: 139, type: !10774)
!10797 = !DILocation(line: 0, scope: !10791, inlinedAt: !10798)
!10798 = distinct !DILocation(line: 176, column: 25, scope: !10763)
!10799 = !DILocation(line: 55, column: 2, scope: !10800, inlinedAt: !10804)
!10800 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10801)
!10801 = !{!10802, !10803}
!10802 = !DILocalVariable(name: "key", scope: !10800, file: !7921, line: 44, type: !32)
!10803 = !DILocalVariable(name: "tmp", scope: !10800, file: !7921, line: 53, type: !32)
!10804 = distinct !DILocation(line: 145, column: 10, scope: !10791, inlinedAt: !10798)
!10805 = !{i64 2952624}
!10806 = !DILocation(line: 0, scope: !10800, inlinedAt: !10804)
!10807 = !DILocation(line: 148, column: 2, scope: !10808, inlinedAt: !10798)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !244, line: 148, column: 2)
!10809 = distinct !DILexicalBlock(scope: !10791, file: !244, line: 148, column: 2)
!10810 = !DILocation(line: 148, column: 2, scope: !10809, inlinedAt: !10798)
!10811 = !DILocation(line: 148, column: 2, scope: !10812, inlinedAt: !10798)
!10812 = distinct !DILexicalBlock(scope: !10808, file: !244, line: 148, column: 2)
!10813 = !DILocation(line: 160, column: 2, scope: !10791, inlinedAt: !10798)
!10814 = !DILocation(line: 178, column: 21, scope: !10763)
!10815 = !DILocation(line: 180, column: 18, scope: !10763)
!10816 = !DILocation(line: 182, column: 14, scope: !10763)
!10817 = !DILocation(line: 183, column: 15, scope: !10763)
!10818 = !DILocation(line: 185, column: 39, scope: !10763)
!10819 = !DILocation(line: 185, column: 37, scope: !10763)
!10820 = !DILocation(line: 187, column: 27, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10763, file: !1873, line: 187, column: 6)
!10822 = !DILocation(line: 187, column: 6, scope: !10763)
!10823 = !DILocation(line: 202, column: 27, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10821, file: !1873, line: 195, column: 9)
!10825 = !DILocation(line: 202, column: 48, scope: !10824)
!10826 = !DILocation(line: 203, column: 9, scope: !10824)
!10827 = !DILocation(line: 204, column: 11, scope: !10824)
!10828 = !DILocation(line: 205, column: 13, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10824, file: !1873, line: 205, column: 7)
!10830 = !DILocation(line: 205, column: 7, scope: !10824)
!10831 = !DILocation(line: 0, scope: !10821)
!10832 = !DILocation(line: 212, column: 18, scope: !10763)
!10833 = !DILocation(line: 214, column: 28, scope: !10763)
!10834 = !DILocation(line: 214, column: 16, scope: !10763)
!10835 = !DILocation(line: 215, column: 15, scope: !10763)
!10836 = !DILocation(line: 227, column: 11, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10763, file: !1873, line: 227, column: 6)
!10838 = !DILocation(line: 227, column: 6, scope: !10763)
!10839 = !DILocation(line: 228, column: 15, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10837, file: !1873, line: 227, column: 19)
!10841 = !DILocation(line: 228, column: 38, scope: !10840)
!10842 = !DILocation(line: 228, column: 24, scope: !10840)
!10843 = !DILocation(line: 229, column: 2, scope: !10840)
!10844 = !DILocation(line: 230, column: 24, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10837, file: !1873, line: 229, column: 9)
!10846 = !DILocation(line: 230, column: 15, scope: !10845)
!10847 = !DILocation(line: 0, scope: !10837)
!10848 = !DILocalVariable(name: "key", arg: 2, scope: !10849, file: !244, line: 190, type: !10774)
!10849 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !10850, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10852)
!10850 = !DISubroutineType(types: !10851)
!10851 = !{null, !10794, !10774}
!10852 = !{!10853, !10848}
!10853 = !DILocalVariable(name: "l", arg: 1, scope: !10849, file: !244, line: 189, type: !10794)
!10854 = !DILocation(line: 0, scope: !10849, inlinedAt: !10855)
!10855 = distinct !DILocation(line: 232, column: 2, scope: !10763)
!10856 = !DILocation(line: 194, column: 2, scope: !10857, inlinedAt: !10855)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !244, line: 194, column: 2)
!10858 = distinct !DILexicalBlock(scope: !10849, file: !244, line: 194, column: 2)
!10859 = !DILocation(line: 194, column: 2, scope: !10858, inlinedAt: !10855)
!10860 = !DILocation(line: 194, column: 2, scope: !10861, inlinedAt: !10855)
!10861 = distinct !DILexicalBlock(scope: !10857, file: !244, line: 194, column: 2)
!10862 = !DILocalVariable(name: "key", arg: 1, scope: !10863, file: !7921, line: 84, type: !32)
!10863 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10864)
!10864 = !{!10862}
!10865 = !DILocation(line: 0, scope: !10863, inlinedAt: !10866)
!10866 = distinct !DILocation(line: 215, column: 2, scope: !10849, inlinedAt: !10855)
!10867 = !DILocation(line: 95, column: 2, scope: !10863, inlinedAt: !10866)
!10868 = !{i64 2953441}
!10869 = !DILocation(line: 234, column: 1, scope: !10763)
!10870 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1873, file: !1873, line: 236, type: !7887, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10871)
!10871 = !{!10872, !10873}
!10872 = !DILocalVariable(name: "key", scope: !10870, file: !1873, line: 242, type: !10774)
!10873 = !DILocalVariable(name: "cyc", scope: !10870, file: !1873, line: 243, type: !190)
!10874 = !DILocation(line: 0, scope: !10791, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 242, column: 25, scope: !10870)
!10876 = !DILocation(line: 55, column: 2, scope: !10800, inlinedAt: !10877)
!10877 = distinct !DILocation(line: 145, column: 10, scope: !10791, inlinedAt: !10875)
!10878 = !DILocation(line: 0, scope: !10800, inlinedAt: !10877)
!10879 = !DILocation(line: 148, column: 2, scope: !10808, inlinedAt: !10875)
!10880 = !DILocation(line: 148, column: 2, scope: !10809, inlinedAt: !10875)
!10881 = !DILocation(line: 148, column: 2, scope: !10812, inlinedAt: !10875)
!10882 = !DILocation(line: 160, column: 2, scope: !10791, inlinedAt: !10875)
!10883 = !DILocation(line: 0, scope: !10870)
!10884 = !DILocation(line: 243, column: 17, scope: !10870)
!10885 = !DILocation(line: 243, column: 29, scope: !10870)
!10886 = !DILocation(line: 243, column: 43, scope: !10870)
!10887 = !DILocation(line: 0, scope: !10849, inlinedAt: !10888)
!10888 = distinct !DILocation(line: 245, column: 2, scope: !10870)
!10889 = !DILocation(line: 194, column: 2, scope: !10857, inlinedAt: !10888)
!10890 = !DILocation(line: 194, column: 2, scope: !10858, inlinedAt: !10888)
!10891 = !DILocation(line: 194, column: 2, scope: !10861, inlinedAt: !10888)
!10892 = !DILocation(line: 243, column: 27, scope: !10870)
!10893 = !DILocation(line: 243, column: 41, scope: !10870)
!10894 = !DILocation(line: 0, scope: !10863, inlinedAt: !10895)
!10895 = distinct !DILocation(line: 215, column: 2, scope: !10849, inlinedAt: !10888)
!10896 = !DILocation(line: 95, column: 2, scope: !10863, inlinedAt: !10895)
!10897 = !DILocation(line: 246, column: 13, scope: !10870)
!10898 = !DILocation(line: 246, column: 2, scope: !10870)
!10899 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1873, file: !1873, line: 249, type: !7887, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10900)
!10900 = !{!10901, !10902}
!10901 = !DILocalVariable(name: "key", scope: !10899, file: !1873, line: 251, type: !10774)
!10902 = !DILocalVariable(name: "ret", scope: !10899, file: !1873, line: 252, type: !190)
!10903 = !DILocation(line: 0, scope: !10791, inlinedAt: !10904)
!10904 = distinct !DILocation(line: 251, column: 25, scope: !10899)
!10905 = !DILocation(line: 55, column: 2, scope: !10800, inlinedAt: !10906)
!10906 = distinct !DILocation(line: 145, column: 10, scope: !10791, inlinedAt: !10904)
!10907 = !DILocation(line: 0, scope: !10800, inlinedAt: !10906)
!10908 = !DILocation(line: 148, column: 2, scope: !10808, inlinedAt: !10904)
!10909 = !DILocation(line: 148, column: 2, scope: !10809, inlinedAt: !10904)
!10910 = !DILocation(line: 148, column: 2, scope: !10812, inlinedAt: !10904)
!10911 = !DILocation(line: 160, column: 2, scope: !10791, inlinedAt: !10904)
!10912 = !DILocation(line: 0, scope: !10899)
!10913 = !DILocation(line: 252, column: 17, scope: !10899)
!10914 = !DILocation(line: 252, column: 29, scope: !10899)
!10915 = !DILocation(line: 0, scope: !10849, inlinedAt: !10916)
!10916 = distinct !DILocation(line: 254, column: 2, scope: !10899)
!10917 = !DILocation(line: 194, column: 2, scope: !10857, inlinedAt: !10916)
!10918 = !DILocation(line: 194, column: 2, scope: !10858, inlinedAt: !10916)
!10919 = !DILocation(line: 194, column: 2, scope: !10861, inlinedAt: !10916)
!10920 = !DILocation(line: 252, column: 27, scope: !10899)
!10921 = !DILocation(line: 0, scope: !10863, inlinedAt: !10922)
!10922 = distinct !DILocation(line: 215, column: 2, scope: !10849, inlinedAt: !10916)
!10923 = !DILocation(line: 95, column: 2, scope: !10863, inlinedAt: !10922)
!10924 = !DILocation(line: 255, column: 2, scope: !10899)
!10925 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1873, file: !1873, line: 258, type: !374, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !2145)
!10926 = !DILocation(line: 260, column: 6, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10925, file: !1873, line: 260, column: 6)
!10928 = !DILocation(line: 260, column: 16, scope: !10927)
!10929 = !DILocation(line: 260, column: 6, scope: !10925)
!10930 = !DILocation(line: 261, column: 17, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10927, file: !1873, line: 260, column: 34)
!10932 = !DILocation(line: 262, column: 2, scope: !10931)
!10933 = !DILocation(line: 263, column: 1, scope: !10925)
!10934 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1873, file: !1873, line: 265, type: !374, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !2145)
!10935 = !DILocation(line: 267, column: 16, scope: !10934)
!10936 = !DILocation(line: 268, column: 1, scope: !10934)
!10937 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10938, file: !10938, line: 9, type: !10939, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !10969)
!10938 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10939 = !DISubroutineType(types: !10940)
!10940 = !{!103, !10941, !173, !10968}
!10941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10942, size: 32)
!10942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10943)
!10943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1575, line: 60, size: 64, elements: !10944)
!10944 = !{!10945, !10967}
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10943, file: !1575, line: 69, baseType: !10946, size: 32)
!10946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10947, size: 32)
!10947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10948)
!10948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1575, line: 50, size: 64, elements: !10949)
!10949 = !{!10950, !10965, !10966}
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10948, file: !1575, line: 52, baseType: !10951, size: 32)
!10951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10952, size: 32)
!10952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10953)
!10953 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1332, line: 64, baseType: !10954)
!10954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1332, line: 59, size: 160, elements: !10955)
!10955 = !{!10956, !10964}
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10954, file: !1332, line: 60, baseType: !10957, size: 128)
!10957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1332, line: 51, size: 128, elements: !10958)
!10958 = !{!10959, !10960, !10961, !10962, !10963}
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10957, file: !1332, line: 52, baseType: !190, size: 32)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10957, file: !1332, line: 53, baseType: !190, size: 32, offset: 32)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10957, file: !1332, line: 54, baseType: !190, size: 32, offset: 64)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10957, file: !1332, line: 55, baseType: !173, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10957, file: !1332, line: 56, baseType: !190, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10954, file: !1332, line: 61, baseType: !190, size: 32, offset: 128)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10948, file: !1575, line: 54, baseType: !173, size: 8, offset: 32)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10948, file: !1575, line: 56, baseType: !173, size: 8, offset: 40)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10943, file: !1575, line: 71, baseType: !173, size: 8, offset: 32)
!10968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10946, size: 32)
!10969 = !{!10970, !10971, !10972}
!10970 = !DILocalVariable(name: "config", arg: 1, scope: !10937, file: !10938, line: 9, type: !10941)
!10971 = !DILocalVariable(name: "id", arg: 2, scope: !10937, file: !10938, line: 9, type: !173)
!10972 = !DILocalVariable(name: "state", arg: 3, scope: !10937, file: !10938, line: 10, type: !10968)
!10973 = !DILocation(line: 0, scope: !10937)
!10974 = !DILocation(line: 12, column: 20, scope: !10937)
!10975 = !DILocation(line: 13, column: 27, scope: !10937)
!10976 = !DILocation(line: 13, column: 42, scope: !10937)
!10977 = !DILocation(line: 13, column: 19, scope: !10937)
!10978 = !DILocation(line: 13, column: 16, scope: !10937)
!10979 = !DILocation(line: 13, column: 2, scope: !10937)
!10980 = distinct !{!10980, !10979, !10981}
!10981 = !DILocation(line: 19, column: 2, scope: !10937)
!10982 = !DILocation(line: 14, column: 23, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !10938, line: 14, column: 7)
!10984 = distinct !DILexicalBlock(scope: !10937, file: !10938, line: 13, column: 54)
!10985 = !DILocation(line: 14, column: 10, scope: !10983)
!10986 = !DILocation(line: 18, column: 11, scope: !10984)
!10987 = !DILocation(line: 14, column: 7, scope: !10984)
!10988 = !DILocation(line: 22, column: 1, scope: !10937)
!10989 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1914, file: !1914, line: 51, type: !1920, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !10990)
!10990 = !{!10991}
!10991 = !DILocalVariable(name: "dev", arg: 1, scope: !10989, file: !1914, line: 51, type: !1922)
!10992 = !DILocation(line: 0, scope: !10989)
!10993 = !DILocation(line: 66, column: 2, scope: !10989)
!10994 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1914, file: !1914, line: 10, type: !10995, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !11011)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!103, !10997, !173, !22}
!10997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10998, size: 32)
!10998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10999)
!10999 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1332, line: 64, baseType: !11000)
!11000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1332, line: 59, size: 160, elements: !11001)
!11001 = !{!11002, !11010}
!11002 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11000, file: !1332, line: 60, baseType: !11003, size: 128)
!11003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1332, line: 51, size: 128, elements: !11004)
!11004 = !{!11005, !11006, !11007, !11008, !11009}
!11005 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !11003, file: !1332, line: 52, baseType: !190, size: 32)
!11006 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !11003, file: !1332, line: 53, baseType: !190, size: 32, offset: 32)
!11007 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !11003, file: !1332, line: 54, baseType: !190, size: 32, offset: 64)
!11008 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !11003, file: !1332, line: 55, baseType: !173, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!11009 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !11003, file: !1332, line: 56, baseType: !190, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!11010 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !11000, file: !1332, line: 61, baseType: !190, size: 32, offset: 128)
!11011 = !{!11012, !11013, !11014, !11015, !11017, !11020, !11021, !11022, !11023, !11024}
!11012 = !DILocalVariable(name: "pins", arg: 1, scope: !10994, file: !1914, line: 10, type: !10997)
!11013 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10994, file: !1914, line: 10, type: !173)
!11014 = !DILocalVariable(name: "reg", arg: 3, scope: !10994, file: !1914, line: 11, type: !22)
!11015 = !DILocalVariable(name: "i", scope: !11016, file: !1914, line: 14, type: !173)
!11016 = distinct !DILexicalBlock(scope: !10994, file: !1914, line: 14, column: 2)
!11017 = !DILocalVariable(name: "mux_register", scope: !11018, file: !1914, line: 15, type: !190)
!11018 = distinct !DILexicalBlock(scope: !11019, file: !1914, line: 14, column: 41)
!11019 = distinct !DILexicalBlock(scope: !11016, file: !1914, line: 14, column: 2)
!11020 = !DILocalVariable(name: "mux_mode", scope: !11018, file: !1914, line: 16, type: !190)
!11021 = !DILocalVariable(name: "input_register", scope: !11018, file: !1914, line: 17, type: !190)
!11022 = !DILocalVariable(name: "input_daisy", scope: !11018, file: !1914, line: 18, type: !190)
!11023 = !DILocalVariable(name: "config_register", scope: !11018, file: !1914, line: 19, type: !190)
!11024 = !DILocalVariable(name: "pin_ctrl_flags", scope: !11018, file: !1914, line: 20, type: !190)
!11025 = !DILocation(line: 0, scope: !10994)
!11026 = !DILocation(line: 0, scope: !11016)
!11027 = !DILocation(line: 14, column: 25, scope: !11019)
!11028 = !DILocation(line: 14, column: 2, scope: !11016)
!11029 = !DILocation(line: 48, column: 2, scope: !10994)
!11030 = !DILocation(line: 15, column: 42, scope: !11018)
!11031 = !DILocation(line: 0, scope: !11018)
!11032 = !DILocation(line: 16, column: 38, scope: !11018)
!11033 = !DILocation(line: 17, column: 44, scope: !11018)
!11034 = !DILocation(line: 19, column: 45, scope: !11018)
!11035 = !DILocation(line: 20, column: 37, scope: !11018)
!11036 = !DILocation(line: 35, column: 4, scope: !11018)
!11037 = !DILocation(line: 36, column: 4, scope: !11018)
!11038 = !DILocation(line: 35, column: 45, scope: !11018)
!11039 = !DILocation(line: 34, column: 5, scope: !11018)
!11040 = !DILocation(line: 34, column: 53, scope: !11018)
!11041 = !DILocation(line: 37, column: 7, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11018, file: !1914, line: 37, column: 7)
!11043 = !DILocation(line: 37, column: 7, scope: !11018)
!11044 = !DILocation(line: 18, column: 41, scope: !11018)
!11045 = !DILocation(line: 39, column: 5, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11042, file: !1914, line: 37, column: 23)
!11047 = !DILocation(line: 38, column: 6, scope: !11046)
!11048 = !DILocation(line: 38, column: 56, scope: !11046)
!11049 = !DILocation(line: 40, column: 3, scope: !11046)
!11050 = !DILocation(line: 41, column: 7, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11018, file: !1914, line: 41, column: 7)
!11052 = !DILocation(line: 41, column: 7, scope: !11018)
!11053 = !DILocation(line: 43, column: 20, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11051, file: !1914, line: 41, column: 24)
!11055 = !DILocation(line: 42, column: 6, scope: !11054)
!11056 = !DILocation(line: 42, column: 57, scope: !11054)
!11057 = !DILocation(line: 44, column: 3, scope: !11054)
!11058 = !DILocation(line: 14, column: 37, scope: !11019)
!11059 = distinct !{!11059, !11028, !11060}
!11060 = !DILocation(line: 47, column: 2, scope: !11016)
!11061 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !11062, file: !11062, line: 43, type: !11063, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11117)
!11062 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11063 = !DISubroutineType(types: !11064)
!11064 = !{null, !11065, !190, !190, !190}
!11065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11066, size: 32)
!11066 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !910, line: 4575, baseType: !11067)
!11067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 4532, size: 390144, elements: !11068)
!11068 = !{!11069, !11070, !11071, !11072, !11073, !11074, !11082, !11083, !11091, !11092}
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !11067, file: !910, line: 4533, baseType: !914, size: 32)
!11070 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !11067, file: !910, line: 4534, baseType: !914, size: 32, offset: 32)
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !11067, file: !910, line: 4535, baseType: !914, size: 32, offset: 64)
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !11067, file: !910, line: 4536, baseType: !914, size: 32, offset: 96)
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11067, file: !910, line: 4537, baseType: !919, size: 16256, offset: 128)
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !11067, file: !910, line: 4543, baseType: !11075, size: 4224, offset: 16384)
!11075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11076, size: 4224, elements: !930)
!11076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11067, file: !910, line: 4538, size: 128, elements: !11077)
!11077 = !{!11078, !11079, !11080, !11081}
!11078 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !11076, file: !910, line: 4539, baseType: !914, size: 32)
!11079 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !11076, file: !910, line: 4540, baseType: !914, size: 32, offset: 32)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !11076, file: !910, line: 4541, baseType: !914, size: 32, offset: 64)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !11076, file: !910, line: 4542, baseType: !914, size: 32, offset: 96)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11067, file: !910, line: 4544, baseType: !933, size: 110464, offset: 20608)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !11067, file: !910, line: 4550, baseType: !11084, size: 24448, offset: 131072)
!11084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11085, size: 24448, elements: !944)
!11085 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11067, file: !910, line: 4545, size: 128, elements: !11086)
!11086 = !{!11087, !11088, !11089, !11090}
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !11085, file: !910, line: 4546, baseType: !914, size: 32)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !11085, file: !910, line: 4547, baseType: !914, size: 32, offset: 32)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !11085, file: !910, line: 4548, baseType: !914, size: 32, offset: 64)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !11085, file: !910, line: 4549, baseType: !914, size: 32, offset: 96)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11067, file: !910, line: 4551, baseType: !947, size: 106624, offset: 155520)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !11067, file: !910, line: 4574, baseType: !11093, size: 128000, offset: 262144)
!11093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11094, size: 128000, elements: !978)
!11094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11067, file: !910, line: 4552, size: 1024, elements: !11095)
!11095 = !{!11096, !11097, !11098, !11099, !11100, !11101, !11102, !11103, !11104, !11105, !11106, !11107, !11108, !11109, !11110, !11111, !11112, !11113, !11114, !11115, !11116}
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !11094, file: !910, line: 4553, baseType: !914, size: 32)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !11094, file: !910, line: 4554, baseType: !914, size: 32, offset: 32)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !11094, file: !910, line: 4555, baseType: !914, size: 32, offset: 64)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !11094, file: !910, line: 4556, baseType: !914, size: 32, offset: 96)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !11094, file: !910, line: 4557, baseType: !914, size: 32, offset: 128)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !11094, file: !910, line: 4558, baseType: !914, size: 32, offset: 160)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !11094, file: !910, line: 4559, baseType: !914, size: 32, offset: 192)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !11094, file: !910, line: 4560, baseType: !914, size: 32, offset: 224)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !11094, file: !910, line: 4561, baseType: !914, size: 32, offset: 256)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !11094, file: !910, line: 4562, baseType: !914, size: 32, offset: 288)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !11094, file: !910, line: 4563, baseType: !914, size: 32, offset: 320)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !11094, file: !910, line: 4564, baseType: !914, size: 32, offset: 352)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !11094, file: !910, line: 4565, baseType: !914, size: 32, offset: 384)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !11094, file: !910, line: 4566, baseType: !914, size: 32, offset: 416)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !11094, file: !910, line: 4567, baseType: !914, size: 32, offset: 448)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !11094, file: !910, line: 4568, baseType: !914, size: 32, offset: 480)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11094, file: !910, line: 4569, baseType: !971, size: 384, offset: 512)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !11094, file: !910, line: 4570, baseType: !914, size: 32, offset: 896)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !11094, file: !910, line: 4571, baseType: !914, size: 32, offset: 928)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !11094, file: !910, line: 4572, baseType: !914, size: 32, offset: 960)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !11094, file: !910, line: 4573, baseType: !914, size: 32, offset: 992)
!11117 = !{!11118, !11119, !11120, !11121}
!11118 = !DILocalVariable(name: "base", arg: 1, scope: !11061, file: !11062, line: 43, type: !11065)
!11119 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11061, file: !11062, line: 43, type: !190)
!11120 = !DILocalVariable(name: "pre", arg: 3, scope: !11061, file: !11062, line: 43, type: !190)
!11121 = !DILocalVariable(name: "post", arg: 4, scope: !11061, file: !11062, line: 43, type: !190)
!11122 = !DILocation(line: 0, scope: !11061)
!11123 = !DILocation(line: 45, column: 5, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !11062, line: 45, column: 5)
!11125 = distinct !DILexicalBlock(scope: !11061, file: !11062, line: 45, column: 5)
!11126 = !DILocation(line: 45, column: 5, scope: !11125)
!11127 = !DILocation(line: 45, column: 5, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11124, file: !11062, line: 45, column: 5)
!11129 = !DILocation(line: 46, column: 5, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !11062, line: 46, column: 5)
!11131 = distinct !DILexicalBlock(scope: !11061, file: !11062, line: 46, column: 5)
!11132 = !DILocation(line: 46, column: 5, scope: !11131)
!11133 = !DILocation(line: 46, column: 5, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !11062, line: 46, column: 5)
!11135 = !DILocation(line: 48, column: 25, scope: !11061)
!11136 = !DILocation(line: 48, column: 42, scope: !11061)
!11137 = !DILocation(line: 50, column: 24, scope: !11061)
!11138 = !DILocation(line: 49, column: 94, scope: !11061)
!11139 = !DILocation(line: 50, column: 54, scope: !11061)
!11140 = !DILocation(line: 48, column: 22, scope: !11061)
!11141 = !DILocation(line: 51, column: 1, scope: !11061)
!11142 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !11062, file: !11062, line: 59, type: !11143, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11145)
!11143 = !DISubroutineType(types: !11144)
!11144 = !{null, !11065, !190, !1601, !1601}
!11145 = !{!11146, !11147, !11148, !11149}
!11146 = !DILocalVariable(name: "base", arg: 1, scope: !11142, file: !11062, line: 59, type: !11065)
!11147 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11142, file: !11062, line: 59, type: !190)
!11148 = !DILocalVariable(name: "pre", arg: 3, scope: !11142, file: !11062, line: 59, type: !1601)
!11149 = !DILocalVariable(name: "post", arg: 4, scope: !11142, file: !11062, line: 59, type: !1601)
!11150 = !DILocation(line: 0, scope: !11142)
!11151 = !DILocation(line: 61, column: 5, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !11062, line: 61, column: 5)
!11153 = distinct !DILexicalBlock(scope: !11142, file: !11062, line: 61, column: 5)
!11154 = !DILocation(line: 61, column: 5, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11152, file: !11062, line: 61, column: 5)
!11156 = !DILocation(line: 63, column: 13, scope: !11142)
!11157 = !DILocation(line: 63, column: 63, scope: !11142)
!11158 = !DILocation(line: 63, column: 10, scope: !11142)
!11159 = !DILocation(line: 64, column: 14, scope: !11142)
!11160 = !DILocation(line: 64, column: 31, scope: !11142)
!11161 = !DILocation(line: 64, column: 11, scope: !11142)
!11162 = !DILocation(line: 65, column: 1, scope: !11142)
!11163 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !11062, file: !11062, line: 73, type: !11164, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !11166)
!11164 = !DISubroutineType(types: !11165)
!11165 = !{null, !11065, !190, !190, !190, !190}
!11166 = !{!11167, !11168, !11169, !11170, !11171}
!11167 = !DILocalVariable(name: "base", arg: 1, scope: !11163, file: !11062, line: 73, type: !11065)
!11168 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11163, file: !11062, line: 73, type: !190)
!11169 = !DILocalVariable(name: "mux", arg: 3, scope: !11163, file: !11062, line: 73, type: !190)
!11170 = !DILocalVariable(name: "pre", arg: 4, scope: !11163, file: !11062, line: 73, type: !190)
!11171 = !DILocalVariable(name: "post", arg: 5, scope: !11163, file: !11062, line: 73, type: !190)
!11172 = !DILocation(line: 0, scope: !11163)
!11173 = !DILocation(line: 75, column: 5, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !11062, line: 75, column: 5)
!11175 = distinct !DILexicalBlock(scope: !11163, file: !11062, line: 75, column: 5)
!11176 = !DILocation(line: 75, column: 5, scope: !11175)
!11177 = !DILocation(line: 75, column: 5, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11174, file: !11062, line: 75, column: 5)
!11179 = !DILocation(line: 76, column: 5, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !11062, line: 76, column: 5)
!11181 = distinct !DILexicalBlock(scope: !11163, file: !11062, line: 76, column: 5)
!11182 = !DILocation(line: 76, column: 5, scope: !11181)
!11183 = !DILocation(line: 76, column: 5, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11180, file: !11062, line: 76, column: 5)
!11185 = !DILocation(line: 78, column: 25, scope: !11163)
!11186 = !DILocation(line: 78, column: 42, scope: !11163)
!11187 = !DILocation(line: 80, column: 24, scope: !11163)
!11188 = !DILocation(line: 80, column: 51, scope: !11163)
!11189 = !DILocation(line: 79, column: 121, scope: !11163)
!11190 = !DILocation(line: 80, column: 49, scope: !11163)
!11191 = !DILocation(line: 80, column: 81, scope: !11163)
!11192 = !DILocation(line: 78, column: 22, scope: !11163)
!11193 = !DILocation(line: 81, column: 1, scope: !11163)
!11194 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !11195, file: !11195, line: 43, type: !11196, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11198)
!11195 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11196 = !DISubroutineType(types: !11197)
!11197 = !{!190, !3355}
!11198 = !{!11199}
!11199 = !DILocalVariable(name: "base", arg: 1, scope: !11194, file: !11195, line: 43, type: !3355)
!11200 = !DILocation(line: 0, scope: !11194)
!11201 = !DILocation(line: 45, column: 9, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11194, file: !11195, line: 45, column: 9)
!11203 = !DILocation(line: 45, column: 9, scope: !11194)
!11204 = !DILocation(line: 48, column: 26, scope: !11194)
!11205 = !DILocation(line: 48, column: 45, scope: !11194)
!11206 = !DILocation(line: 48, column: 23, scope: !11194)
!11207 = !DILocation(line: 48, column: 5, scope: !11194)
!11208 = !DILocation(line: 49, column: 1, scope: !11194)
!11209 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !3346, file: !3346, line: 220, type: !11210, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11212)
!11210 = !DISubroutineType(types: !11211)
!11211 = !{!279, !3355, !190}
!11212 = !{!11213, !11214}
!11213 = !DILocalVariable(name: "base", arg: 1, scope: !11209, file: !3346, line: 220, type: !3355)
!11214 = !DILocalVariable(name: "pllControl", arg: 2, scope: !11209, file: !3346, line: 220, type: !190)
!11215 = !DILocation(line: 0, scope: !11209)
!11216 = !DILocation(line: 222, column: 19, scope: !11209)
!11217 = !DILocation(line: 222, column: 58, scope: !11209)
!11218 = !DILocation(line: 222, column: 12, scope: !11209)
!11219 = !DILocation(line: 222, column: 5, scope: !11209)
!11220 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !11195, file: !11195, line: 57, type: !11196, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11221)
!11221 = !{!11222}
!11222 = !DILocalVariable(name: "base", arg: 1, scope: !11220, file: !11195, line: 57, type: !3355)
!11223 = !DILocation(line: 0, scope: !11220)
!11224 = !DILocation(line: 59, column: 9, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11220, file: !11195, line: 59, column: 9)
!11226 = !DILocation(line: 59, column: 9, scope: !11220)
!11227 = !DILocation(line: 62, column: 9, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11220, file: !11195, line: 62, column: 9)
!11229 = !DILocation(line: 62, column: 28, scope: !11228)
!11230 = !DILocation(line: 0, scope: !11228)
!11231 = !DILocation(line: 66, column: 1, scope: !11220)
!11232 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !11195, file: !11195, line: 74, type: !11196, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11233)
!11233 = !{!11234, !11235, !11236, !11237}
!11234 = !DILocalVariable(name: "base", arg: 1, scope: !11232, file: !11195, line: 74, type: !3355)
!11235 = !DILocalVariable(name: "divSelect", scope: !11232, file: !11195, line: 76, type: !173)
!11236 = !DILocalVariable(name: "divTestSelect", scope: !11232, file: !11195, line: 76, type: !173)
!11237 = !DILocalVariable(name: "factor", scope: !11232, file: !11195, line: 77, type: !3418)
!11238 = !DILocation(line: 0, scope: !11232)
!11239 = !DILocation(line: 79, column: 9, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11232, file: !11195, line: 79, column: 9)
!11241 = !DILocation(line: 79, column: 9, scope: !11232)
!11242 = !DILocation(line: 82, column: 17, scope: !11232)
!11243 = !DILocation(line: 83, column: 22, scope: !11232)
!11244 = !DILocation(line: 83, column: 100, scope: !11232)
!11245 = !DILocation(line: 83, column: 21, scope: !11232)
!11246 = !DILocation(line: 86, column: 5, scope: !11232)
!11247 = !DILocation(line: 100, column: 9, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11232, file: !11195, line: 100, column: 9)
!11249 = !DILocation(line: 100, column: 41, scope: !11248)
!11250 = !DILocation(line: 100, column: 9, scope: !11232)
!11251 = !DILocation(line: 102, column: 27, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11248, file: !11195, line: 101, column: 5)
!11253 = !DILocation(line: 102, column: 59, scope: !11252)
!11254 = !DILocation(line: 102, column: 19, scope: !11252)
!11255 = !DILocation(line: 103, column: 27, scope: !11252)
!11256 = !DILocation(line: 103, column: 62, scope: !11252)
!11257 = !DILocation(line: 103, column: 19, scope: !11252)
!11258 = !DILocation(line: 102, column: 95, scope: !11252)
!11259 = !DILocation(line: 104, column: 27, scope: !11252)
!11260 = !DILocation(line: 104, column: 60, scope: !11252)
!11261 = !DILocation(line: 104, column: 19, scope: !11252)
!11262 = !DILocation(line: 103, column: 98, scope: !11252)
!11263 = !DILocation(line: 105, column: 39, scope: !11252)
!11264 = !DILocation(line: 105, column: 27, scope: !11252)
!11265 = !DILocation(line: 105, column: 60, scope: !11252)
!11266 = !DILocation(line: 105, column: 70, scope: !11252)
!11267 = !DILocation(line: 105, column: 57, scope: !11252)
!11268 = !DILocation(line: 105, column: 16, scope: !11252)
!11269 = !DILocation(line: 105, column: 9, scope: !11252)
!11270 = !DILocation(line: 109, column: 28, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11248, file: !11195, line: 108, column: 5)
!11272 = !DILocation(line: 109, column: 48, scope: !11271)
!11273 = !DILocation(line: 109, column: 46, scope: !11271)
!11274 = !DILocation(line: 109, column: 9, scope: !11271)
!11275 = !DILocation(line: 111, column: 1, scope: !11232)
!11276 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !11195, file: !11195, line: 119, type: !11196, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11277)
!11277 = !{!11278}
!11278 = !DILocalVariable(name: "base", arg: 1, scope: !11276, file: !11195, line: 119, type: !3355)
!11279 = !DILocation(line: 0, scope: !11276)
!11280 = !DILocation(line: 121, column: 9, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11276, file: !11195, line: 121, column: 9)
!11282 = !DILocation(line: 125, column: 1, scope: !11276)
!11283 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !11195, file: !11195, line: 133, type: !11196, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11284)
!11284 = !{!11285, !11286, !11287, !11288, !11289}
!11285 = !DILocalVariable(name: "base", arg: 1, scope: !11283, file: !11195, line: 133, type: !3355)
!11286 = !DILocalVariable(name: "divSelect", scope: !11283, file: !11195, line: 135, type: !173)
!11287 = !DILocalVariable(name: "divPostSelect", scope: !11283, file: !11195, line: 135, type: !173)
!11288 = !DILocalVariable(name: "divTestSelect", scope: !11283, file: !11195, line: 135, type: !173)
!11289 = !DILocalVariable(name: "factor", scope: !11283, file: !11195, line: 136, type: !3418)
!11290 = !DILocation(line: 0, scope: !11283)
!11291 = !DILocation(line: 138, column: 9, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11283, file: !11195, line: 138, column: 9)
!11293 = !DILocation(line: 138, column: 9, scope: !11283)
!11294 = !DILocation(line: 141, column: 17, scope: !11283)
!11295 = !DILocation(line: 142, column: 22, scope: !11283)
!11296 = !DILocation(line: 142, column: 101, scope: !11283)
!11297 = !DILocation(line: 142, column: 21, scope: !11283)
!11298 = !DILocation(line: 144, column: 22, scope: !11283)
!11299 = !DILocation(line: 144, column: 104, scope: !11283)
!11300 = !DILocation(line: 144, column: 21, scope: !11283)
!11301 = !DILocation(line: 147, column: 5, scope: !11283)
!11302 = !DILocation(line: 161, column: 5, scope: !11283)
!11303 = !DILocation(line: 175, column: 9, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11283, file: !11195, line: 175, column: 9)
!11305 = !DILocation(line: 175, column: 43, scope: !11304)
!11306 = !DILocation(line: 175, column: 9, scope: !11283)
!11307 = !DILocation(line: 177, column: 27, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11304, file: !11195, line: 176, column: 5)
!11309 = !DILocation(line: 177, column: 61, scope: !11308)
!11310 = !DILocation(line: 177, column: 19, scope: !11308)
!11311 = !DILocation(line: 178, column: 27, scope: !11308)
!11312 = !DILocation(line: 178, column: 64, scope: !11308)
!11313 = !DILocation(line: 178, column: 19, scope: !11308)
!11314 = !DILocation(line: 177, column: 99, scope: !11308)
!11315 = !DILocation(line: 179, column: 27, scope: !11308)
!11316 = !DILocation(line: 179, column: 62, scope: !11308)
!11317 = !DILocation(line: 179, column: 19, scope: !11308)
!11318 = !DILocation(line: 178, column: 102, scope: !11308)
!11319 = !DILocation(line: 180, column: 40, scope: !11308)
!11320 = !DILocation(line: 180, column: 58, scope: !11308)
!11321 = !DILocation(line: 180, column: 27, scope: !11308)
!11322 = !DILocation(line: 180, column: 79, scope: !11308)
!11323 = !DILocation(line: 180, column: 89, scope: !11308)
!11324 = !DILocation(line: 180, column: 76, scope: !11308)
!11325 = !DILocation(line: 180, column: 16, scope: !11308)
!11326 = !DILocation(line: 180, column: 9, scope: !11308)
!11327 = !DILocation(line: 184, column: 29, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11304, file: !11195, line: 183, column: 5)
!11329 = !DILocation(line: 184, column: 47, scope: !11328)
!11330 = !DILocation(line: 184, column: 67, scope: !11328)
!11331 = !DILocation(line: 184, column: 65, scope: !11328)
!11332 = !DILocation(line: 184, column: 9, scope: !11328)
!11333 = !DILocation(line: 186, column: 1, scope: !11283)
!11334 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !11195, file: !11195, line: 194, type: !11196, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11335)
!11335 = !{!11336, !11337, !11338, !11339, !11340}
!11336 = !DILocalVariable(name: "base", arg: 1, scope: !11334, file: !11195, line: 194, type: !3355)
!11337 = !DILocalVariable(name: "divSelect", scope: !11334, file: !11195, line: 196, type: !173)
!11338 = !DILocalVariable(name: "divPostSelect", scope: !11334, file: !11195, line: 196, type: !173)
!11339 = !DILocalVariable(name: "divTestSelect", scope: !11334, file: !11195, line: 196, type: !173)
!11340 = !DILocalVariable(name: "factor", scope: !11334, file: !11195, line: 197, type: !3418)
!11341 = !DILocation(line: 0, scope: !11334)
!11342 = !DILocation(line: 199, column: 9, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11334, file: !11195, line: 199, column: 9)
!11344 = !DILocation(line: 199, column: 9, scope: !11334)
!11345 = !DILocation(line: 202, column: 17, scope: !11334)
!11346 = !DILocation(line: 203, column: 22, scope: !11334)
!11347 = !DILocation(line: 203, column: 101, scope: !11334)
!11348 = !DILocation(line: 203, column: 21, scope: !11334)
!11349 = !DILocation(line: 205, column: 22, scope: !11334)
!11350 = !DILocation(line: 205, column: 104, scope: !11334)
!11351 = !DILocation(line: 205, column: 21, scope: !11334)
!11352 = !DILocation(line: 208, column: 5, scope: !11334)
!11353 = !DILocation(line: 222, column: 5, scope: !11334)
!11354 = !DILocation(line: 236, column: 9, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11334, file: !11195, line: 236, column: 9)
!11356 = !DILocation(line: 236, column: 43, scope: !11355)
!11357 = !DILocation(line: 236, column: 9, scope: !11334)
!11358 = !DILocation(line: 238, column: 27, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11355, file: !11195, line: 237, column: 5)
!11360 = !DILocation(line: 238, column: 61, scope: !11359)
!11361 = !DILocation(line: 238, column: 19, scope: !11359)
!11362 = !DILocation(line: 239, column: 27, scope: !11359)
!11363 = !DILocation(line: 239, column: 64, scope: !11359)
!11364 = !DILocation(line: 239, column: 19, scope: !11359)
!11365 = !DILocation(line: 238, column: 99, scope: !11359)
!11366 = !DILocation(line: 240, column: 27, scope: !11359)
!11367 = !DILocation(line: 240, column: 62, scope: !11359)
!11368 = !DILocation(line: 240, column: 19, scope: !11359)
!11369 = !DILocation(line: 239, column: 102, scope: !11359)
!11370 = !DILocation(line: 241, column: 40, scope: !11359)
!11371 = !DILocation(line: 241, column: 58, scope: !11359)
!11372 = !DILocation(line: 241, column: 27, scope: !11359)
!11373 = !DILocation(line: 241, column: 79, scope: !11359)
!11374 = !DILocation(line: 241, column: 89, scope: !11359)
!11375 = !DILocation(line: 241, column: 76, scope: !11359)
!11376 = !DILocation(line: 241, column: 16, scope: !11359)
!11377 = !DILocation(line: 241, column: 9, scope: !11359)
!11378 = !DILocation(line: 245, column: 29, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11355, file: !11195, line: 244, column: 5)
!11380 = !DILocation(line: 245, column: 47, scope: !11379)
!11381 = !DILocation(line: 245, column: 67, scope: !11379)
!11382 = !DILocation(line: 245, column: 65, scope: !11379)
!11383 = !DILocation(line: 245, column: 9, scope: !11379)
!11384 = !DILocation(line: 247, column: 1, scope: !11334)
!11385 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !11195, file: !11195, line: 255, type: !11386, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11388)
!11386 = !DISubroutineType(types: !11387)
!11387 = !{!190, !3355, !190}
!11388 = !{!11389, !11390, !11391, !11392}
!11389 = !DILocalVariable(name: "base", arg: 1, scope: !11385, file: !11195, line: 255, type: !3355)
!11390 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11385, file: !11195, line: 255, type: !190)
!11391 = !DILocalVariable(name: "main", scope: !11385, file: !11195, line: 257, type: !190)
!11392 = !DILocalVariable(name: "frac", scope: !11385, file: !11195, line: 257, type: !190)
!11393 = !DILocation(line: 0, scope: !11385)
!11394 = !DILocation(line: 260, column: 5, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11396, file: !11195, line: 260, column: 5)
!11396 = distinct !DILexicalBlock(scope: !11385, file: !11195, line: 260, column: 5)
!11397 = !DILocation(line: 260, column: 5, scope: !11396)
!11398 = !DILocation(line: 260, column: 5, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11395, file: !11195, line: 260, column: 5)
!11400 = !DILocation(line: 262, column: 12, scope: !11385)
!11401 = !DILocation(line: 263, column: 12, scope: !11385)
!11402 = !DILocation(line: 265, column: 17, scope: !11385)
!11403 = !DILocation(line: 265, column: 24, scope: !11385)
!11404 = !DILocation(line: 265, column: 5, scope: !11385)
!11405 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !3346, file: !3346, line: 373, type: !11386, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3342, retainedNodes: !11406)
!11406 = !{!11407, !11408}
!11407 = !DILocalVariable(name: "base", arg: 1, scope: !11405, file: !3346, line: 373, type: !3355)
!11408 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11405, file: !3346, line: 373, type: !190)
!11409 = !DILocation(line: 0, scope: !11405)
!11410 = !DILocation(line: 375, column: 13, scope: !11405)
!11411 = !DILocation(line: 375, column: 52, scope: !11405)
!11412 = !DILocation(line: 375, column: 49, scope: !11405)
!11413 = !DILocation(line: 375, column: 85, scope: !11405)
!11414 = !DILocation(line: 375, column: 5, scope: !11405)
!11415 = distinct !DISubprogram(name: "GPIO_Init", scope: !11416, file: !11416, line: 47, type: !11417, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3419, retainedNodes: !11441)
!11416 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11417 = !DISubroutineType(types: !11418)
!11418 = !{null, !11419, !11431}
!11419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11420, size: 32)
!11420 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !910, line: 19729, baseType: !11421)
!11421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 19720, size: 256, elements: !11422)
!11422 = !{!11423, !11424, !11425, !11426, !11427, !11428, !11429, !11430}
!11423 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !11421, file: !910, line: 19721, baseType: !914, size: 32)
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !11421, file: !910, line: 19722, baseType: !914, size: 32, offset: 32)
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !11421, file: !910, line: 19723, baseType: !985, size: 32, offset: 64)
!11426 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11421, file: !910, line: 19724, baseType: !914, size: 32, offset: 96)
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11421, file: !910, line: 19725, baseType: !914, size: 32, offset: 128)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !11421, file: !910, line: 19726, baseType: !914, size: 32, offset: 160)
!11429 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !11421, file: !910, line: 19727, baseType: !914, size: 32, offset: 192)
!11430 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !11421, file: !910, line: 19728, baseType: !914, size: 32, offset: 224)
!11431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11432, size: 32)
!11432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11433)
!11433 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !1191, line: 78, baseType: !11434)
!11434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !1191, line: 73, size: 96, elements: !11435)
!11435 = !{!11436, !11437, !11439}
!11436 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !11434, file: !1191, line: 75, baseType: !190, size: 32)
!11437 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11434, file: !1191, line: 76, baseType: !11438, size: 32, offset: 32)
!11438 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !1191, line: 53, baseType: !3422)
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !11434, file: !1191, line: 77, baseType: !11440, size: 32, offset: 64)
!11440 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !1191, line: 63, baseType: !3426)
!11441 = !{!11442, !11443, !11444, !11445}
!11442 = !DILocalVariable(name: "base", arg: 1, scope: !11415, file: !11416, line: 47, type: !11419)
!11443 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11415, file: !11416, line: 47, type: !11431)
!11444 = !DILocalVariable(name: "pin", scope: !11415, file: !11416, line: 49, type: !190)
!11445 = !DILocalVariable(name: "icr", scope: !11415, file: !11416, line: 50, type: !1032)
!11446 = !DILocation(line: 0, scope: !11415)
!11447 = !DILocation(line: 53, column: 5, scope: !11415)
!11448 = !DILocation(line: 53, column: 24, scope: !11415)
!11449 = !DILocation(line: 54, column: 2, scope: !11415)
!11450 = !DILocation(line: 54, column: 26, scope: !11415)
!11451 = !DILocation(line: 57, column: 23, scope: !11415)
!11452 = !DILocation(line: 60, column: 21, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11415, file: !11416, line: 60, column: 9)
!11454 = !DILocation(line: 60, column: 31, scope: !11453)
!11455 = !DILocation(line: 0, scope: !11453)
!11456 = !DILocation(line: 60, column: 9, scope: !11415)
!11457 = !DILocation(line: 61, column: 9, scope: !11453)
!11458 = !DILocation(line: 61, column: 29, scope: !11453)
!11459 = !DILocation(line: 63, column: 32, scope: !11453)
!11460 = !DILocation(line: 63, column: 9, scope: !11453)
!11461 = !DILocation(line: 63, column: 29, scope: !11453)
!11462 = !DILocation(line: 66, column: 12, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11415, file: !11416, line: 66, column: 8)
!11464 = !DILocation(line: 66, column: 8, scope: !11415)
!11465 = !DILocation(line: 73, column: 24, scope: !11415)
!11466 = !DILocation(line: 73, column: 5, scope: !11415)
!11467 = !DILocation(line: 77, column: 30, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !11416, line: 76, column: 9)
!11469 = distinct !DILexicalBlock(scope: !11415, file: !11416, line: 74, column: 5)
!11470 = !DILocation(line: 77, column: 26, scope: !11468)
!11471 = !DILocation(line: 77, column: 21, scope: !11468)
!11472 = !DILocation(line: 77, column: 18, scope: !11468)
!11473 = !DILocation(line: 78, column: 13, scope: !11468)
!11474 = !DILocation(line: 82, column: 21, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11469, file: !11416, line: 81, column: 9)
!11476 = !DILocation(line: 82, column: 38, scope: !11475)
!11477 = !DILocation(line: 82, column: 34, scope: !11475)
!11478 = !DILocation(line: 82, column: 29, scope: !11475)
!11479 = !DILocation(line: 82, column: 26, scope: !11475)
!11480 = !DILocation(line: 82, column: 53, scope: !11475)
!11481 = !DILocation(line: 82, column: 47, scope: !11475)
!11482 = !DILocation(line: 83, column: 13, scope: !11475)
!11483 = !DILocation(line: 87, column: 21, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11469, file: !11416, line: 86, column: 9)
!11485 = !DILocation(line: 87, column: 38, scope: !11484)
!11486 = !DILocation(line: 87, column: 34, scope: !11484)
!11487 = !DILocation(line: 87, column: 29, scope: !11484)
!11488 = !DILocation(line: 87, column: 26, scope: !11484)
!11489 = !DILocation(line: 87, column: 53, scope: !11484)
!11490 = !DILocation(line: 87, column: 47, scope: !11484)
!11491 = !DILocation(line: 88, column: 13, scope: !11484)
!11492 = !DILocation(line: 92, column: 29, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11469, file: !11416, line: 91, column: 9)
!11494 = !DILocation(line: 92, column: 25, scope: !11493)
!11495 = !DILocation(line: 92, column: 18, scope: !11493)
!11496 = !DILocation(line: 93, column: 13, scope: !11493)
!11497 = !DILocation(line: 0, scope: !11469)
!11498 = !DILocation(line: 100, column: 1, scope: !11415)
!11499 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !11416, file: !11416, line: 111, type: !11500, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3419, retainedNodes: !11503)
!11500 = !DISubroutineType(types: !11501)
!11501 = !{null, !11419, !190, !11502}
!11502 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !1191, line: 70, baseType: !1190)
!11503 = !{!11504, !11505, !11506}
!11504 = !DILocalVariable(name: "base", arg: 1, scope: !11499, file: !11416, line: 111, type: !11419)
!11505 = !DILocalVariable(name: "pin", arg: 2, scope: !11499, file: !11416, line: 111, type: !190)
!11506 = !DILocalVariable(name: "pinVal", arg: 3, scope: !11499, file: !11416, line: 111, type: !11502)
!11507 = !DILocation(line: 0, scope: !11499)
!11508 = !DILocation(line: 113, column: 5, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !11416, line: 113, column: 5)
!11510 = distinct !DILexicalBlock(scope: !11499, file: !11416, line: 113, column: 5)
!11511 = !DILocation(line: 113, column: 5, scope: !11510)
!11512 = !DILocation(line: 113, column: 5, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11509, file: !11416, line: 113, column: 5)
!11514 = !DILocation(line: 114, column: 16, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11499, file: !11416, line: 114, column: 9)
!11516 = !DILocation(line: 0, scope: !11515)
!11517 = !DILocation(line: 114, column: 9, scope: !11499)
!11518 = !DILocation(line: 116, column: 9, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11515, file: !11416, line: 115, column: 5)
!11520 = !DILocation(line: 116, column: 27, scope: !11519)
!11521 = !DILocation(line: 117, column: 5, scope: !11519)
!11522 = !DILocation(line: 120, column: 30, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11515, file: !11416, line: 119, column: 5)
!11524 = !DILocation(line: 120, column: 9, scope: !11523)
!11525 = !DILocation(line: 120, column: 27, scope: !11523)
!11526 = !DILocation(line: 122, column: 1, scope: !11499)
!11527 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !11416, file: !11416, line: 133, type: !11528, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3419, retainedNodes: !11530)
!11528 = !DISubroutineType(types: !11529)
!11529 = !{null, !11419, !190, !279}
!11530 = !{!11531, !11532, !11533}
!11531 = !DILocalVariable(name: "base", arg: 1, scope: !11527, file: !11416, line: 133, type: !11419)
!11532 = !DILocalVariable(name: "pin", arg: 2, scope: !11527, file: !11416, line: 133, type: !190)
!11533 = !DILocalVariable(name: "enable", arg: 3, scope: !11527, file: !11416, line: 133, type: !279)
!11534 = !DILocation(line: 0, scope: !11527)
!11535 = !DILocation(line: 135, column: 5, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !11416, line: 135, column: 5)
!11537 = distinct !DILexicalBlock(scope: !11527, file: !11416, line: 135, column: 5)
!11538 = !DILocation(line: 135, column: 5, scope: !11537)
!11539 = !DILocation(line: 135, column: 5, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11536, file: !11416, line: 135, column: 5)
!11541 = !DILocation(line: 0, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11527, file: !11416, line: 137, column: 8)
!11543 = !DILocation(line: 137, column: 8, scope: !11527)
!11544 = !DILocation(line: 138, column: 9, scope: !11542)
!11545 = !DILocation(line: 138, column: 28, scope: !11542)
!11546 = !DILocation(line: 140, column: 31, scope: !11542)
!11547 = !DILocation(line: 140, column: 9, scope: !11542)
!11548 = !DILocation(line: 140, column: 28, scope: !11542)
!11549 = !DILocation(line: 141, column: 1, scope: !11527)
!11550 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !11416, file: !11416, line: 150, type: !11528, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3419, retainedNodes: !11551)
!11551 = !{!11552, !11553, !11554}
!11552 = !DILocalVariable(name: "base", arg: 1, scope: !11550, file: !11416, line: 150, type: !11419)
!11553 = !DILocalVariable(name: "pin", arg: 2, scope: !11550, file: !11416, line: 150, type: !190)
!11554 = !DILocalVariable(name: "enable", arg: 3, scope: !11550, file: !11416, line: 150, type: !279)
!11555 = !DILocation(line: 0, scope: !11550)
!11556 = !DILocation(line: 152, column: 5, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !11416, line: 152, column: 5)
!11558 = distinct !DILexicalBlock(scope: !11550, file: !11416, line: 152, column: 5)
!11559 = !DILocation(line: 152, column: 5, scope: !11558)
!11560 = !DILocation(line: 152, column: 5, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11557, file: !11416, line: 152, column: 5)
!11562 = !DILocation(line: 0, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11550, file: !11416, line: 154, column: 8)
!11564 = !DILocation(line: 154, column: 8, scope: !11550)
!11565 = !DILocation(line: 155, column: 9, scope: !11563)
!11566 = !DILocation(line: 155, column: 33, scope: !11563)
!11567 = !DILocation(line: 157, column: 36, scope: !11563)
!11568 = !DILocation(line: 157, column: 9, scope: !11563)
!11569 = !DILocation(line: 157, column: 33, scope: !11563)
!11570 = !DILocation(line: 158, column: 1, scope: !11550)
!11571 = distinct !DISubprogram(name: "UART_Init", scope: !11572, file: !11572, line: 47, type: !11573, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11609)
!11572 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11573 = !DISubroutineType(types: !11574)
!11574 = !{null, !11575, !11598}
!11575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11576, size: 32)
!11576 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !910, line: 41342, baseType: !11577)
!11577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 41322, size: 1504, elements: !11578)
!11578 = !{!11579, !11580, !11581, !11582, !11583, !11584, !11585, !11586, !11587, !11588, !11589, !11590, !11591, !11592, !11593, !11594, !11595, !11596, !11597}
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11577, file: !910, line: 41323, baseType: !985, size: 32)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11577, file: !910, line: 41324, baseType: !1543, size: 480, offset: 32)
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11577, file: !910, line: 41325, baseType: !914, size: 32, offset: 512)
!11582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11577, file: !910, line: 41326, baseType: !1543, size: 480, offset: 544)
!11583 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11577, file: !910, line: 41327, baseType: !914, size: 32, offset: 1024)
!11584 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11577, file: !910, line: 41328, baseType: !914, size: 32, offset: 1056)
!11585 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11577, file: !910, line: 41329, baseType: !914, size: 32, offset: 1088)
!11586 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11577, file: !910, line: 41330, baseType: !914, size: 32, offset: 1120)
!11587 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11577, file: !910, line: 41331, baseType: !914, size: 32, offset: 1152)
!11588 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11577, file: !910, line: 41332, baseType: !914, size: 32, offset: 1184)
!11589 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11577, file: !910, line: 41333, baseType: !914, size: 32, offset: 1216)
!11590 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11577, file: !910, line: 41334, baseType: !914, size: 32, offset: 1248)
!11591 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11577, file: !910, line: 41335, baseType: !914, size: 32, offset: 1280)
!11592 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11577, file: !910, line: 41336, baseType: !914, size: 32, offset: 1312)
!11593 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11577, file: !910, line: 41337, baseType: !914, size: 32, offset: 1344)
!11594 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11577, file: !910, line: 41338, baseType: !985, size: 32, offset: 1376)
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11577, file: !910, line: 41339, baseType: !914, size: 32, offset: 1408)
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11577, file: !910, line: 41340, baseType: !914, size: 32, offset: 1440)
!11597 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11577, file: !910, line: 41341, baseType: !914, size: 32, offset: 1472)
!11598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11599, size: 32)
!11599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11600)
!11600 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1373, line: 57, baseType: !11601)
!11601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1373, line: 49, size: 192, elements: !11602)
!11602 = !{!11603, !11604, !11605, !11606, !11607, !11608}
!11603 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !11601, file: !1373, line: 51, baseType: !190, size: 32)
!11604 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !11601, file: !1373, line: 52, baseType: !190, size: 32, offset: 32)
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !11601, file: !1373, line: 53, baseType: !190, size: 32, offset: 64)
!11606 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !11601, file: !1373, line: 54, baseType: !190, size: 32, offset: 96)
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11601, file: !1373, line: 55, baseType: !190, size: 32, offset: 128)
!11608 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11601, file: !1373, line: 56, baseType: !190, size: 32, offset: 160)
!11609 = !{!11610, !11611}
!11610 = !DILocalVariable(name: "base", arg: 1, scope: !11571, file: !11572, line: 47, type: !11575)
!11611 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11571, file: !11572, line: 47, type: !11598)
!11612 = !DILocation(line: 0, scope: !11571)
!11613 = !DILocation(line: 49, column: 5, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !11572, line: 49, column: 5)
!11615 = distinct !DILexicalBlock(scope: !11571, file: !11572, line: 49, column: 5)
!11616 = !DILocation(line: 49, column: 5, scope: !11615)
!11617 = !DILocation(line: 49, column: 5, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11614, file: !11572, line: 49, column: 5)
!11619 = !DILocation(line: 52, column: 5, scope: !11571)
!11620 = !DILocation(line: 52, column: 25, scope: !11571)
!11621 = !DILocation(line: 55, column: 5, scope: !11571)
!11622 = !DILocation(line: 60, column: 41, scope: !11571)
!11623 = !DILocation(line: 61, column: 41, scope: !11571)
!11624 = !DILocation(line: 62, column: 41, scope: !11571)
!11625 = !DILocation(line: 63, column: 41, scope: !11571)
!11626 = !DILocation(line: 60, column: 5, scope: !11571)
!11627 = !DILocation(line: 60, column: 25, scope: !11571)
!11628 = !DILocation(line: 61, column: 52, scope: !11571)
!11629 = !DILocation(line: 62, column: 52, scope: !11571)
!11630 = !DILocation(line: 63, column: 52, scope: !11571)
!11631 = !DILocation(line: 68, column: 5, scope: !11571)
!11632 = !DILocation(line: 68, column: 25, scope: !11571)
!11633 = !DILocation(line: 72, column: 40, scope: !11571)
!11634 = !DILocation(line: 72, column: 63, scope: !11571)
!11635 = !DILocation(line: 72, column: 5, scope: !11571)
!11636 = !DILocation(line: 73, column: 1, scope: !11571)
!11637 = distinct !DISubprogram(name: "UART_Deinit", scope: !11572, file: !11572, line: 82, type: !11638, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11640)
!11638 = !DISubroutineType(types: !11639)
!11639 = !{null, !11575}
!11640 = !{!11641}
!11641 = !DILocalVariable(name: "base", arg: 1, scope: !11637, file: !11572, line: 82, type: !11575)
!11642 = !DILocation(line: 0, scope: !11637)
!11643 = !DILocation(line: 85, column: 5, scope: !11637)
!11644 = !DILocation(line: 85, column: 25, scope: !11637)
!11645 = !DILocation(line: 88, column: 26, scope: !11637)
!11646 = !DILocation(line: 89, column: 5, scope: !11637)
!11647 = !DILocation(line: 89, column: 26, scope: !11637)
!11648 = !DILocation(line: 90, column: 5, scope: !11637)
!11649 = !DILocation(line: 90, column: 26, scope: !11637)
!11650 = !DILocation(line: 93, column: 5, scope: !11637)
!11651 = !DILocation(line: 93, column: 26, scope: !11637)
!11652 = !DILocation(line: 94, column: 5, scope: !11637)
!11653 = !DILocation(line: 94, column: 26, scope: !11637)
!11654 = !DILocation(line: 95, column: 5, scope: !11637)
!11655 = !DILocation(line: 95, column: 26, scope: !11637)
!11656 = !DILocation(line: 96, column: 5, scope: !11637)
!11657 = !DILocation(line: 96, column: 26, scope: !11637)
!11658 = !DILocation(line: 97, column: 5, scope: !11637)
!11659 = !DILocation(line: 97, column: 26, scope: !11637)
!11660 = !DILocation(line: 98, column: 5, scope: !11637)
!11661 = !DILocation(line: 98, column: 26, scope: !11637)
!11662 = !DILocation(line: 99, column: 5, scope: !11637)
!11663 = !DILocation(line: 99, column: 26, scope: !11637)
!11664 = !DILocation(line: 103, column: 25, scope: !11637)
!11665 = !DILocation(line: 104, column: 5, scope: !11637)
!11666 = !DILocation(line: 104, column: 14, scope: !11637)
!11667 = !DILocation(line: 104, column: 34, scope: !11637)
!11668 = !DILocation(line: 104, column: 12, scope: !11637)
!11669 = distinct !{!11669, !11665, !11670}
!11670 = !DILocation(line: 104, column: 57, scope: !11637)
!11671 = !DILocation(line: 105, column: 1, scope: !11637)
!11672 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !11572, file: !11572, line: 113, type: !11673, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11675)
!11673 = !DISubroutineType(types: !11674)
!11674 = !{null, !11575, !190, !190}
!11675 = !{!11676, !11677, !11678, !11679, !11680, !11681, !11682, !11683, !11684, !11687, !11688}
!11676 = !DILocalVariable(name: "base", arg: 1, scope: !11672, file: !11572, line: 113, type: !11575)
!11677 = !DILocalVariable(name: "clockRate", arg: 2, scope: !11672, file: !11572, line: 113, type: !190)
!11678 = !DILocalVariable(name: "baudRate", arg: 3, scope: !11672, file: !11572, line: 113, type: !190)
!11679 = !DILocalVariable(name: "numerator", scope: !11672, file: !11572, line: 115, type: !190)
!11680 = !DILocalVariable(name: "denominator", scope: !11672, file: !11572, line: 116, type: !190)
!11681 = !DILocalVariable(name: "divisor", scope: !11672, file: !11572, line: 117, type: !190)
!11682 = !DILocalVariable(name: "refFreqDiv", scope: !11672, file: !11572, line: 118, type: !190)
!11683 = !DILocalVariable(name: "divider", scope: !11672, file: !11572, line: 119, type: !190)
!11684 = !DILocalVariable(name: "m", scope: !11685, file: !11572, line: 141, type: !190)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !11572, line: 140, column: 5)
!11686 = distinct !DILexicalBlock(scope: !11672, file: !11572, line: 138, column: 9)
!11687 = !DILocalVariable(name: "n", scope: !11685, file: !11572, line: 142, type: !190)
!11688 = !DILocalVariable(name: "max", scope: !11685, file: !11572, line: 143, type: !190)
!11689 = !DILocation(line: 0, scope: !11672)
!11690 = !DILocation(line: 123, column: 28, scope: !11672)
!11691 = !DILocation(line: 126, column: 24, scope: !11672)
!11692 = !DILocation(line: 126, column: 5, scope: !11672)
!11693 = !DILocation(line: 129, column: 33, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11672, file: !11572, line: 127, column: 5)
!11695 = distinct !{!11695, !11692, !11696}
!11696 = !DILocation(line: 131, column: 5, scope: !11672)
!11697 = !DILocation(line: 133, column: 27, scope: !11672)
!11698 = !DILocation(line: 134, column: 35, scope: !11672)
!11699 = !DILocation(line: 138, column: 20, scope: !11686)
!11700 = !DILocation(line: 138, column: 48, scope: !11686)
!11701 = !DILocation(line: 141, column: 33, scope: !11685)
!11702 = !DILocation(line: 141, column: 38, scope: !11685)
!11703 = !DILocation(line: 141, column: 65, scope: !11685)
!11704 = !DILocation(line: 0, scope: !11685)
!11705 = !DILocation(line: 142, column: 35, scope: !11685)
!11706 = !DILocation(line: 142, column: 40, scope: !11685)
!11707 = !DILocation(line: 142, column: 61, scope: !11685)
!11708 = !DILocation(line: 143, column: 26, scope: !11685)
!11709 = !DILocation(line: 143, column: 24, scope: !11685)
!11710 = !DILocation(line: 144, column: 19, scope: !11685)
!11711 = !DILocation(line: 145, column: 21, scope: !11685)
!11712 = !DILocation(line: 146, column: 15, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11685, file: !11572, line: 146, column: 13)
!11714 = !DILocation(line: 146, column: 13, scope: !11685)
!11715 = !DILocation(line: 148, column: 15, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11685, file: !11572, line: 148, column: 13)
!11717 = !DILocation(line: 148, column: 13, scope: !11685)
!11718 = !DILocation(line: 150, column: 5, scope: !11685)
!11719 = !DILocation(line: 151, column: 26, scope: !11672)
!11720 = !DILocation(line: 151, column: 31, scope: !11672)
!11721 = !DILocation(line: 151, column: 52, scope: !11672)
!11722 = !DILocation(line: 153, column: 5, scope: !11672)
!11723 = !DILocation(line: 0, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11672, file: !11572, line: 154, column: 5)
!11725 = !DILocation(line: 180, column: 5, scope: !11672)
!11726 = !DILocation(line: 180, column: 25, scope: !11672)
!11727 = !DILocation(line: 181, column: 25, scope: !11672)
!11728 = !DILocation(line: 182, column: 27, scope: !11672)
!11729 = !DILocation(line: 182, column: 5, scope: !11672)
!11730 = !DILocation(line: 182, column: 25, scope: !11672)
!11731 = !DILocation(line: 183, column: 27, scope: !11672)
!11732 = !DILocation(line: 183, column: 5, scope: !11672)
!11733 = !DILocation(line: 183, column: 25, scope: !11672)
!11734 = !DILocation(line: 184, column: 28, scope: !11672)
!11735 = !DILocation(line: 184, column: 5, scope: !11672)
!11736 = !DILocation(line: 184, column: 26, scope: !11672)
!11737 = !DILocation(line: 185, column: 1, scope: !11672)
!11738 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !11572, file: !11572, line: 194, type: !11739, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11741)
!11739 = !DISubroutineType(types: !11740)
!11740 = !{null, !11575, !190, !279}
!11741 = !{!11742, !11743, !11744}
!11742 = !DILocalVariable(name: "base", arg: 1, scope: !11738, file: !11572, line: 194, type: !11575)
!11743 = !DILocalVariable(name: "direction", arg: 2, scope: !11738, file: !11572, line: 194, type: !190)
!11744 = !DILocalVariable(name: "invert", arg: 3, scope: !11738, file: !11572, line: 194, type: !279)
!11745 = !DILocation(line: 0, scope: !11738)
!11746 = !DILocation(line: 196, column: 5, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !11572, line: 196, column: 5)
!11748 = distinct !DILexicalBlock(scope: !11738, file: !11572, line: 196, column: 5)
!11749 = !DILocation(line: 196, column: 5, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11747, file: !11572, line: 196, column: 5)
!11751 = !DILocation(line: 198, column: 9, scope: !11738)
!11752 = !DILocation(line: 200, column: 13, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !11572, line: 199, column: 5)
!11754 = distinct !DILexicalBlock(scope: !11738, file: !11572, line: 198, column: 9)
!11755 = !DILocation(line: 201, column: 13, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11753, file: !11572, line: 200, column: 13)
!11757 = !DILocation(line: 201, column: 33, scope: !11756)
!11758 = !DILocation(line: 202, column: 13, scope: !11753)
!11759 = !DILocation(line: 203, column: 13, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11753, file: !11572, line: 202, column: 13)
!11761 = !DILocation(line: 203, column: 33, scope: !11760)
!11762 = !DILocation(line: 207, column: 13, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11754, file: !11572, line: 206, column: 5)
!11764 = !DILocation(line: 208, column: 13, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11763, file: !11572, line: 207, column: 13)
!11766 = !DILocation(line: 208, column: 33, scope: !11765)
!11767 = !DILocation(line: 209, column: 13, scope: !11763)
!11768 = !DILocation(line: 210, column: 13, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11763, file: !11572, line: 209, column: 13)
!11770 = !DILocation(line: 210, column: 33, scope: !11769)
!11771 = !DILocation(line: 212, column: 1, scope: !11738)
!11772 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !11572, file: !11572, line: 224, type: !11773, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11775)
!11773 = !DISubroutineType(types: !11774)
!11774 = !{null, !11575, !279}
!11775 = !{!11776, !11777}
!11776 = !DILocalVariable(name: "base", arg: 1, scope: !11772, file: !11572, line: 224, type: !11575)
!11777 = !DILocalVariable(name: "enable", arg: 2, scope: !11772, file: !11572, line: 224, type: !279)
!11778 = !DILocation(line: 0, scope: !11772)
!11779 = !DILocation(line: 0, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11772, file: !11572, line: 226, column: 9)
!11781 = !DILocation(line: 226, column: 9, scope: !11772)
!11782 = !DILocation(line: 230, column: 1, scope: !11772)
!11783 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !11572, file: !11572, line: 239, type: !11773, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11784)
!11784 = !{!11785, !11786}
!11785 = !DILocalVariable(name: "base", arg: 1, scope: !11783, file: !11572, line: 239, type: !11575)
!11786 = !DILocalVariable(name: "enable", arg: 2, scope: !11783, file: !11572, line: 239, type: !279)
!11787 = !DILocation(line: 0, scope: !11783)
!11788 = !DILocation(line: 0, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11783, file: !11572, line: 241, column: 9)
!11790 = !DILocation(line: 241, column: 9, scope: !11783)
!11791 = !DILocation(line: 245, column: 1, scope: !11783)
!11792 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !11572, file: !11572, line: 258, type: !11739, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11793)
!11793 = !{!11794, !11795, !11796, !11797, !11798}
!11794 = !DILocalVariable(name: "base", arg: 1, scope: !11792, file: !11572, line: 258, type: !11575)
!11795 = !DILocalVariable(name: "intSource", arg: 2, scope: !11792, file: !11572, line: 258, type: !190)
!11796 = !DILocalVariable(name: "enable", arg: 3, scope: !11792, file: !11572, line: 258, type: !279)
!11797 = !DILocalVariable(name: "uart_reg", scope: !11792, file: !11572, line: 260, type: !1032)
!11798 = !DILocalVariable(name: "uart_mask", scope: !11792, file: !11572, line: 261, type: !190)
!11799 = !DILocation(line: 0, scope: !11792)
!11800 = !DILocation(line: 263, column: 29, scope: !11792)
!11801 = !DILocation(line: 263, column: 57, scope: !11792)
!11802 = !DILocation(line: 263, column: 44, scope: !11792)
!11803 = !DILocation(line: 263, column: 16, scope: !11792)
!11804 = !DILocation(line: 264, column: 34, scope: !11792)
!11805 = !DILocation(line: 264, column: 20, scope: !11792)
!11806 = !DILocation(line: 266, column: 9, scope: !11792)
!11807 = !DILocation(line: 267, column: 19, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11792, file: !11572, line: 266, column: 9)
!11809 = !DILocation(line: 267, column: 9, scope: !11808)
!11810 = !DILocation(line: 269, column: 22, scope: !11808)
!11811 = !DILocation(line: 269, column: 19, scope: !11808)
!11812 = !DILocation(line: 0, scope: !11808)
!11813 = !DILocation(line: 270, column: 1, scope: !11792)
!11814 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !11572, file: !11572, line: 299, type: !11815, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11817)
!11815 = !DISubroutineType(types: !11816)
!11816 = !{null, !11575, !190}
!11817 = !{!11818, !11819, !11820, !11821}
!11818 = !DILocalVariable(name: "base", arg: 1, scope: !11814, file: !11572, line: 299, type: !11575)
!11819 = !DILocalVariable(name: "flag", arg: 2, scope: !11814, file: !11572, line: 299, type: !190)
!11820 = !DILocalVariable(name: "uart_reg", scope: !11814, file: !11572, line: 301, type: !1032)
!11821 = !DILocalVariable(name: "uart_mask", scope: !11814, file: !11572, line: 302, type: !190)
!11822 = !DILocation(line: 0, scope: !11814)
!11823 = !DILocation(line: 304, column: 29, scope: !11814)
!11824 = !DILocation(line: 304, column: 52, scope: !11814)
!11825 = !DILocation(line: 304, column: 44, scope: !11814)
!11826 = !DILocation(line: 304, column: 16, scope: !11814)
!11827 = !DILocation(line: 305, column: 29, scope: !11814)
!11828 = !DILocation(line: 305, column: 20, scope: !11814)
!11829 = !DILocation(line: 308, column: 15, scope: !11814)
!11830 = !DILocation(line: 309, column: 1, scope: !11814)
!11831 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !11572, file: !11572, line: 322, type: !11739, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11832)
!11832 = !{!11833, !11834, !11835, !11836, !11837}
!11833 = !DILocalVariable(name: "base", arg: 1, scope: !11831, file: !11572, line: 322, type: !11575)
!11834 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !11831, file: !11572, line: 322, type: !190)
!11835 = !DILocalVariable(name: "enable", arg: 3, scope: !11831, file: !11572, line: 322, type: !279)
!11836 = !DILocalVariable(name: "uart_reg", scope: !11831, file: !11572, line: 324, type: !1032)
!11837 = !DILocalVariable(name: "uart_mask", scope: !11831, file: !11572, line: 325, type: !190)
!11838 = !DILocation(line: 0, scope: !11831)
!11839 = !DILocation(line: 327, column: 29, scope: !11831)
!11840 = !DILocation(line: 327, column: 57, scope: !11831)
!11841 = !DILocation(line: 327, column: 44, scope: !11831)
!11842 = !DILocation(line: 327, column: 16, scope: !11831)
!11843 = !DILocation(line: 328, column: 34, scope: !11831)
!11844 = !DILocation(line: 328, column: 20, scope: !11831)
!11845 = !DILocation(line: 329, column: 9, scope: !11831)
!11846 = !DILocation(line: 330, column: 19, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11831, file: !11572, line: 329, column: 9)
!11848 = !DILocation(line: 330, column: 9, scope: !11847)
!11849 = !DILocation(line: 332, column: 22, scope: !11847)
!11850 = !DILocation(line: 332, column: 19, scope: !11847)
!11851 = !DILocation(line: 0, scope: !11847)
!11852 = !DILocation(line: 333, column: 1, scope: !11831)
!11853 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !11572, file: !11572, line: 345, type: !11773, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11854)
!11854 = !{!11855, !11856}
!11855 = !DILocalVariable(name: "base", arg: 1, scope: !11853, file: !11572, line: 345, type: !11575)
!11856 = !DILocalVariable(name: "enable", arg: 2, scope: !11853, file: !11572, line: 345, type: !279)
!11857 = !DILocation(line: 0, scope: !11853)
!11858 = !DILocation(line: 0, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11853, file: !11572, line: 347, column: 9)
!11860 = !DILocation(line: 347, column: 9, scope: !11853)
!11861 = !DILocation(line: 351, column: 1, scope: !11853)
!11862 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !11572, file: !11572, line: 362, type: !11773, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11863)
!11863 = !{!11864, !11865}
!11864 = !DILocalVariable(name: "base", arg: 1, scope: !11862, file: !11572, line: 362, type: !11575)
!11865 = !DILocalVariable(name: "enable", arg: 2, scope: !11862, file: !11572, line: 362, type: !279)
!11866 = !DILocation(line: 0, scope: !11862)
!11867 = !DILocation(line: 0, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11862, file: !11572, line: 364, column: 9)
!11869 = !DILocation(line: 364, column: 9, scope: !11862)
!11870 = !DILocation(line: 368, column: 1, scope: !11862)
!11871 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !11572, file: !11572, line: 379, type: !11773, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11872)
!11872 = !{!11873, !11874}
!11873 = !DILocalVariable(name: "base", arg: 1, scope: !11871, file: !11572, line: 379, type: !11575)
!11874 = !DILocalVariable(name: "active", arg: 2, scope: !11871, file: !11572, line: 379, type: !279)
!11875 = !DILocation(line: 0, scope: !11871)
!11876 = !DILocation(line: 0, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11871, file: !11572, line: 381, column: 9)
!11878 = !DILocation(line: 381, column: 9, scope: !11871)
!11879 = !DILocation(line: 385, column: 1, scope: !11871)
!11880 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !11572, file: !11572, line: 394, type: !11815, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11881)
!11881 = !{!11882, !11883}
!11882 = !DILocalVariable(name: "base", arg: 1, scope: !11880, file: !11572, line: 394, type: !11575)
!11883 = !DILocalVariable(name: "mode", arg: 2, scope: !11880, file: !11572, line: 394, type: !190)
!11884 = !DILocation(line: 0, scope: !11880)
!11885 = !DILocation(line: 396, column: 5, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !11572, line: 396, column: 5)
!11887 = distinct !DILexicalBlock(scope: !11880, file: !11572, line: 396, column: 5)
!11888 = !DILocation(line: 396, column: 5, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11886, file: !11572, line: 396, column: 5)
!11890 = !DILocation(line: 0, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11880, file: !11572, line: 398, column: 9)
!11892 = !DILocation(line: 398, column: 9, scope: !11880)
!11893 = !DILocation(line: 402, column: 1, scope: !11880)
!11894 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !11572, file: !11572, line: 412, type: !11773, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11895)
!11895 = !{!11896, !11897}
!11896 = !DILocalVariable(name: "base", arg: 1, scope: !11894, file: !11572, line: 412, type: !11575)
!11897 = !DILocalVariable(name: "active", arg: 2, scope: !11894, file: !11572, line: 412, type: !279)
!11898 = !DILocation(line: 0, scope: !11894)
!11899 = !DILocation(line: 0, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11894, file: !11572, line: 414, column: 9)
!11901 = !DILocation(line: 414, column: 9, scope: !11894)
!11902 = !DILocation(line: 418, column: 1, scope: !11894)
!11903 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !11572, file: !11572, line: 427, type: !11773, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11904)
!11904 = !{!11905, !11906}
!11905 = !DILocalVariable(name: "base", arg: 1, scope: !11903, file: !11572, line: 427, type: !11575)
!11906 = !DILocalVariable(name: "active", arg: 2, scope: !11903, file: !11572, line: 427, type: !279)
!11907 = !DILocation(line: 0, scope: !11903)
!11908 = !DILocation(line: 0, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11903, file: !11572, line: 429, column: 9)
!11910 = !DILocation(line: 429, column: 9, scope: !11903)
!11911 = !DILocation(line: 433, column: 1, scope: !11903)
!11912 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !11572, file: !11572, line: 442, type: !11773, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11913)
!11913 = !{!11914, !11915}
!11914 = !DILocalVariable(name: "base", arg: 1, scope: !11912, file: !11572, line: 442, type: !11575)
!11915 = !DILocalVariable(name: "active", arg: 2, scope: !11912, file: !11572, line: 442, type: !279)
!11916 = !DILocation(line: 0, scope: !11912)
!11917 = !DILocation(line: 0, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11912, file: !11572, line: 444, column: 9)
!11919 = !DILocation(line: 444, column: 9, scope: !11912)
!11920 = !DILocation(line: 448, column: 1, scope: !11912)
!11921 = distinct !DISubprogram(name: "UART_Putchar9", scope: !11572, file: !11572, line: 460, type: !11922, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11924)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{null, !11575, !187}
!11924 = !{!11925, !11926}
!11925 = !DILocalVariable(name: "base", arg: 1, scope: !11921, file: !11572, line: 460, type: !11575)
!11926 = !DILocalVariable(name: "data", arg: 2, scope: !11921, file: !11572, line: 460, type: !187)
!11927 = !DILocation(line: 0, scope: !11921)
!11928 = !DILocation(line: 462, column: 5, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !11572, line: 462, column: 5)
!11930 = distinct !DILexicalBlock(scope: !11921, file: !11572, line: 462, column: 5)
!11931 = !DILocation(line: 462, column: 5, scope: !11930)
!11932 = !DILocation(line: 462, column: 5, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !11572, line: 462, column: 5)
!11934 = !DILocation(line: 0, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11921, file: !11572, line: 464, column: 9)
!11936 = !DILocation(line: 464, column: 9, scope: !11921)
!11937 = !DILocation(line: 468, column: 33, scope: !11921)
!11938 = !DILocation(line: 468, column: 5, scope: !11921)
!11939 = !DILocation(line: 468, column: 25, scope: !11921)
!11940 = !DILocation(line: 469, column: 1, scope: !11921)
!11941 = distinct !DISubprogram(name: "UART_Getchar9", scope: !11572, file: !11572, line: 478, type: !11942, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11944)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!187, !11575}
!11944 = !{!11945, !11946}
!11945 = !DILocalVariable(name: "base", arg: 1, scope: !11941, file: !11572, line: 478, type: !11575)
!11946 = !DILocalVariable(name: "rxData", scope: !11941, file: !11572, line: 480, type: !187)
!11947 = !DILocation(line: 0, scope: !11941)
!11948 = !DILocation(line: 480, column: 23, scope: !11941)
!11949 = !DILocation(line: 482, column: 9, scope: !11941)
!11950 = !DILocation(line: 491, column: 5, scope: !11941)
!11951 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !11572, file: !11572, line: 501, type: !11773, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11952)
!11952 = !{!11953, !11954}
!11953 = !DILocalVariable(name: "base", arg: 1, scope: !11951, file: !11572, line: 501, type: !11575)
!11954 = !DILocalVariable(name: "enable", arg: 2, scope: !11951, file: !11572, line: 501, type: !279)
!11955 = !DILocation(line: 0, scope: !11951)
!11956 = !DILocation(line: 0, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11951, file: !11572, line: 503, column: 9)
!11958 = !DILocation(line: 503, column: 9, scope: !11951)
!11959 = !DILocation(line: 507, column: 1, scope: !11951)
!11960 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !11572, file: !11572, line: 516, type: !11773, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11961)
!11961 = !{!11962, !11963}
!11962 = !DILocalVariable(name: "base", arg: 1, scope: !11960, file: !11572, line: 516, type: !11575)
!11963 = !DILocalVariable(name: "enable", arg: 2, scope: !11960, file: !11572, line: 516, type: !279)
!11964 = !DILocation(line: 0, scope: !11960)
!11965 = !DILocation(line: 0, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11960, file: !11572, line: 518, column: 9)
!11967 = !DILocation(line: 518, column: 9, scope: !11960)
!11968 = !DILocation(line: 522, column: 1, scope: !11960)
!11969 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !11572, file: !11572, line: 534, type: !11773, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11970)
!11970 = !{!11971, !11972}
!11971 = !DILocalVariable(name: "base", arg: 1, scope: !11969, file: !11572, line: 534, type: !11575)
!11972 = !DILocalVariable(name: "enable", arg: 2, scope: !11969, file: !11572, line: 534, type: !279)
!11973 = !DILocation(line: 0, scope: !11969)
!11974 = !DILocation(line: 0, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !11572, line: 536, column: 9)
!11976 = !DILocation(line: 536, column: 9, scope: !11969)
!11977 = !DILocation(line: 540, column: 1, scope: !11969)
!11978 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !11572, file: !11572, line: 550, type: !11815, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11979)
!11979 = !{!11980, !11981}
!11980 = !DILocalVariable(name: "base", arg: 1, scope: !11978, file: !11572, line: 550, type: !11575)
!11981 = !DILocalVariable(name: "voteClock", arg: 2, scope: !11978, file: !11572, line: 550, type: !190)
!11982 = !DILocation(line: 0, scope: !11978)
!11983 = !DILocation(line: 552, column: 5, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11985, file: !11572, line: 552, column: 5)
!11985 = distinct !DILexicalBlock(scope: !11978, file: !11572, line: 552, column: 5)
!11986 = !DILocation(line: 552, column: 5, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11984, file: !11572, line: 552, column: 5)
!11988 = !DILocation(line: 0, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11978, file: !11572, line: 555, column: 9)
!11990 = !DILocation(line: 555, column: 9, scope: !11978)
!11991 = !DILocation(line: 559, column: 1, scope: !11978)
!11992 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !11572, file: !11572, line: 571, type: !11773, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !11993)
!11993 = !{!11994, !11995}
!11994 = !DILocalVariable(name: "base", arg: 1, scope: !11992, file: !11572, line: 571, type: !11575)
!11995 = !DILocalVariable(name: "enable", arg: 2, scope: !11992, file: !11572, line: 571, type: !279)
!11996 = !DILocation(line: 0, scope: !11992)
!11997 = !DILocation(line: 0, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11992, file: !11572, line: 573, column: 9)
!11999 = !DILocation(line: 573, column: 9, scope: !11992)
!12000 = !DILocation(line: 577, column: 1, scope: !11992)
!12001 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !11572, file: !11572, line: 587, type: !11773, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !12002)
!12002 = !{!12003, !12004}
!12003 = !DILocalVariable(name: "base", arg: 1, scope: !12001, file: !11572, line: 587, type: !11575)
!12004 = !DILocalVariable(name: "active", arg: 2, scope: !12001, file: !11572, line: 587, type: !279)
!12005 = !DILocation(line: 0, scope: !12001)
!12006 = !DILocation(line: 0, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12001, file: !11572, line: 589, column: 9)
!12008 = !DILocation(line: 589, column: 9, scope: !12001)
!12009 = !DILocation(line: 593, column: 1, scope: !12001)
!12010 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !11572, file: !11572, line: 602, type: !11773, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3433, retainedNodes: !12011)
!12011 = !{!12012, !12013}
!12012 = !DILocalVariable(name: "base", arg: 1, scope: !12010, file: !11572, line: 602, type: !11575)
!12013 = !DILocalVariable(name: "enable", arg: 2, scope: !12010, file: !11572, line: 602, type: !279)
!12014 = !DILocation(line: 0, scope: !12010)
!12015 = !DILocation(line: 0, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12010, file: !11572, line: 604, column: 9)
!12017 = !DILocation(line: 604, column: 9, scope: !12010)
!12018 = !DILocation(line: 608, column: 1, scope: !12010)
!12019 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !12020, file: !12020, line: 42, type: !12021, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !12037)
!12020 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12021 = !DISubroutineType(types: !12022)
!12022 = !{!190, !12023}
!12023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12024, size: 32)
!12024 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !910, line: 20831, baseType: !12025)
!12025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 20820, size: 320, elements: !12026)
!12026 = !{!12027, !12028, !12029, !12030, !12031, !12032, !12033, !12034, !12035, !12036}
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !12025, file: !910, line: 20821, baseType: !914, size: 32)
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !12025, file: !910, line: 20822, baseType: !914, size: 32, offset: 32)
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !12025, file: !910, line: 20823, baseType: !914, size: 32, offset: 64)
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !12025, file: !910, line: 20824, baseType: !914, size: 32, offset: 96)
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !12025, file: !910, line: 20825, baseType: !914, size: 32, offset: 128)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !12025, file: !910, line: 20826, baseType: !914, size: 32, offset: 160)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !12025, file: !910, line: 20827, baseType: !914, size: 32, offset: 192)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !12025, file: !910, line: 20828, baseType: !985, size: 32, offset: 224)
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !12025, file: !910, line: 20829, baseType: !985, size: 32, offset: 256)
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !12025, file: !910, line: 20830, baseType: !985, size: 32, offset: 288)
!12037 = !{!12038, !12039, !12040, !12041, !12042}
!12038 = !DILocalVariable(name: "base", arg: 1, scope: !12019, file: !12020, line: 42, type: !12023)
!12039 = !DILocalVariable(name: "root", scope: !12019, file: !12020, line: 44, type: !190)
!12040 = !DILocalVariable(name: "hz", scope: !12019, file: !12020, line: 45, type: !190)
!12041 = !DILocalVariable(name: "pre", scope: !12019, file: !12020, line: 46, type: !190)
!12042 = !DILocalVariable(name: "post", scope: !12019, file: !12020, line: 46, type: !190)
!12043 = !DILocation(line: 0, scope: !12019)
!12044 = !DILocation(line: 46, column: 2, scope: !12019)
!12045 = !DILocation(line: 48, column: 10, scope: !12019)
!12046 = !DILocation(line: 48, column: 2, scope: !12019)
!12047 = !DILocation(line: 56, column: 3, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12019, file: !12020, line: 48, column: 26)
!12049 = !DILocation(line: 0, scope: !12048)
!12050 = !DILocation(line: 61, column: 2, scope: !12019)
!12051 = !DILocation(line: 66, column: 8, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12019, file: !12020, line: 61, column: 16)
!12053 = !DILocation(line: 67, column: 3, scope: !12052)
!12054 = !DILocation(line: 0, scope: !12052)
!12055 = !DILocation(line: 72, column: 15, scope: !12019)
!12056 = !DILocation(line: 72, column: 19, scope: !12019)
!12057 = !DILocation(line: 72, column: 12, scope: !12019)
!12058 = !DILocation(line: 72, column: 27, scope: !12019)
!12059 = !DILocation(line: 72, column: 32, scope: !12019)
!12060 = !DILocation(line: 72, column: 24, scope: !12019)
!12061 = !DILocation(line: 72, column: 2, scope: !12019)
!12062 = !DILocation(line: 73, column: 1, scope: !12019)
!12063 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !626, file: !626, line: 368, type: !12064, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !12066)
!12064 = !DISubroutineType(types: !12065)
!12065 = !{!190, !3459, !190}
!12066 = !{!12067, !12068}
!12067 = !DILocalVariable(name: "base", arg: 1, scope: !12063, file: !626, line: 368, type: !3459)
!12068 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !12063, file: !626, line: 368, type: !190)
!12069 = !DILocation(line: 0, scope: !12063)
!12070 = !DILocation(line: 370, column: 13, scope: !12063)
!12071 = !DILocation(line: 370, column: 58, scope: !12063)
!12072 = !DILocation(line: 370, column: 5, scope: !12063)
!12073 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !12020, file: !12020, line: 81, type: !12074, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !12094)
!12074 = !DISubroutineType(types: !12075)
!12075 = !{!190, !12076}
!12076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12077, size: 32)
!12077 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !910, line: 12462, baseType: !12078)
!12078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 12450, size: 544, elements: !12079)
!12079 = !{!12080, !12081, !12082, !12083, !12084, !12085, !12086, !12087, !12088, !12089, !12093}
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !12078, file: !910, line: 12451, baseType: !985, size: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !12078, file: !910, line: 12452, baseType: !914, size: 32, offset: 32)
!12082 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !12078, file: !910, line: 12453, baseType: !914, size: 32, offset: 64)
!12083 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !12078, file: !910, line: 12454, baseType: !914, size: 32, offset: 96)
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !12078, file: !910, line: 12455, baseType: !914, size: 32, offset: 128)
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !12078, file: !910, line: 12456, baseType: !914, size: 32, offset: 160)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !12078, file: !910, line: 12457, baseType: !914, size: 32, offset: 192)
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !12078, file: !910, line: 12458, baseType: !914, size: 32, offset: 224)
!12088 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !12078, file: !910, line: 12459, baseType: !914, size: 32, offset: 256)
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12078, file: !910, line: 12460, baseType: !12090, size: 224, offset: 288)
!12090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 224, elements: !12091)
!12091 = !{!12092}
!12092 = !DISubrange(count: 28)
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !12078, file: !910, line: 12461, baseType: !914, size: 32, offset: 512)
!12094 = !{!12095, !12096, !12097, !12098, !12099}
!12095 = !DILocalVariable(name: "base", arg: 1, scope: !12073, file: !12020, line: 81, type: !12076)
!12096 = !DILocalVariable(name: "root", scope: !12073, file: !12020, line: 83, type: !190)
!12097 = !DILocalVariable(name: "hz", scope: !12073, file: !12020, line: 84, type: !190)
!12098 = !DILocalVariable(name: "pre", scope: !12073, file: !12020, line: 85, type: !190)
!12099 = !DILocalVariable(name: "post", scope: !12073, file: !12020, line: 85, type: !190)
!12100 = !DILocation(line: 0, scope: !12073)
!12101 = !DILocation(line: 85, column: 2, scope: !12073)
!12102 = !DILocation(line: 87, column: 10, scope: !12073)
!12103 = !DILocation(line: 87, column: 2, scope: !12073)
!12104 = !DILocation(line: 95, column: 3, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12073, file: !12020, line: 87, column: 26)
!12106 = !DILocation(line: 0, scope: !12105)
!12107 = !DILocation(line: 100, column: 2, scope: !12073)
!12108 = !DILocation(line: 105, column: 8, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12073, file: !12020, line: 100, column: 16)
!12110 = !DILocation(line: 106, column: 3, scope: !12109)
!12111 = !DILocation(line: 0, scope: !12109)
!12112 = !DILocation(line: 111, column: 15, scope: !12073)
!12113 = !DILocation(line: 111, column: 19, scope: !12073)
!12114 = !DILocation(line: 111, column: 12, scope: !12073)
!12115 = !DILocation(line: 111, column: 27, scope: !12073)
!12116 = !DILocation(line: 111, column: 32, scope: !12073)
!12117 = !DILocation(line: 111, column: 24, scope: !12073)
!12118 = !DILocation(line: 111, column: 2, scope: !12073)
!12119 = !DILocation(line: 112, column: 1, scope: !12073)
!12120 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !12020, file: !12020, line: 120, type: !12121, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !12165)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!190, !12123}
!12123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12124, size: 32)
!12124 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !910, line: 3477, baseType: !12125)
!12125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 3446, size: 20256, elements: !12126)
!12126 = !{!12127, !12128, !12129, !12130, !12132, !12133, !12134, !12135, !12136, !12137, !12138, !12139, !12140, !12141, !12142, !12143, !12145, !12146, !12147, !12148, !12149, !12159, !12161, !12163, !12164}
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !12125, file: !910, line: 3447, baseType: !914, size: 32)
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !12125, file: !910, line: 3448, baseType: !914, size: 32, offset: 32)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !12125, file: !910, line: 3449, baseType: !914, size: 32, offset: 64)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12125, file: !910, line: 3450, baseType: !12131, size: 32, offset: 96)
!12131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 32, elements: !1861)
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !12125, file: !910, line: 3451, baseType: !914, size: 32, offset: 128)
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !12125, file: !910, line: 3452, baseType: !914, size: 32, offset: 160)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !12125, file: !910, line: 3453, baseType: !914, size: 32, offset: 192)
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !12125, file: !910, line: 3454, baseType: !914, size: 32, offset: 224)
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !12125, file: !910, line: 3455, baseType: !914, size: 32, offset: 256)
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !12125, file: !910, line: 3456, baseType: !914, size: 32, offset: 288)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !12125, file: !910, line: 3457, baseType: !914, size: 32, offset: 320)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !12125, file: !910, line: 3458, baseType: !914, size: 32, offset: 352)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !12125, file: !910, line: 3459, baseType: !914, size: 32, offset: 384)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !12125, file: !910, line: 3460, baseType: !914, size: 32, offset: 416)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !12125, file: !910, line: 3461, baseType: !985, size: 32, offset: 448)
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12125, file: !910, line: 3462, baseType: !12144, size: 64, offset: 480)
!12144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 64, elements: !1807)
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !12125, file: !910, line: 3463, baseType: !985, size: 32, offset: 544)
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !12125, file: !910, line: 3464, baseType: !914, size: 32, offset: 576)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !12125, file: !910, line: 3465, baseType: !985, size: 32, offset: 608)
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !12125, file: !910, line: 3466, baseType: !971, size: 384, offset: 640)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !12125, file: !910, line: 3472, baseType: !12150, size: 8192, offset: 1024)
!12150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12151, size: 8192, elements: !12157)
!12151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12125, file: !910, line: 3467, size: 128, elements: !12152)
!12152 = !{!12153, !12154, !12155, !12156}
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !12151, file: !910, line: 3468, baseType: !914, size: 32)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !12151, file: !910, line: 3469, baseType: !914, size: 32, offset: 32)
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !12151, file: !910, line: 3470, baseType: !914, size: 32, offset: 64)
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !12151, file: !910, line: 3471, baseType: !914, size: 32, offset: 96)
!12157 = !{!12158}
!12158 = !DISubrange(count: 64)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !12125, file: !910, line: 3473, baseType: !12160, size: 8192, offset: 9216)
!12160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 8192, elements: !407)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !12125, file: !910, line: 3474, baseType: !12162, size: 2048, offset: 17408)
!12162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 2048, elements: !12157)
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !12125, file: !910, line: 3475, baseType: !3360, size: 768, offset: 19456)
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !12125, file: !910, line: 3476, baseType: !914, size: 32, offset: 20224)
!12165 = !{!12166, !12167, !12168, !12169, !12170}
!12166 = !DILocalVariable(name: "base", arg: 1, scope: !12120, file: !12020, line: 120, type: !12123)
!12167 = !DILocalVariable(name: "root", scope: !12120, file: !12020, line: 122, type: !190)
!12168 = !DILocalVariable(name: "hz", scope: !12120, file: !12020, line: 123, type: !190)
!12169 = !DILocalVariable(name: "pre", scope: !12120, file: !12020, line: 124, type: !190)
!12170 = !DILocalVariable(name: "post", scope: !12120, file: !12020, line: 124, type: !190)
!12171 = !DILocation(line: 0, scope: !12120)
!12172 = !DILocation(line: 124, column: 2, scope: !12120)
!12173 = !DILocation(line: 126, column: 10, scope: !12120)
!12174 = !DILocation(line: 126, column: 2, scope: !12120)
!12175 = !DILocation(line: 134, column: 3, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12120, file: !12020, line: 126, column: 26)
!12177 = !DILocation(line: 0, scope: !12176)
!12178 = !DILocation(line: 139, column: 2, scope: !12120)
!12179 = !DILocation(line: 144, column: 8, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12120, file: !12020, line: 139, column: 16)
!12181 = !DILocation(line: 144, column: 45, scope: !12180)
!12182 = !DILocation(line: 145, column: 3, scope: !12180)
!12183 = !DILocation(line: 147, column: 8, scope: !12180)
!12184 = !DILocation(line: 148, column: 3, scope: !12180)
!12185 = !DILocation(line: 0, scope: !12180)
!12186 = !DILocation(line: 153, column: 15, scope: !12120)
!12187 = !DILocation(line: 153, column: 19, scope: !12120)
!12188 = !DILocation(line: 153, column: 12, scope: !12120)
!12189 = !DILocation(line: 153, column: 27, scope: !12120)
!12190 = !DILocation(line: 153, column: 32, scope: !12120)
!12191 = !DILocation(line: 153, column: 24, scope: !12120)
!12192 = !DILocation(line: 153, column: 2, scope: !12120)
!12193 = !DILocation(line: 154, column: 1, scope: !12120)
!12194 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !12020, file: !12020, line: 162, type: !12195, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !12211)
!12195 = !DISubroutineType(types: !12196)
!12196 = !{!190, !12197}
!12197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12198, size: 32)
!12198 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !910, line: 21082, baseType: !12199)
!12199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 21072, size: 144, elements: !12200)
!12200 = !{!12201, !12202, !12204, !12205, !12206, !12207, !12208, !12209, !12210}
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !12199, file: !910, line: 21073, baseType: !1026, size: 16)
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12199, file: !910, line: 21074, baseType: !12203, size: 16, offset: 16)
!12203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 16, elements: !162)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !12199, file: !910, line: 21075, baseType: !1026, size: 16, offset: 32)
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12199, file: !910, line: 21076, baseType: !12203, size: 16, offset: 48)
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !12199, file: !910, line: 21077, baseType: !1026, size: 16, offset: 64)
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !12199, file: !910, line: 21078, baseType: !12203, size: 16, offset: 80)
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !12199, file: !910, line: 21079, baseType: !1026, size: 16, offset: 96)
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !12199, file: !910, line: 21080, baseType: !12203, size: 16, offset: 112)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !12199, file: !910, line: 21081, baseType: !1026, size: 16, offset: 128)
!12211 = !{!12212, !12213, !12214, !12215, !12216}
!12212 = !DILocalVariable(name: "base", arg: 1, scope: !12194, file: !12020, line: 162, type: !12197)
!12213 = !DILocalVariable(name: "root", scope: !12194, file: !12020, line: 164, type: !190)
!12214 = !DILocalVariable(name: "hz", scope: !12194, file: !12020, line: 165, type: !190)
!12215 = !DILocalVariable(name: "pre", scope: !12194, file: !12020, line: 166, type: !190)
!12216 = !DILocalVariable(name: "post", scope: !12194, file: !12020, line: 166, type: !190)
!12217 = !DILocation(line: 0, scope: !12194)
!12218 = !DILocation(line: 166, column: 2, scope: !12194)
!12219 = !DILocation(line: 168, column: 10, scope: !12194)
!12220 = !DILocation(line: 168, column: 2, scope: !12194)
!12221 = !DILocation(line: 0, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12194, file: !12020, line: 168, column: 26)
!12223 = !DILocation(line: 189, column: 2, scope: !12194)
!12224 = !DILocation(line: 194, column: 8, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12194, file: !12020, line: 189, column: 16)
!12226 = !DILocation(line: 194, column: 45, scope: !12225)
!12227 = !DILocation(line: 195, column: 3, scope: !12225)
!12228 = !DILocation(line: 0, scope: !12225)
!12229 = !DILocation(line: 200, column: 15, scope: !12194)
!12230 = !DILocation(line: 200, column: 19, scope: !12194)
!12231 = !DILocation(line: 200, column: 12, scope: !12194)
!12232 = !DILocation(line: 200, column: 27, scope: !12194)
!12233 = !DILocation(line: 200, column: 32, scope: !12194)
!12234 = !DILocation(line: 200, column: 24, scope: !12194)
!12235 = !DILocation(line: 200, column: 2, scope: !12194)
!12236 = !DILocation(line: 201, column: 1, scope: !12194)
!12237 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !12020, file: !12020, line: 209, type: !12238, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !12263)
!12238 = !DISubroutineType(types: !12239)
!12239 = !{!190, !12240}
!12240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12241, size: 32)
!12241 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !910, line: 41342, baseType: !12242)
!12242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 41322, size: 1504, elements: !12243)
!12243 = !{!12244, !12245, !12246, !12247, !12248, !12249, !12250, !12251, !12252, !12253, !12254, !12255, !12256, !12257, !12258, !12259, !12260, !12261, !12262}
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !12242, file: !910, line: 41323, baseType: !985, size: 32)
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12242, file: !910, line: 41324, baseType: !1543, size: 480, offset: 32)
!12246 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !12242, file: !910, line: 41325, baseType: !914, size: 32, offset: 512)
!12247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12242, file: !910, line: 41326, baseType: !1543, size: 480, offset: 544)
!12248 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !12242, file: !910, line: 41327, baseType: !914, size: 32, offset: 1024)
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !12242, file: !910, line: 41328, baseType: !914, size: 32, offset: 1056)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !12242, file: !910, line: 41329, baseType: !914, size: 32, offset: 1088)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !12242, file: !910, line: 41330, baseType: !914, size: 32, offset: 1120)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !12242, file: !910, line: 41331, baseType: !914, size: 32, offset: 1152)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !12242, file: !910, line: 41332, baseType: !914, size: 32, offset: 1184)
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !12242, file: !910, line: 41333, baseType: !914, size: 32, offset: 1216)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !12242, file: !910, line: 41334, baseType: !914, size: 32, offset: 1248)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !12242, file: !910, line: 41335, baseType: !914, size: 32, offset: 1280)
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !12242, file: !910, line: 41336, baseType: !914, size: 32, offset: 1312)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !12242, file: !910, line: 41337, baseType: !914, size: 32, offset: 1344)
!12259 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !12242, file: !910, line: 41338, baseType: !985, size: 32, offset: 1376)
!12260 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !12242, file: !910, line: 41339, baseType: !914, size: 32, offset: 1408)
!12261 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !12242, file: !910, line: 41340, baseType: !914, size: 32, offset: 1440)
!12262 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !12242, file: !910, line: 41341, baseType: !914, size: 32, offset: 1472)
!12263 = !{!12264, !12265, !12266, !12267, !12268}
!12264 = !DILocalVariable(name: "base", arg: 1, scope: !12237, file: !12020, line: 209, type: !12240)
!12265 = !DILocalVariable(name: "root", scope: !12237, file: !12020, line: 211, type: !190)
!12266 = !DILocalVariable(name: "hz", scope: !12237, file: !12020, line: 212, type: !190)
!12267 = !DILocalVariable(name: "pre", scope: !12237, file: !12020, line: 213, type: !190)
!12268 = !DILocalVariable(name: "post", scope: !12237, file: !12020, line: 213, type: !190)
!12269 = !DILocation(line: 0, scope: !12237)
!12270 = !DILocation(line: 213, column: 2, scope: !12237)
!12271 = !DILocation(line: 215, column: 10, scope: !12237)
!12272 = !DILocation(line: 215, column: 2, scope: !12237)
!12273 = !DILocation(line: 223, column: 3, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12237, file: !12020, line: 215, column: 26)
!12275 = !DILocation(line: 227, column: 3, scope: !12274)
!12276 = !DILocation(line: 231, column: 3, scope: !12274)
!12277 = !DILocation(line: 235, column: 3, scope: !12274)
!12278 = !DILocation(line: 239, column: 3, scope: !12274)
!12279 = !DILocation(line: 243, column: 3, scope: !12274)
!12280 = !DILocation(line: 0, scope: !12274)
!12281 = !DILocation(line: 248, column: 2, scope: !12237)
!12282 = !DILocation(line: 253, column: 8, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12237, file: !12020, line: 248, column: 16)
!12284 = !DILocation(line: 253, column: 45, scope: !12283)
!12285 = !DILocation(line: 254, column: 3, scope: !12283)
!12286 = !DILocation(line: 256, column: 8, scope: !12283)
!12287 = !DILocation(line: 257, column: 3, scope: !12283)
!12288 = !DILocation(line: 0, scope: !12283)
!12289 = !DILocation(line: 262, column: 15, scope: !12237)
!12290 = !DILocation(line: 262, column: 19, scope: !12237)
!12291 = !DILocation(line: 262, column: 12, scope: !12237)
!12292 = !DILocation(line: 262, column: 27, scope: !12237)
!12293 = !DILocation(line: 262, column: 32, scope: !12237)
!12294 = !DILocation(line: 262, column: 24, scope: !12237)
!12295 = !DILocation(line: 262, column: 2, scope: !12237)
!12296 = !DILocation(line: 263, column: 1, scope: !12237)
!12297 = distinct !DISubprogram(name: "z_device_state_init", scope: !12298, file: !12298, line: 23, type: !374, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12299)
!12298 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12299 = !{!12300}
!12300 = !DILocalVariable(name: "dev", scope: !12297, file: !12298, line: 25, type: !12301)
!12301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12302, size: 32)
!12302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12303)
!12303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1086, line: 378, size: 192, elements: !12304)
!12304 = !{!12305, !12306, !12307, !12308, !12314, !12315}
!12305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12303, file: !1086, line: 380, baseType: !377, size: 32)
!12306 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12303, file: !1086, line: 382, baseType: !13, size: 32, offset: 32)
!12307 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12303, file: !1086, line: 384, baseType: !13, size: 32, offset: 64)
!12308 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12303, file: !1086, line: 386, baseType: !12309, size: 32, offset: 96)
!12309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12310, size: 32)
!12310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1086, line: 351, size: 16, elements: !12311)
!12311 = !{!12312, !12313}
!12312 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12310, file: !1086, line: 359, baseType: !173, size: 8)
!12313 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12310, file: !1086, line: 364, baseType: !279, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12303, file: !1086, line: 388, baseType: !102, size: 32, offset: 128)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12303, file: !1086, line: 396, baseType: !1099, size: 32, offset: 160)
!12316 = !DILocation(line: 0, scope: !12297)
!12317 = !DILocation(line: 31, column: 1, scope: !12297)
!12318 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12298, file: !12298, line: 33, type: !12319, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12321)
!12319 = !DISubroutineType(types: !12320)
!12320 = !{!12301, !377}
!12321 = !{!12322, !12323}
!12322 = !DILocalVariable(name: "name", arg: 1, scope: !12318, file: !12298, line: 33, type: !377)
!12323 = !DILocalVariable(name: "dev", scope: !12318, file: !12298, line: 35, type: !12301)
!12324 = !DILocation(line: 0, scope: !12318)
!12325 = !DILocation(line: 40, column: 12, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12318, file: !12298, line: 40, column: 6)
!12327 = !DILocation(line: 40, column: 21, scope: !12326)
!12328 = !DILocation(line: 40, column: 25, scope: !12326)
!12329 = !DILocation(line: 40, column: 33, scope: !12326)
!12330 = !DILocation(line: 40, column: 6, scope: !12318)
!12331 = !DILocation(line: 55, column: 2, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12318, file: !12298, line: 55, column: 2)
!12333 = !DILocation(line: 50, column: 7, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !12298, line: 50, column: 7)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !12298, line: 49, column: 57)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !12298, line: 49, column: 2)
!12337 = distinct !DILexicalBlock(scope: !12318, file: !12298, line: 49, column: 2)
!12338 = !DILocation(line: 50, column: 30, scope: !12334)
!12339 = !DILocation(line: 50, column: 39, scope: !12334)
!12340 = !DILocation(line: 50, column: 44, scope: !12334)
!12341 = !DILocation(line: 50, column: 7, scope: !12335)
!12342 = !DILocation(line: 49, column: 53, scope: !12336)
!12343 = !DILocation(line: 49, column: 33, scope: !12336)
!12344 = !DILocation(line: 49, column: 2, scope: !12337)
!12345 = distinct !{!12345, !12344, !12346}
!12346 = !DILocation(line: 53, column: 2, scope: !12337)
!12347 = !DILocation(line: 56, column: 7, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !12298, line: 56, column: 7)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !12298, line: 55, column: 57)
!12350 = distinct !DILexicalBlock(scope: !12332, file: !12298, line: 55, column: 2)
!12351 = !DILocation(line: 56, column: 30, scope: !12348)
!12352 = !DILocation(line: 56, column: 52, scope: !12348)
!12353 = !DILocation(line: 56, column: 34, scope: !12348)
!12354 = !DILocation(line: 56, column: 58, scope: !12348)
!12355 = !DILocation(line: 56, column: 7, scope: !12349)
!12356 = !DILocation(line: 55, column: 53, scope: !12350)
!12357 = !DILocation(line: 55, column: 33, scope: !12350)
!12358 = distinct !{!12358, !12331, !12359}
!12359 = !DILocation(line: 59, column: 2, scope: !12332)
!12360 = !DILocation(line: 62, column: 1, scope: !12318)
!12361 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12298, file: !12298, line: 93, type: !12362, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12364)
!12362 = !DISubroutineType(types: !12363)
!12363 = !{!279, !12301}
!12364 = !{!12365}
!12365 = !DILocalVariable(name: "dev", arg: 1, scope: !12361, file: !12298, line: 93, type: !12301)
!12366 = !DILocation(line: 0, scope: !12361)
!12367 = !DILocation(line: 99, column: 10, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12361, file: !12298, line: 99, column: 6)
!12369 = !DILocation(line: 99, column: 6, scope: !12361)
!12370 = !DILocation(line: 103, column: 14, scope: !12361)
!12371 = !DILocation(line: 103, column: 21, scope: !12361)
!12372 = !DILocation(line: 103, column: 33, scope: !12361)
!12373 = !DILocation(line: 103, column: 49, scope: !12361)
!12374 = !DILocation(line: 103, column: 58, scope: !12361)
!12375 = !DILocation(line: 104, column: 1, scope: !12361)
!12376 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12298, file: !12298, line: 87, type: !12377, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12380)
!12377 = !DISubroutineType(types: !12378)
!12378 = !{!239, !12379}
!12379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12301, size: 32)
!12380 = !{!12381}
!12381 = !DILocalVariable(name: "devices", arg: 1, scope: !12376, file: !12298, line: 87, type: !12379)
!12382 = !DILocation(line: 0, scope: !12376)
!12383 = !DILocation(line: 89, column: 11, scope: !12376)
!12384 = !DILocation(line: 90, column: 2, scope: !12376)
!12385 = distinct !DISubprogram(name: "device_required_foreach", scope: !12298, file: !12298, line: 125, type: !12386, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12392)
!12386 = !DISubroutineType(types: !12387)
!12387 = !{!103, !12301, !12388, !102}
!12388 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !1086, line: 471, baseType: !12389)
!12389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12390, size: 32)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{!103, !12301, !102}
!12392 = !{!12393, !12394, !12395, !12396, !12397}
!12393 = !DILocalVariable(name: "dev", arg: 1, scope: !12385, file: !12298, line: 125, type: !12301)
!12394 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12385, file: !12298, line: 126, type: !12388)
!12395 = !DILocalVariable(name: "context", arg: 3, scope: !12385, file: !12298, line: 127, type: !102)
!12396 = !DILocalVariable(name: "handle_count", scope: !12385, file: !12298, line: 129, type: !239)
!12397 = !DILocalVariable(name: "handles", scope: !12385, file: !12298, line: 130, type: !1099)
!12398 = !DILocation(line: 0, scope: !12385)
!12399 = !DILocation(line: 129, column: 2, scope: !12385)
!12400 = !DILocation(line: 129, column: 9, scope: !12385)
!12401 = !DILocation(line: 130, column: 35, scope: !12385)
!12402 = !DILocation(line: 132, column: 33, scope: !12385)
!12403 = !DILocation(line: 132, column: 9, scope: !12385)
!12404 = !DILocation(line: 133, column: 1, scope: !12385)
!12405 = !DILocation(line: 132, column: 2, scope: !12385)
!12406 = distinct !DISubprogram(name: "device_required_handles_get", scope: !1086, file: !1086, line: 493, type: !12407, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12409)
!12407 = !DISubroutineType(types: !12408)
!12408 = !{!1099, !12301, !3019}
!12409 = !{!12410, !12411, !12412, !12413}
!12410 = !DILocalVariable(name: "dev", arg: 1, scope: !12406, file: !1086, line: 493, type: !12301)
!12411 = !DILocalVariable(name: "count", arg: 2, scope: !12406, file: !1086, line: 493, type: !3019)
!12412 = !DILocalVariable(name: "rv", scope: !12406, file: !1086, line: 495, type: !1099)
!12413 = !DILocalVariable(name: "i", scope: !12414, file: !1086, line: 498, type: !239)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !1086, line: 497, column: 18)
!12415 = distinct !DILexicalBlock(scope: !12406, file: !1086, line: 497, column: 6)
!12416 = !DILocation(line: 0, scope: !12406)
!12417 = !DILocation(line: 495, column: 35, scope: !12406)
!12418 = !DILocation(line: 497, column: 9, scope: !12415)
!12419 = !DILocation(line: 497, column: 6, scope: !12406)
!12420 = !DILocation(line: 0, scope: !12414)
!12421 = !DILocation(line: 500, column: 11, scope: !12414)
!12422 = !DILocation(line: 500, column: 40, scope: !12414)
!12423 = !DILocation(line: 502, column: 4, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12414, file: !1086, line: 501, column: 40)
!12425 = distinct !{!12425, !12426, !12427}
!12426 = !DILocation(line: 500, column: 3, scope: !12414)
!12427 = !DILocation(line: 503, column: 3, scope: !12414)
!12428 = !DILocation(line: 504, column: 10, scope: !12414)
!12429 = !DILocation(line: 505, column: 2, scope: !12414)
!12430 = !DILocation(line: 507, column: 2, scope: !12406)
!12431 = distinct !DISubprogram(name: "device_visitor", scope: !12298, file: !12298, line: 106, type: !12432, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12434)
!12432 = !DISubroutineType(types: !12433)
!12433 = !{!103, !1099, !239, !12388, !102}
!12434 = !{!12435, !12436, !12437, !12438, !12439, !12441, !12444, !12445}
!12435 = !DILocalVariable(name: "handles", arg: 1, scope: !12431, file: !12298, line: 106, type: !1099)
!12436 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12431, file: !12298, line: 107, type: !239)
!12437 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12431, file: !12298, line: 108, type: !12388)
!12438 = !DILocalVariable(name: "context", arg: 4, scope: !12431, file: !12298, line: 109, type: !102)
!12439 = !DILocalVariable(name: "i", scope: !12440, file: !12298, line: 112, type: !239)
!12440 = distinct !DILexicalBlock(scope: !12431, file: !12298, line: 112, column: 2)
!12441 = !DILocalVariable(name: "dh", scope: !12442, file: !12298, line: 113, type: !1101)
!12442 = distinct !DILexicalBlock(scope: !12443, file: !12298, line: 112, column: 44)
!12443 = distinct !DILexicalBlock(scope: !12440, file: !12298, line: 112, column: 2)
!12444 = !DILocalVariable(name: "rdev", scope: !12442, file: !12298, line: 114, type: !12301)
!12445 = !DILocalVariable(name: "rc", scope: !12442, file: !12298, line: 115, type: !103)
!12446 = !DILocation(line: 0, scope: !12431)
!12447 = !DILocation(line: 0, scope: !12440)
!12448 = !DILocation(line: 112, column: 23, scope: !12443)
!12449 = !DILocation(line: 112, column: 2, scope: !12440)
!12450 = distinct !{!12450, !12449, !12451}
!12451 = !DILocation(line: 120, column: 2, scope: !12440)
!12452 = !DILocation(line: 113, column: 24, scope: !12442)
!12453 = !DILocation(line: 0, scope: !12442)
!12454 = !DILocation(line: 114, column: 31, scope: !12442)
!12455 = !DILocation(line: 115, column: 12, scope: !12442)
!12456 = !DILocation(line: 117, column: 10, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12442, file: !12298, line: 117, column: 7)
!12458 = !DILocation(line: 112, column: 39, scope: !12443)
!12459 = !DILocation(line: 123, column: 1, scope: !12431)
!12460 = distinct !DISubprogram(name: "device_from_handle", scope: !1086, file: !1086, line: 439, type: !12461, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12463)
!12461 = !DISubroutineType(types: !12462)
!12462 = !{!12301, !1101}
!12463 = !{!12464, !12465, !12466}
!12464 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12460, file: !1086, line: 439, type: !1101)
!12465 = !DILocalVariable(name: "dev", scope: !12460, file: !1086, line: 443, type: !12301)
!12466 = !DILocalVariable(name: "numdev", scope: !12460, file: !1086, line: 444, type: !239)
!12467 = !DILocation(line: 0, scope: !12460)
!12468 = !DILocation(line: 446, column: 7, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12460, file: !1086, line: 446, column: 6)
!12470 = !DILocation(line: 446, column: 18, scope: !12469)
!12471 = !DILocation(line: 446, column: 23, scope: !12469)
!12472 = !DILocation(line: 450, column: 2, scope: !12460)
!12473 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12298, file: !12298, line: 135, type: !12386, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12474)
!12474 = !{!12475, !12476, !12477, !12478, !12479}
!12475 = !DILocalVariable(name: "dev", arg: 1, scope: !12473, file: !12298, line: 135, type: !12301)
!12476 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12473, file: !12298, line: 136, type: !12388)
!12477 = !DILocalVariable(name: "context", arg: 3, scope: !12473, file: !12298, line: 137, type: !102)
!12478 = !DILocalVariable(name: "handle_count", scope: !12473, file: !12298, line: 139, type: !239)
!12479 = !DILocalVariable(name: "handles", scope: !12473, file: !12298, line: 140, type: !1099)
!12480 = !DILocation(line: 0, scope: !12473)
!12481 = !DILocation(line: 139, column: 2, scope: !12473)
!12482 = !DILocation(line: 139, column: 9, scope: !12473)
!12483 = !DILocation(line: 140, column: 35, scope: !12473)
!12484 = !DILocation(line: 142, column: 33, scope: !12473)
!12485 = !DILocation(line: 142, column: 9, scope: !12473)
!12486 = !DILocation(line: 143, column: 1, scope: !12473)
!12487 = !DILocation(line: 142, column: 2, scope: !12473)
!12488 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !1086, file: !1086, line: 573, type: !12407, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3570, retainedNodes: !12489)
!12489 = !{!12490, !12491, !12492, !12493, !12494}
!12490 = !DILocalVariable(name: "dev", arg: 1, scope: !12488, file: !1086, line: 573, type: !12301)
!12491 = !DILocalVariable(name: "count", arg: 2, scope: !12488, file: !1086, line: 573, type: !3019)
!12492 = !DILocalVariable(name: "rv", scope: !12488, file: !1086, line: 575, type: !1099)
!12493 = !DILocalVariable(name: "region", scope: !12488, file: !1086, line: 576, type: !239)
!12494 = !DILocalVariable(name: "i", scope: !12488, file: !1086, line: 577, type: !239)
!12495 = !DILocation(line: 0, scope: !12488)
!12496 = !DILocation(line: 575, column: 35, scope: !12488)
!12497 = !DILocation(line: 579, column: 9, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12488, file: !1086, line: 579, column: 6)
!12499 = !DILocation(line: 579, column: 6, scope: !12488)
!12500 = !DILocation(line: 582, column: 8, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !1086, line: 582, column: 8)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !1086, line: 581, column: 23)
!12503 = distinct !DILexicalBlock(scope: !12498, file: !1086, line: 579, column: 18)
!12504 = !DILocation(line: 582, column: 12, scope: !12501)
!12505 = !DILocation(line: 585, column: 6, scope: !12502)
!12506 = !DILocation(line: 0, scope: !12503)
!12507 = !DILocation(line: 581, column: 17, scope: !12503)
!12508 = !DILocation(line: 581, column: 3, scope: !12503)
!12509 = !DILocation(line: 588, column: 10, scope: !12503)
!12510 = !DILocation(line: 588, column: 16, scope: !12503)
!12511 = !DILocation(line: 589, column: 4, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12503, file: !1086, line: 588, column: 39)
!12513 = !DILocation(line: 588, column: 3, scope: !12503)
!12514 = distinct !{!12514, !12513, !12515}
!12515 = !DILocation(line: 590, column: 3, scope: !12503)
!12516 = !DILocation(line: 591, column: 10, scope: !12503)
!12517 = !DILocation(line: 592, column: 2, scope: !12503)
!12518 = !DILocation(line: 575, column: 25, scope: !12488)
!12519 = !DILocation(line: 594, column: 2, scope: !12488)
!12520 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1943, file: !1943, line: 49, type: !12521, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !2145)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{!596}
!12523 = !DILocation(line: 51, column: 10, scope: !12520)
!12524 = !DILocation(line: 51, column: 20, scope: !12520)
!12525 = !DILocation(line: 51, column: 2, scope: !12520)
!12526 = distinct !DISubprogram(name: "coredump", scope: !3577, file: !3577, line: 209, type: !12527, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12670)
!12527 = !DISubroutineType(types: !12528)
!12528 = !{null, !32, !12529, !12573}
!12529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12530, size: 32)
!12530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12531)
!12531 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3150, line: 141, baseType: !12532)
!12532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3150, line: 97, size: 256, elements: !12533)
!12533 = !{!12534}
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12532, file: !3150, line: 107, baseType: !12535, size: 256)
!12535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3150, line: 98, size: 256, elements: !12536)
!12536 = !{!12537, !12542, !12547, !12552, !12557, !12562, !12567, !12572}
!12537 = !DIDerivedType(tag: DW_TAG_member, scope: !12535, file: !3150, line: 99, baseType: !12538, size: 32)
!12538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12535, file: !3150, line: 99, size: 32, elements: !12539)
!12539 = !{!12540, !12541}
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12538, file: !3150, line: 99, baseType: !190, size: 32)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12538, file: !3150, line: 99, baseType: !190, size: 32)
!12542 = !DIDerivedType(tag: DW_TAG_member, scope: !12535, file: !3150, line: 100, baseType: !12543, size: 32, offset: 32)
!12543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12535, file: !3150, line: 100, size: 32, elements: !12544)
!12544 = !{!12545, !12546}
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12543, file: !3150, line: 100, baseType: !190, size: 32)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12543, file: !3150, line: 100, baseType: !190, size: 32)
!12547 = !DIDerivedType(tag: DW_TAG_member, scope: !12535, file: !3150, line: 101, baseType: !12548, size: 32, offset: 64)
!12548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12535, file: !3150, line: 101, size: 32, elements: !12549)
!12549 = !{!12550, !12551}
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12548, file: !3150, line: 101, baseType: !190, size: 32)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12548, file: !3150, line: 101, baseType: !190, size: 32)
!12552 = !DIDerivedType(tag: DW_TAG_member, scope: !12535, file: !3150, line: 102, baseType: !12553, size: 32, offset: 96)
!12553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12535, file: !3150, line: 102, size: 32, elements: !12554)
!12554 = !{!12555, !12556}
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12553, file: !3150, line: 102, baseType: !190, size: 32)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12553, file: !3150, line: 102, baseType: !190, size: 32)
!12557 = !DIDerivedType(tag: DW_TAG_member, scope: !12535, file: !3150, line: 103, baseType: !12558, size: 32, offset: 128)
!12558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12535, file: !3150, line: 103, size: 32, elements: !12559)
!12559 = !{!12560, !12561}
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12558, file: !3150, line: 103, baseType: !190, size: 32)
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12558, file: !3150, line: 103, baseType: !190, size: 32)
!12562 = !DIDerivedType(tag: DW_TAG_member, scope: !12535, file: !3150, line: 104, baseType: !12563, size: 32, offset: 160)
!12563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12535, file: !3150, line: 104, size: 32, elements: !12564)
!12564 = !{!12565, !12566}
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12563, file: !3150, line: 104, baseType: !190, size: 32)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12563, file: !3150, line: 104, baseType: !190, size: 32)
!12567 = !DIDerivedType(tag: DW_TAG_member, scope: !12535, file: !3150, line: 105, baseType: !12568, size: 32, offset: 192)
!12568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12535, file: !3150, line: 105, size: 32, elements: !12569)
!12569 = !{!12570, !12571}
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12568, file: !3150, line: 105, baseType: !190, size: 32)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12568, file: !3150, line: 105, baseType: !190, size: 32)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12535, file: !3150, line: 106, baseType: !190, size: 32, offset: 224)
!12573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12574, size: 32)
!12574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !12575)
!12575 = !{!12576, !12634, !12646, !12647, !12648, !12649, !12650, !12665}
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12574, file: !131, line: 247, baseType: !12577, size: 384)
!12577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !12578)
!12578 = !{!12579, !12603, !12610, !12611, !12612, !12621, !12622, !12623}
!12579 = !DIDerivedType(tag: DW_TAG_member, scope: !12577, file: !131, line: 60, baseType: !12580, size: 64)
!12580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12577, file: !131, line: 60, size: 64, elements: !12581)
!12581 = !{!12582, !12597}
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12580, file: !131, line: 61, baseType: !12583, size: 64)
!12583 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !141, line: 49, baseType: !12584)
!12584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !141, line: 37, size: 64, elements: !12585)
!12585 = !{!12586, !12592}
!12586 = !DIDerivedType(tag: DW_TAG_member, scope: !12584, file: !141, line: 38, baseType: !12587, size: 32)
!12587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12584, file: !141, line: 38, size: 32, elements: !12588)
!12588 = !{!12589, !12591}
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12587, file: !141, line: 39, baseType: !12590, size: 32)
!12590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12584, size: 32)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12587, file: !141, line: 40, baseType: !12590, size: 32)
!12592 = !DIDerivedType(tag: DW_TAG_member, scope: !12584, file: !141, line: 42, baseType: !12593, size: 32, offset: 32)
!12593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12584, file: !141, line: 42, size: 32, elements: !12594)
!12594 = !{!12595, !12596}
!12595 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12593, file: !141, line: 43, baseType: !12590, size: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12593, file: !141, line: 44, baseType: !12590, size: 32)
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12580, file: !131, line: 62, baseType: !12598, size: 64)
!12598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !12599)
!12599 = !{!12600}
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12598, file: !157, line: 50, baseType: !12601, size: 64)
!12601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12602, size: 64, elements: !162)
!12602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12598, size: 32)
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12577, file: !131, line: 68, baseType: !12604, size: 32, offset: 64)
!12604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12605, size: 32)
!12605 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !12606)
!12606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !12607)
!12607 = !{!12608}
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12606, file: !167, line: 232, baseType: !12609, size: 64)
!12609 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !12584)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12577, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12577, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!12612 = !DIDerivedType(tag: DW_TAG_member, scope: !12577, file: !131, line: 90, baseType: !12613, size: 16, offset: 112)
!12613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12577, file: !131, line: 90, size: 16, elements: !12614)
!12614 = !{!12615, !12620}
!12615 = !DIDerivedType(tag: DW_TAG_member, scope: !12613, file: !131, line: 91, baseType: !12616, size: 16)
!12616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12613, file: !131, line: 91, size: 16, elements: !12617)
!12617 = !{!12618, !12619}
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12616, file: !131, line: 96, baseType: !183, size: 8)
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12616, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12613, file: !131, line: 100, baseType: !187, size: 16)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12577, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12577, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12577, file: !131, line: 131, baseType: !12624, size: 192, offset: 192)
!12624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !12625)
!12625 = !{!12626, !12627, !12633}
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12624, file: !167, line: 245, baseType: !12583, size: 64)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12624, file: !167, line: 246, baseType: !12628, size: 32, offset: 64)
!12628 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !12629)
!12629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12630, size: 32)
!12630 = !DISubroutineType(types: !12631)
!12631 = !{null, !12632}
!12632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12624, size: 32)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12624, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!12634 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12574, file: !131, line: 250, baseType: !12635, size: 288, offset: 384)
!12635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !12636)
!12636 = !{!12637, !12638, !12639, !12640, !12641, !12642, !12643, !12644, !12645}
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12635, file: !207, line: 26, baseType: !190, size: 32)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12635, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12635, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!12640 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12635, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12635, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12635, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12635, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!12644 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12635, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!12645 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12635, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!12646 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12574, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!12647 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12574, file: !131, line: 256, baseType: !12605, size: 64, offset: 704)
!12648 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12574, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!12649 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12574, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!12650 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12574, file: !131, line: 325, baseType: !12651, size: 32, offset: 1056)
!12651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12652, size: 32)
!12652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !12653)
!12653 = !{!12654, !12660, !12661}
!12654 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12652, file: !110, line: 5074, baseType: !12655, size: 96)
!12655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !12656)
!12656 = !{!12657, !12658, !12659}
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12655, file: !232, line: 57, baseType: !235, size: 32)
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12655, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12655, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12652, file: !110, line: 5075, baseType: !12605, size: 64, offset: 96)
!12661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12652, file: !110, line: 5076, baseType: !12662, size: 32, offset: 160)
!12662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !12663)
!12663 = !{!12664}
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12662, file: !244, line: 52, baseType: !22, size: 32)
!12665 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12574, file: !131, line: 343, baseType: !12666, size: 64, offset: 1088)
!12666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !12667)
!12667 = !{!12668, !12669}
!12668 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12666, file: !207, line: 63, baseType: !190, size: 32)
!12669 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12666, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!12670 = !{!12671, !12672, !12673}
!12671 = !DILocalVariable(name: "reason", arg: 1, scope: !12526, file: !3577, line: 209, type: !32)
!12672 = !DILocalVariable(name: "esf", arg: 2, scope: !12526, file: !3577, line: 209, type: !12529)
!12673 = !DILocalVariable(name: "thread", arg: 3, scope: !12526, file: !3577, line: 210, type: !12573)
!12674 = !DILocation(line: 0, scope: !12526)
!12675 = !DILocation(line: 212, column: 1, scope: !12526)
!12676 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3577, file: !3577, line: 214, type: !12677, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{null, !22, !22}
!12679 = !{!12680, !12681}
!12680 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12676, file: !3577, line: 214, type: !22)
!12681 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12676, file: !3577, line: 214, type: !22)
!12682 = !DILocation(line: 0, scope: !12676)
!12683 = !DILocation(line: 216, column: 1, scope: !12676)
!12684 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3577, file: !3577, line: 218, type: !12685, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12687)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{null, !601, !239}
!12687 = !{!12688, !12689}
!12688 = !DILocalVariable(name: "buf", arg: 1, scope: !12684, file: !3577, line: 218, type: !601)
!12689 = !DILocalVariable(name: "buflen", arg: 2, scope: !12684, file: !3577, line: 218, type: !239)
!12690 = !DILocation(line: 0, scope: !12684)
!12691 = !DILocation(line: 220, column: 1, scope: !12684)
!12692 = distinct !DISubprogram(name: "coredump_query", scope: !3577, file: !3577, line: 222, type: !12693, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12695)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!103, !3576, !102}
!12695 = !{!12696, !12697}
!12696 = !DILocalVariable(name: "query_id", arg: 1, scope: !12692, file: !3577, line: 222, type: !3576)
!12697 = !DILocalVariable(name: "arg", arg: 2, scope: !12692, file: !3577, line: 222, type: !102)
!12698 = !DILocation(line: 0, scope: !12692)
!12699 = !DILocation(line: 224, column: 2, scope: !12692)
!12700 = distinct !DISubprogram(name: "coredump_cmd", scope: !3577, file: !3577, line: 227, type: !12701, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!103, !3583, !102}
!12703 = !{!12704, !12705}
!12704 = !DILocalVariable(name: "query_id", arg: 1, scope: !12700, file: !3577, line: 227, type: !3583)
!12705 = !DILocalVariable(name: "arg", arg: 2, scope: !12700, file: !3577, line: 227, type: !102)
!12706 = !DILocation(line: 0, scope: !12700)
!12707 = !DILocation(line: 229, column: 2, scope: !12700)
!12708 = distinct !DISubprogram(name: "arch_system_halt", scope: !12709, file: !12709, line: 23, type: !7751, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12710)
!12709 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12710 = !{!12711}
!12711 = !DILocalVariable(name: "reason", arg: 1, scope: !12708, file: !12709, line: 23, type: !32)
!12712 = !DILocation(line: 0, scope: !12708)
!12713 = !DILocation(line: 55, column: 2, scope: !12714, inlinedAt: !12718)
!12714 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12715)
!12715 = !{!12716, !12717}
!12716 = !DILocalVariable(name: "key", scope: !12714, file: !7921, line: 44, type: !32)
!12717 = !DILocalVariable(name: "tmp", scope: !12714, file: !7921, line: 53, type: !32)
!12718 = distinct !DILocation(line: 31, column: 8, scope: !12708)
!12719 = !{i64 2846437}
!12720 = !DILocation(line: 0, scope: !12714, inlinedAt: !12718)
!12721 = !DILocation(line: 32, column: 2, scope: !12708)
!12722 = !DILocation(line: 32, column: 2, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !12709, line: 32, column: 2)
!12724 = distinct !DILexicalBlock(scope: !12708, file: !12709, line: 32, column: 2)
!12725 = distinct !{!12725, !12726, !12727}
!12726 = !DILocation(line: 32, column: 2, scope: !12724)
!12727 = !DILocation(line: 34, column: 2, scope: !12724)
!12728 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12709, file: !12709, line: 39, type: !12729, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12731)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{null, !32, !12529}
!12731 = !{!12732, !12733}
!12732 = !DILocalVariable(name: "reason", arg: 1, scope: !12728, file: !12709, line: 39, type: !32)
!12733 = !DILocalVariable(name: "esf", arg: 2, scope: !12728, file: !12709, line: 40, type: !12529)
!12734 = !DILocation(line: 0, scope: !12728)
!12735 = !DILocation(line: 45, column: 2, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !12709, line: 45, column: 2)
!12737 = distinct !DILexicalBlock(scope: !12738, file: !12709, line: 45, column: 2)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !12709, line: 45, column: 2)
!12739 = distinct !DILexicalBlock(scope: !12728, file: !12709, line: 45, column: 2)
!12740 = !DILocation(line: 46, column: 2, scope: !12728)
!12741 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12709, file: !12709, line: 81, type: !7751, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12742)
!12742 = !{!12743}
!12743 = !DILocalVariable(name: "reason", arg: 1, scope: !12741, file: !12709, line: 81, type: !32)
!12744 = !DILocation(line: 0, scope: !12741)
!12745 = !DILocation(line: 83, column: 2, scope: !12741)
!12746 = distinct !DISubprogram(name: "z_fatal_error", scope: !12709, file: !12709, line: 96, type: !12729, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12747)
!12747 = !{!12748, !12749, !12750, !12751}
!12748 = !DILocalVariable(name: "reason", arg: 1, scope: !12746, file: !12709, line: 96, type: !32)
!12749 = !DILocalVariable(name: "esf", arg: 2, scope: !12746, file: !12709, line: 96, type: !12529)
!12750 = !DILocalVariable(name: "key", scope: !12746, file: !12709, line: 102, type: !32)
!12751 = !DILocalVariable(name: "thread", scope: !12746, file: !12709, line: 103, type: !12573)
!12752 = !DILocation(line: 0, scope: !12746)
!12753 = !DILocation(line: 55, column: 2, scope: !12714, inlinedAt: !12754)
!12754 = distinct !DILocation(line: 102, column: 21, scope: !12746)
!12755 = !DILocation(line: 0, scope: !12714, inlinedAt: !12754)
!12756 = !DILocation(line: 104, column: 4, scope: !12746)
!12757 = !DILocation(line: 109, column: 2, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !12709, line: 109, column: 2)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !12709, line: 109, column: 2)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !12709, line: 109, column: 2)
!12761 = distinct !DILexicalBlock(scope: !12746, file: !12709, line: 109, column: 2)
!12762 = !DILocation(line: 119, column: 11, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12746, file: !12709, line: 119, column: 6)
!12764 = !DILocation(line: 119, column: 20, scope: !12763)
!12765 = !DILocalVariable(name: "esf", arg: 1, scope: !12766, file: !8796, line: 71, type: !12529)
!12766 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8796, file: !8796, line: 71, type: !12767, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12769)
!12767 = !DISubroutineType(types: !12768)
!12768 = !{!279, !12529}
!12769 = !{!12765}
!12770 = !DILocation(line: 0, scope: !12766, inlinedAt: !12771)
!12771 = distinct !DILocation(line: 119, column: 23, scope: !12763)
!12772 = !DILocation(line: 73, column: 21, scope: !12766, inlinedAt: !12771)
!12773 = !DILocation(line: 73, column: 26, scope: !12766, inlinedAt: !12771)
!12774 = !DILocation(line: 73, column: 9, scope: !12766, inlinedAt: !12771)
!12775 = !DILocation(line: 119, column: 6, scope: !12746)
!12776 = !DILocation(line: 120, column: 3, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12778, file: !12709, line: 120, column: 3)
!12778 = distinct !DILexicalBlock(scope: !12779, file: !12709, line: 120, column: 3)
!12779 = distinct !DILexicalBlock(scope: !12780, file: !12709, line: 120, column: 3)
!12780 = distinct !DILexicalBlock(scope: !12781, file: !12709, line: 120, column: 3)
!12781 = distinct !DILexicalBlock(scope: !12763, file: !12709, line: 119, column: 57)
!12782 = !DILocation(line: 121, column: 2, scope: !12781)
!12783 = !DILocation(line: 124, column: 2, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !12709, line: 124, column: 2)
!12785 = distinct !DILexicalBlock(scope: !12786, file: !12709, line: 124, column: 2)
!12786 = distinct !DILexicalBlock(scope: !12787, file: !12709, line: 124, column: 2)
!12787 = distinct !DILexicalBlock(scope: !12746, file: !12709, line: 124, column: 2)
!12788 = !DILocation(line: 131, column: 2, scope: !12746)
!12789 = !DILocation(line: 147, column: 3, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12791, file: !12709, line: 147, column: 3)
!12791 = distinct !DILexicalBlock(scope: !12792, file: !12709, line: 147, column: 3)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !12709, line: 146, column: 32)
!12793 = distinct !DILexicalBlock(scope: !12746, file: !12709, line: 146, column: 6)
!12794 = !DILocation(line: 147, column: 3, scope: !12791)
!12795 = !DILocation(line: 147, column: 3, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12790, file: !12709, line: 147, column: 3)
!12797 = !DILocalVariable(name: "key", arg: 1, scope: !12798, file: !7921, line: 84, type: !32)
!12798 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12799)
!12799 = !{!12797}
!12800 = !DILocation(line: 0, scope: !12798, inlinedAt: !12801)
!12801 = distinct !DILocation(line: 186, column: 2, scope: !12746)
!12802 = !DILocation(line: 95, column: 2, scope: !12798, inlinedAt: !12801)
!12803 = !{i64 2847254}
!12804 = !DILocation(line: 189, column: 3, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !12709, line: 188, column: 41)
!12806 = distinct !DILexicalBlock(scope: !12746, file: !12709, line: 188, column: 6)
!12807 = !DILocation(line: 191, column: 1, scope: !12746)
!12808 = distinct !DISubprogram(name: "k_current_get", scope: !110, file: !110, line: 530, type: !12809, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !2145)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{!12811}
!12811 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !12573)
!12812 = !DILocation(line: 535, column: 9, scope: !12808)
!12813 = !DILocation(line: 535, column: 2, scope: !12808)
!12814 = distinct !DISubprogram(name: "reason_to_str", scope: !12709, file: !12709, line: 62, type: !12815, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12817)
!12815 = !DISubroutineType(types: !12816)
!12816 = !{!377, !32}
!12817 = !{!12818}
!12818 = !DILocalVariable(name: "reason", arg: 1, scope: !12814, file: !12709, line: 62, type: !32)
!12819 = !DILocation(line: 0, scope: !12814)
!12820 = !DILocation(line: 64, column: 2, scope: !12814)
!12821 = !DILocation(line: 0, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12814, file: !12709, line: 64, column: 18)
!12823 = !DILocation(line: 78, column: 1, scope: !12814)
!12824 = distinct !DISubprogram(name: "thread_name_get", scope: !12709, file: !12709, line: 51, type: !12825, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12827)
!12825 = !DISubroutineType(types: !12826)
!12826 = !{!377, !12573}
!12827 = !{!12828, !12829}
!12828 = !DILocalVariable(name: "thread", arg: 1, scope: !12824, file: !12709, line: 51, type: !12573)
!12829 = !DILocalVariable(name: "thread_name", scope: !12824, file: !12709, line: 53, type: !377)
!12830 = !DILocation(line: 0, scope: !12824)
!12831 = !DILocation(line: 53, column: 36, scope: !12824)
!12832 = !DILocation(line: 53, column: 28, scope: !12824)
!12833 = !DILocation(line: 53, column: 47, scope: !12824)
!12834 = !DILocation(line: 55, column: 19, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12824, file: !12709, line: 55, column: 6)
!12836 = !DILocation(line: 55, column: 28, scope: !12835)
!12837 = !DILocation(line: 55, column: 32, scope: !12835)
!12838 = !DILocation(line: 55, column: 47, scope: !12835)
!12839 = !DILocation(line: 55, column: 6, scope: !12824)
!12840 = !DILocation(line: 57, column: 2, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12835, file: !12709, line: 55, column: 57)
!12842 = !DILocation(line: 59, column: 2, scope: !12824)
!12843 = distinct !DISubprogram(name: "k_thread_abort", scope: !4037, file: !4037, line: 188, type: !12844, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !12846)
!12844 = !DISubroutineType(types: !12845)
!12845 = !{null, !12811}
!12846 = !{!12847}
!12847 = !DILocalVariable(name: "thread", arg: 1, scope: !12843, file: !4037, line: 188, type: !12811)
!12848 = !DILocation(line: 0, scope: !12843)
!12849 = !DILocation(line: 197, column: 2, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12843, file: !4037, line: 197, column: 2)
!12851 = !{i64 2151045580}
!12852 = !DILocation(line: 198, column: 2, scope: !12843)
!12853 = !DILocation(line: 199, column: 1, scope: !12843)
!12854 = distinct !DISubprogram(name: "z_current_get", scope: !4037, file: !4037, line: 173, type: !12809, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3573, retainedNodes: !2145)
!12855 = !DILocation(line: 180, column: 2, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12854, file: !4037, line: 180, column: 2)
!12857 = !{i64 2151045512}
!12858 = !DILocation(line: 181, column: 9, scope: !12854)
!12859 = !DILocation(line: 181, column: 2, scope: !12854)
!12860 = distinct !DISubprogram(name: "z_early_memset", scope: !1950, file: !1950, line: 108, type: !12861, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12863)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !102, !103, !239}
!12863 = !{!12864, !12865, !12866}
!12864 = !DILocalVariable(name: "dst", arg: 1, scope: !12860, file: !1950, line: 108, type: !102)
!12865 = !DILocalVariable(name: "c", arg: 2, scope: !12860, file: !1950, line: 108, type: !103)
!12866 = !DILocalVariable(name: "n", arg: 3, scope: !12860, file: !1950, line: 108, type: !239)
!12867 = !DILocation(line: 0, scope: !12860)
!12868 = !DILocation(line: 110, column: 9, scope: !12860)
!12869 = !DILocation(line: 111, column: 1, scope: !12860)
!12870 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1950, file: !1950, line: 121, type: !12871, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12873)
!12871 = !DISubroutineType(types: !12872)
!12872 = !{null, !102, !13, !239}
!12873 = !{!12874, !12875, !12876}
!12874 = !DILocalVariable(name: "dst", arg: 1, scope: !12870, file: !1950, line: 121, type: !102)
!12875 = !DILocalVariable(name: "src", arg: 2, scope: !12870, file: !1950, line: 121, type: !13)
!12876 = !DILocalVariable(name: "n", arg: 3, scope: !12870, file: !1950, line: 121, type: !239)
!12877 = !DILocation(line: 0, scope: !12870)
!12878 = !DILocation(line: 123, column: 9, scope: !12870)
!12879 = !DILocation(line: 124, column: 1, scope: !12870)
!12880 = distinct !DISubprogram(name: "z_bss_zero", scope: !1950, file: !1950, line: 132, type: !374, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !2145)
!12881 = !DILocation(line: 143, column: 2, scope: !12880)
!12882 = !DILocation(line: 168, column: 1, scope: !12880)
!12883 = distinct !DISubprogram(name: "z_init_cpu", scope: !1950, file: !1950, line: 372, type: !12884, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12886)
!12884 = !DISubroutineType(types: !12885)
!12885 = !{null, !103}
!12886 = !{!12887}
!12887 = !DILocalVariable(name: "id", arg: 1, scope: !12883, file: !1950, line: 372, type: !103)
!12888 = !DILocation(line: 0, scope: !12883)
!12889 = !DILocation(line: 374, column: 2, scope: !12883)
!12890 = !DILocation(line: 375, column: 34, scope: !12883)
!12891 = !DILocation(line: 375, column: 19, scope: !12883)
!12892 = !DILocation(line: 375, column: 31, scope: !12883)
!12893 = !DILocation(line: 376, column: 24, scope: !12883)
!12894 = !DILocation(line: 376, column: 19, scope: !12883)
!12895 = !DILocation(line: 376, column: 22, scope: !12883)
!12896 = !DILocation(line: 378, column: 26, scope: !12883)
!12897 = !DILocation(line: 378, column: 4, scope: !12883)
!12898 = !DILocation(line: 378, column: 50, scope: !12883)
!12899 = !DILocation(line: 377, column: 19, scope: !12883)
!12900 = !DILocation(line: 377, column: 29, scope: !12883)
!12901 = !DILocation(line: 384, column: 1, scope: !12883)
!12902 = distinct !DISubprogram(name: "init_idle_thread", scope: !1950, file: !1950, line: 343, type: !12884, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12903)
!12903 = !{!12904, !12905, !12906, !12909}
!12904 = !DILocalVariable(name: "i", arg: 1, scope: !12902, file: !1950, line: 343, type: !103)
!12905 = !DILocalVariable(name: "thread", scope: !12902, file: !1950, line: 345, type: !2042)
!12906 = !DILocalVariable(name: "stack", scope: !12902, file: !1950, line: 346, type: !12907)
!12907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12908, size: 32)
!12908 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !354, line: 44, baseType: !2154)
!12909 = !DILocalVariable(name: "tname", scope: !12902, file: !1950, line: 354, type: !307)
!12910 = !DILocation(line: 0, scope: !12902)
!12911 = !DILocation(line: 345, column: 29, scope: !12902)
!12912 = !DILocation(line: 346, column: 28, scope: !12902)
!12913 = !DILocation(line: 362, column: 37, scope: !12902)
!12914 = !DILocation(line: 362, column: 36, scope: !12902)
!12915 = !DILocation(line: 361, column: 2, scope: !12902)
!12916 = !DILocation(line: 365, column: 2, scope: !12902)
!12917 = !DILocation(line: 370, column: 1, scope: !12902)
!12918 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !356, file: !356, line: 331, type: !12919, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12921)
!12919 = !DISubroutineType(types: !12920)
!12920 = !{!307, !12907}
!12921 = !{!12922}
!12922 = !DILocalVariable(name: "sym", arg: 1, scope: !12918, file: !356, line: 331, type: !12907)
!12923 = !DILocation(line: 0, scope: !12918)
!12924 = !DILocation(line: 333, column: 9, scope: !12918)
!12925 = !DILocation(line: 333, column: 2, scope: !12918)
!12926 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12927, file: !12927, line: 155, type: !12928, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12930)
!12927 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12928 = !DISubroutineType(types: !12929)
!12929 = !{null, !2042}
!12930 = !{!12931}
!12931 = !DILocalVariable(name: "thread", arg: 1, scope: !12926, file: !12927, line: 155, type: !2042)
!12932 = !DILocation(line: 0, scope: !12926)
!12933 = !DILocation(line: 157, column: 15, scope: !12926)
!12934 = !DILocation(line: 157, column: 28, scope: !12926)
!12935 = !DILocation(line: 158, column: 1, scope: !12926)
!12936 = distinct !DISubprogram(name: "z_cstart", scope: !1950, file: !1950, line: 501, type: !374, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12937)
!12937 = !{!12938}
!12938 = !DILocalVariable(name: "dummy_thread", scope: !12936, file: !1950, line: 518, type: !2043)
!12939 = !DILocation(line: 507, column: 2, scope: !12936)
!12940 = !DILocation(line: 43, column: 14, scope: !12941, inlinedAt: !12945)
!12941 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12942, file: !12942, line: 40, type: !374, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12943)
!12942 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12943 = !{!12944}
!12944 = !DILocalVariable(name: "msp", scope: !12941, file: !12942, line: 42, type: !190)
!12945 = distinct !DILocation(line: 44, column: 2, scope: !12946, inlinedAt: !12948)
!12946 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12947, file: !12947, line: 42, type: !374, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !2145)
!12947 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12948 = distinct !DILocation(line: 510, column: 2, scope: !12936)
!12949 = !DILocation(line: 43, column: 3, scope: !12941, inlinedAt: !12945)
!12950 = !DILocation(line: 43, column: 60, scope: !12941, inlinedAt: !12945)
!12951 = !DILocation(line: 0, scope: !12941, inlinedAt: !12945)
!12952 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12953, file: !7800, line: 1153, type: !190)
!12953 = distinct !DISubprogram(name: "__set_MSP", scope: !7800, file: !7800, line: 1153, type: !7897, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !12954)
!12954 = !{!12952}
!12955 = !DILocation(line: 0, scope: !12953, inlinedAt: !12956)
!12956 = distinct !DILocation(line: 46, column: 2, scope: !12941, inlinedAt: !12945)
!12957 = !DILocation(line: 1155, column: 3, scope: !12953, inlinedAt: !12956)
!12958 = !{i64 7509196}
!12959 = !DILocation(line: 62, column: 11, scope: !12941, inlinedAt: !12945)
!12960 = !DILocation(line: 102, column: 2, scope: !12961, inlinedAt: !12962)
!12961 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8796, file: !8796, line: 97, type: !374, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !2145)
!12962 = distinct !DILocation(line: 45, column: 2, scope: !12946, inlinedAt: !12948)
!12963 = !DILocation(line: 108, column: 2, scope: !12961, inlinedAt: !12962)
!12964 = !DILocation(line: 112, column: 2, scope: !12961, inlinedAt: !12962)
!12965 = !DILocation(line: 113, column: 2, scope: !12961, inlinedAt: !12962)
!12966 = !DILocation(line: 114, column: 2, scope: !12961, inlinedAt: !12962)
!12967 = !DILocation(line: 116, column: 2, scope: !12961, inlinedAt: !12962)
!12968 = !DILocation(line: 123, column: 13, scope: !12961, inlinedAt: !12962)
!12969 = !DILocation(line: 46, column: 2, scope: !12946, inlinedAt: !12948)
!12970 = !DILocation(line: 47, column: 2, scope: !12946, inlinedAt: !12948)
!12971 = !DILocation(line: 174, column: 12, scope: !12972, inlinedAt: !12973)
!12972 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8796, file: !8796, line: 169, type: !374, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !2145)
!12973 = distinct !DILocation(line: 48, column: 2, scope: !12946, inlinedAt: !12948)
!12974 = !DILocation(line: 179, column: 12, scope: !12972, inlinedAt: !12973)
!12975 = !DILocation(line: 518, column: 2, scope: !12936)
!12976 = !DILocation(line: 518, column: 18, scope: !12936)
!12977 = !DILocation(line: 520, column: 2, scope: !12936)
!12978 = !DILocation(line: 523, column: 2, scope: !12936)
!12979 = !DILocation(line: 526, column: 2, scope: !12936)
!12980 = !DILocation(line: 527, column: 2, scope: !12936)
!12981 = !DILocation(line: 543, column: 24, scope: !12936)
!12982 = !DILocation(line: 543, column: 2, scope: !12936)
!12983 = !DILocation(line: 0, scope: !2176)
!12984 = !DILocation(line: 246, column: 15, scope: !2194)
!12985 = !DILocation(line: 246, column: 36, scope: !2193)
!12986 = !DILocation(line: 246, column: 2, scope: !2194)
!12987 = !DILocation(line: 247, column: 37, scope: !2192)
!12988 = !DILocation(line: 0, scope: !2192)
!12989 = !DILocation(line: 248, column: 19, scope: !2192)
!12990 = !DILocation(line: 248, column: 12, scope: !2192)
!12991 = !DILocation(line: 250, column: 11, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !2192, file: !1950, line: 250, column: 7)
!12993 = !DILocation(line: 250, column: 7, scope: !2192)
!12994 = !DILocation(line: 254, column: 11, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12996, file: !1950, line: 254, column: 8)
!12996 = distinct !DILexicalBlock(scope: !12992, file: !1950, line: 250, column: 20)
!12997 = !DILocation(line: 254, column: 8, scope: !12996)
!12998 = !DILocation(line: 255, column: 9, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12995, file: !1950, line: 254, column: 17)
!13000 = !DILocation(line: 258, column: 9, scope: !12999)
!13001 = !DILocation(line: 261, column: 28, scope: !12999)
!13002 = !DILocation(line: 261, column: 10, scope: !12999)
!13003 = !DILocation(line: 261, column: 17, scope: !12999)
!13004 = !DILocation(line: 261, column: 26, scope: !12999)
!13005 = !DILocation(line: 262, column: 4, scope: !12999)
!13006 = !DILocation(line: 263, column: 9, scope: !12996)
!13007 = !DILocation(line: 263, column: 16, scope: !12996)
!13008 = !DILocation(line: 263, column: 28, scope: !12996)
!13009 = !DILocation(line: 264, column: 3, scope: !12996)
!13010 = !DILocation(line: 246, column: 60, scope: !2193)
!13011 = distinct !{!13011, !12986, !13012}
!13012 = !DILocation(line: 265, column: 2, scope: !2194)
!13013 = !DILocation(line: 266, column: 1, scope: !2176)
!13014 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1794, file: !1794, line: 1814, type: !7840, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !13015)
!13015 = !{!13016, !13017}
!13016 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13014, file: !1794, line: 1814, type: !3044)
!13017 = !DILocalVariable(name: "priority", arg: 2, scope: !13014, file: !1794, line: 1814, type: !190)
!13018 = !DILocation(line: 0, scope: !13014)
!13019 = !DILocation(line: 1822, column: 48, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13021, file: !1794, line: 1821, column: 3)
!13021 = distinct !DILexicalBlock(scope: !13014, file: !1794, line: 1816, column: 7)
!13022 = !DILocation(line: 1822, column: 32, scope: !13020)
!13023 = !DILocation(line: 1822, column: 40, scope: !13020)
!13024 = !DILocation(line: 1822, column: 5, scope: !13020)
!13025 = !DILocation(line: 1822, column: 46, scope: !13020)
!13026 = !DILocation(line: 1824, column: 1, scope: !13014)
!13027 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12947, file: !12947, line: 32, type: !374, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!13028 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13029, file: !13029, line: 215, type: !12928, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !13030)
!13029 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13030 = !{!13031}
!13031 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13028, file: !13029, line: 215, type: !2042)
!13032 = !DILocation(line: 0, scope: !13028)
!13033 = !DILocation(line: 217, column: 21, scope: !13028)
!13034 = !DILocation(line: 217, column: 34, scope: !13028)
!13035 = !DILocation(line: 221, column: 21, scope: !13028)
!13036 = !DILocation(line: 221, column: 34, scope: !13028)
!13037 = !DILocation(line: 232, column: 16, scope: !13028)
!13038 = !DILocation(line: 232, column: 30, scope: !13028)
!13039 = !DILocation(line: 239, column: 24, scope: !13028)
!13040 = !DILocation(line: 240, column: 1, scope: !13028)
!13041 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1950, file: !1950, line: 399, type: !13042, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !13044)
!13042 = !DISubroutineType(types: !13043)
!13043 = !{!307}
!13044 = !{!13045}
!13045 = !DILocalVariable(name: "stack_ptr", scope: !13041, file: !1950, line: 401, type: !307)
!13046 = !DILocation(line: 404, column: 2, scope: !13041)
!13047 = !DILocation(line: 416, column: 24, scope: !13041)
!13048 = !DILocation(line: 418, column: 14, scope: !13041)
!13049 = !DILocation(line: 0, scope: !13041)
!13050 = !DILocation(line: 423, column: 2, scope: !13041)
!13051 = !DILocation(line: 424, column: 2, scope: !13041)
!13052 = !DILocation(line: 426, column: 2, scope: !13041)
!13053 = !DILocation(line: 428, column: 2, scope: !13041)
!13054 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1950, file: !1950, line: 432, type: !13055, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !13057)
!13055 = !DISubroutineType(types: !13056)
!13056 = !{null, !307}
!13057 = !{!13058}
!13058 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13054, file: !1950, line: 432, type: !307)
!13059 = !DILocation(line: 0, scope: !13054)
!13060 = !DILocation(line: 435, column: 2, scope: !13054)
!13061 = !DILocation(line: 445, column: 2, scope: !13054)
!13062 = distinct !DISubprogram(name: "bg_thread_main", scope: !1950, file: !1950, line: 277, type: !363, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !13063)
!13063 = !{!13064, !13065, !13066}
!13064 = !DILocalVariable(name: "unused1", arg: 1, scope: !13062, file: !1950, line: 277, type: !102)
!13065 = !DILocalVariable(name: "unused2", arg: 2, scope: !13062, file: !1950, line: 277, type: !102)
!13066 = !DILocalVariable(name: "unused3", arg: 3, scope: !13062, file: !1950, line: 277, type: !102)
!13067 = !DILocation(line: 0, scope: !13062)
!13068 = !DILocation(line: 291, column: 20, scope: !13062)
!13069 = !DILocation(line: 293, column: 2, scope: !13062)
!13070 = !DILocation(line: 297, column: 2, scope: !13062)
!13071 = !DILocation(line: 305, column: 2, scope: !13062)
!13072 = !DILocation(line: 307, column: 2, scope: !13062)
!13073 = !DILocation(line: 330, column: 8, scope: !13062)
!13074 = !DILocation(line: 333, column: 34, scope: !13062)
!13075 = !DILocation(line: 339, column: 1, scope: !13062)
!13076 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2205, file: !2205, line: 45, type: !13077, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13085)
!13077 = !DISubroutineType(types: !13078)
!13078 = !{null, !13079, !102}
!13079 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !110, line: 103, baseType: !13080)
!13080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13081, size: 32)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{null, !13083, !102}
!13083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13084, size: 32)
!13084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2210)
!13085 = !{!13086, !13087}
!13086 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13076, file: !2205, line: 45, type: !13079)
!13087 = !DILocalVariable(name: "user_data", arg: 2, scope: !13076, file: !2205, line: 45, type: !102)
!13088 = !DILocation(line: 0, scope: !13076)
!13089 = !DILocation(line: 71, column: 1, scope: !13076)
!13090 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2205, file: !2205, line: 73, type: !13077, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13091)
!13091 = !{!13092, !13093}
!13092 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13090, file: !2205, line: 73, type: !13079)
!13093 = !DILocalVariable(name: "user_data", arg: 2, scope: !13090, file: !2205, line: 73, type: !102)
!13094 = !DILocation(line: 0, scope: !13090)
!13095 = !DILocation(line: 95, column: 1, scope: !13090)
!13096 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2205, file: !2205, line: 97, type: !8797, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !2145)
!13097 = !DILocation(line: 1031, column: 3, scope: !13098, inlinedAt: !13101)
!13098 = distinct !DISubprogram(name: "__get_IPSR", scope: !7800, file: !7800, line: 1027, type: !7887, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13099)
!13099 = !{!13100}
!13100 = !DILocalVariable(name: "result", scope: !13098, file: !7800, line: 1029, type: !190)
!13101 = distinct !DILocation(line: 48, column: 10, scope: !13102, inlinedAt: !13103)
!13102 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8796, file: !8796, line: 46, type: !8797, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !2145)
!13103 = distinct !DILocation(line: 99, column: 9, scope: !13096)
!13104 = !{i64 7021040}
!13105 = !DILocation(line: 0, scope: !13098, inlinedAt: !13101)
!13106 = !DILocation(line: 48, column: 9, scope: !13102, inlinedAt: !13103)
!13107 = !DILocation(line: 99, column: 2, scope: !13096)
!13108 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2205, file: !2205, line: 106, type: !374, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !2145)
!13109 = !DILocation(line: 108, column: 2, scope: !13108)
!13110 = !DILocation(line: 108, column: 17, scope: !13108)
!13111 = !DILocation(line: 108, column: 30, scope: !13108)
!13112 = !DILocation(line: 109, column: 1, scope: !13108)
!13113 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2205, file: !2205, line: 116, type: !374, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !2145)
!13114 = !DILocation(line: 118, column: 2, scope: !13113)
!13115 = !DILocation(line: 118, column: 17, scope: !13113)
!13116 = !DILocation(line: 118, column: 30, scope: !13113)
!13117 = !DILocation(line: 119, column: 1, scope: !13113)
!13118 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2205, file: !2205, line: 126, type: !8797, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !2145)
!13119 = !DILocation(line: 128, column: 10, scope: !13118)
!13120 = !DILocation(line: 128, column: 25, scope: !13118)
!13121 = !DILocation(line: 128, column: 38, scope: !13118)
!13122 = !DILocation(line: 128, column: 53, scope: !13118)
!13123 = !DILocation(line: 128, column: 2, scope: !13118)
!13124 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2205, file: !2205, line: 187, type: !13125, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13127)
!13125 = !DISubroutineType(types: !13126)
!13126 = !{!103, !2209, !377}
!13127 = !{!13128, !13129}
!13128 = !DILocalVariable(name: "thread", arg: 1, scope: !13124, file: !2205, line: 187, type: !2209)
!13129 = !DILocalVariable(name: "value", arg: 2, scope: !13124, file: !2205, line: 187, type: !377)
!13130 = !DILocation(line: 0, scope: !13124)
!13131 = !DILocation(line: 190, column: 13, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13124, file: !2205, line: 190, column: 6)
!13133 = !DILocation(line: 190, column: 6, scope: !13124)
!13134 = !DILocation(line: 194, column: 10, scope: !13124)
!13135 = !DILocation(line: 194, column: 2, scope: !13124)
!13136 = !DILocation(line: 195, column: 2, scope: !13124)
!13137 = !DILocation(line: 195, column: 47, scope: !13124)
!13138 = !DILocation(line: 199, column: 2, scope: !13124)
!13139 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2205, file: !2205, line: 238, type: !13140, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13142)
!13140 = !DISubroutineType(types: !13141)
!13141 = !{!377, !2209}
!13142 = !{!13143}
!13143 = !DILocalVariable(name: "thread", arg: 1, scope: !13139, file: !2205, line: 238, type: !2209)
!13144 = !DILocation(line: 0, scope: !13139)
!13145 = !DILocation(line: 241, column: 23, scope: !13139)
!13146 = !DILocation(line: 241, column: 2, scope: !13139)
!13147 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2205, file: !2205, line: 248, type: !13148, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13150)
!13148 = !DISubroutineType(types: !13149)
!13149 = !{!103, !2208, !307, !239}
!13150 = !{!13151, !13152, !13153}
!13151 = !DILocalVariable(name: "thread", arg: 1, scope: !13147, file: !2205, line: 248, type: !2208)
!13152 = !DILocalVariable(name: "buf", arg: 2, scope: !13147, file: !2205, line: 248, type: !307)
!13153 = !DILocalVariable(name: "size", arg: 3, scope: !13147, file: !2205, line: 248, type: !239)
!13154 = !DILocation(line: 0, scope: !13147)
!13155 = !DILocation(line: 251, column: 15, scope: !13147)
!13156 = !DILocation(line: 251, column: 2, scope: !13147)
!13157 = !DILocation(line: 252, column: 2, scope: !13147)
!13158 = !DILocation(line: 0, scope: !2204)
!13159 = !DILocation(line: 281, column: 11, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !2204, file: !2205, line: 281, column: 6)
!13161 = !DILocation(line: 281, column: 20, scope: !13160)
!13162 = !DILocation(line: 275, column: 45, scope: !2204)
!13163 = !DILocation(line: 285, column: 10, scope: !2204)
!13164 = !DILocation(line: 0, scope: !2323)
!13165 = !DILocation(line: 293, column: 39, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !2323, file: !2205, line: 293, column: 2)
!13167 = !DILocation(line: 293, column: 2, scope: !2323)
!13168 = !DILocation(line: 273, column: 14, scope: !2204)
!13169 = !DILocation(line: 309, column: 2, scope: !2204)
!13170 = !DILocation(line: 309, column: 11, scope: !2204)
!13171 = !DILocation(line: 311, column: 2, scope: !2204)
!13172 = !DILocation(line: 293, column: 26, scope: !13166)
!13173 = !DILocation(line: 294, column: 9, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13166, file: !2205, line: 293, column: 54)
!13175 = !DILocation(line: 295, column: 21, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13174, file: !2205, line: 295, column: 7)
!13177 = !DILocation(line: 295, column: 28, scope: !13176)
!13178 = !DILocation(line: 295, column: 7, scope: !13174)
!13179 = !DILocation(line: 299, column: 25, scope: !13174)
!13180 = !DILocation(line: 299, column: 41, scope: !13174)
!13181 = !DILocation(line: 300, column: 7, scope: !13174)
!13182 = !DILocation(line: 300, column: 26, scope: !13174)
!13183 = !DILocation(line: 299, column: 10, scope: !13174)
!13184 = !DILocation(line: 299, column: 7, scope: !13174)
!13185 = !DILocation(line: 302, column: 16, scope: !13174)
!13186 = !DILocation(line: 304, column: 20, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13174, file: !2205, line: 304, column: 7)
!13188 = !DILocation(line: 304, column: 7, scope: !13174)
!13189 = !DILocation(line: 305, column: 26, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13187, file: !2205, line: 304, column: 26)
!13191 = !DILocation(line: 305, column: 42, scope: !13190)
!13192 = !DILocation(line: 305, column: 11, scope: !13190)
!13193 = !DILocation(line: 305, column: 8, scope: !13190)
!13194 = !DILocation(line: 306, column: 3, scope: !13190)
!13195 = !DILocation(line: 293, column: 50, scope: !13166)
!13196 = !DILocation(line: 312, column: 1, scope: !2204)
!13197 = distinct !DISubprogram(name: "copy_bytes", scope: !2205, file: !2205, line: 261, type: !13198, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13200)
!13198 = !DISubroutineType(types: !13199)
!13199 = !{!239, !307, !239, !377, !239}
!13200 = !{!13201, !13202, !13203, !13204, !13205}
!13201 = !DILocalVariable(name: "dest", arg: 1, scope: !13197, file: !2205, line: 261, type: !307)
!13202 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13197, file: !2205, line: 261, type: !239)
!13203 = !DILocalVariable(name: "src", arg: 3, scope: !13197, file: !2205, line: 261, type: !377)
!13204 = !DILocalVariable(name: "src_size", arg: 4, scope: !13197, file: !2205, line: 261, type: !239)
!13205 = !DILocalVariable(name: "bytes_to_copy", scope: !13197, file: !2205, line: 263, type: !239)
!13206 = !DILocation(line: 0, scope: !13197)
!13207 = !DILocation(line: 265, column: 18, scope: !13197)
!13208 = !DILocation(line: 266, column: 2, scope: !13197)
!13209 = !DILocation(line: 268, column: 2, scope: !13197)
!13210 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2205, file: !2205, line: 383, type: !13211, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13213)
!13211 = !DISubroutineType(types: !13212)
!13212 = !{null, !2209}
!13213 = !{!13214}
!13214 = !DILocalVariable(name: "thread", arg: 1, scope: !13210, file: !2205, line: 383, type: !2209)
!13215 = !DILocation(line: 0, scope: !13210)
!13216 = !DILocation(line: 387, column: 2, scope: !13210)
!13217 = !DILocation(line: 388, column: 1, scope: !13210)
!13218 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2205, file: !2205, line: 528, type: !13219, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13226)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!307, !2209, !13221, !239, !361, !102, !102, !102, !103, !190, !377}
!13221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13222, size: 32)
!13222 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !354, line: 44, baseType: !13223)
!13223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !356, line: 47, size: 8, elements: !13224)
!13224 = !{!13225}
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13223, file: !356, line: 48, baseType: !222, size: 8)
!13226 = !{!13227, !13228, !13229, !13230, !13231, !13232, !13233, !13234, !13235, !13236, !13237}
!13227 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13218, file: !2205, line: 528, type: !2209)
!13228 = !DILocalVariable(name: "stack", arg: 2, scope: !13218, file: !2205, line: 529, type: !13221)
!13229 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13218, file: !2205, line: 529, type: !239)
!13230 = !DILocalVariable(name: "entry", arg: 4, scope: !13218, file: !2205, line: 530, type: !361)
!13231 = !DILocalVariable(name: "p1", arg: 5, scope: !13218, file: !2205, line: 531, type: !102)
!13232 = !DILocalVariable(name: "p2", arg: 6, scope: !13218, file: !2205, line: 531, type: !102)
!13233 = !DILocalVariable(name: "p3", arg: 7, scope: !13218, file: !2205, line: 531, type: !102)
!13234 = !DILocalVariable(name: "prio", arg: 8, scope: !13218, file: !2205, line: 532, type: !103)
!13235 = !DILocalVariable(name: "options", arg: 9, scope: !13218, file: !2205, line: 532, type: !190)
!13236 = !DILocalVariable(name: "name", arg: 10, scope: !13218, file: !2205, line: 532, type: !377)
!13237 = !DILocalVariable(name: "stack_ptr", scope: !13218, file: !2205, line: 534, type: !307)
!13238 = !DILocation(line: 0, scope: !13218)
!13239 = !DILocation(line: 536, column: 2, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !2205, line: 536, column: 2)
!13241 = distinct !DILexicalBlock(scope: !13242, file: !2205, line: 536, column: 2)
!13242 = distinct !DILexicalBlock(scope: !13218, file: !2205, line: 536, column: 2)
!13243 = !DILocation(line: 536, column: 2, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13240, file: !2205, line: 536, column: 2)
!13245 = !DILocation(line: 550, column: 28, scope: !13218)
!13246 = !DILocation(line: 550, column: 2, scope: !13218)
!13247 = !DILocation(line: 553, column: 34, scope: !13218)
!13248 = !DILocation(line: 553, column: 2, scope: !13218)
!13249 = !DILocation(line: 554, column: 14, scope: !13218)
!13250 = !DILocation(line: 564, column: 2, scope: !13218)
!13251 = !DILocation(line: 567, column: 14, scope: !13218)
!13252 = !DILocation(line: 567, column: 24, scope: !13218)
!13253 = !DILocation(line: 594, column: 11, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13218, file: !2205, line: 594, column: 6)
!13255 = !DILocation(line: 0, scope: !13254)
!13256 = !DILocation(line: 594, column: 6, scope: !13218)
!13257 = !DILocation(line: 595, column: 3, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13254, file: !2205, line: 594, column: 20)
!13259 = !DILocation(line: 598, column: 3, scope: !13258)
!13260 = !DILocation(line: 598, column: 52, scope: !13258)
!13261 = !DILocation(line: 599, column: 2, scope: !13258)
!13262 = !DILocation(line: 600, column: 23, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13254, file: !2205, line: 599, column: 9)
!13264 = !DILocation(line: 612, column: 7, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13218, file: !2205, line: 612, column: 6)
!13266 = !DILocation(line: 612, column: 6, scope: !13218)
!13267 = !DILocation(line: 627, column: 40, scope: !13218)
!13268 = !DILocation(line: 637, column: 2, scope: !13218)
!13269 = !DILocation(line: 613, column: 15, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13265, file: !2205, line: 612, column: 17)
!13271 = !DILocation(line: 613, column: 29, scope: !13270)
!13272 = !DILocation(line: 638, column: 1, scope: !13218)
!13273 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12927, file: !12927, line: 78, type: !13274, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{!279, !102}
!13276 = !{!13277}
!13277 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13273, file: !12927, line: 78, type: !102)
!13278 = !DILocation(line: 0, scope: !13273)
!13279 = !DILocation(line: 80, column: 21, scope: !13273)
!13280 = !DILocation(line: 80, column: 2, scope: !13273)
!13281 = distinct !DISubprogram(name: "z_waitq_init", scope: !13282, file: !13282, line: 47, type: !13283, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13285)
!13282 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13283 = !DISubroutineType(types: !13284)
!13284 = !{null, !2240}
!13285 = !{!13286}
!13286 = !DILocalVariable(name: "w", arg: 1, scope: !13281, file: !13282, line: 47, type: !2240)
!13287 = !DILocation(line: 0, scope: !13281)
!13288 = !DILocation(line: 49, column: 21, scope: !13281)
!13289 = !DILocation(line: 49, column: 2, scope: !13281)
!13290 = !DILocation(line: 50, column: 1, scope: !13281)
!13291 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2205, file: !2205, line: 791, type: !13292, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13295)
!13292 = !DISubroutineType(types: !13293)
!13293 = !{null, !13294, !103, !190, !32}
!13294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!13295 = !{!13296, !13297, !13298, !13299}
!13296 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13291, file: !2205, line: 791, type: !13294)
!13297 = !DILocalVariable(name: "priority", arg: 2, scope: !13291, file: !2205, line: 791, type: !103)
!13298 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13291, file: !2205, line: 792, type: !190)
!13299 = !DILocalVariable(name: "options", arg: 4, scope: !13291, file: !2205, line: 792, type: !32)
!13300 = !DILocation(line: 0, scope: !13291)
!13301 = !DILocation(line: 795, column: 15, scope: !13291)
!13302 = !DILocation(line: 795, column: 25, scope: !13291)
!13303 = !DILocation(line: 796, column: 30, scope: !13291)
!13304 = !DILocation(line: 796, column: 15, scope: !13291)
!13305 = !DILocation(line: 796, column: 28, scope: !13291)
!13306 = !DILocation(line: 797, column: 30, scope: !13291)
!13307 = !DILocation(line: 797, column: 15, scope: !13291)
!13308 = !DILocation(line: 797, column: 28, scope: !13291)
!13309 = !DILocation(line: 799, column: 22, scope: !13291)
!13310 = !DILocation(line: 799, column: 15, scope: !13291)
!13311 = !DILocation(line: 799, column: 20, scope: !13291)
!13312 = !DILocation(line: 801, column: 15, scope: !13291)
!13313 = !DILocation(line: 801, column: 28, scope: !13291)
!13314 = !DILocation(line: 814, column: 2, scope: !13291)
!13315 = !DILocation(line: 815, column: 1, scope: !13291)
!13316 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2205, file: !2205, line: 449, type: !13317, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13319)
!13317 = !DISubroutineType(types: !13318)
!13318 = !{!307, !2209, !13221, !239}
!13319 = !{!13320, !13321, !13322, !13323, !13324, !13325, !13326, !13327}
!13320 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13316, file: !2205, line: 449, type: !2209)
!13321 = !DILocalVariable(name: "stack", arg: 2, scope: !13316, file: !2205, line: 450, type: !13221)
!13322 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13316, file: !2205, line: 450, type: !239)
!13323 = !DILocalVariable(name: "stack_obj_size", scope: !13316, file: !2205, line: 452, type: !239)
!13324 = !DILocalVariable(name: "stack_buf_size", scope: !13316, file: !2205, line: 452, type: !239)
!13325 = !DILocalVariable(name: "stack_ptr", scope: !13316, file: !2205, line: 453, type: !307)
!13326 = !DILocalVariable(name: "stack_buf_start", scope: !13316, file: !2205, line: 453, type: !307)
!13327 = !DILocalVariable(name: "delta", scope: !13316, file: !2205, line: 454, type: !239)
!13328 = !DILocation(line: 0, scope: !13316)
!13329 = !DILocation(line: 465, column: 20, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13316, file: !2205, line: 463, column: 2)
!13331 = !DILocation(line: 473, column: 28, scope: !13316)
!13332 = !DILocation(line: 520, column: 2, scope: !13316)
!13333 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13334, file: !13334, line: 40, type: !13335, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13337)
!13334 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13335 = !DISubroutineType(types: !13336)
!13336 = !{null, !13294}
!13337 = !{!13338}
!13338 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13333, file: !13334, line: 40, type: !13294)
!13339 = !DILocation(line: 0, scope: !13333)
!13340 = !DILocation(line: 42, column: 31, scope: !13333)
!13341 = !DILocation(line: 42, column: 2, scope: !13333)
!13342 = !DILocation(line: 43, column: 1, scope: !13333)
!13343 = distinct !DISubprogram(name: "z_init_timeout", scope: !13334, file: !13334, line: 25, type: !2266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13344)
!13344 = !{!13345}
!13345 = !DILocalVariable(name: "to", arg: 1, scope: !13343, file: !13334, line: 25, type: !2268)
!13346 = !DILocation(line: 0, scope: !13343)
!13347 = !DILocation(line: 27, column: 22, scope: !13343)
!13348 = !DILocation(line: 27, column: 2, scope: !13343)
!13349 = !DILocation(line: 28, column: 1, scope: !13343)
!13350 = distinct !DISubprogram(name: "sys_dnode_init", scope: !141, file: !141, line: 211, type: !13351, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13353)
!13351 = !DISubroutineType(types: !13352)
!13352 = !{null, !2309}
!13353 = !{!13354}
!13354 = !DILocalVariable(name: "node", arg: 1, scope: !13350, file: !141, line: 211, type: !2309)
!13355 = !DILocation(line: 0, scope: !13350)
!13356 = !DILocation(line: 213, column: 8, scope: !13350)
!13357 = !DILocation(line: 213, column: 13, scope: !13350)
!13358 = !DILocation(line: 214, column: 8, scope: !13350)
!13359 = !DILocation(line: 214, column: 13, scope: !13350)
!13360 = !DILocation(line: 215, column: 1, scope: !13350)
!13361 = distinct !DISubprogram(name: "sys_dlist_init", scope: !141, file: !141, line: 197, type: !13362, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13365)
!13362 = !DISubroutineType(types: !13363)
!13363 = !{null, !13364}
!13364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!13365 = !{!13366}
!13366 = !DILocalVariable(name: "list", arg: 1, scope: !13361, file: !141, line: 197, type: !13364)
!13367 = !DILocation(line: 0, scope: !13361)
!13368 = !DILocation(line: 199, column: 8, scope: !13361)
!13369 = !DILocation(line: 199, column: 13, scope: !13361)
!13370 = !DILocation(line: 200, column: 8, scope: !13361)
!13371 = !DILocation(line: 200, column: 13, scope: !13361)
!13372 = !DILocation(line: 201, column: 1, scope: !13361)
!13373 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2205, file: !2205, line: 641, type: !13374, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13380)
!13374 = !DISubroutineType(types: !13375)
!13375 = !{!2208, !2209, !13221, !239, !361, !102, !102, !102, !103, !190, !13376}
!13376 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !13377)
!13377 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !13378)
!13378 = !{!13379}
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13377, file: !320, line: 66, baseType: !319, size: 64)
!13380 = !{!13381, !13382, !13383, !13384, !13385, !13386, !13387, !13388, !13389, !13390}
!13381 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13373, file: !2205, line: 641, type: !2209)
!13382 = !DILocalVariable(name: "stack", arg: 2, scope: !13373, file: !2205, line: 642, type: !13221)
!13383 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13373, file: !2205, line: 643, type: !239)
!13384 = !DILocalVariable(name: "entry", arg: 4, scope: !13373, file: !2205, line: 643, type: !361)
!13385 = !DILocalVariable(name: "p1", arg: 5, scope: !13373, file: !2205, line: 644, type: !102)
!13386 = !DILocalVariable(name: "p2", arg: 6, scope: !13373, file: !2205, line: 644, type: !102)
!13387 = !DILocalVariable(name: "p3", arg: 7, scope: !13373, file: !2205, line: 644, type: !102)
!13388 = !DILocalVariable(name: "prio", arg: 8, scope: !13373, file: !2205, line: 645, type: !103)
!13389 = !DILocalVariable(name: "options", arg: 9, scope: !13373, file: !2205, line: 645, type: !190)
!13390 = !DILocalVariable(name: "delay", arg: 10, scope: !13373, file: !2205, line: 645, type: !13376)
!13391 = !DILocation(line: 0, scope: !13373)
!13392 = !DILocation(line: 1031, column: 3, scope: !13098, inlinedAt: !13393)
!13393 = distinct !DILocation(line: 48, column: 10, scope: !13102, inlinedAt: !13394)
!13394 = distinct !DILocation(line: 647, column: 2, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13396, file: !2205, line: 647, column: 2)
!13396 = distinct !DILexicalBlock(scope: !13373, file: !2205, line: 647, column: 2)
!13397 = !DILocation(line: 0, scope: !13098, inlinedAt: !13393)
!13398 = !DILocation(line: 48, column: 9, scope: !13102, inlinedAt: !13394)
!13399 = !DILocation(line: 647, column: 2, scope: !13396)
!13400 = !DILocation(line: 647, column: 2, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13395, file: !2205, line: 647, column: 2)
!13402 = !DILocation(line: 649, column: 2, scope: !13373)
!13403 = !DILocation(line: 652, column: 7, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13373, file: !2205, line: 652, column: 6)
!13405 = !DILocation(line: 652, column: 6, scope: !13373)
!13406 = !DILocation(line: 653, column: 3, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13404, file: !2205, line: 652, column: 39)
!13408 = !DILocation(line: 654, column: 2, scope: !13407)
!13409 = !DILocation(line: 656, column: 2, scope: !13373)
!13410 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2205, file: !2205, line: 401, type: !13411, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13413)
!13411 = !DISubroutineType(types: !13412)
!13412 = !{null, !2209, !13376}
!13413 = !{!13414, !13415}
!13414 = !DILocalVariable(name: "thread", arg: 1, scope: !13410, file: !2205, line: 401, type: !2209)
!13415 = !DILocalVariable(name: "delay", arg: 2, scope: !13410, file: !2205, line: 401, type: !13376)
!13416 = !DILocation(line: 0, scope: !13410)
!13417 = !DILocation(line: 404, column: 6, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13410, file: !2205, line: 404, column: 6)
!13419 = !DILocation(line: 404, column: 6, scope: !13410)
!13420 = !DILocation(line: 405, column: 3, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13418, file: !2205, line: 404, column: 38)
!13422 = !DILocation(line: 406, column: 2, scope: !13421)
!13423 = !DILocation(line: 407, column: 3, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13418, file: !2205, line: 406, column: 9)
!13425 = !DILocation(line: 413, column: 1, scope: !13410)
!13426 = distinct !DISubprogram(name: "k_thread_start", scope: !4037, file: !4037, line: 205, type: !13427, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13429)
!13427 = !DISubroutineType(types: !13428)
!13428 = !{null, !2208}
!13429 = !{!13430}
!13430 = !DILocalVariable(name: "thread", arg: 1, scope: !13426, file: !4037, line: 205, type: !2208)
!13431 = !DILocation(line: 0, scope: !13426)
!13432 = !DILocation(line: 214, column: 2, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13426, file: !4037, line: 214, column: 2)
!13434 = !{i64 2151070804}
!13435 = !DILocation(line: 215, column: 2, scope: !13426)
!13436 = !DILocation(line: 216, column: 1, scope: !13426)
!13437 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13334, file: !13334, line: 47, type: !13411, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13438)
!13438 = !{!13439, !13440}
!13439 = !DILocalVariable(name: "thread", arg: 1, scope: !13437, file: !13334, line: 47, type: !2209)
!13440 = !DILocalVariable(name: "ticks", arg: 2, scope: !13437, file: !13334, line: 47, type: !13376)
!13441 = !DILocation(line: 0, scope: !13437)
!13442 = !DILocation(line: 49, column: 30, scope: !13437)
!13443 = !DILocation(line: 49, column: 2, scope: !13437)
!13444 = !DILocation(line: 50, column: 1, scope: !13437)
!13445 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2205, file: !2205, line: 748, type: !374, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13446)
!13446 = !{!13447, !13464}
!13447 = !DILocalVariable(name: "thread_data", scope: !13448, file: !2205, line: 750, type: !13449)
!13448 = distinct !DILexicalBlock(scope: !13445, file: !2205, line: 750, column: 2)
!13449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13450, size: 32)
!13450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !110, line: 620, size: 384, elements: !13451)
!13451 = !{!13452, !13453, !13454, !13455, !13456, !13457, !13458, !13459, !13460, !13461, !13462, !13463}
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13450, file: !110, line: 621, baseType: !2209, size: 32)
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13450, file: !110, line: 622, baseType: !13221, size: 32, offset: 32)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13450, file: !110, line: 623, baseType: !32, size: 32, offset: 64)
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13450, file: !110, line: 624, baseType: !361, size: 32, offset: 96)
!13456 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13450, file: !110, line: 625, baseType: !102, size: 32, offset: 128)
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13450, file: !110, line: 626, baseType: !102, size: 32, offset: 160)
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13450, file: !110, line: 627, baseType: !102, size: 32, offset: 192)
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13450, file: !110, line: 628, baseType: !103, size: 32, offset: 224)
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13450, file: !110, line: 629, baseType: !190, size: 32, offset: 256)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13450, file: !110, line: 630, baseType: !371, size: 32, offset: 288)
!13462 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13450, file: !110, line: 631, baseType: !373, size: 32, offset: 320)
!13463 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13450, file: !110, line: 632, baseType: !377, size: 32, offset: 352)
!13464 = !DILocalVariable(name: "thread_data", scope: !13465, file: !2205, line: 781, type: !13449)
!13465 = distinct !DILexicalBlock(scope: !13445, file: !2205, line: 781, column: 2)
!13466 = !DILocation(line: 0, scope: !13448)
!13467 = !DILocation(line: 750, column: 2, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13469, file: !2205, line: 750, column: 2)
!13469 = distinct !DILexicalBlock(scope: !13470, file: !2205, line: 750, column: 2)
!13470 = distinct !DILexicalBlock(scope: !13448, file: !2205, line: 750, column: 2)
!13471 = !DILocation(line: 750, column: 2, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !2205, line: 750, column: 2)
!13473 = distinct !DILexicalBlock(scope: !13468, file: !2205, line: 750, column: 2)
!13474 = !DILocation(line: 750, column: 2, scope: !13469)
!13475 = !DILocation(line: 750, column: 2, scope: !13448)
!13476 = !DILocation(line: 780, column: 2, scope: !13445)
!13477 = !DILocation(line: 0, scope: !13465)
!13478 = !DILocation(line: 781, column: 2, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !2205, line: 781, column: 2)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !2205, line: 781, column: 2)
!13481 = distinct !DILexicalBlock(scope: !13465, file: !2205, line: 781, column: 2)
!13482 = !DILocation(line: 752, column: 17, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13470, file: !2205, line: 750, column: 38)
!13484 = !DILocation(line: 753, column: 17, scope: !13483)
!13485 = !DILocation(line: 754, column: 17, scope: !13483)
!13486 = !DILocation(line: 755, column: 17, scope: !13483)
!13487 = !DILocation(line: 756, column: 17, scope: !13483)
!13488 = !DILocation(line: 757, column: 17, scope: !13483)
!13489 = !DILocation(line: 758, column: 17, scope: !13483)
!13490 = !DILocation(line: 759, column: 17, scope: !13483)
!13491 = !DILocation(line: 760, column: 17, scope: !13483)
!13492 = !DILocation(line: 761, column: 17, scope: !13483)
!13493 = !DILocation(line: 751, column: 3, scope: !13483)
!13494 = !DILocation(line: 763, column: 16, scope: !13483)
!13495 = !DILocation(line: 763, column: 29, scope: !13483)
!13496 = !DILocation(line: 763, column: 39, scope: !13483)
!13497 = !DILocation(line: 750, column: 2, scope: !13470)
!13498 = !DILocation(line: 750, column: 2, scope: !13473)
!13499 = distinct !{!13499, !13475, !13500}
!13500 = !DILocation(line: 764, column: 2, scope: !13448)
!13501 = !DILocation(line: 781, column: 2, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13503, file: !2205, line: 781, column: 2)
!13503 = distinct !DILexicalBlock(scope: !13479, file: !2205, line: 781, column: 2)
!13504 = !DILocation(line: 781, column: 2, scope: !13480)
!13505 = !DILocation(line: 781, column: 2, scope: !13465)
!13506 = !DILocation(line: 787, column: 2, scope: !13445)
!13507 = !DILocation(line: 788, column: 1, scope: !13445)
!13508 = !DILocation(line: 782, column: 20, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !2205, line: 782, column: 7)
!13510 = distinct !DILexicalBlock(scope: !13481, file: !2205, line: 781, column: 38)
!13511 = !DILocation(line: 782, column: 31, scope: !13509)
!13512 = !DILocation(line: 782, column: 7, scope: !13510)
!13513 = !DILocation(line: 783, column: 37, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13509, file: !2205, line: 782, column: 51)
!13515 = !DILocation(line: 784, column: 10, scope: !13514)
!13516 = !DILocation(line: 783, column: 4, scope: !13514)
!13517 = !DILocation(line: 785, column: 3, scope: !13514)
!13518 = !DILocation(line: 781, column: 2, scope: !13481)
!13519 = !DILocation(line: 781, column: 2, scope: !13503)
!13520 = distinct !{!13520, !13505, !13521}
!13521 = !DILocation(line: 786, column: 2, scope: !13465)
!13522 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3995, file: !3995, line: 403, type: !3996, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13523)
!13523 = !{!13524}
!13524 = !DILocalVariable(name: "t", arg: 1, scope: !13522, file: !3995, line: 403, type: !321)
!13525 = !DILocation(line: 0, scope: !13522)
!13526 = !DILocalVariable(name: "t", arg: 1, scope: !13527, file: !3995, line: 102, type: !321)
!13527 = distinct !DISubprogram(name: "z_tmcvt", scope: !3995, file: !3995, line: 102, type: !4003, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13528)
!13528 = !{!13526, !13529, !13530, !13531, !13532, !13533, !13534, !13535, !13536, !13537, !13538}
!13529 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13527, file: !3995, line: 102, type: !190)
!13530 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13527, file: !3995, line: 103, type: !190)
!13531 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13527, file: !3995, line: 103, type: !279)
!13532 = !DILocalVariable(name: "result32", arg: 5, scope: !13527, file: !3995, line: 104, type: !279)
!13533 = !DILocalVariable(name: "round_up", arg: 6, scope: !13527, file: !3995, line: 104, type: !279)
!13534 = !DILocalVariable(name: "round_off", arg: 7, scope: !13527, file: !3995, line: 105, type: !279)
!13535 = !DILocalVariable(name: "mul_ratio", scope: !13527, file: !3995, line: 107, type: !279)
!13536 = !DILocalVariable(name: "div_ratio", scope: !13527, file: !3995, line: 109, type: !279)
!13537 = !DILocalVariable(name: "off", scope: !13527, file: !3995, line: 116, type: !321)
!13538 = !DILocalVariable(name: "rdivisor", scope: !13539, file: !3995, line: 119, type: !190)
!13539 = distinct !DILexicalBlock(scope: !13540, file: !3995, line: 118, column: 18)
!13540 = distinct !DILexicalBlock(scope: !13527, file: !3995, line: 118, column: 6)
!13541 = !DILocation(line: 0, scope: !13527, inlinedAt: !13542)
!13542 = distinct !DILocation(line: 406, column: 9, scope: !13522)
!13543 = !DILocation(line: 145, column: 13, scope: !13544, inlinedAt: !13542)
!13544 = distinct !DILexicalBlock(scope: !13545, file: !3995, line: 144, column: 10)
!13545 = distinct !DILexicalBlock(scope: !13546, file: !3995, line: 142, column: 7)
!13546 = distinct !DILexicalBlock(scope: !13547, file: !3995, line: 141, column: 24)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !3995, line: 141, column: 13)
!13548 = distinct !DILexicalBlock(scope: !13527, file: !3995, line: 134, column: 6)
!13549 = !DILocation(line: 406, column: 2, scope: !13522)
!13550 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2205, file: !2205, line: 817, type: !5144, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13551)
!13551 = !{!13552, !13553, !13554, !13555}
!13552 = !DILocalVariable(name: "entry", arg: 1, scope: !13550, file: !2205, line: 817, type: !361)
!13553 = !DILocalVariable(name: "p1", arg: 2, scope: !13550, file: !2205, line: 818, type: !102)
!13554 = !DILocalVariable(name: "p2", arg: 3, scope: !13550, file: !2205, line: 818, type: !102)
!13555 = !DILocalVariable(name: "p3", arg: 4, scope: !13550, file: !2205, line: 818, type: !102)
!13556 = !DILocation(line: 0, scope: !13550)
!13557 = !DILocation(line: 822, column: 2, scope: !13550)
!13558 = !DILocation(line: 822, column: 17, scope: !13550)
!13559 = !DILocation(line: 822, column: 30, scope: !13550)
!13560 = !DILocation(line: 823, column: 2, scope: !13550)
!13561 = !DILocation(line: 845, column: 2, scope: !13550)
!13562 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2205, file: !2205, line: 853, type: !13563, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13566)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{!279, !13565}
!13565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 32)
!13566 = !{!13567, !13568}
!13567 = !DILocalVariable(name: "l", arg: 1, scope: !13562, file: !2205, line: 853, type: !13565)
!13568 = !DILocalVariable(name: "thread_cpu", scope: !13562, file: !2205, line: 855, type: !22)
!13569 = !DILocation(line: 0, scope: !13562)
!13570 = !DILocation(line: 855, column: 28, scope: !13562)
!13571 = !DILocation(line: 857, column: 17, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13562, file: !2205, line: 857, column: 6)
!13573 = !DILocation(line: 857, column: 6, scope: !13562)
!13574 = !DILocation(line: 858, column: 19, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13576, file: !2205, line: 858, column: 7)
!13576 = distinct !DILexicalBlock(scope: !13572, file: !2205, line: 857, column: 24)
!13577 = !DILocation(line: 858, column: 42, scope: !13575)
!13578 = !DILocation(line: 858, column: 28, scope: !13575)
!13579 = !DILocation(line: 858, column: 25, scope: !13575)
!13580 = !DILocation(line: 858, column: 7, scope: !13576)
!13581 = !DILocation(line: 862, column: 2, scope: !13562)
!13582 = !DILocation(line: 863, column: 1, scope: !13562)
!13583 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2205, file: !2205, line: 865, type: !13563, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13584)
!13584 = !{!13585}
!13585 = !DILocalVariable(name: "l", arg: 1, scope: !13583, file: !2205, line: 865, type: !13565)
!13586 = !DILocation(line: 0, scope: !13583)
!13587 = !DILocation(line: 867, column: 9, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13583, file: !2205, line: 867, column: 6)
!13589 = !DILocation(line: 867, column: 38, scope: !13588)
!13590 = !DILocation(line: 867, column: 24, scope: !13588)
!13591 = !DILocation(line: 867, column: 54, scope: !13588)
!13592 = !DILocation(line: 867, column: 43, scope: !13588)
!13593 = !DILocation(line: 867, column: 41, scope: !13588)
!13594 = !DILocation(line: 867, column: 20, scope: !13588)
!13595 = !DILocation(line: 867, column: 6, scope: !13583)
!13596 = !DILocation(line: 870, column: 16, scope: !13583)
!13597 = !DILocation(line: 871, column: 2, scope: !13583)
!13598 = !DILocation(line: 872, column: 1, scope: !13583)
!13599 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2205, file: !2205, line: 874, type: !13600, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13602)
!13600 = !DISubroutineType(types: !13601)
!13601 = !{null, !13565}
!13602 = !{!13603}
!13603 = !DILocalVariable(name: "l", arg: 1, scope: !13599, file: !2205, line: 874, type: !13565)
!13604 = !DILocation(line: 0, scope: !13599)
!13605 = !DILocation(line: 876, column: 32, scope: !13599)
!13606 = !DILocation(line: 876, column: 18, scope: !13599)
!13607 = !DILocation(line: 876, column: 48, scope: !13599)
!13608 = !DILocation(line: 876, column: 37, scope: !13599)
!13609 = !DILocation(line: 876, column: 35, scope: !13599)
!13610 = !DILocation(line: 876, column: 5, scope: !13599)
!13611 = !DILocation(line: 876, column: 16, scope: !13599)
!13612 = !DILocation(line: 877, column: 1, scope: !13599)
!13613 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2205, file: !2205, line: 888, type: !13614, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13616)
!13614 = !DISubroutineType(types: !13615)
!13615 = !{!103, !2209}
!13616 = !{!13617}
!13617 = !DILocalVariable(name: "thread", arg: 1, scope: !13613, file: !2205, line: 888, type: !2209)
!13618 = !DILocation(line: 0, scope: !13613)
!13619 = !DILocation(line: 893, column: 2, scope: !13613)
!13620 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2205, file: !2205, line: 897, type: !13621, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13623)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{!103, !2209, !32}
!13623 = !{!13624, !13625}
!13624 = !DILocalVariable(name: "thread", arg: 1, scope: !13620, file: !2205, line: 897, type: !2209)
!13625 = !DILocalVariable(name: "options", arg: 2, scope: !13620, file: !2205, line: 897, type: !32)
!13626 = !DILocation(line: 0, scope: !13620)
!13627 = !DILocation(line: 902, column: 2, scope: !13620)
!13628 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2205, file: !2205, line: 1072, type: !13629, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13634)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{!103, !2208, !13631}
!13631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13632, size: 32)
!13632 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !131, line: 234, baseType: !13633)
!13633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !131, line: 192, elements: !2145)
!13634 = !{!13635, !13636}
!13635 = !DILocalVariable(name: "thread", arg: 1, scope: !13628, file: !2205, line: 1072, type: !2208)
!13636 = !DILocalVariable(name: "stats", arg: 2, scope: !13628, file: !2205, line: 1073, type: !13631)
!13637 = !DILocation(line: 0, scope: !13628)
!13638 = !DILocation(line: 1075, column: 14, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13628, file: !2205, line: 1075, column: 6)
!13640 = !DILocation(line: 1075, column: 23, scope: !13639)
!13641 = !DILocation(line: 1086, column: 1, scope: !13628)
!13642 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2205, file: !2205, line: 1088, type: !13643, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13645)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{!103, !13631}
!13645 = !{!13646}
!13646 = !DILocalVariable(name: "stats", arg: 1, scope: !13642, file: !2205, line: 1088, type: !13631)
!13647 = !DILocation(line: 0, scope: !13642)
!13648 = !DILocation(line: 1094, column: 12, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13642, file: !2205, line: 1094, column: 6)
!13650 = !DILocation(line: 1120, column: 1, scope: !13642)
!13651 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13652, file: !13652, line: 20, type: !374, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !2145)
!13652 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13653 = !DILocation(line: 30, column: 2, scope: !13651)
!13654 = !DILocation(line: 31, column: 1, scope: !13651)
!13655 = distinct !DISubprogram(name: "idle", scope: !13652, file: !13652, line: 33, type: !363, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !13656)
!13656 = !{!13657, !13658, !13659}
!13657 = !DILocalVariable(name: "unused1", arg: 1, scope: !13655, file: !13652, line: 33, type: !102)
!13658 = !DILocalVariable(name: "unused2", arg: 2, scope: !13655, file: !13652, line: 33, type: !102)
!13659 = !DILocalVariable(name: "unused3", arg: 3, scope: !13655, file: !13652, line: 33, type: !102)
!13660 = !DILocation(line: 0, scope: !13655)
!13661 = !DILocation(line: 39, column: 2, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13663, file: !13652, line: 39, column: 2)
!13663 = distinct !DILexicalBlock(scope: !13655, file: !13652, line: 39, column: 2)
!13664 = !DILocation(line: 39, column: 2, scope: !13663)
!13665 = !DILocation(line: 39, column: 2, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13662, file: !13652, line: 39, column: 2)
!13667 = !DILocation(line: 55, column: 2, scope: !13668, inlinedAt: !13672)
!13668 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !13669)
!13669 = !{!13670, !13671}
!13670 = !DILocalVariable(name: "key", scope: !13668, file: !7921, line: 44, type: !32)
!13671 = !DILocalVariable(name: "tmp", scope: !13668, file: !7921, line: 53, type: !32)
!13672 = distinct !DILocation(line: 62, column: 10, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13655, file: !13652, line: 41, column: 15)
!13674 = !{i64 2844779}
!13675 = !DILocation(line: 0, scope: !13668, inlinedAt: !13672)
!13676 = !DILocation(line: 86, column: 3, scope: !13673)
!13677 = !DILocation(line: 41, column: 2, scope: !13655)
!13678 = distinct !{!13678, !13677, !13679}
!13679 = !DILocation(line: 105, column: 2, scope: !13655)
!13680 = distinct !DISubprogram(name: "k_cpu_idle", scope: !110, file: !110, line: 5627, type: !374, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !2145)
!13681 = !DILocation(line: 5629, column: 2, scope: !13680)
!13682 = !DILocation(line: 5630, column: 1, scope: !13680)
!13683 = !DISubprogram(name: "arch_cpu_idle", scope: !354, file: !354, line: 167, type: !374, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!13684 = distinct !DISubprogram(name: "k_msgq_init", scope: !13685, file: !13685, line: 35, type: !13686, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13701)
!13685 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13686 = !DISubroutineType(types: !13687)
!13687 = !{null, !13688, !307, !239, !190}
!13688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13689, size: 32)
!13689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !110, line: 4204, size: 352, elements: !13690)
!13690 = !{!13691, !13692, !13693, !13694, !13695, !13696, !13697, !13698, !13699, !13700}
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13689, file: !110, line: 4206, baseType: !3629, size: 64)
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13689, file: !110, line: 4208, baseType: !3686, size: 32, offset: 64)
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13689, file: !110, line: 4210, baseType: !239, size: 32, offset: 96)
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13689, file: !110, line: 4212, baseType: !190, size: 32, offset: 128)
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13689, file: !110, line: 4214, baseType: !307, size: 32, offset: 160)
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13689, file: !110, line: 4216, baseType: !307, size: 32, offset: 192)
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13689, file: !110, line: 4218, baseType: !307, size: 32, offset: 224)
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13689, file: !110, line: 4220, baseType: !307, size: 32, offset: 256)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13689, file: !110, line: 4222, baseType: !190, size: 32, offset: 288)
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13689, file: !110, line: 4227, baseType: !173, size: 8, offset: 320)
!13701 = !{!13702, !13703, !13704, !13705}
!13702 = !DILocalVariable(name: "msgq", arg: 1, scope: !13684, file: !13685, line: 35, type: !13688)
!13703 = !DILocalVariable(name: "buffer", arg: 2, scope: !13684, file: !13685, line: 35, type: !307)
!13704 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13684, file: !13685, line: 35, type: !239)
!13705 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13684, file: !13685, line: 36, type: !190)
!13706 = !DILocation(line: 0, scope: !13684)
!13707 = !DILocation(line: 38, column: 8, scope: !13684)
!13708 = !DILocation(line: 38, column: 17, scope: !13684)
!13709 = !DILocation(line: 39, column: 8, scope: !13684)
!13710 = !DILocation(line: 39, column: 17, scope: !13684)
!13711 = !DILocation(line: 40, column: 8, scope: !13684)
!13712 = !DILocation(line: 40, column: 21, scope: !13684)
!13713 = !DILocation(line: 41, column: 40, scope: !13684)
!13714 = !DILocation(line: 41, column: 28, scope: !13684)
!13715 = !DILocation(line: 41, column: 8, scope: !13684)
!13716 = !DILocation(line: 41, column: 19, scope: !13684)
!13717 = !DILocation(line: 42, column: 8, scope: !13684)
!13718 = !DILocation(line: 42, column: 17, scope: !13684)
!13719 = !DILocation(line: 43, column: 8, scope: !13684)
!13720 = !DILocation(line: 43, column: 18, scope: !13684)
!13721 = !DILocation(line: 44, column: 8, scope: !13684)
!13722 = !DILocation(line: 44, column: 18, scope: !13684)
!13723 = !DILocation(line: 45, column: 8, scope: !13684)
!13724 = !DILocation(line: 45, column: 14, scope: !13684)
!13725 = !DILocation(line: 46, column: 22, scope: !13684)
!13726 = !DILocation(line: 46, column: 2, scope: !13684)
!13727 = !DILocation(line: 47, column: 15, scope: !13684)
!13728 = !DILocation(line: 55, column: 1, scope: !13684)
!13729 = distinct !DISubprogram(name: "z_waitq_init", scope: !13282, file: !13282, line: 47, type: !13730, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13732)
!13730 = !DISubroutineType(types: !13731)
!13731 = !{null, !3628}
!13732 = !{!13733}
!13733 = !DILocalVariable(name: "w", arg: 1, scope: !13729, file: !13282, line: 47, type: !3628)
!13734 = !DILocation(line: 0, scope: !13729)
!13735 = !DILocation(line: 49, column: 21, scope: !13729)
!13736 = !DILocation(line: 49, column: 2, scope: !13729)
!13737 = !DILocation(line: 50, column: 1, scope: !13729)
!13738 = distinct !DISubprogram(name: "sys_dlist_init", scope: !141, file: !141, line: 197, type: !13739, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13742)
!13739 = !DISubroutineType(types: !13740)
!13740 = !{null, !13741}
!13741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 32)
!13742 = !{!13743}
!13743 = !DILocalVariable(name: "list", arg: 1, scope: !13738, file: !141, line: 197, type: !13741)
!13744 = !DILocation(line: 0, scope: !13738)
!13745 = !DILocation(line: 199, column: 8, scope: !13738)
!13746 = !DILocation(line: 199, column: 13, scope: !13738)
!13747 = !DILocation(line: 200, column: 8, scope: !13738)
!13748 = !DILocation(line: 200, column: 13, scope: !13738)
!13749 = !DILocation(line: 201, column: 1, scope: !13738)
!13750 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13685, file: !13685, line: 57, type: !13751, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13753)
!13751 = !DISubroutineType(types: !13752)
!13752 = !{!103, !13688, !239, !190}
!13753 = !{!13754, !13755, !13756, !13757, !13758, !13759}
!13754 = !DILocalVariable(name: "msgq", arg: 1, scope: !13750, file: !13685, line: 57, type: !13688)
!13755 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13750, file: !13685, line: 57, type: !239)
!13756 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13750, file: !13685, line: 58, type: !190)
!13757 = !DILocalVariable(name: "buffer", scope: !13750, file: !13685, line: 60, type: !102)
!13758 = !DILocalVariable(name: "ret", scope: !13750, file: !13685, line: 61, type: !103)
!13759 = !DILocalVariable(name: "total_size", scope: !13750, file: !13685, line: 62, type: !239)
!13760 = !DILocation(line: 0, scope: !13750)
!13761 = !DILocation(line: 62, column: 2, scope: !13750)
!13762 = !DILocation(line: 66, column: 6, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13750, file: !13685, line: 66, column: 6)
!13764 = !DILocation(line: 66, column: 6, scope: !13750)
!13765 = !DILocation(line: 69, column: 28, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13763, file: !13685, line: 68, column: 9)
!13767 = !DILocation(line: 69, column: 12, scope: !13766)
!13768 = !DILocation(line: 70, column: 14, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13766, file: !13685, line: 70, column: 7)
!13770 = !DILocation(line: 70, column: 7, scope: !13766)
!13771 = !DILocation(line: 71, column: 4, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13769, file: !13685, line: 70, column: 23)
!13773 = !DILocation(line: 72, column: 10, scope: !13772)
!13774 = !DILocation(line: 72, column: 16, scope: !13772)
!13775 = !DILocation(line: 74, column: 3, scope: !13772)
!13776 = !DILocation(line: 0, scope: !13763)
!13777 = !DILocation(line: 82, column: 1, scope: !13750)
!13778 = !DILocation(line: 81, column: 2, scope: !13750)
!13779 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13780, file: !13780, line: 105, type: !13781, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13783)
!13780 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13781 = !DISubroutineType(types: !13782)
!13782 = !{!279, !239, !239, !3019}
!13783 = !{!13784, !13785, !13786}
!13784 = !DILocalVariable(name: "a", arg: 1, scope: !13779, file: !13780, line: 105, type: !239)
!13785 = !DILocalVariable(name: "b", arg: 2, scope: !13779, file: !13780, line: 105, type: !239)
!13786 = !DILocalVariable(name: "result", arg: 3, scope: !13779, file: !13780, line: 105, type: !3019)
!13787 = !DILocation(line: 0, scope: !13779)
!13788 = !DILocation(line: 107, column: 9, scope: !13779)
!13789 = !DILocation(line: 107, column: 2, scope: !13779)
!13790 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13791, file: !13791, line: 102, type: !13792, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13793)
!13791 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13792 = !DISubroutineType(types: !3572)
!13793 = !{!13794}
!13794 = !DILocalVariable(name: "size", arg: 1, scope: !13790, file: !13791, line: 102, type: !239)
!13795 = !DILocation(line: 0, scope: !13790)
!13796 = !DILocation(line: 104, column: 9, scope: !13790)
!13797 = !DILocation(line: 104, column: 2, scope: !13790)
!13798 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13791, file: !13791, line: 87, type: !13799, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!13799 = !DISubroutineType(types: !13800)
!13800 = !{!102, !239, !239}
!13801 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13685, file: !13685, line: 95, type: !13802, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13804)
!13802 = !DISubroutineType(types: !13803)
!13803 = !{!103, !13688}
!13804 = !{!13805}
!13805 = !DILocalVariable(name: "msgq", arg: 1, scope: !13801, file: !13685, line: 95, type: !13688)
!13806 = !DILocation(line: 0, scope: !13801)
!13807 = !DILocation(line: 99, column: 2, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13801, file: !13685, line: 99, column: 2)
!13809 = !DILocation(line: 99, column: 2, scope: !13801)
!13810 = !DILocation(line: 105, column: 13, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13801, file: !13685, line: 105, column: 6)
!13812 = !DILocation(line: 105, column: 19, scope: !13811)
!13813 = !DILocation(line: 105, column: 40, scope: !13811)
!13814 = !DILocation(line: 105, column: 6, scope: !13801)
!13815 = !DILocation(line: 106, column: 16, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13811, file: !13685, line: 105, column: 47)
!13817 = !DILocation(line: 106, column: 3, scope: !13816)
!13818 = !DILocation(line: 107, column: 15, scope: !13816)
!13819 = !DILocation(line: 108, column: 2, scope: !13816)
!13820 = !DILocation(line: 113, column: 1, scope: !13801)
!13821 = distinct !DISubprogram(name: "z_waitq_head", scope: !13282, file: !13282, line: 52, type: !13822, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13824)
!13822 = !DISubroutineType(types: !13823)
!13823 = !{!3611, !3628}
!13824 = !{!13825}
!13825 = !DILocalVariable(name: "w", arg: 1, scope: !13821, file: !13282, line: 52, type: !3628)
!13826 = !DILocation(line: 0, scope: !13821)
!13827 = !DILocation(line: 54, column: 52, scope: !13821)
!13828 = !DILocation(line: 54, column: 28, scope: !13821)
!13829 = !DILocation(line: 54, column: 9, scope: !13821)
!13830 = !DILocation(line: 54, column: 2, scope: !13821)
!13831 = !DISubprogram(name: "k_free", scope: !110, file: !110, line: 5272, type: !7735, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!13832 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !141, file: !141, line: 294, type: !13833, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13835)
!13833 = !DISubroutineType(types: !13834)
!13834 = !{!3596, !13741}
!13835 = !{!13836}
!13836 = !DILocalVariable(name: "list", arg: 1, scope: !13832, file: !141, line: 294, type: !13741)
!13837 = !DILocation(line: 0, scope: !13832)
!13838 = !DILocation(line: 296, column: 9, scope: !13832)
!13839 = !DILocation(line: 296, column: 49, scope: !13832)
!13840 = !DILocation(line: 296, column: 2, scope: !13832)
!13841 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !141, file: !141, line: 266, type: !13842, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13844)
!13842 = !DISubroutineType(types: !13843)
!13843 = !{!279, !13741}
!13844 = !{!13845}
!13845 = !DILocalVariable(name: "list", arg: 1, scope: !13841, file: !141, line: 266, type: !13741)
!13846 = !DILocation(line: 0, scope: !13841)
!13847 = !DILocation(line: 268, column: 15, scope: !13841)
!13848 = !DILocation(line: 268, column: 20, scope: !13841)
!13849 = !DILocation(line: 268, column: 2, scope: !13841)
!13850 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13685, file: !13685, line: 116, type: !13851, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13857)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{!103, !13688, !13, !13853}
!13853 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !13854)
!13854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !13855)
!13855 = !{!13856}
!13856 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13854, file: !320, line: 66, baseType: !319, size: 64)
!13857 = !{!13858, !13859, !13860, !13861, !13862, !13867}
!13858 = !DILocalVariable(name: "msgq", arg: 1, scope: !13850, file: !13685, line: 116, type: !13688)
!13859 = !DILocalVariable(name: "data", arg: 2, scope: !13850, file: !13685, line: 116, type: !13)
!13860 = !DILocalVariable(name: "timeout", arg: 3, scope: !13850, file: !13685, line: 116, type: !13853)
!13861 = !DILocalVariable(name: "pending_thread", scope: !13850, file: !13685, line: 120, type: !3611)
!13862 = !DILocalVariable(name: "key", scope: !13850, file: !13685, line: 121, type: !13863)
!13863 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !13864)
!13864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !13865)
!13865 = !{!13866}
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13864, file: !244, line: 33, baseType: !103, size: 32)
!13867 = !DILocalVariable(name: "result", scope: !13850, file: !13685, line: 122, type: !103)
!13868 = !DILocation(line: 0, scope: !13850)
!13869 = !DILocation(line: 1031, column: 3, scope: !13870, inlinedAt: !13873)
!13870 = distinct !DISubprogram(name: "__get_IPSR", scope: !7800, file: !7800, line: 1027, type: !7887, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13871)
!13871 = !{!13872}
!13872 = !DILocalVariable(name: "result", scope: !13870, file: !7800, line: 1029, type: !190)
!13873 = distinct !DILocation(line: 48, column: 10, scope: !13874, inlinedAt: !13875)
!13874 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8796, file: !8796, line: 46, type: !8797, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !2145)
!13875 = distinct !DILocation(line: 118, column: 2, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !13685, line: 118, column: 2)
!13877 = distinct !DILexicalBlock(scope: !13850, file: !13685, line: 118, column: 2)
!13878 = !{i64 6993345}
!13879 = !DILocation(line: 0, scope: !13870, inlinedAt: !13873)
!13880 = !DILocation(line: 48, column: 9, scope: !13874, inlinedAt: !13875)
!13881 = !DILocation(line: 118, column: 2, scope: !13876)
!13882 = !DILocation(line: 118, column: 2, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13876, file: !13685, line: 118, column: 2)
!13884 = !DILocation(line: 124, column: 27, scope: !13850)
!13885 = !DILocalVariable(name: "l", arg: 1, scope: !13886, file: !244, line: 136, type: !13889)
!13886 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !13887, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13890)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{!13863, !13889}
!13889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 32)
!13890 = !{!13885, !13891}
!13891 = !DILocalVariable(name: "k", scope: !13886, file: !244, line: 139, type: !13863)
!13892 = !DILocation(line: 0, scope: !13886, inlinedAt: !13893)
!13893 = distinct !DILocation(line: 124, column: 8, scope: !13850)
!13894 = !DILocation(line: 55, column: 2, scope: !13895, inlinedAt: !13899)
!13895 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13896)
!13896 = !{!13897, !13898}
!13897 = !DILocalVariable(name: "key", scope: !13895, file: !7921, line: 44, type: !32)
!13898 = !DILocalVariable(name: "tmp", scope: !13895, file: !7921, line: 53, type: !32)
!13899 = distinct !DILocation(line: 145, column: 10, scope: !13886, inlinedAt: !13893)
!13900 = !{i64 2850916}
!13901 = !DILocation(line: 0, scope: !13895, inlinedAt: !13899)
!13902 = !DILocation(line: 148, column: 2, scope: !13903, inlinedAt: !13893)
!13903 = distinct !DILexicalBlock(scope: !13904, file: !244, line: 148, column: 2)
!13904 = distinct !DILexicalBlock(scope: !13886, file: !244, line: 148, column: 2)
!13905 = !DILocation(line: 148, column: 2, scope: !13904, inlinedAt: !13893)
!13906 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !13893)
!13907 = distinct !DILexicalBlock(scope: !13903, file: !244, line: 148, column: 2)
!13908 = !DILocation(line: 160, column: 2, scope: !13886, inlinedAt: !13893)
!13909 = !DILocation(line: 128, column: 12, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13850, file: !13685, line: 128, column: 6)
!13911 = !DILocation(line: 128, column: 30, scope: !13910)
!13912 = !DILocation(line: 128, column: 22, scope: !13910)
!13913 = !DILocation(line: 128, column: 6, scope: !13850)
!13914 = !DILocation(line: 130, column: 49, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13910, file: !13685, line: 128, column: 40)
!13916 = !DILocation(line: 130, column: 20, scope: !13915)
!13917 = !DILocation(line: 131, column: 22, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13915, file: !13685, line: 131, column: 7)
!13919 = !DILocation(line: 131, column: 7, scope: !13915)
!13920 = !DILocation(line: 135, column: 38, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13918, file: !13685, line: 131, column: 31)
!13922 = !DILocation(line: 136, column: 17, scope: !13921)
!13923 = !DILocation(line: 135, column: 10, scope: !13921)
!13924 = !DILocalVariable(name: "thread", arg: 1, scope: !13925, file: !12947, line: 65, type: !3611)
!13925 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12947, file: !12947, line: 65, type: !13926, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13928)
!13926 = !DISubroutineType(types: !13927)
!13927 = !{null, !3611, !32}
!13928 = !{!13924, !13929}
!13929 = !DILocalVariable(name: "value", arg: 2, scope: !13925, file: !12947, line: 65, type: !32)
!13930 = !DILocation(line: 0, scope: !13925, inlinedAt: !13931)
!13931 = distinct !DILocation(line: 138, column: 4, scope: !13921)
!13932 = !DILocation(line: 67, column: 15, scope: !13925, inlinedAt: !13931)
!13933 = !DILocation(line: 67, column: 33, scope: !13925, inlinedAt: !13931)
!13934 = !DILocation(line: 139, column: 4, scope: !13921)
!13935 = !DILocation(line: 140, column: 4, scope: !13921)
!13936 = !DILocation(line: 141, column: 4, scope: !13921)
!13937 = !DILocation(line: 144, column: 23, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13918, file: !13685, line: 142, column: 10)
!13939 = !DILocation(line: 144, column: 46, scope: !13938)
!13940 = !DILocation(line: 144, column: 10, scope: !13938)
!13941 = !DILocation(line: 145, column: 29, scope: !13938)
!13942 = !DILocation(line: 145, column: 20, scope: !13938)
!13943 = !DILocation(line: 146, column: 33, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13938, file: !13685, line: 146, column: 8)
!13945 = !DILocation(line: 146, column: 24, scope: !13944)
!13946 = !DILocation(line: 146, column: 8, scope: !13938)
!13947 = !DILocation(line: 147, column: 29, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13944, file: !13685, line: 146, column: 45)
!13949 = !DILocation(line: 147, column: 21, scope: !13948)
!13950 = !DILocation(line: 148, column: 4, scope: !13948)
!13951 = !DILocation(line: 149, column: 19, scope: !13938)
!13952 = !DILocation(line: 155, column: 2, scope: !13915)
!13953 = !DILocation(line: 155, column: 13, scope: !13910)
!13954 = !DILocation(line: 162, column: 3, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !13685, line: 158, column: 9)
!13956 = distinct !DILexicalBlock(scope: !13910, file: !13685, line: 155, column: 13)
!13957 = !DILocation(line: 162, column: 18, scope: !13955)
!13958 = !DILocation(line: 162, column: 28, scope: !13955)
!13959 = !DILocation(line: 164, column: 49, scope: !13955)
!13960 = !DILocation(line: 164, column: 12, scope: !13955)
!13961 = !DILocation(line: 166, column: 3, scope: !13955)
!13962 = !DILocation(line: 0, scope: !13910)
!13963 = !DILocalVariable(name: "key", arg: 2, scope: !13964, file: !244, line: 190, type: !13863)
!13964 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !13965, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13967)
!13965 = !DISubroutineType(types: !13966)
!13966 = !{null, !13889, !13863}
!13967 = !{!13968, !13963}
!13968 = !DILocalVariable(name: "l", arg: 1, scope: !13964, file: !244, line: 189, type: !13889)
!13969 = !DILocation(line: 0, scope: !13964, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 171, column: 2, scope: !13850)
!13971 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !13970)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !244, line: 194, column: 2)
!13973 = distinct !DILexicalBlock(scope: !13964, file: !244, line: 194, column: 2)
!13974 = !DILocation(line: 194, column: 2, scope: !13973, inlinedAt: !13970)
!13975 = !DILocation(line: 194, column: 2, scope: !13976, inlinedAt: !13970)
!13976 = distinct !DILexicalBlock(scope: !13972, file: !244, line: 194, column: 2)
!13977 = !DILocalVariable(name: "key", arg: 1, scope: !13978, file: !7921, line: 84, type: !32)
!13978 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13979)
!13979 = !{!13977}
!13980 = !DILocation(line: 0, scope: !13978, inlinedAt: !13981)
!13981 = distinct !DILocation(line: 215, column: 2, scope: !13964, inlinedAt: !13970)
!13982 = !DILocation(line: 95, column: 2, scope: !13978, inlinedAt: !13981)
!13983 = !{i64 2851733}
!13984 = !DILocation(line: 173, column: 2, scope: !13850)
!13985 = !DILocation(line: 174, column: 1, scope: !13850)
!13986 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13685, file: !13685, line: 188, type: !13987, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !13995)
!13987 = !DISubroutineType(types: !13988)
!13988 = !{null, !13688, !13989}
!13989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13990, size: 32)
!13990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !110, line: 4259, size: 96, elements: !13991)
!13991 = !{!13992, !13993, !13994}
!13992 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13990, file: !110, line: 4261, baseType: !239, size: 32)
!13993 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13990, file: !110, line: 4263, baseType: !190, size: 32, offset: 32)
!13994 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13990, file: !110, line: 4265, baseType: !190, size: 32, offset: 64)
!13995 = !{!13996, !13997}
!13996 = !DILocalVariable(name: "msgq", arg: 1, scope: !13986, file: !13685, line: 188, type: !13688)
!13997 = !DILocalVariable(name: "attrs", arg: 2, scope: !13986, file: !13685, line: 188, type: !13989)
!13998 = !DILocation(line: 0, scope: !13986)
!13999 = !DILocation(line: 190, column: 26, scope: !13986)
!14000 = !DILocation(line: 190, column: 9, scope: !13986)
!14001 = !DILocation(line: 190, column: 18, scope: !13986)
!14002 = !DILocation(line: 191, column: 26, scope: !13986)
!14003 = !DILocation(line: 191, column: 9, scope: !13986)
!14004 = !DILocation(line: 191, column: 18, scope: !13986)
!14005 = !DILocation(line: 192, column: 27, scope: !13986)
!14006 = !DILocation(line: 192, column: 9, scope: !13986)
!14007 = !DILocation(line: 192, column: 19, scope: !13986)
!14008 = !DILocation(line: 193, column: 1, scope: !13986)
!14009 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13685, file: !13685, line: 206, type: !14010, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !14012)
!14010 = !DISubroutineType(types: !14011)
!14011 = !{!103, !13688, !102, !13853}
!14012 = !{!14013, !14014, !14015, !14016, !14017, !14018}
!14013 = !DILocalVariable(name: "msgq", arg: 1, scope: !14009, file: !13685, line: 206, type: !13688)
!14014 = !DILocalVariable(name: "data", arg: 2, scope: !14009, file: !13685, line: 206, type: !102)
!14015 = !DILocalVariable(name: "timeout", arg: 3, scope: !14009, file: !13685, line: 206, type: !13853)
!14016 = !DILocalVariable(name: "key", scope: !14009, file: !13685, line: 210, type: !13863)
!14017 = !DILocalVariable(name: "pending_thread", scope: !14009, file: !13685, line: 211, type: !3611)
!14018 = !DILocalVariable(name: "result", scope: !14009, file: !13685, line: 212, type: !103)
!14019 = !DILocation(line: 0, scope: !14009)
!14020 = !DILocation(line: 1031, column: 3, scope: !13870, inlinedAt: !14021)
!14021 = distinct !DILocation(line: 48, column: 10, scope: !13874, inlinedAt: !14022)
!14022 = distinct !DILocation(line: 208, column: 2, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !13685, line: 208, column: 2)
!14024 = distinct !DILexicalBlock(scope: !14009, file: !13685, line: 208, column: 2)
!14025 = !DILocation(line: 0, scope: !13870, inlinedAt: !14021)
!14026 = !DILocation(line: 48, column: 9, scope: !13874, inlinedAt: !14022)
!14027 = !DILocation(line: 208, column: 2, scope: !14023)
!14028 = !DILocation(line: 208, column: 2, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14023, file: !13685, line: 208, column: 2)
!14030 = !DILocation(line: 214, column: 27, scope: !14009)
!14031 = !DILocation(line: 0, scope: !13886, inlinedAt: !14032)
!14032 = distinct !DILocation(line: 214, column: 8, scope: !14009)
!14033 = !DILocation(line: 55, column: 2, scope: !13895, inlinedAt: !14034)
!14034 = distinct !DILocation(line: 145, column: 10, scope: !13886, inlinedAt: !14032)
!14035 = !DILocation(line: 0, scope: !13895, inlinedAt: !14034)
!14036 = !DILocation(line: 148, column: 2, scope: !13903, inlinedAt: !14032)
!14037 = !DILocation(line: 148, column: 2, scope: !13904, inlinedAt: !14032)
!14038 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14032)
!14039 = !DILocation(line: 160, column: 2, scope: !13886, inlinedAt: !14032)
!14040 = !DILocation(line: 218, column: 12, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14009, file: !13685, line: 218, column: 6)
!14042 = !DILocation(line: 218, column: 22, scope: !14041)
!14043 = !DILocation(line: 218, column: 6, scope: !14009)
!14044 = !DILocation(line: 220, column: 28, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14041, file: !13685, line: 218, column: 28)
!14046 = !DILocation(line: 220, column: 44, scope: !14045)
!14047 = !DILocation(line: 220, column: 9, scope: !14045)
!14048 = !DILocation(line: 221, column: 27, scope: !14045)
!14049 = !DILocation(line: 221, column: 18, scope: !14045)
!14050 = !DILocation(line: 222, column: 31, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14045, file: !13685, line: 222, column: 7)
!14052 = !DILocation(line: 222, column: 22, scope: !14051)
!14053 = !DILocation(line: 222, column: 7, scope: !14045)
!14054 = !DILocation(line: 223, column: 27, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14051, file: !13685, line: 222, column: 43)
!14056 = !DILocation(line: 223, column: 19, scope: !14055)
!14057 = !DILocation(line: 224, column: 3, scope: !14055)
!14058 = !DILocation(line: 225, column: 18, scope: !14045)
!14059 = !DILocation(line: 228, column: 49, scope: !14045)
!14060 = !DILocation(line: 228, column: 20, scope: !14045)
!14061 = !DILocation(line: 229, column: 22, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14045, file: !13685, line: 229, column: 7)
!14063 = !DILocation(line: 229, column: 7, scope: !14045)
!14064 = !DILocation(line: 233, column: 23, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14062, file: !13685, line: 229, column: 31)
!14066 = !DILocation(line: 233, column: 55, scope: !14065)
!14067 = !DILocation(line: 234, column: 17, scope: !14065)
!14068 = !DILocation(line: 233, column: 10, scope: !14065)
!14069 = !DILocation(line: 235, column: 29, scope: !14065)
!14070 = !DILocation(line: 235, column: 20, scope: !14065)
!14071 = !DILocation(line: 236, column: 33, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14065, file: !13685, line: 236, column: 8)
!14073 = !DILocation(line: 236, column: 24, scope: !14072)
!14074 = !DILocation(line: 236, column: 8, scope: !14065)
!14075 = !DILocation(line: 237, column: 29, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14072, file: !13685, line: 236, column: 45)
!14077 = !DILocation(line: 237, column: 21, scope: !14076)
!14078 = !DILocation(line: 238, column: 4, scope: !14076)
!14079 = !DILocation(line: 239, column: 19, scope: !14065)
!14080 = !DILocation(line: 0, scope: !13925, inlinedAt: !14081)
!14081 = distinct !DILocation(line: 242, column: 4, scope: !14065)
!14082 = !DILocation(line: 67, column: 15, scope: !13925, inlinedAt: !14081)
!14083 = !DILocation(line: 67, column: 33, scope: !13925, inlinedAt: !14081)
!14084 = !DILocation(line: 243, column: 4, scope: !14065)
!14085 = !DILocation(line: 244, column: 4, scope: !14065)
!14086 = !DILocation(line: 248, column: 4, scope: !14065)
!14087 = !DILocation(line: 251, column: 13, scope: !14041)
!14088 = !DILocation(line: 258, column: 3, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14090, file: !13685, line: 254, column: 9)
!14090 = distinct !DILexicalBlock(scope: !14041, file: !13685, line: 251, column: 13)
!14091 = !DILocation(line: 258, column: 18, scope: !14089)
!14092 = !DILocation(line: 258, column: 28, scope: !14089)
!14093 = !DILocation(line: 260, column: 49, scope: !14089)
!14094 = !DILocation(line: 260, column: 12, scope: !14089)
!14095 = !DILocation(line: 262, column: 3, scope: !14089)
!14096 = !DILocation(line: 0, scope: !14041)
!14097 = !DILocation(line: 0, scope: !13964, inlinedAt: !14098)
!14098 = distinct !DILocation(line: 267, column: 2, scope: !14009)
!14099 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14098)
!14100 = !DILocation(line: 194, column: 2, scope: !13973, inlinedAt: !14098)
!14101 = !DILocation(line: 194, column: 2, scope: !13976, inlinedAt: !14098)
!14102 = !DILocation(line: 0, scope: !13978, inlinedAt: !14103)
!14103 = distinct !DILocation(line: 215, column: 2, scope: !13964, inlinedAt: !14098)
!14104 = !DILocation(line: 95, column: 2, scope: !13978, inlinedAt: !14103)
!14105 = !DILocation(line: 269, column: 2, scope: !14009)
!14106 = !DILocation(line: 270, column: 1, scope: !14009)
!14107 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13685, file: !13685, line: 284, type: !14108, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !14110)
!14108 = !DISubroutineType(types: !14109)
!14109 = !{!103, !13688, !102}
!14110 = !{!14111, !14112, !14113, !14114}
!14111 = !DILocalVariable(name: "msgq", arg: 1, scope: !14107, file: !13685, line: 284, type: !13688)
!14112 = !DILocalVariable(name: "data", arg: 2, scope: !14107, file: !13685, line: 284, type: !102)
!14113 = !DILocalVariable(name: "key", scope: !14107, file: !13685, line: 286, type: !13863)
!14114 = !DILocalVariable(name: "result", scope: !14107, file: !13685, line: 287, type: !103)
!14115 = !DILocation(line: 0, scope: !14107)
!14116 = !DILocation(line: 289, column: 27, scope: !14107)
!14117 = !DILocation(line: 0, scope: !13886, inlinedAt: !14118)
!14118 = distinct !DILocation(line: 289, column: 8, scope: !14107)
!14119 = !DILocation(line: 55, column: 2, scope: !13895, inlinedAt: !14120)
!14120 = distinct !DILocation(line: 145, column: 10, scope: !13886, inlinedAt: !14118)
!14121 = !DILocation(line: 0, scope: !13895, inlinedAt: !14120)
!14122 = !DILocation(line: 148, column: 2, scope: !13903, inlinedAt: !14118)
!14123 = !DILocation(line: 148, column: 2, scope: !13904, inlinedAt: !14118)
!14124 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14118)
!14125 = !DILocation(line: 160, column: 2, scope: !13886, inlinedAt: !14118)
!14126 = !DILocation(line: 291, column: 12, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14107, file: !13685, line: 291, column: 6)
!14128 = !DILocation(line: 291, column: 22, scope: !14127)
!14129 = !DILocation(line: 291, column: 6, scope: !14107)
!14130 = !DILocation(line: 293, column: 28, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14127, file: !13685, line: 291, column: 28)
!14132 = !DILocation(line: 293, column: 44, scope: !14131)
!14133 = !DILocation(line: 293, column: 9, scope: !14131)
!14134 = !DILocation(line: 295, column: 2, scope: !14131)
!14135 = !DILocation(line: 0, scope: !14127)
!14136 = !DILocation(line: 0, scope: !13964, inlinedAt: !14137)
!14137 = distinct !DILocation(line: 302, column: 2, scope: !14107)
!14138 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14137)
!14139 = !DILocation(line: 194, column: 2, scope: !13973, inlinedAt: !14137)
!14140 = !DILocation(line: 194, column: 2, scope: !13976, inlinedAt: !14137)
!14141 = !DILocation(line: 0, scope: !13978, inlinedAt: !14142)
!14142 = distinct !DILocation(line: 215, column: 2, scope: !13964, inlinedAt: !14137)
!14143 = !DILocation(line: 95, column: 2, scope: !13978, inlinedAt: !14142)
!14144 = !DILocation(line: 304, column: 2, scope: !14107)
!14145 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13685, file: !13685, line: 318, type: !14146, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3593, retainedNodes: !14148)
!14146 = !DISubroutineType(types: !14147)
!14147 = !{null, !13688}
!14148 = !{!14149, !14150, !14151}
!14149 = !DILocalVariable(name: "msgq", arg: 1, scope: !14145, file: !13685, line: 318, type: !13688)
!14150 = !DILocalVariable(name: "key", scope: !14145, file: !13685, line: 320, type: !13863)
!14151 = !DILocalVariable(name: "pending_thread", scope: !14145, file: !13685, line: 321, type: !3611)
!14152 = !DILocation(line: 0, scope: !14145)
!14153 = !DILocation(line: 323, column: 27, scope: !14145)
!14154 = !DILocation(line: 0, scope: !13886, inlinedAt: !14155)
!14155 = distinct !DILocation(line: 323, column: 8, scope: !14145)
!14156 = !DILocation(line: 55, column: 2, scope: !13895, inlinedAt: !14157)
!14157 = distinct !DILocation(line: 145, column: 10, scope: !13886, inlinedAt: !14155)
!14158 = !DILocation(line: 0, scope: !13895, inlinedAt: !14157)
!14159 = !DILocation(line: 148, column: 2, scope: !13903, inlinedAt: !14155)
!14160 = !DILocation(line: 148, column: 2, scope: !13904, inlinedAt: !14155)
!14161 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14155)
!14162 = !DILocation(line: 160, column: 2, scope: !13886, inlinedAt: !14155)
!14163 = !DILocation(line: 328, column: 27, scope: !14145)
!14164 = !DILocation(line: 328, column: 65, scope: !14145)
!14165 = !DILocation(line: 328, column: 2, scope: !14145)
!14166 = !DILocation(line: 0, scope: !13925, inlinedAt: !14167)
!14167 = distinct !DILocation(line: 329, column: 3, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14145, file: !13685, line: 328, column: 74)
!14169 = !DILocation(line: 67, column: 15, scope: !13925, inlinedAt: !14167)
!14170 = !DILocation(line: 67, column: 33, scope: !13925, inlinedAt: !14167)
!14171 = !DILocation(line: 330, column: 3, scope: !14168)
!14172 = distinct !{!14172, !14165, !14173}
!14173 = !DILocation(line: 331, column: 2, scope: !14145)
!14174 = !DILocation(line: 333, column: 8, scope: !14145)
!14175 = !DILocation(line: 333, column: 18, scope: !14145)
!14176 = !DILocation(line: 334, column: 25, scope: !14145)
!14177 = !DILocation(line: 334, column: 8, scope: !14145)
!14178 = !DILocation(line: 334, column: 17, scope: !14145)
!14179 = !DILocation(line: 336, column: 2, scope: !14145)
!14180 = !DILocation(line: 337, column: 1, scope: !14145)
!14181 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2429, file: !2429, line: 49, type: !14182, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14191)
!14182 = !DISubroutineType(types: !14183)
!14183 = !{!103, !14184}
!14184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14185, size: 32)
!14185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !110, line: 2720, size: 160, elements: !14186)
!14186 = !{!14187, !14188, !14189, !14190}
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14185, file: !110, line: 2722, baseType: !2363, size: 64)
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !14185, file: !110, line: 2724, baseType: !2345, size: 32, offset: 64)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !14185, file: !110, line: 2727, baseType: !190, size: 32, offset: 96)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !14185, file: !110, line: 2730, baseType: !103, size: 32, offset: 128)
!14191 = !{!14192}
!14192 = !DILocalVariable(name: "mutex", arg: 1, scope: !14181, file: !2429, line: 49, type: !14184)
!14193 = !DILocation(line: 0, scope: !14181)
!14194 = !DILocation(line: 51, column: 9, scope: !14181)
!14195 = !DILocation(line: 51, column: 15, scope: !14181)
!14196 = !DILocation(line: 52, column: 9, scope: !14181)
!14197 = !DILocation(line: 52, column: 20, scope: !14181)
!14198 = !DILocation(line: 54, column: 23, scope: !14181)
!14199 = !DILocation(line: 54, column: 2, scope: !14181)
!14200 = !DILocation(line: 60, column: 2, scope: !14181)
!14201 = distinct !DISubprogram(name: "z_waitq_init", scope: !13282, file: !13282, line: 47, type: !14202, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14204)
!14202 = !DISubroutineType(types: !14203)
!14203 = !{null, !2362}
!14204 = !{!14205}
!14205 = !DILocalVariable(name: "w", arg: 1, scope: !14201, file: !13282, line: 47, type: !2362)
!14206 = !DILocation(line: 0, scope: !14201)
!14207 = !DILocation(line: 49, column: 21, scope: !14201)
!14208 = !DILocation(line: 49, column: 2, scope: !14201)
!14209 = !DILocation(line: 50, column: 1, scope: !14201)
!14210 = distinct !DISubprogram(name: "sys_dlist_init", scope: !141, file: !141, line: 197, type: !14211, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14214)
!14211 = !DISubroutineType(types: !14212)
!14212 = !{null, !14213}
!14213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!14214 = !{!14215}
!14215 = !DILocalVariable(name: "list", arg: 1, scope: !14210, file: !141, line: 197, type: !14213)
!14216 = !DILocation(line: 0, scope: !14210)
!14217 = !DILocation(line: 199, column: 8, scope: !14210)
!14218 = !DILocation(line: 199, column: 13, scope: !14210)
!14219 = !DILocation(line: 200, column: 8, scope: !14210)
!14220 = !DILocation(line: 200, column: 13, scope: !14210)
!14221 = !DILocation(line: 201, column: 1, scope: !14210)
!14222 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2429, file: !2429, line: 95, type: !14223, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14229)
!14223 = !DISubroutineType(types: !14224)
!14224 = !{!103, !14184, !14225}
!14225 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !14226)
!14226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !14227)
!14227 = !{!14228}
!14228 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14226, file: !320, line: 66, baseType: !319, size: 64)
!14229 = !{!14230, !14231, !14232, !14233, !14238, !14239, !14240}
!14230 = !DILocalVariable(name: "mutex", arg: 1, scope: !14222, file: !2429, line: 95, type: !14184)
!14231 = !DILocalVariable(name: "timeout", arg: 2, scope: !14222, file: !2429, line: 95, type: !14225)
!14232 = !DILocalVariable(name: "new_prio", scope: !14222, file: !2429, line: 97, type: !103)
!14233 = !DILocalVariable(name: "key", scope: !14222, file: !2429, line: 98, type: !14234)
!14234 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !14235)
!14235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !14236)
!14236 = !{!14237}
!14237 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14235, file: !244, line: 33, baseType: !103, size: 32)
!14238 = !DILocalVariable(name: "resched", scope: !14222, file: !2429, line: 99, type: !279)
!14239 = !DILocalVariable(name: "got_mutex", scope: !14222, file: !2429, line: 146, type: !103)
!14240 = !DILocalVariable(name: "waiter", scope: !14241, file: !2429, line: 169, type: !2345)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !2429, line: 168, column: 36)
!14242 = distinct !DILexicalBlock(scope: !14222, file: !2429, line: 168, column: 6)
!14243 = !DILocation(line: 0, scope: !14222)
!14244 = !DILocation(line: 1031, column: 3, scope: !14245, inlinedAt: !14248)
!14245 = distinct !DISubprogram(name: "__get_IPSR", scope: !7800, file: !7800, line: 1027, type: !7887, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14246)
!14246 = !{!14247}
!14247 = !DILocalVariable(name: "result", scope: !14245, file: !7800, line: 1029, type: !190)
!14248 = distinct !DILocation(line: 48, column: 10, scope: !14249, inlinedAt: !14250)
!14249 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8796, file: !8796, line: 46, type: !8797, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !2145)
!14250 = distinct !DILocation(line: 101, column: 2, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !2429, line: 101, column: 2)
!14252 = distinct !DILexicalBlock(scope: !14222, file: !2429, line: 101, column: 2)
!14253 = !{i64 6976593}
!14254 = !DILocation(line: 0, scope: !14245, inlinedAt: !14248)
!14255 = !DILocation(line: 48, column: 9, scope: !14249, inlinedAt: !14250)
!14256 = !DILocation(line: 101, column: 2, scope: !14252)
!14257 = !DILocation(line: 101, column: 2, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14251, file: !2429, line: 101, column: 2)
!14259 = !DILocalVariable(name: "l", arg: 1, scope: !14260, file: !244, line: 136, type: !14263)
!14260 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !14261, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14264)
!14261 = !DISubroutineType(types: !14262)
!14262 = !{!14234, !14263}
!14263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!14264 = !{!14259, !14265}
!14265 = !DILocalVariable(name: "k", scope: !14260, file: !244, line: 139, type: !14234)
!14266 = !DILocation(line: 0, scope: !14260, inlinedAt: !14267)
!14267 = distinct !DILocation(line: 105, column: 8, scope: !14222)
!14268 = !DILocation(line: 55, column: 2, scope: !14269, inlinedAt: !14273)
!14269 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14270)
!14270 = !{!14271, !14272}
!14271 = !DILocalVariable(name: "key", scope: !14269, file: !7921, line: 44, type: !32)
!14272 = !DILocalVariable(name: "tmp", scope: !14269, file: !7921, line: 53, type: !32)
!14273 = distinct !DILocation(line: 145, column: 10, scope: !14260, inlinedAt: !14267)
!14274 = !{i64 2849187}
!14275 = !DILocation(line: 0, scope: !14269, inlinedAt: !14273)
!14276 = !DILocation(line: 148, column: 2, scope: !14277, inlinedAt: !14267)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !244, line: 148, column: 2)
!14278 = distinct !DILexicalBlock(scope: !14260, file: !244, line: 148, column: 2)
!14279 = !DILocation(line: 148, column: 2, scope: !14278, inlinedAt: !14267)
!14280 = !DILocation(line: 148, column: 2, scope: !14281, inlinedAt: !14267)
!14281 = distinct !DILexicalBlock(scope: !14277, file: !244, line: 148, column: 2)
!14282 = !DILocation(line: 160, column: 2, scope: !14260, inlinedAt: !14267)
!14283 = !DILocation(line: 107, column: 6, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14222, file: !2429, line: 107, column: 6)
!14285 = !DILocation(line: 107, column: 6, scope: !14222)
!14286 = !{!"branch_weights", i32 2000, i32 1}
!14287 = !DILocation(line: 110, column: 6, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14284, file: !2429, line: 107, column: 71)
!14289 = !DILocation(line: 110, column: 21, scope: !14288)
!14290 = !DILocation(line: 109, column: 28, scope: !14288)
!14291 = !DILocation(line: 111, column: 13, scope: !14288)
!14292 = !DILocation(line: 114, column: 18, scope: !14288)
!14293 = !DILocation(line: 109, column: 10, scope: !14288)
!14294 = !DILocation(line: 109, column: 26, scope: !14288)
!14295 = !DILocation(line: 113, column: 20, scope: !14288)
!14296 = !DILocation(line: 114, column: 10, scope: !14288)
!14297 = !DILocation(line: 114, column: 16, scope: !14288)
!14298 = !DILocalVariable(name: "key", arg: 2, scope: !14299, file: !244, line: 190, type: !14234)
!14299 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !14300, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14302)
!14300 = !DISubroutineType(types: !14301)
!14301 = !{null, !14263, !14234}
!14302 = !{!14303, !14298}
!14303 = !DILocalVariable(name: "l", arg: 1, scope: !14299, file: !244, line: 189, type: !14263)
!14304 = !DILocation(line: 0, scope: !14299, inlinedAt: !14305)
!14305 = distinct !DILocation(line: 120, column: 3, scope: !14288)
!14306 = !DILocation(line: 194, column: 2, scope: !14307, inlinedAt: !14305)
!14307 = distinct !DILexicalBlock(scope: !14308, file: !244, line: 194, column: 2)
!14308 = distinct !DILexicalBlock(scope: !14299, file: !244, line: 194, column: 2)
!14309 = !DILocation(line: 194, column: 2, scope: !14308, inlinedAt: !14305)
!14310 = !DILocation(line: 194, column: 2, scope: !14311, inlinedAt: !14305)
!14311 = distinct !DILexicalBlock(scope: !14307, file: !244, line: 194, column: 2)
!14312 = !DILocalVariable(name: "key", arg: 1, scope: !14313, file: !7921, line: 84, type: !32)
!14313 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14314)
!14314 = !{!14312}
!14315 = !DILocation(line: 0, scope: !14313, inlinedAt: !14316)
!14316 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14305)
!14317 = !DILocation(line: 95, column: 2, scope: !14313, inlinedAt: !14316)
!14318 = !{i64 2850004}
!14319 = !DILocation(line: 124, column: 3, scope: !14288)
!14320 = !DILocation(line: 127, column: 6, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14222, file: !2429, line: 127, column: 6)
!14322 = !DILocation(line: 127, column: 6, scope: !14222)
!14323 = !{!"branch_weights", i32 1, i32 2000}
!14324 = !DILocation(line: 0, scope: !14299, inlinedAt: !14325)
!14325 = distinct !DILocation(line: 128, column: 3, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14321, file: !2429, line: 127, column: 50)
!14327 = !DILocation(line: 194, column: 2, scope: !14307, inlinedAt: !14325)
!14328 = !DILocation(line: 194, column: 2, scope: !14308, inlinedAt: !14325)
!14329 = !DILocation(line: 194, column: 2, scope: !14311, inlinedAt: !14325)
!14330 = !DILocation(line: 0, scope: !14313, inlinedAt: !14331)
!14331 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14325)
!14332 = !DILocation(line: 95, column: 2, scope: !14313, inlinedAt: !14331)
!14333 = !DILocation(line: 132, column: 3, scope: !14326)
!14334 = !DILocation(line: 137, column: 53, scope: !14222)
!14335 = !DILocation(line: 137, column: 38, scope: !14222)
!14336 = !DILocation(line: 138, column: 29, scope: !14222)
!14337 = !DILocation(line: 138, column: 10, scope: !14222)
!14338 = !DILocation(line: 137, column: 13, scope: !14222)
!14339 = !DILocation(line: 142, column: 6, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14222, file: !2429, line: 142, column: 6)
!14341 = !DILocation(line: 142, column: 6, scope: !14222)
!14342 = !DILocation(line: 143, column: 13, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14340, file: !2429, line: 142, column: 59)
!14344 = !DILocation(line: 144, column: 2, scope: !14343)
!14345 = !DILocation(line: 146, column: 50, scope: !14222)
!14346 = !DILocation(line: 146, column: 18, scope: !14222)
!14347 = !DILocation(line: 153, column: 16, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14222, file: !2429, line: 153, column: 6)
!14349 = !DILocation(line: 153, column: 6, scope: !14222)
!14350 = !DILocation(line: 0, scope: !14260, inlinedAt: !14351)
!14351 = distinct !DILocation(line: 162, column: 8, scope: !14222)
!14352 = !DILocation(line: 55, column: 2, scope: !14269, inlinedAt: !14353)
!14353 = distinct !DILocation(line: 145, column: 10, scope: !14260, inlinedAt: !14351)
!14354 = !DILocation(line: 0, scope: !14269, inlinedAt: !14353)
!14355 = !DILocation(line: 148, column: 2, scope: !14277, inlinedAt: !14351)
!14356 = !DILocation(line: 148, column: 2, scope: !14278, inlinedAt: !14351)
!14357 = !DILocation(line: 148, column: 2, scope: !14281, inlinedAt: !14351)
!14358 = !DILocation(line: 160, column: 2, scope: !14260, inlinedAt: !14351)
!14359 = !DILocation(line: 168, column: 6, scope: !14242)
!14360 = !DILocation(line: 168, column: 6, scope: !14222)
!14361 = !DILocation(line: 169, column: 29, scope: !14241)
!14362 = !DILocation(line: 0, scope: !14241)
!14363 = !DILocation(line: 171, column: 22, scope: !14241)
!14364 = !DILocation(line: 171, column: 14, scope: !14241)
!14365 = !DILocation(line: 172, column: 42, scope: !14241)
!14366 = !DILocation(line: 172, column: 29, scope: !14241)
!14367 = !DILocation(line: 172, column: 55, scope: !14241)
!14368 = !DILocation(line: 172, column: 4, scope: !14241)
!14369 = !DILocation(line: 173, column: 11, scope: !14241)
!14370 = !DILocation(line: 177, column: 13, scope: !14241)
!14371 = !DILocation(line: 177, column: 48, scope: !14241)
!14372 = !DILocation(line: 180, column: 6, scope: !14222)
!14373 = !DILocation(line: 181, column: 3, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14375, file: !2429, line: 180, column: 15)
!14375 = distinct !DILexicalBlock(scope: !14222, file: !2429, line: 180, column: 6)
!14376 = !DILocation(line: 182, column: 2, scope: !14374)
!14377 = !DILocation(line: 0, scope: !14299, inlinedAt: !14378)
!14378 = distinct !DILocation(line: 183, column: 3, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14375, file: !2429, line: 182, column: 9)
!14380 = !DILocation(line: 194, column: 2, scope: !14307, inlinedAt: !14378)
!14381 = !DILocation(line: 194, column: 2, scope: !14308, inlinedAt: !14378)
!14382 = !DILocation(line: 194, column: 2, scope: !14311, inlinedAt: !14378)
!14383 = !DILocation(line: 0, scope: !14313, inlinedAt: !14384)
!14384 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14378)
!14385 = !DILocation(line: 95, column: 2, scope: !14313, inlinedAt: !14384)
!14386 = !DILocation(line: 189, column: 1, scope: !14222)
!14387 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2429, file: !2429, line: 72, type: !14388, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14390)
!14388 = !DISubroutineType(types: !14389)
!14389 = !{!371, !371, !371}
!14390 = !{!14391, !14392, !14393}
!14391 = !DILocalVariable(name: "target", arg: 1, scope: !14387, file: !2429, line: 72, type: !371)
!14392 = !DILocalVariable(name: "limit", arg: 2, scope: !14387, file: !2429, line: 72, type: !371)
!14393 = !DILocalVariable(name: "new_prio", scope: !14387, file: !2429, line: 74, type: !103)
!14394 = !DILocation(line: 0, scope: !14387)
!14395 = !DILocation(line: 74, column: 17, scope: !14387)
!14396 = !DILocation(line: 76, column: 13, scope: !14387)
!14397 = !DILocation(line: 78, column: 2, scope: !14387)
!14398 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12927, file: !12927, line: 211, type: !14399, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14401)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{!279, !103, !103}
!14401 = !{!14402, !14403}
!14402 = !DILocalVariable(name: "prio", arg: 1, scope: !14398, file: !12927, line: 211, type: !103)
!14403 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14398, file: !12927, line: 211, type: !103)
!14404 = !DILocation(line: 0, scope: !14398)
!14405 = !DILocation(line: 213, column: 9, scope: !14398)
!14406 = !DILocation(line: 213, column: 2, scope: !14398)
!14407 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2429, file: !2429, line: 81, type: !14408, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14410)
!14408 = !DISubroutineType(types: !14409)
!14409 = !{!279, !14184, !371}
!14410 = !{!14411, !14412}
!14411 = !DILocalVariable(name: "mutex", arg: 1, scope: !14407, file: !2429, line: 81, type: !14184)
!14412 = !DILocalVariable(name: "new_prio", arg: 2, scope: !14407, file: !2429, line: 81, type: !371)
!14413 = !DILocation(line: 0, scope: !14407)
!14414 = !DILocation(line: 83, column: 13, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14407, file: !2429, line: 83, column: 6)
!14416 = !DILocation(line: 83, column: 25, scope: !14415)
!14417 = !DILocation(line: 83, column: 6, scope: !14415)
!14418 = !DILocation(line: 83, column: 30, scope: !14415)
!14419 = !DILocation(line: 83, column: 6, scope: !14407)
!14420 = !DILocation(line: 90, column: 10, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14415, file: !2429, line: 83, column: 43)
!14422 = !DILocation(line: 90, column: 3, scope: !14421)
!14423 = !DILocation(line: 93, column: 1, scope: !14407)
!14424 = distinct !DISubprogram(name: "z_waitq_head", scope: !13282, file: !13282, line: 52, type: !14425, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14427)
!14425 = !DISubroutineType(types: !14426)
!14426 = !{!2345, !2362}
!14427 = !{!14428}
!14428 = !DILocalVariable(name: "w", arg: 1, scope: !14424, file: !13282, line: 52, type: !2362)
!14429 = !DILocation(line: 0, scope: !14424)
!14430 = !DILocation(line: 54, column: 52, scope: !14424)
!14431 = !DILocation(line: 54, column: 28, scope: !14424)
!14432 = !DILocation(line: 54, column: 9, scope: !14424)
!14433 = !DILocation(line: 54, column: 2, scope: !14424)
!14434 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !141, file: !141, line: 294, type: !14435, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14437)
!14435 = !DISubroutineType(types: !14436)
!14436 = !{!2330, !14213}
!14437 = !{!14438}
!14438 = !DILocalVariable(name: "list", arg: 1, scope: !14434, file: !141, line: 294, type: !14213)
!14439 = !DILocation(line: 0, scope: !14434)
!14440 = !DILocation(line: 296, column: 9, scope: !14434)
!14441 = !DILocation(line: 296, column: 49, scope: !14434)
!14442 = !DILocation(line: 296, column: 2, scope: !14434)
!14443 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !141, file: !141, line: 266, type: !14444, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14446)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{!279, !14213}
!14446 = !{!14447}
!14447 = !DILocalVariable(name: "list", arg: 1, scope: !14443, file: !141, line: 266, type: !14213)
!14448 = !DILocation(line: 0, scope: !14443)
!14449 = !DILocation(line: 268, column: 15, scope: !14443)
!14450 = !DILocation(line: 268, column: 20, scope: !14443)
!14451 = !DILocation(line: 268, column: 2, scope: !14443)
!14452 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12927, file: !12927, line: 206, type: !14399, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14453)
!14453 = !{!14454, !14455}
!14454 = !DILocalVariable(name: "prio1", arg: 1, scope: !14452, file: !12927, line: 206, type: !103)
!14455 = !DILocalVariable(name: "prio2", arg: 2, scope: !14452, file: !12927, line: 206, type: !103)
!14456 = !DILocation(line: 0, scope: !14452)
!14457 = !DILocation(line: 208, column: 15, scope: !14452)
!14458 = !DILocation(line: 208, column: 2, scope: !14452)
!14459 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12927, file: !12927, line: 186, type: !618, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14460)
!14460 = !{!14461}
!14461 = !DILocalVariable(name: "prio", arg: 1, scope: !14459, file: !12927, line: 186, type: !103)
!14462 = !DILocation(line: 0, scope: !14459)
!14463 = !DILocation(line: 188, column: 9, scope: !14459)
!14464 = !DILocation(line: 188, column: 2, scope: !14459)
!14465 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12927, file: !12927, line: 181, type: !14466, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14468)
!14466 = !DISubroutineType(types: !14467)
!14467 = !{!279, !103}
!14468 = !{!14469}
!14469 = !DILocalVariable(name: "prio", arg: 1, scope: !14465, file: !12927, line: 181, type: !103)
!14470 = !DILocation(line: 0, scope: !14465)
!14471 = !DILocation(line: 183, column: 14, scope: !14465)
!14472 = !DILocation(line: 183, column: 2, scope: !14465)
!14473 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2429, file: !2429, line: 201, type: !14182, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14474)
!14474 = !{!14475, !14476, !14477, !14478}
!14475 = !DILocalVariable(name: "mutex", arg: 1, scope: !14473, file: !2429, line: 201, type: !14184)
!14476 = !DILocalVariable(name: "new_owner", scope: !14473, file: !2429, line: 203, type: !2345)
!14477 = !DILocalVariable(name: "key", scope: !14473, file: !2429, line: 242, type: !14234)
!14478 = !DILabel(scope: !14473, name: "k_mutex_unlock_return", file: !2429, line: 270)
!14479 = !DILocation(line: 0, scope: !14473)
!14480 = !DILocation(line: 1031, column: 3, scope: !14245, inlinedAt: !14481)
!14481 = distinct !DILocation(line: 48, column: 10, scope: !14249, inlinedAt: !14482)
!14482 = distinct !DILocation(line: 205, column: 2, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14484, file: !2429, line: 205, column: 2)
!14484 = distinct !DILexicalBlock(scope: !14473, file: !2429, line: 205, column: 2)
!14485 = !DILocation(line: 0, scope: !14245, inlinedAt: !14481)
!14486 = !DILocation(line: 48, column: 9, scope: !14249, inlinedAt: !14482)
!14487 = !DILocation(line: 205, column: 2, scope: !14484)
!14488 = !DILocation(line: 205, column: 2, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14483, file: !2429, line: 205, column: 2)
!14490 = !DILocation(line: 209, column: 2, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14473, file: !2429, line: 209, column: 2)
!14492 = !DILocation(line: 209, column: 2, scope: !14473)
!14493 = !DILocation(line: 217, column: 2, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14473, file: !2429, line: 217, column: 2)
!14495 = !DILocation(line: 217, column: 2, scope: !14473)
!14496 = !DILocation(line: 229, column: 2, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14498, file: !2429, line: 229, column: 2)
!14498 = distinct !DILexicalBlock(scope: !14473, file: !2429, line: 229, column: 2)
!14499 = !DILocation(line: 229, column: 2, scope: !14498)
!14500 = !DILocation(line: 229, column: 2, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14497, file: !2429, line: 229, column: 2)
!14502 = !DILocation(line: 238, column: 20, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !2429, line: 237, column: 30)
!14504 = distinct !DILexicalBlock(scope: !14473, file: !2429, line: 237, column: 6)
!14505 = !DILocation(line: 239, column: 3, scope: !14503)
!14506 = !DILocation(line: 0, scope: !14260, inlinedAt: !14507)
!14507 = distinct !DILocation(line: 242, column: 25, scope: !14473)
!14508 = !DILocation(line: 55, column: 2, scope: !14269, inlinedAt: !14509)
!14509 = distinct !DILocation(line: 145, column: 10, scope: !14260, inlinedAt: !14507)
!14510 = !DILocation(line: 0, scope: !14269, inlinedAt: !14509)
!14511 = !DILocation(line: 148, column: 2, scope: !14277, inlinedAt: !14507)
!14512 = !DILocation(line: 148, column: 2, scope: !14278, inlinedAt: !14507)
!14513 = !DILocation(line: 148, column: 2, scope: !14281, inlinedAt: !14507)
!14514 = !DILocation(line: 160, column: 2, scope: !14260, inlinedAt: !14507)
!14515 = !DILocation(line: 244, column: 34, scope: !14473)
!14516 = !DILocation(line: 244, column: 2, scope: !14473)
!14517 = !DILocation(line: 247, column: 44, scope: !14473)
!14518 = !DILocation(line: 247, column: 14, scope: !14473)
!14519 = !DILocation(line: 249, column: 15, scope: !14473)
!14520 = !DILocation(line: 254, column: 16, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14473, file: !2429, line: 254, column: 6)
!14522 = !DILocation(line: 254, column: 6, scope: !14473)
!14523 = !DILocation(line: 260, column: 44, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14521, file: !2429, line: 254, column: 25)
!14525 = !DILocation(line: 260, column: 28, scope: !14524)
!14526 = !DILocation(line: 260, column: 26, scope: !14524)
!14527 = !DILocalVariable(name: "thread", arg: 1, scope: !14528, file: !12947, line: 65, type: !2345)
!14528 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12947, file: !12947, line: 65, type: !14529, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14531)
!14529 = !DISubroutineType(types: !14530)
!14530 = !{null, !2345, !32}
!14531 = !{!14527, !14532}
!14532 = !DILocalVariable(name: "value", arg: 2, scope: !14528, file: !12947, line: 65, type: !32)
!14533 = !DILocation(line: 0, scope: !14528, inlinedAt: !14534)
!14534 = distinct !DILocation(line: 261, column: 3, scope: !14524)
!14535 = !DILocation(line: 67, column: 15, scope: !14528, inlinedAt: !14534)
!14536 = !DILocation(line: 67, column: 33, scope: !14528, inlinedAt: !14534)
!14537 = !DILocation(line: 262, column: 3, scope: !14524)
!14538 = !DILocation(line: 263, column: 3, scope: !14524)
!14539 = !DILocation(line: 264, column: 2, scope: !14524)
!14540 = !DILocation(line: 265, column: 21, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14521, file: !2429, line: 264, column: 9)
!14542 = !DILocation(line: 0, scope: !14299, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 266, column: 3, scope: !14541)
!14544 = !DILocation(line: 194, column: 2, scope: !14307, inlinedAt: !14543)
!14545 = !DILocation(line: 194, column: 2, scope: !14308, inlinedAt: !14543)
!14546 = !DILocation(line: 194, column: 2, scope: !14311, inlinedAt: !14543)
!14547 = !DILocation(line: 0, scope: !14313, inlinedAt: !14548)
!14548 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14543)
!14549 = !DILocation(line: 95, column: 2, scope: !14313, inlinedAt: !14548)
!14550 = !DILocation(line: 274, column: 1, scope: !14473)
!14551 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2451, file: !2451, line: 41, type: !14552, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14565)
!14552 = !DISubroutineType(types: !14553)
!14553 = !{!103, !14554, !32, !32}
!14554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14555, size: 32)
!14555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !110, line: 2909, size: 128, elements: !14556)
!14556 = !{!14557, !14563, !14564}
!14557 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14555, file: !110, line: 2910, baseType: !14558, size: 64)
!14558 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !14559)
!14559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !14560)
!14560 = !{!14561}
!14561 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14559, file: !167, line: 232, baseType: !14562, size: 64)
!14562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2437)
!14563 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14555, file: !110, line: 2911, baseType: !32, size: 32, offset: 64)
!14564 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14555, file: !110, line: 2912, baseType: !32, size: 32, offset: 96)
!14565 = !{!14566, !14567, !14568}
!14566 = !DILocalVariable(name: "sem", arg: 1, scope: !14551, file: !2451, line: 41, type: !14554)
!14567 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14551, file: !2451, line: 41, type: !32)
!14568 = !DILocalVariable(name: "limit", arg: 3, scope: !14551, file: !2451, line: 42, type: !32)
!14569 = !DILocation(line: 0, scope: !14551)
!14570 = !DILocation(line: 47, column: 2, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14551, file: !2451, line: 47, column: 2)
!14572 = !DILocation(line: 53, column: 7, scope: !14551)
!14573 = !DILocation(line: 53, column: 13, scope: !14551)
!14574 = !DILocation(line: 54, column: 7, scope: !14551)
!14575 = !DILocation(line: 54, column: 13, scope: !14551)
!14576 = !DILocation(line: 58, column: 21, scope: !14551)
!14577 = !DILocation(line: 58, column: 2, scope: !14551)
!14578 = !DILocation(line: 64, column: 2, scope: !14551)
!14579 = !DILocation(line: 65, column: 1, scope: !14551)
!14580 = distinct !DISubprogram(name: "z_waitq_init", scope: !13282, file: !13282, line: 47, type: !14581, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14584)
!14581 = !DISubroutineType(types: !14582)
!14582 = !{null, !14583}
!14583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14558, size: 32)
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "w", arg: 1, scope: !14580, file: !13282, line: 47, type: !14583)
!14586 = !DILocation(line: 0, scope: !14580)
!14587 = !DILocation(line: 49, column: 21, scope: !14580)
!14588 = !DILocation(line: 49, column: 2, scope: !14580)
!14589 = !DILocation(line: 50, column: 1, scope: !14580)
!14590 = distinct !DISubprogram(name: "sys_dlist_init", scope: !141, file: !141, line: 197, type: !14591, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14594)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{null, !14593}
!14593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14562, size: 32)
!14594 = !{!14595}
!14595 = !DILocalVariable(name: "list", arg: 1, scope: !14590, file: !141, line: 197, type: !14593)
!14596 = !DILocation(line: 0, scope: !14590)
!14597 = !DILocation(line: 199, column: 8, scope: !14590)
!14598 = !DILocation(line: 199, column: 13, scope: !14590)
!14599 = !DILocation(line: 200, column: 8, scope: !14590)
!14600 = !DILocation(line: 200, column: 13, scope: !14590)
!14601 = !DILocation(line: 201, column: 1, scope: !14590)
!14602 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2451, file: !2451, line: 86, type: !14603, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14605)
!14603 = !DISubroutineType(types: !14604)
!14604 = !{null, !14554}
!14605 = !{!14606, !14607, !14612}
!14606 = !DILocalVariable(name: "sem", arg: 1, scope: !14602, file: !2451, line: 86, type: !14554)
!14607 = !DILocalVariable(name: "key", scope: !14602, file: !2451, line: 88, type: !14608)
!14608 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !14609)
!14609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !14610)
!14610 = !{!14611}
!14611 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14609, file: !244, line: 33, baseType: !103, size: 32)
!14612 = !DILocalVariable(name: "thread", scope: !14602, file: !2451, line: 89, type: !14613)
!14613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14614, size: 32)
!14614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !131, line: 245, size: 1152, elements: !14615)
!14615 = !{!14616, !14654, !14666, !14667, !14668, !14669, !14670, !14682}
!14616 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14614, file: !131, line: 247, baseType: !14617, size: 384)
!14617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !131, line: 57, size: 384, elements: !14618)
!14618 = !{!14619, !14629, !14630, !14631, !14632, !14641, !14642, !14643}
!14619 = !DIDerivedType(tag: DW_TAG_member, scope: !14617, file: !131, line: 60, baseType: !14620, size: 64)
!14620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14617, file: !131, line: 60, size: 64, elements: !14621)
!14621 = !{!14622, !14623}
!14622 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14620, file: !131, line: 61, baseType: !2436, size: 64)
!14623 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14620, file: !131, line: 62, baseType: !14624, size: 64)
!14624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !14625)
!14625 = !{!14626}
!14626 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14624, file: !157, line: 50, baseType: !14627, size: 64)
!14627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14628, size: 64, elements: !162)
!14628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14624, size: 32)
!14629 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14617, file: !131, line: 68, baseType: !14583, size: 32, offset: 64)
!14630 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14617, file: !131, line: 71, baseType: !173, size: 8, offset: 96)
!14631 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14617, file: !131, line: 74, baseType: !173, size: 8, offset: 104)
!14632 = !DIDerivedType(tag: DW_TAG_member, scope: !14617, file: !131, line: 90, baseType: !14633, size: 16, offset: 112)
!14633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14617, file: !131, line: 90, size: 16, elements: !14634)
!14634 = !{!14635, !14640}
!14635 = !DIDerivedType(tag: DW_TAG_member, scope: !14633, file: !131, line: 91, baseType: !14636, size: 16)
!14636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14633, file: !131, line: 91, size: 16, elements: !14637)
!14637 = !{!14638, !14639}
!14638 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14636, file: !131, line: 96, baseType: !183, size: 8)
!14639 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14636, file: !131, line: 97, baseType: !173, size: 8, offset: 8)
!14640 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14633, file: !131, line: 100, baseType: !187, size: 16)
!14641 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14617, file: !131, line: 107, baseType: !190, size: 32, offset: 128)
!14642 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14617, file: !131, line: 127, baseType: !102, size: 32, offset: 160)
!14643 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14617, file: !131, line: 131, baseType: !14644, size: 192, offset: 192)
!14644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !167, line: 244, size: 192, elements: !14645)
!14645 = !{!14646, !14647, !14653}
!14646 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14644, file: !167, line: 245, baseType: !2436, size: 64)
!14647 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14644, file: !167, line: 246, baseType: !14648, size: 32, offset: 64)
!14648 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !167, line: 242, baseType: !14649)
!14649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14650, size: 32)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{null, !14652}
!14652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14644, size: 32)
!14653 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14644, file: !167, line: 249, baseType: !203, size: 64, offset: 128)
!14654 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14614, file: !131, line: 250, baseType: !14655, size: 288, offset: 384)
!14655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !207, line: 25, size: 288, elements: !14656)
!14656 = !{!14657, !14658, !14659, !14660, !14661, !14662, !14663, !14664, !14665}
!14657 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14655, file: !207, line: 26, baseType: !190, size: 32)
!14658 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14655, file: !207, line: 27, baseType: !190, size: 32, offset: 32)
!14659 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14655, file: !207, line: 28, baseType: !190, size: 32, offset: 64)
!14660 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14655, file: !207, line: 29, baseType: !190, size: 32, offset: 96)
!14661 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14655, file: !207, line: 30, baseType: !190, size: 32, offset: 128)
!14662 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14655, file: !207, line: 31, baseType: !190, size: 32, offset: 160)
!14663 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14655, file: !207, line: 32, baseType: !190, size: 32, offset: 192)
!14664 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14655, file: !207, line: 33, baseType: !190, size: 32, offset: 224)
!14665 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14655, file: !207, line: 34, baseType: !190, size: 32, offset: 256)
!14666 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14614, file: !131, line: 253, baseType: !102, size: 32, offset: 672)
!14667 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14614, file: !131, line: 256, baseType: !14558, size: 64, offset: 704)
!14668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14614, file: !131, line: 279, baseType: !221, size: 256, offset: 768)
!14669 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14614, file: !131, line: 294, baseType: !103, size: 32, offset: 1024)
!14670 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14614, file: !131, line: 325, baseType: !14671, size: 32, offset: 1056)
!14671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14672, size: 32)
!14672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !14673)
!14673 = !{!14674, !14680, !14681}
!14674 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14672, file: !110, line: 5074, baseType: !14675, size: 96)
!14675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !14676)
!14676 = !{!14677, !14678, !14679}
!14677 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14675, file: !232, line: 57, baseType: !235, size: 32)
!14678 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14675, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!14679 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14675, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!14680 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14672, file: !110, line: 5075, baseType: !14558, size: 64, offset: 96)
!14681 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14672, file: !110, line: 5076, baseType: !2452, size: 32, offset: 160)
!14682 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14614, file: !131, line: 343, baseType: !14683, size: 64, offset: 1088)
!14683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !207, line: 60, size: 64, elements: !14684)
!14684 = !{!14685, !14686}
!14685 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14683, file: !207, line: 63, baseType: !190, size: 32)
!14686 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14683, file: !207, line: 66, baseType: !190, size: 32, offset: 32)
!14687 = !DILocation(line: 0, scope: !14602)
!14688 = !DILocalVariable(name: "l", arg: 1, scope: !14689, file: !244, line: 136, type: !14692)
!14689 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !14690, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14693)
!14690 = !DISubroutineType(types: !14691)
!14691 = !{!14608, !14692}
!14692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!14693 = !{!14688, !14694}
!14694 = !DILocalVariable(name: "k", scope: !14689, file: !244, line: 139, type: !14608)
!14695 = !DILocation(line: 0, scope: !14689, inlinedAt: !14696)
!14696 = distinct !DILocation(line: 88, column: 25, scope: !14602)
!14697 = !DILocation(line: 55, column: 2, scope: !14698, inlinedAt: !14702)
!14698 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14699)
!14699 = !{!14700, !14701}
!14700 = !DILocalVariable(name: "key", scope: !14698, file: !7921, line: 44, type: !32)
!14701 = !DILocalVariable(name: "tmp", scope: !14698, file: !7921, line: 53, type: !32)
!14702 = distinct !DILocation(line: 145, column: 10, scope: !14689, inlinedAt: !14696)
!14703 = !{i64 2846341}
!14704 = !DILocation(line: 0, scope: !14698, inlinedAt: !14702)
!14705 = !DILocation(line: 148, column: 2, scope: !14706, inlinedAt: !14696)
!14706 = distinct !DILexicalBlock(scope: !14707, file: !244, line: 148, column: 2)
!14707 = distinct !DILexicalBlock(scope: !14689, file: !244, line: 148, column: 2)
!14708 = !DILocation(line: 148, column: 2, scope: !14707, inlinedAt: !14696)
!14709 = !DILocation(line: 148, column: 2, scope: !14710, inlinedAt: !14696)
!14710 = distinct !DILexicalBlock(scope: !14706, file: !244, line: 148, column: 2)
!14711 = !DILocation(line: 160, column: 2, scope: !14689, inlinedAt: !14696)
!14712 = !DILocation(line: 93, column: 39, scope: !14602)
!14713 = !DILocation(line: 93, column: 11, scope: !14602)
!14714 = !DILocation(line: 95, column: 13, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14602, file: !2451, line: 95, column: 6)
!14716 = !DILocation(line: 95, column: 6, scope: !14602)
!14717 = !DILocalVariable(name: "thread", arg: 1, scope: !14718, file: !12947, line: 65, type: !14613)
!14718 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12947, file: !12947, line: 65, type: !14719, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14721)
!14719 = !DISubroutineType(types: !14720)
!14720 = !{null, !14613, !32}
!14721 = !{!14717, !14722}
!14722 = !DILocalVariable(name: "value", arg: 2, scope: !14718, file: !12947, line: 65, type: !32)
!14723 = !DILocation(line: 0, scope: !14718, inlinedAt: !14724)
!14724 = distinct !DILocation(line: 96, column: 3, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14715, file: !2451, line: 95, column: 22)
!14726 = !DILocation(line: 67, column: 15, scope: !14718, inlinedAt: !14724)
!14727 = !DILocation(line: 67, column: 33, scope: !14718, inlinedAt: !14724)
!14728 = !DILocation(line: 97, column: 3, scope: !14725)
!14729 = !DILocation(line: 98, column: 2, scope: !14725)
!14730 = !DILocation(line: 99, column: 23, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14715, file: !2451, line: 98, column: 9)
!14732 = !DILocation(line: 99, column: 37, scope: !14731)
!14733 = !DILocation(line: 99, column: 29, scope: !14731)
!14734 = !DILocation(line: 99, column: 17, scope: !14731)
!14735 = !DILocation(line: 99, column: 14, scope: !14731)
!14736 = !DILocation(line: 103, column: 2, scope: !14602)
!14737 = !DILocation(line: 106, column: 1, scope: !14602)
!14738 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2451, file: !2451, line: 117, type: !14739, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14745)
!14739 = !DISubroutineType(types: !14740)
!14740 = !{!103, !14554, !14741}
!14741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !14742)
!14742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !14743)
!14743 = !{!14744}
!14744 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14742, file: !320, line: 66, baseType: !319, size: 64)
!14745 = !{!14746, !14747, !14748, !14749, !14750}
!14746 = !DILocalVariable(name: "sem", arg: 1, scope: !14738, file: !2451, line: 117, type: !14554)
!14747 = !DILocalVariable(name: "timeout", arg: 2, scope: !14738, file: !2451, line: 117, type: !14741)
!14748 = !DILocalVariable(name: "ret", scope: !14738, file: !2451, line: 119, type: !103)
!14749 = !DILocalVariable(name: "key", scope: !14738, file: !2451, line: 124, type: !14608)
!14750 = !DILabel(scope: !14738, name: "out", file: !2451, line: 145)
!14751 = !DILocation(line: 0, scope: !14738)
!14752 = !DILocation(line: 1031, column: 3, scope: !14753, inlinedAt: !14756)
!14753 = distinct !DISubprogram(name: "__get_IPSR", scope: !7800, file: !7800, line: 1027, type: !7887, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14754)
!14754 = !{!14755}
!14755 = !DILocalVariable(name: "result", scope: !14753, file: !7800, line: 1029, type: !190)
!14756 = distinct !DILocation(line: 48, column: 10, scope: !14757, inlinedAt: !14758)
!14757 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8796, file: !8796, line: 46, type: !8797, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2145)
!14758 = distinct !DILocation(line: 121, column: 2, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14760, file: !2451, line: 121, column: 2)
!14760 = distinct !DILexicalBlock(scope: !14738, file: !2451, line: 121, column: 2)
!14761 = !{i64 6983916}
!14762 = !DILocation(line: 0, scope: !14753, inlinedAt: !14756)
!14763 = !DILocation(line: 48, column: 9, scope: !14757, inlinedAt: !14758)
!14764 = !DILocation(line: 121, column: 2, scope: !14759)
!14765 = !DILocation(line: 121, column: 2, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !14759, file: !2451, line: 121, column: 2)
!14767 = !DILocation(line: 0, scope: !14689, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 124, column: 25, scope: !14738)
!14769 = !DILocation(line: 55, column: 2, scope: !14698, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 145, column: 10, scope: !14689, inlinedAt: !14768)
!14771 = !DILocation(line: 0, scope: !14698, inlinedAt: !14770)
!14772 = !DILocation(line: 148, column: 2, scope: !14706, inlinedAt: !14768)
!14773 = !DILocation(line: 148, column: 2, scope: !14707, inlinedAt: !14768)
!14774 = !DILocation(line: 148, column: 2, scope: !14710, inlinedAt: !14768)
!14775 = !DILocation(line: 160, column: 2, scope: !14689, inlinedAt: !14768)
!14776 = !DILocation(line: 128, column: 6, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14738, file: !2451, line: 128, column: 6)
!14778 = !DILocation(line: 128, column: 6, scope: !14738)
!14779 = !DILocation(line: 129, column: 13, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14777, file: !2451, line: 128, column: 31)
!14781 = !DILocalVariable(name: "key", arg: 2, scope: !14782, file: !244, line: 190, type: !14608)
!14782 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !14783, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14785)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{null, !14692, !14608}
!14785 = !{!14786, !14781}
!14786 = !DILocalVariable(name: "l", arg: 1, scope: !14782, file: !244, line: 189, type: !14692)
!14787 = !DILocation(line: 0, scope: !14782, inlinedAt: !14788)
!14788 = distinct !DILocation(line: 130, column: 3, scope: !14780)
!14789 = !DILocation(line: 194, column: 2, scope: !14790, inlinedAt: !14788)
!14790 = distinct !DILexicalBlock(scope: !14791, file: !244, line: 194, column: 2)
!14791 = distinct !DILexicalBlock(scope: !14782, file: !244, line: 194, column: 2)
!14792 = !DILocation(line: 194, column: 2, scope: !14791, inlinedAt: !14788)
!14793 = !DILocation(line: 194, column: 2, scope: !14794, inlinedAt: !14788)
!14794 = distinct !DILexicalBlock(scope: !14790, file: !244, line: 194, column: 2)
!14795 = !DILocalVariable(name: "key", arg: 1, scope: !14796, file: !7921, line: 84, type: !32)
!14796 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14797)
!14797 = !{!14795}
!14798 = !DILocation(line: 0, scope: !14796, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 215, column: 2, scope: !14782, inlinedAt: !14788)
!14800 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !14799)
!14801 = !{i64 2847158}
!14802 = !DILocation(line: 132, column: 3, scope: !14780)
!14803 = !DILocation(line: 135, column: 6, scope: !14738)
!14804 = !DILocation(line: 0, scope: !14782, inlinedAt: !14805)
!14805 = distinct !DILocation(line: 136, column: 3, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !2451, line: 135, column: 40)
!14807 = distinct !DILexicalBlock(scope: !14738, file: !2451, line: 135, column: 6)
!14808 = !DILocation(line: 194, column: 2, scope: !14790, inlinedAt: !14805)
!14809 = !DILocation(line: 194, column: 2, scope: !14791, inlinedAt: !14805)
!14810 = !DILocation(line: 194, column: 2, scope: !14794, inlinedAt: !14805)
!14811 = !DILocation(line: 0, scope: !14796, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 215, column: 2, scope: !14782, inlinedAt: !14805)
!14813 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !14812)
!14814 = !DILocation(line: 138, column: 3, scope: !14806)
!14815 = !DILocation(line: 143, column: 38, scope: !14738)
!14816 = !DILocation(line: 143, column: 8, scope: !14738)
!14817 = !DILocation(line: 143, column: 2, scope: !14738)
!14818 = !DILocation(line: 145, column: 1, scope: !14738)
!14819 = !DILocation(line: 148, column: 2, scope: !14738)
!14820 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2451, file: !2451, line: 151, type: !14603, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !14821)
!14821 = !{!14822, !14823, !14824}
!14822 = !DILocalVariable(name: "sem", arg: 1, scope: !14820, file: !2451, line: 151, type: !14554)
!14823 = !DILocalVariable(name: "thread", scope: !14820, file: !2451, line: 153, type: !14613)
!14824 = !DILocalVariable(name: "key", scope: !14820, file: !2451, line: 154, type: !14608)
!14825 = !DILocation(line: 0, scope: !14820)
!14826 = !DILocation(line: 0, scope: !14689, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 154, column: 25, scope: !14820)
!14828 = !DILocation(line: 55, column: 2, scope: !14698, inlinedAt: !14829)
!14829 = distinct !DILocation(line: 145, column: 10, scope: !14689, inlinedAt: !14827)
!14830 = !DILocation(line: 0, scope: !14698, inlinedAt: !14829)
!14831 = !DILocation(line: 148, column: 2, scope: !14706, inlinedAt: !14827)
!14832 = !DILocation(line: 148, column: 2, scope: !14707, inlinedAt: !14827)
!14833 = !DILocation(line: 148, column: 2, scope: !14710, inlinedAt: !14827)
!14834 = !DILocation(line: 160, column: 2, scope: !14689, inlinedAt: !14827)
!14835 = !DILocation(line: 157, column: 12, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14820, file: !2451, line: 156, column: 15)
!14837 = !DILocation(line: 158, column: 14, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14836, file: !2451, line: 158, column: 7)
!14839 = !DILocation(line: 158, column: 7, scope: !14836)
!14840 = !DILocation(line: 0, scope: !14718, inlinedAt: !14841)
!14841 = distinct !DILocation(line: 161, column: 3, scope: !14836)
!14842 = !DILocation(line: 67, column: 15, scope: !14718, inlinedAt: !14841)
!14843 = !DILocation(line: 67, column: 33, scope: !14718, inlinedAt: !14841)
!14844 = !DILocation(line: 162, column: 3, scope: !14836)
!14845 = distinct !{!14845, !14846, !14847}
!14846 = !DILocation(line: 156, column: 2, scope: !14820)
!14847 = !DILocation(line: 163, column: 2, scope: !14820)
!14848 = !DILocation(line: 164, column: 7, scope: !14820)
!14849 = !DILocation(line: 164, column: 13, scope: !14820)
!14850 = !DILocation(line: 170, column: 2, scope: !14820)
!14851 = !DILocation(line: 171, column: 1, scope: !14820)
!14852 = distinct !DISubprogram(name: "k_work_init", scope: !2636, file: !2636, line: 134, type: !14853, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14855)
!14853 = !DISubroutineType(types: !14854)
!14854 = !{null, !2484, !2494}
!14855 = !{!14856, !14857}
!14856 = !DILocalVariable(name: "work", arg: 1, scope: !14852, file: !2636, line: 134, type: !2484)
!14857 = !DILocalVariable(name: "handler", arg: 2, scope: !14852, file: !2636, line: 135, type: !2494)
!14858 = !DILocation(line: 0, scope: !14852)
!14859 = !DILocation(line: 137, column: 2, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14861, file: !2636, line: 137, column: 2)
!14861 = distinct !DILexicalBlock(scope: !14852, file: !2636, line: 137, column: 2)
!14862 = !DILocation(line: 137, column: 2, scope: !14861)
!14863 = !DILocation(line: 137, column: 2, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14860, file: !2636, line: 137, column: 2)
!14865 = !DILocation(line: 138, column: 2, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !2636, line: 138, column: 2)
!14867 = distinct !DILexicalBlock(scope: !14852, file: !2636, line: 138, column: 2)
!14868 = !DILocation(line: 138, column: 2, scope: !14867)
!14869 = !DILocation(line: 138, column: 2, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14866, file: !2636, line: 138, column: 2)
!14871 = !DILocation(line: 140, column: 10, scope: !14852)
!14872 = !DILocation(line: 143, column: 1, scope: !14852)
!14873 = distinct !DISubprogram(name: "k_work_busy_get", scope: !2636, file: !2636, line: 150, type: !14874, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14878)
!14874 = !DISubroutineType(types: !14875)
!14875 = !{!103, !14876}
!14876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14877, size: 32)
!14877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2485)
!14878 = !{!14879, !14880, !14885}
!14879 = !DILocalVariable(name: "work", arg: 1, scope: !14873, file: !2636, line: 150, type: !14876)
!14880 = !DILocalVariable(name: "key", scope: !14873, file: !2636, line: 152, type: !14881)
!14881 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !14882)
!14882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !14883)
!14883 = !{!14884}
!14884 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14882, file: !244, line: 33, baseType: !103, size: 32)
!14885 = !DILocalVariable(name: "ret", scope: !14873, file: !2636, line: 153, type: !103)
!14886 = !DILocation(line: 0, scope: !14873)
!14887 = !DILocalVariable(name: "l", arg: 1, scope: !14888, file: !244, line: 136, type: !14891)
!14888 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !14889, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14892)
!14889 = !DISubroutineType(types: !14890)
!14890 = !{!14881, !14891}
!14891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!14892 = !{!14887, !14893}
!14893 = !DILocalVariable(name: "k", scope: !14888, file: !244, line: 139, type: !14881)
!14894 = !DILocation(line: 0, scope: !14888, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 152, column: 25, scope: !14873)
!14896 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !14901)
!14897 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14898)
!14898 = !{!14899, !14900}
!14899 = !DILocalVariable(name: "key", scope: !14897, file: !7921, line: 44, type: !32)
!14900 = !DILocalVariable(name: "tmp", scope: !14897, file: !7921, line: 53, type: !32)
!14901 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !14895)
!14902 = !{i64 2870272}
!14903 = !DILocation(line: 0, scope: !14897, inlinedAt: !14901)
!14904 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !14895)
!14905 = distinct !DILexicalBlock(scope: !14906, file: !244, line: 148, column: 2)
!14906 = distinct !DILexicalBlock(scope: !14888, file: !244, line: 148, column: 2)
!14907 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !14895)
!14908 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !14895)
!14909 = distinct !DILexicalBlock(scope: !14905, file: !244, line: 148, column: 2)
!14910 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !14895)
!14911 = !DILocation(line: 153, column: 12, scope: !14873)
!14912 = !DILocalVariable(name: "key", arg: 2, scope: !14913, file: !244, line: 190, type: !14881)
!14913 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !14914, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14916)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{null, !14891, !14881}
!14916 = !{!14917, !14912}
!14917 = !DILocalVariable(name: "l", arg: 1, scope: !14913, file: !244, line: 189, type: !14891)
!14918 = !DILocation(line: 0, scope: !14913, inlinedAt: !14919)
!14919 = distinct !DILocation(line: 155, column: 2, scope: !14873)
!14920 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !14919)
!14921 = distinct !DILexicalBlock(scope: !14922, file: !244, line: 194, column: 2)
!14922 = distinct !DILexicalBlock(scope: !14913, file: !244, line: 194, column: 2)
!14923 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !14919)
!14924 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !14919)
!14925 = distinct !DILexicalBlock(scope: !14921, file: !244, line: 194, column: 2)
!14926 = !DILocalVariable(name: "key", arg: 1, scope: !14927, file: !7921, line: 84, type: !32)
!14927 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14928)
!14928 = !{!14926}
!14929 = !DILocation(line: 0, scope: !14927, inlinedAt: !14930)
!14930 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !14919)
!14931 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !14930)
!14932 = !{i64 2871089}
!14933 = !DILocation(line: 157, column: 2, scope: !14873)
!14934 = distinct !DISubprogram(name: "work_busy_get_locked", scope: !2636, file: !2636, line: 145, type: !14874, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14935)
!14935 = !{!14936}
!14936 = !DILocalVariable(name: "work", arg: 1, scope: !14934, file: !2636, line: 145, type: !14876)
!14937 = !DILocation(line: 0, scope: !14934)
!14938 = !DILocation(line: 147, column: 26, scope: !14934)
!14939 = !DILocation(line: 147, column: 9, scope: !14934)
!14940 = !DILocation(line: 147, column: 33, scope: !14934)
!14941 = !DILocation(line: 147, column: 2, scope: !14934)
!14942 = distinct !DISubprogram(name: "flags_get", scope: !2636, file: !2636, line: 55, type: !14943, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14947)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{!190, !14945}
!14945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14946, size: 32)
!14946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!14947 = !{!14948}
!14948 = !DILocalVariable(name: "flagp", arg: 1, scope: !14942, file: !2636, line: 55, type: !14945)
!14949 = !DILocation(line: 0, scope: !14942)
!14950 = !DILocation(line: 57, column: 9, scope: !14942)
!14951 = !DILocation(line: 57, column: 2, scope: !14942)
!14952 = distinct !DISubprogram(name: "z_work_submit_to_queue", scope: !2636, file: !2636, line: 369, type: !14953, scopeLine: 371, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14955)
!14953 = !DISubroutineType(types: !14954)
!14954 = !{!103, !2499, !2484}
!14955 = !{!14956, !14957, !14958, !14959}
!14956 = !DILocalVariable(name: "queue", arg: 1, scope: !14952, file: !2636, line: 369, type: !2499)
!14957 = !DILocalVariable(name: "work", arg: 2, scope: !14952, file: !2636, line: 370, type: !2484)
!14958 = !DILocalVariable(name: "key", scope: !14952, file: !2636, line: 374, type: !14881)
!14959 = !DILocalVariable(name: "ret", scope: !14952, file: !2636, line: 376, type: !103)
!14960 = !DILocation(line: 0, scope: !14952)
!14961 = !DILocation(line: 372, column: 2, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14963, file: !2636, line: 372, column: 2)
!14963 = distinct !DILexicalBlock(scope: !14952, file: !2636, line: 372, column: 2)
!14964 = !DILocation(line: 372, column: 2, scope: !14963)
!14965 = !DILocation(line: 372, column: 2, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14962, file: !2636, line: 372, column: 2)
!14967 = !DILocation(line: 0, scope: !14888, inlinedAt: !14968)
!14968 = distinct !DILocation(line: 374, column: 25, scope: !14952)
!14969 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !14970)
!14970 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !14968)
!14971 = !DILocation(line: 0, scope: !14897, inlinedAt: !14970)
!14972 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !14968)
!14973 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !14968)
!14974 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !14968)
!14975 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !14968)
!14976 = !DILocation(line: 376, column: 12, scope: !14952)
!14977 = !DILocation(line: 0, scope: !14913, inlinedAt: !14978)
!14978 = distinct !DILocation(line: 378, column: 2, scope: !14952)
!14979 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !14978)
!14980 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !14978)
!14981 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !14978)
!14982 = !DILocation(line: 0, scope: !14927, inlinedAt: !14983)
!14983 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !14978)
!14984 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !14983)
!14985 = !DILocation(line: 380, column: 2, scope: !14952)
!14986 = distinct !DISubprogram(name: "submit_to_queue_locked", scope: !2636, file: !2636, line: 311, type: !14987, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !14990)
!14987 = !DISubroutineType(types: !14988)
!14988 = !{!103, !2484, !14989}
!14989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!14990 = !{!14991, !14992, !14993, !14994}
!14991 = !DILocalVariable(name: "work", arg: 1, scope: !14986, file: !2636, line: 311, type: !2484)
!14992 = !DILocalVariable(name: "queuep", arg: 2, scope: !14986, file: !2636, line: 312, type: !14989)
!14993 = !DILocalVariable(name: "ret", scope: !14986, file: !2636, line: 314, type: !103)
!14994 = !DILocalVariable(name: "rc", scope: !14995, file: !2636, line: 339, type: !103)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !2636, line: 319, column: 58)
!14996 = distinct !DILexicalBlock(scope: !14997, file: !2636, line: 319, column: 13)
!14997 = distinct !DILexicalBlock(scope: !14986, file: !2636, line: 316, column: 6)
!14998 = !DILocation(line: 0, scope: !14986)
!14999 = !DILocation(line: 316, column: 23, scope: !14997)
!15000 = !DILocation(line: 316, column: 6, scope: !14997)
!15001 = !DILocation(line: 316, column: 6, scope: !14986)
!15002 = !DILocation(line: 319, column: 14, scope: !14996)
!15003 = !DILocation(line: 319, column: 13, scope: !14997)
!15004 = !DILocation(line: 325, column: 7, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !14995, file: !2636, line: 325, column: 7)
!15006 = !DILocation(line: 325, column: 15, scope: !15005)
!15007 = !DILocation(line: 325, column: 7, scope: !14995)
!15008 = !DILocation(line: 326, column: 20, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15005, file: !2636, line: 325, column: 24)
!15010 = !DILocation(line: 326, column: 12, scope: !15009)
!15011 = !DILocation(line: 327, column: 3, scope: !15009)
!15012 = !DILocation(line: 333, column: 7, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !14995, file: !2636, line: 333, column: 7)
!15014 = !DILocation(line: 333, column: 7, scope: !14995)
!15015 = !DILocation(line: 334, column: 4, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15017, file: !2636, line: 334, column: 4)
!15017 = distinct !DILexicalBlock(scope: !15018, file: !2636, line: 334, column: 4)
!15018 = distinct !DILexicalBlock(scope: !15013, file: !2636, line: 333, column: 52)
!15019 = !DILocation(line: 334, column: 4, scope: !15017)
!15020 = !DILocation(line: 334, column: 4, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15016, file: !2636, line: 334, column: 4)
!15022 = !DILocation(line: 335, column: 12, scope: !15018)
!15023 = !DILocation(line: 337, column: 3, scope: !15018)
!15024 = !DILocation(line: 339, column: 32, scope: !14995)
!15025 = !DILocation(line: 0, scope: !14995)
!15026 = !DILocation(line: 339, column: 12, scope: !14995)
!15027 = !DILocation(line: 341, column: 10, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !14995, file: !2636, line: 341, column: 7)
!15029 = !DILocation(line: 341, column: 7, scope: !14995)
!15030 = !DILocation(line: 344, column: 4, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15028, file: !2636, line: 343, column: 10)
!15032 = !DILocation(line: 345, column: 18, scope: !15031)
!15033 = !DILocation(line: 345, column: 10, scope: !15031)
!15034 = !DILocation(line: 345, column: 16, scope: !15031)
!15035 = !DILocation(line: 351, column: 6, scope: !14986)
!15036 = !DILocation(line: 352, column: 11, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15038, file: !2636, line: 351, column: 16)
!15038 = distinct !DILexicalBlock(scope: !14986, file: !2636, line: 351, column: 6)
!15039 = !DILocation(line: 353, column: 2, scope: !15037)
!15040 = !DILocation(line: 355, column: 2, scope: !14986)
!15041 = distinct !DISubprogram(name: "flag_test", scope: !2636, file: !2636, line: 33, type: !15042, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15044)
!15042 = !DISubroutineType(types: !15043)
!15043 = !{!279, !14945, !190}
!15044 = !{!15045, !15046}
!15045 = !DILocalVariable(name: "flagp", arg: 1, scope: !15041, file: !2636, line: 33, type: !14945)
!15046 = !DILocalVariable(name: "bit", arg: 2, scope: !15041, file: !2636, line: 34, type: !190)
!15047 = !DILocation(line: 0, scope: !15041)
!15048 = !DILocation(line: 36, column: 10, scope: !15041)
!15049 = !DILocation(line: 36, column: 19, scope: !15041)
!15050 = !DILocation(line: 36, column: 17, scope: !15041)
!15051 = !DILocation(line: 36, column: 29, scope: !15041)
!15052 = !DILocation(line: 36, column: 2, scope: !15041)
!15053 = distinct !DISubprogram(name: "queue_submit_locked", scope: !2636, file: !2636, line: 251, type: !14953, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15054)
!15054 = !{!15055, !15056, !15057, !15058, !15059, !15060}
!15055 = !DILocalVariable(name: "queue", arg: 1, scope: !15053, file: !2636, line: 251, type: !2499)
!15056 = !DILocalVariable(name: "work", arg: 2, scope: !15053, file: !2636, line: 252, type: !2484)
!15057 = !DILocalVariable(name: "ret", scope: !15053, file: !2636, line: 258, type: !103)
!15058 = !DILocalVariable(name: "chained", scope: !15053, file: !2636, line: 259, type: !279)
!15059 = !DILocalVariable(name: "draining", scope: !15053, file: !2636, line: 260, type: !279)
!15060 = !DILocalVariable(name: "plugged", scope: !15053, file: !2636, line: 261, type: !279)
!15061 = !DILocation(line: 0, scope: !15053)
!15062 = !DILocation(line: 254, column: 12, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15053, file: !2636, line: 254, column: 6)
!15064 = !DILocation(line: 254, column: 6, scope: !15053)
!15065 = !DILocation(line: 259, column: 18, scope: !15053)
!15066 = !DILocation(line: 259, column: 38, scope: !15053)
!15067 = !DILocation(line: 259, column: 27, scope: !15053)
!15068 = !DILocation(line: 259, column: 46, scope: !15053)
!15069 = !DILocation(line: 259, column: 50, scope: !15053)
!15070 = !DILocation(line: 259, column: 49, scope: !15053)
!15071 = !DILocation(line: 260, column: 36, scope: !15053)
!15072 = !DILocation(line: 260, column: 18, scope: !15053)
!15073 = !DILocation(line: 261, column: 17, scope: !15053)
!15074 = !DILocation(line: 270, column: 7, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15053, file: !2636, line: 270, column: 6)
!15076 = !DILocation(line: 270, column: 6, scope: !15053)
!15077 = !DILocation(line: 272, column: 22, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15075, file: !2636, line: 272, column: 13)
!15079 = !DILocation(line: 274, column: 21, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15078, file: !2636, line: 274, column: 13)
!15081 = !DILocation(line: 277, column: 28, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15080, file: !2636, line: 276, column: 9)
!15083 = !DILocation(line: 277, column: 44, scope: !15082)
!15084 = !DILocation(line: 277, column: 3, scope: !15082)
!15085 = !DILocation(line: 279, column: 9, scope: !15082)
!15086 = !DILocation(line: 283, column: 1, scope: !15053)
!15087 = distinct !DISubprogram(name: "flag_set", scope: !2636, file: !2636, line: 27, type: !15088, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15090)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{null, !1601, !190}
!15090 = !{!15091, !15092}
!15091 = !DILocalVariable(name: "flagp", arg: 1, scope: !15087, file: !2636, line: 27, type: !1601)
!15092 = !DILocalVariable(name: "bit", arg: 2, scope: !15087, file: !2636, line: 28, type: !190)
!15093 = !DILocation(line: 0, scope: !15087)
!15094 = !DILocation(line: 30, column: 12, scope: !15087)
!15095 = !DILocation(line: 30, column: 9, scope: !15087)
!15096 = !DILocation(line: 31, column: 1, scope: !15087)
!15097 = distinct !DISubprogram(name: "sys_slist_append", scope: !114, file: !114, line: 311, type: !15098, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15101)
!15098 = !DISubroutineType(types: !15099)
!15099 = !{null, !15100, !2604}
!15100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!15101 = !{!15102, !15103}
!15102 = !DILocalVariable(name: "list", arg: 1, scope: !15097, file: !114, line: 311, type: !15100)
!15103 = !DILocalVariable(name: "node", arg: 2, scope: !15097, file: !114, line: 311, type: !2604)
!15104 = !DILocation(line: 0, scope: !15097)
!15105 = !DILocation(line: 311, column: 1, scope: !15097)
!15106 = !DILocation(line: 311, column: 1, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15097, file: !114, line: 311, column: 1)
!15108 = !DILocation(line: 311, column: 1, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15107, file: !114, line: 311, column: 1)
!15110 = !DILocation(line: 311, column: 1, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15107, file: !114, line: 311, column: 1)
!15112 = distinct !DISubprogram(name: "notify_queue_locked", scope: !2636, file: !2636, line: 221, type: !15113, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15115)
!15113 = !DISubroutineType(types: !15114)
!15114 = !{!279, !2499}
!15115 = !{!15116, !15117}
!15116 = !DILocalVariable(name: "queue", arg: 1, scope: !15112, file: !2636, line: 221, type: !2499)
!15117 = !DILocalVariable(name: "rv", scope: !15112, file: !2636, line: 223, type: !279)
!15118 = !DILocation(line: 0, scope: !15112)
!15119 = !DILocation(line: 225, column: 12, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15112, file: !2636, line: 225, column: 6)
!15121 = !DILocation(line: 225, column: 6, scope: !15112)
!15122 = !DILocation(line: 226, column: 29, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15120, file: !2636, line: 225, column: 21)
!15124 = !DILocation(line: 226, column: 8, scope: !15123)
!15125 = !DILocation(line: 227, column: 2, scope: !15123)
!15126 = !DILocation(line: 229, column: 2, scope: !15112)
!15127 = distinct !DISubprogram(name: "z_snode_next_set", scope: !114, file: !114, line: 209, type: !15128, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15130)
!15128 = !DISubroutineType(types: !15129)
!15129 = !{null, !2604, !2604}
!15130 = !{!15131, !15132}
!15131 = !DILocalVariable(name: "parent", arg: 1, scope: !15127, file: !114, line: 209, type: !2604)
!15132 = !DILocalVariable(name: "child", arg: 2, scope: !15127, file: !114, line: 209, type: !2604)
!15133 = !DILocation(line: 0, scope: !15127)
!15134 = !DILocation(line: 211, column: 10, scope: !15127)
!15135 = !DILocation(line: 211, column: 15, scope: !15127)
!15136 = !DILocation(line: 212, column: 1, scope: !15127)
!15137 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !114, file: !114, line: 243, type: !15138, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15140)
!15138 = !DISubroutineType(types: !15139)
!15139 = !{!2604, !15100}
!15140 = !{!15141}
!15141 = !DILocalVariable(name: "list", arg: 1, scope: !15137, file: !114, line: 243, type: !15100)
!15142 = !DILocation(line: 0, scope: !15137)
!15143 = !DILocation(line: 245, column: 15, scope: !15137)
!15144 = !DILocation(line: 245, column: 2, scope: !15137)
!15145 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !114, file: !114, line: 219, type: !15098, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15146)
!15146 = !{!15147, !15148}
!15147 = !DILocalVariable(name: "list", arg: 1, scope: !15145, file: !114, line: 219, type: !15100)
!15148 = !DILocalVariable(name: "node", arg: 2, scope: !15145, file: !114, line: 219, type: !2604)
!15149 = !DILocation(line: 0, scope: !15145)
!15150 = !DILocation(line: 221, column: 8, scope: !15145)
!15151 = !DILocation(line: 221, column: 13, scope: !15145)
!15152 = !DILocation(line: 222, column: 1, scope: !15145)
!15153 = distinct !DISubprogram(name: "z_slist_head_set", scope: !114, file: !114, line: 214, type: !15098, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15154)
!15154 = !{!15155, !15156}
!15155 = !DILocalVariable(name: "list", arg: 1, scope: !15153, file: !114, line: 214, type: !15100)
!15156 = !DILocalVariable(name: "node", arg: 2, scope: !15153, file: !114, line: 214, type: !2604)
!15157 = !DILocation(line: 0, scope: !15153)
!15158 = !DILocation(line: 216, column: 8, scope: !15153)
!15159 = !DILocation(line: 216, column: 13, scope: !15153)
!15160 = !DILocation(line: 217, column: 1, scope: !15153)
!15161 = distinct !DISubprogram(name: "k_work_submit_to_queue", scope: !2636, file: !2636, line: 383, type: !14953, scopeLine: 385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15162)
!15162 = !{!15163, !15164, !15165}
!15163 = !DILocalVariable(name: "queue", arg: 1, scope: !15161, file: !2636, line: 383, type: !2499)
!15164 = !DILocalVariable(name: "work", arg: 2, scope: !15161, file: !2636, line: 384, type: !2484)
!15165 = !DILocalVariable(name: "ret", scope: !15161, file: !2636, line: 388, type: !103)
!15166 = !DILocation(line: 0, scope: !15161)
!15167 = !DILocation(line: 388, column: 12, scope: !15161)
!15168 = !DILocation(line: 395, column: 10, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15161, file: !2636, line: 395, column: 6)
!15170 = !DILocation(line: 395, column: 6, scope: !15161)
!15171 = !DILocation(line: 396, column: 3, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15169, file: !2636, line: 395, column: 15)
!15173 = !DILocation(line: 397, column: 2, scope: !15172)
!15174 = !DILocation(line: 401, column: 2, scope: !15161)
!15175 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12927, file: !12927, line: 73, type: !374, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !2145)
!15176 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !15177)
!15177 = distinct !DILocation(line: 75, column: 30, scope: !15175)
!15178 = !DILocation(line: 0, scope: !14897, inlinedAt: !15177)
!15179 = !DILocation(line: 75, column: 9, scope: !15175)
!15180 = !DILocation(line: 76, column: 1, scope: !15175)
!15181 = distinct !DISubprogram(name: "k_work_submit", scope: !2636, file: !2636, line: 404, type: !15182, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15184)
!15182 = !DISubroutineType(types: !15183)
!15183 = !{!103, !2484}
!15184 = !{!15185, !15186}
!15185 = !DILocalVariable(name: "work", arg: 1, scope: !15181, file: !2636, line: 404, type: !2484)
!15186 = !DILocalVariable(name: "ret", scope: !15181, file: !2636, line: 408, type: !103)
!15187 = !DILocation(line: 0, scope: !15181)
!15188 = !DILocation(line: 408, column: 12, scope: !15181)
!15189 = !DILocation(line: 412, column: 2, scope: !15181)
!15190 = distinct !DISubprogram(name: "k_work_flush", scope: !2636, file: !2636, line: 448, type: !15191, scopeLine: 450, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15201)
!15191 = !DISubroutineType(types: !15192)
!15192 = !{!279, !2484, !15193}
!15193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15194, size: 32)
!15194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work_sync", file: !110, line: 3774, size: 256, elements: !15195)
!15195 = !{!15196}
!15196 = !DIDerivedType(tag: DW_TAG_member, scope: !15194, file: !110, line: 3775, baseType: !15197, size: 256)
!15197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15194, file: !110, line: 3775, size: 256, elements: !15198)
!15198 = !{!15199, !15200}
!15199 = !DIDerivedType(tag: DW_TAG_member, name: "flusher", scope: !15197, file: !110, line: 3776, baseType: !2611, size: 256)
!15200 = !DIDerivedType(tag: DW_TAG_member, name: "canceller", scope: !15197, file: !110, line: 3777, baseType: !2622, size: 192)
!15201 = !{!15202, !15203, !15204, !15205, !15206}
!15202 = !DILocalVariable(name: "work", arg: 1, scope: !15190, file: !2636, line: 448, type: !2484)
!15203 = !DILocalVariable(name: "sync", arg: 2, scope: !15190, file: !2636, line: 449, type: !15193)
!15204 = !DILocalVariable(name: "flusher", scope: !15190, file: !2636, line: 461, type: !2610)
!15205 = !DILocalVariable(name: "key", scope: !15190, file: !2636, line: 462, type: !14881)
!15206 = !DILocalVariable(name: "need_flush", scope: !15190, file: !2636, line: 464, type: !279)
!15207 = !DILocation(line: 0, scope: !15190)
!15208 = !DILocation(line: 451, column: 2, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !2636, line: 451, column: 2)
!15210 = distinct !DILexicalBlock(scope: !15190, file: !2636, line: 451, column: 2)
!15211 = !DILocation(line: 451, column: 2, scope: !15210)
!15212 = !DILocation(line: 451, column: 2, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15209, file: !2636, line: 451, column: 2)
!15214 = !DILocation(line: 452, column: 2, scope: !15215)
!15215 = distinct !DILexicalBlock(scope: !15216, file: !2636, line: 452, column: 2)
!15216 = distinct !DILexicalBlock(scope: !15190, file: !2636, line: 452, column: 2)
!15217 = !DILocation(line: 452, column: 2, scope: !15216)
!15218 = !DILocation(line: 452, column: 2, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15215, file: !2636, line: 452, column: 2)
!15220 = !DILocation(line: 453, column: 2, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15222, file: !2636, line: 453, column: 2)
!15222 = distinct !DILexicalBlock(scope: !15190, file: !2636, line: 453, column: 2)
!15223 = !DILocation(line: 453, column: 2, scope: !15222)
!15224 = !DILocation(line: 453, column: 2, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15221, file: !2636, line: 453, column: 2)
!15226 = !DILocation(line: 454, column: 2, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !2636, line: 454, column: 2)
!15228 = distinct !DILexicalBlock(scope: !15190, file: !2636, line: 454, column: 2)
!15229 = !DILocation(line: 454, column: 2, scope: !15228)
!15230 = !DILocation(line: 454, column: 2, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15227, file: !2636, line: 454, column: 2)
!15232 = !DILocation(line: 0, scope: !14888, inlinedAt: !15233)
!15233 = distinct !DILocation(line: 462, column: 25, scope: !15190)
!15234 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !15233)
!15236 = !DILocation(line: 0, scope: !14897, inlinedAt: !15235)
!15237 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !15233)
!15238 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !15233)
!15239 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !15233)
!15240 = !DILocation(line: 461, column: 42, scope: !15190)
!15241 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !15233)
!15242 = !DILocation(line: 464, column: 20, scope: !15190)
!15243 = !DILocation(line: 0, scope: !14913, inlinedAt: !15244)
!15244 = distinct !DILocation(line: 466, column: 2, scope: !15190)
!15245 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !15244)
!15246 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !15244)
!15247 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !15244)
!15248 = !DILocation(line: 0, scope: !14927, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !15244)
!15250 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !15249)
!15251 = !DILocation(line: 469, column: 6, scope: !15190)
!15252 = !DILocation(line: 472, column: 24, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !2636, line: 469, column: 18)
!15254 = distinct !DILexicalBlock(scope: !15190, file: !2636, line: 469, column: 6)
!15255 = !DILocation(line: 472, column: 3, scope: !15253)
!15256 = !DILocation(line: 473, column: 2, scope: !15253)
!15257 = !DILocation(line: 477, column: 2, scope: !15190)
!15258 = distinct !DISubprogram(name: "work_flush_locked", scope: !2636, file: !2636, line: 430, type: !15259, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15261)
!15259 = !DISubroutineType(types: !15260)
!15260 = !{!279, !2484, !2610}
!15261 = !{!15262, !15263, !15264, !15265}
!15262 = !DILocalVariable(name: "work", arg: 1, scope: !15258, file: !2636, line: 430, type: !2484)
!15263 = !DILocalVariable(name: "flusher", arg: 2, scope: !15258, file: !2636, line: 431, type: !2610)
!15264 = !DILocalVariable(name: "need_flush", scope: !15258, file: !2636, line: 433, type: !279)
!15265 = !DILocalVariable(name: "queue", scope: !15266, file: !2636, line: 437, type: !2499)
!15266 = distinct !DILexicalBlock(scope: !15267, file: !2636, line: 436, column: 18)
!15267 = distinct !DILexicalBlock(scope: !15258, file: !2636, line: 436, column: 6)
!15268 = !DILocation(line: 0, scope: !15258)
!15269 = !DILocation(line: 433, column: 38, scope: !15258)
!15270 = !DILocation(line: 433, column: 21, scope: !15258)
!15271 = !DILocation(line: 434, column: 7, scope: !15258)
!15272 = !DILocation(line: 434, column: 43, scope: !15258)
!15273 = !DILocation(line: 436, column: 6, scope: !15258)
!15274 = !DILocation(line: 437, column: 34, scope: !15266)
!15275 = !DILocation(line: 0, scope: !15266)
!15276 = !DILocation(line: 439, column: 3, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15278, file: !2636, line: 439, column: 3)
!15278 = distinct !DILexicalBlock(scope: !15266, file: !2636, line: 439, column: 3)
!15279 = !DILocation(line: 439, column: 3, scope: !15278)
!15280 = !DILocation(line: 439, column: 3, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15277, file: !2636, line: 439, column: 3)
!15282 = !DILocation(line: 441, column: 3, scope: !15266)
!15283 = !DILocation(line: 442, column: 3, scope: !15266)
!15284 = !DILocation(line: 443, column: 2, scope: !15266)
!15285 = !DILocation(line: 445, column: 2, scope: !15258)
!15286 = distinct !DISubprogram(name: "k_sem_take", scope: !4037, file: !4037, line: 1044, type: !15287, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15294)
!15287 = !DISubroutineType(types: !15288)
!15288 = !{!103, !15289, !15290}
!15289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!15290 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !15291)
!15291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !15292)
!15292 = !{!15293}
!15293 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15291, file: !320, line: 66, baseType: !319, size: 64)
!15294 = !{!15295, !15296}
!15295 = !DILocalVariable(name: "sem", arg: 1, scope: !15286, file: !4037, line: 1044, type: !15289)
!15296 = !DILocalVariable(name: "timeout", arg: 2, scope: !15286, file: !4037, line: 1044, type: !15290)
!15297 = !DILocation(line: 0, scope: !15286)
!15298 = !DILocation(line: 1053, column: 2, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15286, file: !4037, line: 1053, column: 2)
!15300 = !{i64 2151072851}
!15301 = !DILocation(line: 1054, column: 9, scope: !15286)
!15302 = !DILocation(line: 1054, column: 2, scope: !15286)
!15303 = distinct !DISubprogram(name: "queue_flusher_locked", scope: !2636, file: !2636, line: 171, type: !15304, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15306)
!15304 = !DISubroutineType(types: !15305)
!15305 = !{null, !2499, !2484, !2610}
!15306 = !{!15307, !15308, !15309, !15310, !15311}
!15307 = !DILocalVariable(name: "queue", arg: 1, scope: !15303, file: !2636, line: 171, type: !2499)
!15308 = !DILocalVariable(name: "work", arg: 2, scope: !15303, file: !2636, line: 172, type: !2484)
!15309 = !DILocalVariable(name: "flusher", arg: 3, scope: !15303, file: !2636, line: 173, type: !2610)
!15310 = !DILocalVariable(name: "in_list", scope: !15303, file: !2636, line: 175, type: !279)
!15311 = !DILocalVariable(name: "wn", scope: !15303, file: !2636, line: 176, type: !2484)
!15312 = !DILocation(line: 0, scope: !15303)
!15313 = !DILocation(line: 179, column: 2, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15303, file: !2636, line: 179, column: 2)
!15315 = !DILocation(line: 179, column: 2, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15314, file: !2636, line: 179, column: 2)
!15317 = !DILocation(line: 0, scope: !15314)
!15318 = !DILocation(line: 180, column: 10, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15320, file: !2636, line: 180, column: 7)
!15320 = distinct !DILexicalBlock(scope: !15316, file: !2636, line: 179, column: 58)
!15321 = !DILocation(line: 180, column: 7, scope: !15320)
!15322 = distinct !{!15322, !15313, !15323}
!15323 = !DILocation(line: 184, column: 2, scope: !15314)
!15324 = !DILocation(line: 186, column: 2, scope: !15303)
!15325 = !DILocation(line: 188, column: 44, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15327, file: !2636, line: 187, column: 15)
!15327 = distinct !DILexicalBlock(scope: !15303, file: !2636, line: 187, column: 6)
!15328 = !DILocation(line: 189, column: 21, scope: !15326)
!15329 = !DILocation(line: 188, column: 3, scope: !15326)
!15330 = !DILocation(line: 190, column: 2, scope: !15326)
!15331 = !DILocation(line: 191, column: 53, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15327, file: !2636, line: 190, column: 9)
!15333 = !DILocation(line: 191, column: 3, scope: !15332)
!15334 = !DILocation(line: 193, column: 1, scope: !15303)
!15335 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !114, file: !114, line: 231, type: !15138, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15336)
!15336 = !{!15337}
!15337 = !DILocalVariable(name: "list", arg: 1, scope: !15335, file: !114, line: 231, type: !15100)
!15338 = !DILocation(line: 0, scope: !15335)
!15339 = !DILocation(line: 233, column: 15, scope: !15335)
!15340 = !DILocation(line: 233, column: 2, scope: !15335)
!15341 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !114, file: !114, line: 285, type: !15342, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15344)
!15342 = !DISubroutineType(types: !15343)
!15343 = !{!2604, !2604}
!15344 = !{!15345}
!15345 = !DILocalVariable(name: "node", arg: 1, scope: !15341, file: !114, line: 285, type: !2604)
!15346 = !DILocation(line: 0, scope: !15341)
!15347 = !DILocation(line: 285, column: 1, scope: !15341)
!15348 = distinct !DISubprogram(name: "init_flusher", scope: !2636, file: !2636, line: 74, type: !15349, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15351)
!15349 = !DISubroutineType(types: !15350)
!15350 = !{null, !2610}
!15351 = !{!15352}
!15352 = !DILocalVariable(name: "flusher", arg: 1, scope: !15348, file: !2636, line: 74, type: !2610)
!15353 = !DILocation(line: 0, scope: !15348)
!15354 = !DILocation(line: 76, column: 23, scope: !15348)
!15355 = !DILocation(line: 76, column: 2, scope: !15348)
!15356 = !DILocation(line: 77, column: 24, scope: !15348)
!15357 = !DILocation(line: 77, column: 2, scope: !15348)
!15358 = !DILocation(line: 78, column: 1, scope: !15348)
!15359 = distinct !DISubprogram(name: "sys_slist_insert", scope: !114, file: !114, line: 358, type: !15360, scopeLine: 358, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15362)
!15360 = !DISubroutineType(types: !15361)
!15361 = !{null, !15100, !2604, !2604}
!15362 = !{!15363, !15364, !15365}
!15363 = !DILocalVariable(name: "list", arg: 1, scope: !15359, file: !114, line: 358, type: !15100)
!15364 = !DILocalVariable(name: "prev", arg: 2, scope: !15359, file: !114, line: 358, type: !2604)
!15365 = !DILocalVariable(name: "node", arg: 3, scope: !15359, file: !114, line: 358, type: !2604)
!15366 = !DILocation(line: 0, scope: !15359)
!15367 = !DILocation(line: 358, column: 1, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15359, file: !114, line: 358, column: 1)
!15369 = !DILocation(line: 358, column: 1, scope: !15359)
!15370 = !DILocation(line: 358, column: 1, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15368, file: !114, line: 358, column: 1)
!15372 = !DILocation(line: 358, column: 1, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15368, file: !114, line: 358, column: 1)
!15374 = !DILocation(line: 358, column: 1, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15373, file: !114, line: 358, column: 1)
!15376 = !DILocation(line: 358, column: 1, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15373, file: !114, line: 358, column: 1)
!15378 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !114, file: !114, line: 298, type: !15098, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15379)
!15379 = !{!15380, !15381}
!15380 = !DILocalVariable(name: "list", arg: 1, scope: !15378, file: !114, line: 298, type: !15100)
!15381 = !DILocalVariable(name: "node", arg: 2, scope: !15378, file: !114, line: 298, type: !2604)
!15382 = !DILocation(line: 0, scope: !15378)
!15383 = !DILocation(line: 298, column: 1, scope: !15378)
!15384 = !DILocation(line: 298, column: 1, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15378, file: !114, line: 298, column: 1)
!15386 = !DILocation(line: 298, column: 1, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !15385, file: !114, line: 298, column: 1)
!15388 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !114, file: !114, line: 204, type: !15342, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15389)
!15389 = !{!15390}
!15390 = !DILocalVariable(name: "node", arg: 1, scope: !15388, file: !114, line: 204, type: !2604)
!15391 = !DILocation(line: 0, scope: !15388)
!15392 = !DILocation(line: 206, column: 15, scope: !15388)
!15393 = !DILocation(line: 206, column: 2, scope: !15388)
!15394 = distinct !DISubprogram(name: "k_sem_init", scope: !4037, file: !4037, line: 1026, type: !15395, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15397)
!15395 = !DISubroutineType(types: !15396)
!15396 = !{!103, !15289, !32, !32}
!15397 = !{!15398, !15399, !15400}
!15398 = !DILocalVariable(name: "sem", arg: 1, scope: !15394, file: !4037, line: 1026, type: !15289)
!15399 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15394, file: !4037, line: 1026, type: !32)
!15400 = !DILocalVariable(name: "limit", arg: 3, scope: !15394, file: !4037, line: 1026, type: !32)
!15401 = !DILocation(line: 0, scope: !15394)
!15402 = !DILocation(line: 1036, column: 2, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15394, file: !4037, line: 1036, column: 2)
!15404 = !{i64 2151072783}
!15405 = !DILocation(line: 1037, column: 9, scope: !15394)
!15406 = !DILocation(line: 1037, column: 2, scope: !15394)
!15407 = distinct !DISubprogram(name: "handle_flush", scope: !2636, file: !2636, line: 66, type: !2496, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15408)
!15408 = !{!15409, !15410}
!15409 = !DILocalVariable(name: "work", arg: 1, scope: !15407, file: !2636, line: 66, type: !2484)
!15410 = !DILocalVariable(name: "flusher", scope: !15407, file: !2636, line: 68, type: !2610)
!15411 = !DILocation(line: 0, scope: !15407)
!15412 = !DILocation(line: 71, column: 23, scope: !15407)
!15413 = !DILocation(line: 71, column: 2, scope: !15407)
!15414 = !DILocation(line: 72, column: 1, scope: !15407)
!15415 = distinct !DISubprogram(name: "k_sem_give", scope: !4037, file: !4037, line: 1061, type: !15416, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15418)
!15416 = !DISubroutineType(types: !15417)
!15417 = !{null, !15289}
!15418 = !{!15419}
!15419 = !DILocalVariable(name: "sem", arg: 1, scope: !15415, file: !4037, line: 1061, type: !15289)
!15420 = !DILocation(line: 0, scope: !15415)
!15421 = !DILocation(line: 1070, column: 2, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15415, file: !4037, line: 1070, column: 2)
!15423 = !{i64 2151072919}
!15424 = !DILocation(line: 1071, column: 2, scope: !15415)
!15425 = !DILocation(line: 1072, column: 1, scope: !15415)
!15426 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !114, file: !114, line: 274, type: !15342, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15427)
!15427 = !{!15428}
!15428 = !DILocalVariable(name: "node", arg: 1, scope: !15426, file: !114, line: 274, type: !2604)
!15429 = !DILocation(line: 0, scope: !15426)
!15430 = !DILocation(line: 274, column: 1, scope: !15426)
!15431 = distinct !DISubprogram(name: "k_work_cancel", scope: !2636, file: !2636, line: 543, type: !15182, scopeLine: 544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15432)
!15432 = !{!15433, !15434, !15435}
!15433 = !DILocalVariable(name: "work", arg: 1, scope: !15431, file: !2636, line: 543, type: !2484)
!15434 = !DILocalVariable(name: "key", scope: !15431, file: !2636, line: 550, type: !14881)
!15435 = !DILocalVariable(name: "ret", scope: !15431, file: !2636, line: 551, type: !103)
!15436 = !DILocation(line: 0, scope: !15431)
!15437 = !DILocation(line: 545, column: 2, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15439, file: !2636, line: 545, column: 2)
!15439 = distinct !DILexicalBlock(scope: !15431, file: !2636, line: 545, column: 2)
!15440 = !DILocation(line: 545, column: 2, scope: !15439)
!15441 = !DILocation(line: 545, column: 2, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15438, file: !2636, line: 545, column: 2)
!15443 = !DILocation(line: 546, column: 2, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15445, file: !2636, line: 546, column: 2)
!15445 = distinct !DILexicalBlock(scope: !15431, file: !2636, line: 546, column: 2)
!15446 = !DILocation(line: 546, column: 2, scope: !15445)
!15447 = !DILocation(line: 546, column: 2, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15444, file: !2636, line: 546, column: 2)
!15449 = !DILocation(line: 0, scope: !14888, inlinedAt: !15450)
!15450 = distinct !DILocation(line: 550, column: 25, scope: !15431)
!15451 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !15452)
!15452 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !15450)
!15453 = !DILocation(line: 0, scope: !14897, inlinedAt: !15452)
!15454 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !15450)
!15455 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !15450)
!15456 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !15450)
!15457 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !15450)
!15458 = !DILocation(line: 551, column: 12, scope: !15431)
!15459 = !DILocation(line: 0, scope: !14913, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 553, column: 2, scope: !15431)
!15461 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !15460)
!15462 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !15460)
!15463 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !15460)
!15464 = !DILocation(line: 0, scope: !14927, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !15460)
!15466 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !15465)
!15467 = !DILocation(line: 557, column: 2, scope: !15431)
!15468 = distinct !DISubprogram(name: "cancel_async_locked", scope: !2636, file: !2636, line: 491, type: !15182, scopeLine: 492, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15469)
!15469 = !{!15470, !15471}
!15470 = !DILocalVariable(name: "work", arg: 1, scope: !15468, file: !2636, line: 491, type: !2484)
!15471 = !DILocalVariable(name: "ret", scope: !15468, file: !2636, line: 502, type: !103)
!15472 = !DILocation(line: 0, scope: !15468)
!15473 = !DILocation(line: 494, column: 24, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15468, file: !2636, line: 494, column: 6)
!15475 = !DILocation(line: 494, column: 7, scope: !15474)
!15476 = !DILocation(line: 494, column: 6, scope: !15468)
!15477 = !DILocation(line: 496, column: 29, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15474, file: !2636, line: 494, column: 54)
!15479 = !DILocation(line: 496, column: 3, scope: !15478)
!15480 = !DILocation(line: 497, column: 2, scope: !15478)
!15481 = !DILocation(line: 502, column: 12, scope: !15468)
!15482 = !DILocation(line: 504, column: 10, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15468, file: !2636, line: 504, column: 6)
!15484 = !DILocation(line: 504, column: 6, scope: !15468)
!15485 = !DILocation(line: 505, column: 3, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15483, file: !2636, line: 504, column: 16)
!15487 = !DILocation(line: 506, column: 9, scope: !15486)
!15488 = !DILocation(line: 507, column: 2, scope: !15486)
!15489 = !DILocation(line: 509, column: 2, scope: !15468)
!15490 = distinct !DISubprogram(name: "queue_remove_locked", scope: !2636, file: !2636, line: 202, type: !15491, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15493)
!15491 = !DISubroutineType(types: !15492)
!15492 = !{null, !2499, !2484}
!15493 = !{!15494, !15495}
!15494 = !DILocalVariable(name: "queue", arg: 1, scope: !15490, file: !2636, line: 202, type: !2499)
!15495 = !DILocalVariable(name: "work", arg: 2, scope: !15490, file: !2636, line: 203, type: !2484)
!15496 = !DILocation(line: 0, scope: !15490)
!15497 = !DILocation(line: 205, column: 33, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15490, file: !2636, line: 205, column: 6)
!15499 = !DILocation(line: 205, column: 6, scope: !15498)
!15500 = !DILocation(line: 205, column: 6, scope: !15490)
!15501 = !DILocation(line: 206, column: 43, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15498, file: !2636, line: 205, column: 60)
!15503 = !DILocation(line: 206, column: 59, scope: !15502)
!15504 = !DILocation(line: 206, column: 9, scope: !15502)
!15505 = !DILocation(line: 207, column: 2, scope: !15502)
!15506 = !DILocation(line: 208, column: 1, scope: !15490)
!15507 = distinct !DISubprogram(name: "flag_test_and_clear", scope: !2636, file: !2636, line: 39, type: !15508, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15510)
!15508 = !DISubroutineType(types: !15509)
!15509 = !{!279, !1601, !103}
!15510 = !{!15511, !15512, !15513}
!15511 = !DILocalVariable(name: "flagp", arg: 1, scope: !15507, file: !2636, line: 39, type: !1601)
!15512 = !DILocalVariable(name: "bit", arg: 2, scope: !15507, file: !2636, line: 40, type: !103)
!15513 = !DILocalVariable(name: "ret", scope: !15507, file: !2636, line: 42, type: !279)
!15514 = !DILocation(line: 0, scope: !15507)
!15515 = !DILocation(line: 42, column: 13, scope: !15507)
!15516 = !DILocation(line: 44, column: 2, scope: !15507)
!15517 = !DILocation(line: 46, column: 2, scope: !15507)
!15518 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !114, file: !114, line: 417, type: !15519, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15521)
!15519 = !DISubroutineType(types: !15520)
!15520 = !{!279, !15100, !2604}
!15521 = !{!15522, !15523, !15524, !15525}
!15522 = !DILocalVariable(name: "list", arg: 1, scope: !15518, file: !114, line: 417, type: !15100)
!15523 = !DILocalVariable(name: "node", arg: 2, scope: !15518, file: !114, line: 417, type: !2604)
!15524 = !DILocalVariable(name: "prev", scope: !15518, file: !114, line: 417, type: !2604)
!15525 = !DILocalVariable(name: "test", scope: !15518, file: !114, line: 417, type: !2604)
!15526 = !DILocation(line: 0, scope: !15518)
!15527 = !DILocation(line: 417, column: 1, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15518, file: !114, line: 417, column: 1)
!15529 = !DILocation(line: 417, column: 1, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15528, file: !114, line: 417, column: 1)
!15531 = !DILocation(line: 417, column: 1, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15533, file: !114, line: 417, column: 1)
!15533 = distinct !DILexicalBlock(scope: !15530, file: !114, line: 417, column: 1)
!15534 = !DILocation(line: 417, column: 1, scope: !15533)
!15535 = distinct !{!15535, !15527, !15527}
!15536 = !DILocation(line: 417, column: 1, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15532, file: !114, line: 417, column: 1)
!15538 = !DILocation(line: 417, column: 1, scope: !15518)
!15539 = distinct !DISubprogram(name: "sys_slist_remove", scope: !114, file: !114, line: 401, type: !15360, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15540)
!15540 = !{!15541, !15542, !15543}
!15541 = !DILocalVariable(name: "list", arg: 1, scope: !15539, file: !114, line: 401, type: !15100)
!15542 = !DILocalVariable(name: "prev_node", arg: 2, scope: !15539, file: !114, line: 401, type: !2604)
!15543 = !DILocalVariable(name: "node", arg: 3, scope: !15539, file: !114, line: 401, type: !2604)
!15544 = !DILocation(line: 0, scope: !15539)
!15545 = !DILocation(line: 401, column: 1, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15539, file: !114, line: 401, column: 1)
!15547 = !DILocation(line: 0, scope: !15546)
!15548 = !DILocation(line: 401, column: 1, scope: !15539)
!15549 = !DILocation(line: 401, column: 1, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15546, file: !114, line: 401, column: 1)
!15551 = !DILocation(line: 401, column: 1, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15550, file: !114, line: 401, column: 1)
!15553 = !DILocation(line: 401, column: 1, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15552, file: !114, line: 401, column: 1)
!15555 = !DILocation(line: 401, column: 1, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15546, file: !114, line: 401, column: 1)
!15557 = !DILocation(line: 401, column: 1, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15556, file: !114, line: 401, column: 1)
!15559 = !DILocation(line: 401, column: 1, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15558, file: !114, line: 401, column: 1)
!15561 = distinct !DISubprogram(name: "flag_clear", scope: !2636, file: !2636, line: 21, type: !15088, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15562)
!15562 = !{!15563, !15564}
!15563 = !DILocalVariable(name: "flagp", arg: 1, scope: !15561, file: !2636, line: 21, type: !1601)
!15564 = !DILocalVariable(name: "bit", arg: 2, scope: !15561, file: !2636, line: 22, type: !190)
!15565 = !DILocation(line: 0, scope: !15561)
!15566 = !DILocation(line: 24, column: 13, scope: !15561)
!15567 = !DILocation(line: 24, column: 12, scope: !15561)
!15568 = !DILocation(line: 24, column: 9, scope: !15561)
!15569 = !DILocation(line: 25, column: 1, scope: !15561)
!15570 = distinct !DISubprogram(name: "k_work_cancel_sync", scope: !2636, file: !2636, line: 560, type: !15191, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15571)
!15571 = !{!15572, !15573, !15574, !15575, !15576, !15577}
!15572 = !DILocalVariable(name: "work", arg: 1, scope: !15570, file: !2636, line: 560, type: !2484)
!15573 = !DILocalVariable(name: "sync", arg: 2, scope: !15570, file: !2636, line: 561, type: !15193)
!15574 = !DILocalVariable(name: "canceller", scope: !15570, file: !2636, line: 573, type: !2621)
!15575 = !DILocalVariable(name: "key", scope: !15570, file: !2636, line: 574, type: !14881)
!15576 = !DILocalVariable(name: "pending", scope: !15570, file: !2636, line: 575, type: !279)
!15577 = !DILocalVariable(name: "need_wait", scope: !15570, file: !2636, line: 576, type: !279)
!15578 = !DILocation(line: 0, scope: !15570)
!15579 = !DILocation(line: 563, column: 2, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15581, file: !2636, line: 563, column: 2)
!15581 = distinct !DILexicalBlock(scope: !15570, file: !2636, line: 563, column: 2)
!15582 = !DILocation(line: 563, column: 2, scope: !15581)
!15583 = !DILocation(line: 563, column: 2, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15580, file: !2636, line: 563, column: 2)
!15585 = !DILocation(line: 564, column: 2, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15587, file: !2636, line: 564, column: 2)
!15587 = distinct !DILexicalBlock(scope: !15570, file: !2636, line: 564, column: 2)
!15588 = !DILocation(line: 564, column: 2, scope: !15587)
!15589 = !DILocation(line: 564, column: 2, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15586, file: !2636, line: 564, column: 2)
!15591 = !DILocation(line: 565, column: 2, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15593, file: !2636, line: 565, column: 2)
!15593 = distinct !DILexicalBlock(scope: !15570, file: !2636, line: 565, column: 2)
!15594 = !DILocation(line: 565, column: 2, scope: !15593)
!15595 = !DILocation(line: 565, column: 2, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15592, file: !2636, line: 565, column: 2)
!15597 = !DILocation(line: 566, column: 2, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15599, file: !2636, line: 566, column: 2)
!15599 = distinct !DILexicalBlock(scope: !15570, file: !2636, line: 566, column: 2)
!15600 = !DILocation(line: 566, column: 2, scope: !15599)
!15601 = !DILocation(line: 566, column: 2, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15598, file: !2636, line: 566, column: 2)
!15603 = !DILocation(line: 0, scope: !14888, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 574, column: 25, scope: !15570)
!15605 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !15606)
!15606 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !15604)
!15607 = !DILocation(line: 0, scope: !14897, inlinedAt: !15606)
!15608 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !15604)
!15609 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !15604)
!15610 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !15604)
!15611 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !15604)
!15612 = !DILocation(line: 575, column: 18, scope: !15570)
!15613 = !DILocation(line: 575, column: 45, scope: !15570)
!15614 = !DILocation(line: 578, column: 6, scope: !15570)
!15615 = !DILocation(line: 573, column: 46, scope: !15570)
!15616 = !DILocation(line: 579, column: 9, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15618, file: !2636, line: 578, column: 15)
!15618 = distinct !DILexicalBlock(scope: !15570, file: !2636, line: 578, column: 6)
!15619 = !DILocation(line: 580, column: 15, scope: !15617)
!15620 = !DILocation(line: 0, scope: !14913, inlinedAt: !15621)
!15621 = distinct !DILocation(line: 583, column: 2, scope: !15570)
!15622 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !15621)
!15623 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !15621)
!15624 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !15621)
!15625 = !DILocation(line: 0, scope: !14927, inlinedAt: !15626)
!15626 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !15621)
!15627 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !15626)
!15628 = !DILocation(line: 585, column: 6, scope: !15570)
!15629 = !DILocation(line: 588, column: 26, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15631, file: !2636, line: 585, column: 17)
!15631 = distinct !DILexicalBlock(scope: !15570, file: !2636, line: 585, column: 6)
!15632 = !DILocation(line: 588, column: 3, scope: !15630)
!15633 = !DILocation(line: 589, column: 2, scope: !15630)
!15634 = !DILocation(line: 0, scope: !14913, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 583, column: 2, scope: !15570)
!15636 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !15635)
!15637 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !15635)
!15638 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !15635)
!15639 = !DILocation(line: 0, scope: !14927, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !15635)
!15641 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !15640)
!15642 = !DILocation(line: 592, column: 2, scope: !15570)
!15643 = distinct !DISubprogram(name: "cancel_sync_locked", scope: !2636, file: !2636, line: 527, type: !15644, scopeLine: 529, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15646)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{!279, !2484, !2621}
!15646 = !{!15647, !15648, !15649}
!15647 = !DILocalVariable(name: "work", arg: 1, scope: !15643, file: !2636, line: 527, type: !2484)
!15648 = !DILocalVariable(name: "canceller", arg: 2, scope: !15643, file: !2636, line: 528, type: !2621)
!15649 = !DILocalVariable(name: "ret", scope: !15643, file: !2636, line: 530, type: !279)
!15650 = !DILocation(line: 0, scope: !15643)
!15651 = !DILocation(line: 530, column: 30, scope: !15643)
!15652 = !DILocation(line: 530, column: 13, scope: !15643)
!15653 = !DILocation(line: 536, column: 6, scope: !15643)
!15654 = !DILocation(line: 537, column: 3, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !2636, line: 536, column: 11)
!15656 = distinct !DILexicalBlock(scope: !15643, file: !2636, line: 536, column: 6)
!15657 = !DILocation(line: 538, column: 2, scope: !15655)
!15658 = !DILocation(line: 540, column: 2, scope: !15643)
!15659 = distinct !DISubprogram(name: "init_work_cancel", scope: !2636, file: !2636, line: 91, type: !15660, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15662)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{null, !2621, !2484}
!15662 = !{!15663, !15664}
!15663 = !DILocalVariable(name: "canceler", arg: 1, scope: !15659, file: !2636, line: 91, type: !2621)
!15664 = !DILocalVariable(name: "work", arg: 2, scope: !15659, file: !2636, line: 92, type: !2484)
!15665 = !DILocation(line: 0, scope: !15659)
!15666 = !DILocation(line: 94, column: 24, scope: !15659)
!15667 = !DILocation(line: 94, column: 2, scope: !15659)
!15668 = !DILocation(line: 95, column: 12, scope: !15659)
!15669 = !DILocation(line: 95, column: 17, scope: !15659)
!15670 = !DILocation(line: 96, column: 48, scope: !15659)
!15671 = !DILocation(line: 96, column: 2, scope: !15659)
!15672 = !DILocation(line: 97, column: 1, scope: !15659)
!15673 = distinct !DISubprogram(name: "k_work_queue_init", scope: !2636, file: !2636, line: 695, type: !15674, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15676)
!15674 = !DISubroutineType(types: !15675)
!15675 = !{null, !2499}
!15676 = !{!15677}
!15677 = !DILocalVariable(name: "queue", arg: 1, scope: !15673, file: !2636, line: 695, type: !2499)
!15678 = !DILocation(line: 0, scope: !15673)
!15679 = !DILocation(line: 697, column: 2, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15681, file: !2636, line: 697, column: 2)
!15681 = distinct !DILexicalBlock(scope: !15673, file: !2636, line: 697, column: 2)
!15682 = !DILocation(line: 697, column: 2, scope: !15681)
!15683 = !DILocation(line: 697, column: 2, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15680, file: !2636, line: 697, column: 2)
!15685 = !DILocation(line: 699, column: 11, scope: !15673)
!15686 = !DILocation(line: 704, column: 1, scope: !15673)
!15687 = distinct !DISubprogram(name: "k_work_queue_start", scope: !2636, file: !2636, line: 706, type: !15688, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15701)
!15688 = !DISubroutineType(types: !15689)
!15689 = !{null, !2499, !15690, !239, !103, !15695}
!15690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15691, size: 32)
!15691 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !354, line: 44, baseType: !15692)
!15692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !356, line: 47, size: 8, elements: !15693)
!15693 = !{!15694}
!15694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15692, file: !356, line: 48, baseType: !222, size: 8)
!15695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15696, size: 32)
!15696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15697)
!15697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work_queue_config", file: !110, line: 3787, size: 64, elements: !15698)
!15698 = !{!15699, !15700}
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15697, file: !110, line: 3792, baseType: !377, size: 32)
!15700 = !DIDerivedType(tag: DW_TAG_member, name: "no_yield", scope: !15697, file: !110, line: 3806, baseType: !279, size: 8, offset: 32)
!15701 = !{!15702, !15703, !15704, !15705, !15706, !15707}
!15702 = !DILocalVariable(name: "queue", arg: 1, scope: !15687, file: !2636, line: 706, type: !2499)
!15703 = !DILocalVariable(name: "stack", arg: 2, scope: !15687, file: !2636, line: 707, type: !15690)
!15704 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15687, file: !2636, line: 708, type: !239)
!15705 = !DILocalVariable(name: "prio", arg: 4, scope: !15687, file: !2636, line: 709, type: !103)
!15706 = !DILocalVariable(name: "cfg", arg: 5, scope: !15687, file: !2636, line: 710, type: !15695)
!15707 = !DILocalVariable(name: "flags", scope: !15687, file: !2636, line: 715, type: !190)
!15708 = !DILocation(line: 0, scope: !15687)
!15709 = !DILocation(line: 712, column: 2, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15711, file: !2636, line: 712, column: 2)
!15711 = distinct !DILexicalBlock(scope: !15687, file: !2636, line: 712, column: 2)
!15712 = !DILocation(line: 712, column: 2, scope: !15711)
!15713 = !DILocation(line: 712, column: 2, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15710, file: !2636, line: 712, column: 2)
!15715 = !DILocation(line: 713, column: 2, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15717, file: !2636, line: 713, column: 2)
!15717 = distinct !DILexicalBlock(scope: !15687, file: !2636, line: 713, column: 2)
!15718 = !DILocation(line: 713, column: 2, scope: !15717)
!15719 = !DILocation(line: 713, column: 2, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15716, file: !2636, line: 713, column: 2)
!15721 = !DILocation(line: 714, column: 2, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15723, file: !2636, line: 714, column: 2)
!15723 = distinct !DILexicalBlock(scope: !15687, file: !2636, line: 714, column: 2)
!15724 = !DILocation(line: 714, column: 2, scope: !15723)
!15725 = !DILocation(line: 714, column: 2, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15722, file: !2636, line: 714, column: 2)
!15727 = !DILocation(line: 719, column: 25, scope: !15687)
!15728 = !DILocation(line: 719, column: 2, scope: !15687)
!15729 = !DILocation(line: 720, column: 23, scope: !15687)
!15730 = !DILocation(line: 720, column: 2, scope: !15687)
!15731 = !DILocation(line: 721, column: 23, scope: !15687)
!15732 = !DILocation(line: 721, column: 2, scope: !15687)
!15733 = !DILocation(line: 723, column: 11, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15687, file: !2636, line: 723, column: 6)
!15735 = !DILocation(line: 723, column: 20, scope: !15734)
!15736 = !DILocation(line: 723, column: 28, scope: !15734)
!15737 = !DILocation(line: 723, column: 6, scope: !15687)
!15738 = !DILocation(line: 731, column: 2, scope: !15687)
!15739 = !DILocation(line: 733, column: 32, scope: !15687)
!15740 = !DILocation(line: 734, column: 27, scope: !15687)
!15741 = !DILocation(line: 733, column: 8, scope: !15687)
!15742 = !DILocation(line: 737, column: 20, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15687, file: !2636, line: 737, column: 6)
!15744 = !DILocation(line: 737, column: 29, scope: !15743)
!15745 = !DILocation(line: 737, column: 34, scope: !15743)
!15746 = !DILocation(line: 737, column: 6, scope: !15687)
!15747 = !DILocation(line: 738, column: 3, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15743, file: !2636, line: 737, column: 44)
!15749 = !DILocation(line: 739, column: 2, scope: !15748)
!15750 = !DILocation(line: 741, column: 2, scope: !15687)
!15751 = !DILocation(line: 744, column: 1, scope: !15687)
!15752 = distinct !DISubprogram(name: "sys_slist_init", scope: !114, file: !114, line: 196, type: !15753, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15755)
!15753 = !DISubroutineType(types: !15754)
!15754 = !{null, !15100}
!15755 = !{!15756}
!15756 = !DILocalVariable(name: "list", arg: 1, scope: !15752, file: !114, line: 196, type: !15100)
!15757 = !DILocation(line: 0, scope: !15752)
!15758 = !DILocation(line: 198, column: 8, scope: !15752)
!15759 = !DILocation(line: 198, column: 13, scope: !15752)
!15760 = !DILocation(line: 199, column: 8, scope: !15752)
!15761 = !DILocation(line: 199, column: 13, scope: !15752)
!15762 = !DILocation(line: 200, column: 1, scope: !15752)
!15763 = distinct !DISubprogram(name: "z_waitq_init", scope: !13282, file: !13282, line: 47, type: !15764, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15766)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{null, !2533}
!15766 = !{!15767}
!15767 = !DILocalVariable(name: "w", arg: 1, scope: !15763, file: !13282, line: 47, type: !2533)
!15768 = !DILocation(line: 0, scope: !15763)
!15769 = !DILocation(line: 49, column: 21, scope: !15763)
!15770 = !DILocation(line: 49, column: 2, scope: !15763)
!15771 = !DILocation(line: 50, column: 1, scope: !15763)
!15772 = distinct !DISubprogram(name: "flags_set", scope: !2636, file: !2636, line: 49, type: !15088, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15773)
!15773 = !{!15774, !15775}
!15774 = !DILocalVariable(name: "flagp", arg: 1, scope: !15772, file: !2636, line: 49, type: !1601)
!15775 = !DILocalVariable(name: "flags", arg: 2, scope: !15772, file: !2636, line: 50, type: !190)
!15776 = !DILocation(line: 0, scope: !15772)
!15777 = !DILocation(line: 52, column: 9, scope: !15772)
!15778 = !DILocation(line: 53, column: 1, scope: !15772)
!15779 = distinct !DISubprogram(name: "k_thread_create", scope: !4037, file: !4037, line: 24, type: !15780, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15784)
!15780 = !DISubroutineType(types: !15781)
!15781 = !{!15782, !15783, !15690, !239, !361, !102, !102, !102, !103, !190, !15290}
!15782 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !15783)
!15783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!15784 = !{!15785, !15786, !15787, !15788, !15789, !15790, !15791, !15792, !15793, !15794}
!15785 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15779, file: !4037, line: 24, type: !15783)
!15786 = !DILocalVariable(name: "stack", arg: 2, scope: !15779, file: !4037, line: 24, type: !15690)
!15787 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15779, file: !4037, line: 24, type: !239)
!15788 = !DILocalVariable(name: "entry", arg: 4, scope: !15779, file: !4037, line: 24, type: !361)
!15789 = !DILocalVariable(name: "p1", arg: 5, scope: !15779, file: !4037, line: 24, type: !102)
!15790 = !DILocalVariable(name: "p2", arg: 6, scope: !15779, file: !4037, line: 24, type: !102)
!15791 = !DILocalVariable(name: "p3", arg: 7, scope: !15779, file: !4037, line: 24, type: !102)
!15792 = !DILocalVariable(name: "prio", arg: 8, scope: !15779, file: !4037, line: 24, type: !103)
!15793 = !DILocalVariable(name: "options", arg: 9, scope: !15779, file: !4037, line: 24, type: !190)
!15794 = !DILocalVariable(name: "delay", arg: 10, scope: !15779, file: !4037, line: 24, type: !15290)
!15795 = !DILocation(line: 0, scope: !15779)
!15796 = !DILocation(line: 49, column: 2, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15779, file: !4037, line: 49, column: 2)
!15798 = !{i64 2151068803}
!15799 = !DILocation(line: 50, column: 9, scope: !15779)
!15800 = !DILocation(line: 50, column: 2, scope: !15779)
!15801 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4037, file: !4037, line: 391, type: !15802, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15804)
!15802 = !DISubroutineType(types: !15803)
!15803 = !{!103, !15782, !377}
!15804 = !{!15805, !15806}
!15805 = !DILocalVariable(name: "thread", arg: 1, scope: !15801, file: !4037, line: 391, type: !15782)
!15806 = !DILocalVariable(name: "str", arg: 2, scope: !15801, file: !4037, line: 391, type: !377)
!15807 = !DILocation(line: 0, scope: !15801)
!15808 = !DILocation(line: 400, column: 2, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15801, file: !4037, line: 400, column: 2)
!15810 = !{i64 2151070231}
!15811 = !DILocation(line: 401, column: 9, scope: !15801)
!15812 = !DILocation(line: 401, column: 2, scope: !15801)
!15813 = distinct !DISubprogram(name: "k_thread_start", scope: !4037, file: !4037, line: 205, type: !15814, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15816)
!15814 = !DISubroutineType(types: !15815)
!15815 = !{null, !15782}
!15816 = !{!15817}
!15817 = !DILocalVariable(name: "thread", arg: 1, scope: !15813, file: !4037, line: 205, type: !15782)
!15818 = !DILocation(line: 0, scope: !15813)
!15819 = !DILocation(line: 214, column: 2, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15813, file: !4037, line: 214, column: 2)
!15821 = !{i64 2151069483}
!15822 = !DILocation(line: 215, column: 2, scope: !15813)
!15823 = !DILocation(line: 216, column: 1, scope: !15813)
!15824 = distinct !DISubprogram(name: "work_queue_main", scope: !2636, file: !2636, line: 599, type: !363, scopeLine: 600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15825)
!15825 = !{!15826, !15827, !15828, !15829, !15830, !15832, !15833, !15834, !15835}
!15826 = !DILocalVariable(name: "workq_ptr", arg: 1, scope: !15824, file: !2636, line: 599, type: !102)
!15827 = !DILocalVariable(name: "p2", arg: 2, scope: !15824, file: !2636, line: 599, type: !102)
!15828 = !DILocalVariable(name: "p3", arg: 3, scope: !15824, file: !2636, line: 599, type: !102)
!15829 = !DILocalVariable(name: "queue", scope: !15824, file: !2636, line: 601, type: !2499)
!15830 = !DILocalVariable(name: "node", scope: !15831, file: !2636, line: 604, type: !2604)
!15831 = distinct !DILexicalBlock(scope: !15824, file: !2636, line: 603, column: 15)
!15832 = !DILocalVariable(name: "work", scope: !15831, file: !2636, line: 605, type: !2484)
!15833 = !DILocalVariable(name: "handler", scope: !15831, file: !2636, line: 606, type: !2494)
!15834 = !DILocalVariable(name: "key", scope: !15831, file: !2636, line: 607, type: !14881)
!15835 = !DILocalVariable(name: "yield", scope: !15831, file: !2636, line: 608, type: !279)
!15836 = !DILocation(line: 0, scope: !15824)
!15837 = !DILocation(line: 0, scope: !15831)
!15838 = !DILocation(line: 0, scope: !14888, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 607, column: 26, scope: !15831)
!15840 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !15839)
!15842 = !DILocation(line: 0, scope: !14897, inlinedAt: !15841)
!15843 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !15839)
!15844 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !15839)
!15845 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !15839)
!15846 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !15839)
!15847 = !DILocation(line: 611, column: 10, scope: !15831)
!15848 = !DILocation(line: 612, column: 12, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15831, file: !2636, line: 612, column: 7)
!15850 = !DILocation(line: 612, column: 7, scope: !15831)
!15851 = !DILocation(line: 634, column: 14, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15849, file: !2636, line: 634, column: 14)
!15853 = !DILocation(line: 634, column: 14, scope: !15849)
!15854 = !DILocation(line: 645, column: 10, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15852, file: !2636, line: 635, column: 38)
!15856 = !DILocation(line: 646, column: 3, scope: !15855)
!15857 = !DILocation(line: 616, column: 4, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15849, file: !2636, line: 612, column: 21)
!15859 = !DILocation(line: 617, column: 11, scope: !15858)
!15860 = !DILocation(line: 618, column: 20, scope: !15858)
!15861 = !DILocation(line: 618, column: 4, scope: !15858)
!15862 = !DILocation(line: 619, column: 4, scope: !15858)
!15863 = !DILocation(line: 633, column: 20, scope: !15858)
!15864 = !DILocation(line: 0, scope: !14913, inlinedAt: !15865)
!15865 = distinct !DILocation(line: 665, column: 3, scope: !15831)
!15866 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !15865)
!15867 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !15865)
!15868 = !DILocation(line: 660, column: 10, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15870, file: !2636, line: 653, column: 21)
!15870 = distinct !DILexicalBlock(scope: !15831, file: !2636, line: 653, column: 7)
!15871 = !DILocation(line: 662, column: 4, scope: !15869)
!15872 = distinct !{!15872, !15873, !15874}
!15873 = !DILocation(line: 603, column: 2, scope: !15824)
!15874 = !DILocation(line: 692, column: 2, scope: !15824)
!15875 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !15865)
!15876 = !DILocation(line: 0, scope: !14927, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !15865)
!15878 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !15877)
!15879 = !DILocation(line: 667, column: 3, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15881, file: !2636, line: 667, column: 3)
!15881 = distinct !DILexicalBlock(scope: !15831, file: !2636, line: 667, column: 3)
!15882 = !DILocation(line: 667, column: 3, scope: !15881)
!15883 = !DILocation(line: 667, column: 3, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15880, file: !2636, line: 667, column: 3)
!15885 = !DILocation(line: 668, column: 3, scope: !15831)
!15886 = !DILocation(line: 0, scope: !14888, inlinedAt: !15887)
!15887 = distinct !DILocation(line: 675, column: 9, scope: !15831)
!15888 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !15887)
!15890 = !DILocation(line: 0, scope: !14897, inlinedAt: !15889)
!15891 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !15887)
!15892 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !15887)
!15893 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !15887)
!15894 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !15887)
!15895 = !DILocation(line: 677, column: 3, scope: !15831)
!15896 = !DILocation(line: 678, column: 7, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15831, file: !2636, line: 678, column: 7)
!15898 = !DILocation(line: 678, column: 7, scope: !15831)
!15899 = !DILocation(line: 679, column: 4, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15897, file: !2636, line: 678, column: 54)
!15901 = !DILocation(line: 680, column: 3, scope: !15900)
!15902 = !DILocation(line: 682, column: 3, scope: !15831)
!15903 = !DILocation(line: 683, column: 12, scope: !15831)
!15904 = !DILocation(line: 0, scope: !14913, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 684, column: 3, scope: !15831)
!15906 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !15905)
!15907 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !15905)
!15908 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !15905)
!15909 = !DILocation(line: 0, scope: !14927, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !15905)
!15911 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !15910)
!15912 = !DILocation(line: 689, column: 7, scope: !15831)
!15913 = !DILocation(line: 690, column: 4, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15915, file: !2636, line: 689, column: 14)
!15915 = distinct !DILexicalBlock(scope: !15831, file: !2636, line: 689, column: 7)
!15916 = !DILocation(line: 691, column: 3, scope: !15914)
!15917 = distinct !DISubprogram(name: "sys_slist_get", scope: !114, file: !114, line: 385, type: !15138, scopeLine: 385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15918)
!15918 = !{!15919}
!15919 = !DILocalVariable(name: "list", arg: 1, scope: !15917, file: !114, line: 385, type: !15100)
!15920 = !DILocation(line: 0, scope: !15917)
!15921 = !DILocation(line: 385, column: 1, scope: !15917)
!15922 = distinct !DISubprogram(name: "z_sched_wake_all", scope: !12927, file: !12927, line: 330, type: !15923, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15925)
!15923 = !DISubroutineType(types: !15924)
!15924 = !{!279, !2533, !103, !102}
!15925 = !{!15926, !15927, !15928, !15929}
!15926 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15922, file: !12927, line: 330, type: !2533)
!15927 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15922, file: !12927, line: 330, type: !103)
!15928 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15922, file: !12927, line: 331, type: !102)
!15929 = !DILocalVariable(name: "woken", scope: !15922, file: !12927, line: 333, type: !279)
!15930 = !DILocation(line: 0, scope: !15922)
!15931 = !DILocation(line: 335, column: 2, scope: !15922)
!15932 = !DILocation(line: 335, column: 9, scope: !15922)
!15933 = distinct !{!15933, !15931, !15934}
!15934 = !DILocation(line: 337, column: 2, scope: !15922)
!15935 = !DILocation(line: 340, column: 2, scope: !15922)
!15936 = distinct !DISubprogram(name: "finalize_cancel_locked", scope: !2636, file: !2636, line: 109, type: !2496, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15937)
!15937 = !{!15938, !15939, !15940, !15941}
!15938 = !DILocalVariable(name: "work", arg: 1, scope: !15936, file: !2636, line: 109, type: !2484)
!15939 = !DILocalVariable(name: "wc", scope: !15936, file: !2636, line: 111, type: !2621)
!15940 = !DILocalVariable(name: "tmp", scope: !15936, file: !2636, line: 111, type: !2621)
!15941 = !DILocalVariable(name: "prev", scope: !15936, file: !2636, line: 112, type: !2604)
!15942 = !DILocation(line: 0, scope: !15936)
!15943 = !DILocation(line: 117, column: 20, scope: !15936)
!15944 = !DILocation(line: 117, column: 2, scope: !15936)
!15945 = !DILocation(line: 124, column: 2, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15936, file: !2636, line: 124, column: 2)
!15947 = !DILocation(line: 0, scope: !15946)
!15948 = !DILocation(line: 125, column: 11, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15950, file: !2636, line: 125, column: 7)
!15950 = distinct !DILexicalBlock(scope: !15951, file: !2636, line: 124, column: 69)
!15951 = distinct !DILexicalBlock(scope: !15946, file: !2636, line: 124, column: 2)
!15952 = !DILocation(line: 125, column: 16, scope: !15949)
!15953 = !DILocation(line: 125, column: 7, scope: !15950)
!15954 = !DILocation(line: 126, column: 4, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15949, file: !2636, line: 125, column: 25)
!15956 = !DILocation(line: 127, column: 20, scope: !15955)
!15957 = !DILocation(line: 127, column: 4, scope: !15955)
!15958 = !DILocation(line: 128, column: 3, scope: !15955)
!15959 = !DILocation(line: 124, column: 2, scope: !15951)
!15960 = !DILocation(line: 132, column: 1, scope: !15936)
!15961 = distinct !DISubprogram(name: "k_yield", scope: !4037, file: !4037, line: 140, type: !374, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !2145)
!15962 = !DILocation(line: 148, column: 2, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15961, file: !4037, line: 148, column: 2)
!15964 = !{i64 2151069211}
!15965 = !DILocation(line: 149, column: 2, scope: !15961)
!15966 = !DILocation(line: 150, column: 1, scope: !15961)
!15967 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !114, file: !114, line: 261, type: !15968, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15970)
!15968 = !DISubroutineType(types: !15969)
!15969 = !{!279, !15100}
!15970 = !{!15971}
!15971 = !DILocalVariable(name: "list", arg: 1, scope: !15967, file: !114, line: 261, type: !15100)
!15972 = !DILocation(line: 0, scope: !15967)
!15973 = !DILocation(line: 261, column: 1, scope: !15967)
!15974 = distinct !DISubprogram(name: "sys_slist_get_not_empty", scope: !114, file: !114, line: 372, type: !15138, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15975)
!15975 = !{!15976, !15977}
!15976 = !DILocalVariable(name: "list", arg: 1, scope: !15974, file: !114, line: 372, type: !15100)
!15977 = !DILocalVariable(name: "node", scope: !15974, file: !114, line: 372, type: !2604)
!15978 = !DILocation(line: 0, scope: !15974)
!15979 = !DILocation(line: 372, column: 1, scope: !15974)
!15980 = !DILocation(line: 372, column: 1, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15974, file: !114, line: 372, column: 1)
!15982 = !DILocation(line: 372, column: 1, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15981, file: !114, line: 372, column: 1)
!15984 = distinct !DISubprogram(name: "sys_dlist_init", scope: !141, file: !141, line: 197, type: !15985, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15988)
!15985 = !DISubroutineType(types: !15986)
!15986 = !{null, !15987}
!15987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!15988 = !{!15989}
!15989 = !DILocalVariable(name: "list", arg: 1, scope: !15984, file: !141, line: 197, type: !15987)
!15990 = !DILocation(line: 0, scope: !15984)
!15991 = !DILocation(line: 199, column: 8, scope: !15984)
!15992 = !DILocation(line: 199, column: 13, scope: !15984)
!15993 = !DILocation(line: 200, column: 8, scope: !15984)
!15994 = !DILocation(line: 200, column: 13, scope: !15984)
!15995 = !DILocation(line: 201, column: 1, scope: !15984)
!15996 = distinct !DISubprogram(name: "k_work_queue_drain", scope: !2636, file: !2636, line: 746, type: !15997, scopeLine: 748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !15999)
!15997 = !DISubroutineType(types: !15998)
!15998 = !{!103, !2499, !279}
!15999 = !{!16000, !16001, !16002, !16003}
!16000 = !DILocalVariable(name: "queue", arg: 1, scope: !15996, file: !2636, line: 746, type: !2499)
!16001 = !DILocalVariable(name: "plug", arg: 2, scope: !15996, file: !2636, line: 747, type: !279)
!16002 = !DILocalVariable(name: "ret", scope: !15996, file: !2636, line: 754, type: !103)
!16003 = !DILocalVariable(name: "key", scope: !15996, file: !2636, line: 755, type: !14881)
!16004 = !DILocation(line: 0, scope: !15996)
!16005 = !DILocation(line: 749, column: 2, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !16007, file: !2636, line: 749, column: 2)
!16007 = distinct !DILexicalBlock(scope: !15996, file: !2636, line: 749, column: 2)
!16008 = !DILocation(line: 749, column: 2, scope: !16007)
!16009 = !DILocation(line: 749, column: 2, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16006, file: !2636, line: 749, column: 2)
!16011 = !DILocation(line: 750, column: 2, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16013, file: !2636, line: 750, column: 2)
!16013 = distinct !DILexicalBlock(scope: !15996, file: !2636, line: 750, column: 2)
!16014 = !DILocation(line: 750, column: 2, scope: !16013)
!16015 = !DILocation(line: 750, column: 2, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16012, file: !2636, line: 750, column: 2)
!16017 = !DILocation(line: 0, scope: !14888, inlinedAt: !16018)
!16018 = distinct !DILocation(line: 755, column: 25, scope: !15996)
!16019 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16020)
!16020 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16018)
!16021 = !DILocation(line: 0, scope: !14897, inlinedAt: !16020)
!16022 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16018)
!16023 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16018)
!16024 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16018)
!16025 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16018)
!16026 = !DILocation(line: 757, column: 26, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !15996, file: !2636, line: 757, column: 6)
!16028 = !DILocation(line: 757, column: 8, scope: !16027)
!16029 = !DILocation(line: 758, column: 8, scope: !16027)
!16030 = !DILocation(line: 758, column: 52, scope: !16027)
!16031 = !DILocation(line: 759, column: 6, scope: !16027)
!16032 = !DILocation(line: 760, column: 37, scope: !16027)
!16033 = !DILocation(line: 760, column: 10, scope: !16027)
!16034 = !DILocation(line: 757, column: 6, scope: !15996)
!16035 = !DILocation(line: 761, column: 3, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16027, file: !2636, line: 760, column: 47)
!16037 = !DILocation(line: 762, column: 7, scope: !16036)
!16038 = !DILocation(line: 763, column: 4, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16040, file: !2636, line: 762, column: 13)
!16040 = distinct !DILexicalBlock(scope: !16036, file: !2636, line: 762, column: 7)
!16041 = !DILocation(line: 764, column: 3, scope: !16039)
!16042 = !DILocation(line: 766, column: 3, scope: !16036)
!16043 = !DILocation(line: 767, column: 42, scope: !16036)
!16044 = !DILocation(line: 767, column: 9, scope: !16036)
!16045 = !DILocation(line: 769, column: 2, scope: !16036)
!16046 = !DILocation(line: 0, scope: !14913, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 770, column: 3, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16027, file: !2636, line: 769, column: 9)
!16049 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16047)
!16050 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16047)
!16051 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16047)
!16052 = !DILocation(line: 0, scope: !14927, inlinedAt: !16053)
!16053 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16047)
!16054 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16053)
!16055 = !DILocation(line: 775, column: 2, scope: !15996)
!16056 = distinct !DISubprogram(name: "k_work_queue_unplug", scope: !2636, file: !2636, line: 778, type: !16057, scopeLine: 779, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16059)
!16057 = !DISubroutineType(types: !16058)
!16058 = !{!103, !2499}
!16059 = !{!16060, !16061, !16062}
!16060 = !DILocalVariable(name: "queue", arg: 1, scope: !16056, file: !2636, line: 778, type: !2499)
!16061 = !DILocalVariable(name: "ret", scope: !16056, file: !2636, line: 784, type: !103)
!16062 = !DILocalVariable(name: "key", scope: !16056, file: !2636, line: 785, type: !14881)
!16063 = !DILocation(line: 0, scope: !16056)
!16064 = !DILocation(line: 780, column: 2, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16066, file: !2636, line: 780, column: 2)
!16066 = distinct !DILexicalBlock(scope: !16056, file: !2636, line: 780, column: 2)
!16067 = !DILocation(line: 780, column: 2, scope: !16066)
!16068 = !DILocation(line: 780, column: 2, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16065, file: !2636, line: 780, column: 2)
!16070 = !DILocation(line: 0, scope: !14888, inlinedAt: !16071)
!16071 = distinct !DILocation(line: 785, column: 25, scope: !16056)
!16072 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16073)
!16073 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16071)
!16074 = !DILocation(line: 0, scope: !14897, inlinedAt: !16073)
!16075 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16071)
!16076 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16071)
!16077 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16071)
!16078 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16071)
!16079 = !DILocation(line: 787, column: 34, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16056, file: !2636, line: 787, column: 6)
!16081 = !DILocation(line: 787, column: 6, scope: !16080)
!16082 = !DILocation(line: 0, scope: !14913, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 791, column: 2, scope: !16056)
!16084 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16083)
!16085 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16083)
!16086 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16083)
!16087 = !DILocation(line: 787, column: 6, scope: !16056)
!16088 = !DILocation(line: 0, scope: !14927, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16083)
!16090 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16089)
!16091 = !DILocation(line: 795, column: 2, scope: !16056)
!16092 = distinct !DISubprogram(name: "k_work_init_delayable", scope: !2636, file: !2636, line: 829, type: !16093, scopeLine: 831, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16095)
!16093 = !DISubroutineType(types: !16094)
!16094 = !{null, !2627, !2494}
!16095 = !{!16096, !16097}
!16096 = !DILocalVariable(name: "dwork", arg: 1, scope: !16092, file: !2636, line: 829, type: !2627)
!16097 = !DILocalVariable(name: "handler", arg: 2, scope: !16092, file: !2636, line: 830, type: !2494)
!16098 = !DILocation(line: 0, scope: !16092)
!16099 = !DILocation(line: 832, column: 2, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16101, file: !2636, line: 832, column: 2)
!16101 = distinct !DILexicalBlock(scope: !16092, file: !2636, line: 832, column: 2)
!16102 = !DILocation(line: 832, column: 2, scope: !16101)
!16103 = !DILocation(line: 832, column: 2, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16100, file: !2636, line: 832, column: 2)
!16105 = !DILocation(line: 833, column: 2, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16107, file: !2636, line: 833, column: 2)
!16107 = distinct !DILexicalBlock(scope: !16092, file: !2636, line: 833, column: 2)
!16108 = !DILocation(line: 833, column: 2, scope: !16107)
!16109 = !DILocation(line: 833, column: 2, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16106, file: !2636, line: 833, column: 2)
!16111 = !DILocation(line: 835, column: 11, scope: !16092)
!16112 = !DILocation(line: 841, column: 2, scope: !16092)
!16113 = !DILocation(line: 844, column: 1, scope: !16092)
!16114 = distinct !DISubprogram(name: "z_init_timeout", scope: !13334, file: !13334, line: 25, type: !2559, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16115)
!16115 = !{!16116}
!16116 = !DILocalVariable(name: "to", arg: 1, scope: !16114, file: !13334, line: 25, type: !2561)
!16117 = !DILocation(line: 0, scope: !16114)
!16118 = !DILocation(line: 27, column: 22, scope: !16114)
!16119 = !DILocation(line: 27, column: 2, scope: !16114)
!16120 = !DILocation(line: 28, column: 1, scope: !16114)
!16121 = distinct !DISubprogram(name: "sys_dnode_init", scope: !141, file: !141, line: 211, type: !16122, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16124)
!16122 = !DISubroutineType(types: !16123)
!16123 = !{null, !2620}
!16124 = !{!16125}
!16125 = !DILocalVariable(name: "node", arg: 1, scope: !16121, file: !141, line: 211, type: !2620)
!16126 = !DILocation(line: 0, scope: !16121)
!16127 = !DILocation(line: 213, column: 8, scope: !16121)
!16128 = !DILocation(line: 213, column: 13, scope: !16121)
!16129 = !DILocation(line: 214, column: 8, scope: !16121)
!16130 = !DILocation(line: 214, column: 13, scope: !16121)
!16131 = !DILocation(line: 215, column: 1, scope: !16121)
!16132 = distinct !DISubprogram(name: "k_work_delayable_busy_get", scope: !2636, file: !2636, line: 851, type: !16133, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16137)
!16133 = !DISubroutineType(types: !16134)
!16134 = !{!103, !16135}
!16135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16136, size: 32)
!16136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2628)
!16137 = !{!16138, !16139, !16140}
!16138 = !DILocalVariable(name: "dwork", arg: 1, scope: !16132, file: !2636, line: 851, type: !16135)
!16139 = !DILocalVariable(name: "key", scope: !16132, file: !2636, line: 853, type: !14881)
!16140 = !DILocalVariable(name: "ret", scope: !16132, file: !2636, line: 854, type: !103)
!16141 = !DILocation(line: 0, scope: !16132)
!16142 = !DILocation(line: 0, scope: !14888, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 853, column: 25, scope: !16132)
!16144 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16143)
!16146 = !DILocation(line: 0, scope: !14897, inlinedAt: !16145)
!16147 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16143)
!16148 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16143)
!16149 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16143)
!16150 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16143)
!16151 = !DILocation(line: 854, column: 12, scope: !16132)
!16152 = !DILocation(line: 0, scope: !14913, inlinedAt: !16153)
!16153 = distinct !DILocation(line: 856, column: 2, scope: !16132)
!16154 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16153)
!16155 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16153)
!16156 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16153)
!16157 = !DILocation(line: 0, scope: !14927, inlinedAt: !16158)
!16158 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16153)
!16159 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16158)
!16160 = !DILocation(line: 857, column: 2, scope: !16132)
!16161 = distinct !DISubprogram(name: "work_delayable_busy_get_locked", scope: !2636, file: !2636, line: 846, type: !16133, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16162)
!16162 = !{!16163}
!16163 = !DILocalVariable(name: "dwork", arg: 1, scope: !16161, file: !2636, line: 846, type: !16135)
!16164 = !DILocation(line: 0, scope: !16161)
!16165 = !DILocation(line: 848, column: 32, scope: !16161)
!16166 = !DILocation(line: 848, column: 9, scope: !16161)
!16167 = !DILocation(line: 848, column: 39, scope: !16161)
!16168 = !DILocation(line: 848, column: 2, scope: !16161)
!16169 = distinct !DISubprogram(name: "k_work_schedule_for_queue", scope: !2636, file: !2636, line: 947, type: !16170, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16172)
!16170 = !DISubroutineType(types: !16171)
!16171 = !{!103, !2499, !2627, !15290}
!16172 = !{!16173, !16174, !16175, !16176, !16177, !16178}
!16173 = !DILocalVariable(name: "queue", arg: 1, scope: !16169, file: !2636, line: 947, type: !2499)
!16174 = !DILocalVariable(name: "dwork", arg: 2, scope: !16169, file: !2636, line: 948, type: !2627)
!16175 = !DILocalVariable(name: "delay", arg: 3, scope: !16169, file: !2636, line: 949, type: !15290)
!16176 = !DILocalVariable(name: "work", scope: !16169, file: !2636, line: 955, type: !2484)
!16177 = !DILocalVariable(name: "ret", scope: !16169, file: !2636, line: 956, type: !103)
!16178 = !DILocalVariable(name: "key", scope: !16169, file: !2636, line: 957, type: !14881)
!16179 = !DILocation(line: 0, scope: !16169)
!16180 = !DILocation(line: 951, column: 2, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16182, file: !2636, line: 951, column: 2)
!16182 = distinct !DILexicalBlock(scope: !16169, file: !2636, line: 951, column: 2)
!16183 = !DILocation(line: 951, column: 2, scope: !16182)
!16184 = !DILocation(line: 951, column: 2, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16181, file: !2636, line: 951, column: 2)
!16186 = !DILocation(line: 0, scope: !14888, inlinedAt: !16187)
!16187 = distinct !DILocation(line: 957, column: 25, scope: !16169)
!16188 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16189)
!16189 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16187)
!16190 = !DILocation(line: 0, scope: !14897, inlinedAt: !16189)
!16191 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16187)
!16192 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16187)
!16193 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16187)
!16194 = !DILocation(line: 955, column: 32, scope: !16169)
!16195 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16187)
!16196 = !DILocation(line: 960, column: 7, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16169, file: !2636, line: 960, column: 6)
!16198 = !DILocation(line: 960, column: 53, scope: !16197)
!16199 = !DILocation(line: 960, column: 6, scope: !16169)
!16200 = !DILocation(line: 961, column: 9, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16197, file: !2636, line: 960, column: 60)
!16202 = !DILocation(line: 962, column: 2, scope: !16201)
!16203 = !DILocation(line: 0, scope: !14913, inlinedAt: !16204)
!16204 = distinct !DILocation(line: 964, column: 2, scope: !16169)
!16205 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16204)
!16206 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16204)
!16207 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16204)
!16208 = !DILocation(line: 0, scope: !14927, inlinedAt: !16209)
!16209 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16204)
!16210 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16209)
!16211 = !DILocation(line: 968, column: 2, scope: !16169)
!16212 = distinct !DISubprogram(name: "schedule_for_queue_locked", scope: !2636, file: !2636, line: 883, type: !16213, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16215)
!16213 = !DISubroutineType(types: !16214)
!16214 = !{!103, !14989, !2627, !15290}
!16215 = !{!16216, !16217, !16218, !16219, !16220}
!16216 = !DILocalVariable(name: "queuep", arg: 1, scope: !16212, file: !2636, line: 883, type: !14989)
!16217 = !DILocalVariable(name: "dwork", arg: 2, scope: !16212, file: !2636, line: 884, type: !2627)
!16218 = !DILocalVariable(name: "delay", arg: 3, scope: !16212, file: !2636, line: 885, type: !15290)
!16219 = !DILocalVariable(name: "ret", scope: !16212, file: !2636, line: 887, type: !103)
!16220 = !DILocalVariable(name: "work", scope: !16212, file: !2636, line: 888, type: !2484)
!16221 = !DILocation(line: 0, scope: !16212)
!16222 = !DILocation(line: 890, column: 6, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16212, file: !2636, line: 890, column: 6)
!16224 = !DILocation(line: 890, column: 6, scope: !16212)
!16225 = !DILocation(line: 888, column: 32, scope: !16212)
!16226 = !DILocation(line: 891, column: 10, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16223, file: !2636, line: 890, column: 38)
!16228 = !DILocation(line: 891, column: 3, scope: !16227)
!16229 = !DILocation(line: 894, column: 18, scope: !16212)
!16230 = !DILocation(line: 894, column: 2, scope: !16212)
!16231 = !DILocation(line: 895, column: 17, scope: !16212)
!16232 = !DILocation(line: 895, column: 9, scope: !16212)
!16233 = !DILocation(line: 895, column: 15, scope: !16212)
!16234 = !DILocation(line: 898, column: 24, scope: !16212)
!16235 = !DILocation(line: 898, column: 2, scope: !16212)
!16236 = !DILocation(line: 900, column: 2, scope: !16212)
!16237 = !DILocation(line: 901, column: 1, scope: !16212)
!16238 = distinct !DISubprogram(name: "work_timeout", scope: !2636, file: !2636, line: 806, type: !2559, scopeLine: 807, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16239)
!16239 = !{!16240, !16241, !16242, !16243, !16244}
!16240 = !DILocalVariable(name: "to", arg: 1, scope: !16238, file: !2636, line: 806, type: !2561)
!16241 = !DILocalVariable(name: "dw", scope: !16238, file: !2636, line: 808, type: !2627)
!16242 = !DILocalVariable(name: "wp", scope: !16238, file: !2636, line: 810, type: !2484)
!16243 = !DILocalVariable(name: "key", scope: !16238, file: !2636, line: 811, type: !14881)
!16244 = !DILocalVariable(name: "queue", scope: !16238, file: !2636, line: 812, type: !2499)
!16245 = !DILocation(line: 0, scope: !16238)
!16246 = !DILocation(line: 809, column: 5, scope: !16238)
!16247 = !DILocation(line: 0, scope: !14888, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 811, column: 25, scope: !16238)
!16249 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16250)
!16250 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16248)
!16251 = !DILocation(line: 0, scope: !14897, inlinedAt: !16250)
!16252 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16248)
!16253 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16248)
!16254 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16248)
!16255 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16248)
!16256 = !DILocation(line: 812, column: 2, scope: !16238)
!16257 = !DILocation(line: 821, column: 31, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16238, file: !2636, line: 821, column: 6)
!16259 = !DILocation(line: 821, column: 6, scope: !16258)
!16260 = !DILocation(line: 821, column: 6, scope: !16238)
!16261 = !DILocation(line: 810, column: 27, scope: !16238)
!16262 = !DILocation(line: 822, column: 15, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16258, file: !2636, line: 821, column: 59)
!16264 = !DILocation(line: 822, column: 9, scope: !16263)
!16265 = !DILocation(line: 823, column: 9, scope: !16263)
!16266 = !DILocation(line: 824, column: 2, scope: !16263)
!16267 = !DILocation(line: 0, scope: !14913, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 826, column: 2, scope: !16238)
!16269 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16268)
!16270 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16268)
!16271 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16268)
!16272 = !DILocation(line: 0, scope: !14927, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16268)
!16274 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16273)
!16275 = !DILocation(line: 827, column: 1, scope: !16238)
!16276 = distinct !DISubprogram(name: "k_work_schedule", scope: !2636, file: !2636, line: 971, type: !16277, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16279)
!16277 = !DISubroutineType(types: !16278)
!16278 = !{!103, !2627, !15290}
!16279 = !{!16280, !16281, !16282}
!16280 = !DILocalVariable(name: "dwork", arg: 1, scope: !16276, file: !2636, line: 971, type: !2627)
!16281 = !DILocalVariable(name: "delay", arg: 2, scope: !16276, file: !2636, line: 972, type: !15290)
!16282 = !DILocalVariable(name: "ret", scope: !16276, file: !2636, line: 976, type: !103)
!16283 = !DILocation(line: 0, scope: !16276)
!16284 = !DILocation(line: 976, column: 12, scope: !16276)
!16285 = !DILocation(line: 980, column: 2, scope: !16276)
!16286 = distinct !DISubprogram(name: "k_work_reschedule_for_queue", scope: !2636, file: !2636, line: 983, type: !16170, scopeLine: 986, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16287)
!16287 = !{!16288, !16289, !16290, !16291, !16292}
!16288 = !DILocalVariable(name: "queue", arg: 1, scope: !16286, file: !2636, line: 983, type: !2499)
!16289 = !DILocalVariable(name: "dwork", arg: 2, scope: !16286, file: !2636, line: 984, type: !2627)
!16290 = !DILocalVariable(name: "delay", arg: 3, scope: !16286, file: !2636, line: 985, type: !15290)
!16291 = !DILocalVariable(name: "ret", scope: !16286, file: !2636, line: 991, type: !103)
!16292 = !DILocalVariable(name: "key", scope: !16286, file: !2636, line: 992, type: !14881)
!16293 = !DILocation(line: 0, scope: !16286)
!16294 = !DILocation(line: 987, column: 2, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !2636, line: 987, column: 2)
!16296 = distinct !DILexicalBlock(scope: !16286, file: !2636, line: 987, column: 2)
!16297 = !DILocation(line: 987, column: 2, scope: !16296)
!16298 = !DILocation(line: 987, column: 2, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16295, file: !2636, line: 987, column: 2)
!16300 = !DILocation(line: 0, scope: !14888, inlinedAt: !16301)
!16301 = distinct !DILocation(line: 992, column: 25, scope: !16286)
!16302 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16301)
!16304 = !DILocation(line: 0, scope: !14897, inlinedAt: !16303)
!16305 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16301)
!16306 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16301)
!16307 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16301)
!16308 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16301)
!16309 = !DILocation(line: 995, column: 8, scope: !16286)
!16310 = !DILocation(line: 998, column: 8, scope: !16286)
!16311 = !DILocation(line: 0, scope: !14913, inlinedAt: !16312)
!16312 = distinct !DILocation(line: 1000, column: 2, scope: !16286)
!16313 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16312)
!16314 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16312)
!16315 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16312)
!16316 = !DILocation(line: 0, scope: !14927, inlinedAt: !16317)
!16317 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16312)
!16318 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16317)
!16319 = !DILocation(line: 1004, column: 2, scope: !16286)
!16320 = distinct !DISubprogram(name: "unschedule_locked", scope: !2636, file: !2636, line: 915, type: !16321, scopeLine: 916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16323)
!16321 = !DISubroutineType(types: !16322)
!16322 = !{!279, !2627}
!16323 = !{!16324, !16325, !16326}
!16324 = !DILocalVariable(name: "dwork", arg: 1, scope: !16320, file: !2636, line: 915, type: !2627)
!16325 = !DILocalVariable(name: "ret", scope: !16320, file: !2636, line: 917, type: !279)
!16326 = !DILocalVariable(name: "work", scope: !16320, file: !2636, line: 918, type: !2484)
!16327 = !DILocation(line: 0, scope: !16320)
!16328 = !DILocation(line: 921, column: 33, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16320, file: !2636, line: 921, column: 6)
!16330 = !DILocation(line: 921, column: 6, scope: !16329)
!16331 = !DILocation(line: 921, column: 6, scope: !16320)
!16332 = !DILocation(line: 922, column: 27, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16329, file: !2636, line: 921, column: 61)
!16334 = !DILocation(line: 922, column: 3, scope: !16333)
!16335 = !DILocation(line: 924, column: 2, scope: !16333)
!16336 = !DILocation(line: 926, column: 2, scope: !16320)
!16337 = distinct !DISubprogram(name: "k_work_reschedule", scope: !2636, file: !2636, line: 1007, type: !16277, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16338)
!16338 = !{!16339, !16340, !16341}
!16339 = !DILocalVariable(name: "dwork", arg: 1, scope: !16337, file: !2636, line: 1007, type: !2627)
!16340 = !DILocalVariable(name: "delay", arg: 2, scope: !16337, file: !2636, line: 1008, type: !15290)
!16341 = !DILocalVariable(name: "ret", scope: !16337, file: !2636, line: 1012, type: !103)
!16342 = !DILocation(line: 0, scope: !16337)
!16343 = !DILocation(line: 1012, column: 12, scope: !16337)
!16344 = !DILocation(line: 1016, column: 2, scope: !16337)
!16345 = distinct !DISubprogram(name: "k_work_cancel_delayable", scope: !2636, file: !2636, line: 1019, type: !16346, scopeLine: 1020, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16348)
!16346 = !DISubroutineType(types: !16347)
!16347 = !{!103, !2627}
!16348 = !{!16349, !16350, !16351}
!16349 = !DILocalVariable(name: "dwork", arg: 1, scope: !16345, file: !2636, line: 1019, type: !2627)
!16350 = !DILocalVariable(name: "key", scope: !16345, file: !2636, line: 1025, type: !14881)
!16351 = !DILocalVariable(name: "ret", scope: !16345, file: !2636, line: 1026, type: !103)
!16352 = !DILocation(line: 0, scope: !16345)
!16353 = !DILocation(line: 1021, column: 2, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16355, file: !2636, line: 1021, column: 2)
!16355 = distinct !DILexicalBlock(scope: !16345, file: !2636, line: 1021, column: 2)
!16356 = !DILocation(line: 1021, column: 2, scope: !16355)
!16357 = !DILocation(line: 1021, column: 2, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16354, file: !2636, line: 1021, column: 2)
!16359 = !DILocation(line: 0, scope: !14888, inlinedAt: !16360)
!16360 = distinct !DILocation(line: 1025, column: 25, scope: !16345)
!16361 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16362)
!16362 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16360)
!16363 = !DILocation(line: 0, scope: !14897, inlinedAt: !16362)
!16364 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16360)
!16365 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16360)
!16366 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16360)
!16367 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16360)
!16368 = !DILocation(line: 1026, column: 12, scope: !16345)
!16369 = !DILocation(line: 0, scope: !14913, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 1028, column: 2, scope: !16345)
!16371 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16370)
!16372 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16370)
!16373 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16370)
!16374 = !DILocation(line: 0, scope: !14927, inlinedAt: !16375)
!16375 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16370)
!16376 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16375)
!16377 = !DILocation(line: 1032, column: 2, scope: !16345)
!16378 = distinct !DISubprogram(name: "cancel_delayable_async_locked", scope: !2636, file: !2636, line: 940, type: !16346, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16379)
!16379 = !{!16380}
!16380 = !DILocalVariable(name: "dwork", arg: 1, scope: !16378, file: !2636, line: 940, type: !2627)
!16381 = !DILocation(line: 0, scope: !16378)
!16382 = !DILocation(line: 942, column: 8, scope: !16378)
!16383 = !DILocation(line: 944, column: 37, scope: !16378)
!16384 = !DILocation(line: 944, column: 9, scope: !16378)
!16385 = !DILocation(line: 944, column: 2, scope: !16378)
!16386 = distinct !DISubprogram(name: "k_work_cancel_delayable_sync", scope: !2636, file: !2636, line: 1035, type: !16387, scopeLine: 1037, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16389)
!16387 = !DISubroutineType(types: !16388)
!16388 = !{!279, !2627, !15193}
!16389 = !{!16390, !16391, !16392, !16393, !16394, !16395}
!16390 = !DILocalVariable(name: "dwork", arg: 1, scope: !16386, file: !2636, line: 1035, type: !2627)
!16391 = !DILocalVariable(name: "sync", arg: 2, scope: !16386, file: !2636, line: 1036, type: !15193)
!16392 = !DILocalVariable(name: "canceller", scope: !16386, file: !2636, line: 1047, type: !2621)
!16393 = !DILocalVariable(name: "key", scope: !16386, file: !2636, line: 1048, type: !14881)
!16394 = !DILocalVariable(name: "pending", scope: !16386, file: !2636, line: 1049, type: !279)
!16395 = !DILocalVariable(name: "need_wait", scope: !16386, file: !2636, line: 1050, type: !279)
!16396 = !DILocation(line: 0, scope: !16386)
!16397 = !DILocation(line: 1038, column: 2, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16399, file: !2636, line: 1038, column: 2)
!16399 = distinct !DILexicalBlock(scope: !16386, file: !2636, line: 1038, column: 2)
!16400 = !DILocation(line: 1038, column: 2, scope: !16399)
!16401 = !DILocation(line: 1038, column: 2, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16398, file: !2636, line: 1038, column: 2)
!16403 = !DILocation(line: 1039, column: 2, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16405, file: !2636, line: 1039, column: 2)
!16405 = distinct !DILexicalBlock(scope: !16386, file: !2636, line: 1039, column: 2)
!16406 = !DILocation(line: 1039, column: 2, scope: !16405)
!16407 = !DILocation(line: 1039, column: 2, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16404, file: !2636, line: 1039, column: 2)
!16409 = !DILocation(line: 1040, column: 2, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16411, file: !2636, line: 1040, column: 2)
!16411 = distinct !DILexicalBlock(scope: !16386, file: !2636, line: 1040, column: 2)
!16412 = !DILocation(line: 1040, column: 2, scope: !16411)
!16413 = !DILocation(line: 1040, column: 2, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16410, file: !2636, line: 1040, column: 2)
!16415 = !DILocation(line: 0, scope: !14888, inlinedAt: !16416)
!16416 = distinct !DILocation(line: 1048, column: 25, scope: !16386)
!16417 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16418)
!16418 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16416)
!16419 = !DILocation(line: 0, scope: !14897, inlinedAt: !16418)
!16420 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16416)
!16421 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16416)
!16422 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16416)
!16423 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16416)
!16424 = !DILocation(line: 1049, column: 18, scope: !16386)
!16425 = !DILocation(line: 1049, column: 56, scope: !16386)
!16426 = !DILocation(line: 1052, column: 6, scope: !16386)
!16427 = !DILocation(line: 1047, column: 46, scope: !16386)
!16428 = !DILocation(line: 1053, column: 9, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !16430, file: !2636, line: 1052, column: 15)
!16430 = distinct !DILexicalBlock(scope: !16386, file: !2636, line: 1052, column: 6)
!16431 = !DILocation(line: 1054, column: 42, scope: !16429)
!16432 = !DILocation(line: 1054, column: 15, scope: !16429)
!16433 = !DILocation(line: 0, scope: !14913, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 1057, column: 2, scope: !16386)
!16435 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16434)
!16436 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16434)
!16437 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16434)
!16438 = !DILocation(line: 0, scope: !14927, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16434)
!16440 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16439)
!16441 = !DILocation(line: 1059, column: 6, scope: !16386)
!16442 = !DILocation(line: 1060, column: 26, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16444, file: !2636, line: 1059, column: 17)
!16444 = distinct !DILexicalBlock(scope: !16386, file: !2636, line: 1059, column: 6)
!16445 = !DILocation(line: 1060, column: 3, scope: !16443)
!16446 = !DILocation(line: 1061, column: 2, scope: !16443)
!16447 = !DILocation(line: 0, scope: !14913, inlinedAt: !16448)
!16448 = distinct !DILocation(line: 1057, column: 2, scope: !16386)
!16449 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16448)
!16450 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16448)
!16451 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16448)
!16452 = !DILocation(line: 0, scope: !14927, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16448)
!16454 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16453)
!16455 = !DILocation(line: 1064, column: 2, scope: !16386)
!16456 = distinct !DISubprogram(name: "k_work_flush_delayable", scope: !2636, file: !2636, line: 1067, type: !16387, scopeLine: 1069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !16457)
!16457 = !{!16458, !16459, !16460, !16461, !16462, !16463, !16466}
!16458 = !DILocalVariable(name: "dwork", arg: 1, scope: !16456, file: !2636, line: 1067, type: !2627)
!16459 = !DILocalVariable(name: "sync", arg: 2, scope: !16456, file: !2636, line: 1068, type: !15193)
!16460 = !DILocalVariable(name: "work", scope: !16456, file: !2636, line: 1079, type: !2484)
!16461 = !DILocalVariable(name: "flusher", scope: !16456, file: !2636, line: 1080, type: !2610)
!16462 = !DILocalVariable(name: "key", scope: !16456, file: !2636, line: 1081, type: !14881)
!16463 = !DILocalVariable(name: "queue", scope: !16464, file: !2636, line: 1096, type: !2499)
!16464 = distinct !DILexicalBlock(scope: !16465, file: !2636, line: 1095, column: 32)
!16465 = distinct !DILexicalBlock(scope: !16456, file: !2636, line: 1095, column: 6)
!16466 = !DILocalVariable(name: "need_flush", scope: !16456, file: !2636, line: 1102, type: !279)
!16467 = !DILocation(line: 0, scope: !16456)
!16468 = !DILocation(line: 1070, column: 2, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16470, file: !2636, line: 1070, column: 2)
!16470 = distinct !DILexicalBlock(scope: !16456, file: !2636, line: 1070, column: 2)
!16471 = !DILocation(line: 1070, column: 2, scope: !16470)
!16472 = !DILocation(line: 1070, column: 2, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16469, file: !2636, line: 1070, column: 2)
!16474 = !DILocation(line: 1071, column: 2, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16476, file: !2636, line: 1071, column: 2)
!16476 = distinct !DILexicalBlock(scope: !16456, file: !2636, line: 1071, column: 2)
!16477 = !DILocation(line: 1071, column: 2, scope: !16476)
!16478 = !DILocation(line: 1071, column: 2, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16475, file: !2636, line: 1071, column: 2)
!16480 = !DILocation(line: 1072, column: 2, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16482, file: !2636, line: 1072, column: 2)
!16482 = distinct !DILexicalBlock(scope: !16456, file: !2636, line: 1072, column: 2)
!16483 = !DILocation(line: 1072, column: 2, scope: !16482)
!16484 = !DILocation(line: 1072, column: 2, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16481, file: !2636, line: 1072, column: 2)
!16486 = !DILocation(line: 1079, column: 32, scope: !16456)
!16487 = !DILocation(line: 1080, column: 42, scope: !16456)
!16488 = !DILocation(line: 0, scope: !14888, inlinedAt: !16489)
!16489 = distinct !DILocation(line: 1081, column: 25, scope: !16456)
!16490 = !DILocation(line: 55, column: 2, scope: !14897, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 145, column: 10, scope: !14888, inlinedAt: !16489)
!16492 = !DILocation(line: 0, scope: !14897, inlinedAt: !16491)
!16493 = !DILocation(line: 148, column: 2, scope: !14905, inlinedAt: !16489)
!16494 = !DILocation(line: 148, column: 2, scope: !14906, inlinedAt: !16489)
!16495 = !DILocation(line: 148, column: 2, scope: !14909, inlinedAt: !16489)
!16496 = !DILocation(line: 160, column: 2, scope: !14888, inlinedAt: !16489)
!16497 = !DILocation(line: 1084, column: 6, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16456, file: !2636, line: 1084, column: 6)
!16499 = !DILocation(line: 1084, column: 33, scope: !16498)
!16500 = !DILocation(line: 1084, column: 6, scope: !16456)
!16501 = !DILocation(line: 0, scope: !14913, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 1085, column: 3, scope: !16503)
!16503 = distinct !DILexicalBlock(scope: !16498, file: !2636, line: 1084, column: 40)
!16504 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16502)
!16505 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16502)
!16506 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16502)
!16507 = !DILocation(line: 0, scope: !14927, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16502)
!16509 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16508)
!16510 = !DILocation(line: 1089, column: 3, scope: !16503)
!16511 = !DILocation(line: 1095, column: 6, scope: !16465)
!16512 = !DILocation(line: 1095, column: 6, scope: !16456)
!16513 = !DILocation(line: 1096, column: 3, scope: !16464)
!16514 = !DILocation(line: 1096, column: 35, scope: !16464)
!16515 = !DILocation(line: 0, scope: !16464)
!16516 = !DILocation(line: 1096, column: 20, scope: !16464)
!16517 = !DILocation(line: 1098, column: 9, scope: !16464)
!16518 = !DILocation(line: 1099, column: 2, scope: !16465)
!16519 = !DILocation(line: 1099, column: 2, scope: !16464)
!16520 = !DILocation(line: 1102, column: 20, scope: !16456)
!16521 = !DILocation(line: 0, scope: !14913, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 1104, column: 2, scope: !16456)
!16523 = !DILocation(line: 194, column: 2, scope: !14921, inlinedAt: !16522)
!16524 = !DILocation(line: 194, column: 2, scope: !14922, inlinedAt: !16522)
!16525 = !DILocation(line: 194, column: 2, scope: !14925, inlinedAt: !16522)
!16526 = !DILocation(line: 0, scope: !14927, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 215, column: 2, scope: !14913, inlinedAt: !16522)
!16528 = !DILocation(line: 95, column: 2, scope: !14927, inlinedAt: !16527)
!16529 = !DILocation(line: 1107, column: 6, scope: !16456)
!16530 = !DILocation(line: 1108, column: 24, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16532, file: !2636, line: 1107, column: 18)
!16532 = distinct !DILexicalBlock(scope: !16456, file: !2636, line: 1107, column: 6)
!16533 = !DILocation(line: 1108, column: 3, scope: !16531)
!16534 = !DILocation(line: 1109, column: 2, scope: !16531)
!16535 = !DILocation(line: 1114, column: 1, scope: !16456)
!16536 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2744, file: !2744, line: 93, type: !16537, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16539)
!16537 = !DISubroutineType(types: !16538)
!16538 = !{!371, !2642, !2642}
!16539 = !{!16540, !16541, !16542, !16543}
!16540 = !DILocalVariable(name: "thread_1", arg: 1, scope: !16536, file: !2744, line: 93, type: !2642)
!16541 = !DILocalVariable(name: "thread_2", arg: 2, scope: !16536, file: !2744, line: 94, type: !2642)
!16542 = !DILocalVariable(name: "b1", scope: !16536, file: !2744, line: 97, type: !371)
!16543 = !DILocalVariable(name: "b2", scope: !16536, file: !2744, line: 98, type: !371)
!16544 = !DILocation(line: 0, scope: !16536)
!16545 = !DILocation(line: 97, column: 30, scope: !16536)
!16546 = !DILocation(line: 98, column: 30, scope: !16536)
!16547 = !DILocation(line: 100, column: 9, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16536, file: !2744, line: 100, column: 6)
!16549 = !DILocation(line: 100, column: 6, scope: !16536)
!16550 = !DILocation(line: 125, column: 1, scope: !16536)
!16551 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2744, file: !2744, line: 428, type: !16552, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16554)
!16552 = !DISubroutineType(types: !16553)
!16553 = !{null, !2642}
!16554 = !{!16555}
!16555 = !DILocalVariable(name: "curr", arg: 1, scope: !16551, file: !2744, line: 428, type: !2642)
!16556 = !DILocation(line: 0, scope: !16551)
!16557 = !DILocation(line: 434, column: 6, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16551, file: !2744, line: 434, column: 6)
!16559 = !DILocation(line: 434, column: 23, scope: !16558)
!16560 = !DILocation(line: 434, column: 6, scope: !16551)
!16561 = !DILocation(line: 435, column: 50, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16558, file: !2744, line: 434, column: 29)
!16563 = !DILocation(line: 435, column: 48, scope: !16562)
!16564 = !DILocation(line: 435, column: 29, scope: !16562)
!16565 = !DILocation(line: 436, column: 24, scope: !16562)
!16566 = !DILocation(line: 436, column: 3, scope: !16562)
!16567 = !DILocation(line: 437, column: 2, scope: !16562)
!16568 = !DILocation(line: 438, column: 1, scope: !16551)
!16569 = distinct !DISubprogram(name: "slice_time", scope: !2744, file: !2744, line: 407, type: !16570, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16572)
!16570 = !DISubroutineType(types: !16571)
!16571 = !{!103, !2642}
!16572 = !{!16573, !16574}
!16573 = !DILocalVariable(name: "curr", arg: 1, scope: !16569, file: !2744, line: 407, type: !2642)
!16574 = !DILocalVariable(name: "ret", scope: !16569, file: !2744, line: 409, type: !103)
!16575 = !DILocation(line: 0, scope: !16569)
!16576 = !DILocation(line: 409, column: 12, scope: !16569)
!16577 = !DILocation(line: 416, column: 2, scope: !16569)
!16578 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2744, file: !2744, line: 440, type: !16579, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16581)
!16579 = !DISubroutineType(types: !16580)
!16580 = !{null, !371, !103}
!16581 = !{!16582, !16583, !16584, !16590}
!16582 = !DILocalVariable(name: "slice", arg: 1, scope: !16578, file: !2744, line: 440, type: !371)
!16583 = !DILocalVariable(name: "prio", arg: 2, scope: !16578, file: !2744, line: 440, type: !103)
!16584 = !DILocalVariable(name: "__i", scope: !16585, file: !2744, line: 442, type: !16586)
!16585 = distinct !DILexicalBlock(scope: !16578, file: !2744, line: 442, column: 2)
!16586 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !16587)
!16587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !16588)
!16588 = !{!16589}
!16589 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16587, file: !244, line: 33, baseType: !103, size: 32)
!16590 = !DILocalVariable(name: "__key", scope: !16585, file: !2744, line: 442, type: !16586)
!16591 = !DILocation(line: 0, scope: !16578)
!16592 = !DILocation(line: 0, scope: !16585)
!16593 = !DILocalVariable(name: "l", arg: 1, scope: !16594, file: !244, line: 136, type: !16597)
!16594 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !16595, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16598)
!16595 = !DISubroutineType(types: !16596)
!16596 = !{!16586, !16597}
!16597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!16598 = !{!16593, !16599}
!16599 = !DILocalVariable(name: "k", scope: !16594, file: !244, line: 139, type: !16586)
!16600 = !DILocation(line: 0, scope: !16594, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 442, column: 2, scope: !16585)
!16602 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !16607)
!16603 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16604)
!16604 = !{!16605, !16606}
!16605 = !DILocalVariable(name: "key", scope: !16603, file: !7921, line: 44, type: !32)
!16606 = !DILocalVariable(name: "tmp", scope: !16603, file: !7921, line: 53, type: !32)
!16607 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !16601)
!16608 = !{i64 2888750}
!16609 = !DILocation(line: 0, scope: !16603, inlinedAt: !16607)
!16610 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !16601)
!16611 = distinct !DILexicalBlock(scope: !16612, file: !244, line: 148, column: 2)
!16612 = distinct !DILexicalBlock(scope: !16594, file: !244, line: 148, column: 2)
!16613 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !16601)
!16614 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !16601)
!16615 = distinct !DILexicalBlock(scope: !16611, file: !244, line: 148, column: 2)
!16616 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !16601)
!16617 = !DILocation(line: 443, column: 29, scope: !16618)
!16618 = distinct !DILexicalBlock(scope: !16619, file: !2744, line: 442, column: 26)
!16619 = distinct !DILexicalBlock(scope: !16585, file: !2744, line: 442, column: 2)
!16620 = !DILocation(line: 444, column: 17, scope: !16618)
!16621 = !DILocation(line: 445, column: 51, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16618, file: !2744, line: 445, column: 7)
!16623 = !DILocation(line: 445, column: 7, scope: !16618)
!16624 = !DILocation(line: 0, scope: !16618)
!16625 = !DILocation(line: 451, column: 18, scope: !16618)
!16626 = !DILocation(line: 452, column: 3, scope: !16618)
!16627 = !DILocalVariable(name: "key", arg: 2, scope: !16628, file: !244, line: 190, type: !16586)
!16628 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !16629, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16631)
!16629 = !DISubroutineType(types: !16630)
!16630 = !{null, !16597, !16586}
!16631 = !{!16632, !16627}
!16632 = !DILocalVariable(name: "l", arg: 1, scope: !16628, file: !244, line: 189, type: !16597)
!16633 = !DILocation(line: 0, scope: !16628, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 442, column: 2, scope: !16619)
!16635 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !16634)
!16636 = distinct !DILexicalBlock(scope: !16637, file: !244, line: 194, column: 2)
!16637 = distinct !DILexicalBlock(scope: !16628, file: !244, line: 194, column: 2)
!16638 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !16634)
!16639 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !16634)
!16640 = distinct !DILexicalBlock(scope: !16636, file: !244, line: 194, column: 2)
!16641 = !DILocalVariable(name: "key", arg: 1, scope: !16642, file: !7921, line: 84, type: !32)
!16642 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16643)
!16643 = !{!16641}
!16644 = !DILocation(line: 0, scope: !16642, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !16634)
!16646 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !16645)
!16647 = !{i64 2889567}
!16648 = !DILocation(line: 454, column: 1, scope: !16578)
!16649 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3995, file: !3995, line: 389, type: !16650, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16652)
!16650 = !DISubroutineType(types: !16651)
!16651 = !{!190, !190}
!16652 = !{!16653}
!16653 = !DILocalVariable(name: "t", arg: 1, scope: !16649, file: !3995, line: 389, type: !190)
!16654 = !DILocation(line: 0, scope: !16649)
!16655 = !DILocalVariable(name: "t", arg: 1, scope: !16656, file: !3995, line: 102, type: !321)
!16656 = distinct !DISubprogram(name: "z_tmcvt", scope: !3995, file: !3995, line: 102, type: !4003, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16657)
!16657 = !{!16655, !16658, !16659, !16660, !16661, !16662, !16663, !16664, !16665, !16666, !16667}
!16658 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16656, file: !3995, line: 102, type: !190)
!16659 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16656, file: !3995, line: 103, type: !190)
!16660 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16656, file: !3995, line: 103, type: !279)
!16661 = !DILocalVariable(name: "result32", arg: 5, scope: !16656, file: !3995, line: 104, type: !279)
!16662 = !DILocalVariable(name: "round_up", arg: 6, scope: !16656, file: !3995, line: 104, type: !279)
!16663 = !DILocalVariable(name: "round_off", arg: 7, scope: !16656, file: !3995, line: 105, type: !279)
!16664 = !DILocalVariable(name: "mul_ratio", scope: !16656, file: !3995, line: 107, type: !279)
!16665 = !DILocalVariable(name: "div_ratio", scope: !16656, file: !3995, line: 109, type: !279)
!16666 = !DILocalVariable(name: "off", scope: !16656, file: !3995, line: 116, type: !321)
!16667 = !DILocalVariable(name: "rdivisor", scope: !16668, file: !3995, line: 119, type: !190)
!16668 = distinct !DILexicalBlock(scope: !16669, file: !3995, line: 118, column: 18)
!16669 = distinct !DILexicalBlock(scope: !16656, file: !3995, line: 118, column: 6)
!16670 = !DILocation(line: 0, scope: !16656, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 392, column: 9, scope: !16649)
!16672 = !DILocation(line: 143, column: 25, scope: !16673, inlinedAt: !16671)
!16673 = distinct !DILexicalBlock(scope: !16674, file: !3995, line: 142, column: 17)
!16674 = distinct !DILexicalBlock(scope: !16675, file: !3995, line: 142, column: 7)
!16675 = distinct !DILexicalBlock(scope: !16676, file: !3995, line: 141, column: 24)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !3995, line: 141, column: 13)
!16677 = distinct !DILexicalBlock(scope: !16656, file: !3995, line: 134, column: 6)
!16678 = !DILocation(line: 392, column: 2, scope: !16649)
!16679 = distinct !DISubprogram(name: "z_time_slice", scope: !2744, file: !2744, line: 502, type: !12884, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16680)
!16680 = !{!16681, !16682}
!16681 = !DILocalVariable(name: "ticks", arg: 1, scope: !16679, file: !2744, line: 502, type: !103)
!16682 = !DILocalVariable(name: "key", scope: !16679, file: !2744, line: 511, type: !16586)
!16683 = !DILocation(line: 0, scope: !16679)
!16684 = !DILocation(line: 0, scope: !16594, inlinedAt: !16685)
!16685 = distinct !DILocation(line: 511, column: 25, scope: !16679)
!16686 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !16685)
!16688 = !DILocation(line: 0, scope: !16603, inlinedAt: !16687)
!16689 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !16685)
!16690 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !16685)
!16691 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !16685)
!16692 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !16685)
!16693 = !DILocation(line: 514, column: 6, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16679, file: !2744, line: 514, column: 6)
!16695 = !DILocation(line: 514, column: 25, scope: !16694)
!16696 = !DILocation(line: 514, column: 22, scope: !16694)
!16697 = !DILocation(line: 514, column: 6, scope: !16679)
!16698 = !DILocation(line: 515, column: 3, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !16694, file: !2744, line: 514, column: 35)
!16700 = !DILocation(line: 0, scope: !16628, inlinedAt: !16701)
!16701 = distinct !DILocation(line: 516, column: 3, scope: !16699)
!16702 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !16701)
!16703 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !16701)
!16704 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !16701)
!16705 = !DILocation(line: 0, scope: !16642, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !16701)
!16707 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !16706)
!16708 = !DILocation(line: 517, column: 3, scope: !16699)
!16709 = !DILocation(line: 519, column: 18, scope: !16679)
!16710 = !DILocation(line: 522, column: 6, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16679, file: !2744, line: 522, column: 6)
!16712 = !DILocation(line: 522, column: 27, scope: !16711)
!16713 = !DILocation(line: 522, column: 30, scope: !16711)
!16714 = !DILocation(line: 522, column: 6, scope: !16679)
!16715 = !DILocation(line: 523, column: 30, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16717, file: !2744, line: 523, column: 7)
!16717 = distinct !DILexicalBlock(scope: !16711, file: !2744, line: 522, column: 51)
!16718 = !DILocation(line: 523, column: 13, scope: !16716)
!16719 = !DILocation(line: 523, column: 7, scope: !16717)
!16720 = !DILocation(line: 530, column: 10, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16716, file: !2744, line: 523, column: 43)
!16722 = !DILocation(line: 531, column: 3, scope: !16721)
!16723 = !DILocation(line: 532, column: 30, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16716, file: !2744, line: 531, column: 10)
!16725 = !DILocation(line: 535, column: 29, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16711, file: !2744, line: 534, column: 9)
!16727 = !DILocation(line: 0, scope: !16628, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 537, column: 2, scope: !16679)
!16729 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !16728)
!16730 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !16728)
!16731 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !16728)
!16732 = !DILocation(line: 0, scope: !16642, inlinedAt: !16733)
!16733 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !16728)
!16734 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !16733)
!16735 = !DILocation(line: 538, column: 1, scope: !16679)
!16736 = distinct !DISubprogram(name: "sliceable", scope: !2744, file: !2744, line: 468, type: !16737, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16739)
!16737 = !DISubroutineType(types: !16738)
!16738 = !{!279, !2642}
!16739 = !{!16740, !16741}
!16740 = !DILocalVariable(name: "thread", arg: 1, scope: !16736, file: !2744, line: 468, type: !2642)
!16741 = !DILocalVariable(name: "ret", scope: !16736, file: !2744, line: 470, type: !279)
!16742 = !DILocation(line: 0, scope: !16736)
!16743 = !DILocation(line: 470, column: 13, scope: !16736)
!16744 = !DILocation(line: 471, column: 3, scope: !16736)
!16745 = !DILocation(line: 471, column: 7, scope: !16736)
!16746 = !DILocation(line: 472, column: 3, scope: !16736)
!16747 = !DILocation(line: 472, column: 37, scope: !16736)
!16748 = !DILocation(line: 472, column: 24, scope: !16736)
!16749 = !DILocation(line: 472, column: 43, scope: !16736)
!16750 = !DILocation(line: 472, column: 7, scope: !16736)
!16751 = !DILocation(line: 473, column: 3, scope: !16736)
!16752 = !DILocation(line: 473, column: 7, scope: !16736)
!16753 = !DILocation(line: 473, column: 6, scope: !16736)
!16754 = !DILocation(line: 479, column: 2, scope: !16736)
!16755 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2744, file: !2744, line: 482, type: !16756, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16758)
!16756 = !DISubroutineType(types: !16757)
!16757 = !{!16586, !16586}
!16758 = !{!16759, !16760}
!16759 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16755, file: !2744, line: 482, type: !16586)
!16760 = !DILocalVariable(name: "curr", scope: !16755, file: !2744, line: 484, type: !2642)
!16761 = !DILocation(line: 0, scope: !16755)
!16762 = !DILocation(line: 484, column: 26, scope: !16755)
!16763 = !DILocation(line: 493, column: 7, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16755, file: !2744, line: 493, column: 6)
!16765 = !DILocation(line: 493, column: 6, scope: !16755)
!16766 = !DILocation(line: 494, column: 3, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16764, file: !2744, line: 493, column: 49)
!16768 = !DILocation(line: 495, column: 2, scope: !16767)
!16769 = !DILocation(line: 496, column: 2, scope: !16755)
!16770 = !DILocation(line: 499, column: 1, scope: !16755)
!16771 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12927, file: !12927, line: 106, type: !16737, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16772)
!16772 = !{!16773, !16774}
!16773 = !DILocalVariable(name: "thread", arg: 1, scope: !16771, file: !12927, line: 106, type: !2642)
!16774 = !DILocalVariable(name: "state", scope: !16771, file: !12927, line: 108, type: !173)
!16775 = !DILocation(line: 0, scope: !16771)
!16776 = !DILocation(line: 108, column: 31, scope: !16771)
!16777 = !DILocation(line: 110, column: 16, scope: !16771)
!16778 = !DILocation(line: 111, column: 41, scope: !16771)
!16779 = !DILocation(line: 110, column: 2, scope: !16771)
!16780 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2744, file: !2744, line: 393, type: !16552, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16781)
!16781 = !{!16782}
!16782 = !DILocalVariable(name: "thread", arg: 1, scope: !16780, file: !2744, line: 393, type: !2642)
!16783 = !DILocation(line: 0, scope: !16780)
!16784 = !DILocation(line: 395, column: 6, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16780, file: !2744, line: 395, column: 6)
!16786 = !DILocation(line: 395, column: 6, scope: !16780)
!16787 = !DILocalVariable(name: "thread", arg: 1, scope: !16788, file: !2744, line: 264, type: !2642)
!16788 = distinct !DISubprogram(name: "dequeue_thread", scope: !2744, file: !2744, line: 264, type: !16552, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16789)
!16789 = !{!16787}
!16790 = !DILocation(line: 0, scope: !16788, inlinedAt: !16791)
!16791 = distinct !DILocation(line: 396, column: 3, scope: !16792)
!16792 = distinct !DILexicalBlock(scope: !16785, file: !2744, line: 395, column: 34)
!16793 = !DILocation(line: 266, column: 15, scope: !16788, inlinedAt: !16791)
!16794 = !DILocation(line: 266, column: 28, scope: !16788, inlinedAt: !16791)
!16795 = !DILocalVariable(name: "thread", arg: 1, scope: !16796, file: !2744, line: 232, type: !2642)
!16796 = distinct !DISubprogram(name: "runq_remove", scope: !2744, file: !2744, line: 232, type: !16552, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16797)
!16797 = !{!16795}
!16798 = !DILocation(line: 0, scope: !16796, inlinedAt: !16799)
!16799 = distinct !DILocation(line: 268, column: 3, scope: !16800, inlinedAt: !16791)
!16800 = distinct !DILexicalBlock(scope: !16801, file: !2744, line: 267, column: 35)
!16801 = distinct !DILexicalBlock(scope: !16788, file: !2744, line: 267, column: 6)
!16802 = !DILocation(line: 234, column: 2, scope: !16796, inlinedAt: !16799)
!16803 = !DILocation(line: 397, column: 2, scope: !16792)
!16804 = !DILocalVariable(name: "thread", arg: 1, scope: !16805, file: !2744, line: 250, type: !2642)
!16805 = distinct !DISubprogram(name: "queue_thread", scope: !2744, file: !2744, line: 250, type: !16552, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16806)
!16806 = !{!16804}
!16807 = !DILocation(line: 0, scope: !16805, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 398, column: 2, scope: !16780)
!16809 = !DILocation(line: 252, column: 15, scope: !16805, inlinedAt: !16808)
!16810 = !DILocation(line: 252, column: 28, scope: !16805, inlinedAt: !16808)
!16811 = !DILocalVariable(name: "thread", arg: 1, scope: !16812, file: !2744, line: 227, type: !2642)
!16812 = distinct !DISubprogram(name: "runq_add", scope: !2744, file: !2744, line: 227, type: !16552, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16813)
!16813 = !{!16811}
!16814 = !DILocation(line: 0, scope: !16812, inlinedAt: !16815)
!16815 = distinct !DILocation(line: 254, column: 3, scope: !16816, inlinedAt: !16808)
!16816 = distinct !DILexicalBlock(scope: !16817, file: !2744, line: 253, column: 35)
!16817 = distinct !DILexicalBlock(scope: !16805, file: !2744, line: 253, column: 6)
!16818 = !DILocalVariable(name: "pq", arg: 1, scope: !16819, file: !2744, line: 181, type: !16822)
!16819 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2744, file: !2744, line: 181, type: !16820, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16823)
!16820 = !DISubroutineType(types: !16821)
!16821 = !{null, !16822, !2642}
!16822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!16823 = !{!16818, !16824, !16825}
!16824 = !DILocalVariable(name: "thread", arg: 2, scope: !16819, file: !2744, line: 182, type: !2642)
!16825 = !DILocalVariable(name: "t", scope: !16819, file: !2744, line: 184, type: !2642)
!16826 = !DILocation(line: 0, scope: !16819, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 229, column: 2, scope: !16812, inlinedAt: !16815)
!16828 = !DILocation(line: 186, column: 2, scope: !16829, inlinedAt: !16827)
!16829 = distinct !DILexicalBlock(scope: !16830, file: !2744, line: 186, column: 2)
!16830 = distinct !DILexicalBlock(scope: !16819, file: !2744, line: 186, column: 2)
!16831 = !DILocation(line: 186, column: 2, scope: !16830, inlinedAt: !16827)
!16832 = !DILocation(line: 186, column: 2, scope: !16833, inlinedAt: !16827)
!16833 = distinct !DILexicalBlock(scope: !16829, file: !2744, line: 186, column: 2)
!16834 = !DILocation(line: 188, column: 2, scope: !16835, inlinedAt: !16827)
!16835 = distinct !DILexicalBlock(scope: !16819, file: !2744, line: 188, column: 2)
!16836 = !DILocation(line: 188, column: 2, scope: !16837, inlinedAt: !16827)
!16837 = distinct !DILexicalBlock(scope: !16835, file: !2744, line: 188, column: 2)
!16838 = !DILocation(line: 0, scope: !16835, inlinedAt: !16827)
!16839 = !DILocation(line: 189, column: 7, scope: !16840, inlinedAt: !16827)
!16840 = distinct !DILexicalBlock(scope: !16841, file: !2744, line: 189, column: 7)
!16841 = distinct !DILexicalBlock(scope: !16837, file: !2744, line: 188, column: 56)
!16842 = !DILocation(line: 189, column: 35, scope: !16840, inlinedAt: !16827)
!16843 = !DILocation(line: 189, column: 7, scope: !16841, inlinedAt: !16827)
!16844 = !DILocation(line: 191, column: 21, scope: !16845, inlinedAt: !16827)
!16845 = distinct !DILexicalBlock(scope: !16840, file: !2744, line: 189, column: 40)
!16846 = !DILocation(line: 190, column: 4, scope: !16845, inlinedAt: !16827)
!16847 = !DILocation(line: 192, column: 4, scope: !16845, inlinedAt: !16827)
!16848 = distinct !{!16848, !16834, !16849}
!16849 = !DILocation(line: 194, column: 2, scope: !16835, inlinedAt: !16827)
!16850 = !DILocation(line: 196, column: 37, scope: !16819, inlinedAt: !16827)
!16851 = !DILocation(line: 196, column: 2, scope: !16819, inlinedAt: !16827)
!16852 = !DILocation(line: 197, column: 1, scope: !16819, inlinedAt: !16827)
!16853 = !DILocation(line: 399, column: 25, scope: !16780)
!16854 = !DILocation(line: 399, column: 22, scope: !16780)
!16855 = !DILocation(line: 399, column: 2, scope: !16780)
!16856 = !DILocation(line: 400, column: 1, scope: !16780)
!16857 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12927, file: !12927, line: 136, type: !16737, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16858)
!16858 = !{!16859}
!16859 = !DILocalVariable(name: "thread", arg: 1, scope: !16857, file: !12927, line: 136, type: !2642)
!16860 = !DILocation(line: 0, scope: !16857)
!16861 = !DILocation(line: 138, column: 9, scope: !16857)
!16862 = !DILocation(line: 138, column: 2, scope: !16857)
!16863 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2744, file: !2744, line: 1137, type: !16820, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16864)
!16864 = !{!16865, !16866}
!16865 = !DILocalVariable(name: "pq", arg: 1, scope: !16863, file: !2744, line: 1137, type: !16822)
!16866 = !DILocalVariable(name: "thread", arg: 2, scope: !16863, file: !2744, line: 1137, type: !2642)
!16867 = !DILocation(line: 0, scope: !16863)
!16868 = !DILocation(line: 1139, column: 2, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16870, file: !2744, line: 1139, column: 2)
!16870 = distinct !DILexicalBlock(scope: !16863, file: !2744, line: 1139, column: 2)
!16871 = !DILocation(line: 1139, column: 2, scope: !16870)
!16872 = !DILocation(line: 1139, column: 2, scope: !16873)
!16873 = distinct !DILexicalBlock(scope: !16869, file: !2744, line: 1139, column: 2)
!16874 = !DILocation(line: 1141, column: 33, scope: !16863)
!16875 = !DILocation(line: 1141, column: 2, scope: !16863)
!16876 = !DILocation(line: 1142, column: 1, scope: !16863)
!16877 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12927, file: !12927, line: 83, type: !16737, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16878)
!16878 = !{!16879}
!16879 = !DILocalVariable(name: "thread", arg: 1, scope: !16877, file: !12927, line: 83, type: !2642)
!16880 = !DILocation(line: 0, scope: !16877)
!16881 = !DILocation(line: 89, column: 16, scope: !16877)
!16882 = !DILocation(line: 89, column: 2, scope: !16877)
!16883 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !141, file: !141, line: 294, type: !16884, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16886)
!16884 = !DISubroutineType(types: !16885)
!16885 = !{!2740, !16822}
!16886 = !{!16887}
!16887 = !DILocalVariable(name: "list", arg: 1, scope: !16883, file: !141, line: 294, type: !16822)
!16888 = !DILocation(line: 0, scope: !16883)
!16889 = !DILocation(line: 296, column: 9, scope: !16883)
!16890 = !DILocation(line: 296, column: 49, scope: !16883)
!16891 = !DILocation(line: 296, column: 2, scope: !16883)
!16892 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !141, file: !141, line: 443, type: !16893, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16895)
!16893 = !DISubroutineType(types: !16894)
!16894 = !{null, !2740, !2740}
!16895 = !{!16896, !16897, !16898}
!16896 = !DILocalVariable(name: "successor", arg: 1, scope: !16892, file: !141, line: 443, type: !2740)
!16897 = !DILocalVariable(name: "node", arg: 2, scope: !16892, file: !141, line: 443, type: !2740)
!16898 = !DILocalVariable(name: "prev", scope: !16892, file: !141, line: 445, type: !16899)
!16899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2740)
!16900 = !DILocation(line: 0, scope: !16892)
!16901 = !DILocation(line: 445, column: 39, scope: !16892)
!16902 = !DILocation(line: 447, column: 8, scope: !16892)
!16903 = !DILocation(line: 447, column: 13, scope: !16892)
!16904 = !DILocation(line: 448, column: 8, scope: !16892)
!16905 = !DILocation(line: 448, column: 13, scope: !16892)
!16906 = !DILocation(line: 449, column: 8, scope: !16892)
!16907 = !DILocation(line: 449, column: 13, scope: !16892)
!16908 = !DILocation(line: 450, column: 18, scope: !16892)
!16909 = !DILocation(line: 451, column: 1, scope: !16892)
!16910 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !141, file: !141, line: 341, type: !16911, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16913)
!16911 = !DISubroutineType(types: !16912)
!16912 = !{!2740, !16822, !2740}
!16913 = !{!16914, !16915}
!16914 = !DILocalVariable(name: "list", arg: 1, scope: !16910, file: !141, line: 341, type: !16822)
!16915 = !DILocalVariable(name: "node", arg: 2, scope: !16910, file: !141, line: 342, type: !2740)
!16916 = !DILocation(line: 0, scope: !16910)
!16917 = !DILocation(line: 344, column: 15, scope: !16910)
!16918 = !DILocation(line: 344, column: 9, scope: !16910)
!16919 = !DILocation(line: 344, column: 26, scope: !16910)
!16920 = !DILocation(line: 344, column: 2, scope: !16910)
!16921 = distinct !DISubprogram(name: "sys_dlist_append", scope: !141, file: !141, line: 404, type: !16922, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16924)
!16922 = !DISubroutineType(types: !16923)
!16923 = !{null, !16822, !2740}
!16924 = !{!16925, !16926, !16927}
!16925 = !DILocalVariable(name: "list", arg: 1, scope: !16921, file: !141, line: 404, type: !16822)
!16926 = !DILocalVariable(name: "node", arg: 2, scope: !16921, file: !141, line: 404, type: !2740)
!16927 = !DILocalVariable(name: "tail", scope: !16921, file: !141, line: 406, type: !16899)
!16928 = !DILocation(line: 0, scope: !16921)
!16929 = !DILocation(line: 406, column: 34, scope: !16921)
!16930 = !DILocation(line: 408, column: 8, scope: !16921)
!16931 = !DILocation(line: 408, column: 13, scope: !16921)
!16932 = !DILocation(line: 409, column: 8, scope: !16921)
!16933 = !DILocation(line: 409, column: 13, scope: !16921)
!16934 = !DILocation(line: 411, column: 8, scope: !16921)
!16935 = !DILocation(line: 411, column: 13, scope: !16921)
!16936 = !DILocation(line: 412, column: 13, scope: !16921)
!16937 = !DILocation(line: 413, column: 1, scope: !16921)
!16938 = distinct !DISubprogram(name: "update_cache", scope: !2744, file: !2744, line: 559, type: !12884, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16939)
!16939 = !{!16940, !16941}
!16940 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16938, file: !2744, line: 559, type: !103)
!16941 = !DILocalVariable(name: "thread", scope: !16938, file: !2744, line: 562, type: !2642)
!16942 = !DILocation(line: 0, scope: !16938)
!16943 = !DILocation(line: 239, column: 9, scope: !16944, inlinedAt: !16947)
!16944 = distinct !DISubprogram(name: "runq_best", scope: !2744, file: !2744, line: 237, type: !16945, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!16945 = !DISubroutineType(types: !16946)
!16946 = !{!2642}
!16947 = distinct !DILocation(line: 314, column: 28, scope: !16948, inlinedAt: !16951)
!16948 = distinct !DISubprogram(name: "next_up", scope: !2744, file: !2744, line: 312, type: !16945, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16949)
!16949 = !{!16950}
!16950 = !DILocalVariable(name: "thread", scope: !16948, file: !2744, line: 314, type: !2642)
!16951 = distinct !DILocation(line: 562, column: 28, scope: !16938)
!16952 = !DILocation(line: 0, scope: !16948, inlinedAt: !16951)
!16953 = !DILocation(line: 340, column: 17, scope: !16948, inlinedAt: !16951)
!16954 = !DILocation(line: 340, column: 9, scope: !16948, inlinedAt: !16951)
!16955 = !DILocalVariable(name: "thread", arg: 1, scope: !16956, file: !2744, line: 127, type: !2642)
!16956 = distinct !DISubprogram(name: "should_preempt", scope: !2744, file: !2744, line: 127, type: !16957, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16959)
!16957 = !DISubroutineType(types: !16958)
!16958 = !{!279, !2642, !103}
!16959 = !{!16955, !16960}
!16960 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16956, file: !2744, line: 128, type: !103)
!16961 = !DILocation(line: 0, scope: !16956, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 564, column: 6, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16938, file: !2744, line: 564, column: 6)
!16964 = !DILocation(line: 133, column: 17, scope: !16965, inlinedAt: !16962)
!16965 = distinct !DILexicalBlock(scope: !16956, file: !2744, line: 133, column: 6)
!16966 = !DILocation(line: 0, scope: !16963)
!16967 = !DILocation(line: 133, column: 6, scope: !16956, inlinedAt: !16962)
!16968 = !DILocation(line: 137, column: 2, scope: !16969, inlinedAt: !16962)
!16969 = distinct !DILexicalBlock(scope: !16970, file: !2744, line: 137, column: 2)
!16970 = distinct !DILexicalBlock(scope: !16956, file: !2744, line: 137, column: 2)
!16971 = !DILocation(line: 137, column: 2, scope: !16970, inlinedAt: !16962)
!16972 = !DILocation(line: 137, column: 2, scope: !16973, inlinedAt: !16962)
!16973 = distinct !DILexicalBlock(scope: !16969, file: !2744, line: 137, column: 2)
!16974 = !DILocation(line: 140, column: 6, scope: !16975, inlinedAt: !16962)
!16975 = distinct !DILexicalBlock(scope: !16956, file: !2744, line: 140, column: 6)
!16976 = !DILocation(line: 140, column: 6, scope: !16956, inlinedAt: !16962)
!16977 = !DILocation(line: 150, column: 9, scope: !16978, inlinedAt: !16962)
!16978 = distinct !DILexicalBlock(scope: !16956, file: !2744, line: 149, column: 6)
!16979 = !DILocation(line: 149, column: 6, scope: !16956, inlinedAt: !16962)
!16980 = !DILocation(line: 157, column: 6, scope: !16981, inlinedAt: !16962)
!16981 = distinct !DILexicalBlock(scope: !16956, file: !2744, line: 157, column: 6)
!16982 = !DILocation(line: 564, column: 6, scope: !16938)
!16983 = !DILocation(line: 566, column: 14, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16985, file: !2744, line: 566, column: 7)
!16985 = distinct !DILexicalBlock(scope: !16963, file: !2744, line: 564, column: 42)
!16986 = !DILocation(line: 566, column: 7, scope: !16985)
!16987 = !DILocation(line: 567, column: 4, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16984, file: !2744, line: 566, column: 27)
!16989 = !DILocation(line: 568, column: 3, scope: !16988)
!16990 = !DILocation(line: 585, column: 1, scope: !16938)
!16991 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2744, file: !2744, line: 1144, type: !16992, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !16994)
!16992 = !DISubroutineType(types: !16993)
!16993 = !{!2642, !16822}
!16994 = !{!16995, !16996, !16997}
!16995 = !DILocalVariable(name: "pq", arg: 1, scope: !16991, file: !2744, line: 1144, type: !16822)
!16996 = !DILocalVariable(name: "thread", scope: !16991, file: !2744, line: 1146, type: !2642)
!16997 = !DILocalVariable(name: "n", scope: !16991, file: !2744, line: 1147, type: !2740)
!16998 = !DILocation(line: 0, scope: !16991)
!16999 = !DILocation(line: 1147, column: 19, scope: !16991)
!17000 = !DILocation(line: 1152, column: 2, scope: !16991)
!17001 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12927, file: !12927, line: 115, type: !16737, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17002)
!17002 = !{!17003}
!17003 = !DILocalVariable(name: "thread", arg: 1, scope: !17001, file: !12927, line: 115, type: !2642)
!17004 = !DILocation(line: 0, scope: !17001)
!17005 = !DILocation(line: 117, column: 46, scope: !17001)
!17006 = !DILocation(line: 117, column: 10, scope: !17001)
!17007 = !DILocation(line: 117, column: 9, scope: !17001)
!17008 = !DILocation(line: 117, column: 2, scope: !17001)
!17009 = distinct !DISubprogram(name: "is_preempt", scope: !2744, file: !2744, line: 62, type: !16570, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17010)
!17010 = !{!17011}
!17011 = !DILocalVariable(name: "thread", arg: 1, scope: !17009, file: !2744, line: 62, type: !2642)
!17012 = !DILocation(line: 0, scope: !17009)
!17013 = !DILocation(line: 65, column: 22, scope: !17009)
!17014 = !DILocation(line: 65, column: 30, scope: !17009)
!17015 = !DILocation(line: 65, column: 2, scope: !17009)
!17016 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13334, file: !13334, line: 35, type: !17017, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17021)
!17017 = !DISubroutineType(types: !17018)
!17018 = !{!279, !17019}
!17019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17020, size: 32)
!17020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2693)
!17021 = !{!17022}
!17022 = !DILocalVariable(name: "to", arg: 1, scope: !17016, file: !13334, line: 35, type: !17019)
!17023 = !DILocation(line: 0, scope: !17016)
!17024 = !DILocation(line: 37, column: 35, scope: !17016)
!17025 = !DILocation(line: 37, column: 10, scope: !17016)
!17026 = !DILocation(line: 37, column: 9, scope: !17016)
!17027 = !DILocation(line: 37, column: 2, scope: !17016)
!17028 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !141, file: !141, line: 225, type: !17029, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17033)
!17029 = !DISubroutineType(types: !17030)
!17030 = !{!279, !17031}
!17031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17032, size: 32)
!17032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2652)
!17033 = !{!17034}
!17034 = !DILocalVariable(name: "node", arg: 1, scope: !17028, file: !141, line: 225, type: !17031)
!17035 = !DILocation(line: 0, scope: !17028)
!17036 = !DILocation(line: 227, column: 15, scope: !17028)
!17037 = !DILocation(line: 227, column: 20, scope: !17028)
!17038 = !DILocation(line: 227, column: 2, scope: !17028)
!17039 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !141, file: !141, line: 325, type: !16911, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17040)
!17040 = !{!17041, !17042}
!17041 = !DILocalVariable(name: "list", arg: 1, scope: !17039, file: !141, line: 325, type: !16822)
!17042 = !DILocalVariable(name: "node", arg: 2, scope: !17039, file: !141, line: 326, type: !2740)
!17043 = !DILocation(line: 0, scope: !17039)
!17044 = !DILocation(line: 328, column: 24, scope: !17039)
!17045 = !DILocation(line: 328, column: 15, scope: !17039)
!17046 = !DILocation(line: 328, column: 9, scope: !17039)
!17047 = !DILocation(line: 328, column: 45, scope: !17039)
!17048 = !DILocation(line: 328, column: 2, scope: !17039)
!17049 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !141, file: !141, line: 266, type: !17050, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17052)
!17050 = !DISubroutineType(types: !17051)
!17051 = !{!279, !16822}
!17052 = !{!17053}
!17053 = !DILocalVariable(name: "list", arg: 1, scope: !17049, file: !141, line: 266, type: !16822)
!17054 = !DILocation(line: 0, scope: !17049)
!17055 = !DILocation(line: 268, column: 15, scope: !17049)
!17056 = !DILocation(line: 268, column: 20, scope: !17049)
!17057 = !DILocation(line: 268, column: 2, scope: !17049)
!17058 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !141, file: !141, line: 496, type: !17059, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17061)
!17059 = !DISubroutineType(types: !17060)
!17060 = !{null, !2740}
!17061 = !{!17062, !17063, !17064}
!17062 = !DILocalVariable(name: "node", arg: 1, scope: !17058, file: !141, line: 496, type: !2740)
!17063 = !DILocalVariable(name: "prev", scope: !17058, file: !141, line: 498, type: !16899)
!17064 = !DILocalVariable(name: "next", scope: !17058, file: !141, line: 499, type: !16899)
!17065 = !DILocation(line: 0, scope: !17058)
!17066 = !DILocation(line: 498, column: 34, scope: !17058)
!17067 = !DILocation(line: 499, column: 34, scope: !17058)
!17068 = !DILocation(line: 501, column: 8, scope: !17058)
!17069 = !DILocation(line: 501, column: 13, scope: !17058)
!17070 = !DILocation(line: 502, column: 8, scope: !17058)
!17071 = !DILocation(line: 502, column: 13, scope: !17058)
!17072 = !DILocation(line: 503, column: 2, scope: !17058)
!17073 = !DILocation(line: 504, column: 1, scope: !17058)
!17074 = distinct !DISubprogram(name: "sys_dnode_init", scope: !141, file: !141, line: 211, type: !17059, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17075)
!17075 = !{!17076}
!17076 = !DILocalVariable(name: "node", arg: 1, scope: !17074, file: !141, line: 211, type: !2740)
!17077 = !DILocation(line: 0, scope: !17074)
!17078 = !DILocation(line: 213, column: 8, scope: !17074)
!17079 = !DILocation(line: 213, column: 13, scope: !17074)
!17080 = !DILocation(line: 214, column: 8, scope: !17074)
!17081 = !DILocation(line: 214, column: 13, scope: !17074)
!17082 = !DILocation(line: 215, column: 1, scope: !17074)
!17083 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12927, file: !12927, line: 131, type: !17084, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17086)
!17084 = !DISubroutineType(types: !17085)
!17085 = !{!279, !2642, !190}
!17086 = !{!17087, !17088}
!17087 = !DILocalVariable(name: "thread", arg: 1, scope: !17083, file: !12927, line: 131, type: !2642)
!17088 = !DILocalVariable(name: "state", arg: 2, scope: !17083, file: !12927, line: 131, type: !190)
!17089 = !DILocation(line: 0, scope: !17083)
!17090 = !DILocation(line: 133, column: 23, scope: !17083)
!17091 = !DILocation(line: 133, column: 10, scope: !17083)
!17092 = !DILocation(line: 133, column: 36, scope: !17083)
!17093 = !DILocation(line: 133, column: 45, scope: !17083)
!17094 = !DILocation(line: 133, column: 2, scope: !17083)
!17095 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12927, file: !12927, line: 211, type: !14399, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17096)
!17096 = !{!17097, !17098}
!17097 = !DILocalVariable(name: "prio", arg: 1, scope: !17095, file: !12927, line: 211, type: !103)
!17098 = !DILocalVariable(name: "test_prio", arg: 2, scope: !17095, file: !12927, line: 211, type: !103)
!17099 = !DILocation(line: 0, scope: !17095)
!17100 = !DILocation(line: 213, column: 9, scope: !17095)
!17101 = !DILocation(line: 213, column: 2, scope: !17095)
!17102 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12927, file: !12927, line: 206, type: !14399, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17103)
!17103 = !{!17104, !17105}
!17104 = !DILocalVariable(name: "prio1", arg: 1, scope: !17102, file: !12927, line: 206, type: !103)
!17105 = !DILocalVariable(name: "prio2", arg: 2, scope: !17102, file: !12927, line: 206, type: !103)
!17106 = !DILocation(line: 0, scope: !17102)
!17107 = !DILocation(line: 208, column: 15, scope: !17102)
!17108 = !DILocation(line: 208, column: 2, scope: !17102)
!17109 = distinct !DISubprogram(name: "z_ready_thread", scope: !2744, file: !2744, line: 635, type: !16552, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17110)
!17110 = !{!17111, !17112, !17114}
!17111 = !DILocalVariable(name: "thread", arg: 1, scope: !17109, file: !2744, line: 635, type: !2642)
!17112 = !DILocalVariable(name: "__i", scope: !17113, file: !2744, line: 637, type: !16586)
!17113 = distinct !DILexicalBlock(scope: !17109, file: !2744, line: 637, column: 2)
!17114 = !DILocalVariable(name: "__key", scope: !17113, file: !2744, line: 637, type: !16586)
!17115 = !DILocation(line: 0, scope: !17109)
!17116 = !DILocation(line: 0, scope: !17113)
!17117 = !DILocation(line: 0, scope: !16594, inlinedAt: !17118)
!17118 = distinct !DILocation(line: 637, column: 2, scope: !17113)
!17119 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17120)
!17120 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17118)
!17121 = !DILocation(line: 0, scope: !16603, inlinedAt: !17120)
!17122 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17118)
!17123 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17118)
!17124 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17118)
!17125 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17118)
!17126 = !DILocation(line: 639, column: 4, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !17128, file: !2744, line: 638, column: 41)
!17128 = distinct !DILexicalBlock(scope: !17129, file: !2744, line: 638, column: 7)
!17129 = distinct !DILexicalBlock(scope: !17130, file: !2744, line: 637, column: 26)
!17130 = distinct !DILexicalBlock(scope: !17113, file: !2744, line: 637, column: 2)
!17131 = !DILocation(line: 0, scope: !16628, inlinedAt: !17132)
!17132 = distinct !DILocation(line: 637, column: 2, scope: !17130)
!17133 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17132)
!17134 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17132)
!17135 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17132)
!17136 = !DILocation(line: 0, scope: !16642, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17132)
!17138 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17137)
!17139 = !DILocation(line: 642, column: 1, scope: !17109)
!17140 = distinct !DISubprogram(name: "ready_thread", scope: !2744, file: !2744, line: 617, type: !16552, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17141)
!17141 = !{!17142}
!17142 = !DILocalVariable(name: "thread", arg: 1, scope: !17140, file: !2744, line: 617, type: !2642)
!17143 = !DILocation(line: 0, scope: !17140)
!17144 = !DILocation(line: 626, column: 7, scope: !17145)
!17145 = distinct !DILexicalBlock(scope: !17140, file: !2744, line: 626, column: 6)
!17146 = !DILocation(line: 626, column: 34, scope: !17145)
!17147 = !DILocation(line: 626, column: 37, scope: !17145)
!17148 = !DILocation(line: 626, column: 6, scope: !17140)
!17149 = !DILocation(line: 0, scope: !16805, inlinedAt: !17150)
!17150 = distinct !DILocation(line: 629, column: 3, scope: !17151)
!17151 = distinct !DILexicalBlock(scope: !17145, file: !2744, line: 626, column: 64)
!17152 = !DILocation(line: 252, column: 15, scope: !16805, inlinedAt: !17150)
!17153 = !DILocation(line: 252, column: 28, scope: !16805, inlinedAt: !17150)
!17154 = !DILocation(line: 0, scope: !16812, inlinedAt: !17155)
!17155 = distinct !DILocation(line: 254, column: 3, scope: !16816, inlinedAt: !17150)
!17156 = !DILocation(line: 0, scope: !16819, inlinedAt: !17157)
!17157 = distinct !DILocation(line: 229, column: 2, scope: !16812, inlinedAt: !17155)
!17158 = !DILocation(line: 186, column: 2, scope: !16829, inlinedAt: !17157)
!17159 = !DILocation(line: 186, column: 2, scope: !16830, inlinedAt: !17157)
!17160 = !DILocation(line: 186, column: 2, scope: !16833, inlinedAt: !17157)
!17161 = !DILocation(line: 188, column: 2, scope: !16835, inlinedAt: !17157)
!17162 = !DILocation(line: 188, column: 2, scope: !16837, inlinedAt: !17157)
!17163 = !DILocation(line: 0, scope: !16835, inlinedAt: !17157)
!17164 = !DILocation(line: 189, column: 7, scope: !16840, inlinedAt: !17157)
!17165 = !DILocation(line: 189, column: 35, scope: !16840, inlinedAt: !17157)
!17166 = !DILocation(line: 189, column: 7, scope: !16841, inlinedAt: !17157)
!17167 = !DILocation(line: 191, column: 21, scope: !16845, inlinedAt: !17157)
!17168 = !DILocation(line: 190, column: 4, scope: !16845, inlinedAt: !17157)
!17169 = !DILocation(line: 192, column: 4, scope: !16845, inlinedAt: !17157)
!17170 = distinct !{!17170, !17161, !17171}
!17171 = !DILocation(line: 194, column: 2, scope: !16835, inlinedAt: !17157)
!17172 = !DILocation(line: 196, column: 37, scope: !16819, inlinedAt: !17157)
!17173 = !DILocation(line: 196, column: 2, scope: !16819, inlinedAt: !17157)
!17174 = !DILocation(line: 197, column: 1, scope: !16819, inlinedAt: !17157)
!17175 = !DILocation(line: 630, column: 3, scope: !17151)
!17176 = !DILocation(line: 632, column: 2, scope: !17151)
!17177 = !DILocation(line: 633, column: 1, scope: !17140)
!17178 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12927, file: !12927, line: 120, type: !16737, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17179)
!17179 = !{!17180}
!17180 = !DILocalVariable(name: "thread", arg: 1, scope: !17178, file: !12927, line: 120, type: !2642)
!17181 = !DILocation(line: 0, scope: !17178)
!17182 = !DILocation(line: 122, column: 12, scope: !17178)
!17183 = !DILocation(line: 122, column: 62, scope: !17178)
!17184 = !DILocation(line: 123, column: 4, scope: !17178)
!17185 = !DILocation(line: 122, column: 2, scope: !17178)
!17186 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2744, file: !2744, line: 644, type: !16552, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17187)
!17187 = !{!17188, !17189, !17191}
!17188 = !DILocalVariable(name: "thread", arg: 1, scope: !17186, file: !2744, line: 644, type: !2642)
!17189 = !DILocalVariable(name: "__i", scope: !17190, file: !2744, line: 646, type: !16586)
!17190 = distinct !DILexicalBlock(scope: !17186, file: !2744, line: 646, column: 2)
!17191 = !DILocalVariable(name: "__key", scope: !17190, file: !2744, line: 646, type: !16586)
!17192 = !DILocation(line: 0, scope: !17186)
!17193 = !DILocation(line: 0, scope: !17190)
!17194 = !DILocation(line: 0, scope: !16594, inlinedAt: !17195)
!17195 = distinct !DILocation(line: 646, column: 2, scope: !17190)
!17196 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17195)
!17198 = !DILocation(line: 0, scope: !16603, inlinedAt: !17197)
!17199 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17195)
!17200 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17195)
!17201 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17195)
!17202 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17195)
!17203 = !DILocation(line: 647, column: 3, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17205, file: !2744, line: 646, column: 26)
!17205 = distinct !DILexicalBlock(scope: !17190, file: !2744, line: 646, column: 2)
!17206 = !DILocation(line: 0, scope: !16628, inlinedAt: !17207)
!17207 = distinct !DILocation(line: 646, column: 2, scope: !17205)
!17208 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17207)
!17209 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17207)
!17210 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17207)
!17211 = !DILocation(line: 0, scope: !16642, inlinedAt: !17212)
!17212 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17207)
!17213 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17212)
!17214 = !DILocation(line: 649, column: 1, scope: !17186)
!17215 = distinct !DISubprogram(name: "z_sched_start", scope: !2744, file: !2744, line: 651, type: !16552, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17216)
!17216 = !{!17217, !17218}
!17217 = !DILocalVariable(name: "thread", arg: 1, scope: !17215, file: !2744, line: 651, type: !2642)
!17218 = !DILocalVariable(name: "key", scope: !17215, file: !2744, line: 653, type: !16586)
!17219 = !DILocation(line: 0, scope: !17215)
!17220 = !DILocation(line: 0, scope: !16594, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 653, column: 25, scope: !17215)
!17222 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17223)
!17223 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17221)
!17224 = !DILocation(line: 0, scope: !16603, inlinedAt: !17223)
!17225 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17221)
!17226 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17221)
!17227 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17221)
!17228 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17221)
!17229 = !DILocation(line: 655, column: 6, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17215, file: !2744, line: 655, column: 6)
!17231 = !DILocation(line: 655, column: 6, scope: !17215)
!17232 = !DILocation(line: 0, scope: !16628, inlinedAt: !17233)
!17233 = distinct !DILocation(line: 656, column: 3, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17230, file: !2744, line: 655, column: 36)
!17235 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17233)
!17236 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17233)
!17237 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17233)
!17238 = !DILocation(line: 0, scope: !16642, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17233)
!17240 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17239)
!17241 = !DILocation(line: 657, column: 3, scope: !17234)
!17242 = !DILocation(line: 660, column: 2, scope: !17215)
!17243 = !DILocation(line: 661, column: 2, scope: !17215)
!17244 = !DILocation(line: 662, column: 2, scope: !17215)
!17245 = !DILocation(line: 663, column: 1, scope: !17215)
!17246 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12927, file: !12927, line: 126, type: !16737, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17247)
!17247 = !{!17248}
!17248 = !DILocalVariable(name: "thread", arg: 1, scope: !17246, file: !12927, line: 126, type: !2642)
!17249 = !DILocation(line: 0, scope: !17246)
!17250 = !DILocation(line: 128, column: 23, scope: !17246)
!17251 = !DILocation(line: 128, column: 36, scope: !17246)
!17252 = !DILocation(line: 128, column: 56, scope: !17246)
!17253 = !DILocation(line: 128, column: 2, scope: !17246)
!17254 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12927, file: !12927, line: 155, type: !16552, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17255)
!17255 = !{!17256}
!17256 = !DILocalVariable(name: "thread", arg: 1, scope: !17254, file: !12927, line: 155, type: !2642)
!17257 = !DILocation(line: 0, scope: !17254)
!17258 = !DILocation(line: 157, column: 15, scope: !17254)
!17259 = !DILocation(line: 157, column: 28, scope: !17254)
!17260 = !DILocation(line: 158, column: 1, scope: !17254)
!17261 = distinct !DISubprogram(name: "z_reschedule", scope: !2744, file: !2744, line: 967, type: !16629, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17262)
!17262 = !{!17263, !17264}
!17263 = !DILocalVariable(name: "lock", arg: 1, scope: !17261, file: !2744, line: 967, type: !16597)
!17264 = !DILocalVariable(name: "key", arg: 2, scope: !17261, file: !2744, line: 967, type: !16586)
!17265 = !DILocation(line: 0, scope: !17261)
!17266 = !DILocation(line: 969, column: 6, scope: !17267)
!17267 = distinct !DILexicalBlock(scope: !17261, file: !2744, line: 969, column: 6)
!17268 = !DILocation(line: 969, column: 23, scope: !17267)
!17269 = !DILocation(line: 969, column: 26, scope: !17267)
!17270 = !DILocation(line: 969, column: 6, scope: !17261)
!17271 = !DILocalVariable(name: "key", arg: 2, scope: !17272, file: !13029, line: 193, type: !16586)
!17272 = distinct !DISubprogram(name: "z_swap", scope: !13029, file: !13029, line: 193, type: !17273, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17275)
!17273 = !DISubroutineType(types: !17274)
!17274 = !{!103, !16597, !16586}
!17275 = !{!17276, !17271}
!17276 = !DILocalVariable(name: "lock", arg: 1, scope: !17272, file: !13029, line: 193, type: !16597)
!17277 = !DILocation(line: 0, scope: !17272, inlinedAt: !17278)
!17278 = distinct !DILocation(line: 970, column: 3, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17267, file: !2744, line: 969, column: 39)
!17280 = !DILocalVariable(name: "l", arg: 1, scope: !17281, file: !244, line: 221, type: !16597)
!17281 = distinct !DISubprogram(name: "k_spin_release", scope: !244, file: !244, line: 221, type: !17282, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17284)
!17282 = !DISubroutineType(types: !17283)
!17283 = !{null, !16597}
!17284 = !{!17280}
!17285 = !DILocation(line: 0, scope: !17281, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 195, column: 2, scope: !17272, inlinedAt: !17278)
!17287 = !DILocation(line: 225, column: 2, scope: !17288, inlinedAt: !17286)
!17288 = distinct !DILexicalBlock(scope: !17289, file: !244, line: 225, column: 2)
!17289 = distinct !DILexicalBlock(scope: !17281, file: !244, line: 225, column: 2)
!17290 = !DILocation(line: 225, column: 2, scope: !17289, inlinedAt: !17286)
!17291 = !DILocation(line: 225, column: 2, scope: !17292, inlinedAt: !17286)
!17292 = distinct !DILexicalBlock(scope: !17288, file: !244, line: 225, column: 2)
!17293 = !DILocation(line: 196, column: 9, scope: !17272, inlinedAt: !17278)
!17294 = !DILocation(line: 971, column: 2, scope: !17279)
!17295 = !DILocation(line: 0, scope: !16628, inlinedAt: !17296)
!17296 = distinct !DILocation(line: 972, column: 3, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17267, file: !2744, line: 971, column: 9)
!17298 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17296)
!17299 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17296)
!17300 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17296)
!17301 = !DILocation(line: 0, scope: !16642, inlinedAt: !17302)
!17302 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17296)
!17303 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17302)
!17304 = !DILocation(line: 975, column: 1, scope: !17261)
!17305 = distinct !DISubprogram(name: "resched", scope: !2744, file: !2744, line: 940, type: !17306, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17308)
!17306 = !DISubroutineType(types: !17307)
!17307 = !{!279, !190}
!17308 = !{!17309}
!17309 = !DILocalVariable(name: "key", arg: 1, scope: !17305, file: !2744, line: 940, type: !190)
!17310 = !DILocation(line: 0, scope: !17305)
!17311 = !DILocalVariable(name: "key", arg: 1, scope: !17312, file: !7921, line: 112, type: !32)
!17312 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7921, file: !7921, line: 112, type: !17313, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17315)
!17313 = !DISubroutineType(types: !17314)
!17314 = !{!279, !32}
!17315 = !{!17311}
!17316 = !DILocation(line: 0, scope: !17312, inlinedAt: !17317)
!17317 = distinct !DILocation(line: 946, column: 9, scope: !17305)
!17318 = !DILocation(line: 115, column: 13, scope: !17312, inlinedAt: !17317)
!17319 = !DILocation(line: 946, column: 32, scope: !17305)
!17320 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !17324)
!17321 = distinct !DISubprogram(name: "__get_IPSR", scope: !7800, file: !7800, line: 1027, type: !7887, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17322)
!17322 = !{!17323}
!17323 = !DILocalVariable(name: "result", scope: !17321, file: !7800, line: 1029, type: !190)
!17324 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !17326)
!17325 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8796, file: !8796, line: 46, type: !8797, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!17326 = distinct !DILocation(line: 946, column: 36, scope: !17305)
!17327 = !{i64 7016156}
!17328 = !DILocation(line: 0, scope: !17321, inlinedAt: !17324)
!17329 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !17326)
!17330 = !DILocation(line: 946, column: 2, scope: !17305)
!17331 = distinct !DISubprogram(name: "need_swap", scope: !2744, file: !2744, line: 953, type: !8797, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17332)
!17332 = !{!17333}
!17333 = !DILocalVariable(name: "new_thread", scope: !17331, file: !2744, line: 959, type: !2642)
!17334 = !DILocation(line: 962, column: 31, scope: !17331)
!17335 = !DILocation(line: 0, scope: !17331)
!17336 = !DILocation(line: 963, column: 23, scope: !17331)
!17337 = !DILocation(line: 963, column: 20, scope: !17331)
!17338 = !DILocation(line: 963, column: 2, scope: !17331)
!17339 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13029, file: !13029, line: 181, type: !7810, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17340)
!17340 = !{!17341, !17342}
!17341 = !DILocalVariable(name: "key", arg: 1, scope: !17339, file: !13029, line: 181, type: !32)
!17342 = !DILocalVariable(name: "ret", scope: !17339, file: !13029, line: 183, type: !103)
!17343 = !DILocation(line: 0, scope: !17339)
!17344 = !DILocation(line: 185, column: 8, scope: !17339)
!17345 = !DILocation(line: 186, column: 2, scope: !17339)
!17346 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2744, file: !2744, line: 665, type: !16552, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17347)
!17347 = !{!17348, !17349, !17351}
!17348 = !DILocalVariable(name: "thread", arg: 1, scope: !17346, file: !2744, line: 665, type: !2642)
!17349 = !DILocalVariable(name: "__i", scope: !17350, file: !2744, line: 671, type: !16586)
!17350 = distinct !DILexicalBlock(scope: !17346, file: !2744, line: 671, column: 2)
!17351 = !DILocalVariable(name: "__key", scope: !17350, file: !2744, line: 671, type: !16586)
!17352 = !DILocation(line: 0, scope: !17346)
!17353 = !DILocation(line: 669, column: 8, scope: !17346)
!17354 = !DILocation(line: 0, scope: !17350)
!17355 = !DILocation(line: 0, scope: !16594, inlinedAt: !17356)
!17356 = distinct !DILocation(line: 671, column: 2, scope: !17350)
!17357 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17358)
!17358 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17356)
!17359 = !DILocation(line: 0, scope: !16603, inlinedAt: !17358)
!17360 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17356)
!17361 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17356)
!17362 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17356)
!17363 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17356)
!17364 = !DILocation(line: 672, column: 7, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17366, file: !2744, line: 672, column: 7)
!17366 = distinct !DILexicalBlock(scope: !17367, file: !2744, line: 671, column: 26)
!17367 = distinct !DILexicalBlock(scope: !17350, file: !2744, line: 671, column: 2)
!17368 = !DILocation(line: 672, column: 7, scope: !17366)
!17369 = !DILocation(line: 0, scope: !16788, inlinedAt: !17370)
!17370 = distinct !DILocation(line: 673, column: 4, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17365, file: !2744, line: 672, column: 35)
!17372 = !DILocation(line: 266, column: 15, scope: !16788, inlinedAt: !17370)
!17373 = !DILocation(line: 266, column: 28, scope: !16788, inlinedAt: !17370)
!17374 = !DILocation(line: 0, scope: !16796, inlinedAt: !17375)
!17375 = distinct !DILocation(line: 268, column: 3, scope: !16800, inlinedAt: !17370)
!17376 = !DILocation(line: 234, column: 2, scope: !16796, inlinedAt: !17375)
!17377 = !DILocation(line: 674, column: 3, scope: !17371)
!17378 = !DILocation(line: 675, column: 3, scope: !17366)
!17379 = !DILocation(line: 676, column: 26, scope: !17366)
!17380 = !DILocation(line: 676, column: 23, scope: !17366)
!17381 = !DILocation(line: 676, column: 3, scope: !17366)
!17382 = !DILocation(line: 0, scope: !16628, inlinedAt: !17383)
!17383 = distinct !DILocation(line: 671, column: 2, scope: !17367)
!17384 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17383)
!17385 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17383)
!17386 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17383)
!17387 = !DILocation(line: 0, scope: !16642, inlinedAt: !17388)
!17388 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17383)
!17389 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17388)
!17390 = !DILocation(line: 679, column: 16, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17346, file: !2744, line: 679, column: 6)
!17392 = !DILocation(line: 679, column: 13, scope: !17391)
!17393 = !DILocation(line: 679, column: 6, scope: !17346)
!17394 = !DILocation(line: 680, column: 3, scope: !17395)
!17395 = distinct !DILexicalBlock(scope: !17391, file: !2744, line: 679, column: 26)
!17396 = !DILocation(line: 681, column: 2, scope: !17395)
!17397 = !DILocation(line: 684, column: 1, scope: !17346)
!17398 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13334, file: !13334, line: 52, type: !16570, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17399)
!17399 = !{!17400}
!17400 = !DILocalVariable(name: "thread", arg: 1, scope: !17398, file: !13334, line: 52, type: !2642)
!17401 = !DILocation(line: 0, scope: !17398)
!17402 = !DILocation(line: 54, column: 39, scope: !17398)
!17403 = !DILocation(line: 54, column: 9, scope: !17398)
!17404 = !DILocation(line: 54, column: 2, scope: !17398)
!17405 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12927, file: !12927, line: 141, type: !16552, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17406)
!17406 = !{!17407}
!17407 = !DILocalVariable(name: "thread", arg: 1, scope: !17405, file: !12927, line: 141, type: !2642)
!17408 = !DILocation(line: 0, scope: !17405)
!17409 = !DILocation(line: 143, column: 15, scope: !17405)
!17410 = !DILocation(line: 143, column: 28, scope: !17405)
!17411 = !DILocation(line: 146, column: 1, scope: !17405)
!17412 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12927, file: !12927, line: 73, type: !374, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!17413 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17414)
!17414 = distinct !DILocation(line: 75, column: 30, scope: !17412)
!17415 = !DILocation(line: 0, scope: !16603, inlinedAt: !17414)
!17416 = !DILocation(line: 75, column: 9, scope: !17412)
!17417 = !DILocation(line: 76, column: 1, scope: !17412)
!17418 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2744, file: !2744, line: 977, type: !7897, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17419)
!17419 = !{!17420}
!17420 = !DILocalVariable(name: "key", arg: 1, scope: !17418, file: !2744, line: 977, type: !190)
!17421 = !DILocation(line: 0, scope: !17418)
!17422 = !DILocation(line: 979, column: 6, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17418, file: !2744, line: 979, column: 6)
!17424 = !DILocation(line: 979, column: 6, scope: !17418)
!17425 = !DILocation(line: 980, column: 3, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17423, file: !2744, line: 979, column: 20)
!17427 = !DILocation(line: 981, column: 2, scope: !17426)
!17428 = !DILocation(line: 0, scope: !16642, inlinedAt: !17429)
!17429 = distinct !DILocation(line: 982, column: 3, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17423, file: !2744, line: 981, column: 9)
!17431 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17429)
!17432 = !DILocation(line: 985, column: 1, scope: !17418)
!17433 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2744, file: !2744, line: 695, type: !16552, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17434)
!17434 = !{!17435, !17436}
!17435 = !DILocalVariable(name: "thread", arg: 1, scope: !17433, file: !2744, line: 695, type: !2642)
!17436 = !DILocalVariable(name: "key", scope: !17433, file: !2744, line: 699, type: !16586)
!17437 = !DILocation(line: 0, scope: !17433)
!17438 = !DILocation(line: 0, scope: !16594, inlinedAt: !17439)
!17439 = distinct !DILocation(line: 699, column: 25, scope: !17433)
!17440 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17441)
!17441 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17439)
!17442 = !DILocation(line: 0, scope: !16603, inlinedAt: !17441)
!17443 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17439)
!17444 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17439)
!17445 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17439)
!17446 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17439)
!17447 = !DILocation(line: 702, column: 7, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17433, file: !2744, line: 702, column: 6)
!17449 = !DILocation(line: 702, column: 6, scope: !17433)
!17450 = !DILocation(line: 0, scope: !16628, inlinedAt: !17451)
!17451 = distinct !DILocation(line: 703, column: 3, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17448, file: !2744, line: 702, column: 38)
!17453 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17451)
!17454 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17451)
!17455 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17451)
!17456 = !DILocation(line: 0, scope: !16642, inlinedAt: !17457)
!17457 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17451)
!17458 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17457)
!17459 = !DILocation(line: 704, column: 3, scope: !17452)
!17460 = !DILocation(line: 707, column: 2, scope: !17433)
!17461 = !DILocation(line: 708, column: 2, scope: !17433)
!17462 = !DILocation(line: 710, column: 2, scope: !17433)
!17463 = !DILocation(line: 713, column: 1, scope: !17433)
!17464 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12927, file: !12927, line: 96, type: !16737, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17465)
!17465 = !{!17466}
!17466 = !DILocalVariable(name: "thread", arg: 1, scope: !17464, file: !12927, line: 96, type: !2642)
!17467 = !DILocation(line: 0, scope: !17464)
!17468 = !DILocation(line: 98, column: 23, scope: !17464)
!17469 = !DILocation(line: 98, column: 36, scope: !17464)
!17470 = !DILocation(line: 98, column: 57, scope: !17464)
!17471 = !DILocation(line: 98, column: 2, scope: !17464)
!17472 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12927, file: !12927, line: 148, type: !16552, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17473)
!17473 = !{!17474}
!17474 = !DILocalVariable(name: "thread", arg: 1, scope: !17472, file: !12927, line: 148, type: !2642)
!17475 = !DILocation(line: 0, scope: !17472)
!17476 = !DILocation(line: 150, column: 15, scope: !17472)
!17477 = !DILocation(line: 150, column: 28, scope: !17472)
!17478 = !DILocation(line: 153, column: 1, scope: !17472)
!17479 = distinct !DISubprogram(name: "z_pend_thread", scope: !2744, file: !2744, line: 770, type: !17480, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17486)
!17480 = !DISubroutineType(types: !17481)
!17481 = !{null, !2642, !2673, !17482}
!17482 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !17483)
!17483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !17484)
!17484 = !{!17485}
!17485 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17483, file: !320, line: 66, baseType: !319, size: 64)
!17486 = !{!17487, !17488, !17489, !17490, !17492}
!17487 = !DILocalVariable(name: "thread", arg: 1, scope: !17479, file: !2744, line: 770, type: !2642)
!17488 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17479, file: !2744, line: 770, type: !2673)
!17489 = !DILocalVariable(name: "timeout", arg: 3, scope: !17479, file: !2744, line: 771, type: !17482)
!17490 = !DILocalVariable(name: "__i", scope: !17491, file: !2744, line: 774, type: !16586)
!17491 = distinct !DILexicalBlock(scope: !17479, file: !2744, line: 774, column: 2)
!17492 = !DILocalVariable(name: "__key", scope: !17491, file: !2744, line: 774, type: !16586)
!17493 = !DILocation(line: 0, scope: !17479)
!17494 = !DILocation(line: 773, column: 2, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17496, file: !2744, line: 773, column: 2)
!17496 = distinct !DILexicalBlock(scope: !17479, file: !2744, line: 773, column: 2)
!17497 = !DILocation(line: 773, column: 2, scope: !17496)
!17498 = !DILocation(line: 773, column: 2, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17495, file: !2744, line: 773, column: 2)
!17500 = !DILocation(line: 0, scope: !17491)
!17501 = !DILocation(line: 0, scope: !16594, inlinedAt: !17502)
!17502 = distinct !DILocation(line: 774, column: 2, scope: !17491)
!17503 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17502)
!17505 = !DILocation(line: 0, scope: !16603, inlinedAt: !17504)
!17506 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17502)
!17507 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17502)
!17508 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17502)
!17509 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17502)
!17510 = !DILocation(line: 775, column: 3, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17512, file: !2744, line: 774, column: 26)
!17512 = distinct !DILexicalBlock(scope: !17491, file: !2744, line: 774, column: 2)
!17513 = !DILocation(line: 0, scope: !16628, inlinedAt: !17514)
!17514 = distinct !DILocation(line: 774, column: 2, scope: !17512)
!17515 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17514)
!17516 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17514)
!17517 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17514)
!17518 = !DILocation(line: 0, scope: !16642, inlinedAt: !17519)
!17519 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17514)
!17520 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17519)
!17521 = !DILocation(line: 777, column: 1, scope: !17479)
!17522 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2744, file: !2744, line: 79, type: !16737, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17523)
!17523 = !{!17524}
!17524 = !DILocalVariable(name: "thread", arg: 1, scope: !17522, file: !2744, line: 79, type: !2642)
!17525 = !DILocation(line: 0, scope: !17522)
!17526 = !DILocation(line: 81, column: 23, scope: !17522)
!17527 = !DILocation(line: 81, column: 36, scope: !17522)
!17528 = !DILocation(line: 81, column: 53, scope: !17522)
!17529 = !DILocation(line: 81, column: 2, scope: !17522)
!17530 = distinct !DISubprogram(name: "pend_locked", scope: !2744, file: !2744, line: 760, type: !17480, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17531)
!17531 = !{!17532, !17533, !17534}
!17532 = !DILocalVariable(name: "thread", arg: 1, scope: !17530, file: !2744, line: 760, type: !2642)
!17533 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17530, file: !2744, line: 760, type: !2673)
!17534 = !DILocalVariable(name: "timeout", arg: 3, scope: !17530, file: !2744, line: 761, type: !17482)
!17535 = !DILocation(line: 0, scope: !17530)
!17536 = !DILocation(line: 766, column: 2, scope: !17530)
!17537 = !DILocation(line: 767, column: 2, scope: !17530)
!17538 = !DILocation(line: 768, column: 1, scope: !17530)
!17539 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2744, file: !2744, line: 740, type: !17540, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17542)
!17540 = !DISubroutineType(types: !17541)
!17541 = !{null, !2642, !2673}
!17542 = !{!17543, !17544}
!17543 = !DILocalVariable(name: "thread", arg: 1, scope: !17539, file: !2744, line: 740, type: !2642)
!17544 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17539, file: !2744, line: 740, type: !2673)
!17545 = !DILocation(line: 0, scope: !17539)
!17546 = !DILocation(line: 742, column: 2, scope: !17539)
!17547 = !DILocation(line: 743, column: 2, scope: !17539)
!17548 = !DILocation(line: 747, column: 13, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17539, file: !2744, line: 747, column: 6)
!17550 = !DILocation(line: 747, column: 6, scope: !17539)
!17551 = !DILocation(line: 748, column: 16, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17549, file: !2744, line: 747, column: 22)
!17553 = !DILocation(line: 748, column: 26, scope: !17552)
!17554 = !DILocation(line: 749, column: 28, scope: !17552)
!17555 = !DILocation(line: 0, scope: !16819, inlinedAt: !17556)
!17556 = distinct !DILocation(line: 749, column: 3, scope: !17552)
!17557 = !DILocation(line: 186, column: 2, scope: !16829, inlinedAt: !17556)
!17558 = !DILocation(line: 186, column: 2, scope: !16830, inlinedAt: !17556)
!17559 = !DILocation(line: 186, column: 2, scope: !16833, inlinedAt: !17556)
!17560 = !DILocation(line: 188, column: 2, scope: !16835, inlinedAt: !17556)
!17561 = !DILocation(line: 188, column: 2, scope: !16837, inlinedAt: !17556)
!17562 = !DILocation(line: 0, scope: !16835, inlinedAt: !17556)
!17563 = !DILocation(line: 189, column: 7, scope: !16840, inlinedAt: !17556)
!17564 = !DILocation(line: 189, column: 35, scope: !16840, inlinedAt: !17556)
!17565 = !DILocation(line: 189, column: 7, scope: !16841, inlinedAt: !17556)
!17566 = !DILocation(line: 191, column: 21, scope: !16845, inlinedAt: !17556)
!17567 = !DILocation(line: 190, column: 4, scope: !16845, inlinedAt: !17556)
!17568 = !DILocation(line: 192, column: 4, scope: !16845, inlinedAt: !17556)
!17569 = distinct !{!17569, !17560, !17570}
!17570 = !DILocation(line: 194, column: 2, scope: !16835, inlinedAt: !17556)
!17571 = !DILocation(line: 196, column: 37, scope: !16819, inlinedAt: !17556)
!17572 = !DILocation(line: 196, column: 2, scope: !16819, inlinedAt: !17556)
!17573 = !DILocation(line: 197, column: 1, scope: !16819, inlinedAt: !17556)
!17574 = !DILocation(line: 751, column: 1, scope: !17539)
!17575 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2744, file: !2744, line: 753, type: !17576, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17578)
!17576 = !DISubroutineType(types: !17577)
!17577 = !{null, !2642, !17482}
!17578 = !{!17579, !17580}
!17579 = !DILocalVariable(name: "thread", arg: 1, scope: !17575, file: !2744, line: 753, type: !2642)
!17580 = !DILocalVariable(name: "timeout", arg: 2, scope: !17575, file: !2744, line: 753, type: !17482)
!17581 = !DILocation(line: 0, scope: !17575)
!17582 = !DILocation(line: 755, column: 7, scope: !17583)
!17583 = distinct !DILexicalBlock(scope: !17575, file: !2744, line: 755, column: 6)
!17584 = !DILocation(line: 755, column: 6, scope: !17575)
!17585 = !DILocation(line: 756, column: 3, scope: !17586)
!17586 = distinct !DILexicalBlock(scope: !17583, file: !2744, line: 755, column: 41)
!17587 = !DILocation(line: 757, column: 2, scope: !17586)
!17588 = !DILocation(line: 758, column: 1, scope: !17575)
!17589 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13334, file: !13334, line: 47, type: !17576, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17590)
!17590 = !{!17591, !17592}
!17591 = !DILocalVariable(name: "thread", arg: 1, scope: !17589, file: !13334, line: 47, type: !2642)
!17592 = !DILocalVariable(name: "ticks", arg: 2, scope: !17589, file: !13334, line: 47, type: !17482)
!17593 = !DILocation(line: 0, scope: !17589)
!17594 = !DILocation(line: 49, column: 30, scope: !17589)
!17595 = !DILocation(line: 49, column: 2, scope: !17589)
!17596 = !DILocation(line: 50, column: 1, scope: !17589)
!17597 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2744, file: !2744, line: 795, type: !2699, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17598)
!17598 = !{!17599, !17600, !17601, !17603, !17604}
!17599 = !DILocalVariable(name: "timeout", arg: 1, scope: !17597, file: !2744, line: 795, type: !2701)
!17600 = !DILocalVariable(name: "thread", scope: !17597, file: !2744, line: 797, type: !2642)
!17601 = !DILocalVariable(name: "__i", scope: !17602, file: !2744, line: 800, type: !16586)
!17602 = distinct !DILexicalBlock(scope: !17597, file: !2744, line: 800, column: 2)
!17603 = !DILocalVariable(name: "__key", scope: !17602, file: !2744, line: 800, type: !16586)
!17604 = !DILocalVariable(name: "killed", scope: !17605, file: !2744, line: 801, type: !279)
!17605 = distinct !DILexicalBlock(scope: !17606, file: !2744, line: 800, column: 26)
!17606 = distinct !DILexicalBlock(scope: !17602, file: !2744, line: 800, column: 2)
!17607 = !DILocation(line: 0, scope: !17597)
!17608 = !DILocation(line: 797, column: 28, scope: !17597)
!17609 = !DILocation(line: 0, scope: !17602)
!17610 = !DILocation(line: 0, scope: !16594, inlinedAt: !17611)
!17611 = distinct !DILocation(line: 800, column: 2, scope: !17602)
!17612 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17613)
!17613 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17611)
!17614 = !DILocation(line: 0, scope: !16603, inlinedAt: !17613)
!17615 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17611)
!17616 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17611)
!17617 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17611)
!17618 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17611)
!17619 = !DILocation(line: 801, column: 27, scope: !17605)
!17620 = !DILocation(line: 801, column: 32, scope: !17605)
!17621 = !DILocation(line: 801, column: 61, scope: !17605)
!17622 = !DILocation(line: 0, scope: !17605)
!17623 = !DILocation(line: 804, column: 7, scope: !17605)
!17624 = !DILocation(line: 805, column: 21, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17626, file: !2744, line: 805, column: 8)
!17626 = distinct !DILexicalBlock(scope: !17627, file: !2744, line: 804, column: 16)
!17627 = distinct !DILexicalBlock(scope: !17605, file: !2744, line: 804, column: 7)
!17628 = !DILocation(line: 805, column: 31, scope: !17625)
!17629 = !DILocation(line: 805, column: 8, scope: !17626)
!17630 = !DILocation(line: 806, column: 5, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17625, file: !2744, line: 805, column: 40)
!17632 = !DILocation(line: 807, column: 4, scope: !17631)
!17633 = !DILocation(line: 808, column: 4, scope: !17626)
!17634 = !DILocation(line: 809, column: 4, scope: !17626)
!17635 = !DILocation(line: 810, column: 4, scope: !17626)
!17636 = !DILocation(line: 811, column: 3, scope: !17626)
!17637 = !DILocation(line: 0, scope: !16628, inlinedAt: !17638)
!17638 = distinct !DILocation(line: 800, column: 2, scope: !17606)
!17639 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17638)
!17640 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17638)
!17641 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17638)
!17642 = !DILocation(line: 0, scope: !16642, inlinedAt: !17643)
!17643 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17638)
!17644 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17643)
!17645 = !DILocation(line: 813, column: 1, scope: !17597)
!17646 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2744, file: !2744, line: 779, type: !16552, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17647)
!17647 = !{!17648}
!17648 = !DILocalVariable(name: "thread", arg: 1, scope: !17646, file: !2744, line: 779, type: !2642)
!17649 = !DILocation(line: 0, scope: !17646)
!17650 = !DILocation(line: 781, column: 21, scope: !17646)
!17651 = !DILocation(line: 781, column: 2, scope: !17646)
!17652 = !DILocation(line: 782, column: 2, scope: !17646)
!17653 = !DILocation(line: 783, column: 15, scope: !17646)
!17654 = !DILocation(line: 783, column: 25, scope: !17646)
!17655 = !DILocation(line: 784, column: 1, scope: !17646)
!17656 = distinct !DISubprogram(name: "pended_on_thread", scope: !2744, file: !2744, line: 724, type: !17657, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17659)
!17657 = !DISubroutineType(types: !17658)
!17658 = !{!2673, !2642}
!17659 = !{!17660}
!17660 = !DILocalVariable(name: "thread", arg: 1, scope: !17656, file: !2744, line: 724, type: !2642)
!17661 = !DILocation(line: 0, scope: !17656)
!17662 = !DILocation(line: 726, column: 2, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17664, file: !2744, line: 726, column: 2)
!17664 = distinct !DILexicalBlock(scope: !17656, file: !2744, line: 726, column: 2)
!17665 = !DILocation(line: 726, column: 2, scope: !17664)
!17666 = !DILocation(line: 726, column: 2, scope: !17667)
!17667 = distinct !DILexicalBlock(scope: !17663, file: !2744, line: 726, column: 2)
!17668 = !DILocation(line: 728, column: 2, scope: !17656)
!17669 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12927, file: !12927, line: 165, type: !16552, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17670)
!17670 = !{!17671}
!17671 = !DILocalVariable(name: "thread", arg: 1, scope: !17669, file: !12927, line: 165, type: !2642)
!17672 = !DILocation(line: 0, scope: !17669)
!17673 = !DILocation(line: 167, column: 15, scope: !17669)
!17674 = !DILocation(line: 167, column: 28, scope: !17669)
!17675 = !DILocation(line: 168, column: 1, scope: !17669)
!17676 = distinct !DISubprogram(name: "unready_thread", scope: !2744, file: !2744, line: 731, type: !16552, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17677)
!17677 = !{!17678}
!17678 = !DILocalVariable(name: "thread", arg: 1, scope: !17676, file: !2744, line: 731, type: !2642)
!17679 = !DILocation(line: 0, scope: !17676)
!17680 = !DILocation(line: 733, column: 6, scope: !17681)
!17681 = distinct !DILexicalBlock(scope: !17676, file: !2744, line: 733, column: 6)
!17682 = !DILocation(line: 733, column: 6, scope: !17676)
!17683 = !DILocation(line: 0, scope: !16788, inlinedAt: !17684)
!17684 = distinct !DILocation(line: 734, column: 3, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17681, file: !2744, line: 733, column: 34)
!17686 = !DILocation(line: 266, column: 15, scope: !16788, inlinedAt: !17684)
!17687 = !DILocation(line: 266, column: 28, scope: !16788, inlinedAt: !17684)
!17688 = !DILocation(line: 0, scope: !16796, inlinedAt: !17689)
!17689 = distinct !DILocation(line: 268, column: 3, scope: !16800, inlinedAt: !17684)
!17690 = !DILocation(line: 234, column: 2, scope: !16796, inlinedAt: !17689)
!17691 = !DILocation(line: 735, column: 2, scope: !17685)
!17692 = !DILocation(line: 736, column: 25, scope: !17676)
!17693 = !DILocation(line: 736, column: 22, scope: !17676)
!17694 = !DILocation(line: 736, column: 2, scope: !17676)
!17695 = !DILocation(line: 737, column: 1, scope: !17676)
!17696 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12927, file: !12927, line: 160, type: !16552, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17697)
!17697 = !{!17698}
!17698 = !DILocalVariable(name: "thread", arg: 1, scope: !17696, file: !12927, line: 160, type: !2642)
!17699 = !DILocation(line: 0, scope: !17696)
!17700 = !DILocation(line: 162, column: 15, scope: !17696)
!17701 = !DILocation(line: 162, column: 28, scope: !17696)
!17702 = !DILocation(line: 163, column: 1, scope: !17696)
!17703 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2744, file: !2744, line: 786, type: !16552, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17704)
!17704 = !{!17705, !17706, !17708}
!17705 = !DILocalVariable(name: "thread", arg: 1, scope: !17703, file: !2744, line: 786, type: !2642)
!17706 = !DILocalVariable(name: "__i", scope: !17707, file: !2744, line: 788, type: !16586)
!17707 = distinct !DILexicalBlock(scope: !17703, file: !2744, line: 788, column: 2)
!17708 = !DILocalVariable(name: "__key", scope: !17707, file: !2744, line: 788, type: !16586)
!17709 = !DILocation(line: 0, scope: !17703)
!17710 = !DILocation(line: 0, scope: !17707)
!17711 = !DILocation(line: 0, scope: !16594, inlinedAt: !17712)
!17712 = distinct !DILocation(line: 788, column: 2, scope: !17707)
!17713 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17714)
!17714 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17712)
!17715 = !DILocation(line: 0, scope: !16603, inlinedAt: !17714)
!17716 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17712)
!17717 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17712)
!17718 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17712)
!17719 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17712)
!17720 = !DILocation(line: 789, column: 3, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17722, file: !2744, line: 788, column: 26)
!17722 = distinct !DILexicalBlock(scope: !17707, file: !2744, line: 788, column: 2)
!17723 = !DILocation(line: 0, scope: !16628, inlinedAt: !17724)
!17724 = distinct !DILocation(line: 788, column: 2, scope: !17722)
!17725 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17724)
!17726 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17724)
!17727 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17724)
!17728 = !DILocation(line: 0, scope: !16642, inlinedAt: !17729)
!17729 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17724)
!17730 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17729)
!17731 = !DILocation(line: 791, column: 1, scope: !17703)
!17732 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2744, file: !2744, line: 816, type: !17733, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17735)
!17733 = !DISubroutineType(types: !17734)
!17734 = !{!103, !190, !2673, !17482}
!17735 = !{!17736, !17737, !17738, !17739, !17740, !17742}
!17736 = !DILocalVariable(name: "key", arg: 1, scope: !17732, file: !2744, line: 816, type: !190)
!17737 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17732, file: !2744, line: 816, type: !2673)
!17738 = !DILocalVariable(name: "timeout", arg: 3, scope: !17732, file: !2744, line: 816, type: !17482)
!17739 = !DILocalVariable(name: "ret", scope: !17732, file: !2744, line: 828, type: !103)
!17740 = !DILocalVariable(name: "__i", scope: !17741, file: !2744, line: 829, type: !16586)
!17741 = distinct !DILexicalBlock(scope: !17732, file: !2744, line: 829, column: 2)
!17742 = !DILocalVariable(name: "__key", scope: !17741, file: !2744, line: 829, type: !16586)
!17743 = !DILocation(line: 0, scope: !17732)
!17744 = !DILocation(line: 823, column: 14, scope: !17732)
!17745 = !DILocation(line: 823, column: 2, scope: !17732)
!17746 = !DILocation(line: 826, column: 20, scope: !17732)
!17747 = !DILocation(line: 826, column: 18, scope: !17732)
!17748 = !DILocation(line: 828, column: 12, scope: !17732)
!17749 = !DILocation(line: 0, scope: !17741)
!17750 = !DILocation(line: 0, scope: !16594, inlinedAt: !17751)
!17751 = distinct !DILocation(line: 829, column: 2, scope: !17741)
!17752 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17753)
!17753 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17751)
!17754 = !DILocation(line: 0, scope: !16603, inlinedAt: !17753)
!17755 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17751)
!17756 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17751)
!17757 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17751)
!17758 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17751)
!17759 = !DILocation(line: 830, column: 7, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17761, file: !2744, line: 830, column: 7)
!17761 = distinct !DILexicalBlock(scope: !17762, file: !2744, line: 829, column: 26)
!17762 = distinct !DILexicalBlock(scope: !17741, file: !2744, line: 829, column: 2)
!17763 = !DILocation(line: 830, column: 26, scope: !17760)
!17764 = !DILocation(line: 830, column: 23, scope: !17760)
!17765 = !DILocation(line: 830, column: 7, scope: !17761)
!17766 = !DILocation(line: 831, column: 20, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17760, file: !2744, line: 830, column: 36)
!17768 = !DILocation(line: 832, column: 3, scope: !17767)
!17769 = !DILocation(line: 0, scope: !16628, inlinedAt: !17770)
!17770 = distinct !DILocation(line: 829, column: 2, scope: !17762)
!17771 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17770)
!17772 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17770)
!17773 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17770)
!17774 = !DILocation(line: 0, scope: !16642, inlinedAt: !17775)
!17775 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17770)
!17776 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17775)
!17777 = !DILocation(line: 834, column: 2, scope: !17732)
!17778 = distinct !DISubprogram(name: "z_pend_curr", scope: !2744, file: !2744, line: 840, type: !17779, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17781)
!17779 = !DISubroutineType(types: !17780)
!17780 = !{!103, !16597, !16586, !2673, !17482}
!17781 = !{!17782, !17783, !17784, !17785}
!17782 = !DILocalVariable(name: "lock", arg: 1, scope: !17778, file: !2744, line: 840, type: !16597)
!17783 = !DILocalVariable(name: "key", arg: 2, scope: !17778, file: !2744, line: 840, type: !16586)
!17784 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17778, file: !2744, line: 841, type: !2673)
!17785 = !DILocalVariable(name: "timeout", arg: 4, scope: !17778, file: !2744, line: 841, type: !17482)
!17786 = !DILocation(line: 0, scope: !17778)
!17787 = !DILocation(line: 844, column: 20, scope: !17778)
!17788 = !DILocation(line: 844, column: 18, scope: !17778)
!17789 = !DILocation(line: 846, column: 2, scope: !17790)
!17790 = distinct !DILexicalBlock(scope: !17791, file: !2744, line: 846, column: 2)
!17791 = distinct !DILexicalBlock(scope: !17778, file: !2744, line: 846, column: 2)
!17792 = !DILocation(line: 846, column: 2, scope: !17791)
!17793 = !DILocation(line: 846, column: 2, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17790, file: !2744, line: 846, column: 2)
!17795 = !DILocation(line: 0, scope: !16594, inlinedAt: !17796)
!17796 = distinct !DILocation(line: 856, column: 9, scope: !17778)
!17797 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17798)
!17798 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17796)
!17799 = !DILocation(line: 0, scope: !16603, inlinedAt: !17798)
!17800 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17796)
!17801 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17796)
!17802 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17796)
!17803 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17796)
!17804 = !DILocation(line: 857, column: 14, scope: !17778)
!17805 = !DILocation(line: 857, column: 2, scope: !17778)
!17806 = !DILocation(line: 0, scope: !17281, inlinedAt: !17807)
!17807 = distinct !DILocation(line: 858, column: 2, scope: !17778)
!17808 = !DILocation(line: 225, column: 2, scope: !17288, inlinedAt: !17807)
!17809 = !DILocation(line: 225, column: 2, scope: !17289, inlinedAt: !17807)
!17810 = !DILocation(line: 225, column: 2, scope: !17292, inlinedAt: !17807)
!17811 = !DILocation(line: 0, scope: !17272, inlinedAt: !17812)
!17812 = distinct !DILocation(line: 859, column: 9, scope: !17778)
!17813 = !DILocation(line: 0, scope: !17281, inlinedAt: !17814)
!17814 = distinct !DILocation(line: 195, column: 2, scope: !17272, inlinedAt: !17812)
!17815 = !DILocation(line: 225, column: 2, scope: !17288, inlinedAt: !17814)
!17816 = !DILocation(line: 225, column: 2, scope: !17289, inlinedAt: !17814)
!17817 = !DILocation(line: 225, column: 2, scope: !17292, inlinedAt: !17814)
!17818 = !DILocation(line: 196, column: 9, scope: !17272, inlinedAt: !17812)
!17819 = !DILocation(line: 859, column: 2, scope: !17778)
!17820 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2744, file: !2744, line: 862, type: !17821, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17823)
!17821 = !DISubroutineType(types: !17822)
!17822 = !{!2642, !2673}
!17823 = !{!17824, !17825, !17826, !17828}
!17824 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17820, file: !2744, line: 862, type: !2673)
!17825 = !DILocalVariable(name: "thread", scope: !17820, file: !2744, line: 864, type: !2642)
!17826 = !DILocalVariable(name: "__i", scope: !17827, file: !2744, line: 866, type: !16586)
!17827 = distinct !DILexicalBlock(scope: !17820, file: !2744, line: 866, column: 2)
!17828 = !DILocalVariable(name: "__key", scope: !17827, file: !2744, line: 866, type: !16586)
!17829 = !DILocation(line: 0, scope: !17820)
!17830 = !DILocation(line: 0, scope: !17827)
!17831 = !DILocation(line: 0, scope: !16594, inlinedAt: !17832)
!17832 = distinct !DILocation(line: 866, column: 2, scope: !17827)
!17833 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17834)
!17834 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17832)
!17835 = !DILocation(line: 0, scope: !16603, inlinedAt: !17834)
!17836 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17832)
!17837 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17832)
!17838 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17832)
!17839 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17832)
!17840 = !DILocation(line: 867, column: 12, scope: !17841)
!17841 = distinct !DILexicalBlock(scope: !17842, file: !2744, line: 866, column: 26)
!17842 = distinct !DILexicalBlock(scope: !17827, file: !2744, line: 866, column: 2)
!17843 = !DILocation(line: 869, column: 14, scope: !17844)
!17844 = distinct !DILexicalBlock(scope: !17841, file: !2744, line: 869, column: 7)
!17845 = !DILocation(line: 869, column: 7, scope: !17841)
!17846 = !DILocation(line: 870, column: 4, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17844, file: !2744, line: 869, column: 23)
!17848 = !DILocation(line: 871, column: 3, scope: !17847)
!17849 = !DILocation(line: 0, scope: !16628, inlinedAt: !17850)
!17850 = distinct !DILocation(line: 866, column: 2, scope: !17842)
!17851 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17850)
!17852 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17850)
!17853 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17850)
!17854 = !DILocation(line: 0, scope: !16642, inlinedAt: !17855)
!17855 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17850)
!17856 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17855)
!17857 = !DILocation(line: 874, column: 2, scope: !17820)
!17858 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2744, file: !2744, line: 877, type: !17821, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17859)
!17859 = !{!17860, !17861, !17862, !17864}
!17860 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17858, file: !2744, line: 877, type: !2673)
!17861 = !DILocalVariable(name: "thread", scope: !17858, file: !2744, line: 879, type: !2642)
!17862 = !DILocalVariable(name: "__i", scope: !17863, file: !2744, line: 881, type: !16586)
!17863 = distinct !DILexicalBlock(scope: !17858, file: !2744, line: 881, column: 2)
!17864 = !DILocalVariable(name: "__key", scope: !17863, file: !2744, line: 881, type: !16586)
!17865 = !DILocation(line: 0, scope: !17858)
!17866 = !DILocation(line: 0, scope: !17863)
!17867 = !DILocation(line: 0, scope: !16594, inlinedAt: !17868)
!17868 = distinct !DILocation(line: 881, column: 2, scope: !17863)
!17869 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17870)
!17870 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17868)
!17871 = !DILocation(line: 0, scope: !16603, inlinedAt: !17870)
!17872 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17868)
!17873 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17868)
!17874 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17868)
!17875 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17868)
!17876 = !DILocation(line: 882, column: 12, scope: !17877)
!17877 = distinct !DILexicalBlock(scope: !17878, file: !2744, line: 881, column: 26)
!17878 = distinct !DILexicalBlock(scope: !17863, file: !2744, line: 881, column: 2)
!17879 = !DILocation(line: 884, column: 14, scope: !17880)
!17880 = distinct !DILexicalBlock(scope: !17877, file: !2744, line: 884, column: 7)
!17881 = !DILocation(line: 884, column: 7, scope: !17877)
!17882 = !DILocation(line: 885, column: 4, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17880, file: !2744, line: 884, column: 23)
!17884 = !DILocation(line: 886, column: 10, scope: !17883)
!17885 = !DILocation(line: 887, column: 3, scope: !17883)
!17886 = !DILocation(line: 0, scope: !16628, inlinedAt: !17887)
!17887 = distinct !DILocation(line: 881, column: 2, scope: !17878)
!17888 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17887)
!17889 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17887)
!17890 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17887)
!17891 = !DILocation(line: 0, scope: !16642, inlinedAt: !17892)
!17892 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17887)
!17893 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17892)
!17894 = !DILocation(line: 890, column: 2, scope: !17858)
!17895 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2744, file: !2744, line: 893, type: !16552, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17896)
!17896 = !{!17897}
!17897 = !DILocalVariable(name: "thread", arg: 1, scope: !17895, file: !2744, line: 893, type: !2642)
!17898 = !DILocation(line: 0, scope: !17895)
!17899 = !DILocation(line: 0, scope: !17703, inlinedAt: !17900)
!17900 = distinct !DILocation(line: 895, column: 2, scope: !17895)
!17901 = !DILocation(line: 0, scope: !17707, inlinedAt: !17900)
!17902 = !DILocation(line: 0, scope: !16594, inlinedAt: !17903)
!17903 = distinct !DILocation(line: 788, column: 2, scope: !17707, inlinedAt: !17900)
!17904 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17905)
!17905 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17903)
!17906 = !DILocation(line: 0, scope: !16603, inlinedAt: !17905)
!17907 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17903)
!17908 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17903)
!17909 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17903)
!17910 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17903)
!17911 = !DILocation(line: 789, column: 3, scope: !17721, inlinedAt: !17900)
!17912 = !DILocation(line: 0, scope: !16628, inlinedAt: !17913)
!17913 = distinct !DILocation(line: 788, column: 2, scope: !17722, inlinedAt: !17900)
!17914 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17913)
!17915 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17913)
!17916 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17913)
!17917 = !DILocation(line: 0, scope: !16642, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17913)
!17919 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17918)
!17920 = !DILocation(line: 896, column: 8, scope: !17895)
!17921 = !DILocation(line: 897, column: 1, scope: !17895)
!17922 = distinct !DISubprogram(name: "z_set_prio", scope: !2744, file: !2744, line: 902, type: !16957, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17923)
!17923 = !{!17924, !17925, !17926, !17927, !17929}
!17924 = !DILocalVariable(name: "thread", arg: 1, scope: !17922, file: !2744, line: 902, type: !2642)
!17925 = !DILocalVariable(name: "prio", arg: 2, scope: !17922, file: !2744, line: 902, type: !103)
!17926 = !DILocalVariable(name: "need_sched", scope: !17922, file: !2744, line: 904, type: !279)
!17927 = !DILocalVariable(name: "__i", scope: !17928, file: !2744, line: 906, type: !16586)
!17928 = distinct !DILexicalBlock(scope: !17922, file: !2744, line: 906, column: 2)
!17929 = !DILocalVariable(name: "__key", scope: !17928, file: !2744, line: 906, type: !16586)
!17930 = !DILocation(line: 0, scope: !17922)
!17931 = !DILocation(line: 0, scope: !17928)
!17932 = !DILocation(line: 0, scope: !16594, inlinedAt: !17933)
!17933 = distinct !DILocation(line: 906, column: 2, scope: !17928)
!17934 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !17935)
!17935 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !17933)
!17936 = !DILocation(line: 0, scope: !16603, inlinedAt: !17935)
!17937 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !17933)
!17938 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !17933)
!17939 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !17933)
!17940 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !17933)
!17941 = !DILocation(line: 907, column: 16, scope: !17942)
!17942 = distinct !DILexicalBlock(scope: !17943, file: !2744, line: 906, column: 26)
!17943 = distinct !DILexicalBlock(scope: !17928, file: !2744, line: 906, column: 2)
!17944 = !DILocation(line: 909, column: 7, scope: !17942)
!17945 = !DILocation(line: 0, scope: !16788, inlinedAt: !17946)
!17946 = distinct !DILocation(line: 912, column: 5, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17948, file: !2744, line: 911, column: 63)
!17948 = distinct !DILexicalBlock(scope: !17949, file: !2744, line: 911, column: 8)
!17949 = distinct !DILexicalBlock(scope: !17950, file: !2744, line: 909, column: 19)
!17950 = distinct !DILexicalBlock(scope: !17942, file: !2744, line: 909, column: 7)
!17951 = !DILocation(line: 266, column: 28, scope: !16788, inlinedAt: !17946)
!17952 = !DILocation(line: 0, scope: !16796, inlinedAt: !17953)
!17953 = distinct !DILocation(line: 268, column: 3, scope: !16800, inlinedAt: !17946)
!17954 = !DILocation(line: 234, column: 2, scope: !16796, inlinedAt: !17953)
!17955 = !DILocation(line: 913, column: 23, scope: !17947)
!17956 = !DILocation(line: 0, scope: !16805, inlinedAt: !17957)
!17957 = distinct !DILocation(line: 914, column: 5, scope: !17947)
!17958 = !DILocation(line: 252, column: 28, scope: !16805, inlinedAt: !17957)
!17959 = !DILocation(line: 0, scope: !16812, inlinedAt: !17960)
!17960 = distinct !DILocation(line: 254, column: 3, scope: !16816, inlinedAt: !17957)
!17961 = !DILocation(line: 0, scope: !16819, inlinedAt: !17962)
!17962 = distinct !DILocation(line: 229, column: 2, scope: !16812, inlinedAt: !17960)
!17963 = !DILocation(line: 186, column: 2, scope: !16829, inlinedAt: !17962)
!17964 = !DILocation(line: 186, column: 2, scope: !16830, inlinedAt: !17962)
!17965 = !DILocation(line: 186, column: 2, scope: !16833, inlinedAt: !17962)
!17966 = !DILocation(line: 188, column: 2, scope: !16835, inlinedAt: !17962)
!17967 = !DILocation(line: 188, column: 2, scope: !16837, inlinedAt: !17962)
!17968 = !DILocation(line: 0, scope: !16835, inlinedAt: !17962)
!17969 = !DILocation(line: 189, column: 7, scope: !16840, inlinedAt: !17962)
!17970 = !DILocation(line: 189, column: 35, scope: !16840, inlinedAt: !17962)
!17971 = !DILocation(line: 189, column: 7, scope: !16841, inlinedAt: !17962)
!17972 = !DILocation(line: 190, column: 4, scope: !16845, inlinedAt: !17962)
!17973 = !DILocation(line: 192, column: 4, scope: !16845, inlinedAt: !17962)
!17974 = distinct !{!17974, !17966, !17975}
!17975 = !DILocation(line: 194, column: 2, scope: !16835, inlinedAt: !17962)
!17976 = !DILocation(line: 196, column: 2, scope: !16819, inlinedAt: !17962)
!17977 = !DILocation(line: 197, column: 1, scope: !16819, inlinedAt: !17962)
!17978 = !DILocation(line: 918, column: 4, scope: !17949)
!17979 = !DILocation(line: 919, column: 3, scope: !17949)
!17980 = !DILocation(line: 920, column: 22, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17950, file: !2744, line: 919, column: 10)
!17982 = !DILocation(line: 0, scope: !16628, inlinedAt: !17983)
!17983 = distinct !DILocation(line: 906, column: 2, scope: !17943)
!17984 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !17983)
!17985 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !17983)
!17986 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !17983)
!17987 = !DILocation(line: 0, scope: !16642, inlinedAt: !17988)
!17988 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !17983)
!17989 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !17988)
!17990 = !DILocation(line: 926, column: 2, scope: !17922)
!17991 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2744, file: !2744, line: 929, type: !17992, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !17994)
!17992 = !DISubroutineType(types: !17993)
!17993 = !{null, !2642, !103}
!17994 = !{!17995, !17996, !17997}
!17995 = !DILocalVariable(name: "thread", arg: 1, scope: !17991, file: !2744, line: 929, type: !2642)
!17996 = !DILocalVariable(name: "prio", arg: 2, scope: !17991, file: !2744, line: 929, type: !103)
!17997 = !DILocalVariable(name: "need_sched", scope: !17991, file: !2744, line: 931, type: !279)
!17998 = !DILocation(line: 0, scope: !17991)
!17999 = !DILocation(line: 931, column: 20, scope: !17991)
!18000 = !DILocation(line: 935, column: 17, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !17991, file: !2744, line: 935, column: 6)
!18002 = !DILocation(line: 935, column: 20, scope: !18001)
!18003 = !DILocation(line: 935, column: 35, scope: !18001)
!18004 = !DILocation(line: 935, column: 48, scope: !18001)
!18005 = !DILocation(line: 935, column: 6, scope: !17991)
!18006 = !DILocation(line: 936, column: 3, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !18001, file: !2744, line: 935, column: 55)
!18008 = !DILocation(line: 937, column: 2, scope: !18007)
!18009 = !DILocation(line: 938, column: 1, scope: !17991)
!18010 = distinct !DISubprogram(name: "k_sched_lock", scope: !2744, file: !2744, line: 987, type: !374, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18011)
!18011 = !{!18012, !18014}
!18012 = !DILocalVariable(name: "__i", scope: !18013, file: !2744, line: 989, type: !16586)
!18013 = distinct !DILexicalBlock(scope: !18010, file: !2744, line: 989, column: 2)
!18014 = !DILocalVariable(name: "__key", scope: !18013, file: !2744, line: 989, type: !16586)
!18015 = !DILocation(line: 0, scope: !18013)
!18016 = !DILocation(line: 0, scope: !16594, inlinedAt: !18017)
!18017 = distinct !DILocation(line: 989, column: 2, scope: !18013)
!18018 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !18019)
!18019 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !18017)
!18020 = !DILocation(line: 0, scope: !16603, inlinedAt: !18019)
!18021 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !18017)
!18022 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !18017)
!18023 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !18017)
!18024 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !18017)
!18025 = !DILocation(line: 992, column: 3, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !18027, file: !2744, line: 989, column: 26)
!18027 = distinct !DILexicalBlock(scope: !18013, file: !2744, line: 989, column: 2)
!18028 = !DILocation(line: 0, scope: !16628, inlinedAt: !18029)
!18029 = distinct !DILocation(line: 989, column: 2, scope: !18027)
!18030 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !18029)
!18031 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !18029)
!18032 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !18029)
!18033 = !DILocation(line: 0, scope: !16642, inlinedAt: !18034)
!18034 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !18029)
!18035 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !18034)
!18036 = !DILocation(line: 994, column: 1, scope: !18010)
!18037 = distinct !DISubprogram(name: "z_sched_lock", scope: !12927, file: !12927, line: 251, type: !374, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!18038 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18039)
!18039 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18040)
!18040 = distinct !DILocation(line: 253, column: 2, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18042, file: !12927, line: 253, column: 2)
!18042 = distinct !DILexicalBlock(scope: !18037, file: !12927, line: 253, column: 2)
!18043 = !DILocation(line: 0, scope: !17321, inlinedAt: !18039)
!18044 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18040)
!18045 = !DILocation(line: 253, column: 2, scope: !18042)
!18046 = !DILocation(line: 253, column: 2, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18041, file: !12927, line: 253, column: 2)
!18048 = !DILocation(line: 254, column: 2, scope: !18049)
!18049 = distinct !DILexicalBlock(scope: !18050, file: !12927, line: 254, column: 2)
!18050 = distinct !DILexicalBlock(scope: !18037, file: !12927, line: 254, column: 2)
!18051 = !DILocation(line: 254, column: 2, scope: !18050)
!18052 = !DILocation(line: 254, column: 2, scope: !18053)
!18053 = distinct !DILexicalBlock(scope: !18049, file: !12927, line: 254, column: 2)
!18054 = !DILocation(line: 256, column: 2, scope: !18037)
!18055 = !DILocation(line: 258, column: 2, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !18037, file: !12927, line: 258, column: 2)
!18057 = !{i64 2154801877}
!18058 = !DILocation(line: 259, column: 1, scope: !18037)
!18059 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2744, file: !2744, line: 996, type: !374, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18060)
!18060 = !{!18061, !18063}
!18061 = !DILocalVariable(name: "__i", scope: !18062, file: !2744, line: 998, type: !16586)
!18062 = distinct !DILexicalBlock(scope: !18059, file: !2744, line: 998, column: 2)
!18063 = !DILocalVariable(name: "__key", scope: !18062, file: !2744, line: 998, type: !16586)
!18064 = !DILocation(line: 0, scope: !18062)
!18065 = !DILocation(line: 0, scope: !16594, inlinedAt: !18066)
!18066 = distinct !DILocation(line: 998, column: 2, scope: !18062)
!18067 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !18068)
!18068 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !18066)
!18069 = !DILocation(line: 0, scope: !16603, inlinedAt: !18068)
!18070 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !18066)
!18071 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !18066)
!18072 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !18066)
!18073 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !18066)
!18074 = !DILocation(line: 999, column: 3, scope: !18075)
!18075 = distinct !DILexicalBlock(scope: !18076, file: !2744, line: 999, column: 3)
!18076 = distinct !DILexicalBlock(scope: !18077, file: !2744, line: 999, column: 3)
!18077 = distinct !DILexicalBlock(scope: !18078, file: !2744, line: 998, column: 26)
!18078 = distinct !DILexicalBlock(scope: !18062, file: !2744, line: 998, column: 2)
!18079 = !DILocation(line: 999, column: 3, scope: !18076)
!18080 = !DILocation(line: 999, column: 3, scope: !18081)
!18081 = distinct !DILexicalBlock(scope: !18075, file: !2744, line: 999, column: 3)
!18082 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18083)
!18083 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18084)
!18084 = distinct !DILocation(line: 1000, column: 3, scope: !18085)
!18085 = distinct !DILexicalBlock(scope: !18086, file: !2744, line: 1000, column: 3)
!18086 = distinct !DILexicalBlock(scope: !18077, file: !2744, line: 1000, column: 3)
!18087 = !DILocation(line: 0, scope: !17321, inlinedAt: !18083)
!18088 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18084)
!18089 = !DILocation(line: 1000, column: 3, scope: !18086)
!18090 = !DILocation(line: 1000, column: 3, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18085, file: !2744, line: 1000, column: 3)
!18092 = !DILocation(line: 1002, column: 5, scope: !18077)
!18093 = !DILocation(line: 1002, column: 20, scope: !18077)
!18094 = !DILocation(line: 1002, column: 3, scope: !18077)
!18095 = !DILocation(line: 1003, column: 3, scope: !18077)
!18096 = !DILocation(line: 0, scope: !16628, inlinedAt: !18097)
!18097 = distinct !DILocation(line: 998, column: 2, scope: !18078)
!18098 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !18097)
!18099 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !18097)
!18100 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !18097)
!18101 = !DILocation(line: 0, scope: !16642, inlinedAt: !18102)
!18102 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !18097)
!18103 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !18102)
!18104 = !DILocation(line: 1011, column: 2, scope: !18059)
!18105 = !DILocation(line: 1012, column: 1, scope: !18059)
!18106 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2744, file: !2744, line: 1014, type: !16945, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!18107 = !DILocation(line: 1028, column: 25, scope: !18106)
!18108 = !DILocation(line: 1028, column: 2, scope: !18106)
!18109 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2744, file: !2744, line: 1155, type: !18110, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18112)
!18110 = !DISubroutineType(types: !18111)
!18111 = !{!279, !2671, !2671}
!18112 = !{!18113, !18114, !18115, !18116, !18117}
!18113 = !DILocalVariable(name: "a", arg: 1, scope: !18109, file: !2744, line: 1155, type: !2671)
!18114 = !DILocalVariable(name: "b", arg: 2, scope: !18109, file: !2744, line: 1155, type: !2671)
!18115 = !DILocalVariable(name: "thread_a", scope: !18109, file: !2744, line: 1157, type: !2642)
!18116 = !DILocalVariable(name: "thread_b", scope: !18109, file: !2744, line: 1157, type: !2642)
!18117 = !DILocalVariable(name: "cmp", scope: !18109, file: !2744, line: 1158, type: !371)
!18118 = !DILocation(line: 0, scope: !18109)
!18119 = !DILocation(line: 1160, column: 13, scope: !18109)
!18120 = !DILocation(line: 1161, column: 13, scope: !18109)
!18121 = !DILocation(line: 1163, column: 8, scope: !18109)
!18122 = !DILocation(line: 1165, column: 10, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !18109, file: !2744, line: 1165, column: 6)
!18124 = !DILocation(line: 1165, column: 6, scope: !18109)
!18125 = !DILocation(line: 1167, column: 17, scope: !18126)
!18126 = distinct !DILexicalBlock(scope: !18123, file: !2744, line: 1167, column: 13)
!18127 = !DILocation(line: 1167, column: 13, scope: !18123)
!18128 = !DILocation(line: 1170, column: 25, scope: !18129)
!18129 = distinct !DILexicalBlock(scope: !18126, file: !2744, line: 1169, column: 9)
!18130 = !DILocation(line: 1170, column: 52, scope: !18129)
!18131 = !DILocation(line: 1170, column: 35, scope: !18129)
!18132 = !DILocation(line: 1170, column: 3, scope: !18129)
!18133 = !DILocation(line: 0, scope: !18123)
!18134 = !DILocation(line: 1173, column: 1, scope: !18109)
!18135 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2744, file: !2744, line: 1175, type: !18136, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18151)
!18136 = !DISubroutineType(types: !18137)
!18137 = !{null, !18138, !2642}
!18138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18139, size: 32)
!18139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !18140, line: 37, size: 128, elements: !18141)
!18140 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18141 = !{!18142, !18150}
!18142 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !18139, file: !18140, line: 38, baseType: !18143, size: 96)
!18143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !18144)
!18144 = !{!18145, !18146, !18149}
!18145 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !18143, file: !157, line: 84, baseType: !2671, size: 32)
!18146 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !18143, file: !157, line: 85, baseType: !18147, size: 32, offset: 32)
!18147 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !18148)
!18148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18110, size: 32)
!18149 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !18143, file: !157, line: 86, baseType: !103, size: 32, offset: 64)
!18150 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !18139, file: !18140, line: 39, baseType: !103, size: 32, offset: 96)
!18151 = !{!18152, !18153, !18154, !18155, !18164}
!18152 = !DILocalVariable(name: "pq", arg: 1, scope: !18135, file: !2744, line: 1175, type: !18138)
!18153 = !DILocalVariable(name: "thread", arg: 2, scope: !18135, file: !2744, line: 1175, type: !2642)
!18154 = !DILocalVariable(name: "t", scope: !18135, file: !2744, line: 1177, type: !2642)
!18155 = !DILocalVariable(name: "__f", scope: !18156, file: !2744, line: 1190, type: !18159)
!18156 = distinct !DILexicalBlock(scope: !18157, file: !2744, line: 1190, column: 3)
!18157 = distinct !DILexicalBlock(scope: !18158, file: !2744, line: 1189, column: 27)
!18158 = distinct !DILexicalBlock(scope: !18135, file: !2744, line: 1189, column: 6)
!18159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !18160)
!18160 = !{!18161, !18162, !18163}
!18161 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !18159, file: !157, line: 156, baseType: !2739, size: 32)
!18162 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !18159, file: !157, line: 157, baseType: !601, size: 32, offset: 32)
!18163 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !18159, file: !157, line: 158, baseType: !371, size: 32, offset: 64)
!18164 = !DILocalVariable(name: "n", scope: !18165, file: !2744, line: 1190, type: !2671)
!18165 = distinct !DILexicalBlock(scope: !18166, file: !2744, line: 1190, column: 3)
!18166 = distinct !DILexicalBlock(scope: !18156, file: !2744, line: 1190, column: 3)
!18167 = !DILocation(line: 0, scope: !18135)
!18168 = !DILocation(line: 1179, column: 2, scope: !18169)
!18169 = distinct !DILexicalBlock(scope: !18170, file: !2744, line: 1179, column: 2)
!18170 = distinct !DILexicalBlock(scope: !18135, file: !2744, line: 1179, column: 2)
!18171 = !DILocation(line: 1179, column: 2, scope: !18170)
!18172 = !DILocation(line: 1179, column: 2, scope: !18173)
!18173 = distinct !DILexicalBlock(scope: !18169, file: !2744, line: 1179, column: 2)
!18174 = !DILocation(line: 1181, column: 31, scope: !18135)
!18175 = !DILocation(line: 1181, column: 45, scope: !18135)
!18176 = !DILocation(line: 1181, column: 15, scope: !18135)
!18177 = !DILocation(line: 1181, column: 25, scope: !18135)
!18178 = !DILocation(line: 1189, column: 11, scope: !18158)
!18179 = !DILocation(line: 1189, column: 7, scope: !18158)
!18180 = !DILocation(line: 1189, column: 6, scope: !18135)
!18181 = !DILocation(line: 1190, column: 3, scope: !18156)
!18182 = !DILocation(line: 1190, column: 3, scope: !18165)
!18183 = !DILocation(line: 0, scope: !18165)
!18184 = !DILocation(line: 1190, column: 3, scope: !18166)
!18185 = !DILocation(line: 1193, column: 2, scope: !18157)
!18186 = !DILocation(line: 1191, column: 42, scope: !18187)
!18187 = distinct !DILexicalBlock(scope: !18166, file: !2744, line: 1190, column: 54)
!18188 = !DILocation(line: 1191, column: 12, scope: !18187)
!18189 = !DILocation(line: 1191, column: 22, scope: !18187)
!18190 = distinct !{!18190, !18181, !18191}
!18191 = !DILocation(line: 1192, column: 3, scope: !18156)
!18192 = !DILocation(line: 1195, column: 17, scope: !18135)
!18193 = !DILocation(line: 1195, column: 37, scope: !18135)
!18194 = !DILocation(line: 1195, column: 2, scope: !18135)
!18195 = !DILocation(line: 1196, column: 1, scope: !18135)
!18196 = !DISubprogram(name: "z_rb_foreach_next", scope: !157, file: !157, line: 176, type: !18197, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!18197 = !DISubroutineType(types: !18198)
!18198 = !{!2671, !18199, !18200}
!18199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18143, size: 32)
!18200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18159, size: 32)
!18201 = !DISubprogram(name: "rb_insert", scope: !157, file: !157, line: 105, type: !18202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!18202 = !DISubroutineType(types: !18203)
!18203 = !{null, !18199, !2671}
!18204 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2744, file: !2744, line: 1198, type: !18136, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18205)
!18205 = !{!18206, !18207}
!18206 = !DILocalVariable(name: "pq", arg: 1, scope: !18204, file: !2744, line: 1198, type: !18138)
!18207 = !DILocalVariable(name: "thread", arg: 2, scope: !18204, file: !2744, line: 1198, type: !2642)
!18208 = !DILocation(line: 0, scope: !18204)
!18209 = !DILocation(line: 1200, column: 2, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18211, file: !2744, line: 1200, column: 2)
!18211 = distinct !DILexicalBlock(scope: !18204, file: !2744, line: 1200, column: 2)
!18212 = !DILocation(line: 1200, column: 2, scope: !18211)
!18213 = !DILocation(line: 1200, column: 2, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18210, file: !2744, line: 1200, column: 2)
!18215 = !DILocation(line: 1202, column: 17, scope: !18204)
!18216 = !DILocation(line: 1202, column: 37, scope: !18204)
!18217 = !DILocation(line: 1202, column: 2, scope: !18204)
!18218 = !DILocation(line: 1204, column: 16, scope: !18219)
!18219 = distinct !DILexicalBlock(scope: !18204, file: !2744, line: 1204, column: 6)
!18220 = !DILocation(line: 1204, column: 7, scope: !18219)
!18221 = !DILocation(line: 1204, column: 6, scope: !18204)
!18222 = !DILocation(line: 1205, column: 7, scope: !18223)
!18223 = distinct !DILexicalBlock(scope: !18219, file: !2744, line: 1204, column: 22)
!18224 = !DILocation(line: 1205, column: 22, scope: !18223)
!18225 = !DILocation(line: 1206, column: 2, scope: !18223)
!18226 = !DILocation(line: 1207, column: 1, scope: !18204)
!18227 = !DISubprogram(name: "rb_remove", scope: !157, file: !157, line: 110, type: !18202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!18228 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2744, file: !2744, line: 1209, type: !18229, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18231)
!18229 = !DISubroutineType(types: !18230)
!18230 = !{!2642, !18138}
!18231 = !{!18232, !18233, !18234}
!18232 = !DILocalVariable(name: "pq", arg: 1, scope: !18228, file: !2744, line: 1209, type: !18138)
!18233 = !DILocalVariable(name: "thread", scope: !18228, file: !2744, line: 1211, type: !2642)
!18234 = !DILocalVariable(name: "n", scope: !18228, file: !2744, line: 1212, type: !2671)
!18235 = !DILocation(line: 0, scope: !18228)
!18236 = !DILocation(line: 1212, column: 37, scope: !18228)
!18237 = !DILocation(line: 1212, column: 21, scope: !18228)
!18238 = !DILocation(line: 1217, column: 2, scope: !18228)
!18239 = distinct !DISubprogram(name: "rb_get_min", scope: !157, file: !157, line: 115, type: !18240, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18242)
!18240 = !DISubroutineType(types: !18241)
!18241 = !{!2671, !18199}
!18242 = !{!18243}
!18243 = !DILocalVariable(name: "tree", arg: 1, scope: !18239, file: !157, line: 115, type: !18199)
!18244 = !DILocation(line: 0, scope: !18239)
!18245 = !DILocation(line: 117, column: 9, scope: !18239)
!18246 = !DILocation(line: 117, column: 2, scope: !18239)
!18247 = !DISubprogram(name: "z_rb_get_minmax", scope: !157, file: !157, line: 100, type: !18248, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2145)
!18248 = !DISubroutineType(types: !18249)
!18249 = !{!2671, !18199, !173}
!18250 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2744, file: !2744, line: 1246, type: !18251, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18259)
!18251 = !DISubroutineType(types: !18252)
!18252 = !{!2642, !18253}
!18253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18254, size: 32)
!18254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !18140, line: 53, size: 2080, elements: !18255)
!18255 = !{!18256, !18258}
!18256 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !18254, file: !18140, line: 54, baseType: !18257, size: 2048)
!18257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2678, size: 2048, elements: !223)
!18258 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !18254, file: !18140, line: 55, baseType: !32, size: 32, offset: 2048)
!18259 = !{!18260, !18261, !18262, !18263}
!18260 = !DILocalVariable(name: "pq", arg: 1, scope: !18250, file: !2744, line: 1246, type: !18253)
!18261 = !DILocalVariable(name: "thread", scope: !18250, file: !2744, line: 1252, type: !2642)
!18262 = !DILocalVariable(name: "l", scope: !18250, file: !2744, line: 1253, type: !16822)
!18263 = !DILocalVariable(name: "n", scope: !18250, file: !2744, line: 1254, type: !2740)
!18264 = !DILocation(line: 0, scope: !18250)
!18265 = !DILocation(line: 1248, column: 11, scope: !18266)
!18266 = distinct !DILexicalBlock(scope: !18250, file: !2744, line: 1248, column: 6)
!18267 = !DILocation(line: 1248, column: 7, scope: !18266)
!18268 = !DILocation(line: 1248, column: 6, scope: !18250)
!18269 = !DILocation(line: 1253, column: 31, scope: !18250)
!18270 = !DILocation(line: 1253, column: 20, scope: !18250)
!18271 = !DILocation(line: 1254, column: 19, scope: !18250)
!18272 = !DILocation(line: 1260, column: 1, scope: !18250)
!18273 = distinct !DISubprogram(name: "z_unpend_all", scope: !2744, file: !2744, line: 1262, type: !18274, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18276)
!18274 = !DISubroutineType(types: !18275)
!18275 = !{!103, !2673}
!18276 = !{!18277, !18278, !18279}
!18277 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18273, file: !2744, line: 1262, type: !2673)
!18278 = !DILocalVariable(name: "need_sched", scope: !18273, file: !2744, line: 1264, type: !103)
!18279 = !DILocalVariable(name: "thread", scope: !18273, file: !2744, line: 1265, type: !2642)
!18280 = !DILocation(line: 0, scope: !18273)
!18281 = !DILocation(line: 1267, column: 19, scope: !18273)
!18282 = !DILocation(line: 1267, column: 41, scope: !18273)
!18283 = !DILocation(line: 1267, column: 2, scope: !18273)
!18284 = !DILocation(line: 1268, column: 3, scope: !18285)
!18285 = distinct !DILexicalBlock(scope: !18273, file: !2744, line: 1267, column: 50)
!18286 = !DILocation(line: 1269, column: 3, scope: !18285)
!18287 = distinct !{!18287, !18283, !18288}
!18288 = !DILocation(line: 1271, column: 2, scope: !18273)
!18289 = !DILocation(line: 1273, column: 2, scope: !18273)
!18290 = distinct !DISubprogram(name: "z_waitq_head", scope: !13282, file: !13282, line: 52, type: !17821, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18291)
!18291 = !{!18292}
!18292 = !DILocalVariable(name: "w", arg: 1, scope: !18290, file: !13282, line: 52, type: !2673)
!18293 = !DILocation(line: 0, scope: !18290)
!18294 = !DILocation(line: 54, column: 52, scope: !18290)
!18295 = !DILocation(line: 54, column: 28, scope: !18290)
!18296 = !DILocation(line: 54, column: 9, scope: !18290)
!18297 = !DILocation(line: 54, column: 2, scope: !18290)
!18298 = distinct !DISubprogram(name: "init_ready_q", scope: !2744, file: !2744, line: 1276, type: !18299, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18306)
!18299 = !DISubroutineType(types: !18300)
!18300 = !{null, !18301}
!18301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18302, size: 32)
!18302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !167, line: 83, size: 96, elements: !18303)
!18303 = !{!18304, !18305}
!18304 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !18302, file: !167, line: 86, baseType: !2642, size: 32)
!18305 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !18302, file: !167, line: 90, baseType: !2678, size: 64, offset: 32)
!18306 = !{!18307}
!18307 = !DILocalVariable(name: "rq", arg: 1, scope: !18298, file: !2744, line: 1276, type: !18301)
!18308 = !DILocation(line: 0, scope: !18298)
!18309 = !DILocation(line: 1289, column: 22, scope: !18298)
!18310 = !DILocation(line: 1289, column: 2, scope: !18298)
!18311 = !DILocation(line: 1291, column: 1, scope: !18298)
!18312 = distinct !DISubprogram(name: "sys_dlist_init", scope: !141, file: !141, line: 197, type: !18313, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18315)
!18313 = !DISubroutineType(types: !18314)
!18314 = !{null, !16822}
!18315 = !{!18316}
!18316 = !DILocalVariable(name: "list", arg: 1, scope: !18312, file: !141, line: 197, type: !16822)
!18317 = !DILocation(line: 0, scope: !18312)
!18318 = !DILocation(line: 199, column: 8, scope: !18312)
!18319 = !DILocation(line: 199, column: 13, scope: !18312)
!18320 = !DILocation(line: 200, column: 8, scope: !18312)
!18321 = !DILocation(line: 200, column: 13, scope: !18312)
!18322 = !DILocation(line: 201, column: 1, scope: !18312)
!18323 = distinct !DISubprogram(name: "z_sched_init", scope: !2744, file: !2744, line: 1293, type: !374, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!18324 = !DILocation(line: 1302, column: 2, scope: !18323)
!18325 = !DILocation(line: 1306, column: 2, scope: !18323)
!18326 = !DILocation(line: 1309, column: 1, scope: !18323)
!18327 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2744, file: !2744, line: 1311, type: !18328, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18331)
!18328 = !DISubroutineType(types: !18329)
!18329 = !{!103, !18330}
!18330 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !131, line: 347, baseType: !2642)
!18331 = !{!18332}
!18332 = !DILocalVariable(name: "thread", arg: 1, scope: !18327, file: !2744, line: 1311, type: !18330)
!18333 = !DILocation(line: 0, scope: !18327)
!18334 = !DILocation(line: 1313, column: 22, scope: !18327)
!18335 = !DILocation(line: 1313, column: 9, scope: !18327)
!18336 = !DILocation(line: 1313, column: 2, scope: !18327)
!18337 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2744, file: !2744, line: 1325, type: !18338, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18340)
!18338 = !DISubroutineType(types: !18339)
!18339 = !{null, !18330, !103}
!18340 = !{!18341, !18342, !18343}
!18341 = !DILocalVariable(name: "thread", arg: 1, scope: !18337, file: !2744, line: 1325, type: !18330)
!18342 = !DILocalVariable(name: "prio", arg: 2, scope: !18337, file: !2744, line: 1325, type: !103)
!18343 = !DILocalVariable(name: "th", scope: !18337, file: !2744, line: 1334, type: !2642)
!18344 = !DILocation(line: 0, scope: !18337)
!18345 = !DILocation(line: 1331, column: 2, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18347, file: !2744, line: 1331, column: 2)
!18347 = distinct !DILexicalBlock(scope: !18348, file: !2744, line: 1331, column: 2)
!18348 = distinct !DILexicalBlock(scope: !18337, file: !2744, line: 1331, column: 2)
!18349 = !DILocation(line: 1331, column: 2, scope: !18350)
!18350 = distinct !DILexicalBlock(scope: !18346, file: !2744, line: 1331, column: 2)
!18351 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18352)
!18352 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18353)
!18353 = distinct !DILocation(line: 1332, column: 2, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18355, file: !2744, line: 1332, column: 2)
!18355 = distinct !DILexicalBlock(scope: !18337, file: !2744, line: 1332, column: 2)
!18356 = !DILocation(line: 0, scope: !17321, inlinedAt: !18352)
!18357 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18353)
!18358 = !DILocation(line: 1332, column: 2, scope: !18355)
!18359 = !DILocation(line: 1332, column: 2, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !18354, file: !2744, line: 1332, column: 2)
!18361 = !DILocation(line: 1336, column: 2, scope: !18337)
!18362 = !DILocation(line: 1337, column: 1, scope: !18337)
!18363 = distinct !DISubprogram(name: "k_can_yield", scope: !2744, file: !2744, line: 1384, type: !8797, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!18364 = !DILocation(line: 1386, column: 11, scope: !18363)
!18365 = !DILocation(line: 1386, column: 29, scope: !18363)
!18366 = !DILocation(line: 1386, column: 32, scope: !18363)
!18367 = !DILocation(line: 1386, column: 46, scope: !18363)
!18368 = !DILocation(line: 1387, column: 28, scope: !18363)
!18369 = !DILocation(line: 1387, column: 4, scope: !18363)
!18370 = !DILocation(line: 1386, column: 2, scope: !18363)
!18371 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !110, file: !110, line: 989, type: !8797, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!18372 = !DILocation(line: 993, column: 10, scope: !18371)
!18373 = !DILocation(line: 993, column: 2, scope: !18371)
!18374 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2744, file: !2744, line: 1390, type: !374, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18375)
!18375 = !{!18376}
!18376 = !DILocalVariable(name: "key", scope: !18374, file: !2744, line: 1396, type: !16586)
!18377 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18378)
!18378 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18379)
!18379 = distinct !DILocation(line: 1392, column: 2, scope: !18380)
!18380 = distinct !DILexicalBlock(scope: !18381, file: !2744, line: 1392, column: 2)
!18381 = distinct !DILexicalBlock(scope: !18374, file: !2744, line: 1392, column: 2)
!18382 = !DILocation(line: 0, scope: !17321, inlinedAt: !18378)
!18383 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18379)
!18384 = !DILocation(line: 1392, column: 2, scope: !18381)
!18385 = !DILocation(line: 1392, column: 2, scope: !18386)
!18386 = distinct !DILexicalBlock(scope: !18380, file: !2744, line: 1392, column: 2)
!18387 = !DILocation(line: 0, scope: !16594, inlinedAt: !18388)
!18388 = distinct !DILocation(line: 1396, column: 25, scope: !18374)
!18389 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !18390)
!18390 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !18388)
!18391 = !DILocation(line: 0, scope: !16603, inlinedAt: !18390)
!18392 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !18388)
!18393 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !18388)
!18394 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !18388)
!18395 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !18388)
!18396 = !DILocation(line: 0, scope: !18374)
!18397 = !DILocation(line: 1400, column: 18, scope: !18398)
!18398 = distinct !DILexicalBlock(scope: !18399, file: !2744, line: 1399, column: 36)
!18399 = distinct !DILexicalBlock(scope: !18374, file: !2744, line: 1398, column: 6)
!18400 = !DILocation(line: 0, scope: !16788, inlinedAt: !18401)
!18401 = distinct !DILocation(line: 1400, column: 3, scope: !18398)
!18402 = !DILocation(line: 266, column: 15, scope: !16788, inlinedAt: !18401)
!18403 = !DILocation(line: 266, column: 28, scope: !16788, inlinedAt: !18401)
!18404 = !DILocation(line: 0, scope: !16796, inlinedAt: !18405)
!18405 = distinct !DILocation(line: 268, column: 3, scope: !16800, inlinedAt: !18401)
!18406 = !DILocation(line: 234, column: 2, scope: !16796, inlinedAt: !18405)
!18407 = !DILocation(line: 1402, column: 15, scope: !18374)
!18408 = !DILocation(line: 0, scope: !16805, inlinedAt: !18409)
!18409 = distinct !DILocation(line: 1402, column: 2, scope: !18374)
!18410 = !DILocation(line: 252, column: 15, scope: !16805, inlinedAt: !18409)
!18411 = !DILocation(line: 252, column: 28, scope: !16805, inlinedAt: !18409)
!18412 = !DILocation(line: 0, scope: !16812, inlinedAt: !18413)
!18413 = distinct !DILocation(line: 254, column: 3, scope: !16816, inlinedAt: !18409)
!18414 = !DILocation(line: 0, scope: !16819, inlinedAt: !18415)
!18415 = distinct !DILocation(line: 229, column: 2, scope: !16812, inlinedAt: !18413)
!18416 = !DILocation(line: 186, column: 2, scope: !16829, inlinedAt: !18415)
!18417 = !DILocation(line: 186, column: 2, scope: !16830, inlinedAt: !18415)
!18418 = !DILocation(line: 186, column: 2, scope: !16833, inlinedAt: !18415)
!18419 = !DILocation(line: 188, column: 2, scope: !16835, inlinedAt: !18415)
!18420 = !DILocation(line: 188, column: 2, scope: !16837, inlinedAt: !18415)
!18421 = !DILocation(line: 0, scope: !16835, inlinedAt: !18415)
!18422 = !DILocation(line: 189, column: 7, scope: !16840, inlinedAt: !18415)
!18423 = !DILocation(line: 189, column: 35, scope: !16840, inlinedAt: !18415)
!18424 = !DILocation(line: 189, column: 7, scope: !16841, inlinedAt: !18415)
!18425 = !DILocation(line: 191, column: 21, scope: !16845, inlinedAt: !18415)
!18426 = !DILocation(line: 190, column: 4, scope: !16845, inlinedAt: !18415)
!18427 = !DILocation(line: 192, column: 4, scope: !16845, inlinedAt: !18415)
!18428 = distinct !{!18428, !18419, !18429}
!18429 = !DILocation(line: 194, column: 2, scope: !16835, inlinedAt: !18415)
!18430 = !DILocation(line: 196, column: 37, scope: !16819, inlinedAt: !18415)
!18431 = !DILocation(line: 196, column: 2, scope: !16819, inlinedAt: !18415)
!18432 = !DILocation(line: 197, column: 1, scope: !16819, inlinedAt: !18415)
!18433 = !DILocation(line: 1403, column: 2, scope: !18374)
!18434 = !DILocation(line: 0, scope: !17272, inlinedAt: !18435)
!18435 = distinct !DILocation(line: 1404, column: 2, scope: !18374)
!18436 = !DILocation(line: 0, scope: !17281, inlinedAt: !18437)
!18437 = distinct !DILocation(line: 195, column: 2, scope: !17272, inlinedAt: !18435)
!18438 = !DILocation(line: 225, column: 2, scope: !17288, inlinedAt: !18437)
!18439 = !DILocation(line: 225, column: 2, scope: !17289, inlinedAt: !18437)
!18440 = !DILocation(line: 225, column: 2, scope: !17292, inlinedAt: !18437)
!18441 = !DILocation(line: 196, column: 9, scope: !17272, inlinedAt: !18435)
!18442 = !DILocation(line: 1405, column: 1, scope: !18374)
!18443 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2744, file: !2744, line: 1459, type: !18444, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18446)
!18444 = !DISubroutineType(types: !18445)
!18445 = !{!371, !17482}
!18446 = !{!18447, !18448, !18449}
!18447 = !DILocalVariable(name: "timeout", arg: 1, scope: !18443, file: !2744, line: 1459, type: !17482)
!18448 = !DILocalVariable(name: "ticks", scope: !18443, file: !2744, line: 1461, type: !319)
!18449 = !DILocalVariable(name: "ret", scope: !18443, file: !2744, line: 1480, type: !371)
!18450 = !DILocation(line: 0, scope: !18443)
!18451 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18452)
!18452 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18453)
!18453 = distinct !DILocation(line: 1463, column: 2, scope: !18454)
!18454 = distinct !DILexicalBlock(scope: !18455, file: !2744, line: 1463, column: 2)
!18455 = distinct !DILexicalBlock(scope: !18443, file: !2744, line: 1463, column: 2)
!18456 = !DILocation(line: 0, scope: !17321, inlinedAt: !18452)
!18457 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18453)
!18458 = !DILocation(line: 1463, column: 2, scope: !18455)
!18459 = !DILocation(line: 1463, column: 2, scope: !18460)
!18460 = distinct !DILexicalBlock(scope: !18454, file: !2744, line: 1463, column: 2)
!18461 = !DILocation(line: 1468, column: 6, scope: !18462)
!18462 = distinct !DILexicalBlock(scope: !18443, file: !2744, line: 1468, column: 6)
!18463 = !DILocation(line: 1468, column: 6, scope: !18443)
!18464 = !DILocation(line: 1469, column: 20, scope: !18465)
!18465 = distinct !DILexicalBlock(scope: !18462, file: !2744, line: 1468, column: 40)
!18466 = !DILocation(line: 1469, column: 3, scope: !18465)
!18467 = !DILocation(line: 1473, column: 3, scope: !18465)
!18468 = !DILocation(line: 1478, column: 10, scope: !18443)
!18469 = !DILocation(line: 1480, column: 16, scope: !18443)
!18470 = !DILocation(line: 1485, column: 1, scope: !18443)
!18471 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4037, file: !4037, line: 310, type: !18472, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18474)
!18472 = !DISubroutineType(types: !18473)
!18473 = !{null, !18330}
!18474 = !{!18475}
!18475 = !DILocalVariable(name: "thread", arg: 1, scope: !18471, file: !4037, line: 310, type: !18330)
!18476 = !DILocation(line: 0, scope: !18471)
!18477 = !DILocation(line: 319, column: 2, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18471, file: !4037, line: 319, column: 2)
!18479 = !{i64 2151088369}
!18480 = !DILocation(line: 320, column: 2, scope: !18471)
!18481 = !DILocation(line: 321, column: 1, scope: !18471)
!18482 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2744, file: !2744, line: 1415, type: !18483, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18485)
!18483 = !DISubroutineType(types: !18484)
!18484 = !{!371, !319}
!18485 = !{!18486, !18487, !18488, !18489}
!18486 = !DILocalVariable(name: "ticks", arg: 1, scope: !18482, file: !2744, line: 1415, type: !319)
!18487 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !18482, file: !2744, line: 1418, type: !190)
!18488 = !DILocalVariable(name: "timeout", scope: !18482, file: !2744, line: 1430, type: !17482)
!18489 = !DILocalVariable(name: "key", scope: !18482, file: !2744, line: 1437, type: !16586)
!18490 = !DILocation(line: 0, scope: !18482)
!18491 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18492)
!18492 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18493)
!18493 = distinct !DILocation(line: 1420, column: 2, scope: !18494)
!18494 = distinct !DILexicalBlock(scope: !18495, file: !2744, line: 1420, column: 2)
!18495 = distinct !DILexicalBlock(scope: !18482, file: !2744, line: 1420, column: 2)
!18496 = !DILocation(line: 0, scope: !17321, inlinedAt: !18492)
!18497 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18493)
!18498 = !DILocation(line: 1420, column: 2, scope: !18495)
!18499 = !DILocation(line: 1420, column: 2, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18494, file: !2744, line: 1420, column: 2)
!18501 = !DILocation(line: 1425, column: 12, scope: !18502)
!18502 = distinct !DILexicalBlock(scope: !18482, file: !2744, line: 1425, column: 6)
!18503 = !DILocation(line: 1425, column: 6, scope: !18482)
!18504 = !DILocation(line: 1426, column: 3, scope: !18505)
!18505 = distinct !DILexicalBlock(scope: !18502, file: !2744, line: 1425, column: 18)
!18506 = !DILocation(line: 1427, column: 3, scope: !18505)
!18507 = !DILocation(line: 1431, column: 24, scope: !18508)
!18508 = distinct !DILexicalBlock(scope: !18482, file: !2744, line: 1431, column: 6)
!18509 = !DILocation(line: 1431, column: 6, scope: !18482)
!18510 = !DILocation(line: 1432, column: 35, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18508, file: !2744, line: 1431, column: 30)
!18512 = !DILocation(line: 1432, column: 27, scope: !18511)
!18513 = !DILocation(line: 1433, column: 2, scope: !18511)
!18514 = !DILocation(line: 1434, column: 27, scope: !18515)
!18515 = distinct !DILexicalBlock(scope: !18508, file: !2744, line: 1433, column: 9)
!18516 = !DILocation(line: 0, scope: !18508)
!18517 = !DILocation(line: 0, scope: !16594, inlinedAt: !18518)
!18518 = distinct !DILocation(line: 1437, column: 25, scope: !18482)
!18519 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !18520)
!18520 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !18518)
!18521 = !DILocation(line: 0, scope: !16603, inlinedAt: !18520)
!18522 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !18518)
!18523 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !18518)
!18524 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !18518)
!18525 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !18518)
!18526 = !DILocation(line: 1440, column: 20, scope: !18482)
!18527 = !DILocation(line: 1440, column: 18, scope: !18482)
!18528 = !DILocation(line: 1442, column: 2, scope: !18482)
!18529 = !DILocation(line: 1443, column: 23, scope: !18482)
!18530 = !DILocation(line: 1443, column: 2, scope: !18482)
!18531 = !DILocation(line: 1444, column: 29, scope: !18482)
!18532 = !DILocation(line: 1444, column: 2, scope: !18482)
!18533 = !DILocation(line: 0, scope: !17272, inlinedAt: !18534)
!18534 = distinct !DILocation(line: 1446, column: 8, scope: !18482)
!18535 = !DILocation(line: 0, scope: !17281, inlinedAt: !18536)
!18536 = distinct !DILocation(line: 195, column: 2, scope: !17272, inlinedAt: !18534)
!18537 = !DILocation(line: 225, column: 2, scope: !17288, inlinedAt: !18536)
!18538 = !DILocation(line: 225, column: 2, scope: !17289, inlinedAt: !18536)
!18539 = !DILocation(line: 225, column: 2, scope: !17292, inlinedAt: !18536)
!18540 = !DILocation(line: 196, column: 9, scope: !17272, inlinedAt: !18534)
!18541 = !DILocation(line: 1448, column: 2, scope: !18542)
!18542 = distinct !DILexicalBlock(scope: !18543, file: !2744, line: 1448, column: 2)
!18543 = distinct !DILexicalBlock(scope: !18482, file: !2744, line: 1448, column: 2)
!18544 = !DILocation(line: 1448, column: 2, scope: !18543)
!18545 = !DILocation(line: 1448, column: 2, scope: !18546)
!18546 = distinct !DILexicalBlock(scope: !18542, file: !2744, line: 1448, column: 2)
!18547 = !DILocation(line: 1450, column: 10, scope: !18482)
!18548 = !DILocation(line: 1450, column: 45, scope: !18482)
!18549 = !DILocation(line: 1450, column: 43, scope: !18482)
!18550 = !DILocation(line: 1451, column: 6, scope: !18482)
!18551 = !DILocation(line: 1457, column: 1, scope: !18482)
!18552 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3995, file: !3995, line: 1103, type: !3996, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18553)
!18553 = !{!18554}
!18554 = !DILocalVariable(name: "t", arg: 1, scope: !18552, file: !3995, line: 1103, type: !321)
!18555 = !DILocation(line: 0, scope: !18552)
!18556 = !DILocation(line: 0, scope: !16656, inlinedAt: !18557)
!18557 = distinct !DILocation(line: 1106, column: 9, scope: !18552)
!18558 = !DILocation(line: 139, column: 13, scope: !18559, inlinedAt: !18557)
!18559 = distinct !DILexicalBlock(scope: !18560, file: !3995, line: 138, column: 10)
!18560 = distinct !DILexicalBlock(scope: !18561, file: !3995, line: 136, column: 7)
!18561 = distinct !DILexicalBlock(scope: !16677, file: !3995, line: 134, column: 17)
!18562 = !DILocation(line: 1106, column: 2, scope: !18552)
!18563 = distinct !DISubprogram(name: "k_yield", scope: !4037, file: !4037, line: 140, type: !374, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!18564 = !DILocation(line: 148, column: 2, scope: !18565)
!18565 = distinct !DILexicalBlock(scope: !18563, file: !4037, line: 148, column: 2)
!18566 = !{i64 2151087689}
!18567 = !DILocation(line: 149, column: 2, scope: !18563)
!18568 = !DILocation(line: 150, column: 1, scope: !18563)
!18569 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2744, file: !2744, line: 1495, type: !18570, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18572)
!18570 = !DISubroutineType(types: !18571)
!18571 = !{!371, !103}
!18572 = !{!18573, !18574}
!18573 = !DILocalVariable(name: "us", arg: 1, scope: !18569, file: !2744, line: 1495, type: !103)
!18574 = !DILocalVariable(name: "ticks", scope: !18569, file: !2744, line: 1497, type: !371)
!18575 = !DILocation(line: 0, scope: !18569)
!18576 = !DILocation(line: 1501, column: 31, scope: !18569)
!18577 = !DILocation(line: 1501, column: 10, scope: !18569)
!18578 = !DILocation(line: 1502, column: 23, scope: !18569)
!18579 = !DILocation(line: 1502, column: 10, scope: !18569)
!18580 = !DILocation(line: 1506, column: 31, scope: !18569)
!18581 = !DILocation(line: 1506, column: 9, scope: !18569)
!18582 = !DILocation(line: 1506, column: 2, scope: !18569)
!18583 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3995, file: !3995, line: 571, type: !3996, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18584)
!18584 = !{!18585}
!18585 = !DILocalVariable(name: "t", arg: 1, scope: !18583, file: !3995, line: 571, type: !321)
!18586 = !DILocation(line: 0, scope: !18583)
!18587 = !DILocation(line: 0, scope: !16656, inlinedAt: !18588)
!18588 = distinct !DILocation(line: 574, column: 9, scope: !18583)
!18589 = !DILocation(line: 135, column: 5, scope: !18561, inlinedAt: !18588)
!18590 = !DILocation(line: 139, column: 13, scope: !18559, inlinedAt: !18588)
!18591 = !DILocation(line: 574, column: 2, scope: !18583)
!18592 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3995, file: !3995, line: 1187, type: !3996, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18593)
!18593 = !{!18594}
!18594 = !DILocalVariable(name: "t", arg: 1, scope: !18592, file: !3995, line: 1187, type: !321)
!18595 = !DILocation(line: 0, scope: !18592)
!18596 = !DILocation(line: 0, scope: !16656, inlinedAt: !18597)
!18597 = distinct !DILocation(line: 1190, column: 9, scope: !18592)
!18598 = !DILocation(line: 145, column: 13, scope: !18599, inlinedAt: !18597)
!18599 = distinct !DILexicalBlock(scope: !16674, file: !3995, line: 144, column: 10)
!18600 = !DILocation(line: 1190, column: 2, scope: !18592)
!18601 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2744, file: !2744, line: 1517, type: !18472, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18602)
!18602 = !{!18603}
!18603 = !DILocalVariable(name: "thread", arg: 1, scope: !18601, file: !2744, line: 1517, type: !18330)
!18604 = !DILocation(line: 0, scope: !18601)
!18605 = !DILocation(line: 1521, column: 6, scope: !18606)
!18606 = distinct !DILexicalBlock(scope: !18601, file: !2744, line: 1521, column: 6)
!18607 = !DILocation(line: 1521, column: 6, scope: !18601)
!18608 = !DILocation(line: 1525, column: 6, scope: !18609)
!18609 = distinct !DILexicalBlock(scope: !18601, file: !2744, line: 1525, column: 6)
!18610 = !DILocation(line: 1525, column: 37, scope: !18609)
!18611 = !DILocation(line: 1525, column: 6, scope: !18601)
!18612 = !DILocation(line: 1527, column: 20, scope: !18613)
!18613 = distinct !DILexicalBlock(scope: !18614, file: !2744, line: 1527, column: 7)
!18614 = distinct !DILexicalBlock(scope: !18609, file: !2744, line: 1525, column: 42)
!18615 = !DILocation(line: 1527, column: 33, scope: !18613)
!18616 = !DILocation(line: 1527, column: 7, scope: !18614)
!18617 = !DILocation(line: 1532, column: 2, scope: !18601)
!18618 = !DILocation(line: 1533, column: 2, scope: !18601)
!18619 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18620)
!18620 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18621)
!18621 = distinct !DILocation(line: 1537, column: 7, scope: !18622)
!18622 = distinct !DILexicalBlock(scope: !18601, file: !2744, line: 1537, column: 6)
!18623 = !DILocation(line: 0, scope: !17321, inlinedAt: !18620)
!18624 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18621)
!18625 = !DILocation(line: 1537, column: 6, scope: !18601)
!18626 = !DILocation(line: 1538, column: 3, scope: !18627)
!18627 = distinct !DILexicalBlock(scope: !18622, file: !2744, line: 1537, column: 25)
!18628 = !DILocation(line: 1539, column: 2, scope: !18627)
!18629 = !DILocation(line: 1540, column: 1, scope: !18601)
!18630 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12927, file: !12927, line: 101, type: !16737, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18631)
!18631 = !{!18632}
!18632 = !DILocalVariable(name: "thread", arg: 1, scope: !18630, file: !12927, line: 101, type: !2642)
!18633 = !DILocation(line: 0, scope: !18630)
!18634 = !DILocation(line: 103, column: 23, scope: !18630)
!18635 = !DILocation(line: 103, column: 36, scope: !18630)
!18636 = !DILocation(line: 103, column: 55, scope: !18630)
!18637 = !DILocation(line: 103, column: 2, scope: !18630)
!18638 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2744, file: !2744, line: 1567, type: !18639, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18641)
!18639 = !DISubroutineType(types: !18640)
!18640 = !{!18330}
!18641 = !{!18642}
!18642 = !DILocalVariable(name: "ret", scope: !18638, file: !2744, line: 1577, type: !18330)
!18643 = !DILocation(line: 1577, column: 30, scope: !18638)
!18644 = !DILocation(line: 0, scope: !18638)
!18645 = !DILocation(line: 1582, column: 2, scope: !18638)
!18646 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2744, file: !2744, line: 1593, type: !18647, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !2145)
!18647 = !DISubroutineType(types: !18648)
!18648 = !{!103}
!18649 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18650)
!18650 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18651)
!18651 = distinct !DILocation(line: 1595, column: 10, scope: !18646)
!18652 = !DILocation(line: 0, scope: !17321, inlinedAt: !18650)
!18653 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18651)
!18654 = !DILocation(line: 1595, column: 27, scope: !18646)
!18655 = !DILocation(line: 1595, column: 41, scope: !18646)
!18656 = !DILocation(line: 1595, column: 30, scope: !18646)
!18657 = !DILocation(line: 1595, column: 2, scope: !18646)
!18658 = distinct !DISubprogram(name: "z_thread_abort", scope: !2744, file: !2744, line: 1725, type: !16552, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18659)
!18659 = !{!18660, !18661}
!18660 = !DILocalVariable(name: "thread", arg: 1, scope: !18658, file: !2744, line: 1725, type: !2642)
!18661 = !DILocalVariable(name: "key", scope: !18658, file: !2744, line: 1727, type: !16586)
!18662 = !DILocation(line: 0, scope: !18658)
!18663 = !DILocation(line: 0, scope: !16594, inlinedAt: !18664)
!18664 = distinct !DILocation(line: 1727, column: 25, scope: !18658)
!18665 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !18666)
!18666 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !18664)
!18667 = !DILocation(line: 0, scope: !16603, inlinedAt: !18666)
!18668 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !18664)
!18669 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !18664)
!18670 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !18664)
!18671 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !18664)
!18672 = !DILocation(line: 1729, column: 20, scope: !18673)
!18673 = distinct !DILexicalBlock(scope: !18658, file: !2744, line: 1729, column: 6)
!18674 = !DILocation(line: 1729, column: 33, scope: !18673)
!18675 = !DILocation(line: 1729, column: 48, scope: !18673)
!18676 = !DILocation(line: 1729, column: 6, scope: !18658)
!18677 = !DILocation(line: 0, scope: !16628, inlinedAt: !18678)
!18678 = distinct !DILocation(line: 1730, column: 3, scope: !18679)
!18679 = distinct !DILexicalBlock(scope: !18673, file: !2744, line: 1729, column: 54)
!18680 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !18678)
!18681 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !18678)
!18682 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !18678)
!18683 = !DILocation(line: 0, scope: !16642, inlinedAt: !18684)
!18684 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !18678)
!18685 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !18684)
!18686 = !DILocation(line: 1731, column: 3, scope: !18687)
!18687 = distinct !DILexicalBlock(scope: !18688, file: !2744, line: 1731, column: 3)
!18688 = distinct !DILexicalBlock(scope: !18689, file: !2744, line: 1731, column: 3)
!18689 = distinct !DILexicalBlock(scope: !18679, file: !2744, line: 1731, column: 3)
!18690 = !DILocation(line: 1736, column: 20, scope: !18691)
!18691 = distinct !DILexicalBlock(scope: !18658, file: !2744, line: 1736, column: 6)
!18692 = !DILocation(line: 1736, column: 33, scope: !18691)
!18693 = !DILocation(line: 1736, column: 49, scope: !18691)
!18694 = !DILocation(line: 1736, column: 6, scope: !18658)
!18695 = !DILocation(line: 0, scope: !16628, inlinedAt: !18696)
!18696 = distinct !DILocation(line: 1737, column: 3, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18691, file: !2744, line: 1736, column: 56)
!18698 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !18696)
!18699 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !18696)
!18700 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !18696)
!18701 = !DILocation(line: 0, scope: !16642, inlinedAt: !18702)
!18702 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !18696)
!18703 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !18702)
!18704 = !DILocation(line: 1738, column: 3, scope: !18697)
!18705 = !DILocation(line: 1775, column: 2, scope: !18658)
!18706 = !DILocation(line: 1776, column: 16, scope: !18707)
!18707 = distinct !DILexicalBlock(scope: !18658, file: !2744, line: 1776, column: 6)
!18708 = !DILocation(line: 1776, column: 13, scope: !18707)
!18709 = !DILocation(line: 1776, column: 25, scope: !18707)
!18710 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18711)
!18711 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18712)
!18712 = distinct !DILocation(line: 1776, column: 29, scope: !18707)
!18713 = !DILocation(line: 0, scope: !17321, inlinedAt: !18711)
!18714 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18712)
!18715 = !DILocation(line: 1776, column: 6, scope: !18658)
!18716 = !DILocation(line: 0, scope: !17272, inlinedAt: !18717)
!18717 = distinct !DILocation(line: 1777, column: 3, scope: !18718)
!18718 = distinct !DILexicalBlock(scope: !18707, file: !2744, line: 1776, column: 47)
!18719 = !DILocation(line: 0, scope: !17281, inlinedAt: !18720)
!18720 = distinct !DILocation(line: 195, column: 2, scope: !17272, inlinedAt: !18717)
!18721 = !DILocation(line: 225, column: 2, scope: !17288, inlinedAt: !18720)
!18722 = !DILocation(line: 225, column: 2, scope: !17289, inlinedAt: !18720)
!18723 = !DILocation(line: 225, column: 2, scope: !17292, inlinedAt: !18720)
!18724 = !DILocation(line: 196, column: 9, scope: !17272, inlinedAt: !18717)
!18725 = !DILocation(line: 1778, column: 3, scope: !18726)
!18726 = distinct !DILexicalBlock(scope: !18727, file: !2744, line: 1778, column: 3)
!18727 = distinct !DILexicalBlock(scope: !18728, file: !2744, line: 1778, column: 3)
!18728 = distinct !DILexicalBlock(scope: !18718, file: !2744, line: 1778, column: 3)
!18729 = !DILocation(line: 0, scope: !16628, inlinedAt: !18730)
!18730 = distinct !DILocation(line: 1780, column: 2, scope: !18658)
!18731 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !18730)
!18732 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !18730)
!18733 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !18730)
!18734 = !DILocation(line: 0, scope: !16642, inlinedAt: !18735)
!18735 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !18730)
!18736 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !18735)
!18737 = !DILocation(line: 1781, column: 1, scope: !18658)
!18738 = distinct !DISubprogram(name: "end_thread", scope: !2744, file: !2744, line: 1690, type: !16552, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18739)
!18739 = !{!18740}
!18740 = !DILocalVariable(name: "thread", arg: 1, scope: !18738, file: !2744, line: 1690, type: !2642)
!18741 = !DILocation(line: 0, scope: !18738)
!18742 = !DILocation(line: 1695, column: 20, scope: !18743)
!18743 = distinct !DILexicalBlock(scope: !18738, file: !2744, line: 1695, column: 6)
!18744 = !DILocation(line: 1695, column: 33, scope: !18743)
!18745 = !DILocation(line: 1695, column: 49, scope: !18743)
!18746 = !DILocation(line: 1695, column: 6, scope: !18738)
!18747 = !DILocation(line: 1697, column: 29, scope: !18748)
!18748 = distinct !DILexicalBlock(scope: !18743, file: !2744, line: 1695, column: 56)
!18749 = !DILocation(line: 1698, column: 7, scope: !18750)
!18750 = distinct !DILexicalBlock(scope: !18748, file: !2744, line: 1698, column: 7)
!18751 = !DILocation(line: 1698, column: 7, scope: !18748)
!18752 = !DILocation(line: 0, scope: !16788, inlinedAt: !18753)
!18753 = distinct !DILocation(line: 1699, column: 4, scope: !18754)
!18754 = distinct !DILexicalBlock(scope: !18750, file: !2744, line: 1698, column: 35)
!18755 = !DILocation(line: 266, column: 28, scope: !16788, inlinedAt: !18753)
!18756 = !DILocation(line: 0, scope: !16796, inlinedAt: !18757)
!18757 = distinct !DILocation(line: 268, column: 3, scope: !16800, inlinedAt: !18753)
!18758 = !DILocation(line: 234, column: 2, scope: !16796, inlinedAt: !18757)
!18759 = !DILocation(line: 1700, column: 3, scope: !18754)
!18760 = !DILocation(line: 1701, column: 20, scope: !18761)
!18761 = distinct !DILexicalBlock(scope: !18748, file: !2744, line: 1701, column: 7)
!18762 = !DILocation(line: 1701, column: 30, scope: !18761)
!18763 = !DILocation(line: 1701, column: 7, scope: !18748)
!18764 = !DILocation(line: 1702, column: 4, scope: !18765)
!18765 = distinct !DILexicalBlock(scope: !18761, file: !2744, line: 1701, column: 39)
!18766 = !DILocation(line: 1703, column: 3, scope: !18765)
!18767 = !DILocation(line: 1704, column: 9, scope: !18748)
!18768 = !DILocation(line: 1705, column: 23, scope: !18748)
!18769 = !DILocation(line: 1705, column: 3, scope: !18748)
!18770 = !DILocation(line: 1706, column: 3, scope: !18748)
!18771 = !DILocation(line: 1722, column: 2, scope: !18748)
!18772 = !DILocation(line: 1723, column: 1, scope: !18738)
!18773 = distinct !DISubprogram(name: "unpend_all", scope: !2744, file: !2744, line: 1674, type: !18774, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18776)
!18774 = !DISubroutineType(types: !18775)
!18775 = !{null, !2673}
!18776 = !{!18777, !18778}
!18777 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18773, file: !2744, line: 1674, type: !2673)
!18778 = !DILocalVariable(name: "thread", scope: !18773, file: !2744, line: 1676, type: !2642)
!18779 = !DILocation(line: 0, scope: !18773)
!18780 = !DILocation(line: 1678, column: 19, scope: !18773)
!18781 = !DILocation(line: 1678, column: 41, scope: !18773)
!18782 = !DILocation(line: 1678, column: 2, scope: !18773)
!18783 = !DILocation(line: 1679, column: 3, scope: !18784)
!18784 = distinct !DILexicalBlock(scope: !18773, file: !2744, line: 1678, column: 50)
!18785 = !DILocation(line: 1680, column: 9, scope: !18784)
!18786 = !DILocalVariable(name: "thread", arg: 1, scope: !18787, file: !12947, line: 65, type: !2642)
!18787 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12947, file: !12947, line: 65, type: !18788, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18790)
!18788 = !DISubroutineType(types: !18789)
!18789 = !{null, !2642, !32}
!18790 = !{!18786, !18791}
!18791 = !DILocalVariable(name: "value", arg: 2, scope: !18787, file: !12947, line: 65, type: !32)
!18792 = !DILocation(line: 0, scope: !18787, inlinedAt: !18793)
!18793 = distinct !DILocation(line: 1681, column: 3, scope: !18784)
!18794 = !DILocation(line: 67, column: 15, scope: !18787, inlinedAt: !18793)
!18795 = !DILocation(line: 67, column: 33, scope: !18787, inlinedAt: !18793)
!18796 = !DILocation(line: 1682, column: 3, scope: !18784)
!18797 = distinct !{!18797, !18782, !18798}
!18798 = !DILocation(line: 1683, column: 2, scope: !18773)
!18799 = !DILocation(line: 1684, column: 1, scope: !18773)
!18800 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2744, file: !2744, line: 1794, type: !18801, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18803)
!18801 = !DISubroutineType(types: !18802)
!18802 = !{!103, !2642, !17482}
!18803 = !{!18804, !18805, !18806, !18807}
!18804 = !DILocalVariable(name: "thread", arg: 1, scope: !18800, file: !2744, line: 1794, type: !2642)
!18805 = !DILocalVariable(name: "timeout", arg: 2, scope: !18800, file: !2744, line: 1794, type: !17482)
!18806 = !DILocalVariable(name: "key", scope: !18800, file: !2744, line: 1796, type: !16586)
!18807 = !DILocalVariable(name: "ret", scope: !18800, file: !2744, line: 1797, type: !103)
!18808 = !DILocation(line: 0, scope: !18800)
!18809 = !DILocation(line: 0, scope: !16594, inlinedAt: !18810)
!18810 = distinct !DILocation(line: 1796, column: 25, scope: !18800)
!18811 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !18812)
!18812 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !18810)
!18813 = !DILocation(line: 0, scope: !16603, inlinedAt: !18812)
!18814 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !18810)
!18815 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !18810)
!18816 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !18810)
!18817 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !18810)
!18818 = !DILocation(line: 1801, column: 20, scope: !18819)
!18819 = distinct !DILexicalBlock(scope: !18800, file: !2744, line: 1801, column: 6)
!18820 = !DILocation(line: 1801, column: 33, scope: !18819)
!18821 = !DILocation(line: 1801, column: 49, scope: !18819)
!18822 = !DILocation(line: 1801, column: 6, scope: !18800)
!18823 = !DILocation(line: 1803, column: 13, scope: !18824)
!18824 = distinct !DILexicalBlock(scope: !18819, file: !2744, line: 1803, column: 13)
!18825 = !DILocation(line: 1803, column: 13, scope: !18819)
!18826 = !DILocation(line: 1805, column: 24, scope: !18827)
!18827 = distinct !DILexicalBlock(scope: !18824, file: !2744, line: 1805, column: 13)
!18828 = !DILocation(line: 1805, column: 21, scope: !18827)
!18829 = !DILocation(line: 1805, column: 34, scope: !18827)
!18830 = !DILocation(line: 1806, column: 20, scope: !18827)
!18831 = !DILocation(line: 1806, column: 44, scope: !18827)
!18832 = !DILocation(line: 1806, column: 30, scope: !18827)
!18833 = !DILocation(line: 1805, column: 13, scope: !18824)
!18834 = !DILocation(line: 1031, column: 3, scope: !17321, inlinedAt: !18835)
!18835 = distinct !DILocation(line: 48, column: 10, scope: !17325, inlinedAt: !18836)
!18836 = distinct !DILocation(line: 1809, column: 3, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18838, file: !2744, line: 1809, column: 3)
!18838 = distinct !DILexicalBlock(scope: !18839, file: !2744, line: 1809, column: 3)
!18839 = distinct !DILexicalBlock(scope: !18827, file: !2744, line: 1808, column: 9)
!18840 = !DILocation(line: 0, scope: !17321, inlinedAt: !18835)
!18841 = !DILocation(line: 48, column: 9, scope: !17325, inlinedAt: !18836)
!18842 = !DILocation(line: 1809, column: 3, scope: !18838)
!18843 = !DILocation(line: 1809, column: 3, scope: !18844)
!18844 = distinct !DILexicalBlock(scope: !18837, file: !2744, line: 1809, column: 3)
!18845 = !DILocation(line: 1810, column: 23, scope: !18839)
!18846 = !DILocation(line: 1810, column: 42, scope: !18839)
!18847 = !DILocation(line: 1810, column: 3, scope: !18839)
!18848 = !DILocation(line: 1811, column: 22, scope: !18839)
!18849 = !DILocation(line: 1811, column: 3, scope: !18839)
!18850 = !DILocation(line: 0, scope: !17272, inlinedAt: !18851)
!18851 = distinct !DILocation(line: 1814, column: 9, scope: !18839)
!18852 = !DILocation(line: 0, scope: !17281, inlinedAt: !18853)
!18853 = distinct !DILocation(line: 195, column: 2, scope: !17272, inlinedAt: !18851)
!18854 = !DILocation(line: 225, column: 2, scope: !17288, inlinedAt: !18853)
!18855 = !DILocation(line: 225, column: 2, scope: !17289, inlinedAt: !18853)
!18856 = !DILocation(line: 225, column: 2, scope: !17292, inlinedAt: !18853)
!18857 = !DILocation(line: 196, column: 9, scope: !17272, inlinedAt: !18851)
!18858 = !DILocation(line: 1817, column: 3, scope: !18839)
!18859 = !DILocation(line: 0, scope: !18819)
!18860 = !DILocation(line: 0, scope: !16628, inlinedAt: !18861)
!18861 = distinct !DILocation(line: 1822, column: 2, scope: !18800)
!18862 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !18861)
!18863 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !18861)
!18864 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !18861)
!18865 = !DILocation(line: 0, scope: !16642, inlinedAt: !18866)
!18866 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !18861)
!18867 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !18866)
!18868 = !DILocation(line: 1823, column: 2, scope: !18800)
!18869 = !DILocation(line: 1824, column: 1, scope: !18800)
!18870 = distinct !DISubprogram(name: "z_sched_wake", scope: !2744, file: !2744, line: 1882, type: !18871, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18873)
!18871 = !DISubroutineType(types: !18872)
!18872 = !{!279, !2673, !103, !102}
!18873 = !{!18874, !18875, !18876, !18877, !18878, !18879, !18881}
!18874 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18870, file: !2744, line: 1882, type: !2673)
!18875 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18870, file: !2744, line: 1882, type: !103)
!18876 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18870, file: !2744, line: 1882, type: !102)
!18877 = !DILocalVariable(name: "thread", scope: !18870, file: !2744, line: 1884, type: !2642)
!18878 = !DILocalVariable(name: "ret", scope: !18870, file: !2744, line: 1885, type: !279)
!18879 = !DILocalVariable(name: "__i", scope: !18880, file: !2744, line: 1887, type: !16586)
!18880 = distinct !DILexicalBlock(scope: !18870, file: !2744, line: 1887, column: 2)
!18881 = !DILocalVariable(name: "__key", scope: !18880, file: !2744, line: 1887, type: !16586)
!18882 = !DILocation(line: 0, scope: !18870)
!18883 = !DILocation(line: 0, scope: !18880)
!18884 = !DILocation(line: 0, scope: !16594, inlinedAt: !18885)
!18885 = distinct !DILocation(line: 1887, column: 2, scope: !18880)
!18886 = !DILocation(line: 55, column: 2, scope: !16603, inlinedAt: !18887)
!18887 = distinct !DILocation(line: 145, column: 10, scope: !16594, inlinedAt: !18885)
!18888 = !DILocation(line: 0, scope: !16603, inlinedAt: !18887)
!18889 = !DILocation(line: 148, column: 2, scope: !16611, inlinedAt: !18885)
!18890 = !DILocation(line: 148, column: 2, scope: !16612, inlinedAt: !18885)
!18891 = !DILocation(line: 148, column: 2, scope: !16615, inlinedAt: !18885)
!18892 = !DILocation(line: 160, column: 2, scope: !16594, inlinedAt: !18885)
!18893 = !DILocation(line: 1888, column: 12, scope: !18894)
!18894 = distinct !DILexicalBlock(scope: !18895, file: !2744, line: 1887, column: 26)
!18895 = distinct !DILexicalBlock(scope: !18880, file: !2744, line: 1887, column: 2)
!18896 = !DILocation(line: 1890, column: 14, scope: !18897)
!18897 = distinct !DILexicalBlock(scope: !18894, file: !2744, line: 1890, column: 7)
!18898 = !DILocation(line: 1890, column: 7, scope: !18894)
!18899 = !DILocalVariable(name: "thread", arg: 1, scope: !18900, file: !13791, line: 134, type: !2642)
!18900 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13791, file: !13791, line: 134, type: !18901, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18903)
!18901 = !DISubroutineType(types: !18902)
!18902 = !{null, !2642, !32, !102}
!18903 = !{!18899, !18904, !18905}
!18904 = !DILocalVariable(name: "value", arg: 2, scope: !18900, file: !13791, line: 135, type: !32)
!18905 = !DILocalVariable(name: "data", arg: 3, scope: !18900, file: !13791, line: 136, type: !102)
!18906 = !DILocation(line: 0, scope: !18900, inlinedAt: !18907)
!18907 = distinct !DILocation(line: 1891, column: 4, scope: !18908)
!18908 = distinct !DILexicalBlock(scope: !18897, file: !2744, line: 1890, column: 23)
!18909 = !DILocation(line: 0, scope: !18787, inlinedAt: !18910)
!18910 = distinct !DILocation(line: 138, column: 2, scope: !18900, inlinedAt: !18907)
!18911 = !DILocation(line: 67, column: 15, scope: !18787, inlinedAt: !18910)
!18912 = !DILocation(line: 67, column: 33, scope: !18787, inlinedAt: !18910)
!18913 = !DILocation(line: 139, column: 15, scope: !18900, inlinedAt: !18907)
!18914 = !DILocation(line: 139, column: 25, scope: !18900, inlinedAt: !18907)
!18915 = !DILocation(line: 1894, column: 4, scope: !18908)
!18916 = !DILocation(line: 1895, column: 10, scope: !18908)
!18917 = !DILocation(line: 1896, column: 4, scope: !18908)
!18918 = !DILocation(line: 1898, column: 3, scope: !18908)
!18919 = !DILocation(line: 0, scope: !16628, inlinedAt: !18920)
!18920 = distinct !DILocation(line: 1887, column: 2, scope: !18895)
!18921 = !DILocation(line: 194, column: 2, scope: !16636, inlinedAt: !18920)
!18922 = !DILocation(line: 194, column: 2, scope: !16637, inlinedAt: !18920)
!18923 = !DILocation(line: 194, column: 2, scope: !16640, inlinedAt: !18920)
!18924 = !DILocation(line: 0, scope: !16642, inlinedAt: !18925)
!18925 = distinct !DILocation(line: 215, column: 2, scope: !16628, inlinedAt: !18920)
!18926 = !DILocation(line: 95, column: 2, scope: !16642, inlinedAt: !18925)
!18927 = !DILocation(line: 1901, column: 2, scope: !18870)
!18928 = distinct !DISubprogram(name: "z_sched_wait", scope: !2744, file: !2744, line: 1904, type: !18929, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !18932)
!18929 = !DISubroutineType(types: !18930)
!18930 = !{!103, !16597, !16586, !2673, !17482, !18931}
!18931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!18932 = !{!18933, !18934, !18935, !18936, !18937, !18938}
!18933 = !DILocalVariable(name: "lock", arg: 1, scope: !18928, file: !2744, line: 1904, type: !16597)
!18934 = !DILocalVariable(name: "key", arg: 2, scope: !18928, file: !2744, line: 1904, type: !16586)
!18935 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18928, file: !2744, line: 1905, type: !2673)
!18936 = !DILocalVariable(name: "timeout", arg: 4, scope: !18928, file: !2744, line: 1905, type: !17482)
!18937 = !DILocalVariable(name: "data", arg: 5, scope: !18928, file: !2744, line: 1905, type: !18931)
!18938 = !DILocalVariable(name: "ret", scope: !18928, file: !2744, line: 1907, type: !103)
!18939 = !DILocation(line: 0, scope: !18928)
!18940 = !DILocation(line: 1907, column: 12, scope: !18928)
!18941 = !DILocation(line: 1909, column: 11, scope: !18942)
!18942 = distinct !DILexicalBlock(scope: !18928, file: !2744, line: 1909, column: 6)
!18943 = !DILocation(line: 1909, column: 6, scope: !18928)
!18944 = !DILocation(line: 1910, column: 11, scope: !18945)
!18945 = distinct !DILexicalBlock(scope: !18942, file: !2744, line: 1909, column: 20)
!18946 = !DILocation(line: 1910, column: 26, scope: !18945)
!18947 = !DILocation(line: 1910, column: 9, scope: !18945)
!18948 = !DILocation(line: 1911, column: 2, scope: !18945)
!18949 = !DILocation(line: 1912, column: 2, scope: !18928)
!18950 = distinct !DISubprogram(name: "z_data_copy", scope: !18951, file: !18951, line: 22, type: !374, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3694, retainedNodes: !2145)
!18951 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18952 = !DILocation(line: 24, column: 2, scope: !18950)
!18953 = !DILocation(line: 27, column: 2, scope: !18950)
!18954 = !DILocation(line: 71, column: 1, scope: !18950)
!18955 = distinct !DISubprogram(name: "z_add_timeout", scope: !2781, file: !2781, line: 88, type: !18956, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !18962)
!18956 = !DISubroutineType(types: !18957)
!18957 = !{null, !2754, !2773, !18958}
!18958 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !18959)
!18959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !18960)
!18960 = !{!18961}
!18961 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18959, file: !320, line: 66, baseType: !319, size: 64)
!18962 = !{!18963, !18964, !18965, !18966, !18972, !18973, !18976, !18979}
!18963 = !DILocalVariable(name: "to", arg: 1, scope: !18955, file: !2781, line: 88, type: !2754)
!18964 = !DILocalVariable(name: "fn", arg: 2, scope: !18955, file: !2781, line: 88, type: !2773)
!18965 = !DILocalVariable(name: "timeout", arg: 3, scope: !18955, file: !2781, line: 89, type: !18958)
!18966 = !DILocalVariable(name: "__i", scope: !18967, file: !2781, line: 102, type: !18968)
!18967 = distinct !DILexicalBlock(scope: !18955, file: !2781, line: 102, column: 2)
!18968 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !18969)
!18969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !18970)
!18970 = !{!18971}
!18971 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18969, file: !244, line: 33, baseType: !103, size: 32)
!18972 = !DILocalVariable(name: "__key", scope: !18967, file: !2781, line: 102, type: !18968)
!18973 = !DILocalVariable(name: "t", scope: !18974, file: !2781, line: 103, type: !2754)
!18974 = distinct !DILexicalBlock(scope: !18975, file: !2781, line: 102, column: 24)
!18975 = distinct !DILexicalBlock(scope: !18967, file: !2781, line: 102, column: 2)
!18976 = !DILocalVariable(name: "ticks", scope: !18977, file: !2781, line: 107, type: !319)
!18977 = distinct !DILexicalBlock(scope: !18978, file: !2781, line: 106, column: 39)
!18978 = distinct !DILexicalBlock(scope: !18974, file: !2781, line: 105, column: 7)
!18979 = !DILocalVariable(name: "next_time", scope: !18980, file: !2781, line: 137, type: !371)
!18980 = distinct !DILexicalBlock(scope: !18981, file: !2781, line: 127, column: 22)
!18981 = distinct !DILexicalBlock(scope: !18974, file: !2781, line: 127, column: 7)
!18982 = !DILocation(line: 0, scope: !18955)
!18983 = !DILocation(line: 91, column: 6, scope: !18984)
!18984 = distinct !DILexicalBlock(scope: !18955, file: !2781, line: 91, column: 6)
!18985 = !DILocation(line: 91, column: 6, scope: !18955)
!18986 = !DILocation(line: 99, column: 2, scope: !18987)
!18987 = distinct !DILexicalBlock(scope: !18988, file: !2781, line: 99, column: 2)
!18988 = distinct !DILexicalBlock(scope: !18955, file: !2781, line: 99, column: 2)
!18989 = !DILocation(line: 99, column: 2, scope: !18988)
!18990 = !DILocation(line: 99, column: 2, scope: !18991)
!18991 = distinct !DILexicalBlock(scope: !18987, file: !2781, line: 99, column: 2)
!18992 = !DILocation(line: 100, column: 6, scope: !18955)
!18993 = !DILocation(line: 100, column: 9, scope: !18955)
!18994 = !DILocation(line: 0, scope: !18967)
!18995 = !DILocalVariable(name: "l", arg: 1, scope: !18996, file: !244, line: 136, type: !18999)
!18996 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !18997, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19000)
!18997 = !DISubroutineType(types: !18998)
!18998 = !{!18968, !18999}
!18999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 32)
!19000 = !{!18995, !19001}
!19001 = !DILocalVariable(name: "k", scope: !18996, file: !244, line: 139, type: !18968)
!19002 = !DILocation(line: 0, scope: !18996, inlinedAt: !19003)
!19003 = distinct !DILocation(line: 102, column: 2, scope: !18967)
!19004 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19009)
!19005 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19006)
!19006 = !{!19007, !19008}
!19007 = !DILocalVariable(name: "key", scope: !19005, file: !7921, line: 44, type: !32)
!19008 = !DILocalVariable(name: "tmp", scope: !19005, file: !7921, line: 53, type: !32)
!19009 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19003)
!19010 = !{i64 2850292}
!19011 = !DILocation(line: 0, scope: !19005, inlinedAt: !19009)
!19012 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19003)
!19013 = distinct !DILexicalBlock(scope: !19014, file: !244, line: 148, column: 2)
!19014 = distinct !DILexicalBlock(scope: !18996, file: !244, line: 148, column: 2)
!19015 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19003)
!19016 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19003)
!19017 = distinct !DILexicalBlock(scope: !19013, file: !244, line: 148, column: 2)
!19018 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19003)
!19019 = !DILocation(line: 106, column: 33, scope: !18978)
!19020 = !DILocation(line: 105, column: 7, scope: !18974)
!19021 = !DILocation(line: 107, column: 50, scope: !18977)
!19022 = !DILocation(line: 107, column: 48, scope: !18977)
!19023 = !DILocation(line: 0, scope: !18977)
!19024 = !DILocation(line: 109, column: 17, scope: !18977)
!19025 = !DILocation(line: 110, column: 3, scope: !18977)
!19026 = !DILocation(line: 111, column: 31, scope: !19027)
!19027 = distinct !DILexicalBlock(scope: !18978, file: !2781, line: 110, column: 10)
!19028 = !DILocation(line: 111, column: 37, scope: !19027)
!19029 = !DILocation(line: 111, column: 35, scope: !19027)
!19030 = !DILocation(line: 0, scope: !18978)
!19031 = !DILocation(line: 109, column: 8, scope: !18977)
!19032 = !DILocation(line: 109, column: 15, scope: !18977)
!19033 = !DILocation(line: 114, column: 12, scope: !19034)
!19034 = distinct !DILexicalBlock(scope: !18974, file: !2781, line: 114, column: 3)
!19035 = !DILocation(line: 0, scope: !18974)
!19036 = !DILocation(line: 114, column: 3, scope: !19034)
!19037 = !DILocation(line: 115, column: 24, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19039, file: !2781, line: 115, column: 8)
!19039 = distinct !DILexicalBlock(scope: !19040, file: !2781, line: 114, column: 45)
!19040 = distinct !DILexicalBlock(scope: !19034, file: !2781, line: 114, column: 3)
!19041 = !DILocation(line: 115, column: 11, scope: !19038)
!19042 = !DILocation(line: 115, column: 18, scope: !19038)
!19043 = !DILocation(line: 115, column: 8, scope: !19039)
!19044 = !DILocation(line: 116, column: 15, scope: !19045)
!19045 = distinct !DILexicalBlock(scope: !19038, file: !2781, line: 115, column: 32)
!19046 = !DILocation(line: 117, column: 26, scope: !19045)
!19047 = !DILocation(line: 117, column: 5, scope: !19045)
!19048 = !DILocation(line: 123, column: 7, scope: !18974)
!19049 = !DILocation(line: 120, column: 15, scope: !19039)
!19050 = !DILocation(line: 114, column: 36, scope: !19040)
!19051 = distinct !{!19051, !19036, !19052}
!19052 = !DILocation(line: 121, column: 3, scope: !19034)
!19053 = !DILocation(line: 124, column: 4, scope: !19054)
!19054 = distinct !DILexicalBlock(scope: !19055, file: !2781, line: 123, column: 18)
!19055 = distinct !DILexicalBlock(scope: !18974, file: !2781, line: 123, column: 7)
!19056 = !DILocation(line: 125, column: 3, scope: !19054)
!19057 = !DILocation(line: 127, column: 13, scope: !18981)
!19058 = !DILocation(line: 127, column: 10, scope: !18981)
!19059 = !DILocation(line: 127, column: 7, scope: !18974)
!19060 = !DILocation(line: 137, column: 24, scope: !18980)
!19061 = !DILocation(line: 0, scope: !18980)
!19062 = !DILocation(line: 139, column: 18, scope: !19063)
!19063 = distinct !DILexicalBlock(scope: !18980, file: !2781, line: 139, column: 8)
!19064 = !DILocation(line: 139, column: 23, scope: !19063)
!19065 = !DILocation(line: 141, column: 5, scope: !19066)
!19066 = distinct !DILexicalBlock(scope: !19063, file: !2781, line: 140, column: 48)
!19067 = !DILocation(line: 142, column: 4, scope: !19066)
!19068 = !DILocalVariable(name: "key", arg: 2, scope: !19069, file: !244, line: 190, type: !18968)
!19069 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !19070, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19072)
!19070 = !DISubroutineType(types: !19071)
!19071 = !{null, !18999, !18968}
!19072 = !{!19073, !19068}
!19073 = !DILocalVariable(name: "l", arg: 1, scope: !19069, file: !244, line: 189, type: !18999)
!19074 = !DILocation(line: 0, scope: !19069, inlinedAt: !19075)
!19075 = distinct !DILocation(line: 102, column: 2, scope: !18975)
!19076 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19075)
!19077 = distinct !DILexicalBlock(scope: !19078, file: !244, line: 194, column: 2)
!19078 = distinct !DILexicalBlock(scope: !19069, file: !244, line: 194, column: 2)
!19079 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19075)
!19080 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19075)
!19081 = distinct !DILexicalBlock(scope: !19077, file: !244, line: 194, column: 2)
!19082 = !DILocalVariable(name: "key", arg: 1, scope: !19083, file: !7921, line: 84, type: !32)
!19083 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19084)
!19084 = !{!19082}
!19085 = !DILocation(line: 0, scope: !19083, inlinedAt: !19086)
!19086 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19075)
!19087 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19086)
!19088 = !{i64 2851109}
!19089 = !DILocation(line: 148, column: 1, scope: !18955)
!19090 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !141, file: !141, line: 225, type: !19091, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19095)
!19091 = !DISubroutineType(types: !19092)
!19092 = !{!279, !19093}
!19093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19094, size: 32)
!19094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2758)
!19095 = !{!19096}
!19096 = !DILocalVariable(name: "node", arg: 1, scope: !19090, file: !141, line: 225, type: !19093)
!19097 = !DILocation(line: 0, scope: !19090)
!19098 = !DILocation(line: 227, column: 15, scope: !19090)
!19099 = !DILocation(line: 227, column: 20, scope: !19090)
!19100 = !DILocation(line: 227, column: 2, scope: !19090)
!19101 = distinct !DISubprogram(name: "elapsed", scope: !2781, file: !2781, line: 62, type: !19102, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2145)
!19102 = !DISubroutineType(types: !19103)
!19103 = !{!371}
!19104 = !DILocation(line: 64, column: 9, scope: !19101)
!19105 = !DILocation(line: 64, column: 28, scope: !19101)
!19106 = !DILocation(line: 64, column: 35, scope: !19101)
!19107 = !DILocation(line: 64, column: 2, scope: !19101)
!19108 = distinct !DISubprogram(name: "first", scope: !2781, file: !2781, line: 39, type: !19109, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19111)
!19109 = !DISubroutineType(types: !19110)
!19110 = !{!2754}
!19111 = !{!19112}
!19112 = !DILocalVariable(name: "t", scope: !19108, file: !2781, line: 41, type: !19113)
!19113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!19114 = !DILocation(line: 41, column: 19, scope: !19108)
!19115 = !DILocation(line: 0, scope: !19108)
!19116 = !DILocation(line: 43, column: 9, scope: !19108)
!19117 = !DILocation(line: 43, column: 2, scope: !19108)
!19118 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !141, file: !141, line: 443, type: !19119, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19121)
!19119 = !DISubroutineType(types: !19120)
!19120 = !{null, !19113, !19113}
!19121 = !{!19122, !19123, !19124}
!19122 = !DILocalVariable(name: "successor", arg: 1, scope: !19118, file: !141, line: 443, type: !19113)
!19123 = !DILocalVariable(name: "node", arg: 2, scope: !19118, file: !141, line: 443, type: !19113)
!19124 = !DILocalVariable(name: "prev", scope: !19118, file: !141, line: 445, type: !19125)
!19125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19113)
!19126 = !DILocation(line: 0, scope: !19118)
!19127 = !DILocation(line: 445, column: 39, scope: !19118)
!19128 = !DILocation(line: 447, column: 8, scope: !19118)
!19129 = !DILocation(line: 447, column: 13, scope: !19118)
!19130 = !DILocation(line: 448, column: 8, scope: !19118)
!19131 = !DILocation(line: 448, column: 13, scope: !19118)
!19132 = !DILocation(line: 449, column: 8, scope: !19118)
!19133 = !DILocation(line: 449, column: 13, scope: !19118)
!19134 = !DILocation(line: 450, column: 18, scope: !19118)
!19135 = !DILocation(line: 451, column: 1, scope: !19118)
!19136 = distinct !DISubprogram(name: "next", scope: !2781, file: !2781, line: 46, type: !19137, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19139)
!19137 = !DISubroutineType(types: !19138)
!19138 = !{!2754, !2754}
!19139 = !{!19140, !19141}
!19140 = !DILocalVariable(name: "t", arg: 1, scope: !19136, file: !2781, line: 46, type: !2754)
!19141 = !DILocalVariable(name: "n", scope: !19136, file: !2781, line: 48, type: !19113)
!19142 = !DILocation(line: 0, scope: !19136)
!19143 = !DILocation(line: 48, column: 58, scope: !19136)
!19144 = !DILocation(line: 48, column: 19, scope: !19136)
!19145 = !DILocation(line: 50, column: 9, scope: !19136)
!19146 = !DILocation(line: 50, column: 2, scope: !19136)
!19147 = distinct !DISubprogram(name: "sys_dlist_append", scope: !141, file: !141, line: 404, type: !19148, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19151)
!19148 = !DISubroutineType(types: !19149)
!19149 = !{null, !19150, !19113}
!19150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!19151 = !{!19152, !19153, !19154}
!19152 = !DILocalVariable(name: "list", arg: 1, scope: !19147, file: !141, line: 404, type: !19150)
!19153 = !DILocalVariable(name: "node", arg: 2, scope: !19147, file: !141, line: 404, type: !19113)
!19154 = !DILocalVariable(name: "tail", scope: !19147, file: !141, line: 406, type: !19125)
!19155 = !DILocation(line: 0, scope: !19147)
!19156 = !DILocation(line: 406, column: 34, scope: !19147)
!19157 = !DILocation(line: 408, column: 8, scope: !19147)
!19158 = !DILocation(line: 408, column: 13, scope: !19147)
!19159 = !DILocation(line: 409, column: 8, scope: !19147)
!19160 = !DILocation(line: 409, column: 13, scope: !19147)
!19161 = !DILocation(line: 411, column: 8, scope: !19147)
!19162 = !DILocation(line: 411, column: 13, scope: !19147)
!19163 = !DILocation(line: 412, column: 13, scope: !19147)
!19164 = !DILocation(line: 413, column: 1, scope: !19147)
!19165 = distinct !DISubprogram(name: "next_timeout", scope: !2781, file: !2781, line: 67, type: !19102, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19166)
!19166 = !{!19167, !19168, !19169}
!19167 = !DILocalVariable(name: "to", scope: !19165, file: !2781, line: 69, type: !2754)
!19168 = !DILocalVariable(name: "ticks_elapsed", scope: !19165, file: !2781, line: 70, type: !371)
!19169 = !DILocalVariable(name: "ret", scope: !19165, file: !2781, line: 71, type: !371)
!19170 = !DILocation(line: 69, column: 24, scope: !19165)
!19171 = !DILocation(line: 0, scope: !19165)
!19172 = !DILocation(line: 70, column: 26, scope: !19165)
!19173 = !DILocation(line: 73, column: 10, scope: !19174)
!19174 = distinct !DILexicalBlock(scope: !19165, file: !2781, line: 73, column: 6)
!19175 = !DILocation(line: 73, column: 19, scope: !19174)
!19176 = !DILocation(line: 74, column: 21, scope: !19174)
!19177 = !DILocation(line: 74, column: 30, scope: !19174)
!19178 = !DILocation(line: 74, column: 28, scope: !19174)
!19179 = !DILocation(line: 74, column: 45, scope: !19174)
!19180 = !DILocation(line: 73, column: 6, scope: !19165)
!19181 = !DILocation(line: 77, column: 9, scope: !19182)
!19182 = distinct !DILexicalBlock(scope: !19174, file: !2781, line: 76, column: 9)
!19183 = !DILocation(line: 0, scope: !19174)
!19184 = !DILocation(line: 81, column: 20, scope: !19185)
!19185 = distinct !DILexicalBlock(scope: !19165, file: !2781, line: 81, column: 6)
!19186 = !DILocation(line: 81, column: 6, scope: !19185)
!19187 = !DILocation(line: 81, column: 32, scope: !19185)
!19188 = !DILocation(line: 85, column: 2, scope: !19165)
!19189 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !141, file: !141, line: 341, type: !19190, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19192)
!19190 = !DISubroutineType(types: !19191)
!19191 = !{!19113, !19150, !19113}
!19192 = !{!19193, !19194}
!19193 = !DILocalVariable(name: "list", arg: 1, scope: !19189, file: !141, line: 341, type: !19150)
!19194 = !DILocalVariable(name: "node", arg: 2, scope: !19189, file: !141, line: 342, type: !19113)
!19195 = !DILocation(line: 0, scope: !19189)
!19196 = !DILocation(line: 344, column: 15, scope: !19189)
!19197 = !DILocation(line: 344, column: 9, scope: !19189)
!19198 = !DILocation(line: 344, column: 26, scope: !19189)
!19199 = !DILocation(line: 344, column: 2, scope: !19189)
!19200 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !141, file: !141, line: 325, type: !19190, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19201)
!19201 = !{!19202, !19203}
!19202 = !DILocalVariable(name: "list", arg: 1, scope: !19200, file: !141, line: 325, type: !19150)
!19203 = !DILocalVariable(name: "node", arg: 2, scope: !19200, file: !141, line: 326, type: !19113)
!19204 = !DILocation(line: 0, scope: !19200)
!19205 = !DILocation(line: 328, column: 24, scope: !19200)
!19206 = !DILocation(line: 328, column: 15, scope: !19200)
!19207 = !DILocation(line: 328, column: 9, scope: !19200)
!19208 = !DILocation(line: 328, column: 45, scope: !19200)
!19209 = !DILocation(line: 328, column: 2, scope: !19200)
!19210 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !141, file: !141, line: 294, type: !19211, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19213)
!19211 = !DISubroutineType(types: !19212)
!19212 = !{!19113, !19150}
!19213 = !{!19214}
!19214 = !DILocalVariable(name: "list", arg: 1, scope: !19210, file: !141, line: 294, type: !19150)
!19215 = !DILocation(line: 0, scope: !19210)
!19216 = !DILocation(line: 296, column: 9, scope: !19210)
!19217 = !DILocation(line: 296, column: 2, scope: !19210)
!19218 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !141, file: !141, line: 266, type: !19219, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19221)
!19219 = !DISubroutineType(types: !19220)
!19220 = !{!279, !19150}
!19221 = !{!19222}
!19222 = !DILocalVariable(name: "list", arg: 1, scope: !19218, file: !141, line: 266, type: !19150)
!19223 = !DILocation(line: 0, scope: !19218)
!19224 = !DILocation(line: 268, column: 15, scope: !19218)
!19225 = !DILocation(line: 268, column: 20, scope: !19218)
!19226 = !DILocation(line: 268, column: 2, scope: !19218)
!19227 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2781, file: !2781, line: 150, type: !19228, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19230)
!19228 = !DISubroutineType(types: !19229)
!19229 = !{!103, !2754}
!19230 = !{!19231, !19232, !19233, !19235}
!19231 = !DILocalVariable(name: "to", arg: 1, scope: !19227, file: !2781, line: 150, type: !2754)
!19232 = !DILocalVariable(name: "ret", scope: !19227, file: !2781, line: 152, type: !103)
!19233 = !DILocalVariable(name: "__i", scope: !19234, file: !2781, line: 154, type: !18968)
!19234 = distinct !DILexicalBlock(scope: !19227, file: !2781, line: 154, column: 2)
!19235 = !DILocalVariable(name: "__key", scope: !19234, file: !2781, line: 154, type: !18968)
!19236 = !DILocation(line: 0, scope: !19227)
!19237 = !DILocation(line: 0, scope: !19234)
!19238 = !DILocation(line: 0, scope: !18996, inlinedAt: !19239)
!19239 = distinct !DILocation(line: 154, column: 2, scope: !19234)
!19240 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19241)
!19241 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19239)
!19242 = !DILocation(line: 0, scope: !19005, inlinedAt: !19241)
!19243 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19239)
!19244 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19239)
!19245 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19239)
!19246 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19239)
!19247 = !DILocation(line: 155, column: 7, scope: !19248)
!19248 = distinct !DILexicalBlock(scope: !19249, file: !2781, line: 155, column: 7)
!19249 = distinct !DILexicalBlock(scope: !19250, file: !2781, line: 154, column: 24)
!19250 = distinct !DILexicalBlock(scope: !19234, file: !2781, line: 154, column: 2)
!19251 = !DILocation(line: 155, column: 7, scope: !19249)
!19252 = !DILocation(line: 156, column: 4, scope: !19253)
!19253 = distinct !DILexicalBlock(scope: !19248, file: !2781, line: 155, column: 39)
!19254 = !DILocation(line: 158, column: 3, scope: !19253)
!19255 = !DILocation(line: 0, scope: !19069, inlinedAt: !19256)
!19256 = distinct !DILocation(line: 154, column: 2, scope: !19250)
!19257 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19256)
!19258 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19256)
!19259 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19256)
!19260 = !DILocation(line: 0, scope: !19083, inlinedAt: !19261)
!19261 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19256)
!19262 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19261)
!19263 = !DILocation(line: 161, column: 2, scope: !19227)
!19264 = distinct !DISubprogram(name: "remove_timeout", scope: !2781, file: !2781, line: 53, type: !2775, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19265)
!19265 = !{!19266}
!19266 = !DILocalVariable(name: "t", arg: 1, scope: !19264, file: !2781, line: 53, type: !2754)
!19267 = !DILocation(line: 0, scope: !19264)
!19268 = !DILocation(line: 55, column: 6, scope: !19269)
!19269 = distinct !DILexicalBlock(scope: !19264, file: !2781, line: 55, column: 6)
!19270 = !DILocation(line: 55, column: 14, scope: !19269)
!19271 = !DILocation(line: 55, column: 6, scope: !19264)
!19272 = !DILocation(line: 56, column: 25, scope: !19273)
!19273 = distinct !DILexicalBlock(scope: !19269, file: !2781, line: 55, column: 23)
!19274 = !DILocation(line: 56, column: 12, scope: !19273)
!19275 = !DILocation(line: 56, column: 19, scope: !19273)
!19276 = !DILocation(line: 57, column: 2, scope: !19273)
!19277 = !DILocation(line: 59, column: 23, scope: !19264)
!19278 = !DILocation(line: 59, column: 2, scope: !19264)
!19279 = !DILocation(line: 60, column: 1, scope: !19264)
!19280 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !141, file: !141, line: 496, type: !19281, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19283)
!19281 = !DISubroutineType(types: !19282)
!19282 = !{null, !19113}
!19283 = !{!19284, !19285, !19286}
!19284 = !DILocalVariable(name: "node", arg: 1, scope: !19280, file: !141, line: 496, type: !19113)
!19285 = !DILocalVariable(name: "prev", scope: !19280, file: !141, line: 498, type: !19125)
!19286 = !DILocalVariable(name: "next", scope: !19280, file: !141, line: 499, type: !19125)
!19287 = !DILocation(line: 0, scope: !19280)
!19288 = !DILocation(line: 498, column: 34, scope: !19280)
!19289 = !DILocation(line: 499, column: 34, scope: !19280)
!19290 = !DILocation(line: 501, column: 8, scope: !19280)
!19291 = !DILocation(line: 501, column: 13, scope: !19280)
!19292 = !DILocation(line: 502, column: 8, scope: !19280)
!19293 = !DILocation(line: 502, column: 13, scope: !19280)
!19294 = !DILocation(line: 503, column: 2, scope: !19280)
!19295 = !DILocation(line: 504, column: 1, scope: !19280)
!19296 = distinct !DISubprogram(name: "sys_dnode_init", scope: !141, file: !141, line: 211, type: !19281, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19297)
!19297 = !{!19298}
!19298 = !DILocalVariable(name: "node", arg: 1, scope: !19296, file: !141, line: 211, type: !19113)
!19299 = !DILocation(line: 0, scope: !19296)
!19300 = !DILocation(line: 213, column: 8, scope: !19296)
!19301 = !DILocation(line: 213, column: 13, scope: !19296)
!19302 = !DILocation(line: 214, column: 8, scope: !19296)
!19303 = !DILocation(line: 214, column: 13, scope: !19296)
!19304 = !DILocation(line: 215, column: 1, scope: !19296)
!19305 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2781, file: !2781, line: 183, type: !19306, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19310)
!19306 = !DISubroutineType(types: !19307)
!19307 = !{!319, !19308}
!19308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19309, size: 32)
!19309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2755)
!19310 = !{!19311, !19312, !19313, !19315}
!19311 = !DILocalVariable(name: "timeout", arg: 1, scope: !19305, file: !2781, line: 183, type: !19308)
!19312 = !DILocalVariable(name: "ticks", scope: !19305, file: !2781, line: 185, type: !319)
!19313 = !DILocalVariable(name: "__i", scope: !19314, file: !2781, line: 187, type: !18968)
!19314 = distinct !DILexicalBlock(scope: !19305, file: !2781, line: 187, column: 2)
!19315 = !DILocalVariable(name: "__key", scope: !19314, file: !2781, line: 187, type: !18968)
!19316 = !DILocation(line: 0, scope: !19305)
!19317 = !DILocation(line: 0, scope: !19314)
!19318 = !DILocation(line: 0, scope: !18996, inlinedAt: !19319)
!19319 = distinct !DILocation(line: 187, column: 2, scope: !19314)
!19320 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19321)
!19321 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19319)
!19322 = !DILocation(line: 0, scope: !19005, inlinedAt: !19321)
!19323 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19319)
!19324 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19319)
!19325 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19319)
!19326 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19319)
!19327 = !DILocation(line: 188, column: 11, scope: !19328)
!19328 = distinct !DILexicalBlock(scope: !19329, file: !2781, line: 187, column: 24)
!19329 = distinct !DILexicalBlock(scope: !19314, file: !2781, line: 187, column: 2)
!19330 = !DILocation(line: 0, scope: !19069, inlinedAt: !19331)
!19331 = distinct !DILocation(line: 187, column: 2, scope: !19329)
!19332 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19331)
!19333 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19331)
!19334 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19331)
!19335 = !DILocation(line: 0, scope: !19083, inlinedAt: !19336)
!19336 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19331)
!19337 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19336)
!19338 = !DILocation(line: 191, column: 2, scope: !19305)
!19339 = distinct !DISubprogram(name: "timeout_rem", scope: !2781, file: !2781, line: 165, type: !19306, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19340)
!19340 = !{!19341, !19342, !19343}
!19341 = !DILocalVariable(name: "timeout", arg: 1, scope: !19339, file: !2781, line: 165, type: !19308)
!19342 = !DILocalVariable(name: "ticks", scope: !19339, file: !2781, line: 167, type: !319)
!19343 = !DILocalVariable(name: "t", scope: !19344, file: !2781, line: 173, type: !2754)
!19344 = distinct !DILexicalBlock(scope: !19339, file: !2781, line: 173, column: 2)
!19345 = !DILocation(line: 0, scope: !19339)
!19346 = !DILocation(line: 169, column: 6, scope: !19347)
!19347 = distinct !DILexicalBlock(scope: !19339, file: !2781, line: 169, column: 6)
!19348 = !DILocation(line: 169, column: 6, scope: !19339)
!19349 = !DILocation(line: 173, column: 28, scope: !19344)
!19350 = !DILocation(line: 0, scope: !19344)
!19351 = !DILocation(line: 173, column: 39, scope: !19352)
!19352 = distinct !DILexicalBlock(scope: !19344, file: !2781, line: 173, column: 2)
!19353 = !DILocation(line: 173, column: 2, scope: !19344)
!19354 = !DILocation(line: 174, column: 15, scope: !19355)
!19355 = distinct !DILexicalBlock(scope: !19352, file: !2781, line: 173, column: 61)
!19356 = !DILocation(line: 174, column: 9, scope: !19355)
!19357 = !DILocation(line: 175, column: 15, scope: !19358)
!19358 = distinct !DILexicalBlock(scope: !19355, file: !2781, line: 175, column: 7)
!19359 = !DILocation(line: 175, column: 7, scope: !19355)
!19360 = !DILocation(line: 173, column: 52, scope: !19352)
!19361 = distinct !{!19361, !19353, !19362}
!19362 = !DILocation(line: 178, column: 2, scope: !19344)
!19363 = !DILocation(line: 180, column: 17, scope: !19339)
!19364 = !DILocation(line: 180, column: 15, scope: !19339)
!19365 = !DILocation(line: 180, column: 2, scope: !19339)
!19366 = !DILocation(line: 181, column: 1, scope: !19339)
!19367 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13334, file: !13334, line: 35, type: !19368, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19370)
!19368 = !DISubroutineType(types: !19369)
!19369 = !{!279, !19308}
!19370 = !{!19371}
!19371 = !DILocalVariable(name: "to", arg: 1, scope: !19367, file: !13334, line: 35, type: !19308)
!19372 = !DILocation(line: 0, scope: !19367)
!19373 = !DILocation(line: 37, column: 35, scope: !19367)
!19374 = !DILocation(line: 37, column: 10, scope: !19367)
!19375 = !DILocation(line: 37, column: 9, scope: !19367)
!19376 = !DILocation(line: 37, column: 2, scope: !19367)
!19377 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2781, file: !2781, line: 194, type: !19306, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19378)
!19378 = !{!19379, !19380, !19381, !19383}
!19379 = !DILocalVariable(name: "timeout", arg: 1, scope: !19377, file: !2781, line: 194, type: !19308)
!19380 = !DILocalVariable(name: "ticks", scope: !19377, file: !2781, line: 196, type: !319)
!19381 = !DILocalVariable(name: "__i", scope: !19382, file: !2781, line: 198, type: !18968)
!19382 = distinct !DILexicalBlock(scope: !19377, file: !2781, line: 198, column: 2)
!19383 = !DILocalVariable(name: "__key", scope: !19382, file: !2781, line: 198, type: !18968)
!19384 = !DILocation(line: 0, scope: !19377)
!19385 = !DILocation(line: 0, scope: !19382)
!19386 = !DILocation(line: 0, scope: !18996, inlinedAt: !19387)
!19387 = distinct !DILocation(line: 198, column: 2, scope: !19382)
!19388 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19389)
!19389 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19387)
!19390 = !DILocation(line: 0, scope: !19005, inlinedAt: !19389)
!19391 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19387)
!19392 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19387)
!19393 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19387)
!19394 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19387)
!19395 = !DILocation(line: 199, column: 11, scope: !19396)
!19396 = distinct !DILexicalBlock(scope: !19397, file: !2781, line: 198, column: 24)
!19397 = distinct !DILexicalBlock(scope: !19382, file: !2781, line: 198, column: 2)
!19398 = !DILocation(line: 199, column: 23, scope: !19396)
!19399 = !DILocation(line: 0, scope: !19069, inlinedAt: !19400)
!19400 = distinct !DILocation(line: 198, column: 2, scope: !19397)
!19401 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19400)
!19402 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19400)
!19403 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19400)
!19404 = !DILocation(line: 0, scope: !19083, inlinedAt: !19405)
!19405 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19400)
!19406 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19405)
!19407 = !DILocation(line: 199, column: 21, scope: !19396)
!19408 = !DILocation(line: 202, column: 2, scope: !19377)
!19409 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2781, file: !2781, line: 205, type: !19102, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19410)
!19410 = !{!19411, !19412, !19414}
!19411 = !DILocalVariable(name: "ret", scope: !19409, file: !2781, line: 207, type: !371)
!19412 = !DILocalVariable(name: "__i", scope: !19413, file: !2781, line: 209, type: !18968)
!19413 = distinct !DILexicalBlock(scope: !19409, file: !2781, line: 209, column: 2)
!19414 = !DILocalVariable(name: "__key", scope: !19413, file: !2781, line: 209, type: !18968)
!19415 = !DILocation(line: 0, scope: !19409)
!19416 = !DILocation(line: 0, scope: !19413)
!19417 = !DILocation(line: 0, scope: !18996, inlinedAt: !19418)
!19418 = distinct !DILocation(line: 209, column: 2, scope: !19413)
!19419 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19420)
!19420 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19418)
!19421 = !DILocation(line: 0, scope: !19005, inlinedAt: !19420)
!19422 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19418)
!19423 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19418)
!19424 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19418)
!19425 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19418)
!19426 = !DILocation(line: 210, column: 9, scope: !19427)
!19427 = distinct !DILexicalBlock(scope: !19428, file: !2781, line: 209, column: 24)
!19428 = distinct !DILexicalBlock(scope: !19413, file: !2781, line: 209, column: 2)
!19429 = !DILocation(line: 0, scope: !19069, inlinedAt: !19430)
!19430 = distinct !DILocation(line: 209, column: 2, scope: !19428)
!19431 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19430)
!19432 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19430)
!19433 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19430)
!19434 = !DILocation(line: 0, scope: !19083, inlinedAt: !19435)
!19435 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19430)
!19436 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19435)
!19437 = !DILocation(line: 212, column: 2, scope: !19409)
!19438 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2781, file: !2781, line: 215, type: !10764, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19439)
!19439 = !{!19440, !19441, !19442, !19444, !19445, !19448, !19449}
!19440 = !DILocalVariable(name: "ticks", arg: 1, scope: !19438, file: !2781, line: 215, type: !371)
!19441 = !DILocalVariable(name: "is_idle", arg: 2, scope: !19438, file: !2781, line: 215, type: !279)
!19442 = !DILocalVariable(name: "__i", scope: !19443, file: !2781, line: 217, type: !18968)
!19443 = distinct !DILexicalBlock(scope: !19438, file: !2781, line: 217, column: 2)
!19444 = !DILocalVariable(name: "__key", scope: !19443, file: !2781, line: 217, type: !18968)
!19445 = !DILocalVariable(name: "next_to", scope: !19446, file: !2781, line: 218, type: !103)
!19446 = distinct !DILexicalBlock(scope: !19447, file: !2781, line: 217, column: 24)
!19447 = distinct !DILexicalBlock(scope: !19443, file: !2781, line: 217, column: 2)
!19448 = !DILocalVariable(name: "sooner", scope: !19446, file: !2781, line: 219, type: !279)
!19449 = !DILocalVariable(name: "imminent", scope: !19446, file: !2781, line: 221, type: !279)
!19450 = !DILocation(line: 0, scope: !19438)
!19451 = !DILocation(line: 0, scope: !19443)
!19452 = !DILocation(line: 0, scope: !18996, inlinedAt: !19453)
!19453 = distinct !DILocation(line: 217, column: 2, scope: !19443)
!19454 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19455)
!19455 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19453)
!19456 = !DILocation(line: 0, scope: !19005, inlinedAt: !19455)
!19457 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19453)
!19458 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19453)
!19459 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19453)
!19460 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19453)
!19461 = !DILocation(line: 218, column: 17, scope: !19446)
!19462 = !DILocation(line: 0, scope: !19446)
!19463 = !DILocation(line: 221, column: 27, scope: !19446)
!19464 = !DILocation(line: 233, column: 17, scope: !19465)
!19465 = distinct !DILexicalBlock(scope: !19446, file: !2781, line: 233, column: 7)
!19466 = !DILocation(line: 234, column: 26, scope: !19467)
!19467 = distinct !DILexicalBlock(scope: !19465, file: !2781, line: 233, column: 56)
!19468 = !DILocation(line: 234, column: 4, scope: !19467)
!19469 = !DILocation(line: 235, column: 3, scope: !19467)
!19470 = !DILocation(line: 0, scope: !19069, inlinedAt: !19471)
!19471 = distinct !DILocation(line: 217, column: 2, scope: !19447)
!19472 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19471)
!19473 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19471)
!19474 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19471)
!19475 = !DILocation(line: 0, scope: !19083, inlinedAt: !19476)
!19476 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19471)
!19477 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19476)
!19478 = !DILocation(line: 237, column: 1, scope: !19438)
!19479 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2781, file: !2781, line: 239, type: !19480, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19482)
!19480 = !DISubroutineType(types: !19481)
!19481 = !{null, !371}
!19482 = !{!19483, !19484, !19485, !19487}
!19483 = !DILocalVariable(name: "ticks", arg: 1, scope: !19479, file: !2781, line: 239, type: !371)
!19484 = !DILocalVariable(name: "key", scope: !19479, file: !2781, line: 245, type: !18968)
!19485 = !DILocalVariable(name: "t", scope: !19486, file: !2781, line: 262, type: !2754)
!19486 = distinct !DILexicalBlock(scope: !19479, file: !2781, line: 261, column: 67)
!19487 = !DILocalVariable(name: "dt", scope: !19486, file: !2781, line: 263, type: !103)
!19488 = !DILocation(line: 0, scope: !19479)
!19489 = !DILocation(line: 242, column: 2, scope: !19479)
!19490 = !DILocation(line: 0, scope: !18996, inlinedAt: !19491)
!19491 = distinct !DILocation(line: 245, column: 25, scope: !19479)
!19492 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19493)
!19493 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19491)
!19494 = !DILocation(line: 0, scope: !19005, inlinedAt: !19493)
!19495 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19491)
!19496 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19491)
!19497 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19491)
!19498 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19491)
!19499 = !DILocation(line: 261, column: 9, scope: !19479)
!19500 = !DILocation(line: 261, column: 17, scope: !19479)
!19501 = !DILocation(line: 261, column: 25, scope: !19479)
!19502 = !DILocation(line: 261, column: 37, scope: !19479)
!19503 = !DILocation(line: 261, column: 47, scope: !19479)
!19504 = !DILocation(line: 261, column: 44, scope: !19479)
!19505 = !DILocation(line: 261, column: 2, scope: !19479)
!19506 = !DILocation(line: 0, scope: !19486)
!19507 = !DILocation(line: 263, column: 12, scope: !19486)
!19508 = !DILocation(line: 265, column: 16, scope: !19486)
!19509 = !DILocation(line: 265, column: 13, scope: !19486)
!19510 = !DILocation(line: 266, column: 13, scope: !19486)
!19511 = !DILocation(line: 267, column: 3, scope: !19486)
!19512 = !DILocation(line: 0, scope: !19069, inlinedAt: !19513)
!19513 = distinct !DILocation(line: 269, column: 3, scope: !19486)
!19514 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19513)
!19515 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19513)
!19516 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19513)
!19517 = !DILocation(line: 0, scope: !19083, inlinedAt: !19518)
!19518 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19513)
!19519 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19518)
!19520 = !DILocation(line: 270, column: 6, scope: !19486)
!19521 = !DILocation(line: 270, column: 3, scope: !19486)
!19522 = !DILocation(line: 0, scope: !18996, inlinedAt: !19523)
!19523 = distinct !DILocation(line: 271, column: 9, scope: !19486)
!19524 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19525)
!19525 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19523)
!19526 = !DILocation(line: 0, scope: !19005, inlinedAt: !19525)
!19527 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19523)
!19528 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19523)
!19529 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19523)
!19530 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19523)
!19531 = !DILocation(line: 272, column: 22, scope: !19486)
!19532 = distinct !{!19532, !19505, !19533}
!19533 = !DILocation(line: 273, column: 2, scope: !19479)
!19534 = !DILocation(line: 276, column: 19, scope: !19535)
!19535 = distinct !DILexicalBlock(scope: !19536, file: !2781, line: 275, column: 23)
!19536 = distinct !DILexicalBlock(scope: !19479, file: !2781, line: 275, column: 6)
!19537 = !DILocation(line: 277, column: 2, scope: !19535)
!19538 = !DILocation(line: 279, column: 15, scope: !19479)
!19539 = !DILocation(line: 279, column: 12, scope: !19479)
!19540 = !DILocation(line: 280, column: 21, scope: !19479)
!19541 = !DILocation(line: 282, column: 24, scope: !19479)
!19542 = !DILocation(line: 282, column: 2, scope: !19479)
!19543 = !DILocation(line: 0, scope: !19069, inlinedAt: !19544)
!19544 = distinct !DILocation(line: 284, column: 2, scope: !19479)
!19545 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19544)
!19546 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19544)
!19547 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19544)
!19548 = !DILocation(line: 0, scope: !19083, inlinedAt: !19549)
!19549 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19544)
!19550 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19549)
!19551 = !DILocation(line: 285, column: 1, scope: !19479)
!19552 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2781, file: !2781, line: 287, type: !19553, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19555)
!19553 = !DISubroutineType(types: !19554)
!19554 = !{!203}
!19555 = !{!19556, !19557, !19559}
!19556 = !DILocalVariable(name: "t", scope: !19552, file: !2781, line: 289, type: !321)
!19557 = !DILocalVariable(name: "__i", scope: !19558, file: !2781, line: 291, type: !18968)
!19558 = distinct !DILexicalBlock(scope: !19552, file: !2781, line: 291, column: 2)
!19559 = !DILocalVariable(name: "__key", scope: !19558, file: !2781, line: 291, type: !18968)
!19560 = !DILocation(line: 0, scope: !19552)
!19561 = !DILocation(line: 0, scope: !19558)
!19562 = !DILocation(line: 0, scope: !18996, inlinedAt: !19563)
!19563 = distinct !DILocation(line: 291, column: 2, scope: !19558)
!19564 = !DILocation(line: 55, column: 2, scope: !19005, inlinedAt: !19565)
!19565 = distinct !DILocation(line: 145, column: 10, scope: !18996, inlinedAt: !19563)
!19566 = !DILocation(line: 0, scope: !19005, inlinedAt: !19565)
!19567 = !DILocation(line: 148, column: 2, scope: !19013, inlinedAt: !19563)
!19568 = !DILocation(line: 148, column: 2, scope: !19014, inlinedAt: !19563)
!19569 = !DILocation(line: 148, column: 2, scope: !19017, inlinedAt: !19563)
!19570 = !DILocation(line: 160, column: 2, scope: !18996, inlinedAt: !19563)
!19571 = !DILocation(line: 292, column: 7, scope: !19572)
!19572 = distinct !DILexicalBlock(scope: !19573, file: !2781, line: 291, column: 24)
!19573 = distinct !DILexicalBlock(scope: !19558, file: !2781, line: 291, column: 2)
!19574 = !DILocation(line: 292, column: 19, scope: !19572)
!19575 = !DILocation(line: 0, scope: !19069, inlinedAt: !19576)
!19576 = distinct !DILocation(line: 291, column: 2, scope: !19573)
!19577 = !DILocation(line: 194, column: 2, scope: !19077, inlinedAt: !19576)
!19578 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19576)
!19579 = !DILocation(line: 194, column: 2, scope: !19081, inlinedAt: !19576)
!19580 = !DILocation(line: 0, scope: !19083, inlinedAt: !19581)
!19581 = distinct !DILocation(line: 215, column: 2, scope: !19069, inlinedAt: !19576)
!19582 = !DILocation(line: 95, column: 2, scope: !19083, inlinedAt: !19581)
!19583 = !DILocation(line: 292, column: 17, scope: !19572)
!19584 = !DILocation(line: 294, column: 2, scope: !19552)
!19585 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2781, file: !2781, line: 297, type: !7887, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2145)
!19586 = !DILocation(line: 300, column: 19, scope: !19585)
!19587 = !DILocation(line: 300, column: 9, scope: !19585)
!19588 = !DILocation(line: 300, column: 2, scope: !19585)
!19589 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2781, file: !2781, line: 306, type: !19553, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2145)
!19590 = !DILocation(line: 308, column: 9, scope: !19589)
!19591 = !DILocation(line: 308, column: 2, scope: !19589)
!19592 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2781, file: !2781, line: 319, type: !7897, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19593)
!19593 = !{!19594, !19595, !19596, !19597}
!19594 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !19592, file: !2781, line: 319, type: !190)
!19595 = !DILocalVariable(name: "start_cycles", scope: !19592, file: !2781, line: 328, type: !190)
!19596 = !DILocalVariable(name: "cycles_to_wait", scope: !19592, file: !2781, line: 331, type: !190)
!19597 = !DILocalVariable(name: "current_cycles", scope: !19598, file: !2781, line: 338, type: !190)
!19598 = distinct !DILexicalBlock(scope: !19599, file: !2781, line: 337, column: 11)
!19599 = distinct !DILexicalBlock(scope: !19600, file: !2781, line: 337, column: 2)
!19600 = distinct !DILexicalBlock(scope: !19592, file: !2781, line: 337, column: 2)
!19601 = !DILocation(line: 0, scope: !19592)
!19602 = !DILocation(line: 322, column: 19, scope: !19603)
!19603 = distinct !DILexicalBlock(scope: !19592, file: !2781, line: 322, column: 6)
!19604 = !DILocation(line: 322, column: 6, scope: !19592)
!19605 = !DILocation(line: 328, column: 26, scope: !19592)
!19606 = !DILocation(line: 333, column: 43, scope: !19592)
!19607 = !DILocation(line: 337, column: 2, scope: !19592)
!19608 = !DILocation(line: 338, column: 29, scope: !19598)
!19609 = !DILocation(line: 0, scope: !19598)
!19610 = !DILocation(line: 341, column: 23, scope: !19611)
!19611 = distinct !DILexicalBlock(scope: !19598, file: !2781, line: 341, column: 7)
!19612 = !DILocation(line: 341, column: 39, scope: !19611)
!19613 = !DILocation(line: 349, column: 1, scope: !19592)
!19614 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !110, file: !110, line: 1675, type: !7887, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2145)
!19615 = !DILocation(line: 1677, column: 9, scope: !19614)
!19616 = !DILocation(line: 1677, column: 2, scope: !19614)
!19617 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !19618, file: !19618, line: 24, type: !7887, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2145)
!19618 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19619 = !DILocation(line: 26, column: 9, scope: !19617)
!19620 = !DILocation(line: 26, column: 2, scope: !19617)
!19621 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2781, file: !2781, line: 364, type: !19622, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !19624)
!19622 = !DISubroutineType(types: !19623)
!19623 = !{!321, !18958}
!19624 = !{!19625, !19626}
!19625 = !DILocalVariable(name: "timeout", arg: 1, scope: !19621, file: !2781, line: 364, type: !18958)
!19626 = !DILocalVariable(name: "dt", scope: !19621, file: !2781, line: 366, type: !319)
!19627 = !DILocation(line: 0, scope: !19621)
!19628 = !DILocation(line: 368, column: 6, scope: !19621)
!19629 = !DILocation(line: 371, column: 10, scope: !19630)
!19630 = distinct !DILexicalBlock(scope: !19631, file: !2781, line: 370, column: 47)
!19631 = distinct !DILexicalBlock(scope: !19632, file: !2781, line: 370, column: 13)
!19632 = distinct !DILexicalBlock(scope: !19621, file: !2781, line: 368, column: 6)
!19633 = !DILocation(line: 371, column: 3, scope: !19630)
!19634 = !DILocation(line: 376, column: 58, scope: !19635)
!19635 = distinct !DILexicalBlock(scope: !19636, file: !2781, line: 376, column: 7)
!19636 = distinct !DILexicalBlock(scope: !19631, file: !2781, line: 372, column: 9)
!19637 = !DILocation(line: 376, column: 7, scope: !19636)
!19638 = !DILocation(line: 376, column: 43, scope: !19635)
!19639 = !DILocation(line: 377, column: 4, scope: !19640)
!19640 = distinct !DILexicalBlock(scope: !19635, file: !2781, line: 376, column: 64)
!19641 = !DILocation(line: 379, column: 10, scope: !19636)
!19642 = !DILocation(line: 379, column: 33, scope: !19636)
!19643 = !DILocation(line: 379, column: 31, scope: !19636)
!19644 = !DILocation(line: 379, column: 3, scope: !19636)
!19645 = !DILocation(line: 0, scope: !19632)
!19646 = !DILocation(line: 381, column: 1, scope: !19621)
!19647 = distinct !DISubprogram(name: "boot_banner", scope: !19648, file: !19648, line: 26, type: !374, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3697, retainedNodes: !2145)
!19648 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19649 = !DILocation(line: 34, column: 2, scope: !19647)
!19650 = !DILocation(line: 36, column: 1, scope: !19647)
!19651 = distinct !DISubprogram(name: "statics_init", scope: !2811, file: !2811, line: 21, type: !1041, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19652)
!19652 = !{!19653, !19654}
!19653 = !DILocalVariable(name: "unused", arg: 1, scope: !19651, file: !2811, line: 21, type: !1043)
!19654 = !DILocalVariable(name: "h", scope: !19655, file: !2811, line: 24, type: !19656)
!19655 = distinct !DILexicalBlock(scope: !19651, file: !2811, line: 24, column: 2)
!19656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19657, size: 32)
!19657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !110, line: 5073, size: 192, elements: !19658)
!19658 = !{!19659, !19665, !19671}
!19659 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19657, file: !110, line: 5074, baseType: !19660, size: 96)
!19660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !232, line: 56, size: 96, elements: !19661)
!19661 = !{!19662, !19663, !19664}
!19662 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19660, file: !232, line: 57, baseType: !235, size: 32)
!19663 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !19660, file: !232, line: 58, baseType: !102, size: 32, offset: 32)
!19664 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !19660, file: !232, line: 59, baseType: !239, size: 32, offset: 64)
!19665 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !19657, file: !110, line: 5075, baseType: !19666, size: 64, offset: 96)
!19666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !167, line: 233, baseType: !19667)
!19667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !167, line: 231, size: 64, elements: !19668)
!19668 = !{!19669}
!19669 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !19667, file: !167, line: 232, baseType: !19670, size: 64)
!19670 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !141, line: 48, baseType: !2797)
!19671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !19657, file: !110, line: 5076, baseType: !19672, size: 32, offset: 160)
!19672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !244, line: 43, size: 32, elements: !19673)
!19673 = !{!19674}
!19674 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !19672, file: !244, line: 52, baseType: !22, size: 32)
!19675 = !DILocation(line: 0, scope: !19651)
!19676 = !DILocation(line: 0, scope: !19655)
!19677 = !DILocation(line: 24, column: 2, scope: !19678)
!19678 = distinct !DILexicalBlock(scope: !19679, file: !2811, line: 24, column: 2)
!19679 = distinct !DILexicalBlock(scope: !19680, file: !2811, line: 24, column: 2)
!19680 = distinct !DILexicalBlock(scope: !19655, file: !2811, line: 24, column: 2)
!19681 = !DILocation(line: 24, column: 2, scope: !19682)
!19682 = distinct !DILexicalBlock(scope: !19683, file: !2811, line: 24, column: 2)
!19683 = distinct !DILexicalBlock(scope: !19678, file: !2811, line: 24, column: 2)
!19684 = !DILocation(line: 24, column: 2, scope: !19679)
!19685 = !DILocation(line: 24, column: 2, scope: !19655)
!19686 = !DILocation(line: 52, column: 2, scope: !19651)
!19687 = !DILocation(line: 49, column: 27, scope: !19688)
!19688 = distinct !DILexicalBlock(scope: !19689, file: !2811, line: 48, column: 3)
!19689 = distinct !DILexicalBlock(scope: !19680, file: !2811, line: 24, column: 36)
!19690 = !DILocation(line: 49, column: 45, scope: !19688)
!19691 = !DILocation(line: 49, column: 4, scope: !19688)
!19692 = !DILocation(line: 24, column: 2, scope: !19680)
!19693 = !DILocation(line: 24, column: 2, scope: !19683)
!19694 = distinct !{!19694, !19685, !19695}
!19695 = !DILocation(line: 51, column: 2, scope: !19655)
!19696 = distinct !DISubprogram(name: "k_heap_init", scope: !2811, file: !2811, line: 13, type: !19697, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19699)
!19697 = !DISubroutineType(types: !19698)
!19698 = !{null, !19656, !102, !239}
!19699 = !{!19700, !19701, !19702}
!19700 = !DILocalVariable(name: "h", arg: 1, scope: !19696, file: !2811, line: 13, type: !19656)
!19701 = !DILocalVariable(name: "mem", arg: 2, scope: !19696, file: !2811, line: 13, type: !102)
!19702 = !DILocalVariable(name: "bytes", arg: 3, scope: !19696, file: !2811, line: 13, type: !239)
!19703 = !DILocation(line: 0, scope: !19696)
!19704 = !DILocation(line: 15, column: 19, scope: !19696)
!19705 = !DILocation(line: 15, column: 2, scope: !19696)
!19706 = !DILocation(line: 16, column: 20, scope: !19696)
!19707 = !DILocation(line: 16, column: 2, scope: !19696)
!19708 = !DILocation(line: 19, column: 1, scope: !19696)
!19709 = distinct !DISubprogram(name: "z_waitq_init", scope: !13282, file: !13282, line: 47, type: !19710, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19713)
!19710 = !DISubroutineType(types: !19711)
!19711 = !{null, !19712}
!19712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19666, size: 32)
!19713 = !{!19714}
!19714 = !DILocalVariable(name: "w", arg: 1, scope: !19709, file: !13282, line: 47, type: !19712)
!19715 = !DILocation(line: 0, scope: !19709)
!19716 = !DILocation(line: 49, column: 21, scope: !19709)
!19717 = !DILocation(line: 49, column: 2, scope: !19709)
!19718 = !DILocation(line: 50, column: 1, scope: !19709)
!19719 = distinct !DISubprogram(name: "sys_dlist_init", scope: !141, file: !141, line: 197, type: !19720, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19723)
!19720 = !DISubroutineType(types: !19721)
!19721 = !{null, !19722}
!19722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19670, size: 32)
!19723 = !{!19724}
!19724 = !DILocalVariable(name: "list", arg: 1, scope: !19719, file: !141, line: 197, type: !19722)
!19725 = !DILocation(line: 0, scope: !19719)
!19726 = !DILocation(line: 199, column: 8, scope: !19719)
!19727 = !DILocation(line: 199, column: 13, scope: !19719)
!19728 = !DILocation(line: 200, column: 8, scope: !19719)
!19729 = !DILocation(line: 200, column: 13, scope: !19719)
!19730 = !DILocation(line: 201, column: 1, scope: !19719)
!19731 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2811, file: !2811, line: 64, type: !19732, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19738)
!19732 = !DISubroutineType(types: !19733)
!19733 = !{!102, !19656, !239, !239, !19734}
!19734 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !320, line: 67, baseType: !19735)
!19735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 65, size: 64, elements: !19736)
!19736 = !{!19737}
!19737 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19735, file: !320, line: 66, baseType: !319, size: 64)
!19738 = !{!19739, !19740, !19741, !19742, !19743, !19744, !19745, !19746, !19751}
!19739 = !DILocalVariable(name: "h", arg: 1, scope: !19731, file: !2811, line: 64, type: !19656)
!19740 = !DILocalVariable(name: "align", arg: 2, scope: !19731, file: !2811, line: 64, type: !239)
!19741 = !DILocalVariable(name: "bytes", arg: 3, scope: !19731, file: !2811, line: 64, type: !239)
!19742 = !DILocalVariable(name: "timeout", arg: 4, scope: !19731, file: !2811, line: 65, type: !19734)
!19743 = !DILocalVariable(name: "now", scope: !19731, file: !2811, line: 67, type: !203)
!19744 = !DILocalVariable(name: "end", scope: !19731, file: !2811, line: 67, type: !203)
!19745 = !DILocalVariable(name: "ret", scope: !19731, file: !2811, line: 68, type: !102)
!19746 = !DILocalVariable(name: "key", scope: !19731, file: !2811, line: 72, type: !19747)
!19747 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !244, line: 106, baseType: !19748)
!19748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !244, line: 32, size: 32, elements: !19749)
!19749 = !{!19750}
!19750 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19748, file: !244, line: 33, baseType: !103, size: 32)
!19751 = !DILocalVariable(name: "blocked_alloc", scope: !19731, file: !2811, line: 78, type: !279)
!19752 = !DILocation(line: 0, scope: !19731)
!19753 = !DILocation(line: 67, column: 21, scope: !19731)
!19754 = !DILocation(line: 70, column: 8, scope: !19731)
!19755 = !DILocation(line: 72, column: 41, scope: !19731)
!19756 = !DILocalVariable(name: "l", arg: 1, scope: !19757, file: !244, line: 136, type: !19760)
!19757 = distinct !DISubprogram(name: "k_spin_lock", scope: !244, file: !244, line: 136, type: !19758, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19761)
!19758 = !DISubroutineType(types: !19759)
!19759 = !{!19747, !19760}
!19760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19672, size: 32)
!19761 = !{!19756, !19762}
!19762 = !DILocalVariable(name: "k", scope: !19757, file: !244, line: 139, type: !19747)
!19763 = !DILocation(line: 0, scope: !19757, inlinedAt: !19764)
!19764 = distinct !DILocation(line: 72, column: 25, scope: !19731)
!19765 = !DILocation(line: 55, column: 2, scope: !19766, inlinedAt: !19770)
!19766 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7921, file: !7921, line: 42, type: !10088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19767)
!19767 = !{!19768, !19769}
!19768 = !DILocalVariable(name: "key", scope: !19766, file: !7921, line: 44, type: !32)
!19769 = !DILocalVariable(name: "tmp", scope: !19766, file: !7921, line: 53, type: !32)
!19770 = distinct !DILocation(line: 145, column: 10, scope: !19757, inlinedAt: !19764)
!19771 = !{i64 2845346}
!19772 = !DILocation(line: 0, scope: !19766, inlinedAt: !19770)
!19773 = !DILocation(line: 148, column: 2, scope: !19774, inlinedAt: !19764)
!19774 = distinct !DILexicalBlock(scope: !19775, file: !244, line: 148, column: 2)
!19775 = distinct !DILexicalBlock(scope: !19757, file: !244, line: 148, column: 2)
!19776 = !DILocation(line: 148, column: 2, scope: !19775, inlinedAt: !19764)
!19777 = !DILocation(line: 148, column: 2, scope: !19778, inlinedAt: !19764)
!19778 = distinct !DILexicalBlock(scope: !19774, file: !244, line: 148, column: 2)
!19779 = !DILocation(line: 160, column: 2, scope: !19757, inlinedAt: !19764)
!19780 = !DILocation(line: 1031, column: 3, scope: !19781, inlinedAt: !19784)
!19781 = distinct !DISubprogram(name: "__get_IPSR", scope: !7800, file: !7800, line: 1027, type: !7887, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19782)
!19782 = !{!19783}
!19783 = !DILocalVariable(name: "result", scope: !19781, file: !7800, line: 1029, type: !190)
!19784 = distinct !DILocation(line: 48, column: 10, scope: !19785, inlinedAt: !19786)
!19785 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8796, file: !8796, line: 46, type: !8797, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !2145)
!19786 = distinct !DILocation(line: 76, column: 2, scope: !19787)
!19787 = distinct !DILexicalBlock(scope: !19788, file: !2811, line: 76, column: 2)
!19788 = distinct !DILexicalBlock(scope: !19731, file: !2811, line: 76, column: 2)
!19789 = !{i64 6972752}
!19790 = !DILocation(line: 0, scope: !19781, inlinedAt: !19784)
!19791 = !DILocation(line: 48, column: 9, scope: !19785, inlinedAt: !19786)
!19792 = !DILocation(line: 76, column: 2, scope: !19787)
!19793 = !DILocation(line: 81, column: 9, scope: !19794)
!19794 = distinct !DILexicalBlock(scope: !19731, file: !2811, line: 80, column: 22)
!19795 = !DILocation(line: 83, column: 9, scope: !19794)
!19796 = !DILocation(line: 85, column: 12, scope: !19797)
!19797 = distinct !DILexicalBlock(scope: !19794, file: !2811, line: 84, column: 7)
!19798 = !DILocation(line: 85, column: 21, scope: !19797)
!19799 = !DILocation(line: 76, column: 2, scope: !19800)
!19800 = distinct !DILexicalBlock(scope: !19787, file: !2811, line: 76, column: 2)
!19801 = !DILocation(line: 85, column: 30, scope: !19797)
!19802 = !DILocation(line: 85, column: 37, scope: !19797)
!19803 = !DILocation(line: 84, column: 7, scope: !19794)
!19804 = !DILocation(line: 99, column: 10, scope: !19794)
!19805 = !DILocation(line: 0, scope: !19757, inlinedAt: !19806)
!19806 = distinct !DILocation(line: 101, column: 9, scope: !19794)
!19807 = !DILocation(line: 55, column: 2, scope: !19766, inlinedAt: !19808)
!19808 = distinct !DILocation(line: 145, column: 10, scope: !19757, inlinedAt: !19806)
!19809 = !DILocation(line: 0, scope: !19766, inlinedAt: !19808)
!19810 = !DILocation(line: 148, column: 2, scope: !19774, inlinedAt: !19806)
!19811 = !DILocation(line: 148, column: 2, scope: !19775, inlinedAt: !19806)
!19812 = !DILocation(line: 148, column: 2, scope: !19778, inlinedAt: !19806)
!19813 = !DILocation(line: 160, column: 2, scope: !19757, inlinedAt: !19806)
!19814 = distinct !{!19814, !19815, !19816}
!19815 = !DILocation(line: 80, column: 2, scope: !19731)
!19816 = !DILocation(line: 102, column: 2, scope: !19731)
!19817 = !DILocalVariable(name: "key", arg: 2, scope: !19818, file: !244, line: 190, type: !19747)
!19818 = distinct !DISubprogram(name: "k_spin_unlock", scope: !244, file: !244, line: 189, type: !19819, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19821)
!19819 = !DISubroutineType(types: !19820)
!19820 = !{null, !19760, !19747}
!19821 = !{!19822, !19817}
!19822 = !DILocalVariable(name: "l", arg: 1, scope: !19818, file: !244, line: 189, type: !19760)
!19823 = !DILocation(line: 0, scope: !19818, inlinedAt: !19824)
!19824 = distinct !DILocation(line: 106, column: 2, scope: !19731)
!19825 = !DILocation(line: 194, column: 2, scope: !19826, inlinedAt: !19824)
!19826 = distinct !DILexicalBlock(scope: !19827, file: !244, line: 194, column: 2)
!19827 = distinct !DILexicalBlock(scope: !19818, file: !244, line: 194, column: 2)
!19828 = !DILocation(line: 194, column: 2, scope: !19827, inlinedAt: !19824)
!19829 = !DILocation(line: 194, column: 2, scope: !19830, inlinedAt: !19824)
!19830 = distinct !DILexicalBlock(scope: !19826, file: !244, line: 194, column: 2)
!19831 = !DILocalVariable(name: "key", arg: 1, scope: !19832, file: !7921, line: 84, type: !32)
!19832 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7921, file: !7921, line: 84, type: !7751, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19833)
!19833 = !{!19831}
!19834 = !DILocation(line: 0, scope: !19832, inlinedAt: !19835)
!19835 = distinct !DILocation(line: 215, column: 2, scope: !19818, inlinedAt: !19824)
!19836 = !DILocation(line: 95, column: 2, scope: !19832, inlinedAt: !19835)
!19837 = !{i64 2846163}
!19838 = !DILocation(line: 107, column: 2, scope: !19731)
!19839 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2811, file: !2811, line: 110, type: !19840, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19842)
!19840 = !DISubroutineType(types: !19841)
!19841 = !{!102, !19656, !239, !19734}
!19842 = !{!19843, !19844, !19845, !19846}
!19843 = !DILocalVariable(name: "h", arg: 1, scope: !19839, file: !2811, line: 110, type: !19656)
!19844 = !DILocalVariable(name: "bytes", arg: 2, scope: !19839, file: !2811, line: 110, type: !239)
!19845 = !DILocalVariable(name: "timeout", arg: 3, scope: !19839, file: !2811, line: 110, type: !19734)
!19846 = !DILocalVariable(name: "ret", scope: !19839, file: !2811, line: 114, type: !102)
!19847 = !DILocation(line: 0, scope: !19839)
!19848 = !DILocation(line: 114, column: 14, scope: !19839)
!19849 = !DILocation(line: 118, column: 2, scope: !19839)
!19850 = distinct !DISubprogram(name: "k_heap_free", scope: !2811, file: !2811, line: 121, type: !19851, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !19853)
!19851 = !DISubroutineType(types: !19852)
!19852 = !{null, !19656, !102}
!19853 = !{!19854, !19855, !19856}
!19854 = !DILocalVariable(name: "h", arg: 1, scope: !19850, file: !2811, line: 121, type: !19656)
!19855 = !DILocalVariable(name: "mem", arg: 2, scope: !19850, file: !2811, line: 121, type: !102)
!19856 = !DILocalVariable(name: "key", scope: !19850, file: !2811, line: 123, type: !19747)
!19857 = !DILocation(line: 0, scope: !19850)
!19858 = !DILocation(line: 123, column: 41, scope: !19850)
!19859 = !DILocation(line: 0, scope: !19757, inlinedAt: !19860)
!19860 = distinct !DILocation(line: 123, column: 25, scope: !19850)
!19861 = !DILocation(line: 55, column: 2, scope: !19766, inlinedAt: !19862)
!19862 = distinct !DILocation(line: 145, column: 10, scope: !19757, inlinedAt: !19860)
!19863 = !DILocation(line: 0, scope: !19766, inlinedAt: !19862)
!19864 = !DILocation(line: 148, column: 2, scope: !19774, inlinedAt: !19860)
!19865 = !DILocation(line: 148, column: 2, scope: !19775, inlinedAt: !19860)
!19866 = !DILocation(line: 148, column: 2, scope: !19778, inlinedAt: !19860)
!19867 = !DILocation(line: 160, column: 2, scope: !19757, inlinedAt: !19860)
!19868 = !DILocation(line: 125, column: 20, scope: !19850)
!19869 = !DILocation(line: 125, column: 2, scope: !19850)
!19870 = !DILocation(line: 128, column: 60, scope: !19871)
!19871 = distinct !DILexicalBlock(scope: !19850, file: !2811, line: 128, column: 6)
!19872 = !DILocation(line: 128, column: 43, scope: !19871)
!19873 = !DILocation(line: 128, column: 68, scope: !19871)
!19874 = !DILocation(line: 128, column: 6, scope: !19850)
!19875 = !DILocation(line: 129, column: 3, scope: !19876)
!19876 = distinct !DILexicalBlock(scope: !19871, file: !2811, line: 128, column: 74)
!19877 = !DILocation(line: 130, column: 2, scope: !19876)
!19878 = !DILocation(line: 0, scope: !19818, inlinedAt: !19879)
!19879 = distinct !DILocation(line: 131, column: 3, scope: !19880)
!19880 = distinct !DILexicalBlock(scope: !19871, file: !2811, line: 130, column: 9)
!19881 = !DILocation(line: 194, column: 2, scope: !19826, inlinedAt: !19879)
!19882 = !DILocation(line: 194, column: 2, scope: !19827, inlinedAt: !19879)
!19883 = !DILocation(line: 194, column: 2, scope: !19830, inlinedAt: !19879)
!19884 = !DILocation(line: 0, scope: !19832, inlinedAt: !19885)
!19885 = distinct !DILocation(line: 215, column: 2, scope: !19818, inlinedAt: !19879)
!19886 = !DILocation(line: 95, column: 2, scope: !19832, inlinedAt: !19885)
!19887 = !DILocation(line: 133, column: 1, scope: !19850)
!19888 = distinct !DISubprogram(name: "k_sys_work_q_init", scope: !2825, file: !2825, line: 22, type: !1041, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !19889)
!19889 = !{!19890, !19891}
!19890 = !DILocalVariable(name: "dev", arg: 1, scope: !19888, file: !2825, line: 22, type: !1043)
!19891 = !DILocalVariable(name: "cfg", scope: !19888, file: !2825, line: 25, type: !19892)
!19892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_work_queue_config", file: !110, line: 3787, size: 64, elements: !19893)
!19893 = !{!19894, !19895}
!19894 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19892, file: !110, line: 3792, baseType: !377, size: 32)
!19895 = !DIDerivedType(tag: DW_TAG_member, name: "no_yield", scope: !19892, file: !110, line: 3806, baseType: !279, size: 8, offset: 32)
!19896 = !DILocation(line: 0, scope: !19888)
!19897 = !DILocation(line: 25, column: 2, scope: !19888)
!19898 = !DILocation(line: 25, column: 29, scope: !19888)
!19899 = !DILocation(line: 30, column: 2, scope: !19888)
!19900 = !DILocation(line: 35, column: 1, scope: !19888)
!19901 = !DILocation(line: 34, column: 2, scope: !19888)
