; ModuleID = 'build/96b_meerkat96/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.k_spinlock, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.k_spinlock, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.4], [13808 x i8], [191 x %struct.anon.4], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.4 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.4] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.4], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536855016 to i8*), void (i8*)* inttoptr (i32 536854387 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536854992 to i8*), void (i8*)* inttoptr (i32 536845549 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536854992 to i8*), void (i8*)* inttoptr (i32 536845549 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [15 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.32 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.34 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.35 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.38 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.39 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.40 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.41 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.45 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21.46 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28.43 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32.44 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38.42 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !645
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !655
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !711
@.str.67 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.70 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.69 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.68 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !831
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !698
@.str.4.82 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.83 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.71 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.98 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.99 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.100 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 8, !dbg !702
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !713
@.str.10.73 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.74 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.75 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.76 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.77 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.78 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.72 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.84 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.86 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.85 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.87 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !829
@.str.21.88 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !826
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.90 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.91 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.92 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.89 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.93 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.94 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.95 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.96 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.97 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.73, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.74, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.75, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.77, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.78, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.90, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.91, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.92, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !832
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !867
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !972
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1158
@.str.104 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.k_spinlock { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1108
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1139
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1106
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1094
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1082
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1084
@.str.1.105 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.111 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25.112 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26.106 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27.107 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28.108 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29.109 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.110 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1141
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1153
@.str.31.114 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1163
@.str.117 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1169
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1427
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1425
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1419
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.117, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1410
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1412
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1429
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1431
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1436
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1439
@overflow_cyc = internal global i32 0, align 4, !dbg !1450
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1708
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1710
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1706
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1701
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1675
@.str.121 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.123 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.124 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.125 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.126 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1712
@.str.134 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.135 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.136 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.137 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.138 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.141 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.142 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.143 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.146 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.147 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.148 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.155 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.156 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.157 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.158 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.165 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.166 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.167 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1742
@.str.174 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.178 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.179 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.180 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.184 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.185 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.186 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.187 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.188 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.183 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.182 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.184, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.185, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.186, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.187, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.188, i32 0, i32 0)], align 4
@.str.190 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1748
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1966
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1955
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1961
@z_idle_stacks = internal global [1 x [4096 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1973
@.str.5.196 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1978
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.200 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.208, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.210, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.212, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.206, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.213, i32 0, i32 0)], align 4, !dbg !2006
@.str.207 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.208 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.209 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.210 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.211 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.212 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.206 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.213 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2115
@.str.8.205 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.218 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.219 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.220 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.221 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.224 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.225 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.229 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.230 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.239 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.240 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.241 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2129
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2234
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2237
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2239
@.str.242 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.258 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.249 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.263 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.271 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.251 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.266 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.248 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.275 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.276 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.282 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.283 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.284 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.287 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.243 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.244 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.245 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.246 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.247 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.250 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.262 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.267 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.268 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1963
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1971
@.str.23.277 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.293 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.294 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.295 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.296 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2241
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2271
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2276
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1835
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2274
@.str.4.297 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.298 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.299 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.303 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.304 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.324 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2907 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #20, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #20, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #20, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #20, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #20, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #20, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #20, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #20, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #20, !dbg !2927, !srcloc !2928
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #20, !dbg !2929, !srcloc !2930
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #20, !dbg !2931, !srcloc !2932
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #20, !dbg !2933, !srcloc !2934
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #20, !dbg !2935, !srcloc !2936
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #20, !dbg !2937, !srcloc !2938
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #20, !dbg !2939, !srcloc !2940
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #20, !dbg !2941, !srcloc !2942
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #20, !dbg !2943, !srcloc !2944
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -137) #20, !dbg !2945, !srcloc !2946
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -145) #20, !dbg !2947, !srcloc !2948
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #20, !dbg !2949, !srcloc !2950
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #20, !dbg !2951, !srcloc !2952
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #20, !dbg !2953, !srcloc !2954
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #20, !dbg !2955, !srcloc !2956
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #20, !dbg !2957, !srcloc !2958
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #20, !dbg !2959, !srcloc !2962
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #20, !dbg !2963, !srcloc !2964
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #20, !dbg !2965, !srcloc !2966
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #20, !dbg !2967, !srcloc !2968
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #20, !dbg !2969, !srcloc !2970
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #20, !dbg !2971, !srcloc !2972
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #20, !dbg !2973, !srcloc !2974
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #20, !dbg !2975, !srcloc !2976
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #20, !dbg !2977, !srcloc !2978
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #20, !dbg !2979, !srcloc !2980
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #20, !dbg !2981, !srcloc !2982
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #20, !dbg !2983, !srcloc !2984
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #20, !dbg !2985, !srcloc !2986
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #20, !dbg !2987, !srcloc !2988
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #20, !dbg !2989, !srcloc !2990
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #20, !dbg !2991, !srcloc !2992
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #20, !dbg !2993, !srcloc !2994
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #20, !dbg !2995, !srcloc !2996
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #20, !dbg !2997, !srcloc !2998
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #20, !dbg !2999, !srcloc !3000
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #20, !dbg !3001, !srcloc !3002
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #20, !dbg !3003, !srcloc !3004
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -145) #20, !dbg !3005, !srcloc !3006
  ret void, !dbg !3007
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3010 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3012, metadata !DIExpression()), !dbg !3013
  tail call fastcc void @test_pytest_test_pytest() #21, !dbg !3014
  ret void, !dbg !3014
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3015 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #22, !dbg !3016
  ret void, !dbg !3017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3018 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %0, metadata !3029, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %1, metadata !3030, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %2, metadata !3031, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %3, metadata !3032, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %0, metadata !3034, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %0, metadata !3035, metadata !DIExpression()), !dbg !3096
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3097
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #20, !dbg !3097
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3038, metadata !DIExpression()), !dbg !3098
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3099
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #20, !dbg !3099
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3040, metadata !DIExpression()), !dbg !3100
  call void @llvm.dbg.value(metadata i32 0, metadata !3041, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 0, metadata !3042, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 0, metadata !3043, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 -1, metadata !3044, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 0, metadata !3047, metadata !DIExpression()), !dbg !3096
  %12 = and i32 %2, 4, !dbg !3101
  %13 = icmp eq i32 %12, 0, !dbg !3102
  call void @llvm.dbg.value(metadata i1 %13, metadata !3048, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3096
  %14 = lshr i32 %2, 3, !dbg !3103
  %15 = and i32 %14, 7, !dbg !3103
  %16 = add nuw nsw i32 %15, 1, !dbg !3104
  call void @llvm.dbg.value(metadata i32 %16, metadata !3049, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 0, metadata !3050, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %0, metadata !3051, metadata !DIExpression()), !dbg !3096
  %17 = ptrtoint i8* %0 to i32, !dbg !3105
  %18 = and i32 %17, 3, !dbg !3107
  %19 = icmp eq i32 %18, 0, !dbg !3107
  br i1 %19, label %20, label %320, !dbg !3108

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3109
  call void @llvm.dbg.value(metadata i8* %21, metadata !3035, metadata !DIExpression()), !dbg !3096
  %22 = icmp eq i8* %0, null, !dbg !3110
  %23 = and i32 %1, 7, !dbg !3112
  %24 = sub nuw nsw i32 8, %23, !dbg !3112
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3112
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3112
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3112
  call void @llvm.dbg.value(metadata i32 %27, metadata !3030, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %26, metadata !3035, metadata !DIExpression()), !dbg !3096
  br i1 %22, label %33, label %28, !dbg !3113

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3115
  %30 = sub i32 4, %17, !dbg !3115
  %31 = add i32 %30, %29, !dbg !3116
  %32 = icmp ugt i32 %31, %27, !dbg !3117
  br i1 %32, label %320, label %33, !dbg !3118

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3119
  call void @llvm.dbg.value(metadata i8* %34, metadata !3032, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %3, metadata !3046, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 4, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 4, metadata !3036, metadata !DIExpression()), !dbg !3096
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3120

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %42, metadata !3032, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %43, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %44, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %45, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %72, metadata !3044, metadata !DIExpression()), !dbg !3096
  br i1 %46, label %73, label %47, !dbg !3121

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3122
  %49 = zext i1 %48 to i32, !dbg !3126
  %50 = add nsw i32 %72, %49, !dbg !3126
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3126
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3126
  call void @llvm.dbg.value(metadata i32 %52, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %51, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %50, metadata !3044, metadata !DIExpression()), !dbg !3096
  br label %53, !dbg !3127

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %40, metadata !3032, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %58, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %57, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %56, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %54, metadata !3044, metadata !DIExpression()), !dbg !3096
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3128
  call void @llvm.dbg.value(metadata i8* %60, metadata !3032, metadata !DIExpression()), !dbg !3096
  %61 = load i8, i8* %60, align 1, !dbg !3130
  %62 = icmp eq i8 %61, 0, !dbg !3131
  br i1 %62, label %226, label %63, !dbg !3132, !llvm.loop !3133

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3121

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3136

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3047, metadata !DIExpression()), !dbg !3096
  %75 = add nsw i32 %72, -1, !dbg !3137
  call void @llvm.dbg.value(metadata i32 %75, metadata !3044, metadata !DIExpression()), !dbg !3096
  br label %53, !dbg !3138

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3139

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 4, metadata !3036, metadata !DIExpression()), !dbg !3096
  br label %53, !dbg !3140

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 4, metadata !3036, metadata !DIExpression()), !dbg !3096
  br label %53, !dbg !3141

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3142
  %81 = icmp eq i8 %80, 108, !dbg !3144
  br i1 %81, label %82, label %109, !dbg !3145

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3146
  %84 = load i8, i8* %83, align 1, !dbg !3146
  %85 = icmp eq i8 %84, 108, !dbg !3149
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3150
  %89 = add i32 %88, 7, !dbg !3150
  %90 = and i32 %89, -8, !dbg !3150
  %91 = inttoptr i32 %90 to i8*, !dbg !3150
  %92 = inttoptr i32 %90 to double*, !dbg !3150
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3150
  %94 = load double, double* %92, align 8, !dbg !3150
  call void @llvm.dbg.value(metadata i8* %93, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 8, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 8, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata double %94, metadata !3064, metadata !DIExpression()), !dbg !3152
  %95 = ptrtoint i8* %43 to i32, !dbg !3153
  %96 = add i32 %95, 7, !dbg !3153
  %97 = and i32 %96, -8, !dbg !3153
  %98 = inttoptr i32 %97 to i8*, !dbg !3154
  call void @llvm.dbg.value(metadata i8* %98, metadata !3035, metadata !DIExpression()), !dbg !3096
  br i1 %22, label %104, label %99, !dbg !3155

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3156
  %101 = icmp ugt i32 %100, %196, !dbg !3160
  br i1 %101, label %320, label %102, !dbg !3161

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3162
  store double %94, double* %103, align 8, !dbg !3162
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3165
  call void @llvm.dbg.value(metadata i8* %105, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3096
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3047, metadata !DIExpression()), !dbg !3096
  br label %53, !dbg !3166

107:                                              ; preds = %73, %73
  br label %109, !dbg !3167

108:                                              ; preds = %73
  br label %109, !dbg !3167

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3096
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3096
  call void @llvm.dbg.value(metadata i32 %113, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %112, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3050, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3096
  %114 = ptrtoint i8* %43 to i32, !dbg !3167
  %115 = add i32 %114, -1, !dbg !3167
  %116 = add i32 %115, %112, !dbg !3167
  %117 = sub i32 0, %112, !dbg !3167
  %118 = and i32 %116, %117, !dbg !3167
  %119 = inttoptr i32 %118 to i8*, !dbg !3168
  call void @llvm.dbg.value(metadata i8* %119, metadata !3035, metadata !DIExpression()), !dbg !3096
  br i1 %22, label %124, label %120, !dbg !3169

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3171
  %122 = add i32 %121, %118, !dbg !3172
  %123 = icmp ugt i32 %122, %196, !dbg !3173
  br i1 %123, label %320, label %124, !dbg !3174

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3175

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3168
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3176
  call void @llvm.dbg.value(metadata i8* %127, metadata !3033, metadata !DIExpression()), !dbg !3096
  %128 = bitcast i8* %41 to i8**, !dbg !3176
  %129 = load i8*, i8** %128, align 4, !dbg !3176
  call void @llvm.dbg.value(metadata i8* %129, metadata !3046, metadata !DIExpression()), !dbg !3096
  br label %130, !dbg !3177

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3096
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3178
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3096
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3179
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3096
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3096
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3096
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3096
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3096
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3096
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3180
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %142, metadata !3030, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %141, metadata !3032, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %140, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %139, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %138, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %137, metadata !3041, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %136, metadata !3049, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %135, metadata !3042, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %133, metadata !3046, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %132, metadata !3044, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %131, metadata !3043, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.label(metadata !3095), !dbg !3182
  br i1 %22, label %146, label %144, !dbg !3183

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3184
  store i8* %133, i8** %145, align 4, !dbg !3187
  br label %146, !dbg !3188

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3189
  call void @llvm.dbg.value(metadata i32 %147, metadata !3049, metadata !DIExpression()), !dbg !3096
  %148 = icmp sgt i32 %136, 0, !dbg !3190
  br i1 %148, label %152, label %149, !dbg !3191

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #21, !dbg !3192
  %151 = zext i1 %150 to i32, !dbg !3192
  br label %152, !dbg !3191

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3191
  %154 = icmp eq i32 %153, 0, !dbg !3191
  call void @llvm.dbg.value(metadata i1 %154, metadata !3073, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3193
  call void @llvm.dbg.value(metadata i1 %36, metadata !3076, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3193
  %155 = or i1 %36, %154, !dbg !3194
  br i1 %155, label %156, label %192, !dbg !3194

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3195
  %158 = sub i32 %157, %17, !dbg !3195
  %159 = lshr i32 %158, 2, !dbg !3196
  call void @llvm.dbg.value(metadata i32 %159, metadata !3077, metadata !DIExpression()), !dbg !3197
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3198
  br i1 %161, label %162, label %163, !dbg !3198

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #22, !dbg !3200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #22, !dbg !3200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #22, !dbg !3200
  unreachable, !dbg !3200

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3205
  br i1 %164, label %165, label %166, !dbg !3207

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #22, !dbg !3208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #22, !dbg !3208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #22, !dbg !3208
  unreachable, !dbg !3208

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3213

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3214
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3217
  store i8 %168, i8* %169, align 1, !dbg !3218
  %170 = trunc i32 %132 to i8, !dbg !3219
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3220
  store i8 %170, i8* %171, align 1, !dbg !3221
  br i1 %154, label %175, label %172, !dbg !3222

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3223
  store i8 %173, i8* %169, align 1, !dbg !3223
  %174 = add i32 %131, 1, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %174, metadata !3043, metadata !DIExpression()), !dbg !3096
  br label %187, !dbg !3227

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3228
  call void @llvm.dbg.value(metadata i32 %176, metadata !3042, metadata !DIExpression()), !dbg !3096
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3230

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3231
  call void @llvm.dbg.value(metadata i32 %179, metadata !3030, metadata !DIExpression()), !dbg !3096
  br label %187, !dbg !3234

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3235

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3236
  call void @llvm.dbg.value(metadata i32 %182, metadata !3030, metadata !DIExpression()), !dbg !3096
  br label %187, !dbg !3239

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #22, !dbg !3240
  %185 = add i32 %142, 2, !dbg !3242
  %186 = add i32 %185, %184, !dbg !3243
  call void @llvm.dbg.value(metadata i32 %186, metadata !3030, metadata !DIExpression()), !dbg !3096
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3096
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3096
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3096
  call void @llvm.dbg.value(metadata i32 %190, metadata !3030, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %189, metadata !3042, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %188, metadata !3043, metadata !DIExpression()), !dbg !3096
  %191 = add nuw nsw i32 %137, 1, !dbg !3244
  call void @llvm.dbg.value(metadata i32 %191, metadata !3041, metadata !DIExpression()), !dbg !3096
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3096
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3179
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3096
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3180
  call void @llvm.dbg.value(metadata i32 %196, metadata !3030, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %195, metadata !3041, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %194, metadata !3042, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %193, metadata !3043, metadata !DIExpression()), !dbg !3096
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3245
  call void @llvm.dbg.value(metadata i8* %197, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %143, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %141, metadata !3032, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %139, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %138, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3050, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %132, metadata !3044, metadata !DIExpression()), !dbg !3096
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3128
  call void @llvm.dbg.value(metadata i8* %198, metadata !3032, metadata !DIExpression()), !dbg !3096
  %199 = load i8, i8* %198, align 1, !dbg !3130
  %200 = icmp eq i8 %199, 0, !dbg !3131
  br i1 %200, label %226, label %63, !dbg !3132

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3246

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3247
  call void @llvm.dbg.value(metadata i8* %203, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 undef, metadata !3080, metadata !DIExpression()), !dbg !3248
  br i1 %22, label %219, label %204, !dbg !3249

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3247
  %206 = load i32, i32* %205, align 4, !dbg !3247
  call void @llvm.dbg.value(metadata i32 %206, metadata !3080, metadata !DIExpression()), !dbg !3248
  %207 = inttoptr i32 %118 to i32*, !dbg !3250
  store i32 %206, i32* %207, align 4, !dbg !3253
  br label %219, !dbg !3254

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3255
  %210 = add i32 %209, 7, !dbg !3255
  %211 = and i32 %210, -8, !dbg !3255
  %212 = inttoptr i32 %211 to i8*, !dbg !3255
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3255
  call void @llvm.dbg.value(metadata i8* %213, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i64 undef, metadata !3086, metadata !DIExpression()), !dbg !3256
  br i1 %22, label %219, label %214, !dbg !3257

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3255
  %216 = load i64, i64* %215, align 8, !dbg !3255
  call void @llvm.dbg.value(metadata i64 %216, metadata !3086, metadata !DIExpression()), !dbg !3256
  %217 = inttoptr i32 %118 to i64*, !dbg !3258
  store i64 %216, i64* %217, align 8, !dbg !3263
  br label %219, !dbg !3264

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #22, !dbg !3265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #22, !dbg !3265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #22, !dbg !3265
  unreachable, !dbg !3265

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3270
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3270
  call void @llvm.dbg.value(metadata i8* %221, metadata !3033, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %40, metadata !3032, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %222, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %113, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %112, metadata !3037, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3050, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %72, metadata !3044, metadata !DIExpression()), !dbg !3096
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3128
  call void @llvm.dbg.value(metadata i8* %223, metadata !3032, metadata !DIExpression()), !dbg !3096
  %224 = load i8, i8* %223, align 1, !dbg !3130
  %225 = icmp eq i8 %224, 0, !dbg !3131
  br i1 %225, label %226, label %38, !dbg !3132

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3271
  %228 = ptrtoint i8* %227 to i32, !dbg !3272
  %229 = sub i32 %228, %17, !dbg !3272
  %230 = lshr i32 %229, 2, !dbg !3274
  %231 = icmp ugt i32 %229, 1023, !dbg !3275
  br i1 %231, label %232, label %233, !dbg !3276

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #22, !dbg !3277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #22, !dbg !3277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #22, !dbg !3277
  unreachable, !dbg !3277

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3282

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3283
  %236 = add i32 %235, %229, !dbg !3286
  br label %320, !dbg !3287

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3288
  store i8 %238, i8* %0, align 1, !dbg !3289
  %239 = trunc i32 %194 to i8, !dbg !3290
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3292
  store i8 %240, i8* %242, align 1, !dbg !3294
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3295
  store i8 %241, i8* %243, align 1, !dbg !3296
  %244 = trunc i32 %193 to i8, !dbg !3297
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3298
  store i8 %244, i8* %245, align 1, !dbg !3299
  %246 = icmp eq i32 %193, 0, !dbg !3300
  %247 = xor i1 %246, true, !dbg !3301
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3301
  call void @llvm.dbg.value(metadata i8* %227, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 0, metadata !3045, metadata !DIExpression()), !dbg !3096
  br i1 %249, label %250, label %269, !dbg !3301

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3302

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %254, metadata !3045, metadata !DIExpression()), !dbg !3096
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3303
  %256 = load i8, i8* %255, align 1, !dbg !3303
  %257 = icmp sgt i8 %256, -1, !dbg !3305
  br i1 %257, label %265, label %258, !dbg !3306

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3089, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3307
  %259 = ptrtoint i8* %253 to i32, !dbg !3308
  %260 = add i32 %251, %259, !dbg !3310
  %261 = icmp ugt i32 %260, %196, !dbg !3311
  br i1 %261, label %320, label %262, !dbg !3312

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3313
  call void @llvm.dbg.value(metadata i8 %263, metadata !3089, metadata !DIExpression()), !dbg !3307
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3314
  call void @llvm.dbg.value(metadata i8* %264, metadata !3035, metadata !DIExpression()), !dbg !3096
  store i8 %263, i8* %253, align 1, !dbg !3315
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3245
  call void @llvm.dbg.value(metadata i8* %266, metadata !3035, metadata !DIExpression()), !dbg !3096
  %267 = add nuw i32 %254, 1, !dbg !3316
  call void @llvm.dbg.value(metadata i32 %267, metadata !3045, metadata !DIExpression()), !dbg !3096
  %268 = icmp eq i32 %267, %195, !dbg !3317
  br i1 %268, label %269, label %252, !dbg !3302, !llvm.loop !3318

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3245
  call void @llvm.dbg.value(metadata i8* %270, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 0, metadata !3045, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %133, metadata !3046, metadata !DIExpression()), !dbg !3096
  %271 = icmp eq i32 %195, 0, !dbg !3320
  br i1 %271, label %316, label %272, !dbg !3323

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3323

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %276, metadata !3046, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %277, metadata !3045, metadata !DIExpression()), !dbg !3096
  br i1 %246, label %282, label %278, !dbg !3324

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3327
  %280 = load i8, i8* %279, align 1, !dbg !3327
  %281 = icmp sgt i8 %280, -1, !dbg !3328
  br i1 %281, label %282, label %311, !dbg !3329

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3330

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3036, metadata !DIExpression()), !dbg !3096
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3331
  %285 = load i8, i8* %284, align 1, !dbg !3331
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3334
  call void @llvm.dbg.value(metadata i8* %286, metadata !3035, metadata !DIExpression()), !dbg !3096
  store i8 %285, i8* %275, align 1, !dbg !3335
  br label %297, !dbg !3336

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3337
  %289 = load i8, i8* %288, align 1, !dbg !3337
  %290 = zext i8 %289 to i32, !dbg !3337
  %291 = shl nuw nsw i32 %290, 2, !dbg !3339
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3340
  %293 = bitcast i8* %292 to i8**, !dbg !3341
  %294 = load i8*, i8** %293, align 4, !dbg !3341
  call void @llvm.dbg.value(metadata i8* %294, metadata !3046, metadata !DIExpression()), !dbg !3096
  store i8* null, i8** %293, align 4, !dbg !3342
  %295 = tail call i32 @strlen(i8* noundef %294) #22, !dbg !3343
  %296 = add i32 %295, 1, !dbg !3344
  call void @llvm.dbg.value(metadata i32 %296, metadata !3036, metadata !DIExpression()), !dbg !3096
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3096
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3345
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3096
  call void @llvm.dbg.value(metadata i8* %300, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %299, metadata !3036, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %298, metadata !3046, metadata !DIExpression()), !dbg !3096
  %301 = ptrtoint i8* %300 to i32, !dbg !3346
  %302 = add i32 %273, %299, !dbg !3348
  %303 = add i32 %302, %301, !dbg !3349
  %304 = icmp ugt i32 %303, %196, !dbg !3350
  br i1 %304, label %320, label %305, !dbg !3351

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3352
  %307 = load i8, i8* %306, align 1, !dbg !3352
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3353
  call void @llvm.dbg.value(metadata i8* %308, metadata !3035, metadata !DIExpression()), !dbg !3096
  store i8 %307, i8* %300, align 1, !dbg !3354
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #22, !dbg !3355
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3356
  call void @llvm.dbg.value(metadata i8* %310, metadata !3035, metadata !DIExpression()), !dbg !3096
  br label %311, !dbg !3357

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3358
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3096
  call void @llvm.dbg.value(metadata i8* %313, metadata !3035, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %312, metadata !3046, metadata !DIExpression()), !dbg !3096
  %314 = add nuw i32 %277, 1, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %314, metadata !3045, metadata !DIExpression()), !dbg !3096
  %315 = icmp eq i32 %314, %195, !dbg !3320
  br i1 %315, label %316, label %274, !dbg !3323, !llvm.loop !3360

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3245
  %318 = ptrtoint i8* %317 to i32, !dbg !3362
  %319 = sub i32 %318, %17, !dbg !3362
  br label %320, !dbg !3363

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #20, !dbg !3364
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #20, !dbg !3364
  ret i32 %321, !dbg !3364
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3365 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3369, metadata !DIExpression()), !dbg !3370
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #21, !dbg !3371
  ret i1 %2, !dbg !3372
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3376, metadata !DIExpression()), !dbg !3377
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3378
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3379
  %4 = and i1 %2, %3, !dbg !3379
  ret i1 %4, !dbg !3380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3381 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3385, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i32 %1, metadata !3386, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i32 %2, metadata !3387, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i8* %3, metadata !3388, metadata !DIExpression()), !dbg !3391
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3392
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20, !dbg !3392
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3389, metadata !DIExpression()), !dbg !3393
  call void @llvm.va_start(i8* nonnull %6), !dbg !3394
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3395
  %8 = load i32, i32* %7, align 4, !dbg !3395
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3395
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #21, !dbg !3395
  call void @llvm.dbg.value(metadata i32 %10, metadata !3390, metadata !DIExpression()), !dbg !3391
  call void @llvm.va_end(i8* nonnull %6), !dbg !3396
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20, !dbg !3397
  ret i32 %10, !dbg !3398
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3399 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3411, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3412, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8* %2, metadata !3413, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8* %3, metadata !3414, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8* %3, metadata !3415, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8* %3, metadata !3416, metadata !DIExpression()), !dbg !3430
  %5 = icmp eq i8* %3, null, !dbg !3431
  br i1 %5, label %45, label %6, !dbg !3433

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3425, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3430
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3434
  %8 = load i8, i8* %7, align 1, !dbg !3434
  %9 = zext i8 %8 to i32, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %9, metadata !3426, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8 undef, metadata !3427, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata i8 undef, metadata !3428, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata i32 0, metadata !3424, metadata !DIExpression()), !dbg !3430
  %10 = icmp eq i8 %8, 0, !dbg !3436
  br i1 %10, label %39, label %11, !dbg !3439

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3440
  call void @llvm.dbg.value(metadata i8 %12, metadata !3425, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %13 = zext i8 %12 to i32, !dbg !3441
  call void @llvm.dbg.value(metadata i32 %13, metadata !3425, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %14 = shl nuw nsw i32 %13, 2, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %14, metadata !3425, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3443
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3444
  %17 = load i8, i8* %16, align 1, !dbg !3444
  call void @llvm.dbg.value(metadata i8 %17, metadata !3427, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %18 = zext i8 %17 to i32, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %18, metadata !3427, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3446
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3447
  %21 = load i8, i8* %20, align 1, !dbg !3447
  call void @llvm.dbg.value(metadata i8 %21, metadata !3428, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %22 = zext i8 %21 to i32, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %22, metadata !3428, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %23 = shl nuw nsw i32 %22, 1, !dbg !3449
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3430
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3450
  call void @llvm.dbg.value(metadata i8* %24, metadata !3422, metadata !DIExpression()), !dbg !3430
  br label %25, !dbg !3439

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3422, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %27, metadata !3424, metadata !DIExpression()), !dbg !3430
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3451
  call void @llvm.dbg.value(metadata i8* %28, metadata !3422, metadata !DIExpression()), !dbg !3430
  %29 = load i8, i8* %26, align 1, !dbg !3453
  %30 = zext i8 %29 to i32, !dbg !3453
  call void @llvm.dbg.value(metadata i32 %30, metadata !3429, metadata !DIExpression()), !dbg !3430
  %31 = shl nuw nsw i32 %30, 2, !dbg !3454
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3455
  %33 = bitcast i8* %32 to i8**, !dbg !3456
  call void @llvm.dbg.value(metadata i8** %33, metadata !3423, metadata !DIExpression()), !dbg !3430
  store i8* %28, i8** %33, align 4, !dbg !3457
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #22, !dbg !3458
  %35 = add i32 %34, 1, !dbg !3459
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3460
  call void @llvm.dbg.value(metadata i8* %36, metadata !3422, metadata !DIExpression()), !dbg !3430
  %37 = add nuw nsw i32 %27, 1, !dbg !3461
  call void @llvm.dbg.value(metadata i32 %37, metadata !3424, metadata !DIExpression()), !dbg !3430
  %38 = icmp eq i32 %37, %9, !dbg !3436
  br i1 %38, label %39, label %25, !dbg !3439, !llvm.loop !3462

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3464
  call void @llvm.dbg.value(metadata i8* %40, metadata !3415, metadata !DIExpression()), !dbg !3430
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3465
  %42 = bitcast i8* %41 to i8**, !dbg !3465
  %43 = load i8*, i8** %42, align 1, !dbg !3465
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #21, !dbg !3466
  br label %45, !dbg !3467

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3430
  ret i32 %46, !dbg !3468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3469 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3473, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3474, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.value(metadata i8* %2, metadata !3475, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.value(metadata i8* %3, metadata !3476, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.value(metadata i8* %4, metadata !3477, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.value(metadata i8* %4, metadata !3478, metadata !DIExpression()), !dbg !3483
  %6 = ptrtoint i8* %4 to i32, !dbg !3484
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3484
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #22, !dbg !3484
  ret i32 %8, !dbg !3485
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3486 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3490, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %1, metadata !3491, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i8 0, metadata !3493, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 0, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i8 poison, metadata !3493, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i8* %0, metadata !3490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3495
  %3 = load i8, i8* %0, align 1, !dbg !3496
  call void @llvm.dbg.value(metadata i8 %3, metadata !3492, metadata !DIExpression()), !dbg !3495
  %4 = icmp eq i8 %3, 0, !dbg !3497
  br i1 %4, label %29, label %5, !dbg !3498

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %8, metadata !3494, metadata !DIExpression()), !dbg !3495
  br i1 %9, label %11, label %22, !dbg !3500

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3502
  br i1 %12, label %13, label %17, !dbg !3506

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3507
  br i1 %14, label %29, label %15, !dbg !3510

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #21, !dbg !3511
  br i1 %16, label %29, label %22, !dbg !3513

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #21, !dbg !3514
  %19 = xor i1 %18, true, !dbg !3516
  %20 = zext i1 %18 to i32, !dbg !3516
  %21 = add nsw i32 %8, %20, !dbg !3516
  br label %22, !dbg !3516

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3495
  call void @llvm.dbg.value(metadata i32 %24, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i8 poison, metadata !3493, metadata !DIExpression()), !dbg !3495
  %25 = icmp eq i8 %6, 37, !dbg !3517
  %26 = xor i1 %25, %23, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %10, metadata !3490, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i8* %10, metadata !3490, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3495
  %27 = load i8, i8* %10, align 1, !dbg !3496
  call void @llvm.dbg.value(metadata i8 %27, metadata !3492, metadata !DIExpression()), !dbg !3495
  %28 = icmp eq i8 %27, 0, !dbg !3497
  br i1 %28, label %29, label %5, !dbg !3498, !llvm.loop !3520

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3495
  ret i1 %30, !dbg !3522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3523 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3527, metadata !DIExpression()), !dbg !3528
  %2 = add i8 %0, -64, !dbg !3529
  %3 = icmp ult i8 %2, 59, !dbg !3529
  ret i1 %3, !dbg !3530
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3531 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3539, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %1, metadata !3540, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3541, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8* %3, metadata !3542, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %4, metadata !3543, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i16* %5, metadata !3544, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %6, metadata !3545, metadata !DIExpression()), !dbg !3608
  %11 = icmp eq i8* %0, null, !dbg !3609
  br i1 %11, label %12, label %13, !dbg !3612

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #22, !dbg !3613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #22, !dbg !3613
  unreachable, !dbg !3613

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3546, metadata !DIExpression()), !dbg !3608
  %14 = bitcast i8* %0 to i32*, !dbg !3615
  call void @llvm.dbg.value(metadata i32* %14, metadata !3547, metadata !DIExpression()), !dbg !3608
  %15 = and i32 %4, 8, !dbg !3616
  %16 = icmp eq i32 %15, 0, !dbg !3617
  call void @llvm.dbg.value(metadata i1 %16, metadata !3551, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3608
  call void @llvm.dbg.value(metadata i8* %0, metadata !3554, metadata !DIExpression()), !dbg !3608
  %17 = icmp eq i32 %1, 0, !dbg !3618
  br i1 %17, label %18, label %20, !dbg !3619

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #21, !dbg !3620
  br label %20, !dbg !3619

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3619
  call void @llvm.dbg.value(metadata i32 %21, metadata !3540, metadata !DIExpression()), !dbg !3608
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3621
  %23 = load i8, i8* %22, align 1, !dbg !3621
  %24 = zext i8 %23 to i32, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %24, metadata !3549, metadata !DIExpression()), !dbg !3608
  %25 = icmp ne i8 %23, 0, !dbg !3623
  %26 = and i32 %4, 1, !dbg !3624
  %27 = icmp ne i32 %26, 0, !dbg !3624
  %28 = and i1 %27, %25, !dbg !3624
  call void @llvm.dbg.value(metadata i1 %28, metadata !3553, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3608
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3625
  %30 = load i8, i8* %29, align 1, !dbg !3625
  %31 = zext i8 %30 to i32, !dbg !3626
  call void @llvm.dbg.value(metadata i32 %31, metadata !3550, metadata !DIExpression()), !dbg !3608
  %32 = icmp ne i8 %30, 0, !dbg !3627
  %33 = and i32 %4, 2, !dbg !3628
  %34 = icmp ne i32 %33, 0, !dbg !3628
  %35 = and i1 %34, %32, !dbg !3628
  call void @llvm.dbg.value(metadata i1 %35, metadata !3552, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3608
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3629
  br i1 %36, label %41, label %37, !dbg !3629

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3631
  br i1 %38, label %287, label %39, !dbg !3634

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #22, !dbg !3635
  br label %287, !dbg !3637

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3638
  %43 = zext i8 %42 to i32, !dbg !3639
  %44 = shl nuw nsw i32 %43, 2, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %44, metadata !3548, metadata !DIExpression()), !dbg !3608
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3641
  %46 = bitcast i8* %45 to i8**, !dbg !3642
  %47 = load i8*, i8** %46, align 4, !dbg !3642
  call void @llvm.dbg.value(metadata i8* %47, metadata !3557, metadata !DIExpression()), !dbg !3608
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3643
  call void @llvm.dbg.value(metadata i8* %48, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 0, metadata !3559, metadata !DIExpression()), !dbg !3608
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3644
  br i1 %49, label %50, label %135, !dbg !3645

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3556, metadata !DIExpression()), !dbg !3608
  br i1 %28, label %51, label %76, !dbg !3646

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8* %48, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 0, metadata !3559, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 0, metadata !3560, metadata !DIExpression()), !dbg !3647
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3648

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8* %55, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %56, metadata !3559, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %57, metadata !3560, metadata !DIExpression()), !dbg !3647
  %58 = load i8, i8* %55, align 1, !dbg !3649
  %59 = zext i8 %58 to i32, !dbg !3650
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3650
  %61 = bitcast i32* %60 to i8**, !dbg !3651
  %62 = load i8*, i8** %61, align 4, !dbg !3651
  call void @llvm.dbg.value(metadata i8* %62, metadata !3566, metadata !DIExpression()), !dbg !3652
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #21, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %63, metadata !3569, metadata !DIExpression()), !dbg !3652
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3654
  br i1 %65, label %66, label %70, !dbg !3654

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3656
  %68 = add nuw i32 %56, 1, !dbg !3658
  call void @llvm.dbg.value(metadata i32 %68, metadata !3559, metadata !DIExpression()), !dbg !3608
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3659
  store i16 %67, i16* %69, align 2, !dbg !3660
  br label %70, !dbg !3661

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3608
  call void @llvm.dbg.value(metadata i32 %71, metadata !3559, metadata !DIExpression()), !dbg !3608
  %72 = add nsw i32 %63, %54, !dbg !3662
  call void @llvm.dbg.value(metadata i32 %72, metadata !3556, metadata !DIExpression()), !dbg !3608
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3663
  call void @llvm.dbg.value(metadata i8* %73, metadata !3558, metadata !DIExpression()), !dbg !3608
  %74 = add nuw nsw i32 %57, 1, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %74, metadata !3560, metadata !DIExpression()), !dbg !3647
  %75 = icmp eq i32 %74, %24, !dbg !3665
  br i1 %75, label %82, label %53, !dbg !3648, !llvm.loop !3666

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3668
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3668
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3668
  br label %82, !dbg !3668

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3671
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3608
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3672
  call void @llvm.dbg.value(metadata i1 undef, metadata !3570, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3673
  call void @llvm.dbg.value(metadata i32 0, metadata !3571, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i32 %85, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8* %84, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %83, metadata !3559, metadata !DIExpression()), !dbg !3608
  %86 = icmp eq i8 %30, 0, !dbg !3675
  br i1 %86, label %287, label %87, !dbg !3676

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3677
  %89 = icmp eq i32 %88, 0, !dbg !3678
  call void @llvm.dbg.value(metadata i1 %89, metadata !3570, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3673
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3676

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8* %96, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %97, metadata !3559, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %98, metadata !3571, metadata !DIExpression()), !dbg !3674
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3679
  call void @llvm.dbg.value(metadata i8* %99, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8 undef, metadata !3573, metadata !DIExpression()), !dbg !3680
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3681
  call void @llvm.dbg.value(metadata i8* %100, metadata !3558, metadata !DIExpression()), !dbg !3608
  %101 = load i8, i8* %99, align 1, !dbg !3682
  call void @llvm.dbg.value(metadata i8 %101, metadata !3576, metadata !DIExpression()), !dbg !3680
  %102 = zext i8 %101 to i32, !dbg !3683
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3683
  %104 = bitcast i32* %103 to i8**, !dbg !3684
  %105 = load i8*, i8** %104, align 4, !dbg !3684
  call void @llvm.dbg.value(metadata i8* %105, metadata !3577, metadata !DIExpression()), !dbg !3680
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #21, !dbg !3685
  call void @llvm.dbg.value(metadata i1 %106, metadata !3578, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3680
  br i1 %16, label %113, label %107, !dbg !3686

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3688
  call void @llvm.dbg.value(metadata i8 %108, metadata !3573, metadata !DIExpression()), !dbg !3680
  %109 = zext i8 %108 to i32, !dbg !3689
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #21, !dbg !3690
  br i1 %110, label %111, label %113, !dbg !3691

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #22, !dbg !3692
  %112 = add nsw i32 %95, -2, !dbg !3698
  call void @llvm.dbg.value(metadata i32 %112, metadata !3556, metadata !DIExpression()), !dbg !3608
  br label %130, !dbg !3699

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3700

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3701

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3703
  call void @llvm.dbg.value(metadata i32 %116, metadata !3556, metadata !DIExpression()), !dbg !3608
  br label %130, !dbg !3706

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3707

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3604), !dbg !3708
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #21, !dbg !3709
  call void @llvm.dbg.value(metadata i32 %119, metadata !3579, metadata !DIExpression()), !dbg !3680
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3710
  br i1 %121, label %122, label %126, !dbg !3710

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3712
  %124 = add nuw i32 %97, 1, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %124, metadata !3559, metadata !DIExpression()), !dbg !3608
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3715
  store i16 %123, i16* %125, align 2, !dbg !3716
  br label %126, !dbg !3717

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3608
  call void @llvm.dbg.value(metadata i32 %127, metadata !3559, metadata !DIExpression()), !dbg !3608
  %128 = add i32 %95, -1, !dbg !3718
  %129 = add i32 %128, %119, !dbg !3719
  call void @llvm.dbg.value(metadata i32 %129, metadata !3556, metadata !DIExpression()), !dbg !3608
  br label %130, !dbg !3720

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3608
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3680
  call void @llvm.dbg.value(metadata i32 %132, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %131, metadata !3559, metadata !DIExpression()), !dbg !3608
  %133 = add nuw nsw i32 %98, 1, !dbg !3721
  call void @llvm.dbg.value(metadata i8* %100, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %133, metadata !3571, metadata !DIExpression()), !dbg !3674
  %134 = icmp eq i32 %133, %31, !dbg !3675
  br i1 %134, label %287, label %94, !dbg !3676, !llvm.loop !3722

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3581, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3582, metadata !DIExpression()), !dbg !3725
  br i1 %28, label %136, label %138, !dbg !3726

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3583, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8 0, metadata !3584, metadata !DIExpression()), !dbg !3608
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3727
  call void @llvm.dbg.value(metadata i8* %137, metadata !3585, metadata !DIExpression()), !dbg !3608
  br label %143, !dbg !3730

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3731
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3731

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3585, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8 undef, metadata !3584, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8 0, metadata !3583, metadata !DIExpression()), !dbg !3608
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #22, !dbg !3733
  br label %148, !dbg !3736

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3737
  call void @llvm.dbg.value(metadata i8* %151, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 0, metadata !3587, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i8 %149, metadata !3584, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8 %150, metadata !3583, metadata !DIExpression()), !dbg !3608
  %152 = icmp eq i8 %30, 0, !dbg !3739
  br i1 %152, label %153, label %155, !dbg !3740

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3741
  br label %160, !dbg !3740

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3740

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3741
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3742
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3743
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3608
  call void @llvm.dbg.value(metadata i8 undef, metadata !3580, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3608
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3744
  %166 = load i8, i8* %165, align 1, !dbg !3744
  %167 = zext i8 %162 to i32, !dbg !3745
  %168 = add i8 %166, %162, !dbg !3746
  call void @llvm.dbg.value(metadata i8 %168, metadata !3580, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3608
  %169 = icmp eq i32 %33, 0, !dbg !3747
  %170 = lshr i8 %163, 1, !dbg !3748
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3748
  call void @llvm.dbg.value(metadata i8 %171, metadata !3580, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3608
  %172 = icmp eq i32 %26, 0, !dbg !3749
  %173 = icmp eq i32 %161, 0, !dbg !3741
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3741
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3741
  call void @llvm.dbg.value(metadata i8 %175, metadata !3580, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3608
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3595, metadata !DIExpression()), !dbg !3750
  %176 = load i32, i32* %14, align 1, !dbg !3751
  store i8 %168, i8* %165, align 1, !dbg !3752
  store i8 %175, i8* %22, align 1, !dbg !3752
  store i8 %171, i8* %29, align 1, !dbg !3752
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #22, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %177, metadata !3586, metadata !DIExpression()), !dbg !3608
  %178 = icmp slt i32 %177, 0, !dbg !3754
  br i1 %178, label %287, label %240, !dbg !3756

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %181, metadata !3587, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i8 %182, metadata !3584, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8 %183, metadata !3583, metadata !DIExpression()), !dbg !3608
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3757
  call void @llvm.dbg.value(metadata i8* %184, metadata !3558, metadata !DIExpression()), !dbg !3608
  %185 = load i8, i8* %180, align 1, !dbg !3758
  call void @llvm.dbg.value(metadata i8 %185, metadata !3589, metadata !DIExpression()), !dbg !3759
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3760
  call void @llvm.dbg.value(metadata i8* %186, metadata !3558, metadata !DIExpression()), !dbg !3608
  %187 = load i8, i8* %184, align 1, !dbg !3761
  call void @llvm.dbg.value(metadata i8 %187, metadata !3592, metadata !DIExpression()), !dbg !3759
  %188 = zext i8 %187 to i32, !dbg !3762
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3762
  %190 = bitcast i32* %189 to i8**, !dbg !3763
  %191 = load i8*, i8** %190, align 4, !dbg !3763
  call void @llvm.dbg.value(metadata i8* %191, metadata !3593, metadata !DIExpression()), !dbg !3759
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #21, !dbg !3764
  call void @llvm.dbg.value(metadata i1 %192, metadata !3594, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3759
  br i1 %16, label %196, label %193, !dbg !3765

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3767
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #21, !dbg !3768
  br i1 %195, label %235, label %196, !dbg !3769

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3770

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3771

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3774
  br i1 %199, label %201, label %200, !dbg !3779

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #22, !dbg !3780
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #22, !dbg !3780
  unreachable, !dbg !3780

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3774
  %203 = add nuw nsw i8 %183, 1, !dbg !3782
  call void @llvm.dbg.value(metadata i8 %203, metadata !3583, metadata !DIExpression()), !dbg !3608
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3783
  br label %231, !dbg !3784

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3785

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3786
  br i1 %207, label %209, label %208, !dbg !3791

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #22, !dbg !3792
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #22, !dbg !3792
  unreachable, !dbg !3792

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3786
  %211 = add nuw nsw i8 %182, 1, !dbg !3794
  call void @llvm.dbg.value(metadata i8 %211, metadata !3584, metadata !DIExpression()), !dbg !3608
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3795
  br label %231, !dbg !3796

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3797

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3799
  br i1 %215, label %217, label %216, !dbg !3804

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #22, !dbg !3805
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #22, !dbg !3805
  unreachable, !dbg !3805

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3799
  %219 = add nuw nsw i8 %183, 1, !dbg !3807
  call void @llvm.dbg.value(metadata i8 %219, metadata !3583, metadata !DIExpression()), !dbg !3608
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3808
  br label %231, !dbg !3809

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3810
  br i1 %222, label %224, label %223, !dbg !3814

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #22, !dbg !3815
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #22, !dbg !3815
  unreachable, !dbg !3815

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3810
  %226 = add nuw nsw i8 %182, 1, !dbg !3817
  call void @llvm.dbg.value(metadata i8 %226, metadata !3584, metadata !DIExpression()), !dbg !3608
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !3818
  store i8 %185, i8* %227, align 1, !dbg !3819
  %228 = add nuw nsw i8 %182, 2, !dbg !3820
  call void @llvm.dbg.value(metadata i8 %228, metadata !3584, metadata !DIExpression()), !dbg !3608
  %229 = zext i8 %226 to i32, !dbg !3821
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !3821
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !3822
  br label %235, !dbg !3823

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3608
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3743
  call void @llvm.dbg.value(metadata i8 %237, metadata !3584, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i8 %236, metadata !3583, metadata !DIExpression()), !dbg !3608
  %238 = add nuw nsw i32 %181, 1, !dbg !3823
  call void @llvm.dbg.value(metadata i8* %186, metadata !3558, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %238, metadata !3587, metadata !DIExpression()), !dbg !3738
  %239 = icmp eq i32 %238, %31, !dbg !3739
  br i1 %239, label %160, label %179, !dbg !3740, !llvm.loop !3824

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3748
  call void @llvm.dbg.value(metadata i32 %177, metadata !3556, metadata !DIExpression()), !dbg !3608
  store i32 %176, i32* %14, align 1, !dbg !3826
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !3827
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #22, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %243, metadata !3586, metadata !DIExpression()), !dbg !3608
  %244 = icmp slt i32 %243, 0, !dbg !3829
  br i1 %244, label %287, label %245, !dbg !3831

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3608
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !3832
  %248 = add nuw nsw i32 %44, %24, !dbg !3832
  %249 = sub i32 %247, %248, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %249, metadata !3596, metadata !DIExpression()), !dbg !3608
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #22, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %250, metadata !3586, metadata !DIExpression()), !dbg !3608
  %251 = icmp slt i32 %250, 0, !dbg !3834
  br i1 %251, label %287, label %252, !dbg !3836

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !3837
  call void @llvm.dbg.value(metadata i32 %253, metadata !3556, metadata !DIExpression()), !dbg !3608
  %254 = add nuw nsw i32 %253, %250, !dbg !3838
  call void @llvm.dbg.value(metadata i32 %254, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 0, metadata !3597, metadata !DIExpression()), !dbg !3839
  %255 = icmp eq i8 %162, 0, !dbg !3840
  br i1 %255, label %284, label %256, !dbg !3841

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !3841

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3597, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %260, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #20, !dbg !3842
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !3843
  %262 = load i8, i8* %261, align 1, !dbg !3843
  call void @llvm.dbg.value(metadata i8 %262, metadata !3599, metadata !DIExpression()), !dbg !3844
  store i8 %262, i8* %10, align 1, !dbg !3845
  %263 = zext i8 %262 to i32, !dbg !3846
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !3846
  %265 = bitcast i32* %264 to i8**, !dbg !3847
  %266 = load i8*, i8** %265, align 4, !dbg !3847
  call void @llvm.dbg.value(metadata i8* %266, metadata !3602, metadata !DIExpression()), !dbg !3844
  br i1 %257, label %270, label %267, !dbg !3848

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !3849
  %269 = load i16, i16* %268, align 2, !dbg !3849
  br label %270, !dbg !3848

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 undef, metadata !3603, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %10, metadata !3599, metadata !DIExpression(DW_OP_deref)), !dbg !3844
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #22, !dbg !3850
  call void @llvm.dbg.value(metadata i32 %272, metadata !3586, metadata !DIExpression()), !dbg !3608
  %273 = icmp slt i32 %272, 0, !dbg !3851
  br i1 %273, label %277, label %274, !dbg !3853

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3603, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3608
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #21, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %275, metadata !3586, metadata !DIExpression()), !dbg !3608
  %276 = icmp slt i32 %275, 0, !dbg !3855
  br i1 %276, label %277, label %279, !dbg !3857

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #20, !dbg !3858
  call void @llvm.dbg.value(metadata i32 undef, metadata !3556, metadata !DIExpression()), !dbg !3608
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %280, metadata !3556, metadata !DIExpression()), !dbg !3608
  %281 = add nsw i32 %280, %275, !dbg !3860
  call void @llvm.dbg.value(metadata i32 %281, metadata !3556, metadata !DIExpression()), !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #20, !dbg !3858
  %282 = add nuw nsw i32 %259, 1, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %282, metadata !3597, metadata !DIExpression()), !dbg !3839
  %283 = icmp eq i32 %282, %167, !dbg !3840
  br i1 %283, label %284, label %258, !dbg !3841, !llvm.loop !3862

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !3838
  call void @llvm.dbg.value(metadata i32 %285, metadata !3556, metadata !DIExpression()), !dbg !3608
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #22, !dbg !3864
  br label %287, !dbg !3865

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3608
  ret i32 %288, !dbg !3866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !3867 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3871, metadata !DIExpression()), !dbg !3879
  %2 = icmp eq i8* %0, null, !dbg !3880
  br i1 %2, label %3, label %4, !dbg !3883

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #22, !dbg !3884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #22, !dbg !3884
  unreachable, !dbg !3884

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3872, metadata !DIExpression()), !dbg !3879
  call void @llvm.dbg.value(metadata i8* %0, metadata !3873, metadata !DIExpression()), !dbg !3879
  %5 = load i8, i8* %0, align 1, !dbg !3886
  %6 = zext i8 %5 to i32, !dbg !3886
  %7 = shl nuw nsw i32 %6, 2, !dbg !3887
  call void @llvm.dbg.value(metadata i32 %7, metadata !3874, metadata !DIExpression()), !dbg !3879
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3888
  %9 = load i8, i8* %8, align 1, !dbg !3888
  %10 = zext i8 %9 to i32, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %10, metadata !3875, metadata !DIExpression()), !dbg !3879
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3889
  %12 = load i8, i8* %11, align 1, !dbg !3889
  %13 = zext i8 %12 to i32, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %13, metadata !3876, metadata !DIExpression()), !dbg !3879
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %14, metadata !3872, metadata !DIExpression()), !dbg !3879
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !3891
  call void @llvm.dbg.value(metadata i8* %15, metadata !3872, metadata !DIExpression()), !dbg !3879
  call void @llvm.dbg.value(metadata i32 0, metadata !3877, metadata !DIExpression()), !dbg !3892
  %16 = icmp eq i8 %9, 0, !dbg !3893
  br i1 %16, label %17, label %22, !dbg !3895

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !3879
  %19 = ptrtoint i8* %18 to i32, !dbg !3896
  %20 = ptrtoint i8* %0 to i32, !dbg !3896
  %21 = sub i32 %19, %20, !dbg !3896
  ret i32 %21, !dbg !3897

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !3877, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i8* %24, metadata !3872, metadata !DIExpression()), !dbg !3879
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !3898
  call void @llvm.dbg.value(metadata i8* %25, metadata !3872, metadata !DIExpression()), !dbg !3879
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #22, !dbg !3900
  %27 = add i32 %26, 1, !dbg !3901
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !3902
  call void @llvm.dbg.value(metadata i8* %28, metadata !3872, metadata !DIExpression()), !dbg !3879
  %29 = add nuw nsw i32 %23, 1, !dbg !3903
  call void @llvm.dbg.value(metadata i32 %29, metadata !3877, metadata !DIExpression()), !dbg !3892
  %30 = icmp eq i32 %29, %10, !dbg !3893
  br i1 %30, label %17, label %22, !dbg !3895, !llvm.loop !3904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !3906 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !3910, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i8* %1, metadata !3911, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i8* %2, metadata !3912, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i16 %3, metadata !3913, metadata !DIExpression()), !dbg !3914
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !3915
  br i1 %5, label %6, label %9, !dbg !3917

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #22, !dbg !3918
  %8 = add i32 %7, 1, !dbg !3920
  br label %20, !dbg !3921

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !3922
  br i1 %10, label %13, label %11, !dbg !3923

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !3923
  br label %16, !dbg !3923

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #22, !dbg !3924
  %15 = add i32 %14, 1, !dbg !3925
  br label %16, !dbg !3923

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !3923
  %18 = and i32 %17, 65535, !dbg !3926
  call void @llvm.dbg.value(metadata i32 %17, metadata !3913, metadata !DIExpression()), !dbg !3914
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #22, !dbg !3927
  br label %20, !dbg !3928

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !3914
  ret i32 %21, !dbg !3929
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3932, metadata !DIExpression()), !dbg !3933
  ret i32 0, !dbg !3934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !3935 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3939, metadata !DIExpression()), !dbg !3940
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3941
  ret void, !dbg !3942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !3943 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3944
  ret i8* %1, !dbg !3945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3946 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3957, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8* %0, metadata !3956, metadata !DIExpression()), !dbg !3968
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #21, !dbg !3969
  ret void, !dbg !3971
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3976, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata i8* %1, metadata !3977, metadata !DIExpression()), !dbg !3978
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3979
  %4 = tail call i32 %3(i32 noundef %0) #22, !dbg !3979
  ret i32 %4, !dbg !3980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3981 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3988, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3985, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i8* %1, metadata !3986, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i8* %2, metadata !3987, metadata !DIExpression()), !dbg !3989
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #22, !dbg !3990
  ret void, !dbg !3991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3992 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3996, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 %1, metadata !3997, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !3999
  %3 = icmp eq i32 %1, 0, !dbg !4000
  br i1 %3, label %13, label %4, !dbg !4003

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3998, metadata !DIExpression()), !dbg !3999
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4004
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4006
  %8 = load i8, i8* %7, align 1, !dbg !4006
  %9 = zext i8 %8 to i32, !dbg !4006
  %10 = tail call i32 %6(i32 noundef %9) #22, !dbg !4004
  %11 = add nuw i32 %5, 1, !dbg !4007
  call void @llvm.dbg.value(metadata i32 %11, metadata !3998, metadata !DIExpression()), !dbg !3999
  %12 = icmp eq i32 %11, %1, !dbg !4000
  br i1 %12, label %13, label %4, !dbg !4003, !llvm.loop !4008

13:                                               ; preds = %4, %2
  ret void, !dbg !4010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4011 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4015, metadata !DIExpression()), !dbg !4017
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4018
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !4018
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4016, metadata !DIExpression()), !dbg !4019
  call void @llvm.va_start(i8* nonnull %3), !dbg !4020
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4021
  %5 = load i32, i32* %4, align 4, !dbg !4021
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4021
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #21, !dbg !4021
  call void @llvm.va_end(i8* nonnull %3), !dbg !4022
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !4023
  ret void, !dbg !4023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4024 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4028, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i32 %1, metadata !4029, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i8* %2, metadata !4030, metadata !DIExpression()), !dbg !4033
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4034
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !4034
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4031, metadata !DIExpression()), !dbg !4035
  call void @llvm.va_start(i8* nonnull %5), !dbg !4036
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4037
  %7 = load i32, i32* %6, align 4, !dbg !4037
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4037
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #21, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %9, metadata !4032, metadata !DIExpression()), !dbg !4033
  call void @llvm.va_end(i8* nonnull %5), !dbg !4038
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !4039
  ret i32 %9, !dbg !4040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4041 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4048, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i8* %0, metadata !4045, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %1, metadata !4046, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i8* %2, metadata !4047, metadata !DIExpression()), !dbg !4055
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4056
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #20, !dbg !4056
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4049, metadata !DIExpression()), !dbg !4057
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4058
  store i8* %0, i8** %7, align 4, !dbg !4058
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4058
  store i32 %1, i32* %8, align 4, !dbg !4058
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4058
  store i32 0, i32* %9, align 4, !dbg !4058
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #21, !dbg !4059
  %10 = load i32, i32* %9, align 4, !dbg !4060
  %11 = load i32, i32* %8, align 4, !dbg !4062
  %12 = icmp slt i32 %10, %11, !dbg !4063
  br i1 %12, label %13, label %15, !dbg !4064

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4065
  store i8 0, i8* %14, align 1, !dbg !4067
  br label %15, !dbg !4068

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #20, !dbg !4069
  ret i32 %10, !dbg !4070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4076, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4077, metadata !DIExpression()), !dbg !4078
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4079
  %4 = load i8*, i8** %3, align 4, !dbg !4079
  %5 = icmp eq i8* %4, null, !dbg !4081
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4082
  br i1 %5, label %12, label %8, !dbg !4083

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4084
  %10 = load i32, i32* %9, align 4, !dbg !4084
  %11 = icmp slt i32 %7, %10, !dbg !4085
  br i1 %11, label %15, label %12, !dbg !4086

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4087
  %14 = add nsw i32 %7, 1, !dbg !4089
  store i32 %14, i32* %13, align 4, !dbg !4089
  br label %25, !dbg !4090

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4091
  %17 = icmp eq i32 %7, %16, !dbg !4093
  br i1 %17, label %18, label %21, !dbg !4094

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4095
  store i32 %19, i32* %6, align 4, !dbg !4095
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4097
  store i8 0, i8* %20, align 1, !dbg !4098
  br label %25, !dbg !4099

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4100
  %23 = add nsw i32 %7, 1, !dbg !4102
  store i32 %23, i32* %6, align 4, !dbg !4102
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4103
  store i8 %22, i8* %24, align 1, !dbg !4104
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4105
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4106 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4111, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i8* %1, metadata !4112, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i8* %2, metadata !4113, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i8* %3, metadata !4114, metadata !DIExpression()), !dbg !4115
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #22, !dbg !4116
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #23, !dbg !4117
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #21, !dbg !4118
  unreachable, !dbg !4119
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4120 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #23, !dbg !4221
  ret %struct.k_thread* %1, !dbg !4222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4228, metadata !DIExpression()), !dbg !4229
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !4230, !srcloc !4232
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !4233
  ret void, !dbg !4234
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4235 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !4236, !srcloc !4238
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #22, !dbg !4239
  ret %struct.k_thread* %1, !dbg !4240
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4241 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4254, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4251, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i8* %1, metadata !4252, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i8* %2, metadata !4253, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %4, metadata !4255, metadata !DIExpression()), !dbg !4380
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4381
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #20, !dbg !4381
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4256, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata i32 0, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i1 undef, metadata !4262, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4380
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4383

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4383

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4384
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4254, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i8* %30, metadata !4253, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %29, metadata !4260, metadata !DIExpression()), !dbg !4380
  %31 = load i8, i8* %30, align 1, !dbg !4385
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4383

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4385
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4386
  call void @llvm.dbg.value(metadata i8* %34, metadata !4253, metadata !DIExpression()), !dbg !4380
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #22, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %35, metadata !4264, metadata !DIExpression()), !dbg !4387
  %36 = icmp slt i32 %35, 0, !dbg !4388
  %37 = add i32 %29, 1, !dbg !4386
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %36, label %365, label %28, !llvm.loop !4390

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4392
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4269, metadata !DIExpression()), !dbg !4393
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4393
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4312, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4315, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8* %30, metadata !4318, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i32 -1, metadata !4319, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i32 -1, metadata !4320, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8* null, metadata !4321, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8* %14, metadata !4322, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8 0, metadata !4323, metadata !DIExpression()), !dbg !4394
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #21, !dbg !4395
  call void @llvm.dbg.value(metadata i8* %39, metadata !4253, metadata !DIExpression()), !dbg !4380
  %40 = load i24, i24* %15, align 8, !dbg !4396
  %41 = and i24 %40, 256, !dbg !4396
  %42 = icmp eq i24 %41, 0, !dbg !4396
  br i1 %42, label %51, label %43, !dbg !4398

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4399
  call void @llvm.dbg.value(metadata i8* %44, metadata !4254, metadata !DIExpression()), !dbg !4380
  %45 = bitcast i8* %27 to i32*, !dbg !4399
  %46 = load i32, i32* %45, align 4, !dbg !4399
  call void @llvm.dbg.value(metadata i32 %46, metadata !4319, metadata !DIExpression()), !dbg !4394
  %47 = icmp slt i32 %46, 0, !dbg !4401
  br i1 %47, label %48, label %56, !dbg !4403

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4404
  store i24 %49, i24* %15, align 8, !dbg !4404
  %50 = sub nsw i32 0, %46, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %50, metadata !4319, metadata !DIExpression()), !dbg !4394
  br label %56, !dbg !4407

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4408
  %53 = icmp eq i24 %52, 0, !dbg !4408
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4410
  br label %56, !dbg !4410

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4411
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4394
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4254, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %58, metadata !4319, metadata !DIExpression()), !dbg !4394
  %60 = and i24 %57, 1024, !dbg !4411
  %61 = icmp eq i24 %60, 0, !dbg !4411
  br i1 %61, label %69, label %62, !dbg !4412

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4413
  call void @llvm.dbg.value(metadata i8* %63, metadata !4254, metadata !DIExpression()), !dbg !4380
  %64 = bitcast i8* %59 to i32*, !dbg !4413
  %65 = load i32, i32* %64, align 4, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %65, metadata !4324, metadata !DIExpression()), !dbg !4414
  %66 = icmp slt i32 %65, 0, !dbg !4415
  br i1 %66, label %67, label %74, !dbg !4417

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4418
  store i24 %68, i24* %15, align 8, !dbg !4418
  br label %74, !dbg !4420

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4421
  %71 = icmp eq i24 %70, 0, !dbg !4421
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4423
  br label %74, !dbg !4423

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4424
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4394
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4394
  call void @llvm.dbg.value(metadata i8* %77, metadata !4254, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %76, metadata !4320, metadata !DIExpression()), !dbg !4394
  store i32 0, i32* %16, align 4, !dbg !4425
  store i32 0, i32* %17, align 8, !dbg !4426
  %78 = lshr i24 %75, 16, !dbg !4424
  call void @llvm.dbg.value(metadata i24 %78, metadata !4327, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4394
  %79 = lshr i24 %75, 11, !dbg !4427
  %80 = and i24 %79, 15, !dbg !4427
  %81 = zext i24 %80 to i32, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %81, metadata !4328, metadata !DIExpression()), !dbg !4394
  %82 = trunc i24 %78 to i3, !dbg !4428
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4428

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4429

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4432
  call void @llvm.dbg.value(metadata i8* %85, metadata !4254, metadata !DIExpression()), !dbg !4380
  %86 = bitcast i8* %77 to i32*, !dbg !4432
  %87 = load i32, i32* %86, align 4, !dbg !4432
  %88 = sext i32 %87 to i64, !dbg !4432
  store i64 %88, i64* %20, align 8, !dbg !4434
  br label %115, !dbg !4435

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4436
  call void @llvm.dbg.value(metadata i8* %90, metadata !4254, metadata !DIExpression()), !dbg !4380
  %91 = bitcast i8* %77 to i32*, !dbg !4436
  %92 = load i32, i32* %91, align 4, !dbg !4436
  %93 = sext i32 %92 to i64, !dbg !4436
  store i64 %93, i64* %20, align 8, !dbg !4439
  br label %115, !dbg !4440

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4441
  %96 = add i32 %95, 7, !dbg !4441
  %97 = and i32 %96, -8, !dbg !4441
  %98 = inttoptr i32 %97 to i8*, !dbg !4441
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4441
  call void @llvm.dbg.value(metadata i8* %99, metadata !4254, metadata !DIExpression()), !dbg !4380
  %100 = inttoptr i32 %97 to i64*, !dbg !4441
  %101 = load i64, i64* %100, align 8, !dbg !4441
  store i64 %101, i64* %20, align 8, !dbg !4442
  br label %115, !dbg !4443

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4444
  %104 = add i32 %103, 7, !dbg !4444
  %105 = and i32 %104, -8, !dbg !4444
  %106 = inttoptr i32 %105 to i8*, !dbg !4444
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4444
  call void @llvm.dbg.value(metadata i8* %107, metadata !4254, metadata !DIExpression()), !dbg !4380
  %108 = inttoptr i32 %105 to i64*, !dbg !4444
  %109 = load i64, i64* %108, align 8, !dbg !4444
  store i64 %109, i64* %20, align 8, !dbg !4445
  br label %115, !dbg !4446

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4447
  call void @llvm.dbg.value(metadata i8* %111, metadata !4254, metadata !DIExpression()), !dbg !4380
  %112 = bitcast i8* %77 to i32*, !dbg !4447
  %113 = load i32, i32* %112, align 4, !dbg !4447
  %114 = sext i32 %113 to i64, !dbg !4448
  store i64 %114, i64* %20, align 8, !dbg !4449
  br label %115, !dbg !4450

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4451
  call void @llvm.dbg.value(metadata i8* %117, metadata !4254, metadata !DIExpression()), !dbg !4380
  %118 = trunc i24 %79 to i4, !dbg !4452
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4452

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4453
  %121 = ashr exact i64 %120, 56, !dbg !4453
  store i64 %121, i64* %20, align 8, !dbg !4456
  br label %177, !dbg !4457

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4458
  %124 = ashr exact i64 %123, 48, !dbg !4458
  store i64 %124, i64* %20, align 8, !dbg !4461
  br label %177, !dbg !4462

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4463

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4466
  call void @llvm.dbg.value(metadata i8* %127, metadata !4254, metadata !DIExpression()), !dbg !4380
  %128 = bitcast i8* %77 to i32*, !dbg !4466
  %129 = load i32, i32* %128, align 4, !dbg !4466
  %130 = zext i32 %129 to i64, !dbg !4466
  store i64 %130, i64* %20, align 8, !dbg !4468
  br label %157, !dbg !4469

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4470
  call void @llvm.dbg.value(metadata i8* %132, metadata !4254, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i8* %132, metadata !4254, metadata !DIExpression()), !dbg !4380
  %133 = bitcast i8* %77 to i32*, !dbg !4470
  %134 = load i32, i32* %133, align 4, !dbg !4470
  %135 = zext i32 %134 to i64, !dbg !4470
  store i64 %135, i64* %20, align 8, !dbg !4470
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4472
  %138 = add i32 %137, 7, !dbg !4472
  %139 = and i32 %138, -8, !dbg !4472
  %140 = inttoptr i32 %139 to i8*, !dbg !4472
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4472
  call void @llvm.dbg.value(metadata i8* %141, metadata !4254, metadata !DIExpression()), !dbg !4380
  %142 = inttoptr i32 %139 to i64*, !dbg !4472
  %143 = load i64, i64* %142, align 8, !dbg !4472
  store i64 %143, i64* %20, align 8, !dbg !4473
  br label %157, !dbg !4474

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4475
  %146 = add i32 %145, 7, !dbg !4475
  %147 = and i32 %146, -8, !dbg !4475
  %148 = inttoptr i32 %147 to i8*, !dbg !4475
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4475
  call void @llvm.dbg.value(metadata i8* %149, metadata !4254, metadata !DIExpression()), !dbg !4380
  %150 = inttoptr i32 %147 to i64*, !dbg !4475
  %151 = load i64, i64* %150, align 8, !dbg !4475
  store i64 %151, i64* %20, align 8, !dbg !4476
  br label %157, !dbg !4477

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4478
  call void @llvm.dbg.value(metadata i8* %153, metadata !4254, metadata !DIExpression()), !dbg !4380
  %154 = bitcast i8* %77 to i32*, !dbg !4478
  %155 = load i32, i32* %154, align 4, !dbg !4478
  %156 = zext i32 %155 to i64, !dbg !4479
  store i64 %156, i64* %20, align 8, !dbg !4480
  br label %157, !dbg !4481

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4482
  call void @llvm.dbg.value(metadata i8* %159, metadata !4254, metadata !DIExpression()), !dbg !4380
  %160 = trunc i24 %79 to i4, !dbg !4483
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4483

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4484
  store i64 %162, i64* %20, align 8, !dbg !4487
  br label %177, !dbg !4488

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4489
  store i64 %164, i64* %20, align 8, !dbg !4492
  br label %177, !dbg !4493

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4494
  %167 = add i32 %166, 7, !dbg !4494
  %168 = and i32 %167, -8, !dbg !4494
  %169 = inttoptr i32 %168 to i8*, !dbg !4494
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4494
  call void @llvm.dbg.value(metadata i8* %170, metadata !4254, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i8* %170, metadata !4254, metadata !DIExpression()), !dbg !4380
  %171 = inttoptr i32 %168 to double*, !dbg !4494
  %172 = load double, double* %171, align 8, !dbg !4494
  store double %172, double* %19, align 8, !dbg !4494
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4498
  call void @llvm.dbg.value(metadata i8* %174, metadata !4254, metadata !DIExpression()), !dbg !4380
  %175 = bitcast i8* %77 to i8**, !dbg !4498
  %176 = load i8*, i8** %175, align 4, !dbg !4498
  store i8* %176, i8** %18, align 8, !dbg !4501
  br label %177, !dbg !4502

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4394
  call void @llvm.dbg.value(metadata i8* %178, metadata !4254, metadata !DIExpression()), !dbg !4380
  %179 = and i24 %75, 3, !dbg !4503
  %180 = icmp eq i24 %179, 0, !dbg !4503
  br i1 %180, label %185, label %181, !dbg !4503

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #21, !dbg !4504
  call void @llvm.dbg.value(metadata i32 %182, metadata !4329, metadata !DIExpression()), !dbg !4505
  %183 = icmp slt i32 %182, 0, !dbg !4506
  %184 = add i32 %182, %29, !dbg !4504
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4508
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4509

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #22, !dbg !4510
  call void @llvm.dbg.value(metadata i32 %188, metadata !4333, metadata !DIExpression()), !dbg !4511
  %189 = icmp slt i32 %188, 0, !dbg !4512
  %190 = add i32 %29, 1, !dbg !4510
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4514
  call void @llvm.dbg.value(metadata i8* %192, metadata !4321, metadata !DIExpression()), !dbg !4394
  %193 = icmp sgt i32 %76, -1, !dbg !4515
  br i1 %193, label %194, label %196, !dbg !4517

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #22, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %195, metadata !4336, metadata !DIExpression()), !dbg !4520
  br label %241, !dbg !4521

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #22, !dbg !4522
  call void @llvm.dbg.value(metadata i32 %197, metadata !4336, metadata !DIExpression()), !dbg !4520
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4321, metadata !DIExpression()), !dbg !4394
  %199 = load i64, i64* %20, align 8, !dbg !4524
  %200 = trunc i64 %199 to i8, !dbg !4525
  store i8 %200, i8* %10, align 1, !dbg !4526
  call void @llvm.dbg.value(metadata i8* %23, metadata !4322, metadata !DIExpression()), !dbg !4394
  br label %245, !dbg !4527

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4528
  %203 = icmp eq i24 %202, 0, !dbg !4528
  %204 = trunc i24 %75 to i8, !dbg !4530
  %205 = shl i8 %204, 1, !dbg !4530
  %206 = and i8 %205, 32, !dbg !4530
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4530
  call void @llvm.dbg.value(metadata i8 %207, metadata !4323, metadata !DIExpression()), !dbg !4394
  %208 = load i64, i64* %20, align 8, !dbg !4531
  call void @llvm.dbg.value(metadata i64 %208, metadata !4261, metadata !DIExpression()), !dbg !4380
  %209 = icmp slt i64 %208, 0, !dbg !4532
  br i1 %209, label %210, label %212, !dbg !4534

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4323, metadata !DIExpression()), !dbg !4394
  %211 = sub nsw i64 0, %208, !dbg !4535
  store i64 %211, i64* %20, align 8, !dbg !4537
  br label %212, !dbg !4538

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4394
  call void @llvm.dbg.value(metadata i8 %213, metadata !4323, metadata !DIExpression()), !dbg !4394
  %214 = load i64, i64* %20, align 8, !dbg !4539
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #21, !dbg !4540
  call void @llvm.dbg.value(metadata i8* %215, metadata !4321, metadata !DIExpression()), !dbg !4394
  br label %216, !dbg !4541

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4542
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4543
  call void @llvm.dbg.value(metadata i8* %218, metadata !4321, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8 %217, metadata !4323, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.label(metadata !4379), !dbg !4544
  %219 = icmp sgt i32 %76, -1, !dbg !4545
  br i1 %219, label %222, label %220, !dbg !4546

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4547
  br label %245, !dbg !4546

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4549
  %224 = sub i32 %22, %223, !dbg !4549
  call void @llvm.dbg.value(metadata i32 %224, metadata !4338, metadata !DIExpression()), !dbg !4550
  %225 = load i24, i24* %15, align 8, !dbg !4551
  %226 = and i24 %225, -65, !dbg !4551
  store i24 %226, i24* %15, align 8, !dbg !4551
  %227 = icmp ugt i32 %76, %224, !dbg !4552
  br i1 %227, label %228, label %245, !dbg !4554

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4555
  store i32 %229, i32* %16, align 4, !dbg !4557
  br label %245, !dbg !4558

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4559
  %232 = icmp eq i8* %231, null, !dbg !4561
  br i1 %232, label %245, label %233, !dbg !4562

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4563
  %235 = zext i32 %234 to i64, !dbg !4563
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #21, !dbg !4565
  call void @llvm.dbg.value(metadata i8* %236, metadata !4321, metadata !DIExpression()), !dbg !4394
  %237 = load i24, i24* %15, align 8, !dbg !4566
  %238 = or i24 %237, 1048576, !dbg !4566
  store i24 %238, i24* %15, align 8, !dbg !4566
  store i8 120, i8* %21, align 1, !dbg !4567
  br label %216, !dbg !4568

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4569
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #21, !dbg !4572
  br label %363, !dbg !4573

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %242, metadata !4336, metadata !DIExpression()), !dbg !4520
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4575
  call void @llvm.dbg.value(metadata i32 -1, metadata !4320, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i32 %29, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i8* %192, metadata !4321, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8* %243, metadata !4322, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8 0, metadata !4323, metadata !DIExpression()), !dbg !4394
  %244 = icmp eq i8* %192, null, !dbg !4576
  br i1 %244, label %363, label %245, !dbg !4578, !llvm.loop !4390

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4547
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4394
  call void @llvm.dbg.value(metadata i32 0, metadata !4342, metadata !DIExpression()), !dbg !4394
  %250 = zext i8 %249 to i32, !dbg !4579
  %251 = icmp eq i8 %249, 0, !dbg !4581
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  call void @llvm.dbg.value(metadata i32 undef, metadata !4341, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  call void @llvm.dbg.value(metadata i32 undef, metadata !4341, metadata !DIExpression()), !dbg !4394
  %252 = icmp sgt i32 %58, 0, !dbg !4582
  br i1 %252, label %253, label %302, !dbg !4583

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4547
  %255 = icmp eq i24 %254, 0, !dbg !4547
  %256 = ptrtoint i8* %248 to i32, !dbg !4584
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  %257 = ptrtoint i8* %247 to i32, !dbg !4584
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  %258 = xor i1 %251, true, !dbg !4585
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  %259 = sext i1 %258 to i32, !dbg !4585
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  %260 = lshr i24 %246, 19, !dbg !4586
  %261 = and i24 %260, 1, !dbg !4586
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4586
  %263 = zext i24 %262 to i32, !dbg !4586
  %264 = add i32 %257, %259, !dbg !4586
  %265 = add i32 %256, %263, !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  %266 = and i24 %246, 4194304, !dbg !4587
  %267 = icmp eq i24 %266, 0, !dbg !4587
  %268 = load i32, i32* %16, align 4, !dbg !4589
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4341, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4394
  call void @llvm.dbg.value(metadata i32 undef, metadata !4341, metadata !DIExpression()), !dbg !4394
  %269 = load i32, i32* %17, align 8, !dbg !4590
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4590
  call void @llvm.dbg.value(metadata i32 undef, metadata !4341, metadata !DIExpression()), !dbg !4394
  %271 = add i32 %264, %58, !dbg !4590
  %272 = add i32 %265, %268, !dbg !4590
  %273 = add i32 %272, %270, !dbg !4591
  %274 = sub i32 %271, %273, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %274, metadata !4319, metadata !DIExpression()), !dbg !4394
  %275 = and i24 %246, 4, !dbg !4592
  %276 = icmp eq i24 %275, 0, !dbg !4592
  br i1 %276, label %277, label %302, !dbg !4593

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4343, metadata !DIExpression()), !dbg !4594
  %278 = and i24 %246, 64, !dbg !4595
  %279 = icmp eq i24 %278, 0, !dbg !4595
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4596
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4596
  %282 = select i1 %279, i32 32, i32 48, !dbg !4596
  br i1 %280, label %287, label %283, !dbg !4596

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #22, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %284, metadata !4348, metadata !DIExpression()), !dbg !4598
  %285 = icmp slt i32 %284, 0, !dbg !4599
  %286 = add i32 %29, 1, !dbg !4597
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4394
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %290, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i8 undef, metadata !4343, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i8 %288, metadata !4323, metadata !DIExpression()), !dbg !4394
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4601
  %292 = add i32 %291, -1, !dbg !4601
  br label %293, !dbg !4601

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4602
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %295, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %294, metadata !4319, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i32 %294, metadata !4319, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4394
  %296 = icmp sgt i32 %294, 0, !dbg !4603
  br i1 %296, label %297, label %302, !dbg !4601

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4604
  call void @llvm.dbg.value(metadata i32 %298, metadata !4319, metadata !DIExpression()), !dbg !4394
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #22, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %299, metadata !4354, metadata !DIExpression()), !dbg !4606
  %300 = icmp slt i32 %299, 0, !dbg !4607
  %301 = add i32 %295, 1, !dbg !4605
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %300, label %361, label %293, !llvm.loop !4609

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4394
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4394
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %305, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %304, metadata !4319, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i8 %303, metadata !4323, metadata !DIExpression()), !dbg !4394
  %306 = icmp eq i8 %303, 0, !dbg !4611
  br i1 %306, label %312, label %307, !dbg !4612

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4613
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #22, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %309, metadata !4357, metadata !DIExpression()), !dbg !4615
  %310 = icmp slt i32 %309, 0, !dbg !4616
  %311 = add i32 %305, 1, !dbg !4614
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %313, metadata !4260, metadata !DIExpression()), !dbg !4380
  %314 = lshr i24 %246, 20, !dbg !4618
  %315 = lshr i24 %246, 19, !dbg !4619
  %316 = or i24 %314, %315, !dbg !4620
  %317 = and i24 %316, 1, !dbg !4620
  %318 = icmp eq i24 %317, 0, !dbg !4620
  br i1 %318, label %323, label %319, !dbg !4621

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #22, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %320, metadata !4361, metadata !DIExpression()), !dbg !4623
  %321 = icmp slt i32 %320, 0, !dbg !4624
  %322 = add i32 %313, 1, !dbg !4622
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %324, metadata !4260, metadata !DIExpression()), !dbg !4380
  %325 = and i24 %246, 1048576, !dbg !4626
  %326 = icmp eq i24 %325, 0, !dbg !4626
  br i1 %326, label %333, label %327, !dbg !4627

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4628
  %329 = zext i8 %328 to i32, !dbg !4628
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #22, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %330, metadata !4367, metadata !DIExpression()), !dbg !4629
  %331 = icmp slt i32 %330, 0, !dbg !4630
  %332 = add i32 %324, 1, !dbg !4628
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %334, metadata !4260, metadata !DIExpression()), !dbg !4380
  %335 = load i32, i32* %16, align 4, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %335, metadata !4342, metadata !DIExpression()), !dbg !4394
  br label %336, !dbg !4633

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4634
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %338, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %337, metadata !4342, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4394
  %339 = icmp sgt i32 %337, 0, !dbg !4635
  br i1 %339, label %340, label %345, !dbg !4633

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %341, metadata !4342, metadata !DIExpression()), !dbg !4394
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #22, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %342, metadata !4371, metadata !DIExpression()), !dbg !4638
  %343 = icmp slt i32 %342, 0, !dbg !4639
  %344 = add i32 %338, 1, !dbg !4637
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %343, label %361, label %336, !llvm.loop !4641

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #21, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %346, metadata !4374, metadata !DIExpression()), !dbg !4644
  %347 = icmp slt i32 %346, 0, !dbg !4645
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %349, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %304, metadata !4319, metadata !DIExpression()), !dbg !4394
  %350 = icmp sgt i32 %304, 0, !dbg !4647
  br i1 %350, label %351, label %363, !dbg !4648

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4648
  %353 = add i32 %352, %338, !dbg !4648
  br label %354, !dbg !4648

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %355, metadata !4319, metadata !DIExpression()), !dbg !4394
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #22, !dbg !4649
  call void @llvm.dbg.value(metadata i32 %356, metadata !4376, metadata !DIExpression()), !dbg !4650
  %357 = icmp slt i32 %356, 0, !dbg !4651
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4653
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %359, metadata !4319, metadata !DIExpression()), !dbg !4394
  %360 = icmp sgt i32 %355, 1, !dbg !4647
  br i1 %360, label %354, label %363, !dbg !4648, !llvm.loop !4654

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4391
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4384
  call void @llvm.dbg.value(metadata i32 %364, metadata !4260, metadata !DIExpression()), !dbg !4380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4391
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4380
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #20, !dbg !4656
  ret i32 %366, !dbg !4656
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4657 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4661, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.value(metadata i8* %1, metadata !4662, metadata !DIExpression()), !dbg !4663
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4664
  store i24 0, i24* %3, align 4, !dbg !4664
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4664
  store i8 0, i8* %4, align 1, !dbg !4664
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4664
  store i32 0, i32* %5, align 4, !dbg !4664
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4664
  store i32 0, i32* %6, align 4, !dbg !4664
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4665
  call void @llvm.dbg.value(metadata i8* %7, metadata !4662, metadata !DIExpression()), !dbg !4663
  %8 = load i8, i8* %7, align 1, !dbg !4666
  %9 = icmp eq i8 %8, 37, !dbg !4668
  br i1 %9, label %10, label %12, !dbg !4669

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4670
  call void @llvm.dbg.value(metadata i8* %11, metadata !4662, metadata !DIExpression()), !dbg !4663
  store i8 37, i8* %4, align 1, !dbg !4672
  br label %18, !dbg !4673

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #21, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %13, metadata !4662, metadata !DIExpression()), !dbg !4663
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #21, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %14, metadata !4662, metadata !DIExpression()), !dbg !4663
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #21, !dbg !4676
  call void @llvm.dbg.value(metadata i8* %15, metadata !4662, metadata !DIExpression()), !dbg !4663
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #21, !dbg !4677
  call void @llvm.dbg.value(metadata i8* %16, metadata !4662, metadata !DIExpression()), !dbg !4663
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #21, !dbg !4678
  call void @llvm.dbg.value(metadata i8* %17, metadata !4662, metadata !DIExpression()), !dbg !4663
  br label %18, !dbg !4679

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4663
  ret i8* %19, !dbg !4680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4681 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4685, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i8* %1, metadata !4686, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i8* %2, metadata !4687, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i8* %3, metadata !4688, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i32 0, metadata !4689, metadata !DIExpression()), !dbg !4692
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4693

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4694
  call void @llvm.dbg.value(metadata i32 %9, metadata !4689, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i8* %8, metadata !4687, metadata !DIExpression()), !dbg !4692
  %10 = icmp ult i8* %8, %3, !dbg !4695
  br i1 %10, label %11, label %13, !dbg !4696

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4697
  br label %17, !dbg !4696

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4698

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4699
  %16 = icmp eq i8 %15, 0, !dbg !4698
  br i1 %16, label %24, label %17, !dbg !4693

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4697
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4700
  call void @llvm.dbg.value(metadata i8* %19, metadata !4687, metadata !DIExpression()), !dbg !4692
  %20 = zext i8 %18 to i32, !dbg !4701
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #22, !dbg !4702
  call void @llvm.dbg.value(metadata i32 %21, metadata !4690, metadata !DIExpression()), !dbg !4703
  %22 = icmp slt i32 %21, 0, !dbg !4704
  %23 = add i32 %9, 1, !dbg !4706
  call void @llvm.dbg.value(metadata i32 undef, metadata !4689, metadata !DIExpression()), !dbg !4692
  br i1 %22, label %24, label %7, !llvm.loop !4707

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4692
  ret i32 %25, !dbg !4709
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4710 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4714, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4715, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i8* %2, metadata !4716, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i8* %3, metadata !4717, metadata !DIExpression()), !dbg !4724
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4725
  %6 = load i8, i8* %5, align 1, !dbg !4725
  %7 = zext i8 %6 to i32, !dbg !4726
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #21, !dbg !4727
  %9 = icmp eq i32 %8, 0, !dbg !4727
  call void @llvm.dbg.value(metadata i1 %9, metadata !4718, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4724
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #21, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %10, metadata !4719, metadata !DIExpression()), !dbg !4724
  %11 = ptrtoint i8* %3 to i32, !dbg !4729
  %12 = ptrtoint i8* %2 to i32, !dbg !4729
  %13 = sub i32 %11, %12, !dbg !4729
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %14, metadata !4721, metadata !DIExpression()), !dbg !4724
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4731

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4724
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4714, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i8* %18, metadata !4721, metadata !DIExpression()), !dbg !4724
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4732
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %25, metadata !4722, metadata !DIExpression()), !dbg !4734
  %26 = icmp ult i32 %25, 10, !dbg !4735
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4736
  %28 = add i32 %27, %25, !dbg !4734
  %29 = trunc i32 %28 to i8, !dbg !4736
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4737
  call void @llvm.dbg.value(metadata i8* %30, metadata !4721, metadata !DIExpression()), !dbg !4724
  store i8 %29, i8* %30, align 1, !dbg !4738
  call void @llvm.dbg.value(metadata i64 %22, metadata !4714, metadata !DIExpression()), !dbg !4724
  %31 = icmp uge i64 %19, %15, !dbg !4739
  %32 = icmp ugt i8* %30, %2, !dbg !4740
  %33 = and i1 %31, %32, !dbg !4740
  br i1 %33, label %17, label %34, !dbg !4741, !llvm.loop !4742

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4744
  %36 = load i24, i24* %35, align 4, !dbg !4744
  %37 = and i24 %36, 32, !dbg !4744
  %38 = icmp eq i24 %37, 0, !dbg !4744
  br i1 %38, label %44, label %39, !dbg !4746

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4747

40:                                               ; preds = %39
  br label %41, !dbg !4749

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4753
  store i24 %43, i24* %35, align 4, !dbg !4753
  br label %44, !dbg !4754

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4755 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4761, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %1, metadata !4762, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %2, metadata !4763, metadata !DIExpression()), !dbg !4764
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4765
  %5 = load i24, i24* %4, align 4, !dbg !4765
  %6 = lshr i24 %5, 11, !dbg !4765
  %7 = and i24 %6, 15, !dbg !4765
  %8 = zext i24 %7 to i32, !dbg !4765
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4766

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4767
  store i32 %2, i32* %10, align 4, !dbg !4769
  br label %28, !dbg !4770

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4771
  store i8 %12, i8* %1, align 1, !dbg !4772
  br label %28, !dbg !4773

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4774
  %15 = bitcast i8* %1 to i16*, !dbg !4775
  store i16 %14, i16* %15, align 2, !dbg !4776
  br label %28, !dbg !4777

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4778
  store i32 %2, i32* %17, align 4, !dbg !4779
  br label %28, !dbg !4780

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4781
  %20 = bitcast i8* %1 to i64*, !dbg !4782
  store i64 %19, i64* %20, align 8, !dbg !4783
  br label %28, !dbg !4784

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4785
  %23 = bitcast i8* %1 to i64*, !dbg !4786
  store i64 %22, i64* %23, align 8, !dbg !4787
  br label %28, !dbg !4788

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4789
  store i32 %2, i32* %25, align 4, !dbg !4790
  br label %28, !dbg !4791

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4792
  store i32 %2, i32* %27, align 4, !dbg !4793
  br label %28, !dbg !4794

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4795
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !4796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4799, metadata !DIExpression()), !dbg !4800
  %2 = add i32 %0, -65, !dbg !4801
  %3 = icmp ult i32 %2, 26, !dbg !4802
  %4 = zext i1 %3 to i32, !dbg !4802
  ret i32 %4, !dbg !4803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4804 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4808, metadata !DIExpression()), !dbg !4809
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4810

2:                                                ; preds = %1
  br label %4, !dbg !4811

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4813

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4814
  ret i32 %5, !dbg !4815
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !4816 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4818, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.value(metadata i8* %1, metadata !4819, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.value(metadata i8 1, metadata !4820, metadata !DIExpression()), !dbg !4821
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4822

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4820, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.value(metadata i8* %5, metadata !4819, metadata !DIExpression()), !dbg !4821
  %6 = load i8, i8* %5, align 1, !dbg !4823
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4825

7:                                                ; preds = %4
  br label %11, !dbg !4826

8:                                                ; preds = %4
  br label %11, !dbg !4828

9:                                                ; preds = %4
  br label %11, !dbg !4829

10:                                               ; preds = %4
  br label %11, !dbg !4830

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4831
  %14 = or i24 %13, %12, !dbg !4831
  store i24 %14, i24* %3, align 4, !dbg !4831
  call void @llvm.dbg.value(metadata i8 poison, metadata !4820, metadata !DIExpression()), !dbg !4821
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4819, metadata !DIExpression()), !dbg !4821
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4820, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.value(metadata i8* %15, metadata !4819, metadata !DIExpression()), !dbg !4821
  %17 = load i24, i24* %3, align 4, !dbg !4832
  %18 = and i24 %17, 68, !dbg !4834
  %19 = icmp eq i24 %18, 68, !dbg !4834
  br i1 %19, label %20, label %22, !dbg !4834

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4835
  store i24 %21, i24* %3, align 4, !dbg !4835
  br label %22, !dbg !4837

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4838
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4839 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4841, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.value(metadata i8* %1, metadata !4842, metadata !DIExpression()), !dbg !4845
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4846
  %5 = load i24, i24* %4, align 4, !dbg !4847
  %6 = or i24 %5, 128, !dbg !4847
  store i24 %6, i24* %4, align 4, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %1, metadata !4842, metadata !DIExpression()), !dbg !4845
  %7 = load i8, i8* %1, align 1, !dbg !4848
  %8 = icmp eq i8 %7, 42, !dbg !4850
  br i1 %8, label %9, label %12, !dbg !4851

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4852
  store i24 %10, i24* %4, align 4, !dbg !4852
  call void @llvm.dbg.value(metadata i8* %1, metadata !4842, metadata !DIExpression()), !dbg !4845
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %11, metadata !4842, metadata !DIExpression()), !dbg !4845
  store i8* %11, i8** %3, align 4, !dbg !4854
  br label %29, !dbg !4855

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4843, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.value(metadata i8** %3, metadata !4842, metadata !DIExpression(DW_OP_deref)), !dbg !4845
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #21, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %13, metadata !4844, metadata !DIExpression()), !dbg !4845
  %14 = load i8*, i8** %3, align 4, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %14, metadata !4842, metadata !DIExpression()), !dbg !4845
  %15 = icmp eq i8* %14, %1, !dbg !4859
  br i1 %15, label %29, label %16, !dbg !4860

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4861
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4863
  store i32 %13, i32* %18, align 4, !dbg !4864
  %19 = lshr i32 %13, 31, !dbg !4865
  %20 = lshr i24 %17, 1, !dbg !4866
  %21 = and i24 %20, 1, !dbg !4866
  %22 = zext i24 %21 to i32, !dbg !4866
  %23 = or i32 %19, %22, !dbg !4866
  %24 = trunc i32 %23 to i24, !dbg !4866
  %25 = shl nuw nsw i24 %24, 1, !dbg !4866
  %26 = and i24 %17, -131, !dbg !4866
  %27 = or i24 %26, 128, !dbg !4866
  %28 = or i24 %25, %27, !dbg !4866
  store i24 %28, i24* %4, align 4, !dbg !4866
  br label %29, !dbg !4867

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4845
  ret i8* %30, !dbg !4868
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4869 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4871, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i8* %1, metadata !4872, metadata !DIExpression()), !dbg !4874
  %4 = load i8, i8* %1, align 1, !dbg !4875
  %5 = icmp eq i8 %4, 46, !dbg !4876
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4877
  %7 = load i24, i24* %6, align 4, !dbg !4878
  %8 = select i1 %5, i24 512, i24 0, !dbg !4878
  %9 = and i24 %7, -513, !dbg !4878
  %10 = or i24 %9, %8, !dbg !4878
  store i24 %10, i24* %6, align 4, !dbg !4878
  br i1 %5, label %11, label %32, !dbg !4879

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4872, metadata !DIExpression()), !dbg !4874
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4880
  call void @llvm.dbg.value(metadata i8* %12, metadata !4872, metadata !DIExpression()), !dbg !4874
  store i8* %12, i8** %3, align 4, !dbg !4880
  %13 = load i8, i8* %12, align 1, !dbg !4881
  %14 = icmp eq i8 %13, 42, !dbg !4883
  br i1 %14, label %15, label %18, !dbg !4884

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4885
  store i24 %16, i24* %6, align 4, !dbg !4885
  call void @llvm.dbg.value(metadata i8* %12, metadata !4872, metadata !DIExpression()), !dbg !4874
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %17, metadata !4872, metadata !DIExpression()), !dbg !4874
  store i8* %17, i8** %3, align 4, !dbg !4887
  br label %32, !dbg !4888

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4872, metadata !DIExpression(DW_OP_deref)), !dbg !4874
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #21, !dbg !4889
  call void @llvm.dbg.value(metadata i32 %19, metadata !4873, metadata !DIExpression()), !dbg !4874
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4890
  store i32 %19, i32* %20, align 4, !dbg !4891
  %21 = lshr i32 %19, 31, !dbg !4892
  %22 = load i24, i24* %6, align 4, !dbg !4893
  %23 = lshr i24 %22, 1, !dbg !4893
  %24 = and i24 %23, 1, !dbg !4893
  %25 = zext i24 %24 to i32, !dbg !4893
  %26 = or i32 %21, %25, !dbg !4893
  %27 = trunc i32 %26 to i24, !dbg !4893
  %28 = shl nuw nsw i24 %27, 1, !dbg !4893
  %29 = and i24 %22, -3, !dbg !4893
  %30 = or i24 %28, %29, !dbg !4893
  store i24 %30, i24* %6, align 4, !dbg !4893
  %31 = load i8*, i8** %3, align 4, !dbg !4894
  call void @llvm.dbg.value(metadata i8* %31, metadata !4872, metadata !DIExpression()), !dbg !4874
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4874
  ret i8* %33, !dbg !4895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !4896 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4898, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i8* %1, metadata !4899, metadata !DIExpression()), !dbg !4900
  %3 = load i8, i8* %1, align 1, !dbg !4901
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4902

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4903
  call void @llvm.dbg.value(metadata i8* %5, metadata !4899, metadata !DIExpression()), !dbg !4900
  %6 = load i8, i8* %5, align 1, !dbg !4906
  %7 = icmp eq i8 %6, 104, !dbg !4907
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4908
  %9 = load i24, i24* %8, align 4, !dbg !4908
  %10 = and i24 %9, -30721, !dbg !4908
  br i1 %7, label %11, label %14, !dbg !4909

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4910
  store i24 %12, i24* %8, align 4, !dbg !4910
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %13, metadata !4899, metadata !DIExpression()), !dbg !4900
  br label %56, !dbg !4913

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4914
  store i24 %15, i24* %8, align 4, !dbg !4914
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %17, metadata !4899, metadata !DIExpression()), !dbg !4900
  %18 = load i8, i8* %17, align 1, !dbg !4918
  %19 = icmp eq i8 %18, 108, !dbg !4919
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4920
  %21 = load i24, i24* %20, align 4, !dbg !4920
  %22 = and i24 %21, -30721, !dbg !4920
  br i1 %19, label %23, label %26, !dbg !4921

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4922
  store i24 %24, i24* %20, align 4, !dbg !4922
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4924
  call void @llvm.dbg.value(metadata i8* %25, metadata !4899, metadata !DIExpression()), !dbg !4900
  br label %56, !dbg !4925

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4926
  store i24 %27, i24* %20, align 4, !dbg !4926
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4928
  %30 = load i24, i24* %29, align 4, !dbg !4929
  %31 = and i24 %30, -30721, !dbg !4929
  %32 = or i24 %31, 10240, !dbg !4929
  store i24 %32, i24* %29, align 4, !dbg !4929
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4930
  call void @llvm.dbg.value(metadata i8* %33, metadata !4899, metadata !DIExpression()), !dbg !4900
  br label %56, !dbg !4931

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4932
  %36 = load i24, i24* %35, align 4, !dbg !4933
  %37 = and i24 %36, -30721, !dbg !4933
  %38 = or i24 %37, 12288, !dbg !4933
  store i24 %38, i24* %35, align 4, !dbg !4933
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4934
  call void @llvm.dbg.value(metadata i8* %39, metadata !4899, metadata !DIExpression()), !dbg !4900
  br label %56, !dbg !4935

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4936
  %42 = load i24, i24* %41, align 4, !dbg !4937
  %43 = and i24 %42, -30721, !dbg !4937
  %44 = or i24 %43, 14336, !dbg !4937
  store i24 %44, i24* %41, align 4, !dbg !4937
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4938
  call void @llvm.dbg.value(metadata i8* %45, metadata !4899, metadata !DIExpression()), !dbg !4900
  br label %56, !dbg !4939

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4940
  %48 = load i24, i24* %47, align 4, !dbg !4941
  %49 = and i24 %48, -30723, !dbg !4941
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4942
  call void @llvm.dbg.value(metadata i8* %50, metadata !4899, metadata !DIExpression()), !dbg !4900
  %51 = or i24 %49, 16386, !dbg !4943
  store i24 %51, i24* %47, align 4, !dbg !4943
  br label %56, !dbg !4944

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4945
  %54 = load i24, i24* %53, align 4, !dbg !4946
  %55 = and i24 %54, -30721, !dbg !4946
  store i24 %55, i24* %53, align 4, !dbg !4946
  br label %56, !dbg !4947

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4899, metadata !DIExpression()), !dbg !4900
  ret i8* %57, !dbg !4948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !4949 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4951, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i8* %1, metadata !4952, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i8 0, metadata !4953, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i8* %1, metadata !4952, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4956
  %3 = load i8, i8* %1, align 1, !dbg !4957
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4958
  store i8 %3, i8* %4, align 1, !dbg !4959
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4960

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4961

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4962
  %9 = load i24, i24* %8, align 4, !dbg !4962
  %10 = and i24 %9, -458753, !dbg !4962
  %11 = or i24 %10, %7, !dbg !4962
  call void @llvm.dbg.label(metadata !4954), !dbg !4963
  %12 = and i24 %9, 30720, !dbg !4964
  %13 = icmp eq i24 %12, 16384, !dbg !4964
  %14 = zext i1 %13 to i24, !dbg !4966
  %15 = or i24 %11, %14, !dbg !4966
  %16 = icmp eq i8 %3, 99, !dbg !4967
  br i1 %16, label %17, label %43, !dbg !4969

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4970
  %19 = icmp ne i24 %18, 0, !dbg !4970
  call void @llvm.dbg.value(metadata i1 %19, metadata !4953, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4956
  br label %43, !dbg !4972

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4973
  %22 = load i24, i24* %21, align 4, !dbg !4974
  %23 = and i24 %22, -458753, !dbg !4974
  %24 = or i24 %23, 262144, !dbg !4974
  call void @llvm.dbg.value(metadata i8 1, metadata !4953, metadata !DIExpression()), !dbg !4956
  br label %43, !dbg !4975

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4978
  %27 = load i24, i24* %26, align 4, !dbg !4979
  %28 = and i24 %27, -458753, !dbg !4979
  %29 = or i24 %28, 196608, !dbg !4979
  %30 = and i24 %27, 30720, !dbg !4980
  %31 = icmp eq i24 %30, 16384, !dbg !4980
  br label %43, !dbg !4982

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4983
  %34 = load i24, i24* %33, align 4, !dbg !4984
  %35 = and i24 %34, -458753, !dbg !4984
  %36 = or i24 %35, 196608, !dbg !4984
  %37 = and i24 %34, 30720, !dbg !4985
  %38 = icmp ne i24 %37, 0, !dbg !4985
  br label %43, !dbg !4987

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4988
  %41 = load i24, i24* %40, align 4, !dbg !4989
  %42 = or i24 %41, 1, !dbg !4989
  br label %43, !dbg !4990

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4991
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4992
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %48, metadata !4952, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i8 poison, metadata !4953, metadata !DIExpression()), !dbg !4956
  %49 = lshr i24 %44, 1, !dbg !4991
  %50 = and i24 %49, 1, !dbg !4991
  %51 = zext i24 %50 to i32, !dbg !4991
  %52 = or i32 %51, %47, !dbg !4991
  %53 = trunc i32 %52 to i24, !dbg !4991
  %54 = shl nuw nsw i24 %53, 1, !dbg !4991
  %55 = and i24 %44, -3, !dbg !4991
  %56 = or i24 %54, %55, !dbg !4991
  store i24 %56, i24* %46, align 4, !dbg !4991
  ret i8* %48, !dbg !4994
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !4995 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4999, metadata !DIExpression()), !dbg !5002
  %2 = load i8*, i8** %0, align 4, !dbg !5003
  call void @llvm.dbg.value(metadata i8* %2, metadata !5000, metadata !DIExpression()), !dbg !5002
  call void @llvm.dbg.value(metadata i32 0, metadata !5001, metadata !DIExpression()), !dbg !5002
  %3 = load i8, i8* %2, align 1, !dbg !5004
  %4 = zext i8 %3 to i32, !dbg !5005
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #21, !dbg !5006
  %6 = icmp eq i32 %5, 0, !dbg !5007
  br i1 %6, label %19, label %7, !dbg !5007

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5001, metadata !DIExpression()), !dbg !5002
  call void @llvm.dbg.value(metadata i8* %10, metadata !5000, metadata !DIExpression()), !dbg !5002
  %11 = mul i32 %9, 10, !dbg !5008
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5010
  call void @llvm.dbg.value(metadata i8* %12, metadata !5000, metadata !DIExpression()), !dbg !5002
  %13 = add i32 %11, -48, !dbg !5011
  %14 = add i32 %13, %8, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %14, metadata !5001, metadata !DIExpression()), !dbg !5002
  %15 = load i8, i8* %12, align 1, !dbg !5004
  %16 = zext i8 %15 to i32, !dbg !5005
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #21, !dbg !5006
  %18 = icmp eq i32 %17, 0, !dbg !5007
  br i1 %18, label %19, label %7, !dbg !5007, !llvm.loop !5013

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5002
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5002
  store i8* %20, i8** %0, align 4, !dbg !5015
  ret i32 %21, !dbg !5016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5019, metadata !DIExpression()), !dbg !5020
  %2 = add i32 %0, -48, !dbg !5021
  %3 = icmp ult i32 %2, 10, !dbg !5022
  %4 = zext i1 %3 to i32, !dbg !5022
  ret i32 %4, !dbg !5023
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5029, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i32 %1, metadata !5030, metadata !DIExpression()), !dbg !5031
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #20, !dbg !5032, !srcloc !5034
  ret void, !dbg !5035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5036 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5038, metadata !DIExpression()), !dbg !5046
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5047
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5047
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5039, metadata !DIExpression()), !dbg !5048
  call void @llvm.va_start(i8* nonnull %3), !dbg !5049
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5050
  %5 = load i32, i32* %4, align 4, !dbg !5050
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5050
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #22, !dbg !5050
  call void @llvm.va_end(i8* nonnull %3), !dbg !5051
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5052
  ret void, !dbg !5052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5053 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #20, !dbg !5055, !srcloc !5056
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #20, !dbg !5057, !srcloc !5058
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #20, !dbg !5059, !srcloc !5060
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #20, !dbg !5061, !srcloc !5062
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #20, !dbg !5063, !srcloc !5064
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #20, !dbg !5065, !srcloc !5066
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #20, !dbg !5067, !srcloc !5068
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #20, !dbg !5069, !srcloc !5070
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #20, !dbg !5071, !srcloc !5072
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #20, !dbg !5073, !srcloc !5074
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #20, !dbg !5075, !srcloc !5076
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #20, !dbg !5077, !srcloc !5078
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #20, !dbg !5079, !srcloc !5080
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #20, !dbg !5081, !srcloc !5082
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #20, !dbg !5083, !srcloc !5084
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #20, !dbg !5085, !srcloc !5086
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #20, !dbg !5087, !srcloc !5088
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #20, !dbg !5089, !srcloc !5090
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #20, !dbg !5091, !srcloc !5092
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #20, !dbg !5093, !srcloc !5094
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #20, !dbg !5095, !srcloc !5096
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #20, !dbg !5097, !srcloc !5098
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #20, !dbg !5099, !srcloc !5100
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #20, !dbg !5101, !srcloc !5102
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #20, !dbg !5103, !srcloc !5104
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #20, !dbg !5105, !srcloc !5106
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #20, !dbg !5107, !srcloc !5108
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #20, !dbg !5109, !srcloc !5110
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #20, !dbg !5111, !srcloc !5112
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #20, !dbg !5113, !srcloc !5114
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #20, !dbg !5115, !srcloc !5116
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #20, !dbg !5117, !srcloc !5118
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #20, !dbg !5119, !srcloc !5120
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #20, !dbg !5121, !srcloc !5122
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #20, !dbg !5123, !srcloc !5124
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #20, !dbg !5125, !srcloc !5126
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #20, !dbg !5127, !srcloc !5128
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #20, !dbg !5129, !srcloc !5130
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #20, !dbg !5131, !srcloc !5132
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #20, !dbg !5133, !srcloc !5134
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #20, !dbg !5135, !srcloc !5136
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #20, !dbg !5137, !srcloc !5138
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #20, !dbg !5139, !srcloc !5140
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #20, !dbg !5141, !srcloc !5142
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #20, !dbg !5143, !srcloc !5144
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #20, !dbg !5145, !srcloc !5146
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #20, !dbg !5147, !srcloc !5148
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #20, !dbg !5149, !srcloc !5150
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #20, !dbg !5151, !srcloc !5152
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #20, !dbg !5153, !srcloc !5154
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #20, !dbg !5155, !srcloc !5156
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #20, !dbg !5157, !srcloc !5158
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #20, !dbg !5159, !srcloc !5160
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #20, !dbg !5161, !srcloc !5162
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #20, !dbg !5163, !srcloc !5164
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #20, !dbg !5165, !srcloc !5166
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #20, !dbg !5167, !srcloc !5168
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #20, !dbg !5169, !srcloc !5170
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #20, !dbg !5171, !srcloc !5172
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #20, !dbg !5173, !srcloc !5174
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #20, !dbg !5175, !srcloc !5176
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #20, !dbg !5177, !srcloc !5178
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #20, !dbg !5179, !srcloc !5180
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #20, !dbg !5181, !srcloc !5182
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #20, !dbg !5183, !srcloc !5184
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #20, !dbg !5185, !srcloc !5186
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #20, !dbg !5187, !srcloc !5188
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #20, !dbg !5189, !srcloc !5190
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #20, !dbg !5191, !srcloc !5192
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #20, !dbg !5193, !srcloc !5194
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #20, !dbg !5195, !srcloc !5196
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #20, !dbg !5197, !srcloc !5198
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #20, !dbg !5199, !srcloc !5200
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #20, !dbg !5201, !srcloc !5202
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #20, !dbg !5203, !srcloc !5204
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #20, !dbg !5205, !srcloc !5206
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #20, !dbg !5207, !srcloc !5208
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #20, !dbg !5209, !srcloc !5210
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #20, !dbg !5211, !srcloc !5212
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #20, !dbg !5213, !srcloc !5214
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #20, !dbg !5215, !srcloc !5216
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #20, !dbg !5217, !srcloc !5218
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #20, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #20, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #20, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #20, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #20, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #20, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #20, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #20, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #20, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #20, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #20, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #20, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #20, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #20, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #20, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #20, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #20, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #20, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #20, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #20, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #20, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #20, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #20, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #20, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #20, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #20, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #20, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #20, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #20, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #20, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #20, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #20, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #20, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #20, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #20, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #20, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #20, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #20, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #20, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #20, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #20, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #20, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #20, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #20, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #20, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #20, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #20, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #20, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #20, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #20, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #20, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #20, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #20, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #20, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #20, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #20, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #20, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #20, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #20, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #20, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #20, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #20, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #20, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #20, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #20, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #20, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #20, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #20, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #20, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #20, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #20, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #20, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #20, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #20, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #20, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #20, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #20, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #20, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #20, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #20, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #20, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #20, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #20, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #20, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #20, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #20, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #20, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #20, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #20, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #20, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #20, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #20, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #20, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #20, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #20, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #20, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #20, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #20, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #20, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #20, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #20, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #20, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #20, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #20, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #20, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #20, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #20, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #20, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #20, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #20, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #20, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #20, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #20, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #20, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #20, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #20, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #20, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #20, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #20, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #20, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #20, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #20, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #20, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #20, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #20, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #20, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #20, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #20, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #20, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #20, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #20, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #20, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #20, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #20, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #20, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #20, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #20, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #20, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #20, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #20, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #20, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #20, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #20, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #20, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #20, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #20, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #20, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #20, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #20, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #20, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #20, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #20, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #20, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #20, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #20, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #20, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #20, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #20, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #20, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #20, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #20, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #20, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #20, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #20, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #20, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #20, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #20, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #20, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #20, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #20, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #20, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #20, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #20, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #20, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #20, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #20, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #20, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #20, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #20, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #20, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #20, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #20, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #20, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #20, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #20, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #20, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #20, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #20, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #20, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #20, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #20, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #20, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #20, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #20, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #20, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #20, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #20, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #20, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #20, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #20, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #20, !dbg !5625, !srcloc !5626
  ret void, !dbg !5627
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5630, metadata !DIExpression()), !dbg !5631
  tail call void @SOC_RdcInit() #21, !dbg !5632
  tail call void @SOC_ClockInit() #21, !dbg !5633
  tail call fastcc void @nxp_mcimx7_gpio_config() #21, !dbg !5634
  ret i32 0, !dbg !5635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #14 !dbg !5636 {
  tail call fastcc void @RDC_SetDomainID() #21, !dbg !5637
  ret void, !dbg !5638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !5639 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #22, !dbg !5640
  tail call fastcc void @CCM_EnableRoot() #21, !dbg !5641
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #21, !dbg !5642
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #21, !dbg !5643
  tail call fastcc void @WDOG_DisablePowerdown() #21, !dbg !5644
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #21, !dbg !5645
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #21, !dbg !5646
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #21, !dbg !5647
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #21, !dbg !5648
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #21, !dbg !5649
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #21, !dbg !5650
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #21, !dbg !5651
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #21, !dbg !5652
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #21, !dbg !5653
  ret void, !dbg !5654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #14 !dbg !5655 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #21, !dbg !5656
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #21, !dbg !5657
  ret void, !dbg !5658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !5659 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5664, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i32 %0, metadata !5665, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i8 %1, metadata !5666, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i8 0, metadata !5667, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i8 0, metadata !5668, metadata !DIExpression()), !dbg !5669
  %3 = zext i8 %1 to i32, !dbg !5670
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !5671
  store volatile i32 %3, i32* %4, align 4, !dbg !5672
  ret void, !dbg !5673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5674 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5678, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.value(metadata i32 %0, metadata !5679, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.value(metadata i32 %1, metadata !5680, metadata !DIExpression()), !dbg !5681
  %3 = inttoptr i32 %0 to i32*, !dbg !5682
  store volatile i32 %1, i32* %3, align 4, !dbg !5683
  ret void, !dbg !5684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #14 !dbg !5685 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5689, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.value(metadata i32 809024384, metadata !5690, metadata !DIExpression()), !dbg !5691
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !5692
  ret void, !dbg !5693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #14 !dbg !5694 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !5699, metadata !DIExpression()), !dbg !5700
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5701
  %2 = and i16 %1, -2, !dbg !5701
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5701
  ret void, !dbg !5702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #14 !dbg !5703 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5707, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i32 1, metadata !5708, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i32 1, metadata !5709, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i8 0, metadata !5710, metadata !DIExpression()), !dbg !5711
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !5712
  ret void, !dbg !5713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5714 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5717, metadata !DIExpression()), !dbg !5725
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5726
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5718, metadata !DIExpression()), !dbg !5727
  call void @llvm.va_start(i8* nonnull %3), !dbg !5728
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5729
  %5 = load i32, i32* %4, align 4, !dbg !5729
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5729
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #22, !dbg !5729
  call void @llvm.va_end(i8* nonnull %3), !dbg !5730
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5731
  ret void, !dbg !5731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5732 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.value(metadata i8* %0, metadata !5736, metadata !DIExpression()), !dbg !5738
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #22, !dbg !5739
  ret void, !dbg !5740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5745, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.value(metadata i8* %1, metadata !5746, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.value(metadata i32 %2, metadata !5747, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.value(metadata i8* %1, metadata !5748, metadata !DIExpression()), !dbg !5749
  %4 = icmp eq i32 %2, 0, !dbg !5750
  br i1 %4, label %14, label %5, !dbg !5751

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #21, !dbg !5749
  %7 = zext i8 %6 to i32
  br label %8, !dbg !5751

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5748, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.value(metadata i32 %10, metadata !5747, metadata !DIExpression()), !dbg !5749
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #22, !dbg !5752
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #21, !dbg !5754
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %11, metadata !5747, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.value(metadata i8* %12, metadata !5748, metadata !DIExpression()), !dbg !5749
  br i1 %13, label %14, label %8, !dbg !5755, !llvm.loop !5756

14:                                               ; preds = %8, %3
  ret void, !dbg !5758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !5759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5764, metadata !DIExpression()), !dbg !5765
  %2 = add i32 %0, -1, !dbg !5766
  %3 = icmp ult i32 %2, 4, !dbg !5766
  %4 = shl i32 %2, 3, !dbg !5766
  %5 = lshr i32 1145657157, %4, !dbg !5766
  %6 = trunc i32 %5 to i8, !dbg !5766
  %7 = select i1 %3, i8 %6, i8 63, !dbg !5766
  ret i8 %7, !dbg !5767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !5768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5772, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i32 %1, metadata !5773, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i32 0, metadata !5774, metadata !DIExpression()), !dbg !5784
  br label %4, !dbg !5785

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #22, !dbg !5786
  call void @llvm.dbg.value(metadata i32 0, metadata !5776, metadata !DIExpression()), !dbg !5787
  br label %16, !dbg !5788

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5774, metadata !DIExpression()), !dbg !5784
  %6 = icmp ult i32 %5, %1, !dbg !5789
  br i1 %6, label %7, label %11, !dbg !5793

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5794
  %9 = load i8, i8* %8, align 1, !dbg !5794
  %10 = zext i8 %9 to i32, !dbg !5796
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #22, !dbg !5797
  br label %12, !dbg !5798

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #22, !dbg !5799
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !5801
  call void @llvm.dbg.value(metadata i32 %13, metadata !5774, metadata !DIExpression()), !dbg !5784
  %14 = icmp eq i32 %13, 8, !dbg !5802
  br i1 %14, label %3, label %4, !dbg !5785, !llvm.loop !5803

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #22, !dbg !5805
  ret void, !dbg !5806

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5776, metadata !DIExpression()), !dbg !5787
  %18 = icmp ult i32 %17, %1, !dbg !5807
  br i1 %18, label %19, label %26, !dbg !5808

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !5809
  %21 = load i8, i8* %20, align 1, !dbg !5809
  call void @llvm.dbg.value(metadata i8 %21, metadata !5778, metadata !DIExpression()), !dbg !5810
  %22 = zext i8 %21 to i32, !dbg !5811
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #21, !dbg !5812
  %24 = icmp eq i32 %23, 0, !dbg !5813
  %25 = select i1 %24, i32 46, i32 %22, !dbg !5812
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #22, !dbg !5814
  br label %27, !dbg !5815

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #22, !dbg !5816
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !5818
  call void @llvm.dbg.value(metadata i32 %28, metadata !5776, metadata !DIExpression()), !dbg !5787
  %29 = icmp eq i32 %28, 8, !dbg !5819
  br i1 %29, label %15, label %16, !dbg !5788, !llvm.loop !5820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !5822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5824, metadata !DIExpression()), !dbg !5825
  %2 = add i32 %0, -32, !dbg !5826
  %3 = icmp ult i32 %2, 95, !dbg !5826
  %4 = zext i1 %3 to i32, !dbg !5826
  ret i32 %4, !dbg !5827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5877, metadata !DIExpression()), !dbg !5879
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5878, metadata !DIExpression()), !dbg !5879
  %3 = icmp eq %struct.__esf* %1, null, !dbg !5880
  br i1 %3, label %5, label %4, !dbg !5882

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #21, !dbg !5883
  br label %5, !dbg !5885

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #22, !dbg !5886
  ret void, !dbg !5887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5888 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5892, metadata !DIExpression()), !dbg !5893
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5894
  %3 = load i32, i32* %2, align 4, !dbg !5894
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5894
  %5 = load i32, i32* %4, align 4, !dbg !5894
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5894
  %7 = load i32, i32* %6, align 4, !dbg !5894
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #22, !dbg !5894
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !5899
  %9 = load i32, i32* %8, align 4, !dbg !5899
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !5899
  %11 = load i32, i32* %10, align 4, !dbg !5899
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !5899
  %13 = load i32, i32* %12, align 4, !dbg !5899
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #22, !dbg !5899
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !5904
  %15 = load i32, i32* %14, align 4, !dbg !5904
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #22, !dbg !5904
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5909
  %17 = load i32, i32* %16, align 4, !dbg !5909
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #22, !dbg !5909
  ret void, !dbg !5914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5915 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5932, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5933, metadata !DIExpression()), !dbg !5935
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5936
  %4 = load i32, i32* %3, align 4, !dbg !5936
  call void @llvm.dbg.value(metadata i32 %4, metadata !5934, metadata !DIExpression()), !dbg !5935
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #21, !dbg !5937
  ret void, !dbg !5938
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !5939 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5941, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.value(metadata i8* %0, metadata !5942, metadata !DIExpression()), !dbg !5944
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5945
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #20, !dbg !5945
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5943, metadata !DIExpression()), !dbg !5946
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5946
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5947
  %5 = bitcast i8* %4 to i32*, !dbg !5947
  %6 = load i32, i32* %5, align 4, !dbg !5947
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5948
  store i32 %6, i32* %7, align 4, !dbg !5949
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #21, !dbg !5950
  unreachable, !dbg !5951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5957, metadata !DIExpression()), !dbg !5958
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !5959
  ret void, !dbg !5960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5965, metadata !DIExpression()), !dbg !5966
  %2 = icmp sgt i32 %0, -1, !dbg !5967
  br i1 %2, label %3, label %8, !dbg !5969

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !5970, !srcloc !5972
  %4 = and i32 %0, 31, !dbg !5973
  %5 = shl nuw i32 1, %4, !dbg !5974
  %6 = lshr i32 %0, 5, !dbg !5975
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5976
  store volatile i32 %5, i32* %7, align 4, !dbg !5977
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !5978, !srcloc !5979
  br label %8, !dbg !5980

8:                                                ; preds = %3, %1
  ret void, !dbg !5981
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5984, metadata !DIExpression()), !dbg !5985
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !5986
  ret void, !dbg !5987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5990, metadata !DIExpression()), !dbg !5991
  %2 = icmp sgt i32 %0, -1, !dbg !5992
  br i1 %2, label %3, label %8, !dbg !5994

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5995
  %5 = shl nuw i32 1, %4, !dbg !5997
  %6 = lshr i32 %0, 5, !dbg !5998
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5999
  store volatile i32 %5, i32* %7, align 4, !dbg !6000
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6001, !srcloc !6005
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6006, !srcloc !6009
  br label %8, !dbg !6010

8:                                                ; preds = %3, %1
  ret void, !dbg !6011
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6016, metadata !DIExpression()), !dbg !6017
  %2 = lshr i32 %0, 5, !dbg !6018
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6019
  %4 = load volatile i32, i32* %3, align 4, !dbg !6019
  %5 = and i32 %0, 31, !dbg !6020
  %6 = shl nuw i32 1, %5, !dbg !6020
  %7 = and i32 %4, %6, !dbg !6021
  ret i32 %7, !dbg !6022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6027, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i32 %1, metadata !6028, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i32 %2, metadata !6029, metadata !DIExpression()), !dbg !6030
  %4 = add i32 %1, 1, !dbg !6031
  call void @llvm.dbg.value(metadata i32 %4, metadata !6028, metadata !DIExpression()), !dbg !6030
  %5 = icmp ult i32 %4, 16, !dbg !6034
  br i1 %5, label %7, label %6, !dbg !6037

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 94) #22, !dbg !6038
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.35, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #22, !dbg !6038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 94) #22, !dbg !6038
  unreachable, !dbg !6038

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #21, !dbg !6040
  ret void, !dbg !6041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6046, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.value(metadata i32 %1, metadata !6047, metadata !DIExpression()), !dbg !6048
  %3 = trunc i32 %1 to i8, !dbg !6049
  %4 = shl i8 %3, 4, !dbg !6049
  %5 = and i32 %0, 15, !dbg !6051
  %6 = add nsw i32 %5, -4, !dbg !6051
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6051
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6051
  %9 = icmp slt i32 %0, 0, !dbg !6051
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6051
  store volatile i8 %4, i8* %10, align 1, !dbg !6049
  ret void, !dbg !6052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6055, metadata !DIExpression()), !dbg !6056
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #22, !dbg !6057
  ret void, !dbg !6058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6059 {
  tail call void @z_SysNmiOnReset() #22, !dbg !6061
  tail call void @z_arm_int_exit() #22, !dbg !6062
  ret void, !dbg !6063
}

; Function Attrs: optsize
declare !dbg !6064 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6065 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6067 {
  tail call fastcc void @relocate_vector_table() #21, !dbg !6069
  tail call fastcc void @z_arm_floating_point_init() #21, !dbg !6070
  tail call void @z_bss_zero() #22, !dbg !6071
  tail call void @z_data_copy() #22, !dbg !6072
  tail call void @z_arm_interrupt_init() #22, !dbg !6073
  tail call void @z_cstart() #24, !dbg !6074
  unreachable, !dbg !6074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6075 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6076
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6077, !srcloc !6080
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6081, !srcloc !6084
  ret void, !dbg !6085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6086 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6087
  %2 = and i32 %1, -15728641, !dbg !6087
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6087
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #20, !dbg !6088, !srcloc !6095
  call void @llvm.dbg.value(metadata i32 %3, metadata !6093, metadata !DIExpression()) #20, !dbg !6096
  %4 = and i32 %3, -5, !dbg !6097
  call void @llvm.dbg.value(metadata i32 %4, metadata !6098, metadata !DIExpression()) #20, !dbg !6103
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #20, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6107, !srcloc !6084
  ret void, !dbg !6109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6113, metadata !DIExpression()), !dbg !6114
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6115
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6116
  store i32 %0, i32* %3, align 8, !dbg !6117
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6118
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6119
  store i32 %4, i32* %5, align 4, !dbg !6120
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6121
  %7 = or i32 %6, 268435456, !dbg !6121
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6121
  call void @llvm.dbg.value(metadata i32 0, metadata !6122, metadata !DIExpression()) #20, !dbg !6126
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #20, !dbg !6128, !srcloc !6129
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6130
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6131
  %10 = load i32, i32* %9, align 4, !dbg !6131
  ret i32 %10, !dbg !6132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6133 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6240, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6241, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %2, metadata !6242, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6243, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %4, metadata !6244, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %5, metadata !6245, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %6, metadata !6246, metadata !DIExpression()), !dbg !6248
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6249
  call void @llvm.dbg.value(metadata i8* %8, metadata !6247, metadata !DIExpression()), !dbg !6248
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6250
  %10 = bitcast i8* %9 to i32*, !dbg !6250
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6251
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6252
  %12 = bitcast i8* %8 to i32*, !dbg !6253
  store i32 %11, i32* %12, align 4, !dbg !6254
  %13 = ptrtoint i8* %4 to i32, !dbg !6255
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6256
  %15 = bitcast i8* %14 to i32*, !dbg !6256
  store i32 %13, i32* %15, align 4, !dbg !6257
  %16 = ptrtoint i8* %5 to i32, !dbg !6258
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6259
  %18 = bitcast i8* %17 to i32*, !dbg !6259
  store i32 %16, i32* %18, align 4, !dbg !6260
  %19 = ptrtoint i8* %6 to i32, !dbg !6261
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6262
  %21 = bitcast i8* %20 to i32*, !dbg !6262
  store i32 %19, i32* %21, align 4, !dbg !6263
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6264
  %23 = bitcast i8* %22 to i32*, !dbg !6264
  store i32 16777216, i32* %23, align 4, !dbg !6265
  %24 = ptrtoint i8* %8 to i32, !dbg !6266
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6267
  store i32 %24, i32* %25, align 8, !dbg !6268
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6269
  store i32 0, i32* %26, align 8, !dbg !6270
  ret void, !dbg !6271
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6276, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata i8* %1, metadata !6277, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6278, metadata !DIExpression()), !dbg !6279
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6280
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #20, !dbg !6281, !srcloc !6282
  unreachable, !dbg !6283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6284 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6302, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.value(metadata i32 %1, metadata !6303, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.value(metadata i32 %2, metadata !6304, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6305, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.value(metadata i32 0, metadata !6306, metadata !DIExpression()), !dbg !6312
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %8, metadata !6307, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6312
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #20, !dbg !6314
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #20, !dbg !6314
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6315
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #20, !dbg !6315
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6311, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()) #20, !dbg !6320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #20, !dbg !6322, !srcloc !6323
  call void @llvm.dbg.value(metadata i8* %6, metadata !6309, metadata !DIExpression(DW_OP_deref)), !dbg !6312
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #21, !dbg !6324
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6310, metadata !DIExpression()), !dbg !6312
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6325
  br i1 %11, label %12, label %13, !dbg !6328

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 1057) #22, !dbg !6329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.41, i32 0, i32 0)) #22, !dbg !6329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 1057) #22, !dbg !6329
  unreachable, !dbg !6329

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6331
  call void @llvm.dbg.value(metadata i32 %14, metadata !6307, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.value(metadata i8* %5, metadata !6308, metadata !DIExpression(DW_OP_deref)), !dbg !6312
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #21, !dbg !6332
  call void @llvm.dbg.value(metadata i32 %15, metadata !6306, metadata !DIExpression()), !dbg !6312
  %16 = load i8, i8* %5, align 1, !dbg !6333, !range !6335
  call void @llvm.dbg.value(metadata i8 %16, metadata !6308, metadata !DIExpression()), !dbg !6312
  %17 = icmp eq i8 %16, 0, !dbg !6333
  br i1 %17, label %18, label %35, !dbg !6336

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6337
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #22, !dbg !6338
  %21 = load i8, i8* %6, align 1, !dbg !6339, !range !6335
  call void @llvm.dbg.value(metadata i8 %21, metadata !6309, metadata !DIExpression()), !dbg !6312
  %22 = icmp eq i8 %21, 0, !dbg !6339
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6341
  %24 = load i32, i32* %23, align 4, !dbg !6341
  br i1 %22, label %30, label %25, !dbg !6342

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6343
  %27 = icmp eq i32 %26, 0, !dbg !6346
  br i1 %27, label %28, label %34, !dbg !6347

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6348
  br label %32, !dbg !6350

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6351
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6341
  br label %34, !dbg !6353

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #22, !dbg !6353
  br label %35, !dbg !6354

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #20, !dbg !6354
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #20, !dbg !6354
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #20, !dbg !6354
  ret void, !dbg !6354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6360, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i32 %1, metadata !6361, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i32 %2, metadata !6362, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i8* %3, metadata !6363, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i8 0, metadata !6364, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6365, metadata !DIExpression()), !dbg !6366
  store i8 0, i8* %3, align 1, !dbg !6367
  %5 = icmp ugt i32 %2, -16777217, !dbg !6368
  br i1 %5, label %6, label %17, !dbg !6370

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6371
  %8 = icmp eq i32 %7, 8, !dbg !6371
  br i1 %8, label %9, label %10, !dbg !6371

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #22, !dbg !6373
  br label %17, !dbg !6379

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6380
  %12 = icmp eq i32 %11, 0, !dbg !6380
  br i1 %12, label %13, label %14, !dbg !6381

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6365, metadata !DIExpression()), !dbg !6366
  store i8 1, i8* %3, align 1, !dbg !6384
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6366
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6365, metadata !DIExpression()), !dbg !6366
  br label %17, !dbg !6387

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6366
  ret %struct.__esf* %18, !dbg !6388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6389 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6393, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.value(metadata i32 %1, metadata !6394, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.value(metadata i8* %2, metadata !6395, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.value(metadata i32 0, metadata !6396, metadata !DIExpression()), !dbg !6397
  store i8 0, i8* %2, align 1, !dbg !6398
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !6399

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #21, !dbg !6400
  call void @llvm.dbg.value(metadata i32 %5, metadata !6396, metadata !DIExpression()), !dbg !6397
  br label %11, !dbg !6402

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #21, !dbg !6403
  call void @llvm.dbg.value(metadata i32 0, metadata !6396, metadata !DIExpression()), !dbg !6397
  br label %11, !dbg !6404

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #21, !dbg !6405
  call void @llvm.dbg.value(metadata i32 0, metadata !6396, metadata !DIExpression()), !dbg !6397
  br label %11, !dbg !6406

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #21, !dbg !6407
  call void @llvm.dbg.value(metadata i32 0, metadata !6396, metadata !DIExpression()), !dbg !6397
  br label %11, !dbg !6408

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #21, !dbg !6409
  br label %11, !dbg !6410

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #21, !dbg !6411
  br label %11, !dbg !6412

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !6397
  call void @llvm.dbg.value(metadata i32 %12, metadata !6396, metadata !DIExpression()), !dbg !6397
  ret i32 %12, !dbg !6413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6414 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6418, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8* %1, metadata !6419, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 0, metadata !6420, metadata !DIExpression()), !dbg !6421
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #22, !dbg !6422
  store i8 0, i8* %1, align 1, !dbg !6427
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6428
  %4 = and i32 %3, 2, !dbg !6430
  %5 = icmp eq i32 %4, 0, !dbg !6431
  br i1 %5, label %7, label %6, !dbg !6432

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #22, !dbg !6433
  br label %37, !dbg !6439

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6440
  %9 = icmp sgt i32 %8, -1, !dbg !6442
  br i1 %9, label %11, label %10, !dbg !6443

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #22, !dbg !6444
  br label %37, !dbg !6450

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6451
  %13 = and i32 %12, 1073741824, !dbg !6453
  %14 = icmp eq i32 %13, 0, !dbg !6454
  br i1 %14, label %36, label %15, !dbg !6455

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #22, !dbg !6456
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #21, !dbg !6462
  br i1 %16, label %17, label %21, !dbg !6464

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6465
  %19 = load i32, i32* %18, align 4, !dbg !6465
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #22, !dbg !6465
  %20 = load i32, i32* %18, align 4, !dbg !6471
  call void @llvm.dbg.value(metadata i32 %20, metadata !6420, metadata !DIExpression()), !dbg !6421
  br label %37, !dbg !6472

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6473
  %23 = and i32 %22, 255, !dbg !6475
  %24 = icmp eq i32 %23, 0, !dbg !6476
  br i1 %24, label %26, label %25, !dbg !6477

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #21, !dbg !6478
  call void @llvm.dbg.value(metadata i32 0, metadata !6420, metadata !DIExpression()), !dbg !6421
  br label %37, !dbg !6480

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6481
  %28 = and i32 %27, 65280, !dbg !6483
  %29 = icmp eq i32 %28, 0, !dbg !6484
  br i1 %29, label %31, label %30, !dbg !6485

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #21, !dbg !6486
  call void @llvm.dbg.value(metadata i32 0, metadata !6420, metadata !DIExpression()), !dbg !6421
  br label %37, !dbg !6488

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6489
  %33 = icmp ult i32 %32, 65536, !dbg !6491
  br i1 %33, label %35, label %34, !dbg !6492

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #21, !dbg !6493
  call void @llvm.dbg.value(metadata i32 0, metadata !6420, metadata !DIExpression()), !dbg !6421
  br label %37

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 755) #22, !dbg !6495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #22, !dbg !6495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 755) #22, !dbg !6495
  unreachable, !dbg !6495

36:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 760) #22, !dbg !6500
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #22, !dbg !6500
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 760) #22, !dbg !6500
  unreachable, !dbg !6500

37:                                               ; preds = %10, %17, %30, %34, %25, %6
  %38 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], !dbg !6421
  call void @llvm.dbg.value(metadata i32 %38, metadata !6420, metadata !DIExpression()), !dbg !6421
  ret i32 %38, !dbg !6505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6506 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6508, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 %0, metadata !6509, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i8* %1, metadata !6510, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 0, metadata !6511, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 -22, metadata !6512, metadata !DIExpression()), !dbg !6516
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.45, i32 0, i32 0), i32 noundef 69) #22, !dbg !6517
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6522
  %4 = and i32 %3, 16, !dbg !6524
  %5 = icmp eq i32 %4, 0, !dbg !6525
  br i1 %5, label %7, label %6, !dbg !6526

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #22, !dbg !6527
  br label %7, !dbg !6533

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6534
  %9 = and i32 %8, 8, !dbg !6536
  %10 = icmp eq i32 %9, 0, !dbg !6537
  br i1 %10, label %12, label %11, !dbg !6538

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #22, !dbg !6539
  br label %12, !dbg !6545

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6546
  %14 = and i32 %13, 2, !dbg !6547
  %15 = icmp eq i32 %14, 0, !dbg !6548
  br i1 %15, label %26, label %16, !dbg !6549

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #22, !dbg !6550
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6555
  call void @llvm.dbg.value(metadata i32 %17, metadata !6513, metadata !DIExpression()), !dbg !6556
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6557
  %19 = and i32 %18, 128, !dbg !6559
  %20 = icmp eq i32 %19, 0, !dbg !6560
  br i1 %20, label %26, label %21, !dbg !6561

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !6512, metadata !DIExpression()), !dbg !6516
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #22, !dbg !6562
  %22 = icmp eq i32 %0, 0, !dbg !6568
  br i1 %22, label %26, label %23, !dbg !6570

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6571
  %25 = and i32 %24, -129, !dbg !6571
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6571
  br label %26, !dbg !6573

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !6512, metadata !DIExpression()), !dbg !6516
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6574
  %28 = and i32 %27, 1, !dbg !6576
  %29 = icmp eq i32 %28, 0, !dbg !6577
  br i1 %29, label %31, label %30, !dbg !6578

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #22, !dbg !6579
  br label %31, !dbg !6585

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6586
  %33 = and i32 %32, 32, !dbg !6588
  %34 = icmp eq i32 %33, 0, !dbg !6589
  br i1 %34, label %36, label %35, !dbg !6590

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #22, !dbg !6591
  br label %36, !dbg !6597

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6598
  %38 = and i32 %37, 16, !dbg !6600
  %39 = icmp eq i32 %38, 0, !dbg !6600
  br i1 %39, label %40, label %44, !dbg !6601

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6602
  %42 = and i32 %41, 2, !dbg !6603
  %43 = icmp eq i32 %42, 0, !dbg !6603
  br i1 %43, label %49, label %44, !dbg !6604

44:                                               ; preds = %40, %36
  %45 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6605
  %46 = and i32 %45, 16, !dbg !6605
  %47 = icmp eq i32 %46, 0, !dbg !6605
  br i1 %47, label %49, label %48, !dbg !6609

48:                                               ; preds = %44
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 350) #22, !dbg !6610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.21.46, i32 0, i32 0)) #22, !dbg !6610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 350) #22, !dbg !6610
  unreachable, !dbg !6610

49:                                               ; preds = %44, %40
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6612
  %51 = and i32 %50, 32, !dbg !6614
  %52 = icmp eq i32 %51, 0, !dbg !6615
  br i1 %52, label %56, label %53, !dbg !6616

53:                                               ; preds = %49
  %54 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6617
  %55 = and i32 %54, -8193, !dbg !6617
  store volatile i32 %55, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6617
  br label %56, !dbg !6619

56:                                               ; preds = %53, %49
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6620
  %58 = or i32 %57, 255, !dbg !6620
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6620
  store i8 0, i8* %1, align 1, !dbg !6621
  ret void, !dbg !6622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6623 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6627, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 %0, metadata !6628, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i8* %1, metadata !6629, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 0, metadata !6630, metadata !DIExpression()), !dbg !6634
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #22, !dbg !6635
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6640
  %4 = and i32 %3, 4096, !dbg !6642
  %5 = icmp eq i32 %4, 0, !dbg !6642
  br i1 %5, label %7, label %6, !dbg !6643

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #22, !dbg !6644
  br label %7, !dbg !6650

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6651
  %9 = and i32 %8, 2048, !dbg !6653
  %10 = icmp eq i32 %9, 0, !dbg !6653
  br i1 %10, label %12, label %11, !dbg !6654

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #22, !dbg !6655
  br label %12, !dbg !6661

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6662
  %14 = and i32 %13, 512, !dbg !6663
  %15 = icmp eq i32 %14, 0, !dbg !6663
  br i1 %15, label %26, label %16, !dbg !6664

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #22, !dbg !6665
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6670
  call void @llvm.dbg.value(metadata i32 %17, metadata !6631, metadata !DIExpression()), !dbg !6671
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6672
  %19 = and i32 %18, 32768, !dbg !6674
  %20 = icmp eq i32 %19, 0, !dbg !6675
  br i1 %20, label %26, label %21, !dbg !6676

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #22, !dbg !6677
  %22 = icmp eq i32 %0, 0, !dbg !6683
  br i1 %22, label %26, label %23, !dbg !6685

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6686
  %25 = and i32 %24, -32769, !dbg !6686
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6686
  br label %26, !dbg !6688

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6689
  %28 = and i32 %27, 1024, !dbg !6691
  %29 = icmp eq i32 %28, 0, !dbg !6691
  br i1 %29, label %31, label %30, !dbg !6692

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #22, !dbg !6693
  br label %31, !dbg !6699

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6700
  %33 = and i32 %32, 256, !dbg !6702
  %34 = icmp eq i32 %33, 0, !dbg !6703
  br i1 %34, label %35, label %39, !dbg !6704

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6705
  %37 = and i32 %36, 8192, !dbg !6707
  %38 = icmp eq i32 %37, 0, !dbg !6707
  br i1 %38, label %41, label %39, !dbg !6708

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #22, !dbg !6709
  br label %41, !dbg !6710

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6710
  %43 = or i32 %42, 65280, !dbg !6710
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6710
  store i8 0, i8* %1, align 1, !dbg !6711
  ret void, !dbg !6712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !6713 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6719, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata i32 0, metadata !6720, metadata !DIExpression()), !dbg !6721
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.43, i32 0, i32 0), i32 noundef 69) #22, !dbg !6722
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6727
  %2 = and i32 %1, 33554432, !dbg !6729
  %3 = icmp eq i32 %2, 0, !dbg !6730
  br i1 %3, label %5, label %4, !dbg !6731

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #22, !dbg !6732
  br label %5, !dbg !6738

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6739
  %7 = and i32 %6, 16777216, !dbg !6741
  %8 = icmp eq i32 %7, 0, !dbg !6742
  br i1 %8, label %10, label %9, !dbg !6743

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #22, !dbg !6744
  br label %10, !dbg !6750

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6751
  %12 = and i32 %11, 524288, !dbg !6753
  %13 = icmp eq i32 %12, 0, !dbg !6754
  br i1 %13, label %15, label %14, !dbg !6755

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #22, !dbg !6756
  br label %15, !dbg !6762

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6763
  %17 = and i32 %16, 262144, !dbg !6765
  %18 = icmp eq i32 %17, 0, !dbg !6766
  br i1 %18, label %20, label %19, !dbg !6767

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32.44, i32 0, i32 0), i32 noundef 69) #22, !dbg !6768
  br label %20, !dbg !6774

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6775
  %22 = and i32 %21, 131072, !dbg !6777
  %23 = icmp eq i32 %22, 0, !dbg !6778
  br i1 %23, label %25, label %24, !dbg !6779

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #22, !dbg !6780
  br label %25, !dbg !6786

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6787
  %27 = and i32 %26, 65536, !dbg !6789
  %28 = icmp eq i32 %27, 0, !dbg !6790
  br i1 %28, label %30, label %29, !dbg !6791

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #22, !dbg !6792
  br label %30, !dbg !6798

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6799
  %32 = or i32 %31, -65536, !dbg !6799
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6799
  ret void, !dbg !6800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !6801 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6805, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.value(metadata i8* %0, metadata !6806, metadata !DIExpression()), !dbg !6807
  store i8 0, i8* %0, align 1, !dbg !6808
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #22, !dbg !6809
  ret void, !dbg !6814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !6815 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6819, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.value(metadata i32 %0, metadata !6820, metadata !DIExpression()), !dbg !6821
  %2 = icmp slt i32 %0, 16, !dbg !6822
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38.42, i32 0, i32 0), !dbg !6822
  %4 = add nsw i32 %0, -16, !dbg !6822
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #22, !dbg !6822
  ret void, !dbg !6827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6828 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6832, metadata !DIExpression()), !dbg !6835
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6836
  %3 = load i32, i32* %2, align 4, !dbg !6836
  %4 = inttoptr i32 %3 to i16*, !dbg !6837
  call void @llvm.dbg.value(metadata i16* %4, metadata !6833, metadata !DIExpression()), !dbg !6835
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6838
  %6 = or i32 %5, 256, !dbg !6838
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6838
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6839, !srcloc !6842
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6843, !srcloc !6846
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6847
  %8 = load i16, i16* %7, align 2, !dbg !6848
  call void @llvm.dbg.value(metadata i16 %8, metadata !6834, metadata !DIExpression()), !dbg !6835
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6849
  %10 = and i32 %9, -257, !dbg !6849
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6849
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6850, !srcloc !6842
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6852, !srcloc !6846
  %11 = icmp eq i16 %8, -8446, !dbg !6854
  ret i1 %11, !dbg !6856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !6857 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6858
  %2 = or i32 %1, 16, !dbg !6858
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6858
  ret void, !dbg !6859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !6860 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6863, metadata !DIExpression()), !dbg !6864
  br label %1, !dbg !6865

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6863, metadata !DIExpression()), !dbg !6864
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #21, !dbg !6867
  %3 = add nuw nsw i32 %2, 1, !dbg !6870
  call void @llvm.dbg.value(metadata i32 %3, metadata !6863, metadata !DIExpression()), !dbg !6864
  %4 = icmp eq i32 %3, 127, !dbg !6871
  br i1 %4, label %5, label %1, !dbg !6865, !llvm.loop !6872

5:                                                ; preds = %1
  ret void, !dbg !6874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !6875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6877, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i32 1, metadata !6878, metadata !DIExpression()), !dbg !6879
  %2 = and i32 %0, 15, !dbg !6880
  %3 = add nsw i32 %2, -4, !dbg !6880
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6880
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6880
  %6 = icmp slt i32 %0, 0, !dbg !6880
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6880
  store volatile i8 16, i8* %7, align 1, !dbg !6881
  ret void, !dbg !6883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6987, metadata !DIExpression()), !dbg !6988
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6989
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6991
  br i1 %3, label %4, label %12, !dbg !6992

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !6993, !srcloc !7005
  call void @llvm.dbg.value(metadata i32 %5, metadata !6996, metadata !DIExpression()) #20, !dbg !7006
  %6 = icmp eq i32 %5, 0, !dbg !7007
  br i1 %6, label %12, label %7, !dbg !7008

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7009
  %9 = or i32 %8, 268435456, !dbg !7009
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7009
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7011
  %11 = and i32 %10, -32769, !dbg !7011
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7011
  br label %12, !dbg !7012

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !7013
  ret void, !dbg !7014
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7015 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7022, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata i8* %1, metadata !7023, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata i8* %0, metadata !7024, metadata !DIExpression()), !dbg !7025
  %3 = load i8, i8* %1, align 1, !dbg !7026
  %4 = icmp eq i8 %3, 0, !dbg !7027
  br i1 %4, label %13, label %5, !dbg !7028

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7022, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata i8* %8, metadata !7023, metadata !DIExpression()), !dbg !7025
  store i8 %6, i8* %7, align 1, !dbg !7029
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7031
  call void @llvm.dbg.value(metadata i8* %9, metadata !7022, metadata !DIExpression()), !dbg !7025
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7032
  call void @llvm.dbg.value(metadata i8* %10, metadata !7023, metadata !DIExpression()), !dbg !7025
  %11 = load i8, i8* %10, align 1, !dbg !7026
  %12 = icmp eq i8 %11, 0, !dbg !7027
  br i1 %12, label %13, label %5, !dbg !7028, !llvm.loop !7033

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7035
  ret i8* %0, !dbg !7036
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7037 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7041, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i8* %1, metadata !7042, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i32 %2, metadata !7043, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i8* %0, metadata !7044, metadata !DIExpression()), !dbg !7045
  %4 = icmp eq i32 %2, 0, !dbg !7046
  br i1 %4, label %22, label %5, !dbg !7047

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7041, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i32 %7, metadata !7043, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i8* %8, metadata !7042, metadata !DIExpression()), !dbg !7045
  %9 = load i8, i8* %8, align 1, !dbg !7048
  %10 = icmp eq i8 %9, 0, !dbg !7049
  br i1 %10, label %16, label %11, !dbg !7050

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7051
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7053
  call void @llvm.dbg.value(metadata i8* %12, metadata !7042, metadata !DIExpression()), !dbg !7045
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7054
  call void @llvm.dbg.value(metadata i8* %13, metadata !7041, metadata !DIExpression()), !dbg !7045
  %14 = add i32 %7, -1, !dbg !7055
  call void @llvm.dbg.value(metadata i32 %14, metadata !7043, metadata !DIExpression()), !dbg !7045
  %15 = icmp eq i32 %14, 0, !dbg !7046
  br i1 %15, label %22, label %5, !dbg !7047, !llvm.loop !7056

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7041, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.value(metadata i32 %18, metadata !7043, metadata !DIExpression()), !dbg !7045
  store i8 0, i8* %17, align 1, !dbg !7058
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7060
  call void @llvm.dbg.value(metadata i8* %19, metadata !7041, metadata !DIExpression()), !dbg !7045
  %20 = add i32 %18, -1, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %20, metadata !7043, metadata !DIExpression()), !dbg !7045
  %21 = icmp eq i32 %20, 0, !dbg !7062
  br i1 %21, label %22, label %16, !dbg !7063, !llvm.loop !7064

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7066
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7071, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %1, metadata !7072, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %1, metadata !7073, metadata !DIExpression()), !dbg !7074
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7075

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7071, metadata !DIExpression()), !dbg !7074
  %6 = load i8, i8* %5, align 1, !dbg !7076
  %7 = icmp eq i8 %6, %3, !dbg !7077
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7078
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7079
  call void @llvm.dbg.value(metadata i8* %10, metadata !7071, metadata !DIExpression()), !dbg !7074
  br i1 %9, label %11, label %4, !dbg !7078, !llvm.loop !7081

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7083
  ret i8* %12, !dbg !7084
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7085 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7087, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %1, metadata !7088, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i8* null, metadata !7089, metadata !DIExpression()), !dbg !7090
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7091

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7090
  call void @llvm.dbg.value(metadata i8* %6, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i8* %5, metadata !7087, metadata !DIExpression()), !dbg !7090
  %7 = load i8, i8* %5, align 1, !dbg !7092
  %8 = icmp eq i8 %7, %3, !dbg !7095
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7096
  call void @llvm.dbg.value(metadata i8* %9, metadata !7089, metadata !DIExpression()), !dbg !7090
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7097
  call void @llvm.dbg.value(metadata i8* %10, metadata !7087, metadata !DIExpression()), !dbg !7090
  %11 = icmp eq i8 %7, 0, !dbg !7098
  br i1 %11, label %12, label %4, !dbg !7098, !llvm.loop !7099

12:                                               ; preds = %4
  ret i8* %9, !dbg !7101
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7106, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32 0, metadata !7107, metadata !DIExpression()), !dbg !7108
  %2 = load i8, i8* %0, align 1, !dbg !7109
  %3 = icmp eq i8 %2, 0, !dbg !7110
  br i1 %3, label %11, label %4, !dbg !7111

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7107, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i8* %6, metadata !7106, metadata !DIExpression()), !dbg !7108
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7112
  call void @llvm.dbg.value(metadata i8* %7, metadata !7106, metadata !DIExpression()), !dbg !7108
  %8 = add i32 %5, 1, !dbg !7114
  call void @llvm.dbg.value(metadata i32 %8, metadata !7107, metadata !DIExpression()), !dbg !7108
  %9 = load i8, i8* %7, align 1, !dbg !7109
  %10 = icmp eq i8 %9, 0, !dbg !7110
  br i1 %10, label %11, label %4, !dbg !7111, !llvm.loop !7115

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7108
  ret i32 %12, !dbg !7117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7122, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 %1, metadata !7123, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 0, metadata !7124, metadata !DIExpression()), !dbg !7125
  %3 = load i8, i8* %0, align 1, !dbg !7126
  %4 = icmp ne i8 %3, 0, !dbg !7127
  %5 = icmp ne i32 %1, 0, !dbg !7128
  %6 = and i1 %4, %5, !dbg !7128
  br i1 %6, label %7, label %16, !dbg !7129

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7124, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i8* %9, metadata !7122, metadata !DIExpression()), !dbg !7125
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7130
  call void @llvm.dbg.value(metadata i8* %10, metadata !7122, metadata !DIExpression()), !dbg !7125
  %11 = add nuw i32 %8, 1, !dbg !7132
  call void @llvm.dbg.value(metadata i32 %11, metadata !7124, metadata !DIExpression()), !dbg !7125
  %12 = load i8, i8* %10, align 1, !dbg !7126
  %13 = icmp ne i8 %12, 0, !dbg !7127
  %14 = icmp ult i32 %11, %1, !dbg !7128
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7128
  br i1 %15, label %7, label %16, !dbg !7129, !llvm.loop !7133

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7125
  ret i32 %17, !dbg !7135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7140, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %1, metadata !7141, metadata !DIExpression()), !dbg !7142
  %3 = load i8, i8* %0, align 1, !dbg !7143
  %4 = load i8, i8* %1, align 1, !dbg !7144
  %5 = icmp ne i8 %3, %4, !dbg !7145
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7146
  br i1 %7, label %18, label %8, !dbg !7146

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7141, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8* %10, metadata !7140, metadata !DIExpression()), !dbg !7142
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7147
  call void @llvm.dbg.value(metadata i8* %11, metadata !7140, metadata !DIExpression()), !dbg !7142
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7149
  call void @llvm.dbg.value(metadata i8* %12, metadata !7141, metadata !DIExpression()), !dbg !7142
  %13 = load i8, i8* %11, align 1, !dbg !7143
  %14 = load i8, i8* %12, align 1, !dbg !7144
  %15 = icmp ne i8 %13, %14, !dbg !7145
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7146
  br i1 %17, label %18, label %8, !dbg !7146, !llvm.loop !7150

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7143
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7144
  %21 = zext i8 %19 to i32, !dbg !7153
  %22 = zext i8 %20 to i32, !dbg !7154
  %23 = sub nsw i32 %21, %22, !dbg !7155
  ret i32 %23, !dbg !7156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7161, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.value(metadata i8* %1, metadata !7162, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.value(metadata i32 %2, metadata !7163, metadata !DIExpression()), !dbg !7164
  %4 = icmp eq i32 %2, 0, !dbg !7165
  br i1 %4, label %23, label %5, !dbg !7165

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7163, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.value(metadata i8* %7, metadata !7162, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.value(metadata i8* %8, metadata !7161, metadata !DIExpression()), !dbg !7164
  %9 = load i8, i8* %8, align 1, !dbg !7166
  %10 = load i8, i8* %7, align 1, !dbg !7167
  %11 = icmp ne i8 %9, %10, !dbg !7168
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7169
  br i1 %13, label %19, label %14, !dbg !7169

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7170
  call void @llvm.dbg.value(metadata i8* %15, metadata !7161, metadata !DIExpression()), !dbg !7164
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7172
  call void @llvm.dbg.value(metadata i8* %16, metadata !7162, metadata !DIExpression()), !dbg !7164
  %17 = add i32 %6, -1, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %17, metadata !7163, metadata !DIExpression()), !dbg !7164
  %18 = icmp eq i32 %17, 0, !dbg !7165
  br i1 %18, label %23, label %5, !dbg !7165, !llvm.loop !7174

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7177
  %21 = zext i8 %10 to i32, !dbg !7178
  %22 = sub nsw i32 %20, %21, !dbg !7179
  br label %23, !dbg !7180

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7180
  ret i32 %24, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7186, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %1, metadata !7187, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8** %2, metadata !7188, metadata !DIExpression()), !dbg !7191
  %4 = icmp eq i8* %0, null, !dbg !7192
  br i1 %4, label %5, label %7, !dbg !7192

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7193
  br label %7, !dbg !7192

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7192
  call void @llvm.dbg.value(metadata i8* %8, metadata !7189, metadata !DIExpression()), !dbg !7191
  %9 = load i8, i8* %8, align 1, !dbg !7194
  %10 = icmp eq i8 %9, 0, !dbg !7194
  br i1 %10, label %33, label %11, !dbg !7195

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7189, metadata !DIExpression()), !dbg !7191
  %14 = zext i8 %12 to i32, !dbg !7194
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #21, !dbg !7196
  %16 = icmp eq i8* %15, null, !dbg !7195
  br i1 %16, label %21, label %17, !dbg !7197

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7198
  call void @llvm.dbg.value(metadata i8* %18, metadata !7189, metadata !DIExpression()), !dbg !7191
  %19 = load i8, i8* %18, align 1, !dbg !7194
  %20 = icmp eq i8 %19, 0, !dbg !7194
  br i1 %20, label %33, label %11, !dbg !7195, !llvm.loop !7200

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7190, metadata !DIExpression()), !dbg !7191
  %24 = zext i8 %22 to i32, !dbg !7202
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #21, !dbg !7203
  %26 = icmp eq i8* %25, null, !dbg !7204
  br i1 %26, label %27, label %31, !dbg !7205

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7206
  call void @llvm.dbg.value(metadata i8* %28, metadata !7190, metadata !DIExpression()), !dbg !7191
  %29 = load i8, i8* %28, align 1, !dbg !7202
  %30 = icmp eq i8 %29, 0, !dbg !7202
  br i1 %30, label %33, label %21, !dbg !7208, !llvm.loop !7209

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7211
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7214
  br label %33, !dbg !7215

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7191
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7191
  store i8* %34, i8** %2, align 4, !dbg !7191
  ret i8* %35, !dbg !7216
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7219, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i8* %1, metadata !7220, metadata !DIExpression()), !dbg !7221
  %3 = tail call i32 @strlen(i8* noundef %0) #21, !dbg !7222
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7223
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #21, !dbg !7224
  ret i8* %0, !dbg !7225
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7228, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i8* %1, metadata !7229, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i32 %2, metadata !7230, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i8* %0, metadata !7231, metadata !DIExpression()), !dbg !7233
  %4 = tail call i32 @strlen(i8* noundef %0) #21, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %4, metadata !7232, metadata !DIExpression()), !dbg !7233
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7235
  call void @llvm.dbg.value(metadata i8* %5, metadata !7228, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i8* %1, metadata !7229, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i32 %2, metadata !7230, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i32 %2, metadata !7230, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7233
  %6 = icmp eq i32 %2, 0, !dbg !7236
  br i1 %6, label %18, label %7, !dbg !7237

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7238
  call void @llvm.dbg.value(metadata i8* %9, metadata !7228, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i8* %10, metadata !7229, metadata !DIExpression()), !dbg !7233
  %12 = load i8, i8* %10, align 1, !dbg !7239
  %13 = icmp eq i8 %12, 0, !dbg !7240
  br i1 %13, label %18, label %14, !dbg !7241

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7242
  call void @llvm.dbg.value(metadata i8* %15, metadata !7229, metadata !DIExpression()), !dbg !7233
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7244
  call void @llvm.dbg.value(metadata i8* %16, metadata !7228, metadata !DIExpression()), !dbg !7233
  store i8 %12, i8* %9, align 1, !dbg !7245
  call void @llvm.dbg.value(metadata i32 %11, metadata !7230, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i32 %11, metadata !7230, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7233
  %17 = icmp eq i32 %11, 0, !dbg !7236
  br i1 %17, label %18, label %7, !dbg !7237, !llvm.loop !7246

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7233
  store i8 0, i8* %19, align 1, !dbg !7248
  ret i8* %0, !dbg !7249
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7250 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7254, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i8* %1, metadata !7255, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i32 %2, metadata !7256, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i8* %0, metadata !7257, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i8* %1, metadata !7258, metadata !DIExpression()), !dbg !7259
  %4 = icmp eq i32 %2, 0, !dbg !7260
  br i1 %4, label %31, label %5, !dbg !7262

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7258, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i8* %0, metadata !7257, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i32 %2, metadata !7256, metadata !DIExpression()), !dbg !7259
  %6 = add i32 %2, -1, !dbg !7263
  call void @llvm.dbg.value(metadata i32 %6, metadata !7256, metadata !DIExpression()), !dbg !7259
  %7 = icmp eq i32 %6, 0, !dbg !7264
  br i1 %7, label %23, label %8, !dbg !7265

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7266
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7266
  br label %11, !dbg !7266

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7258, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i8* %14, metadata !7257, metadata !DIExpression()), !dbg !7259
  %15 = load i8, i8* %14, align 1, !dbg !7267
  %16 = load i8, i8* %13, align 1, !dbg !7268
  %17 = icmp eq i8 %15, %16, !dbg !7269
  br i1 %17, label %18, label %23, !dbg !7266

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7270
  call void @llvm.dbg.value(metadata i8* %19, metadata !7257, metadata !DIExpression()), !dbg !7259
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7272
  call void @llvm.dbg.value(metadata i8* %20, metadata !7258, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i32 %12, metadata !7256, metadata !DIExpression()), !dbg !7259
  %21 = add i32 %12, -1, !dbg !7263
  call void @llvm.dbg.value(metadata i32 %21, metadata !7256, metadata !DIExpression()), !dbg !7259
  %22 = icmp eq i32 %21, 0, !dbg !7264
  br i1 %22, label %23, label %11, !dbg !7265, !llvm.loop !7273

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7259
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7259
  %26 = load i8, i8* %24, align 1, !dbg !7275
  %27 = zext i8 %26 to i32, !dbg !7275
  %28 = load i8, i8* %25, align 1, !dbg !7276
  %29 = zext i8 %28 to i32, !dbg !7276
  %30 = sub nsw i32 %27, %29, !dbg !7277
  br label %31, !dbg !7278

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7259
  ret i32 %32, !dbg !7279
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7284, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i8* %1, metadata !7285, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i32 %2, metadata !7286, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i8* %0, metadata !7287, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i8* %1, metadata !7288, metadata !DIExpression()), !dbg !7289
  %4 = ptrtoint i8* %0 to i32, !dbg !7290
  %5 = ptrtoint i8* %1 to i32, !dbg !7290
  %6 = sub i32 %4, %5, !dbg !7290
  %7 = icmp ult i32 %6, %2, !dbg !7292
  br i1 %7, label %10, label %8, !dbg !7293

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7288, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i8* %0, metadata !7287, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i32 %2, metadata !7286, metadata !DIExpression()), !dbg !7289
  %9 = icmp eq i32 %2, 0, !dbg !7294
  br i1 %9, label %26, label %17, !dbg !7296

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7286, metadata !DIExpression()), !dbg !7289
  %12 = add i32 %11, -1, !dbg !7297
  call void @llvm.dbg.value(metadata i32 %12, metadata !7286, metadata !DIExpression()), !dbg !7289
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7300
  %14 = load i8, i8* %13, align 1, !dbg !7300
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7301
  store i8 %14, i8* %15, align 1, !dbg !7302
  %16 = icmp eq i32 %12, 0, !dbg !7303
  br i1 %16, label %26, label %10, !dbg !7304, !llvm.loop !7305

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7288, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i8* %19, metadata !7287, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i32 %20, metadata !7286, metadata !DIExpression()), !dbg !7289
  %21 = load i8, i8* %18, align 1, !dbg !7307
  store i8 %21, i8* %19, align 1, !dbg !7309
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7310
  call void @llvm.dbg.value(metadata i8* %22, metadata !7287, metadata !DIExpression()), !dbg !7289
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7311
  call void @llvm.dbg.value(metadata i8* %23, metadata !7288, metadata !DIExpression()), !dbg !7289
  %24 = add i32 %20, -1, !dbg !7312
  call void @llvm.dbg.value(metadata i32 %24, metadata !7286, metadata !DIExpression()), !dbg !7289
  %25 = icmp eq i32 %24, 0, !dbg !7294
  br i1 %25, label %26, label %17, !dbg !7296, !llvm.loop !7313

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7315
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7316 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7322, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8* %1, metadata !7323, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 %2, metadata !7324, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8* %0, metadata !7325, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8* %1, metadata !7326, metadata !DIExpression()), !dbg !7327
  %4 = icmp eq i32 %2, 0, !dbg !7328
  br i1 %4, label %14, label %5, !dbg !7329

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7326, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8* %7, metadata !7325, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 %8, metadata !7324, metadata !DIExpression()), !dbg !7327
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7330
  call void @llvm.dbg.value(metadata i8* %9, metadata !7326, metadata !DIExpression()), !dbg !7327
  %10 = load i8, i8* %6, align 1, !dbg !7332
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7333
  call void @llvm.dbg.value(metadata i8* %11, metadata !7325, metadata !DIExpression()), !dbg !7327
  store i8 %10, i8* %7, align 1, !dbg !7334
  %12 = add i32 %8, -1, !dbg !7335
  call void @llvm.dbg.value(metadata i32 %12, metadata !7324, metadata !DIExpression()), !dbg !7327
  %13 = icmp eq i32 %12, 0, !dbg !7328
  br i1 %13, label %14, label %5, !dbg !7329, !llvm.loop !7336

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7338
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7339 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7343, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i32 %1, metadata !7344, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i32 %2, metadata !7345, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i8* %0, metadata !7346, metadata !DIExpression()), !dbg !7348
  %4 = trunc i32 %1 to i8, !dbg !7349
  call void @llvm.dbg.value(metadata i8 %4, metadata !7347, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i32 %2, metadata !7345, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i8* %0, metadata !7346, metadata !DIExpression()), !dbg !7348
  %5 = icmp eq i32 %2, 0, !dbg !7350
  br i1 %5, label %12, label %6, !dbg !7351

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7345, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i8* %8, metadata !7346, metadata !DIExpression()), !dbg !7348
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7352
  call void @llvm.dbg.value(metadata i8* %9, metadata !7346, metadata !DIExpression()), !dbg !7348
  store i8 %4, i8* %8, align 1, !dbg !7354
  %10 = add i32 %7, -1, !dbg !7355
  call void @llvm.dbg.value(metadata i32 %10, metadata !7345, metadata !DIExpression()), !dbg !7348
  %11 = icmp eq i32 %10, 0, !dbg !7350
  br i1 %11, label %12, label %6, !dbg !7351, !llvm.loop !7356

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7358
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7359 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7363, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32 %1, metadata !7364, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32 %2, metadata !7365, metadata !DIExpression()), !dbg !7369
  %4 = icmp eq i32 %2, 0, !dbg !7370
  br i1 %4, label %17, label %5, !dbg !7371

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7372

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7373
  call void @llvm.dbg.value(metadata i8* %9, metadata !7366, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 %8, metadata !7365, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i8* %9, metadata !7366, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7373
  %10 = load i8, i8* %9, align 1, !dbg !7374
  %11 = icmp eq i8 %10, %6, !dbg !7377
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7378
  call void @llvm.dbg.value(metadata i8* %12, metadata !7366, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 %13, metadata !7365, metadata !DIExpression()), !dbg !7369
  br i1 %15, label %16, label %7, !dbg !7378, !llvm.loop !7379

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7381

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7369
  ret i8* %19, !dbg !7382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !7383 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7385, metadata !DIExpression()), !dbg !7386
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7387
  ret void, !dbg !7388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7391, metadata !DIExpression()), !dbg !7392
  ret i32 -1, !dbg !7393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7398, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32* %1, metadata !7399, metadata !DIExpression()), !dbg !7400
  %3 = ptrtoint i32* %1 to i32, !dbg !7401
  %4 = and i32 %3, -2, !dbg !7401
  %5 = icmp eq i32 %4, 2, !dbg !7401
  br i1 %5, label %6, label %9, !dbg !7401

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7402
  %8 = tail call i32 %7(i32 noundef %0) #22, !dbg !7402
  br label %9, !dbg !7403

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7403
  ret i32 %10, !dbg !7404
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7407, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata i32* %1, metadata !7408, metadata !DIExpression()), !dbg !7409
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #21, !dbg !7410
  ret i32 %3, !dbg !7411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7415, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata i32* %1, metadata !7416, metadata !DIExpression()), !dbg !7417
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7418, !srcloc !7420
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #21, !dbg !7421
  ret i32 %3, !dbg !7422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7423 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7428, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i32* %1, metadata !7429, metadata !DIExpression()), !dbg !7432
  %3 = tail call i32 @strlen(i8* noundef %0) #22, !dbg !7433
  call void @llvm.dbg.value(metadata i32 %3, metadata !7430, metadata !DIExpression()), !dbg !7432
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #21, !dbg !7434
  call void @llvm.dbg.value(metadata i32 %4, metadata !7431, metadata !DIExpression()), !dbg !7432
  %5 = icmp ne i32 %3, %4, !dbg !7435
  %6 = sext i1 %5 to i32, !dbg !7436
  ret i32 %6, !dbg !7437
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7438 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7442, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i32 %1, metadata !7443, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i32 %2, metadata !7444, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i32* %3, metadata !7445, metadata !DIExpression()), !dbg !7446
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #21, !dbg !7447
  ret i32 %5, !dbg !7448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7451, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32 %1, metadata !7452, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32 %2, metadata !7453, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32* %3, metadata !7454, metadata !DIExpression()), !dbg !7455
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7456, !srcloc !7458
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #21, !dbg !7459
  ret i32 %5, !dbg !7460
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7463, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32 %1, metadata !7464, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32 %2, metadata !7465, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32* %3, metadata !7466, metadata !DIExpression()), !dbg !7471
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7472
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7474
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7474
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7474
  br i1 %11, label %33, label %12, !dbg !7474

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7471
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7471
  call void @llvm.dbg.value(metadata i8* %14, metadata !7469, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32 %13, metadata !7467, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32 %1, metadata !7468, metadata !DIExpression()), !dbg !7471
  br label %15, !dbg !7475

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7477
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7471
  call void @llvm.dbg.value(metadata i8* %17, metadata !7469, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i32 %16, metadata !7468, metadata !DIExpression()), !dbg !7471
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7478
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7481
  call void @llvm.dbg.value(metadata i8* %19, metadata !7469, metadata !DIExpression()), !dbg !7471
  %20 = load i8, i8* %17, align 1, !dbg !7482
  %21 = zext i8 %20 to i32, !dbg !7483
  %22 = tail call i32 %18(i32 noundef %21) #22, !dbg !7478
  %23 = icmp eq i32 %22, -1, !dbg !7484
  br i1 %23, label %30, label %24, !dbg !7485

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7486
  call void @llvm.dbg.value(metadata i32 %25, metadata !7468, metadata !DIExpression()), !dbg !7471
  %26 = icmp eq i32 %25, 0, !dbg !7487
  br i1 %26, label %27, label %15, !dbg !7488, !llvm.loop !7489

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %28, metadata !7467, metadata !DIExpression()), !dbg !7471
  %29 = icmp eq i32 %28, 0, !dbg !7492
  br i1 %29, label %30, label %12, !dbg !7493, !llvm.loop !7494

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7471
  call void @llvm.dbg.value(metadata i32 %31, metadata !7467, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.label(metadata !7470), !dbg !7497
  %32 = sub i32 %2, %31, !dbg !7498
  br label %33, !dbg !7499

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7471
  ret i32 %34, !dbg !7500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7505, metadata !DIExpression()), !dbg !7506
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #21, !dbg !7507
  %3 = icmp eq i32 %2, -1, !dbg !7509
  br i1 %3, label %8, label %4, !dbg !7510

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #21, !dbg !7511
  %6 = icmp eq i32 %5, -1, !dbg !7512
  %7 = sext i1 %6 to i32, !dbg !7511
  br label %8, !dbg !7513

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7506
  ret i32 %9, !dbg !7514
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !7515 {
  %1 = load i32, i32* @test_status, align 4, !dbg !7516
  %2 = icmp eq i32 %1, 0, !dbg !7516
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.67, i32 0, i32 0)) #22, !dbg !7518
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.69, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.70, i32 0, i32 0), i8* noundef %3) #22, !dbg !7518
  ret void, !dbg !7519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !7520 {
  ret void, !dbg !7521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !7522 {
  ret void, !dbg !7523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !7524 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !7525
  tail call void @ztest_test_skip() #21, !dbg !7528
  ret void, !dbg !7529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !7530 {
  %1 = load i32, i32* @phase, align 4, !dbg !7531
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !7532

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !7533
  br label %6, !dbg !7535

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !7536
  tail call fastcc void @test_finalize() #21, !dbg !7537
  br label %6, !dbg !7538

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #21, !dbg !7539
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.71, i32 0, i32 0), i8* noundef %5) #22, !dbg !7540
  store i32 2, i32* @test_status, align 4, !dbg !7541
  br label %6, !dbg !7542

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !7543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !7544 {
  tail call fastcc void @k_thread_abort.79(%struct.k_thread* noundef nonnull @ztest_thread) #21, !dbg !7545
  %1 = tail call fastcc %struct.k_thread* @k_current_get.80() #23, !dbg !7548
  tail call fastcc void @k_thread_abort.79(%struct.k_thread* noundef %1) #21, !dbg !7549
  ret void, !dbg !7550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !7551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7555, metadata !DIExpression()), !dbg !7556
  %2 = icmp ult i32 %0, 6, !dbg !7557
  br i1 %2, label %3, label %6, !dbg !7557

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !7557
  %5 = load i8*, i8** %4, align 4, !dbg !7557
  br label %6, !dbg !7557

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.72, i32 0, i32 0), %1 ], !dbg !7558
  ret i8* %7, !dbg !7560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.79(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !7561 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7567, metadata !DIExpression()), !dbg !7568
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7569, !srcloc !7571
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !7572
  ret void, !dbg !7573
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.80() unnamed_addr #11 !dbg !7574 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.81() #23, !dbg !7577
  ret %struct.k_thread* %1, !dbg !7578
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.81() unnamed_addr #11 !dbg !7579 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7580, !srcloc !7582
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #22, !dbg !7583
  ret %struct.k_thread* %1, !dbg !7584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !7585 {
  %1 = load i32, i32* @phase, align 4, !dbg !7586
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !7587

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !7588
  br label %6, !dbg !7590

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !7591
  tail call fastcc void @test_finalize() #21, !dbg !7592
  br label %6, !dbg !7593

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #21, !dbg !7594
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.82, i32 0, i32 0), i8* noundef %5) #22, !dbg !7595
  store i32 2, i32* @test_status, align 4, !dbg !7596
  br label %6, !dbg !7597

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !7599 {
  %1 = load i32, i32* @phase, align 4, !dbg !7600
  %2 = icmp eq i32 %1, 2, !dbg !7601
  br i1 %2, label %3, label %4, !dbg !7601

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !7602
  br label %8, !dbg !7604

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #21, !dbg !7605
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.83, i32 0, i32 0), i8* noundef %5) #22, !dbg !7606
  store i32 2, i32* @test_status, align 4, !dbg !7607
  %6 = load i32, i32* @phase, align 4, !dbg !7608
  %7 = icmp eq i32 %6, 1, !dbg !7610
  br i1 %7, label %8, label %9, !dbg !7611

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #21, !dbg !7612
  br label %9, !dbg !7613

9:                                                ; preds = %8, %4
  ret void, !dbg !7613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !7614 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7616, metadata !DIExpression()), !dbg !7617
  tail call fastcc void @z_test_1cpu_start() #21, !dbg !7618
  ret void, !dbg !7619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !7620 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7622, !srcloc !7624
  ret void, !dbg !7625
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !7626 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7628, metadata !DIExpression()), !dbg !7629
  tail call fastcc void @z_test_1cpu_stop() #21, !dbg !7630
  ret void, !dbg !7631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !7632 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7633, !srcloc !7635
  ret void, !dbg !7636
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !7637 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7658, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !7659, metadata !DIExpression()), !dbg !7661
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !7662
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !7663
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !7663
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !7660, metadata !DIExpression()), !dbg !7661
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !7664
  br i1 %6, label %7, label %16, !dbg !7667

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !7660, metadata !DIExpression()), !dbg !7661
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !7668
  %10 = load i8*, i8** %9, align 4, !dbg !7668
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #22, !dbg !7671
  %12 = icmp eq i32 %11, 0, !dbg !7672
  br i1 %12, label %16, label %13, !dbg !7673

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !7674
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !7660, metadata !DIExpression()), !dbg !7661
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !7664
  br i1 %15, label %7, label %16, !dbg !7667, !llvm.loop !7675

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !7661
  ret %struct.ztest_unit_test* %17, !dbg !7677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !7678 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7680, metadata !DIExpression()), !dbg !7681
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #21, !dbg !7682
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #21, !dbg !7683
  ret i32 %3, !dbg !7684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !7685 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7706, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !7707, metadata !DIExpression()), !dbg !7708
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !7709

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !7707, metadata !DIExpression()), !dbg !7708
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !7711
  %5 = load i8*, i8** %4, align 4, !dbg !7711
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #22, !dbg !7715
  %7 = icmp eq i32 %6, 0, !dbg !7716
  br i1 %7, label %11, label %8, !dbg !7717

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !7718
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !7707, metadata !DIExpression()), !dbg !7708
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !7719
  br i1 %10, label %2, label %11, !dbg !7709, !llvm.loop !7720

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !7708
  ret %struct.ztest_suite_node* %12, !dbg !7722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !7723 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !7727, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !7728, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* null, metadata !7729, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 0, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 0, metadata !7731, metadata !DIExpression()), !dbg !7734
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !7735
  br i1 %2, label %3, label %4, !dbg !7737

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !7738
  br label %68, !dbg !7740

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !7741
  %6 = load i8*, i8** %5, align 4, !dbg !7741
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.84, i32 0, i32 0), i8* noundef %6) #22, !dbg !7741
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.67, i32 0, i32 0)) #22, !dbg !7741
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !7743
  store i32 0, i32* @test_result, align 4, !dbg !7744
  store i32 0, i32* @phase, align 4, !dbg !7745
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !7746
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !7746
  %9 = icmp eq i8* ()* %8, null, !dbg !7748
  br i1 %9, label %12, label %10, !dbg !7749

10:                                               ; preds = %4
  %11 = tail call i8* %8() #22, !dbg !7750
  call void @llvm.dbg.value(metadata i8* %11, metadata !7729, metadata !DIExpression()), !dbg !7734
  br label %12, !dbg !7752

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !7734
  call void @llvm.dbg.value(metadata i8* %13, metadata !7729, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 0, metadata !7732, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 undef, metadata !7732, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 0, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !7728, metadata !DIExpression()), !dbg !7734
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !7728, metadata !DIExpression()), !dbg !7734
  br label %15, !dbg !7754

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !7734
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !7757
  call void @llvm.dbg.value(metadata i32 %17, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !7728, metadata !DIExpression()), !dbg !7734
  %18 = load i8*, i8** %5, align 4, !dbg !7758
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #21, !dbg !7759
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !7728, metadata !DIExpression()), !dbg !7734
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !7760
  br i1 %20, label %53, label %21, !dbg !7754

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !7761
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !7764
  %24 = load i8*, i8** %23, align 4, !dbg !7764
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #22, !dbg !7765
  br i1 %25, label %26, label %49, !dbg !7766

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !7767
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7767
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !7769
  %30 = load i32, i32* %29, align 4, !dbg !7770
  %31 = add i32 %30, 1, !dbg !7770
  store i32 %31, i32* %29, align 4, !dbg !7770
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #21, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %32, metadata !7731, metadata !DIExpression()), !dbg !7734
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !7772

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7773
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !7776
  br label %42, !dbg !7777

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7778
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !7781
  br label %42, !dbg !7782

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7783
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !7786
  br label %42, !dbg !7787

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !7788
  %45 = add i32 %44, 1, !dbg !7788
  store i32 %45, i32* %43, align 4, !dbg !7788
  %46 = icmp eq i32 %32, 1, !dbg !7789
  %47 = zext i1 %46 to i32, !dbg !7791
  %48 = add nsw i32 %17, %47, !dbg !7791
  br label %49, !dbg !7791

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !7757
  call void @llvm.dbg.value(metadata i32 %50, metadata !7730, metadata !DIExpression()), !dbg !7734
  %51 = load i32, i32* @test_status, align 4, !dbg !7792
  %52 = icmp eq i32 %51, 2, !dbg !7794
  br i1 %52, label %59, label %15, !dbg !7795, !llvm.loop !7796

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !7798
  %55 = icmp eq i32 %54, 0, !dbg !7754
  call void @llvm.dbg.value(metadata i32 %17, metadata !7730, metadata !DIExpression()), !dbg !7734
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !7800
  br i1 %57, label %58, label %59, !dbg !7800

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !7801
  br label %59, !dbg !7803

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !7732, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %17, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !7728, metadata !DIExpression()), !dbg !7734
  %61 = icmp sgt i32 %60, 0, !dbg !7804
  %62 = load i8*, i8** %5, align 4, !dbg !7807
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.85, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.86, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #22, !dbg !7807
  store i32 4, i32* @phase, align 4, !dbg !7808
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !7809
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !7809
  %66 = icmp eq void (i8*)* %65, null, !dbg !7811
  br i1 %66, label %68, label %67, !dbg !7812

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #22, !dbg !7813
  br label %68, !dbg !7815

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !7734
  ret i32 %69, !dbg !7816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !7817 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !7821, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !7822, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata i8* %2, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata i32 0, metadata !7824, metadata !DIExpression()), !dbg !7825
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !7826
  %5 = load i8*, i8** %4, align 4, !dbg !7826
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.87, i32 0, i32 0), i8* noundef %5) #22, !dbg !7826
  store i32 1, i32* @phase, align 4, !dbg !7828
  tail call fastcc void @get_start_time_cyc() #21, !dbg !7829
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !7832
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !7833
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !7834
  %9 = load i32, i32* %8, align 4, !dbg !7834
  %10 = or i32 %9, 8, !dbg !7835
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #21, !dbg !7836
  tail call fastcc void @k_object_access_grant() #21, !dbg !7837
  tail call fastcc void @k_object_access_grant() #21, !dbg !7837
  tail call fastcc void @k_object_access_grant() #21, !dbg !7837
  %11 = load i8*, i8** %4, align 4, !dbg !7838
  %12 = icmp eq i8* %11, null, !dbg !7840
  br i1 %12, label %14, label %13, !dbg !7841

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #21, !dbg !7842
  br label %14, !dbg !7844

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !7845
  %16 = and i32 %15, -2, !dbg !7847
  %17 = icmp eq i32 %16, 4, !dbg !7847
  br i1 %17, label %19, label %18, !dbg !7847

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #21, !dbg !7848
  tail call fastcc void @k_thread_join() #21, !dbg !7850
  br label %19, !dbg !7851

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !7852
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !7853
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !7853
  %22 = icmp eq void (i8*)* %21, null, !dbg !7855
  br i1 %22, label %24, label %23, !dbg !7856

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #22, !dbg !7857
  br label %24, !dbg !7859

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #21, !dbg !7860
  tail call fastcc void @get_test_duration_ms() #21, !dbg !7861
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !7862
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !7864
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !7864
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !7865
  %29 = load i32, i32* %28, align 4, !dbg !7865
  %30 = icmp ugt i32 %25, %29, !dbg !7866
  br i1 %30, label %31, label %32, !dbg !7867

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !7868
  br label %32, !dbg !7870

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !7871
  %33 = load i32, i32* @test_result, align 4, !dbg !7872
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !7874

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !7875
  %36 = icmp ult i32 %35, 2, !dbg !7875
  %37 = select i1 %36, i32 2, i32 0, !dbg !7875
  br label %38, !dbg !7875

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !7825
  call void @llvm.dbg.value(metadata i32 %39, metadata !7824, metadata !DIExpression()), !dbg !7825
  tail call fastcc void @cleanup_test() #21, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %39, metadata !7824, metadata !DIExpression()), !dbg !7825
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #21, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %40, metadata !7824, metadata !DIExpression()), !dbg !7825
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #21, !dbg !7881
  %42 = load i8*, i8** %4, align 4, !dbg !7881
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !7881
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !7881
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.88, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #22, !dbg !7881
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.67, i32 0, i32 0)) #22, !dbg !7881
  %48 = icmp eq i32 %40, 2, !dbg !7883
  br i1 %48, label %49, label %52, !dbg !7885

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !7886
  br i1 %50, label %51, label %52, !dbg !7887

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !7888
  br label %52, !dbg !7890

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !7891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !7892 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #21, !dbg !7893
  store i32 %1, i32* @tc_start_time, align 4, !dbg !7894
  ret void, !dbg !7895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7896 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7915, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7906, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !7907, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 1024, metadata !7908, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !7909, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8* %0, metadata !7910, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8* %1, metadata !7911, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8* %2, metadata !7912, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 -1, metadata !7913, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %3, metadata !7914, metadata !DIExpression()), !dbg !7916
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7917, !srcloc !7919
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #22, !dbg !7920
  ret void, !dbg !7921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !7922 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7927, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7928, metadata !DIExpression()), !dbg !7929
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7930, !srcloc !7932
  ret void, !dbg !7933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !7934 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7938, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i8* %0, metadata !7939, metadata !DIExpression()), !dbg !7940
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7941, !srcloc !7943
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #22, !dbg !7944
  ret void, !dbg !7945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !7946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7948, metadata !DIExpression()), !dbg !7949
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7950, !srcloc !7952
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #22, !dbg !7953
  ret void, !dbg !7954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !7955 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7960, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7959, metadata !DIExpression()), !dbg !7961
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7962, !srcloc !7964
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #22, !dbg !7965
  ret void, !dbg !7966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !7967 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !7971, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7987
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !7972, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i8* %2, metadata !7973, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !7974, metadata !DIExpression()), !dbg !7988
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !7989

4:                                                ; preds = %17, %3
  ret void, !dbg !7990

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !7974, metadata !DIExpression()), !dbg !7988
  br i1 %0, label %7, label %11, !dbg !7991

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !7995
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !7995
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !7996
  br i1 %10, label %17, label %15, !dbg !7997

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !7998
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !7998
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8000
  br i1 %14, label %17, label %15, !dbg !8001

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #22, !dbg !8002
  br label %17, !dbg !8003

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8003
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !7974, metadata !DIExpression()), !dbg !7988
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8004
  br i1 %19, label %5, label %4, !dbg !7989, !llvm.loop !8005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8007 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #21, !dbg !8010
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8011
  %3 = sub i32 %1, %2, !dbg !8012
  call void @llvm.dbg.value(metadata i32 %3, metadata !8009, metadata !DIExpression()), !dbg !8013
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #21, !dbg !8014
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8015
  ret void, !dbg !8016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8017 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8021, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 0, metadata !8022, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 0, metadata !8023, metadata !DIExpression()), !dbg !8024
  tail call fastcc void @k_thread_abort.79(%struct.k_thread* noundef nonnull @ztest_thread) #21, !dbg !8025
  call void @llvm.dbg.value(metadata i32 0, metadata !8022, metadata !DIExpression()), !dbg !8024
  ret void, !dbg !8028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8029 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8033, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 %1, metadata !8034, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 -1, metadata !8035, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8036, metadata !DIExpression()), !dbg !8045
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8046

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8046

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8036, metadata !DIExpression()), !dbg !8045
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8047
  %9 = load i8*, i8** %8, align 4, !dbg !8047
  %10 = load i8*, i8** %4, align 4, !dbg !8051
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #22, !dbg !8052
  %12 = icmp eq i32 %11, 0, !dbg !8053
  br i1 %12, label %13, label %19, !dbg !8054

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8055
  %15 = load i8*, i8** %14, align 4, !dbg !8055
  %16 = load i8*, i8** %5, align 4, !dbg !8056
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #22, !dbg !8057
  %18 = icmp eq i32 %17, 0, !dbg !8058
  br i1 %18, label %22, label %19, !dbg !8059

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8060
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8036, metadata !DIExpression()), !dbg !8045
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8061
  br i1 %21, label %6, label %31, !dbg !8046, !llvm.loop !8062

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8064
  %24 = load i32, i32* %23, align 4, !dbg !8064
  call void @llvm.dbg.value(metadata i32 %24, metadata !8035, metadata !DIExpression()), !dbg !8044
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8066

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8067
  %27 = zext i1 %26 to i32, !dbg !8070
  br label %31, !dbg !8071

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8072
  %30 = zext i1 %29 to i32, !dbg !8075
  br label %31, !dbg !8076

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8044
  ret i32 %32, !dbg !8077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8082, metadata !DIExpression()), !dbg !8083
  %2 = icmp ult i32 %0, 3, !dbg !8084
  br i1 %2, label %3, label %6, !dbg !8084

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8084
  %5 = load i8*, i8** %4, align 4, !dbg !8084
  br label %6, !dbg !8084

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.89, i32 0, i32 0), %1 ], !dbg !8085
  ret i8* %7, !dbg !8087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8088 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #21, !dbg !8089
  ret i32 %1, !dbg !8090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8096, metadata !DIExpression()), !dbg !8097
  %2 = zext i32 %0 to i64, !dbg !8098
  call void @llvm.dbg.value(metadata i64 %2, metadata !8099, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i32 200000000, metadata !8104, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i32 1000, metadata !8105, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8 1, metadata !8106, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8 1, metadata !8107, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8 1, metadata !8108, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8 0, metadata !8109, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8 0, metadata !8110, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i8 1, metadata !8111, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i64 0, metadata !8112, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i64 199999, metadata !8112, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i64 199999, metadata !8112, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i64 199999, metadata !8112, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata i64 199999, metadata !8112, metadata !DIExpression()), !dbg !8116
  %3 = add nuw nsw i64 %2, 199999, !dbg !8118
  call void @llvm.dbg.value(metadata i64 %3, metadata !8099, metadata !DIExpression()), !dbg !8116
  %4 = icmp ult i32 %0, -199999
  %5 = trunc i64 %3 to i32, !dbg !8121
  %6 = udiv i32 %5, 200000, !dbg !8121
  %7 = zext i32 %6 to i64, !dbg !8121
  %8 = udiv i64 %3, 200000, !dbg !8121
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8121
  %10 = trunc i64 %9 to i32, !dbg !8123
  ret i32 %10, !dbg !8124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8125 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #22, !dbg !8127
  ret i32 %1, !dbg !8128
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %1, metadata !8132, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %2, metadata !8133, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %0, metadata !8134, metadata !DIExpression()), !dbg !8136
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8137
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8135, metadata !DIExpression()), !dbg !8136
  store i32 0, i32* @test_result, align 4, !dbg !8138
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #21, !dbg !8139
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8140
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8140
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8140
  %8 = icmp eq void (i8*)* %7, null, !dbg !8142
  br i1 %8, label %10, label %9, !dbg !8143

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #22, !dbg !8144
  br label %10, !dbg !8146

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #21, !dbg !8147
  store i32 1, i32* @test_result, align 4, !dbg !8148
  ret void, !dbg !8149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8150 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8154, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8155, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8* %1, metadata !8156, metadata !DIExpression()), !dbg !8157
  store i32 2, i32* @phase, align 4, !dbg !8158
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8159
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8159
  tail call void %4(i8* noundef %1) #22, !dbg !8160
  ret void, !dbg !8161
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8162 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8166, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata i32 0, metadata !8167, metadata !DIExpression()), !dbg !8170
  %2 = load i32, i32* @test_status, align 4, !dbg !8171
  %3 = icmp eq i32 %2, 2, !dbg !8173
  br i1 %3, label %17, label %4, !dbg !8174

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8168, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 0, metadata !8167, metadata !DIExpression()), !dbg !8170
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8176

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8168, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 %7, metadata !8167, metadata !DIExpression()), !dbg !8170
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #21, !dbg !8177
  %9 = add nsw i32 %8, %7, !dbg !8180
  call void @llvm.dbg.value(metadata i32 %9, metadata !8167, metadata !DIExpression()), !dbg !8170
  %10 = load i32, i32* @test_status, align 4, !dbg !8181
  %11 = icmp ne i32 %10, 2, !dbg !8183
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8184
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8168, metadata !DIExpression()), !dbg !8175
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8185
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8168, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 %9, metadata !8167, metadata !DIExpression()), !dbg !8170
  br i1 %14, label %5, label %15, !dbg !8185, !llvm.loop !8186

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8170
  call void @llvm.dbg.value(metadata i32 %16, metadata !8167, metadata !DIExpression()), !dbg !8170
  tail call fastcc void @__ztest_show_suite_summary() #21, !dbg !8188
  br label %17, !dbg !8189

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8170
  ret i32 %18, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8191 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8195, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8206
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8207
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8207
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8197, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 0, metadata !8198, metadata !DIExpression()), !dbg !8206
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #21, !dbg !8208
  call void @llvm.dbg.value(metadata i32 0, metadata !8199, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.value(metadata i32 0, metadata !8198, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 undef, metadata !8199, metadata !DIExpression()), !dbg !8209
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8198, metadata !DIExpression()), !dbg !8206
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #22, !dbg !8210
  br i1 %8, label %9, label %16, !dbg !8211

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #21, !dbg !8212
  call void @llvm.dbg.value(metadata i32 %11, metadata !8201, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.value(metadata i32 1, metadata !8198, metadata !DIExpression()), !dbg !8206
  %12 = load i32, i32* %7, align 4, !dbg !8214
  %13 = add i32 %12, 1, !dbg !8214
  store i32 %13, i32* %7, align 4, !dbg !8214
  %14 = icmp ne i32 %11, 0, !dbg !8215
  %15 = zext i1 %14 to i32, !dbg !8216
  br label %16, !dbg !8217

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8206
  %20 = load i32, i32* %17, align 4, !dbg !8218
  %21 = add i32 %20, %18, !dbg !8218
  store i32 %21, i32* %17, align 4, !dbg !8218
  call void @llvm.dbg.value(metadata i32 %19, metadata !8198, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 undef, metadata !8199, metadata !DIExpression()), !dbg !8209
  ret i32 %19, !dbg !8219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8220 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.93, i32 0, i32 0)) #22, !dbg !8224
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8222, metadata !DIExpression()), !dbg !8225
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8226

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.94, i32 0, i32 0)) #22, !dbg !8227
  ret void, !dbg !8228

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8222, metadata !DIExpression()), !dbg !8225
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #21, !dbg !8229
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8232
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8222, metadata !DIExpression()), !dbg !8225
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8233
  br i1 %5, label %2, label %1, !dbg !8226, !llvm.loop !8234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8236 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8240, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8241, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 0, metadata !8242, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 0, metadata !8243, metadata !DIExpression()), !dbg !8244
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #21, !dbg !8245
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8243, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8241, metadata !DIExpression()), !dbg !8244
  %3 = load i8*, i8** %2, align 4, !dbg !8246
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #21, !dbg !8247
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8241, metadata !DIExpression()), !dbg !8244
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8248
  br i1 %5, label %36, label %6, !dbg !8249

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8250
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8250
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8253
  %11 = load i32, i32* %10, align 4, !dbg !8253
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8254
  %13 = load i32, i32* %12, align 4, !dbg !8254
  %14 = icmp eq i32 %11, %13, !dbg !8255
  br i1 %14, label %20, label %15, !dbg !8256

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8257
  %17 = load i32, i32* %16, align 4, !dbg !8257
  %18 = icmp ne i32 %17, %13, !dbg !8259
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8260
  call void @llvm.dbg.value(metadata i32 %21, metadata !8242, metadata !DIExpression()), !dbg !8244
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #21, !dbg !8261
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8261
  %24 = load i8*, i8** %23, align 4, !dbg !8261
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8261
  %26 = load i8*, i8** %25, align 4, !dbg !8261
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8261
  %28 = load i32, i32* %27, align 4, !dbg !8261
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8261
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.95, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #22, !dbg !8261
  call void @llvm.dbg.value(metadata i32 poison, metadata !8243, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8241, metadata !DIExpression()), !dbg !8244
  %33 = load i8*, i8** %2, align 4, !dbg !8246
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #21, !dbg !8247
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8241, metadata !DIExpression()), !dbg !8244
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8248
  br i1 %35, label %36, label %6, !dbg !8249, !llvm.loop !8262

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.96, i32 0, i32 0)) #22, !dbg !8264
  ret void, !dbg !8265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8266 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8268, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8269, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8270, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8271, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8272, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8273, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8274, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8275, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8276, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8277, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8278, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8279, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8280, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8281, metadata !DIExpression()), !dbg !8282
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8281, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8280, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8272, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8271, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8270, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8269, metadata !DIExpression()), !dbg !8282
  %3 = load i8*, i8** %2, align 4, !dbg !8283
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #21, !dbg !8284
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8280, metadata !DIExpression()), !dbg !8282
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8285
  br i1 %5, label %58, label %6, !dbg !8286

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8281, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %9, metadata !8272, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %10, metadata !8271, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %11, metadata !8270, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %12, metadata !8269, metadata !DIExpression()), !dbg !8282
  %13 = add nuw nsw i32 %9, 1, !dbg !8287
  call void @llvm.dbg.value(metadata i32 %13, metadata !8272, metadata !DIExpression()), !dbg !8282
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8289
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8289
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8290
  %17 = load i32, i32* %16, align 4, !dbg !8290
  %18 = add i32 %17, %8, !dbg !8291
  call void @llvm.dbg.value(metadata i32 %18, metadata !8281, metadata !DIExpression()), !dbg !8282
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8292
  %20 = load i32, i32* %19, align 4, !dbg !8292
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8294
  %22 = load i32, i32* %21, align 4, !dbg !8294
  %23 = icmp eq i32 %20, %22, !dbg !8295
  br i1 %23, label %24, label %26, !dbg !8296

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8297
  call void @llvm.dbg.value(metadata i32 %25, metadata !8271, metadata !DIExpression()), !dbg !8282
  br label %34, !dbg !8299

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8300
  %28 = load i32, i32* %27, align 4, !dbg !8300
  %29 = icmp eq i32 %28, %22, !dbg !8302
  br i1 %29, label %30, label %32, !dbg !8303

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %31, metadata !8269, metadata !DIExpression()), !dbg !8282
  br label %34, !dbg !8306

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8307
  call void @llvm.dbg.value(metadata i32 %33, metadata !8270, metadata !DIExpression()), !dbg !8282
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8282
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8282
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8282
  call void @llvm.dbg.value(metadata i32 %18, metadata !8281, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8280, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %13, metadata !8272, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %37, metadata !8271, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %36, metadata !8270, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %35, metadata !8269, metadata !DIExpression()), !dbg !8282
  %38 = load i8*, i8** %2, align 4, !dbg !8283
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #21, !dbg !8284
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8280, metadata !DIExpression()), !dbg !8282
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8285
  br i1 %40, label %41, label %6, !dbg !8286, !llvm.loop !8309

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8311
  br i1 %42, label %58, label %43, !dbg !8313

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8314
  %45 = zext i1 %44 to i32, !dbg !8316
  call void @llvm.dbg.value(metadata i32 %45, metadata !8279, metadata !DIExpression()), !dbg !8282
  %46 = sub nsw i32 %13, %37, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %46, metadata !8273, metadata !DIExpression()), !dbg !8282
  %47 = mul nsw i32 %35, 100000, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %47, metadata !8274, metadata !DIExpression()), !dbg !8282
  %48 = sdiv i32 %47, %46, !dbg !8319
  call void @llvm.dbg.value(metadata i32 %48, metadata !8275, metadata !DIExpression()), !dbg !8282
  %49 = sdiv i32 %48, 1000, !dbg !8320
  call void @llvm.dbg.value(metadata i32 %49, metadata !8276, metadata !DIExpression()), !dbg !8282
  %50 = mul nsw i32 %49, -1000, !dbg !8321
  %51 = add i32 %50, %48, !dbg !8322
  %52 = sdiv i32 %51, 10, !dbg !8323
  call void @llvm.dbg.value(metadata i32 %52, metadata !8277, metadata !DIExpression()), !dbg !8282
  %53 = mul nsw i32 %52, -10, !dbg !8324
  %54 = add i32 %53, %51, !dbg !8325
  call void @llvm.dbg.value(metadata i32 %54, metadata !8278, metadata !DIExpression()), !dbg !8282
  %55 = icmp sgt i32 %54, 4, !dbg !8326
  %56 = zext i1 %55 to i32, !dbg !8328
  %57 = add nsw i32 %52, %56, !dbg !8328
  br label %58, !dbg !8328

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8329
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8329
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8329
  call void @llvm.dbg.value(metadata i32 %66, metadata !8279, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %65, metadata !8277, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 %64, metadata !8276, metadata !DIExpression()), !dbg !8282
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #21, !dbg !8330
  %68 = load i8*, i8** %2, align 4, !dbg !8330
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8330
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.97, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #22, !dbg !8330
  ret void, !dbg !8331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8332 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8334, metadata !DIExpression()), !dbg !8336
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8335, metadata !DIExpression()), !dbg !8336
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8335, metadata !DIExpression()), !dbg !8336
  %3 = load i8*, i8** %2, align 4, !dbg !8337
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #21, !dbg !8338
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8335, metadata !DIExpression()), !dbg !8336
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8339
  br i1 %5, label %22, label %6, !dbg !8340

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8341
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8341
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8343
  store i32 0, i32* %10, align 4, !dbg !8344
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8345
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8346
  store i32 0, i32* %12, align 4, !dbg !8347
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8348
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8349
  store i32 0, i32* %14, align 4, !dbg !8350
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8351
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8352
  store i32 0, i32* %16, align 4, !dbg !8353
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8354
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8355
  store i32 0, i32* %18, align 4, !dbg !8356
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8335, metadata !DIExpression()), !dbg !8336
  %19 = load i8*, i8** %2, align 4, !dbg !8337
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #21, !dbg !8338
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8335, metadata !DIExpression()), !dbg !8336
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8339
  br i1 %21, label %22, label %6, !dbg !8340, !llvm.loop !8357

22:                                               ; preds = %6, %1
  ret void, !dbg !8359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8360 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8362, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8363, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata i8 poison, metadata !8362, metadata !DIExpression()), !dbg !8365
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8366

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8364, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata i8 poison, metadata !8362, metadata !DIExpression()), !dbg !8365
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !8370

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8363, metadata !DIExpression()), !dbg !8365
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !8372
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !8372
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !8376
  %9 = load i32, i32* %8, align 4, !dbg !8376
  %10 = icmp eq i32 %9, 0, !dbg !8377
  br i1 %10, label %11, label %14, !dbg !8378

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !8379
  %13 = load i8*, i8** %12, align 4, !dbg !8379
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.98, i32 0, i32 0), i8* noundef %13) #22, !dbg !8381
  call void @llvm.dbg.value(metadata i8 0, metadata !8362, metadata !DIExpression()), !dbg !8365
  br label %14, !dbg !8382

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8362, metadata !DIExpression()), !dbg !8365
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !8383
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8363, metadata !DIExpression()), !dbg !8365
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8384
  br i1 %17, label %3, label %1, !dbg !8366, !llvm.loop !8385

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8364, metadata !DIExpression()), !dbg !8365
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !8387
  %22 = load i8*, i8** %21, align 4, !dbg !8387
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #21, !dbg !8390
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8363, metadata !DIExpression()), !dbg !8365
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !8391
  br i1 %24, label %25, label %29, !dbg !8393

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8394
  %27 = load i8*, i8** %26, align 4, !dbg !8394
  %28 = load i8*, i8** %21, align 4, !dbg !8396
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #22, !dbg !8397
  call void @llvm.dbg.value(metadata i8 0, metadata !8362, metadata !DIExpression()), !dbg !8365
  br label %29, !dbg !8398

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8362, metadata !DIExpression()), !dbg !8365
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !8399
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8364, metadata !DIExpression()), !dbg !8365
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8400
  br i1 %32, label %18, label %33, !dbg !8370, !llvm.loop !8401

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !8403

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !8404
  br label %36, !dbg !8407

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8364, metadata !DIExpression()), !dbg !8365
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !8408

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8364, metadata !DIExpression()), !dbg !8365
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !8410
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !8410
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8414
  %42 = load i32, i32* %41, align 4, !dbg !8414
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !8415
  %44 = load i32, i32* %43, align 4, !dbg !8415
  %45 = add i32 %44, %42, !dbg !8416
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !8417
  %47 = load i32, i32* %46, align 4, !dbg !8417
  %48 = add i32 %45, %47, !dbg !8418
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !8419
  %50 = load i32, i32* %49, align 4, !dbg !8419
  %51 = icmp eq i32 %48, %50, !dbg !8420
  br i1 %51, label %57, label %52, !dbg !8421

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !8422
  %54 = load i8*, i8** %53, align 4, !dbg !8422
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !8424
  %56 = load i8*, i8** %55, align 4, !dbg !8424
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.100, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #22, !dbg !8425
  store i32 1, i32* @test_status, align 4, !dbg !8426
  br label %57, !dbg !8427

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !8428
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8364, metadata !DIExpression()), !dbg !8365
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8429
  br i1 %59, label %37, label %60, !dbg !8408, !llvm.loop !8430

60:                                               ; preds = %57, %36
  ret void, !dbg !8432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !8433 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8435, metadata !DIExpression()), !dbg !8436
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !8437
  tail call void %2(i8* noundef %0) #22, !dbg !8438
  ret void, !dbg !8439
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !8440 {
  tail call void @ztest_run_all(i8* noundef null) #21, !dbg !8441
  tail call void @ztest_verify_all_test_suites_ran() #21, !dbg !8442
  ret void, !dbg !8443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !8444 {
  tail call void @test_main() #21, !dbg !8445
  tail call void @end_report() #21, !dbg !8446
  ret void, !dbg !8447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !8448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8450, metadata !DIExpression()), !dbg !8451
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #21, !dbg !8452
  ret void, !dbg !8453
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !8454 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8456, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !8457, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.value(metadata i8 1, metadata !8458, metadata !DIExpression()), !dbg !8459
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !8460
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !8460
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !8462
  br i1 %5, label %8, label %6, !dbg !8463

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #22, !dbg !8464
  call void @llvm.dbg.value(metadata i1 %7, metadata !8458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8459
  br label %8, !dbg !8466

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8458, metadata !DIExpression()), !dbg !8459
  ret i1 %9, !dbg !8467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !8468 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8470, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i8* undef, metadata !8471, metadata !DIExpression()), !dbg !8472
  ret i1 true, !dbg !8473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !8474 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8477, metadata !DIExpression()), !dbg !8478
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !8479, !srcloc !8481
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #22, !dbg !8482
  ret void, !dbg !8483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !8484 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8488, metadata !DIExpression()), !dbg !8489
  ret i8* %0, !dbg !8490
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8493, metadata !DIExpression()), !dbg !8494
  %2 = tail call fastcc zeroext i1 @device_is_ready() #21, !dbg !8495
  br i1 %2, label %3, label %4, !dbg !8497

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #21, !dbg !8498
  br label %4, !dbg !8499

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8494
  ret i32 %5, !dbg !8500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8501 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8506, metadata !DIExpression()), !dbg !8507
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !8508, !srcloc !8510
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #21, !dbg !8511
  ret i1 %1, !dbg !8512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8513 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #22, !dbg !8514
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #22, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8519, metadata !DIExpression()), !dbg !8520
  %2 = icmp eq i32 %0, 10, !dbg !8521
  br i1 %2, label %3, label %4, !dbg !8523

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #21, !dbg !8524
  br label %4, !dbg !8526

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8527
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #21, !dbg !8528
  ret i32 %0, !dbg !8529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8530 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8533, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i8 %0, metadata !8534, metadata !DIExpression()), !dbg !8535
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !8536, !srcloc !8538
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #21, !dbg !8539
  ret void, !dbg !8540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8541 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8543, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8 %0, metadata !8544, metadata !DIExpression()), !dbg !8546
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8547
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8545, metadata !DIExpression()), !dbg !8546
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8548
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8548
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #22, !dbg !8549
  ret void, !dbg !8550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8551 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8553, metadata !DIExpression()), !dbg !8554
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #22, !dbg !8555
  ret i1 %1, !dbg !8556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8606, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8607, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8608, metadata !DIExpression()), !dbg !8609
  ret void, !dbg !8610
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8611 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8613, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8 %1, metadata !8614, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i32 %2, metadata !8615, metadata !DIExpression()), !dbg !8626
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8627
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !8627
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !8627
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !8616, metadata !DIExpression()), !dbg !8626
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !8628
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !8628
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !8618, metadata !DIExpression()), !dbg !8626
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !8629
  %13 = icmp eq i32 %12, 196608, !dbg !8629
  br i1 %13, label %71, label %14, !dbg !8629

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !8631
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !8631
  %17 = load i8, i8* %16, align 4, !dbg !8631
  %18 = icmp ugt i8 %17, %1, !dbg !8631
  br i1 %18, label %20, label %19, !dbg !8634

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.112, i32 0, i32 0), i32 noundef 50) #22, !dbg !8635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.112, i32 0, i32 0), i32 noundef 50) #22, !dbg !8635
  unreachable, !dbg !8635

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !8637
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #20, !dbg !8637
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !8619, metadata !DIExpression()), !dbg !8638
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !8639
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !8639
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !8640
  %25 = load i32, i32* %24, align 4, !dbg !8640
  %26 = inttoptr i32 %25 to i32*, !dbg !8641
  call void @llvm.dbg.value(metadata i32* %26, metadata !8624, metadata !DIExpression()), !dbg !8626
  %27 = load volatile i32, i32* %26, align 4, !dbg !8642
  call void @llvm.dbg.value(metadata i32 %27, metadata !8625, metadata !DIExpression()), !dbg !8626
  %28 = and i32 %2, 2, !dbg !8643
  %29 = icmp eq i32 %28, 0, !dbg !8645
  br i1 %29, label %30, label %69, !dbg !8646

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !8647
  %32 = icmp eq i32 %31, 0, !dbg !8647
  br i1 %32, label %41, label %33, !dbg !8647

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !8649
  %35 = icmp eq i32 %34, 0, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %27, metadata !8625, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !8626
  br i1 %35, label %38, label %36, !dbg !8651

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !8653
  call void @llvm.dbg.value(metadata i32 %37, metadata !8625, metadata !DIExpression()), !dbg !8626
  br label %43, !dbg !8656

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !8625, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !8626
  %39 = and i32 %27, -49, !dbg !8657
  %40 = or i32 %39, 16, !dbg !8657
  call void @llvm.dbg.value(metadata i32 %40, metadata !8625, metadata !DIExpression()), !dbg !8626
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %42, metadata !8625, metadata !DIExpression()), !dbg !8626
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !8661
  call void @llvm.dbg.value(metadata i32 %44, metadata !8625, metadata !DIExpression()), !dbg !8626
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !8662
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !8663
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #22, !dbg !8664
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !8665
  store i32 %44, i32* %48, align 4, !dbg !8666
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #22, !dbg !8667
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #22, !dbg !8668
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #22, !dbg !8669
  br i1 %11, label %63, label %50, !dbg !8670

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !8671
  %52 = icmp eq i32 %51, 0, !dbg !8675
  br i1 %52, label %53, label %56, !dbg !8676

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !8677
  %55 = icmp eq i32 %54, 0, !dbg !8679
  br i1 %55, label %58, label %56, !dbg !8680

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #22, !dbg !8681
  br label %58, !dbg !8682

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8682
  %60 = load volatile i32, i32* %59, align 4, !dbg !8682
  %61 = shl nuw i32 1, %15, !dbg !8682
  %62 = or i32 %60, %61, !dbg !8682
  store volatile i32 %62, i32* %59, align 4, !dbg !8682
  br label %69, !dbg !8683

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8684
  %65 = load volatile i32, i32* %64, align 4, !dbg !8684
  %66 = shl nuw i32 1, %15, !dbg !8684
  %67 = xor i32 %66, -1, !dbg !8684
  %68 = and i32 %65, %67, !dbg !8684
  store volatile i32 %68, i32* %64, align 4, !dbg !8684
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !8626
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #20, !dbg !8686
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !8626
  ret i32 %72, !dbg !8686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !8687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8691, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32* %1, metadata !8692, metadata !DIExpression()), !dbg !8695
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8696
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8696
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8696
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8693, metadata !DIExpression()), !dbg !8695
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8697
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8697
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8694, metadata !DIExpression()), !dbg !8695
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8698
  store i32 %8, i32* %1, align 4, !dbg !8699
  ret i32 0, !dbg !8700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !8701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8703, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 %1, metadata !8704, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 %2, metadata !8705, metadata !DIExpression()), !dbg !8708
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8709
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !8709
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !8709
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !8706, metadata !DIExpression()), !dbg !8708
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !8710
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !8710
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !8707, metadata !DIExpression()), !dbg !8708
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #21, !dbg !8711
  %10 = xor i32 %1, -1, !dbg !8712
  %11 = and i32 %9, %10, !dbg !8713
  %12 = and i32 %2, %1, !dbg !8714
  %13 = or i32 %11, %12, !dbg !8715
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #21, !dbg !8716
  ret i32 0, !dbg !8717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8718 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8720, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.value(metadata i32 %1, metadata !8721, metadata !DIExpression()), !dbg !8724
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8725
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8725
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8725
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8722, metadata !DIExpression()), !dbg !8724
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8726
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8726
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8723, metadata !DIExpression()), !dbg !8724
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8727
  %9 = or i32 %8, %1, !dbg !8728
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #21, !dbg !8729
  ret i32 0, !dbg !8730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %1, metadata !8734, metadata !DIExpression()), !dbg !8737
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8738
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8738
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8738
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8735, metadata !DIExpression()), !dbg !8737
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8739
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8739
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8736, metadata !DIExpression()), !dbg !8737
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8740
  %9 = xor i32 %1, -1, !dbg !8741
  %10 = and i32 %8, %9, !dbg !8742
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #21, !dbg !8743
  ret i32 0, !dbg !8744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8747, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %1, metadata !8748, metadata !DIExpression()), !dbg !8751
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8752
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8752
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8752
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8749, metadata !DIExpression()), !dbg !8751
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8753
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8753
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8750, metadata !DIExpression()), !dbg !8751
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8754
  %9 = xor i32 %8, %1, !dbg !8755
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #21, !dbg !8756
  ret i32 0, !dbg !8757
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8758 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8760, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i8 %1, metadata !8761, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32 %2, metadata !8762, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32 %3, metadata !8763, metadata !DIExpression()), !dbg !8770
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8771
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !8771
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !8771
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !8764, metadata !DIExpression()), !dbg !8770
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !8772
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !8772
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !8765, metadata !DIExpression()), !dbg !8770
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8773
  %11 = load volatile i32, i32* %10, align 4, !dbg !8773
  %12 = zext i8 %1 to i32, !dbg !8775
  %13 = shl nuw i32 1, %12, !dbg !8775
  %14 = and i32 %11, %13, !dbg !8776
  %15 = icmp ne i32 %14, 0, !dbg !8777
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !8778
  br i1 %17, label %77, label %18, !dbg !8778

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !8779
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !8781
  br i1 %21, label %29, label %22, !dbg !8781

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !8782
  br i1 %24, label %29, label %25, !dbg !8782

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !8784
  %27 = and i1 %26, %23, !dbg !8786
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !8787
  call void @llvm.dbg.value(metadata i32 %30, metadata !8768, metadata !DIExpression()), !dbg !8770
  %31 = icmp ult i8 %1, 16, !dbg !8788
  br i1 %31, label %32, label %35, !dbg !8790

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !8791
  call void @llvm.dbg.value(metadata i8 %33, metadata !8769, metadata !DIExpression()), !dbg !8770
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !8793
  call void @llvm.dbg.value(metadata i32* %34, metadata !8766, metadata !DIExpression()), !dbg !8770
  br label %41, !dbg !8794

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !8795
  br i1 %36, label %37, label %77, !dbg !8797

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !8798
  %39 = add nsw i8 %38, -32, !dbg !8798
  call void @llvm.dbg.value(metadata i8 %39, metadata !8769, metadata !DIExpression()), !dbg !8770
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !8800
  call void @llvm.dbg.value(metadata i32* %40, metadata !8766, metadata !DIExpression()), !dbg !8770
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !8801
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !8801
  call void @llvm.dbg.value(metadata i8 %43, metadata !8769, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32* %42, metadata !8766, metadata !DIExpression()), !dbg !8770
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !8802, !srcloc !8810
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !8802
  call void @llvm.dbg.value(metadata i32 %45, metadata !8807, metadata !DIExpression()) #20, !dbg !8811
  call void @llvm.dbg.value(metadata i32 undef, metadata !8808, metadata !DIExpression()) #20, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %45, metadata !8767, metadata !DIExpression()), !dbg !8770
  %46 = load volatile i32, i32* %42, align 4, !dbg !8812
  %47 = zext i8 %43 to i32, !dbg !8813
  %48 = shl nuw i32 3, %47, !dbg !8814
  %49 = xor i32 %48, -1, !dbg !8815
  %50 = and i32 %46, %49, !dbg !8816
  %51 = shl nuw i32 %30, %47, !dbg !8817
  %52 = or i32 %50, %51, !dbg !8818
  store volatile i32 %52, i32* %42, align 4, !dbg !8819
  %53 = icmp eq i32 %3, 100663296, !dbg !8820
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !8820
  %55 = load volatile i32, i32* %54, align 4, !dbg !8820
  %56 = or i32 %55, %13, !dbg !8820
  %57 = xor i32 %13, -1, !dbg !8820
  %58 = and i32 %55, %57, !dbg !8820
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !8820
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !8820
  store volatile i32 %59, i32* %60, align 4, !dbg !8820
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !8821
  %62 = load volatile i32, i32* %61, align 4, !dbg !8821
  br i1 %16, label %63, label %68, !dbg !8821

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !8821
  store volatile i32 %64, i32* %61, align 4, !dbg !8821
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8822
  %66 = load volatile i32, i32* %65, align 4, !dbg !8822
  %67 = or i32 %66, %13, !dbg !8822
  br label %74, !dbg !8822

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !8821
  %70 = and i32 %62, %69, !dbg !8821
  store volatile i32 %70, i32* %61, align 4, !dbg !8821
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8822
  %72 = load volatile i32, i32* %71, align 4, !dbg !8822
  %73 = and i32 %72, %69, !dbg !8822
  br label %74, !dbg !8822

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !8822
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8822
  store volatile i32 %75, i32* %76, align 4, !dbg !8822
  call void @llvm.dbg.value(metadata i32 %45, metadata !8823, metadata !DIExpression()) #20, !dbg !8826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #20, !dbg !8828, !srcloc !8829
  br label %77, !dbg !8830

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !8770
  ret i32 %78, !dbg !8831
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8834, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8835, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i1 %2, metadata !8836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8839
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8840
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !8840
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !8840
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !8837, metadata !DIExpression()), !dbg !8839
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !8841
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #21, !dbg !8842
  ret i32 %8, !dbg !8843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8844 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8850, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i1 %2, metadata !8852, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8853
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8854
  br i1 %4, label %5, label %6, !dbg !8857

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26.106, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 42) #22, !dbg !8858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.108, i32 0, i32 0)) #22, !dbg !8858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 42) #22, !dbg !8858
  unreachable, !dbg !8858

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8860
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8860
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8860
  br i1 %9, label %10, label %11, !dbg !8863

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 43) #22, !dbg !8864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.110, i32 0, i32 0)) #22, !dbg !8864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 43) #22, !dbg !8864
  unreachable, !dbg !8864

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #21, !dbg !8866
  br i1 %12, label %18, label %13, !dbg !8868

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8869
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #21, !dbg !8872
  %16 = or i1 %15, %2, !dbg !8873
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8873
  br i1 %2, label %19, label %21, !dbg !8873

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8874

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8875
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #21, !dbg !8878
  br label %21, !dbg !8879

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8853
  ret i32 %22, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8881 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8885, metadata !DIExpression()), !dbg !8886
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8887
  %3 = icmp eq %struct._snode* %2, null, !dbg !8887
  ret i1 %3, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8888 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8892, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8893, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8894, metadata !DIExpression()), !dbg !8896
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8897
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8895, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8894, metadata !DIExpression()), !dbg !8896
  %4 = icmp eq %struct._snode* %3, null, !dbg !8899
  br i1 %4, label %15, label %5, !dbg !8897

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8895, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8894, metadata !DIExpression()), !dbg !8896
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8901
  br i1 %6, label %9, label %11, !dbg !8904

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8895, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8894, metadata !DIExpression()), !dbg !8896
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8901
  br i1 %8, label %9, label %11, !dbg !8904, !llvm.loop !8905

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #21, !dbg !8906
  br label %15, !dbg !8906

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8895, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8894, metadata !DIExpression()), !dbg !8896
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #21, !dbg !8899
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8895, metadata !DIExpression()), !dbg !8896
  %14 = icmp eq %struct._snode* %13, null, !dbg !8899
  br i1 %14, label %15, label %7, !dbg !8897, !llvm.loop !8905

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !8909 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8913, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8914, metadata !DIExpression()), !dbg !8915
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8916
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #21, !dbg !8916
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #21, !dbg !8916
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !8917
  %5 = icmp eq %struct._snode* %4, null, !dbg !8917
  br i1 %5, label %6, label %8, !dbg !8916

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8919
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #21, !dbg !8919
  br label %8, !dbg !8919

8:                                                ; preds = %6, %2
  ret void, !dbg !8916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8925, metadata !DIExpression()), !dbg !8926
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8927
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8927
  ret %struct._snode* %3, !dbg !8928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8929 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8933, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8934, metadata !DIExpression()), !dbg !8935
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8936
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8937
  ret void, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8941, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8942, metadata !DIExpression()), !dbg !8943
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8944
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8945
  ret void, !dbg !8946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8947 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8949, metadata !DIExpression()), !dbg !8950
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8951
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8951
  ret %struct._snode* %3, !dbg !8952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8953 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8955, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8956, metadata !DIExpression()), !dbg !8957
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8958
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8959
  ret void, !dbg !8960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8965, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8966, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8967, metadata !DIExpression()), !dbg !8968
  %4 = icmp eq %struct._snode* %1, null, !dbg !8969
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #21, !dbg !8971
  br i1 %4, label %6, label %11, !dbg !8972

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #21, !dbg !8973
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !8975
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8975
  br i1 %8, label %9, label %15, !dbg !8973

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8977
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #21, !dbg !8977
  br label %15, !dbg !8977

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #21, !dbg !8979
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !8981
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8981
  br i1 %13, label %14, label %15, !dbg !8979

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #21, !dbg !8983
  br label %15, !dbg !8983

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #21, !dbg !8972
  ret void, !dbg !8972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !8985 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8989, metadata !DIExpression()), !dbg !8990
  %2 = icmp eq %struct._snode* %0, null, !dbg !8991
  br i1 %2, label %5, label %3, !dbg !8991

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #21, !dbg !8991
  br label %5, !dbg !8991

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8991
  ret %struct._snode* %6, !dbg !8991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8992 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8994, metadata !DIExpression()), !dbg !8995
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #21, !dbg !8996
  ret %struct._snode* %2, !dbg !8996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8997 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8999, metadata !DIExpression()), !dbg !9000
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9001
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9001
  ret %struct._snode* %3, !dbg !9002
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #15 !dbg !9003 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9007, metadata !DIExpression()), !dbg !9008
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9009
  %3 = load volatile i32, i32* %2, align 4, !dbg !9009
  ret i32 %3, !dbg !9010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9011 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9015, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %1, metadata !9016, metadata !DIExpression()), !dbg !9017
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9018
  store volatile i32 %1, i32* %3, align 4, !dbg !9019
  ret void, !dbg !9020
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !9021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9025, metadata !DIExpression()), !dbg !9029
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9030
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !9030
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !9026, metadata !DIExpression()), !dbg !9029
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9031
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !9031
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !9031
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !9027, metadata !DIExpression()), !dbg !9029
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !9032
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9032
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9033
  %11 = load volatile i32, i32* %10, align 4, !dbg !9033
  call void @llvm.dbg.value(metadata i32 %11, metadata !9028, metadata !DIExpression()), !dbg !9029
  store volatile i32 %11, i32* %10, align 4, !dbg !9034
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !9035
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #21, !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9042, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9043, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32 %2, metadata !9044, metadata !DIExpression()), !dbg !9047
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !9048
  %5 = icmp eq %struct._snode* %4, null, !dbg !9048
  br i1 %5, label %24, label %6, !dbg !9048

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #21, !dbg !9050
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9046, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9045, metadata !DIExpression()), !dbg !9047
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9051
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9051
  %12 = load i32, i32* %11, align 4, !dbg !9051
  %13 = and i32 %12, %2, !dbg !9055
  %14 = icmp eq i32 %13, 0, !dbg !9055
  br i1 %14, label %22, label %15, !dbg !9056

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9057
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9057
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9057
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9057
  br i1 %19, label %20, label %21, !dbg !9061

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 77) #22, !dbg !9062
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.110, i32 0, i32 0)) #22, !dbg !9062
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 77) #22, !dbg !9062
  unreachable, !dbg !9062

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #22, !dbg !9064
  br label %22, !dbg !9065

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9045, metadata !DIExpression()), !dbg !9047
  %23 = icmp eq %struct._snode* %8, null, !dbg !9066
  br i1 %23, label %24, label %6, !dbg !9066

24:                                               ; preds = %22, %3
  ret void, !dbg !9067
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1145, metadata !DIExpression()), !dbg !9068
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #22, !dbg !9069
  tail call void @arch_irq_enable(i32 noundef 64) #22, !dbg !9071
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #22, !dbg !9072
  tail call void @arch_irq_enable(i32 noundef 65) #22, !dbg !9071
  ret i32 0, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !9074 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9076, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i8* %1, metadata !9077, metadata !DIExpression()), !dbg !9080
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9081
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9081
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9081
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9081
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9081
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9078, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i32 -1, metadata !9079, metadata !DIExpression()), !dbg !9080
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #21, !dbg !9082
  br i1 %8, label %9, label %13, !dbg !9084

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #21, !dbg !9085
  store i8 %10, i8* %1, align 1, !dbg !9087
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #21, !dbg !9088
  br i1 %11, label %12, label %13, !dbg !9090

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #22, !dbg !9091
  br label %13, !dbg !9093

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !9080
  call void @llvm.dbg.value(metadata i32 %14, metadata !9079, metadata !DIExpression()), !dbg !9080
  ret i32 %14, !dbg !9094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #14 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9097, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i8 %1, metadata !9098, metadata !DIExpression()), !dbg !9100
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9101
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9101
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9101
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9101
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9101
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9099, metadata !DIExpression()), !dbg !9100
  br label %8, !dbg !9102

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #21, !dbg !9103
  br i1 %9, label %10, label %8, !dbg !9102, !llvm.loop !9104

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #21, !dbg !9106
  ret void, !dbg !9107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #14 !dbg !9108 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9110, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i8* %1, metadata !9111, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i32 %2, metadata !9112, metadata !DIExpression()), !dbg !9115
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9116
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9116
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9116
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9116
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9116
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9113, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i32 0, metadata !9114, metadata !DIExpression()), !dbg !9115
  %9 = icmp eq i32 %2, 0, !dbg !9117
  br i1 %9, label %18, label %10, !dbg !9118

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9114, metadata !DIExpression()), !dbg !9115
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #21, !dbg !9119
  br i1 %12, label %13, label %18, !dbg !9120

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9121
  %15 = load i8, i8* %14, align 1, !dbg !9121
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #21, !dbg !9123
  %16 = add nuw i32 %11, 1, !dbg !9124
  call void @llvm.dbg.value(metadata i32 %16, metadata !9114, metadata !DIExpression()), !dbg !9115
  %17 = icmp eq i32 %16, %2, !dbg !9117
  br i1 %17, label %18, label %10, !dbg !9118, !llvm.loop !9125

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9115
  ret i32 %19, !dbg !9127
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !9128 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9130, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.value(metadata i8* %1, metadata !9131, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.value(metadata i32 %2, metadata !9132, metadata !DIExpression()), !dbg !9135
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9136
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9136
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9136
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9136
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9136
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9133, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.value(metadata i32 0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %9 = icmp eq i32 %2, 0, !dbg !9137
  br i1 %9, label %18, label %10, !dbg !9138

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9134, metadata !DIExpression()), !dbg !9135
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #21, !dbg !9139
  br i1 %12, label %13, label %18, !dbg !9140

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #21, !dbg !9141
  %15 = add nuw i32 %11, 1, !dbg !9143
  call void @llvm.dbg.value(metadata i32 %15, metadata !9134, metadata !DIExpression()), !dbg !9135
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9144
  store i8 %14, i8* %16, align 1, !dbg !9145
  %17 = icmp eq i32 %15, %2, !dbg !9137
  br i1 %17, label %18, label %10, !dbg !9138, !llvm.loop !9146

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9135
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #21, !dbg !9148
  br i1 %20, label %21, label %22, !dbg !9150

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #22, !dbg !9151
  br label %22, !dbg !9153

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !9154
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9157, metadata !DIExpression()), !dbg !9159
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9160
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9160
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9160
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9160
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9160
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9158, metadata !DIExpression()), !dbg !9159
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #22, !dbg !9161
  ret void, !dbg !9162
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9163 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9165, metadata !DIExpression()), !dbg !9167
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9168
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9168
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9168
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9168
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9168
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9166, metadata !DIExpression()), !dbg !9167
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #22, !dbg !9169
  ret void, !dbg !9170
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #15 !dbg !9171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9173, metadata !DIExpression()), !dbg !9175
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9176
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9176
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9176
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9176
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9176
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9174, metadata !DIExpression()), !dbg !9175
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #21, !dbg !9177
  %8 = zext i1 %7 to i32, !dbg !9177
  ret i32 %8, !dbg !9178
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9179 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9181, metadata !DIExpression()), !dbg !9183
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9184
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9184
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9184
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9184
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9184
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9182, metadata !DIExpression()), !dbg !9183
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #22, !dbg !9185
  ret void, !dbg !9186
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9187 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9189, metadata !DIExpression()), !dbg !9191
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9192
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9192
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9192
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9192
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9192
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9190, metadata !DIExpression()), !dbg !9191
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #22, !dbg !9193
  ret void, !dbg !9194
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #15 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9197, metadata !DIExpression()), !dbg !9199
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9200
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9200
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9200
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9200
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9200
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9198, metadata !DIExpression()), !dbg !9199
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #21, !dbg !9201
  %8 = zext i1 %7 to i32, !dbg !9201
  ret i32 %8, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9205, metadata !DIExpression()), !dbg !9207
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9208
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9208
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9208
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9208
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9208
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9206, metadata !DIExpression()), !dbg !9207
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #22, !dbg !9209
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #22, !dbg !9210
  ret void, !dbg !9211
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9214, metadata !DIExpression()), !dbg !9216
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9217
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9217
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9217
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9217
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9217
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9215, metadata !DIExpression()), !dbg !9216
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #22, !dbg !9218
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #22, !dbg !9219
  ret void, !dbg !9220
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #15 !dbg !9221 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9223, metadata !DIExpression()), !dbg !9225
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9226
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9226
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9226
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9226
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9226
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9224, metadata !DIExpression()), !dbg !9225
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #21, !dbg !9227
  br i1 %7, label %11, label %8, !dbg !9228

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #21, !dbg !9229
  %10 = zext i1 %9 to i32, !dbg !9228
  br label %11, !dbg !9228

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !9230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #4 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9233, metadata !DIExpression()), !dbg !9234
  ret i32 1, !dbg !9235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #9 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9238, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9239, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i8* %2, metadata !9240, metadata !DIExpression()), !dbg !9243
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9244
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !9244
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !9244
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !9241, metadata !DIExpression()), !dbg !9243
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !9245
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9246
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !9247
  store i8* %2, i8** %8, align 4, !dbg !9248
  ret void, !dbg !9249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9250 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9254, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.value(metadata i32 %1, metadata !9255, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.value(metadata i32* null, metadata !9256, metadata !DIExpression()), !dbg !9257
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9258
  %4 = lshr i32 %1, 16, !dbg !9259
  %5 = add i32 %4, %3, !dbg !9260
  %6 = inttoptr i32 %5 to i32*, !dbg !9261
  call void @llvm.dbg.value(metadata i32* %6, metadata !9256, metadata !DIExpression()), !dbg !9257
  %7 = load volatile i32, i32* %6, align 4, !dbg !9262
  %8 = and i32 %1, 65535, !dbg !9263
  %9 = shl nuw i32 1, %8, !dbg !9264
  %10 = and i32 %7, %9, !dbg !9264
  %11 = icmp ne i32 %10, 0, !dbg !9264
  ret i1 %11, !dbg !9265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !9266 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9272
  %3 = load volatile i32, i32* %2, align 4, !dbg !9272
  %4 = trunc i32 %3 to i8, !dbg !9273
  ret i8 %4, !dbg !9274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !9275 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9279, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i8 %1, metadata !9280, metadata !DIExpression()), !dbg !9281
  %3 = zext i8 %1 to i32, !dbg !9282
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9283
  store volatile i32 %3, i32* %4, align 4, !dbg !9284
  ret void, !dbg !9285
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1443, metadata !DIExpression()), !dbg !9286
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #22, !dbg !9287
  tail call void @arch_irq_enable(i32 noundef 26) #22, !dbg !9289
  ret void, !dbg !9289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !9290 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9292, metadata !DIExpression()), !dbg !9294
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9295
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !9295
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !9295
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !9293, metadata !DIExpression()), !dbg !9294
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !9296
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !9296
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !9298
  br i1 %7, label %11, label %8, !dbg !9299

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !9300
  %10 = load i8*, i8** %9, align 4, !dbg !9300
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #22, !dbg !9302
  br label %11, !dbg !9303

11:                                               ; preds = %8, %1
  ret void, !dbg !9304
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !9305 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9307, metadata !DIExpression()), !dbg !9322
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9323
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9323
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9323
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9323
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9323
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9308, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !9309, metadata !DIExpression()), !dbg !9322
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9324, !srcloc !9330
  call void @llvm.dbg.value(metadata i32 undef, metadata !9327, metadata !DIExpression()) #20, !dbg !9331
  call void @llvm.dbg.value(metadata i32 undef, metadata !9328, metadata !DIExpression()) #20, !dbg !9331
  call void @llvm.dbg.value(metadata i32 undef, metadata !9310, metadata !DIExpression()), !dbg !9322
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !9332
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #20, !dbg !9332
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !9312, metadata !DIExpression()), !dbg !9333
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !9334
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !9335
  %12 = load i32, i32* %11, align 4, !dbg !9335
  store i32 %12, i32* %10, align 4, !dbg !9334
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !9334
  store i32 32, i32* %13, align 4, !dbg !9334
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !9334
  store i32 0, i32* %14, align 4, !dbg !9334
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !9334
  store i32 0, i32* %15, align 4, !dbg !9334
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !9334
  store i32 6, i32* %16, align 4, !dbg !9334
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !9336
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !9336
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #21, !dbg !9337
  call void @llvm.dbg.value(metadata i32 %19, metadata !9311, metadata !DIExpression()), !dbg !9322
  %20 = icmp eq i32 %19, 0, !dbg !9338
  br i1 %20, label %21, label %30, !dbg !9340

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !9334
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !9324
  call void @llvm.dbg.value(metadata i32 %23, metadata !9327, metadata !DIExpression()) #20, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %23, metadata !9310, metadata !DIExpression()), !dbg !9322
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #22, !dbg !9341
  store i32 %24, i32* %22, align 4, !dbg !9342
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #22, !dbg !9343
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #21, !dbg !9344
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #21, !dbg !9345
  call void @llvm.dbg.value(metadata i32 undef, metadata !9346, metadata !DIExpression()) #20, !dbg !9349
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #20, !dbg !9351, !srcloc !9352
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !9353
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !9353
  call void %26(%struct.device* noundef nonnull %0) #22, !dbg !9354
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !9355
  %28 = load i8, i8* %27, align 4, !dbg !9355
  %29 = zext i8 %28 to i32, !dbg !9356
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #22, !dbg !9357
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #21, !dbg !9358
  br label %30, !dbg !9359

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #20, !dbg !9360
  ret i32 %19, !dbg !9360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9361 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9365, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i8 0, metadata !9366, metadata !DIExpression()), !dbg !9369
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9370
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !9370
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9368, metadata !DIExpression(DW_OP_deref)), !dbg !9369
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #22, !dbg !9371
  call void @llvm.dbg.value(metadata i32 %4, metadata !9367, metadata !DIExpression()), !dbg !9369
  %5 = icmp slt i32 %4, 0, !dbg !9372
  br i1 %5, label %9, label %6, !dbg !9374

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9375
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9368, metadata !DIExpression()), !dbg !9369
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #21, !dbg !9376
  br label %9, !dbg !9377

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9369
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !9378
  ret i32 %10, !dbg !9378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !9379 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9381, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i8 2, metadata !9382, metadata !DIExpression()), !dbg !9383
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9384
  %3 = load volatile i32, i32* %2, align 4, !dbg !9384
  %4 = and i32 %3, -64513, !dbg !9385
  %5 = or i32 %4, 2048, !dbg !9386
  store volatile i32 %5, i32* %2, align 4, !dbg !9387
  ret void, !dbg !9388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8 1, metadata !9392, metadata !DIExpression()), !dbg !9393
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9394
  %3 = load volatile i32, i32* %2, align 4, !dbg !9394
  %4 = and i32 %3, -64, !dbg !9395
  %5 = or i32 %4, 1, !dbg !9396
  store volatile i32 %5, i32* %2, align 4, !dbg !9397
  ret void, !dbg !9398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !9399 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9403, metadata !DIExpression()), !dbg !9404
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9405
  %3 = load volatile i32, i32* %2, align 4, !dbg !9406
  %4 = or i32 %3, 1, !dbg !9406
  store volatile i32 %4, i32* %2, align 4, !dbg !9406
  ret void, !dbg !9407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9412, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9413, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i32 0, metadata !9414, metadata !DIExpression()), !dbg !9415
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9416
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !9416
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9417
  %5 = load i8, i8* %4, align 4, !dbg !9417
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #22, !dbg !9418
  ret i32 %6, !dbg !9419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !9420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9422, metadata !DIExpression()), !dbg !9423
  tail call fastcc void @__NVIC_SetPriority.120() #21, !dbg !9424
  store i32 19999, i32* @last_load, align 4, !dbg !9425
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9426
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9427
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9428
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9429
  %3 = or i32 %2, 7, !dbg !9429
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9429
  ret i32 0, !dbg !9430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.120() unnamed_addr #14 !dbg !9431 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9433, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i32 1, metadata !9434, metadata !DIExpression()), !dbg !9435
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9436
  ret void, !dbg !9439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9440 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9442, metadata !DIExpression()), !dbg !9444
  %2 = tail call fastcc i32 @elapsed() #21, !dbg !9445
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9446
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9447
  %5 = add i32 %4, %3, !dbg !9447
  store i32 %5, i32* @cycle_count, align 4, !dbg !9447
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9448
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9449
  %7 = sub i32 %5, %6, !dbg !9452
  %8 = udiv i32 %7, 20000, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %8, metadata !9443, metadata !DIExpression()), !dbg !9444
  %9 = mul nuw i32 %8, 20000, !dbg !9454
  %10 = add i32 %9, %6, !dbg !9455
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9455
  tail call void @sys_clock_announce(i32 noundef %8) #22, !dbg !9456
  tail call void @z_arm_int_exit() #22, !dbg !9457
  ret void, !dbg !9458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !9459 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %1, metadata !9461, metadata !DIExpression()), !dbg !9465
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9466
  call void @llvm.dbg.value(metadata i32 %2, metadata !9462, metadata !DIExpression()), !dbg !9465
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %3, metadata !9463, metadata !DIExpression()), !dbg !9465
  %4 = and i32 %2, 65536, !dbg !9468
  %5 = icmp ne i32 %4, 0, !dbg !9468
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9470
  %8 = load i32, i32* @last_load, align 4, !dbg !9465
  br i1 %7, label %9, label %13, !dbg !9470

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9471
  %11 = add i32 %10, %8, !dbg !9471
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9471
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9473
  br label %13, !dbg !9474

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9475
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9476
  %16 = add i32 %14, %15, !dbg !9477
  ret i32 %16, !dbg !9478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9483, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata i1 %1, metadata !9484, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9496
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9497
  br i1 %4, label %5, label %8, !dbg !9497

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9499
  %7 = and i32 %6, -2, !dbg !9499
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9499
  store i32 -16777216, i32* @last_load, align 4, !dbg !9501
  br label %60, !dbg !9502

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9503
  call void @llvm.dbg.value(metadata i32 %9, metadata !9488, metadata !DIExpression()), !dbg !9496
  br i1 %3, label %18, label %10, !dbg !9504

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9504
  call void @llvm.dbg.value(metadata i32 undef, metadata !9483, metadata !DIExpression()), !dbg !9496
  %12 = icmp slt i32 %11, 1, !dbg !9505
  br i1 %12, label %18, label %13, !dbg !9505

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !9505
  %15 = select i1 %14, i32 %11, i32 837, !dbg !9505
  %16 = mul nuw nsw i32 %15, 20000, !dbg !9505
  %17 = add nuw nsw i32 %16, 19999, !dbg !9505
  br label %18, !dbg !9505

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9483, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9506, metadata !DIExpression()) #20, !dbg !9513
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9515, !srcloc !9521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9518, metadata !DIExpression()) #20, !dbg !9522
  call void @llvm.dbg.value(metadata i32 undef, metadata !9519, metadata !DIExpression()) #20, !dbg !9522
  call void @llvm.dbg.value(metadata i32 undef, metadata !9512, metadata !DIExpression()) #20, !dbg !9513
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9523
  br i1 %21, label %23, label %22, !dbg !9526

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9527
  unreachable, !dbg !9527

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %24, metadata !9518, metadata !DIExpression()) #20, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %24, metadata !9512, metadata !DIExpression()) #20, !dbg !9513
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %24, metadata !9489, metadata !DIExpression()), !dbg !9496
  %25 = tail call fastcc i32 @elapsed() #21, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %25, metadata !9494, metadata !DIExpression()), !dbg !9496
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %26, metadata !9486, metadata !DIExpression()), !dbg !9496
  %27 = load i32, i32* @cycle_count, align 4, !dbg !9532
  %28 = add i32 %27, %25, !dbg !9532
  store i32 %28, i32* @cycle_count, align 4, !dbg !9532
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9533
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !9534
  %30 = sub i32 %28, %29, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %30, metadata !9495, metadata !DIExpression()), !dbg !9496
  %31 = icmp slt i32 %30, 0, !dbg !9536
  br i1 %31, label %41, label %32, !dbg !9538

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !9485, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata i32 undef, metadata !9485, metadata !DIExpression()), !dbg !9496
  %33 = add nuw i32 %19, %30, !dbg !9539
  %34 = urem i32 %33, 20000, !dbg !9541
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !9485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9496
  %35 = sub nuw nsw i32 %19, %34, !dbg !9542
  call void @llvm.dbg.value(metadata i32 %35, metadata !9485, metadata !DIExpression()), !dbg !9496
  %36 = icmp ugt i32 %35, 1250, !dbg !9543
  br i1 %36, label %37, label %39, !dbg !9543

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !9485, metadata !DIExpression()), !dbg !9496
  %38 = icmp ugt i32 %35, 16740000, !dbg !9544
  br i1 %38, label %41, label %39, !dbg !9546

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !9547
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9548
  call void @llvm.dbg.value(metadata i32 %43, metadata !9487, metadata !DIExpression()), !dbg !9496
  %44 = add nsw i32 %42, -1, !dbg !9549
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9550
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9551
  %45 = icmp ult i32 %26, %43, !dbg !9552
  br i1 %45, label %46, label %51, !dbg !9554

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !9555
  %48 = add i32 %26, %9, !dbg !9557
  %49 = sub i32 %48, %43, !dbg !9558
  %50 = add i32 %49, %47, !dbg !9555
  br label %55, !dbg !9559

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !9560
  %53 = load i32, i32* @cycle_count, align 4, !dbg !9562
  %54 = add i32 %52, %53, !dbg !9562
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !9563
  store i32 %56, i32* @cycle_count, align 4, !dbg !9563
  call void @llvm.dbg.value(metadata i32 undef, metadata !9564, metadata !DIExpression()) #20, !dbg !9570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9569, metadata !DIExpression()) #20, !dbg !9570
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9572
  br i1 %57, label %59, label %58, !dbg !9575

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.126, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9576
  unreachable, !dbg !9576

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !9564, metadata !DIExpression()) #20, !dbg !9570
  call void @llvm.dbg.value(metadata i32 %24, metadata !9578, metadata !DIExpression()) #20, !dbg !9581
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #20, !dbg !9583, !srcloc !9584
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !9585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9586 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9506, metadata !DIExpression()) #20, !dbg !9590
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9592, !srcloc !9521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9518, metadata !DIExpression()) #20, !dbg !9594
  call void @llvm.dbg.value(metadata i32 undef, metadata !9519, metadata !DIExpression()) #20, !dbg !9594
  call void @llvm.dbg.value(metadata i32 undef, metadata !9512, metadata !DIExpression()) #20, !dbg !9590
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9595
  br i1 %2, label %4, label %3, !dbg !9596

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9597
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9597
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9597
  unreachable, !dbg !9597

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !9518, metadata !DIExpression()) #20, !dbg !9594
  call void @llvm.dbg.value(metadata i32 undef, metadata !9512, metadata !DIExpression()) #20, !dbg !9590
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9598
  call void @llvm.dbg.value(metadata i32 undef, metadata !9588, metadata !DIExpression()), !dbg !9599
  %5 = tail call fastcc i32 @elapsed() #21, !dbg !9600
  %6 = load i32, i32* @cycle_count, align 4, !dbg !9601
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !9602
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !9589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9599
  call void @llvm.dbg.value(metadata i32 undef, metadata !9564, metadata !DIExpression()) #20, !dbg !9603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9569, metadata !DIExpression()) #20, !dbg !9603
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9605
  br i1 %8, label %10, label %9, !dbg !9606

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.126, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9607
  unreachable, !dbg !9607

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !9608
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !9589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9599
  %12 = sub i32 %11, %7, !dbg !9609
  call void @llvm.dbg.value(metadata i32 %12, metadata !9589, metadata !DIExpression()), !dbg !9599
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !9592
  call void @llvm.dbg.value(metadata i32 %13, metadata !9518, metadata !DIExpression()) #20, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %13, metadata !9512, metadata !DIExpression()) #20, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %13, metadata !9588, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 undef, metadata !9564, metadata !DIExpression()) #20, !dbg !9603
  call void @llvm.dbg.value(metadata i32 undef, metadata !9578, metadata !DIExpression()) #20, !dbg !9610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #20, !dbg !9612, !srcloc !9584
  %14 = udiv i32 %12, 20000, !dbg !9613
  ret i32 %14, !dbg !9614
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9615 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9506, metadata !DIExpression()) #20, !dbg !9619
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9621, !srcloc !9521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9518, metadata !DIExpression()) #20, !dbg !9623
  call void @llvm.dbg.value(metadata i32 undef, metadata !9519, metadata !DIExpression()) #20, !dbg !9623
  call void @llvm.dbg.value(metadata i32 undef, metadata !9512, metadata !DIExpression()) #20, !dbg !9619
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9624
  br i1 %2, label %4, label %3, !dbg !9625

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9626
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9626
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9626
  unreachable, !dbg !9626

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !9518, metadata !DIExpression()) #20, !dbg !9623
  call void @llvm.dbg.value(metadata i32 undef, metadata !9512, metadata !DIExpression()) #20, !dbg !9619
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9627
  call void @llvm.dbg.value(metadata i32 undef, metadata !9617, metadata !DIExpression()), !dbg !9628
  %5 = tail call fastcc i32 @elapsed() #21, !dbg !9629
  %6 = load i32, i32* @cycle_count, align 4, !dbg !9630
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !9618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !9628
  call void @llvm.dbg.value(metadata i32 undef, metadata !9564, metadata !DIExpression()) #20, !dbg !9631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9569, metadata !DIExpression()) #20, !dbg !9631
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9633
  br i1 %7, label %9, label %8, !dbg !9634

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.126, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9635
  unreachable, !dbg !9635

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %10, metadata !9618, metadata !DIExpression()), !dbg !9628
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %11, metadata !9518, metadata !DIExpression()) #20, !dbg !9623
  call void @llvm.dbg.value(metadata i32 %11, metadata !9512, metadata !DIExpression()) #20, !dbg !9619
  call void @llvm.dbg.value(metadata i32 %11, metadata !9617, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i32 undef, metadata !9564, metadata !DIExpression()) #20, !dbg !9631
  call void @llvm.dbg.value(metadata i32 undef, metadata !9578, metadata !DIExpression()) #20, !dbg !9637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #20, !dbg !9639, !srcloc !9584
  ret i32 %10, !dbg !9640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !9641 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9642
  %2 = icmp eq i32 %1, -16777216, !dbg !9644
  br i1 %2, label %3, label %6, !dbg !9645

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9646
  %5 = or i32 %4, 1, !dbg !9646
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9646
  br label %6, !dbg !9648

6:                                                ; preds = %3, %0
  ret void, !dbg !9649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !9650 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9651
  %2 = and i32 %1, -2, !dbg !9651
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9651
  ret void, !dbg !9652
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !9653 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9686, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.value(metadata i8 %1, metadata !9687, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9688, metadata !DIExpression()), !dbg !9689
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9690
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9690
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9689
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9691
  %8 = load i8, i8* %6, align 4, !dbg !9692
  %9 = zext i8 %8 to i32, !dbg !9693
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9693
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9694
  br i1 %11, label %18, label %24, !dbg !9695

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9689
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9691
  %14 = load i8, i8* %6, align 4, !dbg !9692
  %15 = zext i8 %14 to i32, !dbg !9693
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9693
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9694
  br i1 %17, label %18, label %24, !dbg !9695, !llvm.loop !9696

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9698
  %21 = load i8, i8* %20, align 1, !dbg !9698
  %22 = icmp eq i8 %21, %1, !dbg !9701
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9702
  br i1 %22, label %24, label %12, !dbg !9703

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9689
  ret i32 %25, !dbg !9704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #4 !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9707, metadata !DIExpression()), !dbg !9708
  ret i32 0, !dbg !9709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !9728, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i8 %1, metadata !9729, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %2, metadata !9730, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i8 0, metadata !9731, metadata !DIExpression()), !dbg !9742
  %4 = icmp eq i8 %1, 0, !dbg !9743
  br i1 %4, label %7, label %5, !dbg !9744

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9743
  br label %8, !dbg !9744

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !9745

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9731, metadata !DIExpression()), !dbg !9742
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !9746
  %11 = load i32, i32* %10, align 4, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %11, metadata !9733, metadata !DIExpression()), !dbg !9747
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !9748
  %13 = load i8, i8* %12, align 4, !dbg !9748
  call void @llvm.dbg.value(metadata i8 %13, metadata !9736, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9747
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !9749
  %15 = load i32, i32* %14, align 4, !dbg !9749
  call void @llvm.dbg.value(metadata i32 %15, metadata !9737, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata i8 %13, metadata !9738, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9747
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !9750
  %17 = load i32, i32* %16, align 4, !dbg !9750
  call void @llvm.dbg.value(metadata i32 %17, metadata !9739, metadata !DIExpression()), !dbg !9747
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !9751
  %19 = load i32, i32* %18, align 4, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %19, metadata !9740, metadata !DIExpression()), !dbg !9747
  %20 = and i8 %13, 15, !dbg !9752
  %21 = zext i8 %20 to i32, !dbg !9752
  %22 = lshr i32 %19, 27, !dbg !9753
  %23 = and i32 %22, 16, !dbg !9753
  %24 = or i32 %23, %21, !dbg !9754
  %25 = inttoptr i32 %11 to i32*, !dbg !9755
  store volatile i32 %24, i32* %25, align 4, !dbg !9756
  %26 = icmp eq i32 %15, 0, !dbg !9757
  br i1 %26, label %32, label %27, !dbg !9759

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !9760
  call void @llvm.dbg.value(metadata i8 %28, metadata !9738, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9747
  %29 = and i8 %28, 7, !dbg !9761
  %30 = zext i8 %29 to i32, !dbg !9761
  %31 = inttoptr i32 %15 to i32*, !dbg !9763
  store volatile i32 %30, i32* %31, align 4, !dbg !9764
  br label %32, !dbg !9765

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !9766
  br i1 %33, label %37, label %34, !dbg !9768

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !9769
  %36 = inttoptr i32 %17 to i32*, !dbg !9771
  store volatile i32 %35, i32* %36, align 4, !dbg !9772
  br label %37, !dbg !9773

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !9774
  call void @llvm.dbg.value(metadata i32 %38, metadata !9731, metadata !DIExpression()), !dbg !9742
  %39 = icmp eq i32 %38, %6, !dbg !9743
  br i1 %39, label %7, label %8, !dbg !9744, !llvm.loop !9775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9777 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9834, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i32 %1, metadata !9835, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i32 %2, metadata !9836, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i32 %3, metadata !9837, metadata !DIExpression()), !dbg !9838
  %5 = icmp ult i32 %2, 8, !dbg !9839
  br i1 %5, label %7, label %6, !dbg !9842

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 45) #22, !dbg !9843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 45) #22, !dbg !9843
  unreachable, !dbg !9843

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !9845
  br i1 %8, label %10, label %9, !dbg !9848

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 46) #22, !dbg !9849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 46) #22, !dbg !9849
  unreachable, !dbg !9849

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !9851
  %12 = load volatile i32, i32* %11, align 4, !dbg !9851
  %13 = and i32 %12, -458816, !dbg !9852
  %14 = shl nuw nsw i32 %2, 16, !dbg !9853
  %15 = and i32 %14, 458752, !dbg !9853
  %16 = or i32 %15, %3, !dbg !9854
  %17 = or i32 %16, %13, !dbg !9855
  store volatile i32 %17, i32* %11, align 4, !dbg !9856
  ret void, !dbg !9857
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !9858 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9862, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %1, metadata !9863, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32* %2, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32* %3, metadata !9865, metadata !DIExpression()), !dbg !9866
  %5 = icmp ne i32* %2, null, !dbg !9867
  %6 = icmp ne i32* %3, null, !dbg !9867
  %7 = and i1 %5, %6, !dbg !9867
  br i1 %7, label %9, label %8, !dbg !9867

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 61) #22, !dbg !9870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 61) #22, !dbg !9870
  unreachable, !dbg !9870

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !9872
  %11 = load volatile i32, i32* %10, align 4, !dbg !9872
  %12 = lshr i32 %11, 16, !dbg !9873
  %13 = and i32 %12, 7, !dbg !9873
  store i32 %13, i32* %2, align 4, !dbg !9874
  %14 = load volatile i32, i32* %10, align 4, !dbg !9875
  %15 = and i32 %14, 63, !dbg !9876
  store i32 %15, i32* %3, align 4, !dbg !9877
  ret void, !dbg !9878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !9879 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9883, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %1, metadata !9884, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %2, metadata !9885, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %3, metadata !9886, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %4, metadata !9887, metadata !DIExpression()), !dbg !9888
  %6 = icmp ult i32 %3, 8, !dbg !9889
  br i1 %6, label %8, label %7, !dbg !9892

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 75) #22, !dbg !9893
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 75) #22, !dbg !9893
  unreachable, !dbg !9893

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !9895
  br i1 %9, label %11, label %10, !dbg !9898

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 76) #22, !dbg !9899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 76) #22, !dbg !9899
  unreachable, !dbg !9899

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !9901
  %13 = load volatile i32, i32* %12, align 4, !dbg !9901
  %14 = and i32 %13, -117899328, !dbg !9902
  %15 = shl i32 %2, 24, !dbg !9903
  %16 = and i32 %15, 117440512, !dbg !9903
  %17 = shl nuw nsw i32 %3, 16, !dbg !9904
  %18 = and i32 %17, 458752, !dbg !9904
  %19 = or i32 %16, %4, !dbg !9905
  %20 = or i32 %19, %18, !dbg !9906
  %21 = or i32 %20, %14, !dbg !9907
  store volatile i32 %21, i32* %12, align 4, !dbg !9908
  ret void, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9915, metadata !DIExpression()), !dbg !9916
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #21, !dbg !9917
  br i1 %2, label %7, label %3, !dbg !9919

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !9920
  %5 = and i32 %4, 127, !dbg !9921
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !9922
  br label %7, !dbg !9923

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !9916
  ret i32 %8, !dbg !9924
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9925 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9929, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata i32 %1, metadata !9930, metadata !DIExpression()), !dbg !9931
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !9932
  %4 = and i32 %1, 65535, !dbg !9932
  %5 = add i32 %4, %3, !dbg !9932
  %6 = inttoptr i32 %5 to i32*, !dbg !9932
  %7 = load volatile i32, i32* %6, align 4, !dbg !9932
  %8 = and i32 %7, 65536, !dbg !9933
  %9 = icmp ne i32 %8, 0, !dbg !9934
  ret i1 %9, !dbg !9935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9936 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9938, metadata !DIExpression()), !dbg !9939
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #21, !dbg !9940
  br i1 %2, label %8, label %3, !dbg !9942

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !9943
  %5 = and i32 %4, 1, !dbg !9945
  %6 = icmp eq i32 %5, 0, !dbg !9945
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !9946
  br label %8, !dbg !9946

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !9939
  ret i32 %9, !dbg !9947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9948 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9950, metadata !DIExpression()), !dbg !9954
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #21, !dbg !9955
  br i1 %2, label %40, label %3, !dbg !9957

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !9958
  %5 = trunc i32 %4 to i8, !dbg !9958
  %6 = and i8 %5, 127, !dbg !9958
  call void @llvm.dbg.value(metadata i8 %6, metadata !9951, metadata !DIExpression()), !dbg !9954
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !9959
  %8 = lshr i32 %7, 21, !dbg !9960
  %9 = and i32 %8, 3, !dbg !9961
  call void @llvm.dbg.value(metadata i32 %9, metadata !9952, metadata !DIExpression()), !dbg !9954
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !9962
  %11 = load i32, i32* %10, align 4, !dbg !9962
  call void @llvm.dbg.value(metadata i8 undef, metadata !9952, metadata !DIExpression()), !dbg !9954
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !9963
  %13 = load volatile i32, i32* %12, align 4, !dbg !9963
  %14 = and i32 %13, 32768, !dbg !9965
  %15 = icmp eq i32 %14, 0, !dbg !9965
  br i1 %15, label %36, label %16, !dbg !9966

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !9967
  %18 = and i32 %17, 32767, !dbg !9969
  %19 = uitofp i32 %18 to float, !dbg !9970
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !9971
  %21 = load volatile i32, i32* %20, align 4, !dbg !9971
  %22 = and i32 %21, 1073741823, !dbg !9972
  %23 = uitofp i32 %22 to float, !dbg !9973
  %24 = fdiv float %19, %23, !dbg !9974
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !9975
  %26 = load volatile i32, i32* %25, align 4, !dbg !9975
  %27 = and i32 %26, 1073741823, !dbg !9976
  %28 = uitofp i32 %27 to float, !dbg !9977
  %29 = fmul float %24, %28, !dbg !9978
  call void @llvm.dbg.value(metadata float %29, metadata !9953, metadata !DIExpression()), !dbg !9954
  %30 = lshr i32 24000000, %11, !dbg !9979
  %31 = uitofp i32 %30 to float, !dbg !9980
  %32 = uitofp i8 %6 to float, !dbg !9981
  %33 = fadd float %29, %32, !dbg !9982
  %34 = fmul float %33, %31, !dbg !9983
  %35 = fptoui float %34 to i32, !dbg !9984
  br label %40, !dbg !9985

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !9986
  %38 = zext i8 %6 to i32, !dbg !9988
  %39 = mul nuw i32 %37, %38, !dbg !9989
  br label %40, !dbg !9990

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !9954
  ret i32 %41, !dbg !9991
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9994, metadata !DIExpression()), !dbg !9995
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #21, !dbg !9996
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !9995
  ret i32 %3, !dbg !9998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10001, metadata !DIExpression()), !dbg !10006
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #21, !dbg !10007
  br i1 %2, label %47, label %3, !dbg !10009

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10010
  %5 = trunc i32 %4 to i8, !dbg !10010
  %6 = and i8 %5, 127, !dbg !10010
  call void @llvm.dbg.value(metadata i8 %6, metadata !10002, metadata !DIExpression()), !dbg !10006
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10011
  %8 = lshr i32 %7, 22, !dbg !10012
  %9 = and i32 %8, 3, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %8, metadata !10003, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10006
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10014
  %11 = lshr i32 %10, 19, !dbg !10015
  %12 = and i32 %11, 3, !dbg !10016
  call void @llvm.dbg.value(metadata i32 %11, metadata !10004, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10006
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10017
  %14 = load i32, i32* %13, align 4, !dbg !10017
  call void @llvm.dbg.value(metadata i8 undef, metadata !10003, metadata !DIExpression()), !dbg !10006
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !10018
  %16 = load i32, i32* %15, align 4, !dbg !10018
  call void @llvm.dbg.value(metadata i8 undef, metadata !10004, metadata !DIExpression()), !dbg !10006
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !10019
  %18 = load volatile i32, i32* %17, align 4, !dbg !10019
  %19 = and i32 %18, 32768, !dbg !10021
  %20 = icmp eq i32 %19, 0, !dbg !10021
  br i1 %20, label %42, label %21, !dbg !10022

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10023
  %23 = and i32 %22, 32767, !dbg !10025
  %24 = uitofp i32 %23 to float, !dbg !10026
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !10027
  %26 = load volatile i32, i32* %25, align 4, !dbg !10027
  %27 = and i32 %26, 1073741823, !dbg !10028
  %28 = uitofp i32 %27 to float, !dbg !10029
  %29 = fdiv float %24, %28, !dbg !10030
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !10031
  %31 = load volatile i32, i32* %30, align 4, !dbg !10031
  %32 = and i32 %31, 1073741823, !dbg !10032
  %33 = uitofp i32 %32 to float, !dbg !10033
  %34 = fmul float %29, %33, !dbg !10034
  call void @llvm.dbg.value(metadata float %34, metadata !10005, metadata !DIExpression()), !dbg !10006
  %35 = lshr i32 24000000, %16, !dbg !10035
  %36 = lshr i32 %35, %14, !dbg !10036
  %37 = uitofp i32 %36 to float, !dbg !10037
  %38 = uitofp i8 %6 to float, !dbg !10038
  %39 = fadd float %34, %38, !dbg !10039
  %40 = fmul float %39, %37, !dbg !10040
  %41 = fptoui float %40 to i32, !dbg !10041
  br label %47, !dbg !10042

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10043
  %44 = lshr i32 %43, %14, !dbg !10045
  %45 = zext i8 %6 to i32, !dbg !10046
  %46 = mul nuw i32 %44, %45, !dbg !10047
  br label %47, !dbg !10048

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10006
  ret i32 %48, !dbg !10049
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !10050 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10052, metadata !DIExpression()), !dbg !10057
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #21, !dbg !10058
  br i1 %2, label %47, label %3, !dbg !10060

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10061
  %5 = trunc i32 %4 to i8, !dbg !10061
  %6 = and i8 %5, 127, !dbg !10061
  call void @llvm.dbg.value(metadata i8 %6, metadata !10053, metadata !DIExpression()), !dbg !10057
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10062
  %8 = lshr i32 %7, 22, !dbg !10063
  %9 = and i32 %8, 3, !dbg !10064
  call void @llvm.dbg.value(metadata i32 %8, metadata !10054, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10057
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10065
  %11 = lshr i32 %10, 19, !dbg !10066
  %12 = and i32 %11, 3, !dbg !10067
  call void @llvm.dbg.value(metadata i32 %11, metadata !10055, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10057
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10068
  %14 = load i32, i32* %13, align 4, !dbg !10068
  call void @llvm.dbg.value(metadata i8 undef, metadata !10054, metadata !DIExpression()), !dbg !10057
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !10069
  %16 = load i32, i32* %15, align 4, !dbg !10069
  call void @llvm.dbg.value(metadata i8 undef, metadata !10055, metadata !DIExpression()), !dbg !10057
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !10070
  %18 = load volatile i32, i32* %17, align 4, !dbg !10070
  %19 = and i32 %18, 32768, !dbg !10072
  %20 = icmp eq i32 %19, 0, !dbg !10072
  br i1 %20, label %42, label %21, !dbg !10073

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10074
  %23 = and i32 %22, 32767, !dbg !10076
  %24 = uitofp i32 %23 to float, !dbg !10077
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !10078
  %26 = load volatile i32, i32* %25, align 4, !dbg !10078
  %27 = and i32 %26, 1073741823, !dbg !10079
  %28 = uitofp i32 %27 to float, !dbg !10080
  %29 = fdiv float %24, %28, !dbg !10081
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !10082
  %31 = load volatile i32, i32* %30, align 4, !dbg !10082
  %32 = and i32 %31, 1073741823, !dbg !10083
  %33 = uitofp i32 %32 to float, !dbg !10084
  %34 = fmul float %29, %33, !dbg !10085
  call void @llvm.dbg.value(metadata float %34, metadata !10056, metadata !DIExpression()), !dbg !10057
  %35 = lshr i32 24000000, %16, !dbg !10086
  %36 = lshr i32 %35, %14, !dbg !10087
  %37 = uitofp i32 %36 to float, !dbg !10088
  %38 = uitofp i8 %6 to float, !dbg !10089
  %39 = fadd float %34, %38, !dbg !10090
  %40 = fmul float %39, %37, !dbg !10091
  %41 = fptoui float %40 to i32, !dbg !10092
  br label %47, !dbg !10093

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10094
  %44 = lshr i32 %43, %14, !dbg !10096
  %45 = zext i8 %6 to i32, !dbg !10097
  %46 = mul nuw i32 %44, %45, !dbg !10098
  br label %47, !dbg !10099

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10057
  ret i32 %48, !dbg !10100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10101 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10105, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata i32 %1, metadata !10106, metadata !DIExpression()), !dbg !10109
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #21, !dbg !10110
  br i1 %3, label %4, label %5, !dbg !10113

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.143, i32 0, i32 0), i32 noundef 260) #22, !dbg !10114
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.143, i32 0, i32 0), i32 noundef 260) #22, !dbg !10114
  unreachable, !dbg !10114

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #21, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()), !dbg !10109
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #21, !dbg !10117
  call void @llvm.dbg.value(metadata i32 %7, metadata !10108, metadata !DIExpression()), !dbg !10109
  %8 = udiv i32 %6, %7, !dbg !10118
  %9 = mul i32 %8, 18, !dbg !10119
  ret i32 %9, !dbg !10120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10121 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10123, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 %1, metadata !10124, metadata !DIExpression()), !dbg !10125
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10126
  %4 = and i32 %1, 65535, !dbg !10126
  %5 = add i32 %4, %3, !dbg !10126
  %6 = inttoptr i32 %5 to i32*, !dbg !10126
  %7 = load volatile i32, i32* %6, align 4, !dbg !10126
  %8 = lshr i32 %1, 16, !dbg !10127
  %9 = and i32 %8, 31, !dbg !10127
  %10 = lshr i32 %7, %9, !dbg !10128
  %11 = and i32 %10, 63, !dbg !10129
  ret i32 %11, !dbg !10130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10158, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !10159, metadata !DIExpression()), !dbg !10162
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10163
  store volatile i32 0, i32* %3, align 4, !dbg !10164
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10165
  store volatile i32 0, i32* %4, align 4, !dbg !10166
  %5 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !10167
  %6 = load i32, i32* %5, align 4, !dbg !10167
  call void @llvm.dbg.value(metadata i32 %6, metadata !10160, metadata !DIExpression()), !dbg !10162
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !10168
  %8 = load i32, i32* %7, align 4, !dbg !10168
  %9 = icmp eq i32 %8, 1, !dbg !10170
  %10 = shl nuw i32 1, %6, !dbg !10171
  br i1 %9, label %11, label %15, !dbg !10172

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10173
  %13 = load volatile i32, i32* %12, align 4, !dbg !10174
  %14 = or i32 %13, %10, !dbg !10174
  store volatile i32 %14, i32* %12, align 4, !dbg !10174
  br label %20, !dbg !10173

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !10175
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10176
  %18 = load volatile i32, i32* %17, align 4, !dbg !10177
  %19 = and i32 %18, %16, !dbg !10177
  store volatile i32 %19, i32* %17, align 4, !dbg !10177
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !10178
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !10180
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !10180
  %24 = add i32 %6, -16, !dbg !10180
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !10180
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !10180
  call void @llvm.dbg.value(metadata i32* %26, metadata !10161, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.value(metadata i32 %25, metadata !10160, metadata !DIExpression()), !dbg !10162
  %27 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !10181
  %28 = load i32, i32* %27, align 4, !dbg !10181
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !10182

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !10183
  %31 = shl i32 3, %30, !dbg !10186
  %32 = xor i32 %31, -1, !dbg !10187
  %33 = load volatile i32, i32* %26, align 4, !dbg !10188
  %34 = and i32 %33, %32, !dbg !10188
  br label %56, !dbg !10189

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !10190
  %37 = shl i32 %25, 1, !dbg !10192
  %38 = shl i32 3, %37, !dbg !10193
  %39 = xor i32 %38, -1, !dbg !10194
  %40 = and i32 %36, %39, !dbg !10195
  %41 = shl nuw i32 1, %37, !dbg !10196
  %42 = or i32 %40, %41, !dbg !10197
  br label %56, !dbg !10198

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !10199
  %45 = shl i32 %25, 1, !dbg !10201
  %46 = shl i32 3, %45, !dbg !10202
  %47 = xor i32 %46, -1, !dbg !10203
  %48 = and i32 %44, %47, !dbg !10204
  %49 = shl i32 2, %45, !dbg !10205
  %50 = or i32 %48, %49, !dbg !10206
  br label %56, !dbg !10207

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !10208
  %53 = shl i32 3, %52, !dbg !10210
  %54 = load volatile i32, i32* %26, align 4, !dbg !10211
  %55 = or i32 %54, %53, !dbg !10211
  br label %56, !dbg !10212

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !10213
  br label %58, !dbg !10214

58:                                               ; preds = %56, %20
  ret void, !dbg !10214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10215 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10220, metadata !DIExpression()), !dbg !10223
  call void @llvm.dbg.value(metadata i32 %1, metadata !10221, metadata !DIExpression()), !dbg !10223
  call void @llvm.dbg.value(metadata i32 %2, metadata !10222, metadata !DIExpression()), !dbg !10223
  %4 = icmp ult i32 %1, 32, !dbg !10224
  br i1 %4, label %6, label %5, !dbg !10227

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 113) #22, !dbg !10228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 113) #22, !dbg !10228
  unreachable, !dbg !10228

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !10230
  %8 = shl nuw i32 1, %1, !dbg !10232
  br i1 %7, label %9, label %13, !dbg !10233

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10234
  %11 = load volatile i32, i32* %10, align 4, !dbg !10236
  %12 = or i32 %11, %8, !dbg !10236
  store volatile i32 %12, i32* %10, align 4, !dbg !10236
  br label %18, !dbg !10237

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !10238
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10240
  %16 = load volatile i32, i32* %15, align 4, !dbg !10241
  %17 = and i32 %16, %14, !dbg !10241
  store volatile i32 %17, i32* %15, align 4, !dbg !10241
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !10242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10243 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10247, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.value(metadata i1 %2, metadata !10249, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10250
  %4 = icmp ult i32 %1, 32, !dbg !10251
  br i1 %4, label %6, label %5, !dbg !10254

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 135) #22, !dbg !10255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 135) #22, !dbg !10255
  unreachable, !dbg !10255

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !10257
  br i1 %2, label %8, label %12, !dbg !10259

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10260
  %10 = load volatile i32, i32* %9, align 4, !dbg !10261
  %11 = or i32 %10, %7, !dbg !10261
  store volatile i32 %11, i32* %9, align 4, !dbg !10261
  br label %17, !dbg !10260

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !10262
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10263
  %15 = load volatile i32, i32* %14, align 4, !dbg !10264
  %16 = and i32 %15, %13, !dbg !10264
  store volatile i32 %16, i32* %14, align 4, !dbg !10264
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10266 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10268, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i32 %1, metadata !10269, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i1 %2, metadata !10270, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10271
  %4 = icmp ult i32 %1, 32, !dbg !10272
  br i1 %4, label %6, label %5, !dbg !10275

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 152) #22, !dbg !10276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 152) #22, !dbg !10276
  unreachable, !dbg !10276

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !10278
  br i1 %2, label %8, label %12, !dbg !10280

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10281
  %10 = load volatile i32, i32* %9, align 4, !dbg !10282
  %11 = or i32 %10, %7, !dbg !10282
  store volatile i32 %11, i32* %9, align 4, !dbg !10282
  br label %17, !dbg !10281

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !10283
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10284
  %15 = load volatile i32, i32* %14, align 4, !dbg !10285
  %16 = and i32 %15, %13, !dbg !10285
  store volatile i32 %16, i32* %14, align 4, !dbg !10285
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !10287 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10326, metadata !DIExpression()), !dbg !10328
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !10327, metadata !DIExpression()), !dbg !10328
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !10329
  br i1 %3, label %4, label %5, !dbg !10332

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 49) #22, !dbg !10333
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 49) #22, !dbg !10333
  unreachable, !dbg !10333

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10335
  %7 = load volatile i32, i32* %6, align 4, !dbg !10336
  %8 = and i32 %7, -2, !dbg !10336
  store volatile i32 %8, i32* %6, align 4, !dbg !10336
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #21, !dbg !10337
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !10338
  %10 = load i32, i32* %9, align 4, !dbg !10338
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !10339
  %12 = load i32, i32* %11, align 4, !dbg !10339
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !10340
  %14 = load i32, i32* %13, align 4, !dbg !10340
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !10341
  %16 = load i32, i32* %15, align 4, !dbg !10341
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10342
  %18 = load volatile i32, i32* %17, align 4, !dbg !10343
  %19 = or i32 %10, %12, !dbg !10344
  %20 = or i32 %19, %14, !dbg !10345
  %21 = or i32 %20, %16, !dbg !10346
  %22 = or i32 %21, %18, !dbg !10343
  %23 = or i32 %22, 16384, !dbg !10343
  store volatile i32 %23, i32* %17, align 4, !dbg !10343
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10347
  %25 = load volatile i32, i32* %24, align 4, !dbg !10348
  %26 = or i32 %25, 4, !dbg !10348
  store volatile i32 %26, i32* %24, align 4, !dbg !10348
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !10349
  %28 = load i32, i32* %27, align 4, !dbg !10349
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !10350
  %30 = load i32, i32* %29, align 4, !dbg !10350
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #21, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #14 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10357, metadata !DIExpression()), !dbg !10358
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10359
  %3 = load volatile i32, i32* %2, align 4, !dbg !10360
  %4 = and i32 %3, -2, !dbg !10360
  store volatile i32 %4, i32* %2, align 4, !dbg !10360
  store volatile i32 0, i32* %2, align 4, !dbg !10361
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10362
  store volatile i32 1, i32* %5, align 4, !dbg !10363
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10364
  store volatile i32 1792, i32* %6, align 4, !dbg !10365
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10366
  store volatile i32 32768, i32* %7, align 4, !dbg !10367
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10368
  store volatile i32 2049, i32* %8, align 4, !dbg !10369
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !10370
  store volatile i32 43, i32* %9, align 4, !dbg !10371
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !10372
  store volatile i32 0, i32* %10, align 4, !dbg !10373
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10374
  store volatile i32 0, i32* %11, align 4, !dbg !10375
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !10376
  store volatile i32 96, i32* %12, align 4, !dbg !10377
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10378
  store volatile i32 0, i32* %13, align 4, !dbg !10379
  %14 = load volatile i32, i32* %5, align 4, !dbg !10380
  %15 = and i32 %14, -2, !dbg !10380
  store volatile i32 %15, i32* %5, align 4, !dbg !10380
  br label %16, !dbg !10381

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !10382
  %18 = and i32 %17, 1, !dbg !10383
  %19 = icmp eq i32 %18, 0, !dbg !10384
  br i1 %19, label %16, label %20, !dbg !10381, !llvm.loop !10385

20:                                               ; preds = %16
  ret void, !dbg !10387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10388 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10392, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %1, metadata !10393, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %2, metadata !10394, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 1, metadata !10399, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %1, metadata !10395, metadata !DIExpression()), !dbg !10405
  %4 = shl i32 %2, 4, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %4, metadata !10396, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 1, metadata !10397, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %1, metadata !10395, metadata !DIExpression()), !dbg !10405
  %5 = icmp eq i32 %4, 0, !dbg !10407
  br i1 %5, label %11, label %6, !dbg !10408

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10395, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %8, metadata !10396, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %8, metadata !10397, metadata !DIExpression()), !dbg !10405
  %9 = urem i32 %7, %8, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %8, metadata !10395, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %9, metadata !10396, metadata !DIExpression()), !dbg !10405
  %10 = icmp eq i32 %9, 0, !dbg !10407
  br i1 %10, label %11, label %6, !dbg !10408, !llvm.loop !10411

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !10405
  %13 = udiv i32 %1, %12, !dbg !10413
  call void @llvm.dbg.value(metadata i32 %13, metadata !10395, metadata !DIExpression()), !dbg !10405
  %14 = udiv i32 %4, %12, !dbg !10414
  call void @llvm.dbg.value(metadata i32 %14, metadata !10396, metadata !DIExpression()), !dbg !10405
  %15 = icmp ugt i32 %13, 458745, !dbg !10415
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !10416
  br i1 %17, label %18, label %33, !dbg !10416

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !10417
  %20 = udiv i32 %19, 458745, !dbg !10418
  %21 = add nuw nsw i32 %20, 1, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %21, metadata !10400, metadata !DIExpression()), !dbg !10420
  %22 = add i32 %14, -1, !dbg !10421
  %23 = udiv i32 %22, 65535, !dbg !10422
  %24 = add nuw nsw i32 %23, 1, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %24, metadata !10403, metadata !DIExpression()), !dbg !10420
  %25 = icmp ugt i32 %21, %24, !dbg !10424
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %26, metadata !10404, metadata !DIExpression()), !dbg !10420
  %27 = udiv i32 %13, %26, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %27, metadata !10395, metadata !DIExpression()), !dbg !10405
  %28 = udiv i32 %14, %26, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %28, metadata !10396, metadata !DIExpression()), !dbg !10405
  %29 = icmp ugt i32 %26, %13, !dbg !10428
  %30 = select i1 %29, i32 1, i32 %27, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %30, metadata !10395, metadata !DIExpression()), !dbg !10405
  %31 = icmp ugt i32 %26, %14, !dbg !10431
  %32 = select i1 %31, i32 1, i32 %28, !dbg !10433
  call void @llvm.dbg.value(metadata i32 %32, metadata !10396, metadata !DIExpression()), !dbg !10405
  br label %33, !dbg !10434

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !10405
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !10405
  call void @llvm.dbg.value(metadata i32 %35, metadata !10395, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %34, metadata !10396, metadata !DIExpression()), !dbg !10405
  %36 = add i32 %35, -1, !dbg !10435
  %37 = udiv i32 %36, 65535, !dbg !10436
  %38 = add nuw nsw i32 %37, 1, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %38, metadata !10399, metadata !DIExpression()), !dbg !10405
  %39 = add nsw i32 %37, -1, !dbg !10438
  %40 = icmp ult i32 %39, 6, !dbg !10438
  br i1 %40, label %41, label %44, !dbg !10438

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !10438
  %43 = load i32, i32* %42, align 4, !dbg !10438
  br label %44, !dbg !10438

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !10439
  call void @llvm.dbg.value(metadata i32 %45, metadata !10398, metadata !DIExpression()), !dbg !10405
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10441
  %47 = load volatile i32, i32* %46, align 4, !dbg !10442
  %48 = and i32 %47, -897, !dbg !10442
  store volatile i32 %48, i32* %46, align 4, !dbg !10442
  %49 = load volatile i32, i32* %46, align 4, !dbg !10443
  %50 = or i32 %49, %45, !dbg !10443
  store volatile i32 %50, i32* %46, align 4, !dbg !10443
  %51 = add i32 %34, 65535, !dbg !10444
  %52 = and i32 %51, 65535, !dbg !10444
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !10445
  store volatile i32 %52, i32* %53, align 4, !dbg !10446
  %54 = udiv i32 %35, %38, !dbg !10447
  %55 = add i32 %54, 65535, !dbg !10447
  %56 = and i32 %55, 65535, !dbg !10447
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !10448
  store volatile i32 %56, i32* %57, align 4, !dbg !10449
  %58 = mul nuw nsw i32 %38, 1000, !dbg !10450
  %59 = udiv i32 %1, %58, !dbg !10450
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10451
  store volatile i32 %59, i32* %60, align 4, !dbg !10452
  ret void, !dbg !10453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10458, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i32 %1, metadata !10459, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i1 %2, metadata !10460, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10461
  %4 = and i32 %1, 4, !dbg !10462
  %5 = icmp eq i32 %4, 0, !dbg !10462
  %6 = and i32 %1, 2, !dbg !10462
  %7 = icmp eq i32 %6, 0, !dbg !10462
  %8 = and i32 %1, 6, !dbg !10462
  %9 = icmp eq i32 %8, 0, !dbg !10462
  br i1 %9, label %10, label %11, !dbg !10462

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 196) #22, !dbg !10465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 196) #22, !dbg !10465
  unreachable, !dbg !10465

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !10467

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !10468

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10471
  %15 = load volatile i32, i32* %14, align 4, !dbg !10473
  %16 = or i32 %15, 512, !dbg !10473
  store volatile i32 %16, i32* %14, align 4, !dbg !10473
  br label %17, !dbg !10471

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !10474

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10475
  %20 = load volatile i32, i32* %19, align 4, !dbg !10477
  %21 = or i32 %20, 2, !dbg !10477
  store volatile i32 %21, i32* %19, align 4, !dbg !10477
  br label %32, !dbg !10475

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !10478

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10480
  %25 = load volatile i32, i32* %24, align 4, !dbg !10482
  %26 = and i32 %25, -513, !dbg !10482
  store volatile i32 %26, i32* %24, align 4, !dbg !10482
  br label %27, !dbg !10480

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !10483

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10484
  %30 = load volatile i32, i32* %29, align 4, !dbg !10486
  %31 = and i32 %30, -3, !dbg !10486
  store volatile i32 %31, i32* %29, align 4, !dbg !10486
  br label %32, !dbg !10484

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !10487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10488 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10492, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i1 %1, metadata !10493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10494
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10495
  %4 = load volatile i32, i32* %3, align 4, !dbg !10495
  %5 = and i32 %4, 2, !dbg !10497
  %6 = select i1 %1, i32 0, i32 -3, !dbg !10497
  %7 = or i32 %5, %6, !dbg !10497
  store volatile i32 %7, i32* %3, align 4, !dbg !10495
  ret void, !dbg !10498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10499 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i1 %1, metadata !10502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10503
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10504
  %4 = load volatile i32, i32* %3, align 4, !dbg !10504
  %5 = and i32 %4, -17, !dbg !10506
  %6 = select i1 %1, i32 0, i32 16, !dbg !10506
  %7 = or i32 %5, %6, !dbg !10506
  store volatile i32 %7, i32* %3, align 4, !dbg !10504
  ret void, !dbg !10507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #14 !dbg !10508 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10510, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 %1, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i1 %2, metadata !10512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10515
  call void @llvm.dbg.value(metadata i32* null, metadata !10513, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 0, metadata !10514, metadata !DIExpression()), !dbg !10515
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10516
  %5 = lshr i32 %1, 16, !dbg !10517
  %6 = add i32 %5, %4, !dbg !10518
  %7 = inttoptr i32 %6 to i32*, !dbg !10519
  call void @llvm.dbg.value(metadata i32* %7, metadata !10513, metadata !DIExpression()), !dbg !10515
  %8 = and i32 %1, 65535, !dbg !10520
  %9 = shl nuw i32 1, %8, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %9, metadata !10514, metadata !DIExpression()), !dbg !10515
  br i1 %2, label %10, label %13, !dbg !10522

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10523
  %12 = or i32 %11, %9, !dbg !10523
  br label %17, !dbg !10525

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10526
  %15 = load volatile i32, i32* %7, align 4, !dbg !10527
  %16 = and i32 %15, %14, !dbg !10527
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10528
  ret void, !dbg !10529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !10530 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10534, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata i32 %1, metadata !10535, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata i32* null, metadata !10536, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata i32 0, metadata !10537, metadata !DIExpression()), !dbg !10538
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10539
  %4 = lshr i32 %1, 16, !dbg !10540
  %5 = add i32 %4, %3, !dbg !10541
  %6 = inttoptr i32 %5 to i32*, !dbg !10542
  call void @llvm.dbg.value(metadata i32* %6, metadata !10536, metadata !DIExpression()), !dbg !10538
  %7 = and i32 %1, 65535, !dbg !10543
  %8 = shl nuw i32 1, %7, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %8, metadata !10537, metadata !DIExpression()), !dbg !10538
  store volatile i32 %8, i32* %6, align 4, !dbg !10545
  ret void, !dbg !10546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #14 !dbg !10547 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10549, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 %1, metadata !10550, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i1 %2, metadata !10551, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10554
  call void @llvm.dbg.value(metadata i32* null, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 0, metadata !10553, metadata !DIExpression()), !dbg !10554
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10555
  %5 = lshr i32 %1, 16, !dbg !10556
  %6 = add i32 %5, %4, !dbg !10557
  %7 = inttoptr i32 %6 to i32*, !dbg !10558
  call void @llvm.dbg.value(metadata i32* %7, metadata !10552, metadata !DIExpression()), !dbg !10554
  %8 = and i32 %1, 65535, !dbg !10559
  %9 = shl nuw i32 1, %8, !dbg !10560
  call void @llvm.dbg.value(metadata i32 %9, metadata !10553, metadata !DIExpression()), !dbg !10554
  br i1 %2, label %10, label %13, !dbg !10561

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10562
  %12 = or i32 %11, %9, !dbg !10562
  br label %17, !dbg !10564

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10565
  %15 = load volatile i32, i32* %7, align 4, !dbg !10566
  %16 = and i32 %15, %14, !dbg !10566
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10567
  ret void, !dbg !10568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10569 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10571, metadata !DIExpression()), !dbg !10573
  call void @llvm.dbg.value(metadata i1 %1, metadata !10572, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10573
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10574
  %4 = load volatile i32, i32* %3, align 4, !dbg !10574
  %5 = and i32 %4, -16385, !dbg !10576
  %6 = select i1 %1, i32 0, i32 16384, !dbg !10576
  %7 = or i32 %5, %6, !dbg !10576
  store volatile i32 %7, i32* %3, align 4, !dbg !10574
  ret void, !dbg !10577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10578 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10580, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i1 %1, metadata !10581, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10582
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10583
  %4 = load volatile i32, i32* %3, align 4, !dbg !10583
  %5 = and i32 %4, -8193, !dbg !10585
  %6 = select i1 %1, i32 8192, i32 0, !dbg !10585
  %7 = or i32 %5, %6, !dbg !10585
  store volatile i32 %7, i32* %3, align 4, !dbg !10583
  ret void, !dbg !10586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10587 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10589, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i1 %1, metadata !10590, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10591
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10592
  %4 = load volatile i32, i32* %3, align 4, !dbg !10592
  %5 = and i32 %4, -4097, !dbg !10594
  %6 = select i1 %1, i32 4096, i32 0, !dbg !10594
  %7 = or i32 %5, %6, !dbg !10594
  store volatile i32 %7, i32* %3, align 4, !dbg !10592
  ret void, !dbg !10595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10596 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10598, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %1, metadata !10599, metadata !DIExpression()), !dbg !10600
  %3 = and i32 %1, -65, !dbg !10601
  %4 = icmp eq i32 %3, 0, !dbg !10601
  br i1 %4, label %6, label %5, !dbg !10601

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 396) #22, !dbg !10604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 396) #22, !dbg !10604
  unreachable, !dbg !10604

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !10601
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10606
  %9 = load volatile i32, i32* %8, align 4, !dbg !10606
  %10 = and i32 %9, -65, !dbg !10608
  %11 = select i1 %7, i32 0, i32 64, !dbg !10608
  %12 = or i32 %10, %11, !dbg !10608
  store volatile i32 %12, i32* %8, align 4, !dbg !10606
  ret void, !dbg !10609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10610 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10612, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.value(metadata i1 %1, metadata !10613, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10614
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10615
  %4 = load volatile i32, i32* %3, align 4, !dbg !10615
  %5 = and i32 %4, -1025, !dbg !10617
  %6 = select i1 %1, i32 1024, i32 0, !dbg !10617
  %7 = or i32 %5, %6, !dbg !10617
  store volatile i32 %7, i32* %3, align 4, !dbg !10615
  ret void, !dbg !10618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10619 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10621, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata i1 %1, metadata !10622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10623
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10624
  %4 = load volatile i32, i32* %3, align 4, !dbg !10624
  %5 = and i32 %4, -513, !dbg !10626
  %6 = select i1 %1, i32 512, i32 0, !dbg !10626
  %7 = or i32 %5, %6, !dbg !10626
  store volatile i32 %7, i32* %3, align 4, !dbg !10624
  ret void, !dbg !10627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10628 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10630, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.value(metadata i1 %1, metadata !10631, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10632
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10633
  %4 = load volatile i32, i32* %3, align 4, !dbg !10633
  %5 = and i32 %4, -257, !dbg !10635
  %6 = select i1 %1, i32 256, i32 0, !dbg !10635
  %7 = or i32 %5, %6, !dbg !10635
  store volatile i32 %7, i32* %3, align 4, !dbg !10633
  ret void, !dbg !10636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !10637 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i16 %1, metadata !10642, metadata !DIExpression()), !dbg !10643
  %3 = zext i16 %1 to i32, !dbg !10644
  %4 = icmp ult i16 %1, 512, !dbg !10644
  br i1 %4, label %6, label %5, !dbg !10647

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.166, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 462) #22, !dbg !10648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 462) #22, !dbg !10648
  unreachable, !dbg !10648

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10650
  %8 = load volatile i32, i32* %7, align 4, !dbg !10650
  %9 = and i32 %8, -5, !dbg !10652
  %10 = lshr i32 %3, 6, !dbg !10652
  %11 = and i32 %10, 4, !dbg !10652
  %12 = or i32 %9, %11, !dbg !10652
  store volatile i32 %12, i32* %7, align 4, !dbg !10650
  %13 = and i32 %3, 255, !dbg !10653
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10654
  store volatile i32 %13, i32* %14, align 4, !dbg !10655
  ret void, !dbg !10656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10661, metadata !DIExpression()), !dbg !10663
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10664
  %3 = load volatile i32, i32* %2, align 4, !dbg !10664
  call void @llvm.dbg.value(metadata i32 %3, metadata !10662, metadata !DIExpression()), !dbg !10663
  %4 = trunc i32 %3 to i16, !dbg !10665
  %5 = and i16 %4, 255, !dbg !10665
  %6 = lshr i16 %4, 2, !dbg !10665
  %7 = and i16 %6, 256, !dbg !10665
  %8 = or i16 %7, %5, !dbg !10665
  call void @llvm.dbg.value(metadata i16 %8, metadata !10662, metadata !DIExpression()), !dbg !10663
  ret i16 %8, !dbg !10666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10667 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10669, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i1 %1, metadata !10670, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10671
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10672
  %4 = load volatile i32, i32* %3, align 4, !dbg !10672
  %5 = and i32 %4, -2, !dbg !10674
  %6 = zext i1 %1 to i32, !dbg !10674
  %7 = or i32 %5, %6, !dbg !10674
  store volatile i32 %7, i32* %3, align 4, !dbg !10672
  ret void, !dbg !10675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10676 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10678, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i1 %1, metadata !10679, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10680
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10681
  %4 = load volatile i32, i32* %3, align 4, !dbg !10681
  %5 = and i32 %4, -3, !dbg !10683
  %6 = select i1 %1, i32 2, i32 0, !dbg !10683
  %7 = or i32 %5, %6, !dbg !10683
  store volatile i32 %7, i32* %3, align 4, !dbg !10681
  ret void, !dbg !10684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10685 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10687, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i1 %1, metadata !10688, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10689
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10690
  %4 = load volatile i32, i32* %3, align 4, !dbg !10690
  %5 = and i32 %4, -129, !dbg !10692
  %6 = select i1 %1, i32 128, i32 0, !dbg !10692
  %7 = or i32 %5, %6, !dbg !10692
  store volatile i32 %7, i32* %3, align 4, !dbg !10690
  ret void, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10696, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %1, metadata !10697, metadata !DIExpression()), !dbg !10698
  %3 = and i32 %1, -33, !dbg !10699
  %4 = icmp eq i32 %3, 0, !dbg !10699
  br i1 %4, label %6, label %5, !dbg !10699

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 553) #22, !dbg !10702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 553) #22, !dbg !10702
  unreachable, !dbg !10702

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !10699
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10704
  %9 = load volatile i32, i32* %8, align 4, !dbg !10704
  %10 = and i32 %9, -33, !dbg !10706
  %11 = select i1 %7, i32 32, i32 0, !dbg !10706
  %12 = or i32 %10, %11, !dbg !10706
  store volatile i32 %12, i32* %8, align 4, !dbg !10704
  ret void, !dbg !10707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10708 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10710, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i1 %1, metadata !10711, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10712
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10713
  %4 = load volatile i32, i32* %3, align 4, !dbg !10713
  %5 = and i32 %4, -16385, !dbg !10715
  %6 = select i1 %1, i32 16384, i32 0, !dbg !10715
  %7 = or i32 %5, %6, !dbg !10715
  store volatile i32 %7, i32* %3, align 4, !dbg !10713
  ret void, !dbg !10716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10719, metadata !DIExpression()), !dbg !10721
  call void @llvm.dbg.value(metadata i1 %1, metadata !10720, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10721
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10722
  %4 = load volatile i32, i32* %3, align 4, !dbg !10722
  %5 = and i32 %4, -17, !dbg !10724
  %6 = select i1 %1, i32 16, i32 0, !dbg !10724
  %7 = or i32 %5, %6, !dbg !10724
  store volatile i32 %7, i32* %3, align 4, !dbg !10722
  ret void, !dbg !10725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10726 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10728, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i1 %1, metadata !10729, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10730
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10731
  %4 = load volatile i32, i32* %3, align 4, !dbg !10731
  %5 = and i32 %4, -2049, !dbg !10733
  %6 = select i1 %1, i32 2048, i32 0, !dbg !10733
  %7 = or i32 %5, %6, !dbg !10733
  store volatile i32 %7, i32* %3, align 4, !dbg !10731
  ret void, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !10735 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !10754, metadata !DIExpression()), !dbg !10759
  %4 = bitcast i32* %2 to i8*, !dbg !10760
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10760
  %5 = bitcast i32* %3 to i8*, !dbg !10760
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10760
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !10761
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !10762

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10755, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32* %2, metadata !10757, metadata !DIExpression(DW_OP_deref)), !dbg !10759
  call void @llvm.dbg.value(metadata i32* %3, metadata !10758, metadata !DIExpression(DW_OP_deref)), !dbg !10759
  br label %8, !dbg !10763

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !10765
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %10, metadata !10755, metadata !DIExpression()), !dbg !10759
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !10766

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #22, !dbg !10767
  call void @llvm.dbg.value(metadata i32 %12, metadata !10756, metadata !DIExpression()), !dbg !10759
  br label %13, !dbg !10769

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !10770
  call void @llvm.dbg.value(metadata i32 %14, metadata !10756, metadata !DIExpression()), !dbg !10759
  %15 = load i32, i32* %2, align 4, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %15, metadata !10757, metadata !DIExpression()), !dbg !10759
  %16 = add i32 %15, 1, !dbg !10772
  %17 = udiv i32 %14, %16, !dbg !10773
  %18 = load i32, i32* %3, align 4, !dbg !10774
  call void @llvm.dbg.value(metadata i32 %18, metadata !10758, metadata !DIExpression()), !dbg !10759
  %19 = add i32 %18, 1, !dbg !10775
  %20 = udiv i32 %17, %19, !dbg !10776
  br label %21, !dbg !10777

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !10759
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10778
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10778
  ret i32 %22, !dbg !10778
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #15 !dbg !10779 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !10783, metadata !DIExpression()), !dbg !10785
  call void @llvm.dbg.value(metadata i32 %0, metadata !10784, metadata !DIExpression()), !dbg !10785
  %2 = inttoptr i32 %0 to i32*, !dbg !10786
  %3 = load volatile i32, i32* %2, align 4, !dbg !10786
  %4 = lshr i32 %3, 24, !dbg !10787
  %5 = and i32 %4, 7, !dbg !10787
  ret i32 %5, !dbg !10788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !10789 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !10811, metadata !DIExpression()), !dbg !10816
  %4 = bitcast i32* %2 to i8*, !dbg !10817
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10817
  %5 = bitcast i32* %3 to i8*, !dbg !10817
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10817
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !10818
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !10819

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10812, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.value(metadata i32* %2, metadata !10814, metadata !DIExpression(DW_OP_deref)), !dbg !10816
  call void @llvm.dbg.value(metadata i32* %3, metadata !10815, metadata !DIExpression(DW_OP_deref)), !dbg !10816
  br label %8, !dbg !10820

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !10822
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %10, metadata !10812, metadata !DIExpression()), !dbg !10816
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !10823

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #22, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %12, metadata !10813, metadata !DIExpression()), !dbg !10816
  br label %13, !dbg !10826

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !10827
  call void @llvm.dbg.value(metadata i32 %14, metadata !10813, metadata !DIExpression()), !dbg !10816
  %15 = load i32, i32* %2, align 4, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %15, metadata !10814, metadata !DIExpression()), !dbg !10816
  %16 = add i32 %15, 1, !dbg !10829
  %17 = udiv i32 %14, %16, !dbg !10830
  %18 = load i32, i32* %3, align 4, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %18, metadata !10815, metadata !DIExpression()), !dbg !10816
  %19 = add i32 %18, 1, !dbg !10832
  %20 = udiv i32 %17, %19, !dbg !10833
  br label %21, !dbg !10834

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !10816
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10835
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10835
  ret i32 %22, !dbg !10835
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !10836 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !10882, metadata !DIExpression()), !dbg !10887
  %4 = bitcast i32* %2 to i8*, !dbg !10888
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10888
  %5 = bitcast i32* %3 to i8*, !dbg !10888
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10888
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !10889
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !10890

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10883, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i32* %2, metadata !10885, metadata !DIExpression(DW_OP_deref)), !dbg !10887
  call void @llvm.dbg.value(metadata i32* %3, metadata !10886, metadata !DIExpression(DW_OP_deref)), !dbg !10887
  br label %8, !dbg !10891

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !10893
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %10, metadata !10883, metadata !DIExpression()), !dbg !10887
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !10894

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10895
  %13 = lshr i32 %12, 2, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %13, metadata !10884, metadata !DIExpression()), !dbg !10887
  br label %16, !dbg !10898

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %15, metadata !10884, metadata !DIExpression()), !dbg !10887
  br label %16, !dbg !10900

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !10901
  call void @llvm.dbg.value(metadata i32 %17, metadata !10884, metadata !DIExpression()), !dbg !10887
  %18 = load i32, i32* %2, align 4, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %18, metadata !10885, metadata !DIExpression()), !dbg !10887
  %19 = add i32 %18, 1, !dbg !10903
  %20 = udiv i32 %17, %19, !dbg !10904
  %21 = load i32, i32* %3, align 4, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %21, metadata !10886, metadata !DIExpression()), !dbg !10887
  %22 = add i32 %21, 1, !dbg !10906
  %23 = udiv i32 %20, %22, !dbg !10907
  br label %24, !dbg !10908

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !10887
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10909
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10909
  ret i32 %25, !dbg !10909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !10910 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !10928, metadata !DIExpression()), !dbg !10933
  %4 = bitcast i32* %2 to i8*, !dbg !10934
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10934
  %5 = bitcast i32* %3 to i8*, !dbg !10934
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10934
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !10935
  %7 = add i32 %6, -815923200, !dbg !10936
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !10936
  %9 = icmp ult i32 %8, 4, !dbg !10936
  br i1 %9, label %10, label %25, !dbg !10936

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !10936
  %12 = add i32 %11, 809020800, !dbg !10936
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #21, !dbg !10937
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %13, metadata !10929, metadata !DIExpression()), !dbg !10933
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !10939

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10940
  %16 = lshr i32 %15, 2, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %16, metadata !10930, metadata !DIExpression()), !dbg !10933
  br label %17, !dbg !10943

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !10944
  call void @llvm.dbg.value(metadata i32 %18, metadata !10930, metadata !DIExpression()), !dbg !10933
  %19 = load i32, i32* %2, align 4, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %19, metadata !10931, metadata !DIExpression()), !dbg !10933
  %20 = add i32 %19, 1, !dbg !10946
  %21 = udiv i32 %18, %20, !dbg !10947
  %22 = load i32, i32* %3, align 4, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %22, metadata !10932, metadata !DIExpression()), !dbg !10933
  %23 = add i32 %22, 1, !dbg !10949
  %24 = udiv i32 %21, %23, !dbg !10950
  br label %25, !dbg !10951

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !10933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10952
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10952
  ret i32 %26, !dbg !10952
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !10953 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10980, metadata !DIExpression()), !dbg !10985
  %4 = bitcast i32* %2 to i8*, !dbg !10986
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10986
  %5 = bitcast i32* %3 to i8*, !dbg !10986
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10986
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10987
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !10988

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %2, metadata !10983, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %3, metadata !10984, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  br label %13, !dbg !10989

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %2, metadata !10983, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %3, metadata !10984, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  br label %13, !dbg !10991

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %2, metadata !10983, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %3, metadata !10984, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  br label %13, !dbg !10992

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %2, metadata !10983, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %3, metadata !10984, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  br label %13, !dbg !10993

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %2, metadata !10983, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %3, metadata !10984, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  br label %13, !dbg !10994

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %2, metadata !10983, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  call void @llvm.dbg.value(metadata i32* %3, metadata !10984, metadata !DIExpression(DW_OP_deref)), !dbg !10985
  br label %13, !dbg !10995

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #21, !dbg !10996
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10996
  call void @llvm.dbg.value(metadata i32 %15, metadata !10981, metadata !DIExpression()), !dbg !10985
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !10997

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10998
  %18 = lshr i32 %17, 1, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %18, metadata !10982, metadata !DIExpression()), !dbg !10985
  br label %21, !dbg !11001

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %20, metadata !10982, metadata !DIExpression()), !dbg !10985
  br label %21, !dbg !11003

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !11004
  call void @llvm.dbg.value(metadata i32 %22, metadata !10982, metadata !DIExpression()), !dbg !10985
  %23 = load i32, i32* %2, align 4, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %23, metadata !10983, metadata !DIExpression()), !dbg !10985
  %24 = add i32 %23, 1, !dbg !11006
  %25 = udiv i32 %22, %24, !dbg !11007
  %26 = load i32, i32* %3, align 4, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %26, metadata !10984, metadata !DIExpression()), !dbg !10985
  %27 = add i32 %26, 1, !dbg !11009
  %28 = udiv i32 %25, %27, !dbg !11010
  br label %29, !dbg !11011

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !10985
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11012
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !11012
  ret i32 %30, !dbg !11012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #17 !dbg !11013 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11016, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.value(metadata i32 undef, metadata !11016, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.value(metadata i32 undef, metadata !11016, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11032
  ret void, !dbg !11033
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11034 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11038, metadata !DIExpression()), !dbg !11040
  %2 = icmp eq i8* %0, null, !dbg !11041
  br i1 %2, label %29, label %3, !dbg !11043

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11044
  %5 = icmp eq i8 %4, 0, !dbg !11045
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11046
  br i1 %6, label %29, label %8, !dbg !11046

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11039, metadata !DIExpression()), !dbg !11040
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11047

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11039, metadata !DIExpression()), !dbg !11040
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #21, !dbg !11049
  br i1 %10, label %11, label %15, !dbg !11054

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11055
  %13 = load i8*, i8** %12, align 4, !dbg !11055
  %14 = icmp eq i8* %13, %0, !dbg !11056
  br i1 %14, label %29, label %15, !dbg !11057

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11058
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11039, metadata !DIExpression()), !dbg !11040
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11059
  br i1 %17, label %7, label %8, !dbg !11060, !llvm.loop !11061

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11039, metadata !DIExpression()), !dbg !11040
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #21, !dbg !11063
  br i1 %20, label %21, label %26, !dbg !11067

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11068
  %23 = load i8*, i8** %22, align 4, !dbg !11068
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #22, !dbg !11069
  %25 = icmp eq i32 %24, 0, !dbg !11070
  br i1 %25, label %29, label %26, !dbg !11071

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11072
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11039, metadata !DIExpression()), !dbg !11040
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11073
  br i1 %28, label %29, label %18, !dbg !11047, !llvm.loop !11074

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11040
  ret %struct.device* %30, !dbg !11076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !11077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11081, metadata !DIExpression()), !dbg !11082
  %2 = icmp eq %struct.device* %0, null, !dbg !11083
  br i1 %2, label %14, label %3, !dbg !11085

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11086
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11086
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11087
  %7 = load i8, i8* %6, align 1, !dbg !11087
  %8 = and i8 %7, 1, !dbg !11087
  %9 = icmp eq i8 %8, 0, !dbg !11087
  br i1 %9, label %14, label %10, !dbg !11088

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11089
  %12 = load i8, i8* %11, align 1, !dbg !11089
  %13 = icmp eq i8 %12, 0, !dbg !11090
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11082
  ret i1 %15, !dbg !11091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !11092 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11097, metadata !DIExpression()), !dbg !11098
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11099
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11101 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11109, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11110, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i8* %2, metadata !11111, metadata !DIExpression()), !dbg !11114
  %5 = bitcast i32* %4 to i8*, !dbg !11115
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11115
  call void @llvm.dbg.value(metadata i32 0, metadata !11112, metadata !DIExpression()), !dbg !11114
  store i32 0, i32* %4, align 4, !dbg !11116
  call void @llvm.dbg.value(metadata i32* %4, metadata !11112, metadata !DIExpression(DW_OP_deref)), !dbg !11114
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #21, !dbg !11117
  call void @llvm.dbg.value(metadata i16* %6, metadata !11113, metadata !DIExpression()), !dbg !11114
  %7 = load i32, i32* %4, align 4, !dbg !11118
  call void @llvm.dbg.value(metadata i32 %7, metadata !11112, metadata !DIExpression()), !dbg !11114
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #21, !dbg !11119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11120
  ret i32 %8, !dbg !11121
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11122 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11126, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.value(metadata i32* %1, metadata !11127, metadata !DIExpression()), !dbg !11132
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11133
  %4 = load i16*, i16** %3, align 4, !dbg !11133
  call void @llvm.dbg.value(metadata i16* %4, metadata !11128, metadata !DIExpression()), !dbg !11132
  %5 = icmp eq i16* %4, null, !dbg !11134
  br i1 %5, label %14, label %6, !dbg !11135

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11136
  call void @llvm.dbg.value(metadata i32 %7, metadata !11129, metadata !DIExpression()), !dbg !11136
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11137
  %9 = load i16, i16* %8, align 2, !dbg !11137
  %10 = add i16 %9, -32767, !dbg !11138
  %11 = icmp ult i16 %10, 2, !dbg !11138
  %12 = add i32 %7, 1, !dbg !11139
  call void @llvm.dbg.value(metadata i32 %12, metadata !11129, metadata !DIExpression()), !dbg !11136
  br i1 %11, label %13, label %6, !dbg !11138, !llvm.loop !11141

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11144
  br label %14, !dbg !11145

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11147 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11151, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !11152, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11153, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i8* %3, metadata !11154, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i32 0, metadata !11155, metadata !DIExpression()), !dbg !11163
  %5 = icmp eq i32 %1, 0, !dbg !11164
  br i1 %5, label %16, label %8, !dbg !11165

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11155, metadata !DIExpression()), !dbg !11163
  %7 = icmp eq i32 %15, %1, !dbg !11164
  br i1 %7, label %16, label %8, !dbg !11165, !llvm.loop !11166

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11155, metadata !DIExpression()), !dbg !11163
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11168
  %11 = load i16, i16* %10, align 2, !dbg !11168
  call void @llvm.dbg.value(metadata i16 %11, metadata !11157, metadata !DIExpression()), !dbg !11169
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #21, !dbg !11170
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11160, metadata !DIExpression()), !dbg !11169
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #22, !dbg !11171
  call void @llvm.dbg.value(metadata i32 %13, metadata !11161, metadata !DIExpression()), !dbg !11169
  %14 = icmp slt i32 %13, 0, !dbg !11172
  %15 = add nuw i32 %9, 1, !dbg !11174
  call void @llvm.dbg.value(metadata i32 %15, metadata !11155, metadata !DIExpression()), !dbg !11163
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !11176 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11180, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11181, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11182, metadata !DIExpression()), !dbg !11183
  %2 = sext i16 %0 to i32, !dbg !11184
  %3 = icmp slt i16 %0, 1, !dbg !11186
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11187
  %6 = add nsw i32 %2, -1, !dbg !11187
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11187
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11187
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11181, metadata !DIExpression()), !dbg !11183
  ret %struct.device* %8, !dbg !11188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11189 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11191, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11192, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.value(metadata i8* %2, metadata !11193, metadata !DIExpression()), !dbg !11196
  %5 = bitcast i32* %4 to i8*, !dbg !11197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11194, metadata !DIExpression()), !dbg !11196
  store i32 0, i32* %4, align 4, !dbg !11198
  call void @llvm.dbg.value(metadata i32* %4, metadata !11194, metadata !DIExpression(DW_OP_deref)), !dbg !11196
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #21, !dbg !11199
  call void @llvm.dbg.value(metadata i16* %6, metadata !11195, metadata !DIExpression()), !dbg !11196
  %7 = load i32, i32* %4, align 4, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %7, metadata !11194, metadata !DIExpression()), !dbg !11196
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #21, !dbg !11201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11202
  ret i32 %8, !dbg !11203
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11204 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11206, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32* %1, metadata !11207, metadata !DIExpression()), !dbg !11211
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11212
  %4 = load i16*, i16** %3, align 4, !dbg !11212
  call void @llvm.dbg.value(metadata i16* %4, metadata !11208, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32 0, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32 0, metadata !11210, metadata !DIExpression()), !dbg !11211
  %5 = icmp eq i16* %4, null, !dbg !11213
  br i1 %5, label %22, label %6, !dbg !11215

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i16* %8, metadata !11208, metadata !DIExpression()), !dbg !11211
  %9 = load i16, i16* %8, align 2, !dbg !11216
  %10 = icmp eq i16 %9, -32768, !dbg !11220
  call void @llvm.dbg.value(metadata i32 undef, metadata !11209, metadata !DIExpression()), !dbg !11211
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11221
  call void @llvm.dbg.value(metadata i16* %11, metadata !11208, metadata !DIExpression()), !dbg !11211
  %12 = zext i1 %10 to i32, !dbg !11222
  %13 = add i32 %7, %12, !dbg !11222
  call void @llvm.dbg.value(metadata i32 %13, metadata !11209, metadata !DIExpression()), !dbg !11211
  %14 = icmp eq i32 %13, 2, !dbg !11223
  br i1 %14, label %15, label %6, !dbg !11224

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11211
  call void @llvm.dbg.value(metadata i32 %16, metadata !11210, metadata !DIExpression()), !dbg !11211
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11225
  %18 = load i16, i16* %17, align 2, !dbg !11225
  %19 = icmp eq i16 %18, 32767, !dbg !11226
  %20 = add i32 %16, 1, !dbg !11227
  call void @llvm.dbg.value(metadata i32 %20, metadata !11210, metadata !DIExpression()), !dbg !11211
  br i1 %19, label %21, label %15, !dbg !11229, !llvm.loop !11230

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11232
  br label %22, !dbg !11233

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11234
  call void @llvm.dbg.value(metadata i16* %23, metadata !11208, metadata !DIExpression()), !dbg !11211
  ret i16* %23, !dbg !11235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !11236 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11239
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !11240
  ret i32* %2, !dbg !11241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !11242 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11387, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11388, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11389, metadata !DIExpression()), !dbg !11390
  ret void, !dbg !11391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11396, metadata !DIExpression()), !dbg !11398
  call void @llvm.dbg.value(metadata i32 %1, metadata !11397, metadata !DIExpression()), !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11400 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11404, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.value(metadata i32 %1, metadata !11405, metadata !DIExpression()), !dbg !11406
  ret void, !dbg !11407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !11408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11412, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i8* %1, metadata !11413, metadata !DIExpression()), !dbg !11414
  ret i32 -134, !dbg !11415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !11416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i8* %1, metadata !11421, metadata !DIExpression()), !dbg !11422
  ret i32 -134, !dbg !11423
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !11424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11427, metadata !DIExpression()), !dbg !11428
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11429, !srcloc !11435
  call void @llvm.dbg.value(metadata i32 undef, metadata !11432, metadata !DIExpression()) #20, !dbg !11436
  call void @llvm.dbg.value(metadata i32 undef, metadata !11433, metadata !DIExpression()) #20, !dbg !11436
  br label %3, !dbg !11437

3:                                                ; preds = %3, %1
  br label %3, !dbg !11438, !llvm.loop !11441
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11448, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11449, metadata !DIExpression()), !dbg !11450
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.174, i32 0, i32 0), i32 noundef 69) #22, !dbg !11451
  tail call void @arch_system_halt(i32 noundef %0) #25, !dbg !11456
  unreachable, !dbg !11456
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !11457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11459, metadata !DIExpression()), !dbg !11460
  tail call void @arch_system_halt(i32 noundef %0) #25, !dbg !11461
  unreachable, !dbg !11461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11464, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11465, metadata !DIExpression()), !dbg !11468
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11469, !srcloc !11435
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %4, metadata !11432, metadata !DIExpression()) #20, !dbg !11471
  call void @llvm.dbg.value(metadata i32 undef, metadata !11433, metadata !DIExpression()) #20, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %4, metadata !11466, metadata !DIExpression()), !dbg !11468
  %5 = tail call fastcc %struct.k_thread* @k_current_get.177() #23, !dbg !11472
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11467, metadata !DIExpression()), !dbg !11468
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #21, !dbg !11473
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.178, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #22, !dbg !11473
  %7 = icmp eq %struct.__esf* %1, null, !dbg !11478
  br i1 %7, label %20, label %8, !dbg !11480

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11481, metadata !DIExpression()), !dbg !11486
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !11488
  %10 = load i32, i32* %9, align 4, !dbg !11488
  %11 = and i32 %10, 511, !dbg !11489
  %12 = icmp eq i32 %11, 0, !dbg !11490
  br i1 %12, label %14, label %13, !dbg !11491

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 69) #22, !dbg !11492
  br label %14, !dbg !11498

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #21, !dbg !11499
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.180, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #22, !dbg !11499
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #21, !dbg !11504
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11481, metadata !DIExpression()), !dbg !11505
  %16 = load i32, i32* %9, align 4, !dbg !11510
  %17 = and i32 %16, 511, !dbg !11511
  %18 = icmp eq i32 %17, 0, !dbg !11512
  br i1 %18, label %22, label %19, !dbg !11513

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !11514, metadata !DIExpression()) #20, !dbg !11517
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #20, !dbg !11520, !srcloc !11521
  br label %25, !dbg !11522

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #21, !dbg !11499
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.180, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #22, !dbg !11499
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #21, !dbg !11504
  br label %22, !dbg !11523

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %4, metadata !11514, metadata !DIExpression()) #20, !dbg !11527
  call void @llvm.dbg.value(metadata i32 %4, metadata !11514, metadata !DIExpression()) #20, !dbg !11530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #20, !dbg !11468
  br i1 %23, label %25, label %24, !dbg !11532

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.181(%struct.k_thread* noundef %5) #21, !dbg !11533
  br label %25, !dbg !11536

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !11536
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.177() unnamed_addr #11 !dbg !11537 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.189() #23, !dbg !11541
  ret %struct.k_thread* %1, !dbg !11542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !11543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  %2 = icmp ult i32 %0, 5, !dbg !11549
  br i1 %2, label %3, label %6, !dbg !11549

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !11549
  %5 = load i8*, i8** %4, align 4, !dbg !11549
  br label %6, !dbg !11549

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.183, i32 0, i32 0), %1 ], !dbg !11550
  ret i8* %7, !dbg !11552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11557, metadata !DIExpression()), !dbg !11559
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !11560
  br i1 %2, label %9, label %3, !dbg !11561

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #22, !dbg !11562
  call void @llvm.dbg.value(metadata i8* %4, metadata !11558, metadata !DIExpression()), !dbg !11559
  %5 = icmp eq i8* %4, null, !dbg !11563
  br i1 %5, label %9, label %6, !dbg !11565

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !11566
  %8 = icmp eq i8 %7, 0, !dbg !11567
  br i1 %8, label %9, label %10, !dbg !11568

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.182, i32 0, i32 0), metadata !11558, metadata !DIExpression()), !dbg !11559
  br label %10, !dbg !11569

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.182, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !11559
  call void @llvm.dbg.value(metadata i8* %11, metadata !11558, metadata !DIExpression()), !dbg !11559
  ret i8* %11, !dbg !11571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.181(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11576, metadata !DIExpression()), !dbg !11577
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !11578, !srcloc !11580
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !11581
  ret void, !dbg !11582
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.189() unnamed_addr #11 !dbg !11583 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !11584, !srcloc !11586
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #22, !dbg !11587
  ret %struct.k_thread* %1, !dbg !11588
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11589 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11593, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32 %1, metadata !11594, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32 %2, metadata !11595, metadata !DIExpression()), !dbg !11596
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #22, !dbg !11597
  ret void, !dbg !11598
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11603, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i8* %1, metadata !11604, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i32 %2, metadata !11605, metadata !DIExpression()), !dbg !11606
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #22, !dbg !11607
  ret void, !dbg !11608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11609 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #21, !dbg !11610
  ret void, !dbg !11611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11616, metadata !DIExpression()), !dbg !11617
  tail call fastcc void @init_idle_thread(i32 noundef %0) #21, !dbg !11618
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11619
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11620
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11621
  %4 = trunc i32 %0 to i8, !dbg !11622
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11623
  store i8 %4, i8* %5, align 4, !dbg !11624
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11625
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #21, !dbg !11626
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11627
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11628
  store i8* %8, i8** %9, align 4, !dbg !11629
  ret void, !dbg !11630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11633, metadata !DIExpression()), !dbg !11639
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11640
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11634, metadata !DIExpression()), !dbg !11639
  %3 = getelementptr inbounds [1 x [4096 x %struct.z_thread_stack_element]], [1 x [4096 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11641
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11635, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.196, i32 0, i32 0), metadata !11638, metadata !DIExpression()), !dbg !11639
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11642
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11643
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.196, i32 0, i32 0)) #22, !dbg !11644
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #21, !dbg !11645
  ret void, !dbg !11646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !11647 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !11653
  ret i8* %2, !dbg !11654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !11655 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11660, metadata !DIExpression()), !dbg !11661
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11662
  %3 = load i8, i8* %2, align 1, !dbg !11663
  %4 = and i8 %3, -5, !dbg !11663
  store i8 %4, i8* %2, align 1, !dbg !11663
  ret void, !dbg !11664
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !11665 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #21, !dbg !11668
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #22, !dbg !11669
  %3 = ptrtoint i8* %2 to i32, !dbg !11678
  %4 = add i32 %3, 2048, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %4, metadata !11673, metadata !DIExpression()) #20, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %4, metadata !11681, metadata !DIExpression()) #20, !dbg !11684
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #20, !dbg !11686, !srcloc !11687
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11688
  %6 = or i32 %5, 512, !dbg !11688
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11688
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -2, i32 noundef 255) #22, !dbg !11689
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -5, i32 noundef 0) #22, !dbg !11692
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -12, i32 noundef 0) #22, !dbg !11693
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -11, i32 noundef 0) #22, !dbg !11694
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -10, i32 noundef 0) #22, !dbg !11695
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -4, i32 noundef 0) #22, !dbg !11696
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11697
  %8 = or i32 %7, 458752, !dbg !11697
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11697
  tail call void @z_arm_fault_init() #22, !dbg !11698
  tail call void @z_arm_cpu_idle_init() #22, !dbg !11699
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11700
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11703
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !11704
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #20, !dbg !11704
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11667, metadata !DIExpression()), !dbg !11705
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #21, !dbg !11706
  call void @z_device_state_init() #22, !dbg !11707
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #21, !dbg !11708
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #21, !dbg !11709
  %10 = call fastcc i8* @prepare_multithreading() #21, !dbg !11710
  call fastcc void @switch_to_main_thread(i8* noundef %10) #25, !dbg !11711
  unreachable, !dbg !11711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1984, metadata !DIExpression()), !dbg !11712
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11713
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11713
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1985, metadata !DIExpression()), !dbg !11712
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1985, metadata !DIExpression()), !dbg !11712
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11714
  br i1 %7, label %8, label %35, !dbg !11715

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1985, metadata !DIExpression()), !dbg !11712
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11716
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11716
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1995, metadata !DIExpression()), !dbg !11717
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11718
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11718
  %14 = tail call i32 %13(%struct.device* noundef %11) #22, !dbg !11719
  call void @llvm.dbg.value(metadata i32 %14, metadata !1999, metadata !DIExpression()), !dbg !11717
  %15 = icmp eq %struct.device* %11, null, !dbg !11720
  br i1 %15, label %32, label %16, !dbg !11722

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11723
  br i1 %17, label %26, label %18, !dbg !11726

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11727
  call void @llvm.dbg.value(metadata i32 %19, metadata !1999, metadata !DIExpression()), !dbg !11717
  %20 = icmp ult i32 %19, 255, !dbg !11729
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11729
  call void @llvm.dbg.value(metadata i32 %21, metadata !1999, metadata !DIExpression()), !dbg !11717
  %22 = trunc i32 %21 to i8, !dbg !11730
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11731
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11731
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11732
  store i8 %22, i8* %25, align 1, !dbg !11733
  br label %26, !dbg !11734

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11735
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11735
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11736
  %30 = load i8, i8* %29, align 1, !dbg !11737
  %31 = or i8 %30, 1, !dbg !11737
  store i8 %31, i8* %29, align 1, !dbg !11737
  br label %32, !dbg !11738

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11739
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1985, metadata !DIExpression()), !dbg !11712
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11714
  br i1 %34, label %8, label %35, !dbg !11715, !llvm.loop !11740

35:                                               ; preds = %32, %1
  ret void, !dbg !11742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.199(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11745, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i32 %1, metadata !11746, metadata !DIExpression()), !dbg !11747
  %3 = trunc i32 %1 to i8, !dbg !11748
  %4 = shl i8 %3, 4, !dbg !11748
  %5 = and i32 %0, 15, !dbg !11751
  %6 = add nsw i32 %5, -4, !dbg !11752
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11753
  store volatile i8 %4, i8* %7, align 1, !dbg !11754
  ret void, !dbg !11755
}

; Function Attrs: optsize
declare !dbg !11756 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !11757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11760, metadata !DIExpression()), !dbg !11761
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11762
  store i8 1, i8* %2, align 1, !dbg !11763
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11764
  store i8 1, i8* %3, align 4, !dbg !11765
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11766
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !11767
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11768
  ret void, !dbg !11769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11770 {
  tail call void @z_sched_init() #22, !dbg !11775
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11776
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.200, i32 0, i32 0)) #22, !dbg !11777
  call void @llvm.dbg.value(metadata i8* %1, metadata !11774, metadata !DIExpression()), !dbg !11778
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #21, !dbg !11779
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #22, !dbg !11780
  tail call void @z_init_cpu(i32 noundef 0) #21, !dbg !11781
  ret i8* %1, !dbg !11782
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !11783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11787, metadata !DIExpression()), !dbg !11788
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #22, !dbg !11789
  unreachable, !dbg !11790
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11791 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11793, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i8* %1, metadata !11794, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i8* %2, metadata !11795, metadata !DIExpression()), !dbg !11796
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11797
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #21, !dbg !11798
  tail call void @boot_banner() #22, !dbg !11799
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #21, !dbg !11800
  tail call void @z_init_static_threads() #22, !dbg !11801
  tail call void @main() #22, !dbg !11802
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11803
  %5 = and i8 %4, -2, !dbg !11803
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11803
  ret void, !dbg !11804
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !11805 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11815, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata i8* %1, metadata !11816, metadata !DIExpression()), !dbg !11817
  ret void, !dbg !11818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !11819 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11821, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i8* %1, metadata !11822, metadata !DIExpression()), !dbg !11823
  ret void, !dbg !11824
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11825 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !11826, !srcloc !11833
  call void @llvm.dbg.value(metadata i32 %1, metadata !11829, metadata !DIExpression()) #20, !dbg !11834
  %2 = icmp ne i32 %1, 0, !dbg !11835
  ret i1 %2, !dbg !11836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !11837 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11839
  %3 = load i8, i8* %2, align 4, !dbg !11840
  %4 = or i8 %3, 1, !dbg !11840
  store i8 %4, i8* %2, align 4, !dbg !11840
  ret void, !dbg !11841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !11842 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11843
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11844
  %3 = load i8, i8* %2, align 4, !dbg !11845
  %4 = and i8 %3, -2, !dbg !11845
  store i8 %4, i8* %2, align 4, !dbg !11845
  ret void, !dbg !11846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !11847 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11848
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11849
  %3 = load i8, i8* %2, align 4, !dbg !11849
  %4 = and i8 %3, 1, !dbg !11850
  %5 = icmp ne i8 %4, 0, !dbg !11851
  ret i1 %5, !dbg !11852
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11857, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i8* %1, metadata !11858, metadata !DIExpression()), !dbg !11859
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11860
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !11862
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11857, metadata !DIExpression()), !dbg !11859
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !11863
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #22, !dbg !11864
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !11865
  store i8 0, i8* %8, align 1, !dbg !11866
  ret i32 0, !dbg !11867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !11868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11872, metadata !DIExpression()), !dbg !11873
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11874
  ret i8* %2, !dbg !11875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11880, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i8* %1, metadata !11881, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32 %2, metadata !11882, metadata !DIExpression()), !dbg !11883
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11884
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #22, !dbg !11885
  ret i32 0, !dbg !11886
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2120, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i8* %1, metadata !2121, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i32 %2, metadata !2122, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i32 0, metadata !2123, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i8 undef, metadata !2125, metadata !DIExpression()), !dbg !11887
  %4 = icmp eq i8* %1, null, !dbg !11888
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11890
  br i1 %6, label %46, label %7, !dbg !11890

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11891
  %9 = load i8, i8* %8, align 1, !dbg !11891
  call void @llvm.dbg.value(metadata i8 %9, metadata !2125, metadata !DIExpression()), !dbg !11887
  %10 = add i32 %2, -1, !dbg !11892
  call void @llvm.dbg.value(metadata i32 %10, metadata !2122, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i8 0, metadata !2126, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 %9, metadata !2125, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i32 0, metadata !2123, metadata !DIExpression()), !dbg !11887
  %11 = icmp eq i8 %9, 0, !dbg !11894
  br i1 %11, label %12, label %15, !dbg !11896

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11897
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11898
  store i8 0, i8* %14, align 1, !dbg !11899
  br label %46, !dbg !11900

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2126, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8 %17, metadata !2125, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i32 %18, metadata !2123, metadata !DIExpression()), !dbg !11887
  %19 = zext i8 %17 to i32, !dbg !11901
  %20 = zext i8 %16 to i32, !dbg !11902
  %21 = shl nuw i32 1, %20, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %21, metadata !2124, metadata !DIExpression()), !dbg !11887
  %22 = and i32 %21, %19, !dbg !11904
  %23 = icmp eq i32 %22, 0, !dbg !11906
  br i1 %23, label %42, label %24, !dbg !11907

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11908
  %26 = sub i32 %10, %18, !dbg !11909
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11910
  %28 = load i8*, i8** %27, align 4, !dbg !11910
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11911
  %30 = load i32, i32* %29, align 4, !dbg !11911
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #21, !dbg !11912
  %32 = add i32 %31, %18, !dbg !11913
  call void @llvm.dbg.value(metadata i32 %32, metadata !2123, metadata !DIExpression()), !dbg !11887
  %33 = trunc i32 %21 to i8, !dbg !11914
  %34 = xor i8 %33, -1, !dbg !11914
  %35 = and i8 %17, %34, !dbg !11914
  call void @llvm.dbg.value(metadata i8 %35, metadata !2125, metadata !DIExpression()), !dbg !11887
  %36 = icmp eq i8 %35, 0, !dbg !11915
  br i1 %36, label %12, label %37, !dbg !11917

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11918
  %39 = sub i32 %10, %32, !dbg !11920
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.205, i32 0, i32 0), i32 noundef 1) #21, !dbg !11921
  %41 = add i32 %40, %32, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %41, metadata !2123, metadata !DIExpression()), !dbg !11887
  br label %42, !dbg !11923

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11887
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11887
  call void @llvm.dbg.value(metadata i8 %44, metadata !2125, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata i32 %43, metadata !2123, metadata !DIExpression()), !dbg !11887
  %45 = add i8 %16, 1, !dbg !11924
  call void @llvm.dbg.value(metadata i8 %45, metadata !2126, metadata !DIExpression()), !dbg !11893
  br label %15, !dbg !11896

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.206, i32 0, i32 0), %3 ], !dbg !11887
  ret i8* %47, !dbg !11925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11926 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11930, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i32 %1, metadata !11931, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i8* %2, metadata !11932, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i32 %3, metadata !11933, metadata !DIExpression()), !dbg !11935
  %5 = icmp ult i32 %1, %3, !dbg !11936
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11936
  call void @llvm.dbg.value(metadata i32 %6, metadata !11934, metadata !DIExpression()), !dbg !11935
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #22, !dbg !11937
  ret i32 %6, !dbg !11938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11943, metadata !DIExpression()), !dbg !11944
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #22, !dbg !11945
  ret void, !dbg !11946
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !11947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11956, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11957, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i32 %2, metadata !11958, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11959, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i8* %4, metadata !11960, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i8* %5, metadata !11961, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i8* %6, metadata !11962, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i32 %7, metadata !11963, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i32 %8, metadata !11964, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i8* %9, metadata !11965, metadata !DIExpression()), !dbg !11967
  %11 = icmp eq i32 %7, 15, !dbg !11968
  br i1 %11, label %12, label %15, !dbg !11968

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !11968
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #21, !dbg !11968
  br i1 %14, label %19, label %18, !dbg !11968

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !11968
  %17 = icmp ult i32 %16, 31, !dbg !11968
  br i1 %17, label %19, label %18, !dbg !11968

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 536) #22, !dbg !11972
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.221, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #22, !dbg !11972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 536) #22, !dbg !11972
  unreachable, !dbg !11972

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11974
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #21, !dbg !11975
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11976
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #21, !dbg !11977
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #21, !dbg !11978
  call void @llvm.dbg.value(metadata i8* %22, metadata !11966, metadata !DIExpression()), !dbg !11967
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #22, !dbg !11979
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11980
  store i8* null, i8** %23, align 4, !dbg !11981
  %24 = icmp eq i8* %9, null, !dbg !11982
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11984
  br i1 %24, label %29, label %26, !dbg !11985

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #22, !dbg !11986
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !11988
  store i8 0, i8* %28, align 1, !dbg !11989
  br label %30, !dbg !11990

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !11991
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11993
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !11993
  br i1 %32, label %36, label %33, !dbg !11995

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 6, !dbg !11996
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 4, !dbg !11996
  br label %36, !dbg !11997

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !11967
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11998
  store %struct.k_heap* %37, %struct.k_heap** %38, align 4, !dbg !12000
  ret i8* %22, !dbg !12001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !12002 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12006, metadata !DIExpression()), !dbg !12007
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12008
  ret i1 %2, !dbg !12009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !12010 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12015, metadata !DIExpression()), !dbg !12016
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12017
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #21, !dbg !12018
  ret void, !dbg !12019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !12020 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12025, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %1, metadata !12026, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %2, metadata !12027, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %3, metadata !12028, metadata !DIExpression()), !dbg !12029
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12030
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12031
  %6 = trunc i32 %3 to i8, !dbg !12032
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12033
  store i8 %6, i8* %7, align 4, !dbg !12034
  %8 = trunc i32 %2 to i8, !dbg !12035
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12036
  store i8 %8, i8* %9, align 1, !dbg !12037
  %10 = trunc i32 %1 to i8, !dbg !12038
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12039
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12039
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12039
  store i8 %10, i8* %13, align 2, !dbg !12040
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12041
  store i8 0, i8* %14, align 1, !dbg !12042
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #21, !dbg !12043
  ret void, !dbg !12044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !12045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12049, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12050, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i32 %1, metadata !12051, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i32 0, metadata !12056, metadata !DIExpression()), !dbg !12057
  %3 = add i32 %1, 7, !dbg !12058
  %4 = and i32 %3, -8, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %4, metadata !12052, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i8* undef, metadata !12055, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i32 %4, metadata !12053, metadata !DIExpression()), !dbg !12057
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !12060
  call void @llvm.dbg.value(metadata i8* %5, metadata !12054, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i32 0, metadata !12056, metadata !DIExpression()), !dbg !12057
  call void @llvm.dbg.value(metadata i8* %5, metadata !12054, metadata !DIExpression()), !dbg !12057
  ret i8* %5, !dbg !12061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12062 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12067, metadata !DIExpression()), !dbg !12068
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12069
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #21, !dbg !12070
  ret void, !dbg !12071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12072 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12074, metadata !DIExpression()), !dbg !12075
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12076
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #21, !dbg !12077
  ret void, !dbg !12078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12079 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12083, metadata !DIExpression()), !dbg !12084
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12085
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12086
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12087
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12088
  ret void, !dbg !12089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !12090 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12095, metadata !DIExpression()), !dbg !12096
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12097
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12098
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12099
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12100
  ret void, !dbg !12101
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12102 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12119, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12110, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12111, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i32 %2, metadata !12112, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12113, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i8* %4, metadata !12114, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i8* %5, metadata !12115, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i8* %6, metadata !12116, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i32 %7, metadata !12117, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i32 %8, metadata !12118, metadata !DIExpression()), !dbg !12120
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !12121, !srcloc !11833
  call void @llvm.dbg.value(metadata i32 %11, metadata !11829, metadata !DIExpression()) #20, !dbg !12126
  %12 = icmp eq i32 %11, 0, !dbg !12127
  br i1 %12, label %14, label %13, !dbg !12128

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 647) #22, !dbg !12129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.225, i32 0, i32 0)) #22, !dbg !12129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 647) #22, !dbg !12129
  unreachable, !dbg !12129

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12119, metadata !DIExpression()), !dbg !12120
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #21, !dbg !12131
  %17 = icmp eq i64 %15, -1, !dbg !12132
  br i1 %17, label %19, label %18, !dbg !12134

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #21, !dbg !12135
  br label %19, !dbg !12137

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12139 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12144, metadata !DIExpression()), !dbg !12145
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12143, metadata !DIExpression()), !dbg !12145
  %4 = icmp eq i64 %3, 0, !dbg !12146
  br i1 %4, label %5, label %6, !dbg !12148

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.226(%struct.k_thread* noundef %0) #21, !dbg !12149
  br label %7, !dbg !12151

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #21, !dbg !12152
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.226(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12159, metadata !DIExpression()), !dbg !12160
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !12161, !srcloc !12163
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #21, !dbg !12164
  ret void, !dbg !12165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12166 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12169, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12168, metadata !DIExpression()), !dbg !12170
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12171
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #22, !dbg !12172
  ret void, !dbg !12173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12174 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12176, metadata !DIExpression()), !dbg !12196
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12197

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 750) #22, !dbg !12201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.230, i32 0, i32 0)) #22, !dbg !12201
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 750) #22, !dbg !12201
  unreachable, !dbg !12201

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12176, metadata !DIExpression()), !dbg !12196
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12204
  br i1 %4, label %6, label %5, !dbg !12205

5:                                                ; preds = %2
  tail call void @k_sched_lock() #22, !dbg !12206
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12194, metadata !DIExpression()), !dbg !12207
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !12208

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12212
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12212
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12214
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12214
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12215
  %12 = load i32, i32* %11, align 4, !dbg !12215
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12216
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12216
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12217
  %16 = load i8*, i8** %15, align 4, !dbg !12217
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12218
  %18 = load i8*, i8** %17, align 4, !dbg !12218
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12219
  %20 = load i8*, i8** %19, align 4, !dbg !12219
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12220
  %22 = load i32, i32* %21, align 4, !dbg !12220
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12221
  %24 = load i32, i32* %23, align 4, !dbg !12221
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !12222
  %26 = load i8*, i8** %25, align 4, !dbg !12222
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #21, !dbg !12223
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12224
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !12225
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !12226
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !12226
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12227
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12176, metadata !DIExpression()), !dbg !12196
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12228
  br i1 %32, label %1, label %2, !dbg !12197, !llvm.loop !12229

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 781) #22, !dbg !12231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.230, i32 0, i32 0)) #22, !dbg !12231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 781) #22, !dbg !12231
  unreachable, !dbg !12231

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !12194, metadata !DIExpression()), !dbg !12207
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12234
  br i1 %36, label %38, label %37, !dbg !12235

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #22, !dbg !12236
  ret void, !dbg !12237

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !12238
  %40 = load i32, i32* %39, align 4, !dbg !12238
  %41 = icmp eq i32 %40, -1, !dbg !12241
  br i1 %41, label %50, label %42, !dbg !12242

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !12243
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !12243
  %45 = icmp sgt i32 %40, 0, !dbg !12245
  %46 = select i1 %45, i32 %40, i32 0, !dbg !12245
  %47 = zext i32 %46 to i64, !dbg !12245
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #21, !dbg !12245
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !12246
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #21, !dbg !12246
  br label %50, !dbg !12247

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !12248
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !12194, metadata !DIExpression()), !dbg !12207
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12249
  br i1 %52, label %33, label %34, !dbg !12208, !llvm.loop !12250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !12252 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12256, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i64 %0, metadata !12258, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i32 1000, metadata !12261, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i32 10000, metadata !12262, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i8 1, metadata !12263, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i8 0, metadata !12264, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i8 1, metadata !12265, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i8 0, metadata !12266, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i8 1, metadata !12267, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i8 0, metadata !12268, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i64 0, metadata !12269, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i64 0, metadata !12269, metadata !DIExpression()), !dbg !12273
  %2 = mul i64 %0, 10, !dbg !12275
  ret i64 %2, !dbg !12281
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !12282 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12284, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata i8* %1, metadata !12285, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata i8* %2, metadata !12286, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata i8* %3, metadata !12287, metadata !DIExpression()), !dbg !12288
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12289
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12290
  %7 = load i8, i8* %6, align 4, !dbg !12291
  %8 = or i8 %7, 4, !dbg !12291
  store i8 %8, i8* %6, align 4, !dbg !12291
  tail call void @z_thread_essential_clear() #21, !dbg !12292
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !12293
  unreachable, !dbg !12293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !12294 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12299, metadata !DIExpression()), !dbg !12301
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12302
  %3 = load i32, i32* %2, align 4, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %3, metadata !12300, metadata !DIExpression()), !dbg !12301
  %4 = icmp eq i32 %3, 0, !dbg !12303
  br i1 %4, label %10, label %5, !dbg !12305

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !12306
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12309
  %8 = zext i8 %7 to i32, !dbg !12310
  %9 = icmp eq i32 %6, %8, !dbg !12311
  br i1 %9, label %11, label %10, !dbg !12312

10:                                               ; preds = %5, %1
  br label %11, !dbg !12313

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !12301
  ret i1 %12, !dbg !12314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !12315 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12317, metadata !DIExpression()), !dbg !12318
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12319
  %3 = load i32, i32* %2, align 4, !dbg !12319
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12321
  %5 = zext i8 %4 to i32, !dbg !12322
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12323
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !12324
  %8 = or i32 %7, %5, !dbg !12325
  %9 = icmp eq i32 %3, %8, !dbg !12326
  br i1 %9, label %10, label %11, !dbg !12327

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !12328
  br label %11, !dbg !12329

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !12330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12331 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12335, metadata !DIExpression()), !dbg !12336
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12337
  %3 = zext i8 %2 to i32, !dbg !12338
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12339
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !12340
  %6 = or i32 %5, %3, !dbg !12341
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12342
  store i32 %6, i32* %7, align 4, !dbg !12343
  ret void, !dbg !12344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !12345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12349, metadata !DIExpression()), !dbg !12350
  ret i32 -134, !dbg !12351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12356, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i32 %1, metadata !12357, metadata !DIExpression()), !dbg !12358
  ret i32 -134, !dbg !12359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !12360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12367, metadata !DIExpression()), !dbg !12369
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !12368, metadata !DIExpression()), !dbg !12369
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12370
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !12372
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12369
  ret i32 %6, !dbg !12373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !12374 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !12380
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12379
  ret i32 %3, !dbg !12382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12383 {
  tail call void @sys_clock_idle_exit() #22, !dbg !12385
  ret void, !dbg !12386
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !12387 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12389, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.value(metadata i8* %1, metadata !12390, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.value(metadata i8* %2, metadata !12391, metadata !DIExpression()), !dbg !12392
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12393
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !12393
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !12393
  %7 = load i8, i8* %6, align 2, !dbg !12393
  %8 = icmp sgt i8 %7, -1, !dbg !12393
  br i1 %8, label %10, label %9, !dbg !12396

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.241, i32 0, i32 0), i32 noundef 39) #22, !dbg !12397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.241, i32 0, i32 0), i32 noundef 39) #22, !dbg !12397
  unreachable, !dbg !12397

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12399, !srcloc !12406
  call void @llvm.dbg.value(metadata i32 undef, metadata !12402, metadata !DIExpression()) #20, !dbg !12407
  call void @llvm.dbg.value(metadata i32 undef, metadata !12403, metadata !DIExpression()) #20, !dbg !12407
  tail call fastcc void @k_cpu_idle() #21, !dbg !12408
  br label %10, !dbg !12409, !llvm.loop !12410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12412 {
  tail call void @arch_cpu_idle() #22, !dbg !12413
  ret void, !dbg !12414
}

; Function Attrs: optsize
declare !dbg !12415 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !12416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12420, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12421, metadata !DIExpression()), !dbg !12424
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12425
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12425
  %5 = load i8, i8* %4, align 2, !dbg !12425
  call void @llvm.dbg.value(metadata i8 %5, metadata !12422, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12424
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12426
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12426
  %8 = load i8, i8* %7, align 2, !dbg !12426
  call void @llvm.dbg.value(metadata i8 %8, metadata !12423, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12424
  %9 = icmp eq i8 %8, %5, !dbg !12427
  %10 = sext i8 %5 to i32, !dbg !12429
  %11 = sext i8 %8 to i32, !dbg !12429
  %12 = sub nsw i32 %11, %10, !dbg !12429
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12429
  ret i32 %13, !dbg !12430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12431 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12435, metadata !DIExpression()), !dbg !12436
  %2 = tail call fastcc i32 @slice_time() #21, !dbg !12437
  %3 = icmp eq i32 %2, 0, !dbg !12439
  br i1 %3, label %8, label %4, !dbg !12440

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #22, !dbg !12441
  %6 = add i32 %5, %2, !dbg !12443
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12444
  %7 = tail call fastcc i32 @slice_time() #21, !dbg !12445
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #22, !dbg !12446
  br label %8, !dbg !12447

8:                                                ; preds = %4, %1
  ret void, !dbg !12448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !12449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12453, metadata !DIExpression()), !dbg !12455
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12456
  call void @llvm.dbg.value(metadata i32 %1, metadata !12454, metadata !DIExpression()), !dbg !12455
  ret i32 %1, !dbg !12457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12462, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.value(metadata i32 %1, metadata !12463, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.value(metadata i32 0, metadata !12464, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !12480
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12482, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !12489
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !12489
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !12480
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12490
  br i1 %4, label %6, label %5, !dbg !12493

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12494
  unreachable, !dbg !12494

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !12489
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !12480
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12496
  call void @llvm.dbg.value(metadata i32 undef, metadata !12470, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata i32 undef, metadata !12464, metadata !DIExpression()), !dbg !12472
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12497
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #21, !dbg !12500
  %8 = icmp sgt i32 %0, 0, !dbg !12501
  %9 = icmp sgt i32 %7, 2, !dbg !12503
  %10 = select i1 %9, i32 %7, i32 2, !dbg !12503
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !12503
  store i32 %11, i32* @slice_ticks, align 4, !dbg !12504
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12505
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12506
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !12513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !12513
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12515
  br i1 %12, label %14, label %13, !dbg !12518

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12519
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12519
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12519
  unreachable, !dbg !12519

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %15, metadata !12485, metadata !DIExpression()) #20, !dbg !12489
  call void @llvm.dbg.value(metadata i32 %15, metadata !12479, metadata !DIExpression()) #20, !dbg !12480
  call void @llvm.dbg.value(metadata i32 %15, metadata !12470, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !12513
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !12524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #20, !dbg !12526, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !12464, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata i32 undef, metadata !12464, metadata !DIExpression()), !dbg !12472
  ret void, !dbg !12528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !12529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12531, metadata !DIExpression()), !dbg !12532
  call void @llvm.dbg.value(metadata i32 %0, metadata !12533, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12548
  call void @llvm.dbg.value(metadata i32 1000, metadata !12536, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i32 10000, metadata !12537, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i8 1, metadata !12538, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i1 true, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12548
  call void @llvm.dbg.value(metadata i1 true, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12548
  call void @llvm.dbg.value(metadata i8 0, metadata !12541, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i1 true, metadata !12542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12548
  call void @llvm.dbg.value(metadata i1 false, metadata !12543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12548
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !12548
  %2 = mul i32 %0, 10, !dbg !12550
  ret i32 %2, !dbg !12556
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12559, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !12562
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12564, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !12566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !12566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !12562
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12567
  br i1 %3, label %5, label %4, !dbg !12568

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12569
  unreachable, !dbg !12569

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12564
  call void @llvm.dbg.value(metadata i32 %6, metadata !12485, metadata !DIExpression()) #20, !dbg !12566
  call void @llvm.dbg.value(metadata i32 %6, metadata !12479, metadata !DIExpression()) #20, !dbg !12562
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12570
  call void @llvm.dbg.value(metadata i32 %6, metadata !12560, metadata !DIExpression()), !dbg !12561
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12571
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12573
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !12574
  br i1 %9, label %10, label %14, !dbg !12575

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12576
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !12578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !12578
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12580
  br i1 %11, label %13, label %12, !dbg !12581

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12582
  unreachable, !dbg !12582

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !12507, metadata !DIExpression()) #20, !dbg !12578
  call void @llvm.dbg.value(metadata i32 %6, metadata !12521, metadata !DIExpression()) #20, !dbg !12583
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !12585, !srcloc !12527
  br label %33, !dbg !12586

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12587
  %15 = tail call fastcc i32 @slice_time() #21, !dbg !12588
  %16 = icmp eq i32 %15, 0, !dbg !12588
  br i1 %16, label %27, label %17, !dbg !12590

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #21, !dbg !12591
  br i1 %18, label %19, label %27, !dbg !12592

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12593
  %21 = icmp sgt i32 %20, %0, !dbg !12596
  br i1 %21, label %25, label %22, !dbg !12597

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12598
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #21, !dbg !12598
  call void @llvm.dbg.value(metadata i32 %24, metadata !12560, metadata !DIExpression()), !dbg !12561
  br label %28, !dbg !12600

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !12601
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12601
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12603
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !12561
  call void @llvm.dbg.value(metadata i32 %29, metadata !12560, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !12605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !12605
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12607
  br i1 %30, label %32, label %31, !dbg !12608

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12609
  unreachable, !dbg !12609

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !12507, metadata !DIExpression()) #20, !dbg !12605
  call void @llvm.dbg.value(metadata i32 %29, metadata !12521, metadata !DIExpression()) #20, !dbg !12610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #20, !dbg !12612, !srcloc !12527
  br label %33, !dbg !12613

33:                                               ; preds = %32, %13
  ret void, !dbg !12613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !12614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12618, metadata !DIExpression()), !dbg !12620
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #21, !dbg !12621
  %3 = icmp eq i32 %2, 0, !dbg !12621
  br i1 %3, label %16, label %4, !dbg !12622

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #21, !dbg !12623
  br i1 %5, label %16, label %6, !dbg !12624

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12625
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12625
  %9 = load i8, i8* %8, align 2, !dbg !12625
  %10 = sext i8 %9 to i32, !dbg !12626
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12627
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #21, !dbg !12628
  br i1 %12, label %16, label %13, !dbg !12629

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #21, !dbg !12630
  %15 = xor i1 %14, true, !dbg !12631
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12620
  call void @llvm.dbg.value(metadata i1 %17, metadata !12619, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12620
  ret i1 %17, !dbg !12632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12633 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12637, metadata !DIExpression()), !dbg !12639
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12640
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12638, metadata !DIExpression()), !dbg !12639
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #21, !dbg !12641
  br i1 %3, label %5, label %4, !dbg !12643

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #21, !dbg !12644
  br label %5, !dbg !12646

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12637, metadata !DIExpression()), !dbg !12639
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12647
  ret i32 %6, !dbg !12648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12651, metadata !DIExpression()), !dbg !12653
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12654
  %3 = load i8, i8* %2, align 1, !dbg !12654
  call void @llvm.dbg.value(metadata i8 %3, metadata !12652, metadata !DIExpression()), !dbg !12653
  %4 = and i8 %3, 31, !dbg !12655
  %5 = icmp ne i8 %4, 0, !dbg !12656
  ret i1 %5, !dbg !12657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12660, metadata !DIExpression()), !dbg !12661
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !12662
  br i1 %2, label %3, label %7, !dbg !12664

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12665, metadata !DIExpression()) #20, !dbg !12668
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12671
  %5 = load i8, i8* %4, align 1, !dbg !12672
  %6 = and i8 %5, 127, !dbg !12672
  store i8 %6, i8* %4, align 1, !dbg !12672
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12673, metadata !DIExpression()) #20, !dbg !12676
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !12680
  br label %7, !dbg !12681

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12682, metadata !DIExpression()) #20, !dbg !12685
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12687
  %9 = load i8, i8* %8, align 1, !dbg !12688
  %10 = or i8 %9, -128, !dbg !12688
  store i8 %10, i8* %8, align 1, !dbg !12688
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12689, metadata !DIExpression()) #20, !dbg !12692
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12696, metadata !DIExpression()) #20, !dbg !12704
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12702, metadata !DIExpression()) #20, !dbg !12704
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !12706
  br i1 %11, label %12, label %13, !dbg !12709

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !12710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !12710
  unreachable, !dbg !12710

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !12712
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12703, metadata !DIExpression()) #20, !dbg !12704
  %15 = icmp eq %struct._dnode* %14, null, !dbg !12714
  br i1 %15, label %26, label %16, !dbg !12712

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12703, metadata !DIExpression()) #20, !dbg !12704
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !12716
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !12703, metadata !DIExpression()) #20, !dbg !12704
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #22, !dbg !12717
  %20 = icmp sgt i32 %19, 0, !dbg !12720
  br i1 %20, label %21, label %23, !dbg !12721

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12722
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #22, !dbg !12724
  br label %28, !dbg !12725

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #22, !dbg !12714
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12703, metadata !DIExpression()) #20, !dbg !12704
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12714
  br i1 %25, label %26, label %16, !dbg !12712, !llvm.loop !12726

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12728
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #22, !dbg !12729
  br label %28, !dbg !12730

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12731
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !12732
  %31 = zext i1 %30 to i32, !dbg !12732
  tail call fastcc void @update_cache(i32 noundef %31) #21, !dbg !12733
  ret void, !dbg !12734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12735 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12737, metadata !DIExpression()), !dbg !12738
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #21, !dbg !12739
  ret i1 %2, !dbg !12740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12741 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12743, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12744, metadata !DIExpression()), !dbg !12745
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !12746
  br i1 %3, label %4, label %5, !dbg !12749

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1139) #22, !dbg !12750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1139) #22, !dbg !12750
  unreachable, !dbg !12750

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12752
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #21, !dbg !12753
  ret void, !dbg !12754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !12755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12757, metadata !DIExpression()), !dbg !12758
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12759
  ret i1 %2, !dbg !12760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !12761 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12765, metadata !DIExpression()), !dbg !12766
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #21, !dbg !12767
  br i1 %2, label %6, label %3, !dbg !12767

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12768
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12768
  br label %6, !dbg !12767

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12767
  ret %struct._dnode* %7, !dbg !12769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12770 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12774, metadata !DIExpression()), !dbg !12778
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12775, metadata !DIExpression()), !dbg !12778
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12779
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12779
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12776, metadata !DIExpression()), !dbg !12778
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12780
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12781
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12782
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12783
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12784
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12785
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12786
  ret void, !dbg !12787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !12788 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12792, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12793, metadata !DIExpression()), !dbg !12794
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12795
  br i1 %3, label %6, label %4, !dbg !12796

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #21, !dbg !12797
  br label %6, !dbg !12796

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12796
  ret %struct._dnode* %7, !dbg !12798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12799 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12803, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12804, metadata !DIExpression()), !dbg !12806
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12807
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12807
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12805, metadata !DIExpression()), !dbg !12806
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12808
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12809
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12810
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12811
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12812
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12813
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12814
  ret void, !dbg !12815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12818, metadata !DIExpression()), !dbg !12820
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !12821
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12828, metadata !DIExpression()) #20, !dbg !12830
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12831
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12832
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12832
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12819, metadata !DIExpression()), !dbg !12820
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12833, metadata !DIExpression()) #20, !dbg !12839
  call void @llvm.dbg.value(metadata i32 %0, metadata !12838, metadata !DIExpression()) #20, !dbg !12839
  %6 = icmp eq i32 %0, 0, !dbg !12842
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12844
  br i1 %6, label %8, label %18, !dbg !12845

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !12846
  br i1 %9, label %10, label %11, !dbg !12849

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 137) #22, !dbg !12850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !12850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 137) #22, !dbg !12850
  unreachable, !dbg !12850

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #22, !dbg !12852
  br i1 %12, label %18, label %13, !dbg !12854

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #22, !dbg !12855
  br i1 %14, label %18, label %15, !dbg !12857

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #22, !dbg !12858
  %17 = icmp eq i32 %16, 0, !dbg !12858
  br i1 %17, label %21, label %18, !dbg !12860

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !12861
  br i1 %19, label %21, label %20, !dbg !12864

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12865
  br label %21, !dbg !12867

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !12844
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12844
  ret void, !dbg !12868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !12869 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12873, metadata !DIExpression()), !dbg !12876
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12874, metadata !DIExpression()), !dbg !12876
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #21, !dbg !12877
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12875, metadata !DIExpression()), !dbg !12876
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12874, metadata !DIExpression()), !dbg !12876
  ret %struct.k_thread* %3, !dbg !12878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12881, metadata !DIExpression()), !dbg !12882
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12883
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #21, !dbg !12884
  %4 = xor i1 %3, true, !dbg !12885
  ret i1 %4, !dbg !12886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12889, metadata !DIExpression()), !dbg !12890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12891
  %3 = load i16, i16* %2, align 2, !dbg !12891
  %4 = icmp ult i16 %3, 128, !dbg !12892
  %5 = zext i1 %4 to i32, !dbg !12892
  ret i32 %5, !dbg !12893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12894 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12900, metadata !DIExpression()), !dbg !12901
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12902
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #21, !dbg !12903
  %4 = xor i1 %3, true, !dbg !12904
  ret i1 %4, !dbg !12905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12906 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12912, metadata !DIExpression()), !dbg !12913
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12914
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12914
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12915
  ret i1 %4, !dbg !12916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !12917 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12919, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12920, metadata !DIExpression()), !dbg !12921
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12922
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12922
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12923
  br i1 %5, label %9, label %6, !dbg !12924

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12925
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12925
  br label %9, !dbg !12924

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12924
  ret %struct._dnode* %10, !dbg !12926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !12927 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12931, metadata !DIExpression()), !dbg !12932
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12933
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12933
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12934
  ret i1 %4, !dbg !12935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !12936 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12940, metadata !DIExpression()), !dbg !12943
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12944
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12944
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12941, metadata !DIExpression()), !dbg !12943
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12945
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12945
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12942, metadata !DIExpression()), !dbg !12943
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12946
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12947
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12948
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12949
  tail call fastcc void @sys_dnode_init.252(%struct._dnode* noundef %0) #21, !dbg !12950
  ret void, !dbg !12951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.252(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12952 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12954, metadata !DIExpression()), !dbg !12955
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12956
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12957
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12958
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12959
  ret void, !dbg !12960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !12961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12965, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 %1, metadata !12966, metadata !DIExpression()), !dbg !12967
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12968
  %4 = load i8, i8* %3, align 1, !dbg !12968
  %5 = zext i8 %4 to i32, !dbg !12969
  %6 = and i32 %5, %1, !dbg !12970
  %7 = icmp ne i32 %6, 0, !dbg !12971
  ret i1 %7, !dbg !12972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12977, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 %1, metadata !12978, metadata !DIExpression()), !dbg !12979
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #21, !dbg !12980
  ret i1 %3, !dbg !12981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12984, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i32 %1, metadata !12985, metadata !DIExpression()), !dbg !12986
  %3 = icmp slt i32 %0, %1, !dbg !12987
  ret i1 %3, !dbg !12988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12991, metadata !DIExpression()), !dbg !12995
  call void @llvm.dbg.value(metadata i32 0, metadata !12992, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !12997
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12999, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13001
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13001
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !12997
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13002
  br i1 %3, label %5, label %4, !dbg !13003

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13004
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13004
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13004
  unreachable, !dbg !13004

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13001
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !12997
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13005
  call void @llvm.dbg.value(metadata i32 undef, metadata !12994, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()), !dbg !12996
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13011
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13013
  br i1 %6, label %8, label %7, !dbg !13014

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13015
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13015
  unreachable, !dbg !13015

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12999
  call void @llvm.dbg.value(metadata i32 %9, metadata !12485, metadata !DIExpression()) #20, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %9, metadata !12479, metadata !DIExpression()) #20, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %9, metadata !12994, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13011
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13018, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !12992, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()), !dbg !12996
  ret void, !dbg !13019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13022, metadata !DIExpression()), !dbg !13023
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !13024
  br i1 %2, label %27, label %3, !dbg !13026

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #21, !dbg !13027
  br i1 %4, label %5, label %27, !dbg !13028

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12682, metadata !DIExpression()) #20, !dbg !13029
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13032
  %7 = load i8, i8* %6, align 1, !dbg !13033
  %8 = or i8 %7, -128, !dbg !13033
  store i8 %8, i8* %6, align 1, !dbg !13033
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12689, metadata !DIExpression()) #20, !dbg !13034
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12696, metadata !DIExpression()) #20, !dbg !13036
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12702, metadata !DIExpression()) #20, !dbg !13036
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !13038
  br i1 %9, label %10, label %11, !dbg !13039

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13040
  unreachable, !dbg !13040

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !13041
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12703, metadata !DIExpression()) #20, !dbg !13036
  %13 = icmp eq %struct._dnode* %12, null, !dbg !13042
  br i1 %13, label %24, label %14, !dbg !13041

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12703, metadata !DIExpression()) #20, !dbg !13036
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !13043
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !12703, metadata !DIExpression()) #20, !dbg !13036
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #22, !dbg !13044
  %18 = icmp sgt i32 %17, 0, !dbg !13045
  br i1 %18, label %19, label %21, !dbg !13046

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13047
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #22, !dbg !13048
  br label %26, !dbg !13049

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #22, !dbg !13042
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !12703, metadata !DIExpression()) #20, !dbg !13036
  %23 = icmp eq %struct._dnode* %22, null, !dbg !13042
  br i1 %23, label %24, label %14, !dbg !13041, !llvm.loop !13050

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13052
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #22, !dbg !13053
  br label %26, !dbg !13054

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #21, !dbg !13055
  br label %27, !dbg !13056

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !13057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13058 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13060, metadata !DIExpression()), !dbg !13061
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #21, !dbg !13062
  br i1 %2, label %6, label %3, !dbg !13063

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #21, !dbg !13064
  %5 = xor i1 %4, true, !dbg !13063
  br label %6, !dbg !13063

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13068, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i32 0, metadata !13069, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13074
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13076, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13078
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13078
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13074
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13079
  br i1 %3, label %5, label %4, !dbg !13080

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13081
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13081
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13081
  unreachable, !dbg !13081

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13078
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13074
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13082
  call void @llvm.dbg.value(metadata i32 undef, metadata !13071, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 undef, metadata !13069, metadata !DIExpression()), !dbg !13073
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #21, !dbg !13083
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13086
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13088
  br i1 %6, label %8, label %7, !dbg !13089

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13090
  unreachable, !dbg !13090

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13076
  call void @llvm.dbg.value(metadata i32 %9, metadata !12485, metadata !DIExpression()) #20, !dbg !13078
  call void @llvm.dbg.value(metadata i32 %9, metadata !12479, metadata !DIExpression()) #20, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %9, metadata !13071, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13091
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13093, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13069, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 undef, metadata !13069, metadata !DIExpression()), !dbg !13073
  ret void, !dbg !13094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13097, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13100
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13102, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13104
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13104
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13100
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13105
  br i1 %3, label %5, label %4, !dbg !13106

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13107
  unreachable, !dbg !13107

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13102
  call void @llvm.dbg.value(metadata i32 %6, metadata !12485, metadata !DIExpression()) #20, !dbg !13104
  call void @llvm.dbg.value(metadata i32 %6, metadata !12479, metadata !DIExpression()) #20, !dbg !13100
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %6, metadata !13098, metadata !DIExpression()), !dbg !13099
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #21, !dbg !13109
  br i1 %7, label %8, label %12, !dbg !13111

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13112
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13115
  br i1 %9, label %11, label %10, !dbg !13116

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13117
  unreachable, !dbg !13117

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12507, metadata !DIExpression()) #20, !dbg !13112
  call void @llvm.dbg.value(metadata i32 %6, metadata !12521, metadata !DIExpression()) #20, !dbg !13118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !13120, !srcloc !12527
  br label %14, !dbg !13121

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.257(%struct.k_thread* noundef %0) #21, !dbg !13122
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !13123
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13124
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #21, !dbg !13124
  br label %14, !dbg !13125

14:                                               ; preds = %12, %11
  ret void, !dbg !13125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13128, metadata !DIExpression()), !dbg !13129
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13130
  %3 = load i8, i8* %2, align 1, !dbg !13130
  %4 = and i8 %3, 4, !dbg !13131
  %5 = icmp eq i8 %4, 0, !dbg !13132
  ret i1 %5, !dbg !13133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.257(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13134 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13136, metadata !DIExpression()), !dbg !13137
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13138
  %3 = load i8, i8* %2, align 1, !dbg !13139
  %4 = and i8 %3, -5, !dbg !13139
  store i8 %4, i8* %2, align 1, !dbg !13139
  ret void, !dbg !13140
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13141 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13144, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13143, metadata !DIExpression()), !dbg !13145
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #21, !dbg !13146
  br i1 %4, label %5, label %12, !dbg !13148

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #21, !dbg !13149
  br i1 %6, label %7, label %12, !dbg !13150

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !13157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13156, metadata !DIExpression()) #20, !dbg !13157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13160, metadata !DIExpression()) #20, !dbg !13165
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #22, !dbg !13167
  br i1 %8, label %10, label %9, !dbg !13170

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef %0) #22, !dbg !13171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13171
  unreachable, !dbg !13171

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !13151, metadata !DIExpression()) #20, !dbg !13157
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #22, !dbg !13173
  br label %16, !dbg !13174

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12512, metadata !DIExpression()) #20, !dbg !13175
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #22, !dbg !13178
  br i1 %13, label %15, label %14, !dbg !13179

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef %0) #22, !dbg !13180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13180
  unreachable, !dbg !13180

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !12507, metadata !DIExpression()) #20, !dbg !13175
  call void @llvm.dbg.value(metadata i32 %3, metadata !12521, metadata !DIExpression()) #20, !dbg !13181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #20, !dbg !13183, !srcloc !12527
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !13184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13189, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i32 %0, metadata !13191, metadata !DIExpression()), !dbg !13196
  %2 = icmp eq i32 %0, 0, !dbg !13198
  br i1 %2, label %3, label %6, !dbg !13199

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13200, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %4, metadata !13203, metadata !DIExpression()) #20, !dbg !13208
  %5 = icmp eq i32 %4, 0, !dbg !13209
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13190
  ret i1 %7, !dbg !13210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !13211 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13214
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13213, metadata !DIExpression()), !dbg !13215
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13216
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13217
  ret i1 %3, !dbg !13218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13221, metadata !DIExpression()), !dbg !13223
  %2 = tail call i32 @arch_swap(i32 noundef %0) #22, !dbg !13224
  call void @llvm.dbg.value(metadata i32 %2, metadata !13222, metadata !DIExpression()), !dbg !13223
  ret i32 %2, !dbg !13225
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13226 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13228, metadata !DIExpression()), !dbg !13232
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !13233
  call void @llvm.dbg.value(metadata i32 0, metadata !13229, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13235
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13237, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13239
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13239
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13235
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13240
  br i1 %4, label %6, label %5, !dbg !13241

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13242
  unreachable, !dbg !13242

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !13237
  call void @llvm.dbg.value(metadata i32 %7, metadata !12485, metadata !DIExpression()) #20, !dbg !13239
  call void @llvm.dbg.value(metadata i32 %7, metadata !12479, metadata !DIExpression()) #20, !dbg !13235
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13243
  call void @llvm.dbg.value(metadata i32 %7, metadata !13231, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 undef, metadata !13229, metadata !DIExpression()), !dbg !13234
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !13244
  br i1 %8, label %9, label %13, !dbg !13248

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12665, metadata !DIExpression()) #20, !dbg !13249
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13252
  %11 = load i8, i8* %10, align 1, !dbg !13253
  %12 = and i8 %11, 127, !dbg !13253
  store i8 %12, i8* %10, align 1, !dbg !13253
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12673, metadata !DIExpression()) #20, !dbg !13254
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !13256
  br label %13, !dbg !13257

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #21, !dbg !13258
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13259
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13260
  %16 = zext i1 %15 to i32, !dbg !13260
  tail call fastcc void @update_cache(i32 noundef %16) #21, !dbg !13261
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13262
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13264
  br i1 %17, label %19, label %18, !dbg !13265

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13266
  unreachable, !dbg !13266

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !12507, metadata !DIExpression()) #20, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %7, metadata !12521, metadata !DIExpression()) #20, !dbg !13267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #20, !dbg !13269, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13229, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 undef, metadata !13229, metadata !DIExpression()), !dbg !13234
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13270
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !13272
  br i1 %21, label %22, label %23, !dbg !13273

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13274
  br label %23, !dbg !13276

23:                                               ; preds = %22, %19
  ret void, !dbg !13277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13280, metadata !DIExpression()), !dbg !13281
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13282
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #22, !dbg !13283
  ret i32 %3, !dbg !13284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13285 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13287, metadata !DIExpression()), !dbg !13288
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13289
  %3 = load i8, i8* %2, align 1, !dbg !13290
  %4 = or i8 %3, 16, !dbg !13290
  store i8 %4, i8* %2, align 1, !dbg !13290
  ret void, !dbg !13291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13292 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13293, !srcloc !12488
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13293
  call void @llvm.dbg.value(metadata i32 %2, metadata !12485, metadata !DIExpression()) #20, !dbg !13295
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13295
  tail call void @z_reschedule_irqlock(i32 noundef %2) #21, !dbg !13296
  ret void, !dbg !13297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13300, metadata !DIExpression()), !dbg !13301
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #21, !dbg !13302
  br i1 %2, label %3, label %5, !dbg !13304

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #21, !dbg !13305
  br label %6, !dbg !13307

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12521, metadata !DIExpression()) #20, !dbg !13308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #20, !dbg !13311, !srcloc !12527
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13313 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13315, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13318
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13320, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13322
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13322
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13318
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13323
  br i1 %3, label %5, label %4, !dbg !13324

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13325
  unreachable, !dbg !13325

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %6, metadata !12485, metadata !DIExpression()) #20, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %6, metadata !12479, metadata !DIExpression()) #20, !dbg !13318
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13326
  call void @llvm.dbg.value(metadata i32 %6, metadata !13316, metadata !DIExpression()), !dbg !13317
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #21, !dbg !13327
  br i1 %7, label %12, label %8, !dbg !13329

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13330
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13333
  br i1 %9, label %11, label %10, !dbg !13334

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13335
  unreachable, !dbg !13335

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12507, metadata !DIExpression()) #20, !dbg !13330
  call void @llvm.dbg.value(metadata i32 %6, metadata !12521, metadata !DIExpression()) #20, !dbg !13336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !13338, !srcloc !12527
  br label %14, !dbg !13339

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #21, !dbg !13340
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !13341
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13342
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #21, !dbg !13342
  br label %14, !dbg !13343

14:                                               ; preds = %12, %11
  ret void, !dbg !13343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13344 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13346, metadata !DIExpression()), !dbg !13347
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13348
  %3 = load i8, i8* %2, align 1, !dbg !13348
  %4 = and i8 %3, 16, !dbg !13349
  %5 = icmp ne i8 %4, 0, !dbg !13350
  ret i1 %5, !dbg !13351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13354, metadata !DIExpression()), !dbg !13355
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13356
  %3 = load i8, i8* %2, align 1, !dbg !13357
  %4 = and i8 %3, -17, !dbg !13357
  store i8 %4, i8* %2, align 1, !dbg !13357
  ret void, !dbg !13358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13359 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13369, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13367, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13368, metadata !DIExpression()), !dbg !13373
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13374
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !13374
  br i1 %5, label %9, label %6, !dbg !13374

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #21, !dbg !13374
  br i1 %7, label %9, label %8, !dbg !13377

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 773) #22, !dbg !13378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 773) #22, !dbg !13378
  unreachable, !dbg !13378

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !13370, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13381
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13383, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13381
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13386
  br i1 %11, label %13, label %12, !dbg !13387

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13388
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13388
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13388
  unreachable, !dbg !13388

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13381
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13389
  call void @llvm.dbg.value(metadata i32 undef, metadata !13372, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !13370, metadata !DIExpression()), !dbg !13380
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #21, !dbg !13390
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13393
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13395
  br i1 %14, label %16, label %15, !dbg !13396

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13397
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13397
  unreachable, !dbg !13397

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %17, metadata !12485, metadata !DIExpression()) #20, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %17, metadata !12479, metadata !DIExpression()) #20, !dbg !13381
  call void @llvm.dbg.value(metadata i32 %17, metadata !13372, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13393
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #20, !dbg !13400, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13370, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !13370, metadata !DIExpression()), !dbg !13380
  ret void, !dbg !13401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13404, metadata !DIExpression()), !dbg !13405
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13406
  %3 = load i8, i8* %2, align 1, !dbg !13406
  %4 = and i8 %3, 1, !dbg !13407
  %5 = icmp ne i8 %4, 0, !dbg !13408
  ret i1 %5, !dbg !13409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13410 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13414, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13412, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13413, metadata !DIExpression()), !dbg !13415
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #21, !dbg !13416
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #21, !dbg !13417
  ret void, !dbg !13418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13423, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13424, metadata !DIExpression()), !dbg !13425
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #21, !dbg !13426
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #21, !dbg !13427
  %3 = icmp eq %union.anon* %1, null, !dbg !13428
  br i1 %3, label %24, label %4, !dbg !13430

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13431
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13433
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13434
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12696, metadata !DIExpression()) #20, !dbg !13435
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12702, metadata !DIExpression()) #20, !dbg !13435
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !13437
  br i1 %7, label %8, label %9, !dbg !13438

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13439
  unreachable, !dbg !13439

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #22, !dbg !13440
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12703, metadata !DIExpression()) #20, !dbg !13435
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13441
  br i1 %11, label %22, label %12, !dbg !13440

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12703, metadata !DIExpression()) #20, !dbg !13435
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13442
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12703, metadata !DIExpression()) #20, !dbg !13435
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #22, !dbg !13443
  %16 = icmp sgt i32 %15, 0, !dbg !13444
  br i1 %16, label %17, label %19, !dbg !13445

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13446
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #22, !dbg !13447
  br label %24, !dbg !13448

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #22, !dbg !13441
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12703, metadata !DIExpression()) #20, !dbg !13435
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13441
  br i1 %21, label %22, label %12, !dbg !13440, !llvm.loop !13449

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13451
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #22, !dbg !13452
  br label %24, !dbg !13453

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !13454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13455 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13460, metadata !DIExpression()), !dbg !13461
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13459, metadata !DIExpression()), !dbg !13461
  %4 = icmp eq i64 %3, -1, !dbg !13462
  br i1 %4, label %6, label %5, !dbg !13464

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.259(%struct.k_thread* noundef %0, [1 x i64] %1) #21, !dbg !13465
  br label %6, !dbg !13467

6:                                                ; preds = %5, %2
  ret void, !dbg !13468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.259(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13469 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13472, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13471, metadata !DIExpression()), !dbg !13473
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13474
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #22, !dbg !13475
  ret void, !dbg !13476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13477 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13479, metadata !DIExpression()), !dbg !13487
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13488
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13488
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13480, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i32 0, metadata !13481, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13490
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13492, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13490
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13495
  br i1 %5, label %7, label %6, !dbg !13496

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13497
  unreachable, !dbg !13497

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13490
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13498
  call void @llvm.dbg.value(metadata i32 undef, metadata !13483, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 undef, metadata !13481, metadata !DIExpression()), !dbg !13489
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13499
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !13500
  %10 = load i8, i8* %9, align 1, !dbg !13500
  %11 = and i8 %10, 40, !dbg !13501
  %12 = icmp eq i8 %11, 0, !dbg !13501
  call void @llvm.dbg.value(metadata i1 %12, metadata !13484, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13502
  br i1 %12, label %13, label %20, !dbg !13503

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13504
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !13504
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !13504
  %17 = icmp eq %union.anon* %16, null, !dbg !13508
  br i1 %17, label %19, label %18, !dbg !13509

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #21, !dbg !13510
  br label %19, !dbg !13512

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.257(%struct.k_thread* noundef nonnull %3) #21, !dbg !13513
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #21, !dbg !13514
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #21, !dbg !13515
  br label %20, !dbg !13516

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13517
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13519
  br i1 %21, label %23, label %22, !dbg !13520

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13521
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13521
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13521
  unreachable, !dbg !13521

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !13492
  call void @llvm.dbg.value(metadata i32 %24, metadata !12485, metadata !DIExpression()) #20, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %24, metadata !12479, metadata !DIExpression()) #20, !dbg !13490
  call void @llvm.dbg.value(metadata i32 %24, metadata !13483, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13517
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #20, !dbg !13524, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13481, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 undef, metadata !13481, metadata !DIExpression()), !dbg !13489
  ret void, !dbg !13525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13528, metadata !DIExpression()), !dbg !13529
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #21, !dbg !13530
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #21, !dbg !13531
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #21, !dbg !13532
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13533
  store %union.anon* null, %union.anon** %3, align 8, !dbg !13534
  ret void, !dbg !13535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !13536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13540, metadata !DIExpression()), !dbg !13541
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13542
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !13542
  %4 = icmp eq %union.anon* %3, null, !dbg !13542
  br i1 %4, label %5, label %6, !dbg !13545

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 726) #22, !dbg !13546
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 726) #22, !dbg !13546
  unreachable, !dbg !13546

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !13548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13551, metadata !DIExpression()), !dbg !13552
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13553
  %3 = load i8, i8* %2, align 1, !dbg !13554
  %4 = and i8 %3, -3, !dbg !13554
  store i8 %4, i8* %2, align 1, !dbg !13554
  ret void, !dbg !13555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13558, metadata !DIExpression()), !dbg !13559
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !13560
  br i1 %2, label %3, label %7, !dbg !13562

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12665, metadata !DIExpression()) #20, !dbg !13563
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13566
  %5 = load i8, i8* %4, align 1, !dbg !13567
  %6 = and i8 %5, 127, !dbg !13567
  store i8 %6, i8* %4, align 1, !dbg !13567
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12673, metadata !DIExpression()) #20, !dbg !13568
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !13570
  br label %7, !dbg !13571

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13572
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13573
  %10 = zext i1 %9 to i32, !dbg !13573
  tail call fastcc void @update_cache(i32 noundef %10) #21, !dbg !13574
  ret void, !dbg !13575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13576 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13578, metadata !DIExpression()), !dbg !13579
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13580
  %3 = load i8, i8* %2, align 1, !dbg !13581
  %4 = or i8 %3, 2, !dbg !13581
  store i8 %4, i8* %2, align 1, !dbg !13581
  ret void, !dbg !13582
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #18 !dbg !13583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13585, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 0, metadata !13586, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13591
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13593, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13595
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13595
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13591
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13596
  br i1 %3, label %5, label %4, !dbg !13597

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13598
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13598
  unreachable, !dbg !13598

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13595
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13591
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13588, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()), !dbg !13590
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #21, !dbg !13600
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13603
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13605
  br i1 %6, label %8, label %7, !dbg !13606

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13607
  unreachable, !dbg !13607

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13593
  call void @llvm.dbg.value(metadata i32 %9, metadata !12485, metadata !DIExpression()) #20, !dbg !13595
  call void @llvm.dbg.value(metadata i32 %9, metadata !12479, metadata !DIExpression()) #20, !dbg !13591
  call void @llvm.dbg.value(metadata i32 %9, metadata !13588, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13603
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13610, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13586, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()), !dbg !13590
  ret void, !dbg !13611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13612 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13618, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 %0, metadata !13616, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13617, metadata !DIExpression()), !dbg !13623
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13624
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #21, !dbg !13625
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13626
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13627
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #21, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %6, metadata !13619, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 0, metadata !13620, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13630
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13632, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13634
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13634
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13630
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13635
  br i1 %8, label %10, label %9, !dbg !13636

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13637
  unreachable, !dbg !13637

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13634
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13630
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13622, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()), !dbg !13629
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13639
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13643
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13644
  br i1 %13, label %14, label %15, !dbg !13645

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13646
  br label %15, !dbg !13648

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13649
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13651
  br i1 %16, label %18, label %17, !dbg !13652

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13653
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13653
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13653
  unreachable, !dbg !13653

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %19, metadata !12485, metadata !DIExpression()) #20, !dbg !13634
  call void @llvm.dbg.value(metadata i32 %19, metadata !12479, metadata !DIExpression()) #20, !dbg !13630
  call void @llvm.dbg.value(metadata i32 %19, metadata !13622, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13649
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13654
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #20, !dbg !13656, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13620, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()), !dbg !13629
  ret i32 %6, !dbg !13657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13658 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13663, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.value(metadata i64 undef, metadata !13665, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13662, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13664, metadata !DIExpression()), !dbg !13666
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13667
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13668
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !13669
  br i1 %6, label %7, label %8, !dbg !13672

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 846) #22, !dbg !13673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 846) #22, !dbg !13673
  unreachable, !dbg !13673

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13675
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13677, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13679
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13679
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13675
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13680
  br i1 %10, label %12, label %11, !dbg !13681

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13682
  unreachable, !dbg !13682

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13679
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13675
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13683
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13684
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #21, !dbg !13685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13160, metadata !DIExpression()) #20, !dbg !13686
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #22, !dbg !13688
  br i1 %14, label %16, label %15, !dbg !13689

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef %0) #22, !dbg !13690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13690
  unreachable, !dbg !13690

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !13691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13156, metadata !DIExpression()) #20, !dbg !13691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13160, metadata !DIExpression()) #20, !dbg !13693
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13695
  br i1 %17, label %19, label %18, !dbg !13696

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13697
  unreachable, !dbg !13697

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !13151, metadata !DIExpression()) #20, !dbg !13691
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #22, !dbg !13698
  ret i32 %21, !dbg !13699
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13700 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13704, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13705, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 0, metadata !13706, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13711
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13713, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13715
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13715
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13711
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13716
  br i1 %3, label %5, label %4, !dbg !13717

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13718
  unreachable, !dbg !13718

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13715
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13711
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13719
  call void @llvm.dbg.value(metadata i32 undef, metadata !13708, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13705, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()), !dbg !13710
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #21, !dbg !13720
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13705, metadata !DIExpression()), !dbg !13709
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13723
  br i1 %8, label %10, label %9, !dbg !13725

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !13726
  br label %10, !dbg !13728

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13729
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13731
  br i1 %11, label %13, label %12, !dbg !13732

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13733
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13733
  unreachable, !dbg !13733

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !13713
  call void @llvm.dbg.value(metadata i32 %14, metadata !12485, metadata !DIExpression()) #20, !dbg !13715
  call void @llvm.dbg.value(metadata i32 %14, metadata !12479, metadata !DIExpression()) #20, !dbg !13711
  call void @llvm.dbg.value(metadata i32 %14, metadata !13708, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13729
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #20, !dbg !13736, !srcloc !12527
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13705, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()), !dbg !13710
  ret %struct.k_thread* %7, !dbg !13737
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13738 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13740, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13741, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i32 0, metadata !13742, metadata !DIExpression()), !dbg !13746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13747
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13749, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13751
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13751
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13747
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13752
  br i1 %3, label %5, label %4, !dbg !13753

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13754
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13754
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13754
  unreachable, !dbg !13754

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13751
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13747
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13755
  call void @llvm.dbg.value(metadata i32 undef, metadata !13744, metadata !DIExpression()), !dbg !13746
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13741, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i32 undef, metadata !13742, metadata !DIExpression()), !dbg !13746
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #21, !dbg !13756
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13741, metadata !DIExpression()), !dbg !13745
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13759
  br i1 %8, label %11, label %9, !dbg !13761

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !13762
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !13764
  br label %11, !dbg !13765

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13766
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13768
  br i1 %12, label %14, label %13, !dbg !13769

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13770
  unreachable, !dbg !13770

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !13749
  call void @llvm.dbg.value(metadata i32 %15, metadata !12485, metadata !DIExpression()) #20, !dbg !13751
  call void @llvm.dbg.value(metadata i32 %15, metadata !12479, metadata !DIExpression()) #20, !dbg !13747
  call void @llvm.dbg.value(metadata i32 %15, metadata !13744, metadata !DIExpression()), !dbg !13746
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13766
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13771
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #20, !dbg !13773, !srcloc !12527
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13741, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i32 undef, metadata !13742, metadata !DIExpression()), !dbg !13746
  ret %struct.k_thread* %7, !dbg !13774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13777, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13585, metadata !DIExpression()) #20, !dbg !13779
  call void @llvm.dbg.value(metadata i32 0, metadata !13586, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13782
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13784, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13782
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13787
  br i1 %3, label %5, label %4, !dbg !13788

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13789
  unreachable, !dbg !13789

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13782
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13790
  call void @llvm.dbg.value(metadata i32 undef, metadata !13588, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #20, !dbg !13781
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #22, !dbg !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13792
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13794
  br i1 %6, label %8, label %7, !dbg !13795

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13796
  unreachable, !dbg !13796

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13784
  call void @llvm.dbg.value(metadata i32 %9, metadata !12485, metadata !DIExpression()) #20, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %9, metadata !12479, metadata !DIExpression()) #20, !dbg !13782
  call void @llvm.dbg.value(metadata i32 %9, metadata !13588, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13792
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13797
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13799, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13586, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #20, !dbg !13781
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !13800
  ret void, !dbg !13801
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13802 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13804, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i32 %1, metadata !13805, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i8 0, metadata !13806, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i32 0, metadata !13807, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13812
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13814, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13812
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13817
  br i1 %4, label %6, label %5, !dbg !13818

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13819
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13819
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13819
  unreachable, !dbg !13819

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13812
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13820
  call void @llvm.dbg.value(metadata i32 undef, metadata !13809, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.value(metadata i8 poison, metadata !13806, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !13807, metadata !DIExpression()), !dbg !13811
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #21, !dbg !13821
  call void @llvm.dbg.value(metadata i1 %9, metadata !13806, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13810
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !13824

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12665, metadata !DIExpression()) #20, !dbg !13825
  %14 = load i8, i8* %7, align 1, !dbg !13831
  %15 = and i8 %14, 127, !dbg !13831
  store i8 %15, i8* %7, align 1, !dbg !13831
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12673, metadata !DIExpression()) #20, !dbg !13832
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !13834
  store i8 %12, i8* %11, align 2, !dbg !13835
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12682, metadata !DIExpression()) #20, !dbg !13836
  %16 = load i8, i8* %7, align 1, !dbg !13838
  %17 = or i8 %16, -128, !dbg !13838
  store i8 %17, i8* %7, align 1, !dbg !13838
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12689, metadata !DIExpression()) #20, !dbg !13839
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12696, metadata !DIExpression()) #20, !dbg !13841
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12702, metadata !DIExpression()) #20, !dbg !13841
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !13843
  br i1 %18, label %19, label %20, !dbg !13844

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13845
  unreachable, !dbg !13845

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !13846
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12703, metadata !DIExpression()) #20, !dbg !13841
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13847
  br i1 %22, label %32, label %23, !dbg !13846

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12703, metadata !DIExpression()) #20, !dbg !13841
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !13848
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !12703, metadata !DIExpression()) #20, !dbg !13841
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #22, !dbg !13849
  %27 = icmp sgt i32 %26, 0, !dbg !13850
  br i1 %27, label %28, label %29, !dbg !13851

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #22, !dbg !13852
  br label %33, !dbg !13853

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #22, !dbg !13847
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12703, metadata !DIExpression()) #20, !dbg !13841
  %31 = icmp eq %struct._dnode* %30, null, !dbg !13847
  br i1 %31, label %32, label %23, !dbg !13846, !llvm.loop !13854

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #22, !dbg !13856
  br label %33, !dbg !13857

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !13858
  br label %35, !dbg !13859

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !13860
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13862
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13864
  br i1 %36, label %38, label %37, !dbg !13865

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13866
  unreachable, !dbg !13866

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !13814
  call void @llvm.dbg.value(metadata i32 %39, metadata !12485, metadata !DIExpression()) #20, !dbg !13816
  call void @llvm.dbg.value(metadata i32 %39, metadata !12479, metadata !DIExpression()) #20, !dbg !13812
  call void @llvm.dbg.value(metadata i32 %39, metadata !13809, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13867
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #20, !dbg !13869, !srcloc !12527
  call void @llvm.dbg.value(metadata i8 poison, metadata !13806, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !13807, metadata !DIExpression()), !dbg !13811
  ret i1 %9, !dbg !13870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13875, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i32 %1, metadata !13876, metadata !DIExpression()), !dbg !13878
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #21, !dbg !13879
  call void @llvm.dbg.value(metadata i1 %3, metadata !13877, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13878
  br i1 %3, label %4, label %12, !dbg !13880

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13882
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13883
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13883
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13883
  %9 = load i8, i8* %8, align 1, !dbg !13883
  %10 = icmp eq i8 %9, 0, !dbg !13884
  br i1 %10, label %11, label %12, !dbg !13885

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13886
  br label %12, !dbg !13888

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13889
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13890 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13892, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13896
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13898, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13896
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13901
  br i1 %2, label %4, label %3, !dbg !13902

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13903
  unreachable, !dbg !13903

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13896
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13894, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13892, metadata !DIExpression()), !dbg !13895
  tail call fastcc void @z_sched_lock() #21, !dbg !13905
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13908
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13910
  br i1 %5, label %7, label %6, !dbg !13911

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13912
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13912
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13912
  unreachable, !dbg !13912

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !13898
  call void @llvm.dbg.value(metadata i32 %8, metadata !12485, metadata !DIExpression()) #20, !dbg !13900
  call void @llvm.dbg.value(metadata i32 %8, metadata !12479, metadata !DIExpression()) #20, !dbg !13896
  call void @llvm.dbg.value(metadata i32 %8, metadata !13894, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13908
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13913
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #20, !dbg !13915, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13892, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13892, metadata !DIExpression()), !dbg !13895
  ret void, !dbg !13916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13917 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13918, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %1, metadata !13203, metadata !DIExpression()) #20, !dbg !13923
  %2 = icmp eq i32 %1, 0, !dbg !13924
  br i1 %2, label %4, label %3, !dbg !13925

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 253) #22, !dbg !13926
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13926
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 253) #22, !dbg !13926
  unreachable, !dbg !13926

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13928
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13928
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13928
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13928
  %9 = load i8, i8* %8, align 1, !dbg !13928
  %10 = icmp eq i8 %9, 1, !dbg !13928
  br i1 %10, label %11, label %12, !dbg !13931

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 254) #22, !dbg !13932
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 254) #22, !dbg !13932
  unreachable, !dbg !13932

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !13934
  store i8 %13, i8* %8, align 1, !dbg !13934
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !13935, !srcloc !13937
  ret void, !dbg !13938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13939 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13941, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !13945
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13947, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13949
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !13949
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13945
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13950
  br i1 %2, label %4, label %3, !dbg !13951

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13952
  unreachable, !dbg !13952

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !13949
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !13945
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13953
  call void @llvm.dbg.value(metadata i32 undef, metadata !13943, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 undef, metadata !13941, metadata !DIExpression()), !dbg !13944
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13954
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13954
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13954
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13954
  %9 = load i8, i8* %8, align 1, !dbg !13954
  %10 = icmp eq i8 %9, 0, !dbg !13954
  br i1 %10, label %11, label %12, !dbg !13959

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 999) #22, !dbg !13960
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 999) #22, !dbg !13960
  unreachable, !dbg !13960

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13962, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %13, metadata !13203, metadata !DIExpression()) #20, !dbg !13967
  %14 = icmp eq i32 %13, 0, !dbg !13968
  br i1 %14, label %16, label %15, !dbg !13969

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1000) #22, !dbg !13970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1000) #22, !dbg !13970
  unreachable, !dbg !13970

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13972
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !13973
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !13973
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !13973
  %21 = load i8, i8* %20, align 1, !dbg !13974
  %22 = add i8 %21, 1, !dbg !13974
  store i8 %22, i8* %20, align 1, !dbg !13974
  tail call fastcc void @update_cache(i32 noundef 0) #21, !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !13976
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13978
  br i1 %23, label %25, label %24, !dbg !13979

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13980
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13980
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13980
  unreachable, !dbg !13980

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !13947
  call void @llvm.dbg.value(metadata i32 %26, metadata !12485, metadata !DIExpression()) #20, !dbg !13949
  call void @llvm.dbg.value(metadata i32 %26, metadata !12479, metadata !DIExpression()) #20, !dbg !13945
  call void @llvm.dbg.value(metadata i32 %26, metadata !13943, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !13976
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !13981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #20, !dbg !13983, !srcloc !12527
  call void @llvm.dbg.value(metadata i32 1, metadata !13941, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 undef, metadata !13941, metadata !DIExpression()), !dbg !13944
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13984
  ret void, !dbg !13985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !13986 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13987
  ret %struct.k_thread* %1, !dbg !13988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13989 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13993, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13994, metadata !DIExpression()), !dbg !13998
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13999
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13995, metadata !DIExpression()), !dbg !13998
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14000
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13996, metadata !DIExpression()), !dbg !13998
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #21, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %5, metadata !13997, metadata !DIExpression()), !dbg !13998
  %6 = icmp sgt i32 %5, 0, !dbg !14002
  br i1 %6, label %17, label %7, !dbg !14004

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14005
  br i1 %8, label %17, label %9, !dbg !14007

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14008
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14008
  %12 = load i32, i32* %11, align 8, !dbg !14008
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14010
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14010
  %15 = load i32, i32* %14, align 8, !dbg !14010
  %16 = icmp ult i32 %12, %15, !dbg !14011
  br label %17, !dbg !14012

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14013
  ret i1 %18, !dbg !14014
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14015 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14032, metadata !DIExpression()), !dbg !14047
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14033, metadata !DIExpression()), !dbg !14047
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !14048
  br i1 %4, label %5, label %6, !dbg !14051

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1179) #22, !dbg !14052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1179) #22, !dbg !14052
  unreachable, !dbg !14052

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14054
  %8 = load i32, i32* %7, align 4, !dbg !14055
  %9 = add nsw i32 %8, 1, !dbg !14055
  store i32 %9, i32* %7, align 4, !dbg !14055
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14056
  store i32 %8, i32* %10, align 8, !dbg !14057
  %11 = load i32, i32* %7, align 4, !dbg !14058
  %12 = icmp eq i32 %11, 0, !dbg !14059
  br i1 %12, label %13, label %35, !dbg !14060

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14061
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #20, !dbg !14061
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14035, metadata !DIExpression()), !dbg !14061
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14061
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14061
  %17 = load i32, i32* %16, align 4, !dbg !14061
  %18 = shl i32 %17, 2, !dbg !14061
  %19 = alloca i8, i32 %18, align 8, !dbg !14061
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14061
  store i8* %19, i8** %20, align 4, !dbg !14061
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14061
  %22 = alloca i8, i32 %17, align 8, !dbg !14061
  store i8* %22, i8** %21, align 4, !dbg !14061
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14061
  store i32 -1, i32* %23, align 4, !dbg !14061
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #22, !dbg !14062
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !14044, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !14034, metadata !DIExpression()), !dbg !14047
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !14064
  br i1 %25, label %26, label %27, !dbg !14061

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #20, !dbg !14064
  br label %35, !dbg !14065

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !14034, metadata !DIExpression()), !dbg !14047
  %29 = load i32, i32* %7, align 4, !dbg !14066
  %30 = add nsw i32 %29, 1, !dbg !14066
  store i32 %30, i32* %7, align 4, !dbg !14066
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !14068
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !14068
  store i32 %29, i32* %32, align 8, !dbg !14069
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #22, !dbg !14062
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !14044, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !14034, metadata !DIExpression()), !dbg !14047
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !14064
  br i1 %34, label %26, label %27, !dbg !14061, !llvm.loop !14070

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14072
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14073
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #22, !dbg !14074
  ret void, !dbg !14075
}

; Function Attrs: optsize
declare !dbg !14076 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14081 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14084 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14086, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14087, metadata !DIExpression()), !dbg !14088
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !14089
  br i1 %3, label %4, label %5, !dbg !14092

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1200) #22, !dbg !14093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1200) #22, !dbg !14093
  unreachable, !dbg !14093

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14095
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14096
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #22, !dbg !14097
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14098
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !14098
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !14100
  br i1 %10, label %11, label %13, !dbg !14101

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14102
  store i32 0, i32* %12, align 4, !dbg !14104
  br label %13, !dbg !14105

13:                                               ; preds = %11, %5
  ret void, !dbg !14106
}

; Function Attrs: optsize
declare !dbg !14107 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14108 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14112, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14113, metadata !DIExpression()), !dbg !14115
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14116
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #21, !dbg !14117
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14114, metadata !DIExpression()), !dbg !14115
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14113, metadata !DIExpression()), !dbg !14115
  ret %struct.k_thread* %4, !dbg !14118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14119 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14123, metadata !DIExpression()), !dbg !14124
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #22, !dbg !14125
  ret %struct.rbnode* %2, !dbg !14126
}

; Function Attrs: optsize
declare !dbg !14127 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !14130 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14140, metadata !DIExpression()), !dbg !14144
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14145
  %3 = load i32, i32* %2, align 4, !dbg !14145
  %4 = icmp eq i32 %3, 0, !dbg !14147
  br i1 %4, label %10, label %5, !dbg !14148

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14141, metadata !DIExpression()), !dbg !14144
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14149, !range !14150
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14151
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14142, metadata !DIExpression()), !dbg !14144
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #21, !dbg !14152
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14143, metadata !DIExpression()), !dbg !14144
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14141, metadata !DIExpression()), !dbg !14144
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14144
  ret %struct.k_thread* %11, !dbg !14153
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14154 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14158, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i32 0, metadata !14159, metadata !DIExpression()), !dbg !14161
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14162
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14160, metadata !DIExpression()), !dbg !14161
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14163
  br i1 %3, label %8, label %4, !dbg !14164

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !14165
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !14167
  call void @llvm.dbg.value(metadata i32 1, metadata !14159, metadata !DIExpression()), !dbg !14161
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14162
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14160, metadata !DIExpression()), !dbg !14161
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14163
  br i1 %7, label %8, label %4, !dbg !14164, !llvm.loop !14168

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14161
  ret i32 %9, !dbg !14170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !14171 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14173, metadata !DIExpression()), !dbg !14174
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14175
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #21, !dbg !14176
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14177
  ret %struct.k_thread* %4, !dbg !14178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !14179 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14188, metadata !DIExpression()), !dbg !14189
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14190
  tail call fastcc void @sys_dlist_init.272(%struct._dnode* noundef nonnull %2) #21, !dbg !14191
  ret void, !dbg !14192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.272(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14193 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14197, metadata !DIExpression()), !dbg !14198
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14199
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14200
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14201
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14202
  ret void, !dbg !14203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14204 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #21, !dbg !14205
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #21, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14213, metadata !DIExpression()), !dbg !14214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14215
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14215
  %4 = load i8, i8* %3, align 2, !dbg !14215
  %5 = sext i8 %4 to i32, !dbg !14216
  ret i32 %5, !dbg !14217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14222, metadata !DIExpression()), !dbg !14225
  call void @llvm.dbg.value(metadata i32 %1, metadata !14223, metadata !DIExpression()), !dbg !14225
  %3 = add i32 %1, 16, !dbg !14226
  %4 = icmp ult i32 %3, 31, !dbg !14226
  br i1 %4, label %6, label %5, !dbg !14226

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1331) #22, !dbg !14230
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.276, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #22, !dbg !14230
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1331) #22, !dbg !14230
  unreachable, !dbg !14230

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14232, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %7, metadata !13203, metadata !DIExpression()) #20, !dbg !14237
  %8 = icmp eq i32 %7, 0, !dbg !14238
  br i1 %8, label %10, label %9, !dbg !14239

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1332) #22, !dbg !14240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1332) #22, !dbg !14240
  unreachable, !dbg !14240

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14224, metadata !DIExpression()), !dbg !14225
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #21, !dbg !14242
  ret void, !dbg !14243
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14244 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #21, !dbg !14245
  br i1 %1, label %8, label %2, !dbg !14246

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #22, !dbg !14247
  br i1 %3, label %8, label %4, !dbg !14248

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14249
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #21, !dbg !14250
  %7 = xor i1 %6, true, !dbg !14248
  br label %8, !dbg !14248

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !14252 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14253, !range !6335
  %2 = icmp eq i8 %1, 0, !dbg !14253
  ret i1 %2, !dbg !14254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14255 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14258, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %1, metadata !13203, metadata !DIExpression()) #20, !dbg !14263
  %2 = icmp eq i32 %1, 0, !dbg !14264
  br i1 %2, label %4, label %3, !dbg !14265

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1392) #22, !dbg !14266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1392) #22, !dbg !14266
  unreachable, !dbg !14266

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !14268
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14270, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14272
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !14272
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14268
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14273
  br i1 %6, label %8, label %7, !dbg !14274

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14275
  unreachable, !dbg !14275

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14272
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14268
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14276
  call void @llvm.dbg.value(metadata i32 undef, metadata !14257, metadata !DIExpression()), !dbg !14277
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14278
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12665, metadata !DIExpression()) #20, !dbg !14281
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !14283
  %11 = load i8, i8* %10, align 1, !dbg !14284
  %12 = and i8 %11, 127, !dbg !14284
  store i8 %12, i8* %10, align 1, !dbg !14284
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12673, metadata !DIExpression()) #20, !dbg !14285
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #22, !dbg !14287
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14288
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12682, metadata !DIExpression()) #20, !dbg !14289
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !14291
  %15 = load i8, i8* %14, align 1, !dbg !14292
  %16 = or i8 %15, -128, !dbg !14292
  store i8 %16, i8* %14, align 1, !dbg !14292
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12689, metadata !DIExpression()) #20, !dbg !14293
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12696, metadata !DIExpression()) #20, !dbg !14295
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12702, metadata !DIExpression()) #20, !dbg !14295
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #22, !dbg !14297
  br i1 %17, label %18, label %19, !dbg !14298

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !14299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !14299
  unreachable, !dbg !14299

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !14300
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12703, metadata !DIExpression()) #20, !dbg !14295
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14301
  br i1 %21, label %32, label %22, !dbg !14300

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !12703, metadata !DIExpression()) #20, !dbg !14295
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !14302
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12703, metadata !DIExpression()) #20, !dbg !14295
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #22, !dbg !14303
  %26 = icmp sgt i32 %25, 0, !dbg !14304
  br i1 %26, label %27, label %29, !dbg !14305

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !14306
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #22, !dbg !14307
  br label %34, !dbg !14308

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #22, !dbg !14301
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12703, metadata !DIExpression()) #20, !dbg !14295
  %31 = icmp eq %struct._dnode* %30, null, !dbg !14301
  br i1 %31, label %32, label %22, !dbg !14300, !llvm.loop !14309

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !14311
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #22, !dbg !14312
  br label %34, !dbg !14313

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !14314
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !14315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13156, metadata !DIExpression()) #20, !dbg !14315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13160, metadata !DIExpression()) #20, !dbg !14317
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14319
  br i1 %35, label %37, label %36, !dbg !14320

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14321
  unreachable, !dbg !14321

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !14270
  call void @llvm.dbg.value(metadata i32 %38, metadata !12485, metadata !DIExpression()) #20, !dbg !14272
  call void @llvm.dbg.value(metadata i32 %38, metadata !12479, metadata !DIExpression()) #20, !dbg !14268
  call void @llvm.dbg.value(metadata i32 %38, metadata !14257, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !14315
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #22, !dbg !14322
  ret void, !dbg !14323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14324 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14328, metadata !DIExpression()), !dbg !14331
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14332, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %3, metadata !13203, metadata !DIExpression()) #20, !dbg !14337
  %4 = icmp eq i32 %3, 0, !dbg !14338
  br i1 %4, label %6, label %5, !dbg !14339

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1463) #22, !dbg !14340
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14340
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1463) #22, !dbg !14340
  unreachable, !dbg !14340

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !14342
  br i1 %7, label %8, label %10, !dbg !14344

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14345
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #21, !dbg !14347
  br label %15, !dbg !14348

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !14329, metadata !DIExpression()), !dbg !14331
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #21, !dbg !14349
  %12 = sext i32 %11 to i64, !dbg !14349
  call void @llvm.dbg.value(metadata i64 %12, metadata !14329, metadata !DIExpression()), !dbg !14331
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #21, !dbg !14350
  %14 = trunc i64 %13 to i32, !dbg !14350
  call void @llvm.dbg.value(metadata i32 %14, metadata !14330, metadata !DIExpression()), !dbg !14331
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !14331
  ret i32 %16, !dbg !14351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14356, metadata !DIExpression()), !dbg !14357
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !14358, !srcloc !14360
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #21, !dbg !14361
  ret void, !dbg !14362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14363 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14367, metadata !DIExpression()), !dbg !14371
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14372, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %2, metadata !13203, metadata !DIExpression()) #20, !dbg !14377
  %3 = icmp eq i32 %2, 0, !dbg !14378
  br i1 %3, label %5, label %4, !dbg !14379

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1420) #22, !dbg !14380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1420) #22, !dbg !14380
  unreachable, !dbg !14380

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !14382
  br i1 %6, label %7, label %8, !dbg !14384

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #21, !dbg !14385
  br label %43, !dbg !14387

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !14369, metadata !DIExpression()), !dbg !14371
  %9 = icmp sgt i64 %0, -3, !dbg !14388
  br i1 %9, label %10, label %14, !dbg !14390

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #22, !dbg !14391
  %12 = trunc i64 %0 to i32, !dbg !14393
  %13 = add i32 %11, %12, !dbg !14393
  call void @llvm.dbg.value(metadata i32 %13, metadata !14368, metadata !DIExpression()), !dbg !14371
  br label %17, !dbg !14394

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !14395
  %16 = sub i32 -2, %15, !dbg !14395
  call void @llvm.dbg.value(metadata i32 %16, metadata !14368, metadata !DIExpression()), !dbg !14371
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !14397
  call void @llvm.dbg.value(metadata i32 %18, metadata !14368, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !14398
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14400, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14398
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14403
  br i1 %20, label %22, label %21, !dbg !14404

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14405
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14405
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14405
  unreachable, !dbg !14405

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14398
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14406
  call void @llvm.dbg.value(metadata i32 undef, metadata !14370, metadata !DIExpression()), !dbg !14371
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14407
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !14408
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #21, !dbg !14409
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14410
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14411
  tail call fastcc void @z_add_thread_timeout.259(%struct.k_thread* noundef %24, [1 x i64] %25) #21, !dbg !14411
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14412
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #21, !dbg !14413
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !14414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13156, metadata !DIExpression()) #20, !dbg !14414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13160, metadata !DIExpression()) #20, !dbg !14416
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14418
  br i1 %27, label %29, label %28, !dbg !14419

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14420
  unreachable, !dbg !14420

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !14400
  call void @llvm.dbg.value(metadata i32 %30, metadata !12485, metadata !DIExpression()) #20, !dbg !14402
  call void @llvm.dbg.value(metadata i32 %30, metadata !12479, metadata !DIExpression()) #20, !dbg !14398
  call void @llvm.dbg.value(metadata i32 %30, metadata !14370, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !14414
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #22, !dbg !14421
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14422
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #21, !dbg !14422
  br i1 %33, label %34, label %35, !dbg !14425

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1448) #22, !dbg !14426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1448) #22, !dbg !14426
  unreachable, !dbg !14426

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !14428
  %37 = tail call i32 @sys_clock_tick_get_32() #22, !dbg !14429
  %38 = zext i32 %37 to i64, !dbg !14429
  %39 = sub nsw i64 %36, %38, !dbg !14430
  call void @llvm.dbg.value(metadata i64 %39, metadata !14367, metadata !DIExpression()), !dbg !14371
  %40 = icmp sgt i64 %39, 0, !dbg !14431
  %41 = select i1 %40, i64 %39, i64 0, !dbg !14431
  %42 = trunc i64 %41 to i32, !dbg !14431
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !14371
  ret i32 %44, !dbg !14432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !14433 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14435, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i64 %0, metadata !12533, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i32 10000, metadata !12536, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i32 1000, metadata !12537, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i8 1, metadata !12538, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i1 false, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14437
  call void @llvm.dbg.value(metadata i1 false, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14437
  call void @llvm.dbg.value(metadata i8 0, metadata !12541, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i1 false, metadata !12542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14437
  call void @llvm.dbg.value(metadata i1 true, metadata !12543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14437
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i64 %0, metadata !12533, metadata !DIExpression()), !dbg !14437
  %2 = udiv i64 %0, 10, !dbg !14439
  ret i64 %2, !dbg !14443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14444 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !14445, !srcloc !14447
  tail call void @z_impl_k_yield() #21, !dbg !14448
  ret void, !dbg !14449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14454, metadata !DIExpression()), !dbg !14456
  %2 = sext i32 %0 to i64, !dbg !14457
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #21, !dbg !14458
  call void @llvm.dbg.value(metadata i64 %3, metadata !14455, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14456
  %4 = shl i64 %3, 32, !dbg !14459
  %5 = ashr exact i64 %4, 32, !dbg !14459
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #21, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %6, metadata !14455, metadata !DIExpression()), !dbg !14456
  %7 = sext i32 %6 to i64, !dbg !14461
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #21, !dbg !14462
  %9 = trunc i64 %8 to i32, !dbg !14462
  ret i32 %9, !dbg !14463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14464 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14466, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i64 %0, metadata !12533, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12536, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i32 10000, metadata !12537, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i8 1, metadata !12538, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i1 false, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14468
  call void @llvm.dbg.value(metadata i1 true, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14468
  call void @llvm.dbg.value(metadata i8 0, metadata !12541, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i1 false, metadata !12542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14468
  call void @llvm.dbg.value(metadata i1 true, metadata !12543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14468
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !14468
  %2 = add i64 %0, 99, !dbg !14470
  call void @llvm.dbg.value(metadata i64 %2, metadata !12533, metadata !DIExpression()), !dbg !14468
  %3 = udiv i64 %2, 100, !dbg !14471
  ret i64 %3, !dbg !14472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !14473 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14475, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i64 %0, metadata !12533, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.value(metadata i32 10000, metadata !12536, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12537, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.value(metadata i8 1, metadata !12538, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.value(metadata i1 false, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14477
  call void @llvm.dbg.value(metadata i1 false, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14477
  call void @llvm.dbg.value(metadata i8 0, metadata !12541, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.value(metadata i1 true, metadata !12542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14477
  call void @llvm.dbg.value(metadata i1 false, metadata !12543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14477
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.value(metadata i64 0, metadata !12544, metadata !DIExpression()), !dbg !14477
  %2 = mul i64 %0, 100, !dbg !14479
  ret i64 %2, !dbg !14481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14485
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #21, !dbg !14486
  br i1 %2, label %14, label %3, !dbg !14488

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !14489
  %5 = icmp slt i32 %4, 0, !dbg !14491
  br i1 %5, label %6, label %10, !dbg !14492

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14493
  %8 = load i8, i8* %7, align 1, !dbg !14493
  %9 = icmp eq i8 %8, 16, !dbg !14496
  br i1 %9, label %10, label %14, !dbg !14497

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #21, !dbg !14498
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #21, !dbg !14499
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14500, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %11, metadata !13203, metadata !DIExpression()) #20, !dbg !14504
  %12 = icmp eq i32 %11, 0, !dbg !14505
  br i1 %12, label %13, label %14, !dbg !14506

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !14507
  br label %14, !dbg !14509

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14513, metadata !DIExpression()), !dbg !14514
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14515
  %3 = load i8, i8* %2, align 1, !dbg !14515
  %4 = and i8 %3, 2, !dbg !14516
  %5 = icmp ne i8 %4, 0, !dbg !14517
  ret i1 %5, !dbg !14518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !14519 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14524
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14523, metadata !DIExpression()), !dbg !14525
  ret %struct.k_thread* %1, !dbg !14526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14527 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14530, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %1, metadata !13203, metadata !DIExpression()) #20, !dbg !14533
  %2 = icmp eq i32 %1, 0, !dbg !14534
  br i1 %2, label %3, label %8, !dbg !14535

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14536
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #21, !dbg !14537
  %6 = icmp ne i32 %5, 0, !dbg !14535
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14541, metadata !DIExpression()), !dbg !14543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !14544
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14546, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14548
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !14548
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14544
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14549
  br i1 %3, label %5, label %4, !dbg !14550

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14551
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14551
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14551
  unreachable, !dbg !14551

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14546
  call void @llvm.dbg.value(metadata i32 %6, metadata !12485, metadata !DIExpression()) #20, !dbg !14548
  call void @llvm.dbg.value(metadata i32 %6, metadata !12479, metadata !DIExpression()) #20, !dbg !14544
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %6, metadata !14542, metadata !DIExpression()), !dbg !14543
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14553
  %8 = load i8, i8* %7, align 4, !dbg !14553
  %9 = and i8 %8, 1, !dbg !14555
  %10 = icmp eq i8 %9, 0, !dbg !14556
  br i1 %10, label %15, label %11, !dbg !14557

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !14558
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !14558
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14561
  br i1 %12, label %14, label %13, !dbg !14562

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14563
  unreachable, !dbg !14563

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !12507, metadata !DIExpression()) #20, !dbg !14558
  call void @llvm.dbg.value(metadata i32 %6, metadata !12521, metadata !DIExpression()) #20, !dbg !14564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !14566, !srcloc !12527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1731) #22, !dbg !14567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.283, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #22, !dbg !14567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1731) #22, !dbg !14567
  unreachable, !dbg !14567

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14571
  %17 = load i8, i8* %16, align 1, !dbg !14571
  %18 = and i8 %17, 8, !dbg !14573
  %19 = icmp eq i8 %18, 0, !dbg !14574
  br i1 %19, label %24, label %20, !dbg !14575

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !14576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !14576
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14579
  br i1 %21, label %23, label %22, !dbg !14580

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14581
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14581
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14581
  unreachable, !dbg !14581

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !12507, metadata !DIExpression()) #20, !dbg !14576
  call void @llvm.dbg.value(metadata i32 %6, metadata !12521, metadata !DIExpression()) #20, !dbg !14582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !14584, !srcloc !12527
  br label %39, !dbg !14585

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #21, !dbg !14586
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14587
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !14589
  br i1 %26, label %27, label %35, !dbg !14590

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14591, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %28, metadata !13203, metadata !DIExpression()) #20, !dbg !14594
  %29 = icmp eq i32 %28, 0, !dbg !14595
  br i1 %29, label %30, label %35, !dbg !14596

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !14597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13156, metadata !DIExpression()) #20, !dbg !14597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13160, metadata !DIExpression()) #20, !dbg !14600
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14602
  br i1 %31, label %33, label %32, !dbg !14603

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14604
  unreachable, !dbg !14604

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !13151, metadata !DIExpression()) #20, !dbg !14597
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #22, !dbg !14605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1778) #22, !dbg !14606
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.284, i32 0, i32 0)) #22, !dbg !14606
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1778) #22, !dbg !14606
  unreachable, !dbg !14606

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !14610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !14610
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14612
  br i1 %36, label %38, label %37, !dbg !14613

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14614
  unreachable, !dbg !14614

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !12507, metadata !DIExpression()) #20, !dbg !14610
  call void @llvm.dbg.value(metadata i32 %6, metadata !12521, metadata !DIExpression()) #20, !dbg !14615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !14617, !srcloc !12527
  br label %39, !dbg !14618

39:                                               ; preds = %38, %23
  ret void, !dbg !14618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14621, metadata !DIExpression()), !dbg !14622
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14623
  %3 = load i8, i8* %2, align 1, !dbg !14623
  %4 = and i8 %3, 8, !dbg !14625
  %5 = icmp eq i8 %4, 0, !dbg !14626
  br i1 %5, label %6, label %20, !dbg !14627

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14628
  %8 = or i8 %7, 8, !dbg !14628
  store i8 %8, i8* %2, align 1, !dbg !14628
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #21, !dbg !14630
  br i1 %9, label %10, label %12, !dbg !14632

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12665, metadata !DIExpression()) #20, !dbg !14633
  %11 = and i8 %8, 95, !dbg !14636
  store i8 %11, i8* %2, align 1, !dbg !14636
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12673, metadata !DIExpression()) #20, !dbg !14637
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #22, !dbg !14639
  br label %12, !dbg !14640

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14641
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14641
  %15 = icmp eq %union.anon* %14, null, !dbg !14643
  br i1 %15, label %17, label %16, !dbg !14644

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #21, !dbg !14645
  br label %17, !dbg !14647

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #21, !dbg !14648
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14649
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #21, !dbg !14650
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !14651
  br label %20, !dbg !14652

20:                                               ; preds = %17, %1
  ret void, !dbg !14653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14654 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14658, metadata !DIExpression()), !dbg !14660
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14661
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14659, metadata !DIExpression()), !dbg !14660
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14662
  br i1 %3, label %10, label %4, !dbg !14663

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #21, !dbg !14664
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #21, !dbg !14666
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14667, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata i32 0, metadata !14672, metadata !DIExpression()), !dbg !14673
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14675
  store i32 0, i32* %7, align 4, !dbg !14676
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !14677
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14661
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14659, metadata !DIExpression()), !dbg !14660
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14662
  br i1 %9, label %10, label %4, !dbg !14663, !llvm.loop !14678

10:                                               ; preds = %4, %1
  ret void, !dbg !14680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14681 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14686, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !14690
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14692, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14690
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14695
  br i1 %4, label %6, label %5, !dbg !14696

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14697
  unreachable, !dbg !14697

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %7, metadata !12485, metadata !DIExpression()) #20, !dbg !14694
  call void @llvm.dbg.value(metadata i32 %7, metadata !12479, metadata !DIExpression()) #20, !dbg !14690
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %7, metadata !14687, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i32 0, metadata !14688, metadata !DIExpression()), !dbg !14689
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14699
  %9 = load i8, i8* %8, align 1, !dbg !14699
  %10 = and i8 %9, 8, !dbg !14701
  %11 = icmp eq i8 %10, 0, !dbg !14702
  br i1 %11, label %12, label %35, !dbg !14703

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !14686, metadata !DIExpression()), !dbg !14689
  %14 = icmp eq i64 %13, 0, !dbg !14704
  br i1 %14, label %35, label %15, !dbg !14706

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14707
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14709
  br i1 %17, label %35, label %18, !dbg !14710

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14711
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !14711
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !14712
  %22 = icmp eq %union.anon* %20, %21, !dbg !14713
  br i1 %22, label %35, label %23, !dbg !14714

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14715, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %24, metadata !13203, metadata !DIExpression()) #20, !dbg !14721
  %25 = icmp eq i32 %24, 0, !dbg !14722
  br i1 %25, label %27, label %26, !dbg !14723

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1809) #22, !dbg !14724
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.287, i32 0, i32 0)) #22, !dbg !14724
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1809) #22, !dbg !14724
  unreachable, !dbg !14724

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14726
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14727
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #21, !dbg !14728
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14729
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #21, !dbg !14730
  call void @llvm.dbg.value(metadata i32 undef, metadata !13151, metadata !DIExpression()) #20, !dbg !14731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13156, metadata !DIExpression()) #20, !dbg !14731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13160, metadata !DIExpression()) #20, !dbg !14733
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14735
  br i1 %31, label %33, label %32, !dbg !14736

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14737
  unreachable, !dbg !14737

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !13151, metadata !DIExpression()) #20, !dbg !14731
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #22, !dbg !14738
  call void @llvm.dbg.value(metadata i32 %34, metadata !14688, metadata !DIExpression()), !dbg !14689
  br label %40, !dbg !14739

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !14740
  call void @llvm.dbg.value(metadata i32 %36, metadata !14688, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !14741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !14741
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14743
  br i1 %37, label %39, label %38, !dbg !14744

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14745
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14745
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14745
  unreachable, !dbg !14745

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !12507, metadata !DIExpression()) #20, !dbg !14741
  call void @llvm.dbg.value(metadata i32 %7, metadata !12521, metadata !DIExpression()) #20, !dbg !14746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #20, !dbg !14748, !srcloc !12527
  br label %40, !dbg !14749

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !14689
  ret i32 %41, !dbg !14750
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14751 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14755, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 %1, metadata !14756, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i8* %2, metadata !14757, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i8 0, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 0, metadata !14760, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12473, metadata !DIExpression()) #20, !dbg !14765
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14767, !srcloc !12488
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()) #20, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14765
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14770
  br i1 %5, label %7, label %6, !dbg !14771

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14772
  unreachable, !dbg !14772

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12485, metadata !DIExpression()) #20, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !12479, metadata !DIExpression()) #20, !dbg !14765
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i8 poison, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14764
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #21, !dbg !14774
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14758, metadata !DIExpression()), !dbg !14763
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14777
  br i1 %10, label %15, label %11, !dbg !14779

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14780, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i32 %1, metadata !14786, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i8* %2, metadata !14787, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14667, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata i32 %1, metadata !14672, metadata !DIExpression()), !dbg !14791
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !14793
  store i32 %1, i32* %12, align 4, !dbg !14794
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14795
  store i8* %2, i8** %13, align 4, !dbg !14796
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #21, !dbg !14797
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #21, !dbg !14798
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #21, !dbg !14799
  call void @llvm.dbg.value(metadata i8 1, metadata !14759, metadata !DIExpression()), !dbg !14763
  br label %15, !dbg !14800

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !14801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12512, metadata !DIExpression()) #20, !dbg !14801
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14803
  br i1 %16, label %18, label %17, !dbg !14804

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14805
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14805
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14805
  unreachable, !dbg !14805

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !14763
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %20, metadata !12485, metadata !DIExpression()) #20, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %20, metadata !12479, metadata !DIExpression()) #20, !dbg !14765
  call void @llvm.dbg.value(metadata i32 %20, metadata !14762, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()) #20, !dbg !14801
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #20, !dbg !14806
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #20, !dbg !14808, !srcloc !12527
  call void @llvm.dbg.value(metadata i8 poison, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14764
  ret i1 %19, !dbg !14809
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14810 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14816, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i64 undef, metadata !14818, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14815, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14817, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i8** %4, metadata !14819, metadata !DIExpression()), !dbg !14821
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #21, !dbg !14822
  call void @llvm.dbg.value(metadata i32 %6, metadata !14820, metadata !DIExpression()), !dbg !14821
  %7 = icmp eq i8** %4, null, !dbg !14823
  br i1 %7, label %12, label %8, !dbg !14825

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14826
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14828
  %11 = load i8*, i8** %10, align 4, !dbg !14828
  store i8* %11, i8** %4, align 4, !dbg !14829
  br label %12, !dbg !14830

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14832 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #22, !dbg !14834
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #22, !dbg !14835
  ret void, !dbg !14836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14837 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14847, metadata !DIExpression()), !dbg !14864
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14845, metadata !DIExpression()), !dbg !14864
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14846, metadata !DIExpression()), !dbg !14864
  %5 = icmp eq i64 %4, -1, !dbg !14865
  br i1 %5, label %63, label %6, !dbg !14867

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14868
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* noundef %7) #21, !dbg !14868
  br i1 %8, label %9, label %10, !dbg !14871

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.295, i32 0, i32 0), i32 noundef 99) #22, !dbg !14872
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.296, i32 0, i32 0)) #22, !dbg !14872
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.295, i32 0, i32 0), i32 noundef 99) #22, !dbg !14872
  unreachable, !dbg !14872

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14874
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !14875
  call void @llvm.dbg.value(metadata i32 0, metadata !14848, metadata !DIExpression()), !dbg !14876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !14884
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14886, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !14884
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14894
  br i1 %13, label %15, label %14, !dbg !14897

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !14898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !14898
  unreachable, !dbg !14898

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !14886
  call void @llvm.dbg.value(metadata i32 %16, metadata !14889, metadata !DIExpression()) #20, !dbg !14893
  call void @llvm.dbg.value(metadata i32 %16, metadata !14883, metadata !DIExpression()) #20, !dbg !14884
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14900
  call void @llvm.dbg.value(metadata i32 %16, metadata !14854, metadata !DIExpression()), !dbg !14876
  call void @llvm.dbg.value(metadata i32 undef, metadata !14848, metadata !DIExpression()), !dbg !14876
  %17 = icmp slt i64 %4, -1, !dbg !14901
  br i1 %17, label %18, label %24, !dbg !14902

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !14903
  %20 = add i64 %4, %19, !dbg !14904
  %21 = sub i64 -2, %20, !dbg !14904
  call void @llvm.dbg.value(metadata i64 %21, metadata !14858, metadata !DIExpression()), !dbg !14905
  %22 = icmp sgt i64 %21, 1, !dbg !14906
  %23 = select i1 %22, i64 %21, i64 1, !dbg !14906
  br label %29, !dbg !14907

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !14908
  %26 = tail call fastcc i32 @elapsed.300() #21, !dbg !14910
  %27 = sext i32 %26 to i64, !dbg !14910
  %28 = add nsw i64 %25, %27, !dbg !14911
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !14912
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14913
  store i64 %30, i64* %31, align 8, !dbg !14914
  %32 = tail call fastcc %struct._timeout* @first() #21, !dbg !14915
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !14855, metadata !DIExpression()), !dbg !14917
  %33 = icmp eq %struct._timeout* %32, null, !dbg !14918
  br i1 %33, label %48, label %34, !dbg !14918

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !14919
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !14855, metadata !DIExpression()), !dbg !14917
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14923
  %38 = load i64, i64* %37, align 8, !dbg !14923
  %39 = icmp slt i64 %35, %38, !dbg !14924
  br i1 %39, label %40, label %44, !dbg !14925

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14923
  %42 = sub nsw i64 %38, %35, !dbg !14926
  store i64 %42, i64* %41, align 8, !dbg !14926
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !14928
  tail call fastcc void @sys_dlist_insert.301(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #21, !dbg !14929
  br label %49, !dbg !14930

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !14931
  store i64 %45, i64* %31, align 8, !dbg !14931
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #21, !dbg !14932
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !14855, metadata !DIExpression()), !dbg !14917
  %47 = icmp eq %struct._timeout* %46, null, !dbg !14918
  br i1 %47, label %48, label %34, !dbg !14918, !llvm.loop !14933

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.302(%struct._dnode* noundef nonnull %7) #21, !dbg !14935
  br label %49, !dbg !14938

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #21, !dbg !14939
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !14940
  br i1 %51, label %52, label %59, !dbg !14941

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #21, !dbg !14942
  call void @llvm.dbg.value(metadata i32 %53, metadata !14861, metadata !DIExpression()), !dbg !14943
  %54 = icmp ne i32 %53, 0, !dbg !14944
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !14946
  br i1 %57, label %59, label %58, !dbg !14946

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #22, !dbg !14947
  br label %59, !dbg !14949

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !14956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !14956
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14958
  br i1 %60, label %62, label %61, !dbg !14961

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !14962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !14962
  unreachable, !dbg !14962

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !14950, metadata !DIExpression()) #20, !dbg !14956
  call void @llvm.dbg.value(metadata i32 %16, metadata !14964, metadata !DIExpression()) #20, !dbg !14967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #20, !dbg !14969, !srcloc !14970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14848, metadata !DIExpression()), !dbg !14876
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !14971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14972 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14978, metadata !DIExpression()), !dbg !14979
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14980
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14980
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14981
  ret i1 %4, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.300() unnamed_addr #1 !dbg !14983 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14986
  %2 = icmp eq i32 %1, 0, !dbg !14987
  br i1 %2, label %3, label %5, !dbg !14986

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #22, !dbg !14988
  br label %5, !dbg !14986

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14986
  ret i32 %6, !dbg !14989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !14990 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.307() #21, !dbg !14996
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14994, metadata !DIExpression()), !dbg !14997
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14998
  ret %struct._timeout* %2, !dbg !14999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.301(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15000 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15004, metadata !DIExpression()), !dbg !15008
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15005, metadata !DIExpression()), !dbg !15008
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15009
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15009
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15006, metadata !DIExpression()), !dbg !15008
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15010
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15011
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15012
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15013
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15014
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15015
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15016
  ret void, !dbg !15017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !15018 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15022, metadata !DIExpression()), !dbg !15024
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15025
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.305(%struct._dnode* noundef %2) #21, !dbg !15026
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15023, metadata !DIExpression()), !dbg !15024
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15027
  ret %struct._timeout* %4, !dbg !15028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.302(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15029 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15034, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15035, metadata !DIExpression()), !dbg !15037
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15038
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15036, metadata !DIExpression()), !dbg !15037
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15039
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15040
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15041
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15042
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15043
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15044
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15045
  ret void, !dbg !15046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15047 {
  %1 = tail call fastcc %struct._timeout* @first() #21, !dbg !15052
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15049, metadata !DIExpression()), !dbg !15053
  %2 = tail call fastcc i32 @elapsed.300() #21, !dbg !15054
  call void @llvm.dbg.value(metadata i32 %2, metadata !15050, metadata !DIExpression()), !dbg !15053
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15055
  br i1 %3, label %14, label %4, !dbg !15057

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15058
  %6 = load i64, i64* %5, align 8, !dbg !15058
  %7 = sext i32 %2 to i64, !dbg !15059
  %8 = sub nsw i64 %6, %7, !dbg !15060
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15061
  br i1 %9, label %14, label %10, !dbg !15062

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15063
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15063
  %13 = trunc i64 %12 to i32, !dbg !15063
  call void @llvm.dbg.value(metadata i32 %13, metadata !15051, metadata !DIExpression()), !dbg !15053
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15065
  call void @llvm.dbg.value(metadata i32 %15, metadata !15051, metadata !DIExpression()), !dbg !15053
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15066
  %17 = icmp ne i32 %16, 0, !dbg !15068
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15069
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15069
  call void @llvm.dbg.value(metadata i32 %20, metadata !15051, metadata !DIExpression()), !dbg !15053
  ret i32 %20, !dbg !15070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.305(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15071 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15076, metadata !DIExpression()), !dbg !15077
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15078
  br i1 %2, label %5, label %3, !dbg !15079

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.306(%struct._dnode* noundef nonnull %0) #21, !dbg !15080
  br label %5, !dbg !15079

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15079
  ret %struct._dnode* %6, !dbg !15081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.306(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15082 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15084, metadata !DIExpression()), !dbg !15086
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15085, metadata !DIExpression()), !dbg !15086
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15087
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15088
  br i1 %3, label %7, label %4, !dbg !15089

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15090
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15090
  br label %7, !dbg !15089

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15089
  ret %struct._dnode* %8, !dbg !15091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.307() unnamed_addr #8 !dbg !15092 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15096, metadata !DIExpression()), !dbg !15097
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.308() #21, !dbg !15098
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15098
  ret %struct._dnode* %3, !dbg !15099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.308() unnamed_addr #8 !dbg !15100 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15104, metadata !DIExpression()), !dbg !15105
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15106
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15107
  ret i1 %2, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15113, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 -22, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 0, metadata !15115, metadata !DIExpression()), !dbg !15119
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15120
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15122, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15120
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15125
  br i1 %3, label %5, label %4, !dbg !15126

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15127
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15127
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15127
  unreachable, !dbg !15127

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15120
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15128
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()), !dbg !15119
  call void @llvm.dbg.value(metadata i32 -22, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !15115, metadata !DIExpression()), !dbg !15119
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15114, metadata !DIExpression()), !dbg !15118
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* noundef %6) #21, !dbg !15129
  br i1 %7, label %8, label %9, !dbg !15133

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #21, !dbg !15134
  call void @llvm.dbg.value(metadata i32 0, metadata !15114, metadata !DIExpression()), !dbg !15118
  br label %9, !dbg !15136

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !15118
  call void @llvm.dbg.value(metadata i32 %10, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15137
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15139
  br i1 %11, label %13, label %12, !dbg !15140

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15141
  unreachable, !dbg !15141

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15122
  call void @llvm.dbg.value(metadata i32 %14, metadata !14889, metadata !DIExpression()) #20, !dbg !15124
  call void @llvm.dbg.value(metadata i32 %14, metadata !14883, metadata !DIExpression()) #20, !dbg !15120
  call void @llvm.dbg.value(metadata i32 %14, metadata !15117, metadata !DIExpression()), !dbg !15119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()) #20, !dbg !15142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #20, !dbg !15144, !srcloc !14970
  call void @llvm.dbg.value(metadata i32 %10, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !15115, metadata !DIExpression()), !dbg !15119
  ret i32 %10, !dbg !15145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !15146 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15148, metadata !DIExpression()), !dbg !15149
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #21, !dbg !15150
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15152
  br i1 %3, label %10, label %4, !dbg !15153

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15154
  %6 = load i64, i64* %5, align 8, !dbg !15154
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15156
  %8 = load i64, i64* %7, align 8, !dbg !15157
  %9 = add nsw i64 %8, %6, !dbg !15157
  store i64 %9, i64* %7, align 8, !dbg !15157
  br label %10, !dbg !15158

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15159
  tail call fastcc void @sys_dlist_remove.311(%struct._dnode* noundef %11) #21, !dbg !15160
  ret void, !dbg !15161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.311(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15162 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15166, metadata !DIExpression()), !dbg !15169
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15170
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15170
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15167, metadata !DIExpression()), !dbg !15169
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15171
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15171
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15168, metadata !DIExpression()), !dbg !15169
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15172
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15173
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15174
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15175
  tail call fastcc void @sys_dnode_init.312(%struct._dnode* noundef %0) #21, !dbg !15176
  ret void, !dbg !15177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.312(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15178 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15180, metadata !DIExpression()), !dbg !15181
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15182
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15183
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15184
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15185
  ret void, !dbg !15186
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15187 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15193, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i64 0, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 0, metadata !15195, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15200
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15202, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15200
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15205
  br i1 %3, label %5, label %4, !dbg !15206

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15207
  unreachable, !dbg !15207

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15200
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15208
  call void @llvm.dbg.value(metadata i32 undef, metadata !15197, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.value(metadata i64 0, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15195, metadata !DIExpression()), !dbg !15199
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #21, !dbg !15209
  call void @llvm.dbg.value(metadata i64 %6, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15212
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15214
  br i1 %7, label %9, label %8, !dbg !15215

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15216
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15216
  unreachable, !dbg !15216

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %10, metadata !14889, metadata !DIExpression()) #20, !dbg !15204
  call void @llvm.dbg.value(metadata i32 %10, metadata !14883, metadata !DIExpression()) #20, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %10, metadata !15197, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15212
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()) #20, !dbg !15217
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #20, !dbg !15219, !srcloc !14970
  call void @llvm.dbg.value(metadata i64 %6, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15195, metadata !DIExpression()), !dbg !15199
  ret i64 %6, !dbg !15220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15221 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15223, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i64 0, metadata !15224, metadata !DIExpression()), !dbg !15227
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.313(%struct._timeout* noundef %0) #21, !dbg !15228
  br i1 %2, label %21, label %3, !dbg !15230

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #21, !dbg !15231
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15225, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata i64 0, metadata !15224, metadata !DIExpression()), !dbg !15227
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15233
  br i1 %5, label %16, label %6, !dbg !15235

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15225, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata i64 %8, metadata !15224, metadata !DIExpression()), !dbg !15227
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15236
  %10 = load i64, i64* %9, align 8, !dbg !15236
  %11 = add nsw i64 %10, %8, !dbg !15238
  call void @llvm.dbg.value(metadata i64 %11, metadata !15224, metadata !DIExpression()), !dbg !15227
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15239
  br i1 %12, label %16, label %13, !dbg !15241

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #21, !dbg !15242
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15225, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata i64 %11, metadata !15224, metadata !DIExpression()), !dbg !15227
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15233
  br i1 %15, label %16, label %6, !dbg !15235, !llvm.loop !15243

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15227
  call void @llvm.dbg.value(metadata i64 %17, metadata !15224, metadata !DIExpression()), !dbg !15227
  %18 = tail call fastcc i32 @elapsed.300() #21, !dbg !15245
  %19 = sext i32 %18 to i64, !dbg !15245
  %20 = sub nsw i64 %17, %19, !dbg !15246
  br label %21, !dbg !15247

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15227
  ret i64 %22, !dbg !15248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.313(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15249 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15253, metadata !DIExpression()), !dbg !15254
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15255
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* noundef %2) #21, !dbg !15256
  %4 = xor i1 %3, true, !dbg !15257
  ret i1 %4, !dbg !15258
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15259 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15261, metadata !DIExpression()), !dbg !15266
  call void @llvm.dbg.value(metadata i64 0, metadata !15262, metadata !DIExpression()), !dbg !15266
  call void @llvm.dbg.value(metadata i32 0, metadata !15263, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15268
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15270, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15268
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15273
  br i1 %3, label %5, label %4, !dbg !15274

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15275
  unreachable, !dbg !15275

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15268
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15265, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata i64 0, metadata !15262, metadata !DIExpression()), !dbg !15266
  call void @llvm.dbg.value(metadata i32 undef, metadata !15263, metadata !DIExpression()), !dbg !15267
  %6 = load i64, i64* @curr_tick, align 8, !dbg !15277
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #21, !dbg !15280
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !15262, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15266
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15281
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15283
  br i1 %8, label %10, label %9, !dbg !15284

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15285
  unreachable, !dbg !15285

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %11, metadata !14889, metadata !DIExpression()) #20, !dbg !15272
  call void @llvm.dbg.value(metadata i32 %11, metadata !14883, metadata !DIExpression()) #20, !dbg !15268
  call void @llvm.dbg.value(metadata i32 %11, metadata !15265, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !15262, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15266
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()) #20, !dbg !15286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #20, !dbg !15288, !srcloc !14970
  call void @llvm.dbg.value(metadata i32 undef, metadata !15263, metadata !DIExpression()), !dbg !15267
  %12 = add i64 %7, %6, !dbg !15289
  ret i64 %12, !dbg !15290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15291 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15293, metadata !DIExpression()), !dbg !15297
  call void @llvm.dbg.value(metadata i32 0, metadata !15294, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15299
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15301, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15299
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15304
  br i1 %2, label %4, label %3, !dbg !15305

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15306
  unreachable, !dbg !15306

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15299
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15296, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.value(metadata i32 -1, metadata !15293, metadata !DIExpression()), !dbg !15297
  call void @llvm.dbg.value(metadata i32 undef, metadata !15294, metadata !DIExpression()), !dbg !15298
  %5 = tail call fastcc i32 @next_timeout() #21, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %5, metadata !15293, metadata !DIExpression()), !dbg !15297
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15311
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15313
  br i1 %6, label %8, label %7, !dbg !15314

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15315
  unreachable, !dbg !15315

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !15301
  call void @llvm.dbg.value(metadata i32 %9, metadata !14889, metadata !DIExpression()) #20, !dbg !15303
  call void @llvm.dbg.value(metadata i32 %9, metadata !14883, metadata !DIExpression()) #20, !dbg !15299
  call void @llvm.dbg.value(metadata i32 %9, metadata !15296, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()) #20, !dbg !15316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !15318, !srcloc !14970
  call void @llvm.dbg.value(metadata i32 %5, metadata !15293, metadata !DIExpression()), !dbg !15297
  call void @llvm.dbg.value(metadata i32 undef, metadata !15294, metadata !DIExpression()), !dbg !15298
  ret i32 %5, !dbg !15319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15322, metadata !DIExpression()), !dbg !15332
  call void @llvm.dbg.value(metadata i1 %1, metadata !15323, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15332
  call void @llvm.dbg.value(metadata i32 0, metadata !15324, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15334
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15336, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15338
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15338
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15334
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15339
  br i1 %4, label %6, label %5, !dbg !15340

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15341
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15341
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15341
  unreachable, !dbg !15341

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15338
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15334
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15326, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15324, metadata !DIExpression()), !dbg !15333
  %7 = tail call fastcc i32 @next_timeout() #21, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %7, metadata !15327, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i1 undef, metadata !15330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15344
  %8 = icmp slt i32 %7, 2, !dbg !15345
  call void @llvm.dbg.value(metadata i1 %8, metadata !15331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15344
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !15346
  call void @llvm.dbg.value(metadata i1 %9, metadata !15330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15344
  br i1 %10, label %14, label %11, !dbg !15346

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !15348
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !15348
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #22, !dbg !15350
  br label %14, !dbg !15351

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15352
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15354
  br i1 %15, label %17, label %16, !dbg !15355

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15356
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15356
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15356
  unreachable, !dbg !15356

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !15336
  call void @llvm.dbg.value(metadata i32 %18, metadata !14889, metadata !DIExpression()) #20, !dbg !15338
  call void @llvm.dbg.value(metadata i32 %18, metadata !14883, metadata !DIExpression()) #20, !dbg !15334
  call void @llvm.dbg.value(metadata i32 %18, metadata !15326, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15352
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()) #20, !dbg !15357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #20, !dbg !15359, !srcloc !14970
  call void @llvm.dbg.value(metadata i32 1, metadata !15324, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15324, metadata !DIExpression()), !dbg !15333
  ret void, !dbg !15360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15365, metadata !DIExpression()), !dbg !15370
  tail call void @z_time_slice(i32 noundef %0) #22, !dbg !15371
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15372
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15374, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15372
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15377
  br i1 %3, label %5, label %4, !dbg !15378

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15379
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15379
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15379
  unreachable, !dbg !15379

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15372
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15380
  call void @llvm.dbg.value(metadata i32 undef, metadata !15366, metadata !DIExpression()), !dbg !15370
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15366, metadata !DIExpression()), !dbg !15370
  %6 = tail call fastcc %struct._timeout* @first() #21, !dbg !15381
  %7 = icmp eq %struct._timeout* %6, null, !dbg !15382
  br i1 %7, label %37, label %8, !dbg !15383

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !15370
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !15384
  %14 = load i64, i64* %13, align 8, !dbg !15384
  %15 = sext i32 %11 to i64, !dbg !15385
  %16 = icmp sgt i64 %14, %15, !dbg !15386
  br i1 %16, label %35, label %17, !dbg !15387

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !15367, metadata !DIExpression()), !dbg !15388
  %18 = trunc i64 %14 to i32, !dbg !15389
  call void @llvm.dbg.value(metadata i32 %18, metadata !15369, metadata !DIExpression()), !dbg !15388
  %19 = sext i32 %18 to i64, !dbg !15390
  %20 = load i64, i64* @curr_tick, align 8, !dbg !15391
  %21 = add i64 %20, %19, !dbg !15391
  store i64 %21, i64* @curr_tick, align 8, !dbg !15391
  store i64 0, i64* %13, align 8, !dbg !15392
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #21, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15394
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15396
  br i1 %22, label %24, label %23, !dbg !15397

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15398
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15398
  unreachable, !dbg !15398

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !14950, metadata !DIExpression()) #20, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %12, metadata !14964, metadata !DIExpression()) #20, !dbg !15399
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #20, !dbg !15401, !srcloc !14970
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !15402
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !15402
  tail call void %26(%struct._timeout* noundef nonnull %9) #22, !dbg !15403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15404
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15406, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15404
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15409
  br i1 %28, label %30, label %29, !dbg !15410

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15411
  unreachable, !dbg !15411

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15404
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15412
  call void @llvm.dbg.value(metadata i32 undef, metadata !15366, metadata !DIExpression()), !dbg !15370
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !15413
  %32 = sub nsw i32 %31, %18, !dbg !15413
  store i32 %32, i32* @announce_remaining, align 4, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15366, metadata !DIExpression()), !dbg !15370
  %33 = tail call fastcc %struct._timeout* @first() #21, !dbg !15381
  %34 = icmp eq %struct._timeout* %33, null, !dbg !15382
  br i1 %34, label %37, label %8, !dbg !15383, !llvm.loop !15414

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !15416
  store i64 %36, i64* %13, align 8, !dbg !15416
  br label %41, !dbg !15419

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !15370
  %40 = sext i32 %39 to i64, !dbg !15420
  br label %41, !dbg !15420

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !15420
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !15421
  %45 = add i64 %44, %42, !dbg !15421
  store i64 %45, i64* @curr_tick, align 8, !dbg !15421
  store i32 0, i32* @announce_remaining, align 4, !dbg !15422
  %46 = tail call fastcc i32 @next_timeout() #21, !dbg !15423
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #22, !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15425
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15427
  br i1 %47, label %49, label %48, !dbg !15428

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15429
  unreachable, !dbg !15429

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %50, metadata !14950, metadata !DIExpression()) #20, !dbg !15425
  call void @llvm.dbg.value(metadata i32 %50, metadata !14964, metadata !DIExpression()) #20, !dbg !15430
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #20, !dbg !15432, !srcloc !14970
  ret void, !dbg !15433
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15434 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15438, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata i32 0, metadata !15439, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14877, metadata !DIExpression()) #20, !dbg !15444
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15446, !srcloc !14892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()) #20, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15444
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15449
  br i1 %2, label %4, label %3, !dbg !15450

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15451
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15451
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15451
  unreachable, !dbg !15451

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14889, metadata !DIExpression()) #20, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #20, !dbg !15444
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata i64 0, metadata !15438, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()), !dbg !15443
  %5 = load i64, i64* @curr_tick, align 8, !dbg !15453
  %6 = tail call fastcc i32 @elapsed.300() #21, !dbg !15456
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15438, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15442
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14955, metadata !DIExpression()) #20, !dbg !15457
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15459
  br i1 %7, label %9, label %8, !dbg !15460

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15461
  unreachable, !dbg !15461

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %10, metadata !14889, metadata !DIExpression()) #20, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %10, metadata !14883, metadata !DIExpression()) #20, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %10, metadata !15441, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15438, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15442
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !15438, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15442
  call void @llvm.dbg.value(metadata i32 undef, metadata !14950, metadata !DIExpression()) #20, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()) #20, !dbg !15462
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #20, !dbg !15464, !srcloc !14970
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()), !dbg !15443
  %11 = sext i32 %6 to i64, !dbg !15456
  %12 = add i64 %5, %11, !dbg !15465
  ret i64 %12, !dbg !15466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15467 {
  %1 = tail call i64 @sys_clock_tick_get() #21, !dbg !15468
  %2 = trunc i64 %1 to i32, !dbg !15469
  ret i32 %2, !dbg !15470
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15471 {
  %1 = tail call i64 @sys_clock_tick_get() #21, !dbg !15472
  ret i64 %1, !dbg !15473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15476, metadata !DIExpression()), !dbg !15483
  %2 = icmp eq i32 %0, 0, !dbg !15484
  br i1 %2, label %10, label %3, !dbg !15486

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.320() #21, !dbg !15487
  call void @llvm.dbg.value(metadata i32 %4, metadata !15477, metadata !DIExpression()), !dbg !15483
  %5 = mul i32 %0, 200, !dbg !15488
  call void @llvm.dbg.value(metadata i32 %5, metadata !15478, metadata !DIExpression()), !dbg !15483
  br label %6, !dbg !15489

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.320() #21, !dbg !15490
  call void @llvm.dbg.value(metadata i32 %7, metadata !15479, metadata !DIExpression()), !dbg !15491
  %8 = sub i32 %7, %4, !dbg !15492
  %9 = icmp ult i32 %8, %5, !dbg !15494
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.320() unnamed_addr #1 !dbg !15496 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.321() #21, !dbg !15497
  ret i32 %1, !dbg !15498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.321() unnamed_addr #1 !dbg !15499 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #22, !dbg !15500
  ret i32 %1, !dbg !15501
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15502 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15506, metadata !DIExpression()), !dbg !15508
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15509

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #21, !dbg !15510
  br label %14, !dbg !15514

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15507, metadata !DIExpression()), !dbg !15508
  %6 = icmp slt i64 %2, -1, !dbg !15515
  br i1 %6, label %7, label %9, !dbg !15518

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15519
  br label %14, !dbg !15520

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #21, !dbg !15522
  %11 = icmp ugt i64 %2, 1, !dbg !15523
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15523
  %13 = add nsw i64 %10, %12, !dbg !15524
  br label %14, !dbg !15525

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15526
  ret i64 %15, !dbg !15527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15528 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.324, i32 0, i32 0)) #22, !dbg !15530
  ret void, !dbg !15531
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nounwind }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nobuiltin nounwind optsize "no-builtins" }
attributes #23 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #24 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1160, !2, !2282, !27, !177, !209, !2284, !2286, !2320, !2322, !218, !2324, !2327, !2338, !2385, !2387, !2415, !2443, !2486, !2558, !2603, !2631, !647, !657, !834, !869, !974, !1171, !1452, !2636, !1714, !2638, !2641, !2718, !2732, !2744, !2869, !1744, !2872, !1750, !2110, !2890, !2131, !2892, !2243, !2895}
!llvm.ident = !{!2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897}
!llvm.module.flags = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !218, file: !632, line: 258, type: !633, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !220, retainedTypes: !503, globals: !631, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!220 = !{!221, !253, !263, !312, !318, !439, !474}
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !222, line: 54, baseType: !32, size: 32, elements: !223)
!222 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{!224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252}
!224 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!225 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!226 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!227 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!228 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!229 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!230 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!231 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!232 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!233 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!234 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!235 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!236 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!237 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!238 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!239 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!240 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!241 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!242 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!243 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!244 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!245 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!246 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!247 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!248 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!249 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!250 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!251 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!252 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!253 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !222, line: 224, baseType: !32, size: 32, elements: !254)
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262}
!255 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!256 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!257 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!258 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!259 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!260 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!261 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!262 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !222, line: 275, baseType: !32, size: 32, elements: !264)
!264 = !{!265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311}
!265 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!266 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!267 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!268 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!269 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!270 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!271 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!272 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!273 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!274 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!275 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!276 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!277 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!278 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!279 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!280 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!281 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!282 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!283 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!284 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!285 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!286 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!287 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!288 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!289 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!290 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!291 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!292 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!293 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!294 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!295 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!296 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!297 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!298 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!299 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!300 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!301 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!302 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!303 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!304 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!305 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!306 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!307 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!308 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!309 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!310 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!311 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!312 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !222, line: 327, baseType: !32, size: 32, elements: !313)
!313 = !{!314, !315, !316, !317}
!314 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!315 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!316 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!317 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !319, line: 76, baseType: !32, size: 32, elements: !320)
!319 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = !{!321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438}
!321 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!322 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!323 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!324 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!325 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!326 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!327 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!328 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!329 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!330 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!331 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!332 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!333 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!334 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!335 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!336 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!337 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!338 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!339 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!340 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!341 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!342 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!343 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!344 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!345 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!346 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!347 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!348 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!349 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!350 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!351 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!352 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!353 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!354 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!355 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!356 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!357 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!358 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!359 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!360 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!361 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!362 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!363 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!364 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!365 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!366 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!367 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!368 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!369 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!370 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!371 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!372 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!373 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!374 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!375 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!376 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!377 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!378 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!379 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!380 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!381 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!382 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!383 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!384 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!385 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!386 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!387 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!388 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!389 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!390 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!391 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!392 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!393 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!394 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!395 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!396 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!397 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!398 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!399 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!400 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!401 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!402 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!403 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!404 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!405 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!406 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!407 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!408 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!409 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!410 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!411 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!412 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!413 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!414 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!415 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!416 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!417 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!418 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!419 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!420 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!421 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!422 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!423 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!424 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!425 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!426 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!427 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!428 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!429 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!430 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!431 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!432 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!433 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!434 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!435 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!436 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!437 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!438 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!439 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !222, line: 237, baseType: !32, size: 32, elements: !440)
!440 = !{!441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473}
!441 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!442 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!443 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!444 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!445 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!446 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!447 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!448 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!449 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!450 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!451 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!452 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!453 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!454 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!455 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!456 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!457 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!458 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!459 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!460 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!461 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!462 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!463 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!464 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!465 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!466 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!467 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!468 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!469 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!470 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!471 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!472 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!473 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!474 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !319, line: 44, baseType: !32, size: 32, elements: !475)
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502}
!476 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!477 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!478 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!479 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!480 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!481 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!482 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!483 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!484 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!485 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!486 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!487 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!488 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!489 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!490 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!491 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!492 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!493 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!494 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!495 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!496 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!497 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!498 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!499 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!500 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!501 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!502 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!503 = !{!504, !576, !619, !630, !152}
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !506, line: 4575, baseType: !507)
!506 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 4532, size: 390144, elements: !508)
!508 = !{!509, !511, !512, !513, !514, !518, !528, !532, !542, !546}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !507, file: !506, line: 4533, baseType: !510, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !507, file: !506, line: 4534, baseType: !510, size: 32, offset: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !507, file: !506, line: 4535, baseType: !510, size: 32, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !507, file: !506, line: 4536, baseType: !510, size: 32, offset: 96)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !507, file: !506, line: 4537, baseType: !515, size: 16256, offset: 128)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 16256, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 2032)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !507, file: !506, line: 4543, baseType: !519, size: 4224, offset: 16384)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 4224, elements: !526)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !506, line: 4538, size: 128, elements: !521)
!521 = !{!522, !523, !524, !525}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !520, file: !506, line: 4539, baseType: !510, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !520, file: !506, line: 4540, baseType: !510, size: 32, offset: 32)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !520, file: !506, line: 4541, baseType: !510, size: 32, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !520, file: !506, line: 4542, baseType: !510, size: 32, offset: 96)
!526 = !{!527}
!527 = !DISubrange(count: 33)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !507, file: !506, line: 4544, baseType: !529, size: 110464, offset: 20608)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 110464, elements: !530)
!530 = !{!531}
!531 = !DISubrange(count: 13808)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !507, file: !506, line: 4550, baseType: !533, size: 24448, offset: 131072)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 24448, elements: !540)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !506, line: 4545, size: 128, elements: !535)
!535 = !{!536, !537, !538, !539}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !534, file: !506, line: 4546, baseType: !510, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !534, file: !506, line: 4547, baseType: !510, size: 32, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !534, file: !506, line: 4548, baseType: !510, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !534, file: !506, line: 4549, baseType: !510, size: 32, offset: 96)
!540 = !{!541}
!541 = !DISubrange(count: 191)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !507, file: !506, line: 4551, baseType: !543, size: 106624, offset: 155520)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 106624, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 13328)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !507, file: !506, line: 4574, baseType: !547, size: 128000, offset: 262144)
!547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 128000, elements: !574)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !506, line: 4552, size: 1024, elements: !549)
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !570, !571, !572, !573}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !548, file: !506, line: 4553, baseType: !510, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !548, file: !506, line: 4554, baseType: !510, size: 32, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !548, file: !506, line: 4555, baseType: !510, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !548, file: !506, line: 4556, baseType: !510, size: 32, offset: 96)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !548, file: !506, line: 4557, baseType: !510, size: 32, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !548, file: !506, line: 4558, baseType: !510, size: 32, offset: 160)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !548, file: !506, line: 4559, baseType: !510, size: 32, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !548, file: !506, line: 4560, baseType: !510, size: 32, offset: 224)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !548, file: !506, line: 4561, baseType: !510, size: 32, offset: 256)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !548, file: !506, line: 4562, baseType: !510, size: 32, offset: 288)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !548, file: !506, line: 4563, baseType: !510, size: 32, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !548, file: !506, line: 4564, baseType: !510, size: 32, offset: 352)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !548, file: !506, line: 4565, baseType: !510, size: 32, offset: 384)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !548, file: !506, line: 4566, baseType: !510, size: 32, offset: 416)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !548, file: !506, line: 4567, baseType: !510, size: 32, offset: 448)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !548, file: !506, line: 4568, baseType: !510, size: 32, offset: 480)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !548, file: !506, line: 4569, baseType: !567, size: 384, offset: 512)
!567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 384, elements: !568)
!568 = !{!569}
!569 = !DISubrange(count: 48)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !548, file: !506, line: 4570, baseType: !510, size: 32, offset: 896)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !548, file: !506, line: 4571, baseType: !510, size: 32, offset: 928)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !548, file: !506, line: 4572, baseType: !510, size: 32, offset: 960)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !548, file: !506, line: 4573, baseType: !510, size: 32, offset: 992)
!574 = !{!575}
!575 = !DISubrange(count: 125)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !506, line: 38320, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 38303, size: 23040, elements: !579)
!579 = !{!580, !582, !586, !587, !588, !589, !593, !597, !601, !605, !609}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !578, file: !506, line: 38304, baseType: !581, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !578, file: !506, line: 38305, baseType: !583, size: 256, offset: 32)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 256, elements: !584)
!584 = !{!585}
!585 = !DISubrange(count: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !578, file: !506, line: 38306, baseType: !510, size: 32, offset: 288)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !578, file: !506, line: 38307, baseType: !510, size: 32, offset: 320)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !578, file: !506, line: 38308, baseType: !510, size: 32, offset: 352)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !578, file: !506, line: 38309, baseType: !590, size: 3712, offset: 384)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 3712, elements: !591)
!591 = !{!592}
!592 = !DISubrange(count: 464)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !578, file: !506, line: 38310, baseType: !594, size: 864, offset: 4096)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 864, elements: !595)
!595 = !{!596}
!596 = !DISubrange(count: 27)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !578, file: !506, line: 38311, baseType: !598, size: 3232, offset: 4960)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 3232, elements: !599)
!599 = !{!600}
!600 = !DISubrange(count: 404)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !578, file: !506, line: 38312, baseType: !602, size: 3776, offset: 8192)
!602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 3776, elements: !603)
!603 = !{!604}
!604 = !DISubrange(count: 118)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !578, file: !506, line: 38313, baseType: !606, size: 4416, offset: 11968)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 4416, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 552)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !578, file: !506, line: 38319, baseType: !610, size: 6656, offset: 16384)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 6656, elements: !617)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !578, file: !506, line: 38314, size: 128, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !611, file: !506, line: 38315, baseType: !510, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !611, file: !506, line: 38316, baseType: !510, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !611, file: !506, line: 38317, baseType: !510, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !611, file: !506, line: 38318, baseType: !510, size: 32, offset: 96)
!617 = !{!618}
!618 = !DISubrange(count: 52)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !506, line: 43319, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 43313, size: 80, elements: !622)
!622 = !{!623, !625, !626, !628, !629}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !621, file: !506, line: 43314, baseType: !624, size: 16)
!624 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !197)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !621, file: !506, line: 43315, baseType: !624, size: 16, offset: 16)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !621, file: !506, line: 43316, baseType: !627, size: 16, offset: 32)
!627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !621, file: !506, line: 43317, baseType: !624, size: 16, offset: 48)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !621, file: !506, line: 43318, baseType: !624, size: 16, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 32)
!631 = !{!216}
!632 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !636)
!635 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!636 = !{!637, !644}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !634, file: !635, line: 60, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 32)
!639 = !DISubroutineType(types: !640)
!640 = !{!107, !641}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !643)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !635, line: 48, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !634, file: !635, line: 65, baseType: !641, size: 32, offset: 32)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !647, file: !654, line: 21, type: !213, isLocal: true, isDefinition: true)
!647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !649, globals: !653, splitDebugInlining: false, nameTableKind: None)
!648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!649 = !{!650, !107, !106}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !652, line: 22, baseType: !107)
!652 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!645}
!654 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "phase", scope: !657, file: !661, line: 61, type: !660, isLocal: false, isDefinition: true)
!657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !659, retainedTypes: !686, globals: !697, splitDebugInlining: false, nameTableKind: None)
!658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!659 = !{!660, !669, !677, !30, !682}
!660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !661, line: 40, baseType: !32, size: 32, elements: !662)
!661 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!662 = !{!663, !664, !665, !666, !667, !668}
!663 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!664 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!665 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!666 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!667 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!668 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!669 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !661, line: 226, baseType: !32, size: 32, elements: !670)
!670 = !{!671, !672, !673, !674, !675, !676}
!671 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!672 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!673 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!674 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!675 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!676 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !661, line: 52, baseType: !32, size: 32, elements: !678)
!678 = !{!679, !680, !681}
!679 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!680 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!681 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!682 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !683)
!683 = !{!684, !685}
!684 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!685 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!686 = !{!106, !107, !185, !687, !692, !152, !695}
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !688, line: 46, baseType: !689)
!688 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = !DISubroutineType(types: !691)
!691 = !{null, !106, !106, !106}
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !693, line: 46, baseType: !694)
!693 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !696)
!696 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!697 = !{!655, !698, !700, !702, !711, !713, !826, !829}
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "test_result", scope: !657, file: !661, line: 234, type: !669, isLocal: true, isDefinition: true)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !657, file: !661, line: 294, type: !145, isLocal: true, isDefinition: true)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !657, file: !661, line: 430, type: !704, isLocal: false, isDefinition: true, align: 64)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 8192, elements: !709)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !707)
!706 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!707 = !{!708}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !705, file: !706, line: 48, baseType: !120, size: 8)
!709 = !{!710}
!710 = !DISubrange(count: 1024)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "test_status", scope: !657, file: !661, line: 63, type: !677, isLocal: true, isDefinition: true)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !657, file: !661, line: 17, type: !715, isLocal: true, isDefinition: true)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !717)
!716 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!718, !783, !796, !797, !798, !800, !801, !821}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !715, file: !716, line: 247, baseType: !719, size: 384)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !720)
!720 = !{!721, !749, !757, !758, !759, !770, !771, !772}
!721 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !716, line: 60, baseType: !722, size: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !716, line: 60, size: 64, elements: !723)
!723 = !{!724, !740}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !722, file: !716, line: 61, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !727)
!726 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !728)
!728 = !{!729, !735}
!729 = !DIDerivedType(tag: DW_TAG_member, scope: !727, file: !726, line: 38, baseType: !730, size: 32)
!730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !727, file: !726, line: 38, size: 32, elements: !731)
!731 = !{!732, !734}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !730, file: !726, line: 39, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !730, file: !726, line: 40, baseType: !733, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, scope: !727, file: !726, line: 42, baseType: !736, size: 32, offset: 32)
!736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !727, file: !726, line: 42, size: 32, elements: !737)
!737 = !{!738, !739}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !736, file: !726, line: 43, baseType: !733, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !736, file: !726, line: 44, baseType: !733, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !722, file: !716, line: 62, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !743)
!742 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!743 = !{!744}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !741, file: !742, line: 50, baseType: !745, size: 64)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !746, size: 64, elements: !747)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!747 = !{!748}
!748 = !DISubrange(count: 2)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !719, file: !716, line: 68, baseType: !750, size: 32, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !753)
!752 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !754)
!754 = !{!755}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !753, file: !752, line: 232, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !727)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !719, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !719, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!759 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !716, line: 90, baseType: !760, size: 16, offset: 112)
!760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !716, line: 90, size: 16, elements: !761)
!761 = !{!762, !769}
!762 = !DIDerivedType(tag: DW_TAG_member, scope: !760, file: !716, line: 91, baseType: !763, size: 16)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !760, file: !716, line: 91, size: 16, elements: !764)
!764 = !{!765, !768}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !763, file: !716, line: 96, baseType: !766, size: 8)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !767)
!767 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !763, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !760, file: !716, line: 100, baseType: !197, size: 16)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !719, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !719, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !719, file: !716, line: 131, baseType: !773, size: 192, offset: 192)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !774)
!774 = !{!775, !776, !782}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !773, file: !752, line: 245, baseType: !725, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !773, file: !752, line: 246, baseType: !777, size: 32, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !778)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!779 = !DISubroutineType(types: !780)
!780 = !{null, !781}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !773, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !715, file: !716, line: 250, baseType: !784, size: 288, offset: 384)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !786)
!785 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !{!787, !788, !789, !790, !791, !792, !793, !794, !795}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !784, file: !785, line: 26, baseType: !152, size: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !784, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !784, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !784, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !784, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !784, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !784, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !784, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !784, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !715, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !715, file: !716, line: 256, baseType: !751, size: 64, offset: 704)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !715, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !584)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !715, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !715, file: !716, line: 325, baseType: !802, size: 32, offset: 1056)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !805)
!804 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!805 = !{!806, !815, !816}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !803, file: !804, line: 5074, baseType: !807, size: 96)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !809)
!808 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!809 = !{!810, !813, !814}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !807, file: !808, line: 57, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !808, line: 57, flags: DIFlagFwdDecl)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !807, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !807, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !803, file: !804, line: 5075, baseType: !751, size: 64, offset: 96)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !803, file: !804, line: 5076, baseType: !817, size: 32, offset: 160)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !819)
!818 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !817, file: !818, line: 52, baseType: !22, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !715, file: !716, line: 343, baseType: !822, size: 64, offset: 1088)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !823)
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !822, file: !785, line: 63, baseType: !152, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !822, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !657, file: !828, line: 95, type: !152, isLocal: true, isDefinition: true)
!828 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !657, file: !828, line: 96, type: !152, isLocal: true, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "ztest_api", scope: !834, file: !837, line: 70, type: !838, isLocal: false, isDefinition: true)
!834 = distinct !DICompileUnit(language: DW_LANG_C99, file: !835, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !836, splitDebugInlining: false, nameTableKind: None)
!835 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!836 = !{!832}
!837 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !840)
!840 = !{!841, !842, !863}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !839, file: !114, line: 500, baseType: !16, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !839, file: !114, line: 501, baseType: !843, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DISubroutineType(types: !845)
!845 = !{!145, !13, !846}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !848)
!848 = !{!849, !850, !851, !852, !853, !854, !855}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !847, file: !114, line: 179, baseType: !117, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !847, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !847, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !847, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !847, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !847, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !847, file: !114, line: 197, baseType: !856, size: 32, offset: 192)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !859)
!859 = !{!860, !861, !862}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !858, file: !114, line: 116, baseType: !152, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !858, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !858, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !839, file: !114, line: 502, baseType: !864, size: 32, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 32)
!865 = !DISubroutineType(types: !866)
!866 = !{!145, !118, !118}
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !869, file: !965, line: 603, type: !967, isLocal: true, isDefinition: true, align: 32)
!869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !871, globals: !962, splitDebugInlining: false, nameTableKind: None)
!870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!871 = !{!106, !107, !872}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !875, line: 336, size: 608, elements: !876)
!875 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!876 = !{!877, !903, !907, !911, !924, !929, !935, !940, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !874, file: !875, line: 365, baseType: !878, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!107, !881, !902}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !885)
!884 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!885 = !{!886, !887, !888, !889, !895, !896}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !883, file: !884, line: 380, baseType: !118, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !883, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !883, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !883, file: !884, line: 386, baseType: !890, size: 32, offset: 96)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !892)
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !891, file: !884, line: 359, baseType: !195, size: 8)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !891, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !883, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !883, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !884, line: 43, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !901)
!901 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !874, file: !875, line: 366, baseType: !904, size: 32, offset: 32)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !881, !196}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !874, file: !875, line: 374, baseType: !908, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!107, !881}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !874, file: !875, line: 377, baseType: !912, size: 32, offset: 96)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!107, !881, !915}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !875, line: 122, size: 64, elements: !918)
!918 = !{!919, !920, !921, !922, !923}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !917, file: !875, line: 123, baseType: !152, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !917, file: !875, line: 124, baseType: !195, size: 8, offset: 32)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !917, file: !875, line: 125, baseType: !195, size: 8, offset: 40)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !917, file: !875, line: 126, baseType: !195, size: 8, offset: 48)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !917, file: !875, line: 127, baseType: !195, size: 8, offset: 56)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !874, file: !875, line: 379, baseType: !925, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!107, !881, !928}
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !874, file: !875, line: 384, baseType: !930, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!107, !881, !933, !107}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !874, file: !875, line: 393, baseType: !936, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DISubroutineType(types: !938)
!938 = !{!107, !881, !194, !939}
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !874, file: !875, line: 402, baseType: !941, size: 32, offset: 224)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{null, !881}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !874, file: !875, line: 405, baseType: !941, size: 32, offset: 256)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !874, file: !875, line: 408, baseType: !908, size: 32, offset: 288)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !874, file: !875, line: 411, baseType: !941, size: 32, offset: 320)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !874, file: !875, line: 414, baseType: !941, size: 32, offset: 352)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !874, file: !875, line: 417, baseType: !908, size: 32, offset: 384)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !874, file: !875, line: 420, baseType: !908, size: 32, offset: 416)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !874, file: !875, line: 423, baseType: !941, size: 32, offset: 448)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !874, file: !875, line: 426, baseType: !941, size: 32, offset: 480)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !874, file: !875, line: 429, baseType: !908, size: 32, offset: 512)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !874, file: !875, line: 432, baseType: !908, size: 32, offset: 544)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !874, file: !875, line: 435, baseType: !955, size: 32, offset: 576)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{null, !881, !958, !106}
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !875, line: 142, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{null, !881, !106}
!962 = !{!867, !963}
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !869, file: !965, line: 38, type: !966, isLocal: true, isDefinition: true)
!965 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !881)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !969)
!969 = !{!970, !971}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !968, file: !635, line: 60, baseType: !908, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !968, file: !635, line: 65, baseType: !881, size: 32, offset: 32)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !974, file: !1078, line: 318, type: !1155, isLocal: false, isDefinition: true)
!974 = distinct !DICompileUnit(language: DW_LANG_C99, file: !975, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !976, retainedTypes: !993, globals: !1075, splitDebugInlining: false, nameTableKind: None)
!975 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!976 = !{!977, !983, !988}
!977 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !978, line: 506, baseType: !32, size: 32, elements: !979)
!978 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!979 = !{!980, !981, !982}
!980 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!981 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!982 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!983 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !978, line: 512, baseType: !32, size: 32, elements: !984)
!984 = !{!985, !986, !987}
!985 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!986 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!987 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!988 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !989, line: 66, baseType: !32, size: 32, elements: !990)
!989 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!990 = !{!991, !992}
!991 = !DIEnumerator(name: "gpioPinClear", value: 0)
!992 = !DIEnumerator(name: "gpioPinSet", value: 1)
!993 = !{!994, !1064, !1069, !1029, !983, !977, !1074, !106, !630, !1044, !193}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !978, line: 523, size: 288, elements: !997)
!997 = !{!998, !1019, !1025, !1030, !1034, !1035, !1036, !1040, !1060}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !996, file: !978, line: 524, baseType: !999, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!107, !1002, !1017, !1018}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1015, !1016}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1004, file: !884, line: 380, baseType: !118, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1004, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1004, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1004, file: !884, line: 386, baseType: !1010, size: 32, offset: 96)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1012)
!1012 = !{!1013, !1014}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1011, file: !884, line: 359, baseType: !195, size: 8)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1011, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1004, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1004, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !978, line: 237, baseType: !195)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !978, line: 257, baseType: !152)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !996, file: !978, line: 530, baseType: !1020, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!107, !1002, !1023}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !978, line: 229, baseType: !152)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !996, file: !978, line: 532, baseType: !1026, size: 32, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!107, !1002, !1029, !1024}
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !978, line: 216, baseType: !152)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !996, file: !978, line: 535, baseType: !1031, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!107, !1002, !1029}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !996, file: !978, line: 537, baseType: !1031, size: 32, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !996, file: !978, line: 539, baseType: !1031, size: 32, offset: 160)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !996, file: !978, line: 541, baseType: !1037, size: 32, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!107, !1002, !1017, !977, !983}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !996, file: !978, line: 544, baseType: !1041, size: 32, offset: 224)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!107, !1002, !1044, !145}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !978, line: 478, size: 96, elements: !1046)
!1046 = !{!1047, !1054, !1059}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1045, file: !978, line: 482, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1049, line: 33, baseType: !1050)
!1049 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1049, line: 29, size: 32, elements: !1051)
!1051 = !{!1052}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1050, file: !1049, line: 30, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1045, file: !978, line: 485, baseType: !1055, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !978, line: 464, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1002, !1044, !1029}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1045, file: !978, line: 493, baseType: !1029, size: 32, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !996, file: !978, line: 547, baseType: !1061, size: 32, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!152, !1002}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !978, line: 428, size: 32, elements: !1067)
!1067 = !{!1068}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1066, file: !978, line: 434, baseType: !1029, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !978, line: 441, size: 32, elements: !1072)
!1072 = !{!1073}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1071, file: !978, line: 447, baseType: !1029, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1075 = !{!972, !1076, !1082, !1084, !1094, !1106, !1108, !1139, !1141, !1153}
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1079, isLocal: false, isDefinition: true, align: 16)
!1078 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 400, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 25)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1003, isLocal: false, isDefinition: true, align: 32)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1086, isLocal: true, isDefinition: true, align: 32)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1088)
!1088 = !{!1089, !1093}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1087, file: !635, line: 60, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!107, !1002}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1087, file: !635, line: 65, baseType: !1002, size: 32, offset: 32)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !974, file: !1078, line: 318, type: !1096, isLocal: true, isDefinition: true)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1078, line: 33, size: 96, elements: !1097)
!1097 = !{!1098, !1099}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1096, file: !1078, line: 35, baseType: !1071, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1096, file: !1078, line: 37, baseType: !1100, size: 64, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1049, line: 40, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1049, line: 35, size: 64, elements: !1102)
!1102 = !{!1103, !1105}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1101, file: !1049, line: 36, baseType: !1104, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1101, file: !1049, line: 37, baseType: !1104, size: 32, offset: 32)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1011, isLocal: true, isDefinition: true, align: 8)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !974, file: !1078, line: 318, type: !1110, isLocal: true, isDefinition: true)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1078, line: 23, size: 128, elements: !1112)
!1112 = !{!1113, !1114, !1127, !1138}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !1078, line: 25, baseType: !1066, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1111, file: !1078, line: 26, baseType: !1115, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !506, line: 19729, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 19720, size: 256, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1117, file: !506, line: 19721, baseType: !510, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1117, file: !506, line: 19722, baseType: !510, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1117, file: !506, line: 19723, baseType: !581, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1117, file: !506, line: 19724, baseType: !510, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1117, file: !506, line: 19725, baseType: !510, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1117, file: !506, line: 19726, baseType: !510, size: 32, offset: 160)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1117, file: !506, line: 19727, baseType: !510, size: 32, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1117, file: !506, line: 19728, baseType: !510, size: 32, offset: 224)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1111, file: !1078, line: 28, baseType: !1128, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !1132)
!1131 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1132 = !{!1133, !1134, !1135, !1136, !1137}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1130, file: !1131, line: 52, baseType: !152, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1130, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1130, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1130, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1130, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1111, file: !1078, line: 29, baseType: !195, size: 8, offset: 96)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !974, file: !1078, line: 249, type: !995, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1143, file: !1078, line: 318, type: !1146, isLocal: true, isDefinition: true, align: 32)
!1143 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1078, file: !1078, line: 318, type: !1091, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !1144)
!1144 = !{!1145}
!1145 = !DILocalVariable(name: "port", arg: 1, scope: !1143, file: !1078, line: 318, type: !1002)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1147)
!1147 = !{!1148, !1150, !1151, !1152}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1146, file: !10, line: 55, baseType: !1149, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1146, file: !10, line: 57, baseType: !1149, size: 32, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1146, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1146, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1143, file: !1078, line: 318, type: !1146, isLocal: true, isDefinition: true, align: 32)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 2048, elements: !1156)
!1156 = !{!1157}
!1157 = !DISubrange(count: 16)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1160, file: !1165, line: 7, type: !1166, isLocal: false, isDefinition: true, align: 16)
!1160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1162, splitDebugInlining: false, nameTableKind: None)
!1161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!1162 = !{!1158, !1163}
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1160, file: !1165, line: 12, type: !1166, isLocal: false, isDefinition: true, align: 16)
!1165 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 48, elements: !1167)
!1167 = !{!1168}
!1168 = !DISubrange(count: 3)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1171, file: !1368, line: 339, type: !1366, isLocal: true, isDefinition: true)
!1171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1173, retainedTypes: !1259, globals: !1404, splitDebugInlining: false, nameTableKind: None)
!1172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!1173 = !{!30, !1174, !1212, !1240, !1244, !1248, !1253}
!1174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1175, line: 122, baseType: !32, size: 32, elements: !1176)
!1175 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1176 = !{!1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211}
!1177 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1178 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1179 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1180 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1181 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1182 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1183 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1184 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1185 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1186 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1187 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1188 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1189 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1190 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1191 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1192 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1193 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1194 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1195 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1196 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1197 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1198 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1199 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1200 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1201 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1202 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1203 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1204 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1205 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1206 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1207 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1208 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1209 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1210 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1211 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1175, line: 91, baseType: !32, size: 32, elements: !1213)
!1213 = !{!1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!1214 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1215 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1216 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1217 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1218 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1219 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1220 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1221 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1222 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1223 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1224 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1225 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1226 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1227 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1228 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1229 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1230 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1231 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1232 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1233 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1234 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1235 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1236 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1237 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1238 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1239 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1175, line: 60, baseType: !32, size: 32, elements: !1241)
!1241 = !{!1242, !1243}
!1242 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1243 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1175, line: 67, baseType: !32, size: 32, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1247 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1248 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1175, line: 74, baseType: !32, size: 32, elements: !1249)
!1249 = !{!1250, !1251, !1252}
!1250 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1251 = !DIEnumerator(name: "uartParityEven", value: 256)
!1252 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1253 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1175, line: 82, baseType: !32, size: 32, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258}
!1255 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1256 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1257 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1258 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1259 = !{!106, !107, !1260, !1339, !1365, !1403, !152, !145, !195}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !875, line: 336, size: 608, elements: !1263)
!1263 = !{!1264, !1283, !1287, !1291, !1304, !1309, !1313, !1317, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1262, file: !875, line: 365, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!107, !1268, !902}
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1281, !1282}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1270, file: !884, line: 380, baseType: !118, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1270, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1270, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1270, file: !884, line: 386, baseType: !1276, size: 32, offset: 96)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1278)
!1278 = !{!1279, !1280}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1277, file: !884, line: 359, baseType: !195, size: 8)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1277, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1270, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1270, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1262, file: !875, line: 366, baseType: !1284, size: 32, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !1268, !196}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1262, file: !875, line: 374, baseType: !1288, size: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!107, !1268}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1262, file: !875, line: 377, baseType: !1292, size: 32, offset: 96)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!107, !1268, !1295}
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !875, line: 122, size: 64, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302, !1303}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1297, file: !875, line: 123, baseType: !152, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1297, file: !875, line: 124, baseType: !195, size: 8, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1297, file: !875, line: 125, baseType: !195, size: 8, offset: 40)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1297, file: !875, line: 126, baseType: !195, size: 8, offset: 48)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1297, file: !875, line: 127, baseType: !195, size: 8, offset: 56)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1262, file: !875, line: 379, baseType: !1305, size: 32, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!107, !1268, !1308}
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1262, file: !875, line: 384, baseType: !1310, size: 32, offset: 160)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!107, !1268, !933, !107}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1262, file: !875, line: 393, baseType: !1314, size: 32, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!107, !1268, !194, !939}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1262, file: !875, line: 402, baseType: !1318, size: 32, offset: 224)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !1268}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1262, file: !875, line: 405, baseType: !1318, size: 32, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1262, file: !875, line: 408, baseType: !1288, size: 32, offset: 288)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1262, file: !875, line: 411, baseType: !1318, size: 32, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1262, file: !875, line: 414, baseType: !1318, size: 32, offset: 352)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1262, file: !875, line: 417, baseType: !1288, size: 32, offset: 384)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1262, file: !875, line: 420, baseType: !1288, size: 32, offset: 416)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1262, file: !875, line: 423, baseType: !1318, size: 32, offset: 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1262, file: !875, line: 426, baseType: !1318, size: 32, offset: 480)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1262, file: !875, line: 429, baseType: !1288, size: 32, offset: 512)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1262, file: !875, line: 432, baseType: !1288, size: 32, offset: 544)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1262, file: !875, line: 435, baseType: !1332, size: 32, offset: 576)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{null, !1268, !1335, !106}
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !875, line: 142, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !1268, !106}
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 32)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !506, line: 41342, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 41322, size: 1504, elements: !1342)
!1342 = !{!1343, !1344, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1341, file: !506, line: 41323, baseType: !581, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1341, file: !506, line: 41324, baseType: !1345, size: 480, offset: 32)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 480, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 60)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1341, file: !506, line: 41325, baseType: !510, size: 32, offset: 512)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1341, file: !506, line: 41326, baseType: !1345, size: 480, offset: 544)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1341, file: !506, line: 41327, baseType: !510, size: 32, offset: 1024)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1341, file: !506, line: 41328, baseType: !510, size: 32, offset: 1056)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1341, file: !506, line: 41329, baseType: !510, size: 32, offset: 1088)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1341, file: !506, line: 41330, baseType: !510, size: 32, offset: 1120)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1341, file: !506, line: 41331, baseType: !510, size: 32, offset: 1152)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1341, file: !506, line: 41332, baseType: !510, size: 32, offset: 1184)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1341, file: !506, line: 41333, baseType: !510, size: 32, offset: 1216)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1341, file: !506, line: 41334, baseType: !510, size: 32, offset: 1248)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1341, file: !506, line: 41335, baseType: !510, size: 32, offset: 1280)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1341, file: !506, line: 41336, baseType: !510, size: 32, offset: 1312)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1341, file: !506, line: 41337, baseType: !510, size: 32, offset: 1344)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1341, file: !506, line: 41338, baseType: !581, size: 32, offset: 1376)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1341, file: !506, line: 41339, baseType: !510, size: 32, offset: 1408)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1341, file: !506, line: 41340, baseType: !510, size: 32, offset: 1440)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1341, file: !506, line: 41341, baseType: !510, size: 32, offset: 1472)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1368, line: 29, size: 160, elements: !1369)
!1368 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1369 = !{!1370, !1371, !1372, !1373, !1402}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1367, file: !1368, line: 30, baseType: !1339, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1367, file: !1368, line: 31, baseType: !152, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1367, file: !1368, line: 32, baseType: !195, size: 8, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1367, file: !1368, line: 33, baseType: !1374, size: 32, offset: 96)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1377, line: 60, size: 64, elements: !1378)
!1377 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1378 = !{!1379, !1401}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1376, file: !1377, line: 69, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1377, line: 50, size: 64, elements: !1383)
!1383 = !{!1384, !1399, !1400}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1382, file: !1377, line: 52, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1131, line: 64, baseType: !1388)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !1389)
!1389 = !{!1390, !1398}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1388, file: !1131, line: 60, baseType: !1391, size: 128)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1396, !1397}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1391, file: !1131, line: 52, baseType: !152, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1391, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1391, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1391, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1391, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1388, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1382, file: !1377, line: 54, baseType: !195, size: 8, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1382, file: !1377, line: 56, baseType: !195, size: 8, offset: 40)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1376, file: !1377, line: 71, baseType: !195, size: 8, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1367, file: !1368, line: 35, baseType: !1318, size: 32, offset: 128)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1404 = !{!1405, !1410, !1412, !1419, !1425, !1427, !1169, !1429, !1431, !1436, !1439}
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1407, isLocal: false, isDefinition: true, align: 16)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 96, elements: !1408)
!1408 = !{!1409}
!1409 = !DISubrange(count: 6)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1269, isLocal: false, isDefinition: true, align: 32)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1414, isLocal: true, isDefinition: true, align: 32)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1416)
!1416 = !{!1417, !1418}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1415, file: !635, line: 60, baseType: !1288, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1415, file: !635, line: 65, baseType: !1268, size: 32, offset: 32)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1171, file: !1368, line: 339, type: !1421, isLocal: true, isDefinition: true)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1368, line: 39, size: 64, elements: !1422)
!1422 = !{!1423, !1424}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1421, file: !1368, line: 41, baseType: !1335, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1421, file: !1368, line: 42, baseType: !106, size: 32, offset: 32)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1277, isLocal: true, isDefinition: true, align: 8)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1171, file: !1368, line: 270, type: !1261, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1375, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1433, isLocal: true, isDefinition: true)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1381, size: 64, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 1)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1438, isLocal: true, isDefinition: true)
!1438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1386, size: 320, elements: !747)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1441, file: !1368, line: 339, type: !1444, isLocal: true, isDefinition: true, align: 32)
!1441 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1368, file: !1368, line: 339, type: !1319, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !1442)
!1442 = !{!1443}
!1443 = !DILocalVariable(name: "dev", arg: 1, scope: !1441, file: !1368, line: 339, type: !1268)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1445)
!1445 = !{!1446, !1447, !1448, !1449}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1444, file: !10, line: 55, baseType: !1149, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1444, file: !10, line: 57, baseType: !1149, size: 32, offset: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1444, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1444, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1452, file: !1677, line: 65, type: !510, isLocal: true, isDefinition: true)
!1452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !1595, globals: !1674, splitDebugInlining: false, nameTableKind: None)
!1453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!1454 = !{!1455}
!1455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !506, line: 103, baseType: !107, size: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1457 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1458 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1459 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1460 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1461 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1462 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1463 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1464 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1465 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1466 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1467 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1468 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1469 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1470 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1471 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1472 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1473 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1474 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1475 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1476 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1477 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1478 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1479 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1480 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1481 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1482 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1483 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1484 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1485 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1486 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1487 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1488 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1489 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1490 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1491 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1492 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1493 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1494 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1495 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1496 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1497 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1498 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1499 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1500 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1501 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1502 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1503 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1504 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1505 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1506 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1507 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1508 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1509 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1510 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1511 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1512 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1513 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1514 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1515 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1516 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1517 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1518 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1519 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1520 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1521 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1522 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1523 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1524 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1525 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1526 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1527 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1528 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1529 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1530 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1531 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1532 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1533 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1534 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1535 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1536 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1537 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1538 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1539 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1540 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1541 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1542 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1543 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1544 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1545 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1546 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1547 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1548 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1549 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1550 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1551 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1552 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1553 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1554 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1555 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1556 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1557 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1558 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1559 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1560 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1561 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1562 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1563 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1564 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1565 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1566 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1567 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1568 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1569 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1570 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1571 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1572 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1573 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1574 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1575 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1576 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1577 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1578 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1579 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1580 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1581 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1582 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1583 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1584 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1585 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1586 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1587 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1588 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1589 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1590 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1591 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1592 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1593 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1594 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1595 = !{!692, !1596, !1149, !195, !152, !1605, !1638}
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1598, line: 770, baseType: !1599)
!1598 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 764, size: 128, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1604}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1599, file: !1598, line: 766, baseType: !510, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1599, file: !1598, line: 767, baseType: !510, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1599, file: !1598, line: 768, baseType: !510, size: 32, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1599, file: !1598, line: 769, baseType: !581, size: 32, offset: 96)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !1608)
!1608 = !{!1609, !1613, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1628, !1633, !1637}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1607, file: !1598, line: 413, baseType: !1610, size: 256)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 256, elements: !1611)
!1611 = !{!1612}
!1612 = !DISubrange(count: 8)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1607, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1615)
!1615 = !{!1616}
!1616 = !DISubrange(count: 24)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1607, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1607, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1607, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1607, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1607, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1607, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1607, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1607, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1626)
!1626 = !{!1627}
!1627 = !DISubrange(count: 56)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1607, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 1920, elements: !1631)
!1630 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1631 = !{!1632}
!1632 = !DISubrange(count: 240)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1607, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1635)
!1635 = !{!1636}
!1636 = !DISubrange(count: 644)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1607, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1646, !1647, !1648, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1661, !1662, !1663, !1667, !1671, !1673}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1640, file: !1598, line: 447, baseType: !581, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1640, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1640, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1640, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1640, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1640, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1640, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 96, elements: !1650)
!1650 = !{!1651}
!1651 = !DISubrange(count: 12)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1640, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1640, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1640, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1640, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1640, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1640, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1640, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1640, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 64, elements: !747)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1640, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1640, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1640, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 128, elements: !1665)
!1665 = !{!1666}
!1666 = !DISubrange(count: 4)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1640, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 160, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 5)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1640, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1669)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1640, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!1674 = !{!1675, !1701, !1706, !1708, !1710, !1450}
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1452, file: !1677, line: 285, type: !1678, isLocal: true, isDefinition: true, align: 32)
!1677 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1680)
!1680 = !{!1681, !1700}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1679, file: !635, line: 60, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!107, !1685}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1698, !1699}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1687, file: !884, line: 380, baseType: !118, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1687, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1687, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1687, file: !884, line: 386, baseType: !1693, size: 32, offset: 96)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1694, file: !884, line: 359, baseType: !195, size: 8)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1694, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1687, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1687, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1679, file: !635, line: 65, baseType: !1685, size: 32, offset: 32)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "lock", scope: !1452, file: !1677, line: 34, type: !1703, isLocal: true, isDefinition: true)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !1704)
!1704 = !{!1705}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1703, file: !818, line: 52, baseType: !22, size: 32)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "last_load", scope: !1452, file: !1677, line: 36, type: !152, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1452, file: !1677, line: 48, type: !152, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1452, file: !1677, line: 54, type: !152, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1714, file: !1718, line: 69, type: !1719, isLocal: true, isDefinition: true, align: 32)
!1714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1716, globals: !1717, splitDebugInlining: false, nameTableKind: None)
!1715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!1716 = !{!630, !22}
!1717 = !{!1712}
!1718 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1721)
!1721 = !{!1722, !1741}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1720, file: !635, line: 60, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!107, !1726}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1739, !1740}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1728, file: !884, line: 380, baseType: !118, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1728, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1728, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1728, file: !884, line: 386, baseType: !1734, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1736)
!1736 = !{!1737, !1738}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1735, file: !884, line: 359, baseType: !195, size: 8)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1735, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1728, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1728, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1720, file: !635, line: 65, baseType: !1726, size: 32, offset: 32)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1744, file: !1747, line: 23, type: !939, isLocal: false, isDefinition: true)
!1744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1746, splitDebugInlining: false, nameTableKind: None)
!1745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!1746 = !{!1742}
!1747 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1750, file: !1754, line: 37, type: !2001, isLocal: false, isDefinition: true)
!1750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1752, retainedTypes: !1761, globals: !1834, splitDebugInlining: false, nameTableKind: None)
!1751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!1752 = !{!1753, !30, !1455}
!1753 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1754, line: 63, baseType: !32, size: 32, elements: !1755)
!1754 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1755 = !{!1756, !1757, !1758, !1759, !1760}
!1756 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1757 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1758 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1759 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1760 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1761 = !{!185, !106, !107, !1762, !193, !152, !1792, !1149, !195, !1817}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1765, line: 51, size: 64, elements: !1766)
!1765 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1766 = !{!1767, !1787}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1764, file: !1765, line: 52, baseType: !1768, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1765, line: 38, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!107, !1772, !194, !197}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779, !1785, !1786}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1774, file: !884, line: 380, baseType: !118, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1774, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1774, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1774, file: !884, line: 386, baseType: !1780, size: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1782)
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1781, file: !884, line: 359, baseType: !195, size: 8)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1781, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1774, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1774, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1764, file: !1765, line: 53, baseType: !1788, size: 32, offset: 32)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1765, line: 47, baseType: !1789)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!107, !1772, !194, !197, !152}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1794, file: !1598, line: 447, baseType: !581, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1794, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1794, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1794, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1794, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1794, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1794, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1794, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1794, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1794, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1794, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1794, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1794, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1794, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1794, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1794, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1794, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1794, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1794, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1794, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1794, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1819, file: !1598, line: 413, baseType: !1610, size: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1819, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1819, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1819, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1819, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1819, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1819, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1819, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1819, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1819, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1819, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1819, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1819, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!1834 = !{!1748, !1835, !1955, !1961, !1963, !1966, !1971, !1973, !1978}
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "_kernel", scope: !1750, file: !1754, line: 40, type: !1837, isLocal: false, isDefinition: true)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !752, line: 158, size: 288, elements: !1838)
!1838 = !{!1839, !1950}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1837, file: !752, line: 159, baseType: !1840, size: 192)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 192, elements: !1434)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !752, line: 100, size: 192, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1943, !1944, !1945, !1946}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1841, file: !752, line: 102, baseType: !152, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1841, file: !752, line: 105, baseType: !193, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1841, file: !752, line: 108, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !1848)
!1848 = !{!1849, !1907, !1919, !1920, !1921, !1922, !1923, !1938}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1847, file: !716, line: 247, baseType: !1850, size: 384)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !1851)
!1851 = !{!1852, !1876, !1883, !1884, !1885, !1894, !1895, !1896}
!1852 = !DIDerivedType(tag: DW_TAG_member, scope: !1850, file: !716, line: 60, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1850, file: !716, line: 60, size: 64, elements: !1854)
!1854 = !{!1855, !1870}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1853, file: !716, line: 61, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !1858)
!1858 = !{!1859, !1865}
!1859 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !726, line: 38, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1857, file: !726, line: 38, size: 32, elements: !1861)
!1861 = !{!1862, !1864}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1860, file: !726, line: 39, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1860, file: !726, line: 40, baseType: !1863, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !726, line: 42, baseType: !1866, size: 32, offset: 32)
!1866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1857, file: !726, line: 42, size: 32, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1866, file: !726, line: 43, baseType: !1863, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1866, file: !726, line: 44, baseType: !1863, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1853, file: !716, line: 62, baseType: !1871, size: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !1872)
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1871, file: !742, line: 50, baseType: !1874, size: 64)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1875, size: 64, elements: !747)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1850, file: !716, line: 68, baseType: !1877, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !1880)
!1880 = !{!1881}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1879, file: !752, line: 232, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !1857)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1850, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1850, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!1885 = !DIDerivedType(tag: DW_TAG_member, scope: !1850, file: !716, line: 90, baseType: !1886, size: 16, offset: 112)
!1886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1850, file: !716, line: 90, size: 16, elements: !1887)
!1887 = !{!1888, !1893}
!1888 = !DIDerivedType(tag: DW_TAG_member, scope: !1886, file: !716, line: 91, baseType: !1889, size: 16)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1886, file: !716, line: 91, size: 16, elements: !1890)
!1890 = !{!1891, !1892}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1889, file: !716, line: 96, baseType: !766, size: 8)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1889, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1886, file: !716, line: 100, baseType: !197, size: 16)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1850, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1850, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1850, file: !716, line: 131, baseType: !1897, size: 192, offset: 192)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !1898)
!1898 = !{!1899, !1900, !1906}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1897, file: !752, line: 245, baseType: !1856, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1897, file: !752, line: 246, baseType: !1901, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !1902)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{null, !1905}
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1897, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1847, file: !716, line: 250, baseType: !1908, size: 288, offset: 384)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !1909)
!1909 = !{!1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1908, file: !785, line: 26, baseType: !152, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1908, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1908, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1908, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1908, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1908, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1908, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1908, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1908, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1847, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1847, file: !716, line: 256, baseType: !1878, size: 64, offset: 704)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1847, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1847, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1847, file: !716, line: 325, baseType: !1924, size: 32, offset: 1056)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !1926)
!1926 = !{!1927, !1933, !1934}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1925, file: !804, line: 5074, baseType: !1928, size: 96)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !1929)
!1929 = !{!1930, !1931, !1932}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1928, file: !808, line: 57, baseType: !811, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1928, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1928, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1925, file: !804, line: 5075, baseType: !1878, size: 64, offset: 96)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1925, file: !804, line: 5076, baseType: !1935, size: 32, offset: 160)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !1936)
!1936 = !{!1937}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1935, file: !818, line: 52, baseType: !22, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1847, file: !716, line: 343, baseType: !1939, size: 64, offset: 1088)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !1940)
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1939, file: !785, line: 63, baseType: !152, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1939, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1841, file: !752, line: 111, baseType: !1846, size: 32, offset: 96)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1841, file: !752, line: 124, baseType: !107, size: 32, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1841, file: !752, line: 127, baseType: !195, size: 8, offset: 160)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1841, file: !752, line: 153, baseType: !1947, offset: 168)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1948, line: 33, elements: !1949)
!1948 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1949 = !{}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1837, file: !752, line: 170, baseType: !1951, size: 96, offset: 192)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !752, line: 83, size: 96, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1951, file: !752, line: 86, baseType: !1846, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1951, file: !752, line: 90, baseType: !1882, size: 64, offset: 32)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1750, file: !1754, line: 43, type: !1957, isLocal: false, isDefinition: true, align: 64)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 8192, elements: !709)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !1959)
!1959 = !{!1960}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1958, file: !706, line: 48, baseType: !120, size: 8)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1750, file: !1754, line: 44, type: !1847, isLocal: false, isDefinition: true)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1750, file: !1754, line: 48, type: !1965, isLocal: false, isDefinition: true)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 1152, elements: !1434)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1750, file: !1754, line: 86, type: !1968, isLocal: false, isDefinition: true, align: 64)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 16384, elements: !1969)
!1969 = !{!1435, !1970}
!1970 = !DISubrange(count: 2048)
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1750, file: !1754, line: 217, type: !145, isLocal: false, isDefinition: true)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1750, file: !1754, line: 50, type: !1975, isLocal: true, isDefinition: true, align: 64)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 32768, elements: !1976)
!1976 = !{!1435, !1977}
!1977 = !DISubrange(count: 4096)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "levels", scope: !1980, file: !1754, line: 232, type: !2000, isLocal: true, isDefinition: true)
!1980 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1754, file: !1754, line: 230, type: !1981, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1983)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{null, !1753}
!1983 = !{!1984, !1985, !1995, !1999}
!1984 = !DILocalVariable(name: "level", arg: 1, scope: !1980, file: !1754, line: 230, type: !1753)
!1985 = !DILocalVariable(name: "entry", scope: !1980, file: !1754, line: 244, type: !1986)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1989)
!1989 = !{!1990, !1994}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1988, file: !635, line: 60, baseType: !1991, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!107, !1772}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1988, file: !635, line: 65, baseType: !1772, size: 32, offset: 32)
!1995 = !DILocalVariable(name: "dev", scope: !1996, file: !1754, line: 247, type: !1772)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !1754, line: 246, column: 64)
!1997 = distinct !DILexicalBlock(scope: !1998, file: !1754, line: 246, column: 2)
!1998 = distinct !DILexicalBlock(scope: !1980, file: !1754, line: 246, column: 2)
!1999 = !DILocalVariable(name: "rc", scope: !1996, file: !1754, line: 248, type: !107)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1986, size: 192, elements: !1408)
!2001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2002)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2002, file: !203, line: 17, baseType: !118, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2002, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "states_str", scope: !2008, file: !2009, line: 276, type: !2128, isLocal: true, isDefinition: true)
!2008 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2009, file: !2009, line: 271, type: !2010, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !2119)
!2009 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!118, !2012, !193, !185}
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !2013)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !2015)
!2015 = !{!2016, !2074, !2086, !2087, !2088, !2089, !2090, !2105}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2014, file: !716, line: 247, baseType: !2017, size: 384)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !2018)
!2018 = !{!2019, !2043, !2050, !2051, !2052, !2061, !2062, !2063}
!2019 = !DIDerivedType(tag: DW_TAG_member, scope: !2017, file: !716, line: 60, baseType: !2020, size: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2017, file: !716, line: 60, size: 64, elements: !2021)
!2021 = !{!2022, !2037}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2020, file: !716, line: 61, baseType: !2023, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !2025)
!2025 = !{!2026, !2032}
!2026 = !DIDerivedType(tag: DW_TAG_member, scope: !2024, file: !726, line: 38, baseType: !2027, size: 32)
!2027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2024, file: !726, line: 38, size: 32, elements: !2028)
!2028 = !{!2029, !2031}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2027, file: !726, line: 39, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2027, file: !726, line: 40, baseType: !2030, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !2024, file: !726, line: 42, baseType: !2033, size: 32, offset: 32)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2024, file: !726, line: 42, size: 32, elements: !2034)
!2034 = !{!2035, !2036}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2033, file: !726, line: 43, baseType: !2030, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2033, file: !726, line: 44, baseType: !2030, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2020, file: !716, line: 62, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !2039)
!2039 = !{!2040}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2038, file: !742, line: 50, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 64, elements: !747)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2017, file: !716, line: 68, baseType: !2044, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !2047)
!2047 = !{!2048}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2046, file: !752, line: 232, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !2024)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2017, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2017, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!2052 = !DIDerivedType(tag: DW_TAG_member, scope: !2017, file: !716, line: 90, baseType: !2053, size: 16, offset: 112)
!2053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2017, file: !716, line: 90, size: 16, elements: !2054)
!2054 = !{!2055, !2060}
!2055 = !DIDerivedType(tag: DW_TAG_member, scope: !2053, file: !716, line: 91, baseType: !2056, size: 16)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2053, file: !716, line: 91, size: 16, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2056, file: !716, line: 96, baseType: !766, size: 8)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2056, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2053, file: !716, line: 100, baseType: !197, size: 16)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2017, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2017, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2017, file: !716, line: 131, baseType: !2064, size: 192, offset: 192)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !2065)
!2065 = !{!2066, !2067, !2073}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2064, file: !752, line: 245, baseType: !2023, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2064, file: !752, line: 246, baseType: !2068, size: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !2072}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2064, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2014, file: !716, line: 250, baseType: !2075, size: 288, offset: 384)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !2076)
!2076 = !{!2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2075, file: !785, line: 26, baseType: !152, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2075, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2075, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2075, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2075, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2075, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2075, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2075, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2075, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2014, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2014, file: !716, line: 256, baseType: !2045, size: 64, offset: 704)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2014, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2014, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2014, file: !716, line: 325, baseType: !2091, size: 32, offset: 1056)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !2093)
!2093 = !{!2094, !2100, !2101}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2092, file: !804, line: 5074, baseType: !2095, size: 96)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !2096)
!2096 = !{!2097, !2098, !2099}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2095, file: !808, line: 57, baseType: !811, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2095, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2095, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2092, file: !804, line: 5075, baseType: !2045, size: 64, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2092, file: !804, line: 5076, baseType: !2102, size: 32, offset: 160)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !2103)
!2103 = !{!2104}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2102, file: !818, line: 52, baseType: !22, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2014, file: !716, line: 343, baseType: !2106, size: 64, offset: 1088)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2106, file: !785, line: 63, baseType: !152, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2106, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!2110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2112, globals: !2114, splitDebugInlining: false, nameTableKind: None)
!2111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2112 = !{!106, !118, !692, !195, !22, !107, !2113, !24, !185, !193, !152, !695}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2114 = !{!2006, !2115}
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(name: "states_sz", scope: !2008, file: !2009, line: 279, type: !2117, isLocal: true, isDefinition: true)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2118, size: 256, elements: !1611)
!2118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2126}
!2120 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2008, file: !2009, line: 271, type: !2012)
!2121 = !DILocalVariable(name: "buf", arg: 2, scope: !2008, file: !2009, line: 271, type: !193)
!2122 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2008, file: !2009, line: 271, type: !185)
!2123 = !DILocalVariable(name: "off", scope: !2008, file: !2009, line: 273, type: !185)
!2124 = !DILocalVariable(name: "bit", scope: !2008, file: !2009, line: 274, type: !195)
!2125 = !DILocalVariable(name: "thread_state", scope: !2008, file: !2009, line: 275, type: !195)
!2126 = !DILocalVariable(name: "index", scope: !2127, file: !2009, line: 293, type: !195)
!2127 = distinct !DILexicalBlock(scope: !2008, file: !2009, line: 293, column: 2)
!2128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1611)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2131, file: !2236, line: 56, type: !2223, isLocal: false, isDefinition: true)
!2131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2132, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2133, globals: !2233, splitDebugInlining: false, nameTableKind: None)
!2132 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2133 = !{!2134, !193, !106, !2231, !194, !692, !1149, !107, !152, !695, !2232}
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !2136)
!2136 = !{!2137, !2195, !2207, !2208, !2209, !2210, !2211, !2226}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2135, file: !716, line: 247, baseType: !2138, size: 384)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !2139)
!2139 = !{!2140, !2164, !2171, !2172, !2173, !2182, !2183, !2184}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !716, line: 60, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !716, line: 60, size: 64, elements: !2142)
!2142 = !{!2143, !2158}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2141, file: !716, line: 61, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !2146)
!2146 = !{!2147, !2153}
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !726, line: 38, baseType: !2148, size: 32)
!2148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2145, file: !726, line: 38, size: 32, elements: !2149)
!2149 = !{!2150, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2148, file: !726, line: 39, baseType: !2151, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2148, file: !726, line: 40, baseType: !2151, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !726, line: 42, baseType: !2154, size: 32, offset: 32)
!2154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2145, file: !726, line: 42, size: 32, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2154, file: !726, line: 43, baseType: !2151, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2154, file: !726, line: 44, baseType: !2151, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2141, file: !716, line: 62, baseType: !2159, size: 64)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2159, file: !742, line: 50, baseType: !2162, size: 64)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2163, size: 64, elements: !747)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2138, file: !716, line: 68, baseType: !2165, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !2168)
!2168 = !{!2169}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2167, file: !752, line: 232, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !2145)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2138, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2138, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!2173 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !716, line: 90, baseType: !2174, size: 16, offset: 112)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !716, line: 90, size: 16, elements: !2175)
!2175 = !{!2176, !2181}
!2176 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !716, line: 91, baseType: !2177, size: 16)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2174, file: !716, line: 91, size: 16, elements: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2177, file: !716, line: 96, baseType: !766, size: 8)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2177, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2174, file: !716, line: 100, baseType: !197, size: 16)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2138, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2138, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2138, file: !716, line: 131, baseType: !2185, size: 192, offset: 192)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !2186)
!2186 = !{!2187, !2188, !2194}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2185, file: !752, line: 245, baseType: !2144, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2185, file: !752, line: 246, baseType: !2189, size: 32, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{null, !2193}
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2185, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2135, file: !716, line: 250, baseType: !2196, size: 288, offset: 384)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !2197)
!2197 = !{!2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2196, file: !785, line: 26, baseType: !152, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2196, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2196, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2196, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2196, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2196, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2196, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2196, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2196, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2135, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2135, file: !716, line: 256, baseType: !2166, size: 64, offset: 704)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2135, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2135, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2135, file: !716, line: 325, baseType: !2212, size: 32, offset: 1056)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !2214)
!2214 = !{!2215, !2221, !2222}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2213, file: !804, line: 5074, baseType: !2216, size: 96)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !2217)
!2217 = !{!2218, !2219, !2220}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2216, file: !808, line: 57, baseType: !811, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2216, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2216, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2213, file: !804, line: 5075, baseType: !2166, size: 64, offset: 96)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2213, file: !804, line: 5076, baseType: !2223, size: 32, offset: 160)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !2224)
!2224 = !{!2225}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2223, file: !818, line: 52, baseType: !22, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2135, file: !716, line: 343, baseType: !2227, size: 64, offset: 1088)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2227, file: !785, line: 63, baseType: !152, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2227, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2233 = !{!2129, !2234, !2237, !2239}
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2131, file: !2236, line: 404, type: !107, isLocal: true, isDefinition: true)
!2236 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2237 = !DIGlobalVariableExpression(var: !2238, expr: !DIExpression())
!2238 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2131, file: !2236, line: 405, type: !107, isLocal: true, isDefinition: true)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "pending_current", scope: !2131, file: !2236, line: 425, type: !2134, isLocal: true, isDefinition: true)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2243, file: !2273, line: 19, type: !2279, isLocal: true, isDefinition: true)
!2243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2244, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2245, globals: !2270, splitDebugInlining: false, nameTableKind: None)
!2244 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2245 = !{!692, !106, !1149, !152, !695, !107, !2246, !193, !694}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !2248)
!2248 = !{!2249, !2264, !2269}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2247, file: !752, line: 245, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !2252)
!2252 = !{!2253, !2259}
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !726, line: 38, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2251, file: !726, line: 38, size: 32, elements: !2255)
!2255 = !{!2256, !2258}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2254, file: !726, line: 39, baseType: !2257, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2254, file: !726, line: 40, baseType: !2257, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !726, line: 42, baseType: !2260, size: 32, offset: 32)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2251, file: !726, line: 42, size: 32, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2260, file: !726, line: 43, baseType: !2257, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2260, file: !726, line: 44, baseType: !2257, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2247, file: !752, line: 246, baseType: !2265, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2246}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2247, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!2270 = !{!2271, !2241, !2274, !2276}
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression())
!2272 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2243, file: !2273, line: 15, type: !695, isLocal: true, isDefinition: true)
!2273 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2243, file: !2273, line: 25, type: !107, isLocal: true, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2243, file: !2273, line: 17, type: !2278, isLocal: true, isDefinition: true)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !2251)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !2280)
!2280 = !{!2281}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2279, file: !818, line: 52, baseType: !22, size: 32)
!2282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2285, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2285 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2288, retainedTypes: !2308, splitDebugInlining: false, nameTableKind: None)
!2287 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2288 = !{!2289, !2297}
!2289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2290, line: 69, baseType: !32, size: 32, elements: !2291)
!2290 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2291 = !{!2292, !2293, !2294, !2295, !2296}
!2292 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2293 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2294 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2295 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2296 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2290, line: 56, baseType: !32, size: 32, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2299 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2300 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2301 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2302 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2303 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2304 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2305 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2306 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2307 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2308 = !{!107, !2289, !2297, !2309, !767, !901, !2311, !2312, !196, !198, !118, !185, !106, !22, !32, !187, !2314, !2315, !189, !188, !191, !190, !2310, !2316, !2317, !2318, !2319}
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2290, line: 31, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2290, line: 32, baseType: !2313)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !696)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2323, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2323 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2325, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2326, splitDebugInlining: false, nameTableKind: None)
!2325 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2326 = !{!118, !196, !107, !32}
!2327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2328, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2329, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2328 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2329 = !{!2330, !30}
!2330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2331, line: 27, baseType: !32, size: 32, elements: !2332)
!2331 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2332 = !{!2333, !2334, !2335, !2336, !2337}
!2333 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2334 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2335 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2336 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2337 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2338 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2339, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2340, retainedTypes: !2341, splitDebugInlining: false, nameTableKind: None)
!2339 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2340 = !{!1455, !2330, !30}
!2341 = !{!2342, !2343, !106, !107, !1149, !152, !195, !2360}
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !506, line: 249, baseType: !1455)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2345, file: !1598, line: 413, baseType: !1610, size: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2345, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2345, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2345, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2345, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2345, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2345, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2345, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2345, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2345, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2345, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2345, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2345, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2362, file: !1598, line: 447, baseType: !581, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2362, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2362, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2362, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2362, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2362, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2362, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2362, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2362, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2362, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2362, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2362, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2362, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2362, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2362, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2362, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2362, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2362, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2362, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2362, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2362, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2389, splitDebugInlining: false, nameTableKind: None)
!2388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2389 = !{!106, !107, !22, !2390}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2392, file: !1598, line: 447, baseType: !581, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2392, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2392, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2392, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2392, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2392, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2392, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2392, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2392, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2392, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2392, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2392, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2392, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2392, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2392, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2392, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2392, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2392, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2392, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2392, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2392, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2415 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2416, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2417, splitDebugInlining: false, nameTableKind: None)
!2416 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2417 = !{!2418, !106, !107}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2421)
!2421 = !{!2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2420, file: !1598, line: 447, baseType: !581, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2420, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2420, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2420, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2420, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2420, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2420, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2420, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2420, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2420, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2420, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2420, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2420, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2420, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2420, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2420, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2420, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2420, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2420, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2420, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2420, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2445, splitDebugInlining: false, nameTableKind: None)
!2444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2445 = !{!2446, !152, !106, !107}
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !2449)
!2448 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2449 = !{!2450, !2455, !2460, !2465, !2470, !2475, !2480, !2485}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 99, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 99, size: 32, elements: !2452)
!2452 = !{!2453, !2454}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2451, file: !2448, line: 99, baseType: !152, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2451, file: !2448, line: 99, baseType: !152, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 100, baseType: !2456, size: 32, offset: 32)
!2456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 100, size: 32, elements: !2457)
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2456, file: !2448, line: 100, baseType: !152, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2456, file: !2448, line: 100, baseType: !152, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 101, baseType: !2461, size: 32, offset: 64)
!2461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 101, size: 32, elements: !2462)
!2462 = !{!2463, !2464}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2461, file: !2448, line: 101, baseType: !152, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2461, file: !2448, line: 101, baseType: !152, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 102, baseType: !2466, size: 32, offset: 96)
!2466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 102, size: 32, elements: !2467)
!2467 = !{!2468, !2469}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2466, file: !2448, line: 102, baseType: !152, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2466, file: !2448, line: 102, baseType: !152, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 103, baseType: !2471, size: 32, offset: 128)
!2471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 103, size: 32, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2471, file: !2448, line: 103, baseType: !152, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2471, file: !2448, line: 103, baseType: !152, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 104, baseType: !2476, size: 32, offset: 160)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 104, size: 32, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2476, file: !2448, line: 104, baseType: !152, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2476, file: !2448, line: 104, baseType: !152, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 105, baseType: !2481, size: 32, offset: 192)
!2481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 105, size: 32, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2481, file: !2448, line: 105, baseType: !152, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2481, file: !2448, line: 105, baseType: !152, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2447, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!2486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2329, retainedTypes: !2488, splitDebugInlining: false, nameTableKind: None)
!2487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2488 = !{!2489, !106, !107, !2514, !2557, !152}
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2491, file: !1598, line: 447, baseType: !581, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2491, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2491, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2491, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2491, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2491, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2491, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2491, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2491, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2491, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2491, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2491, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2491, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2491, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2491, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2491, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2491, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2491, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2491, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2491, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2491, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2448, line: 141, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2448, line: 97, size: 256, elements: !2517)
!2517 = !{!2518}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2516, file: !2448, line: 107, baseType: !2519, size: 256)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !2520)
!2520 = !{!2521, !2526, !2531, !2536, !2541, !2546, !2551, !2556}
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 99, baseType: !2522, size: 32)
!2522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 99, size: 32, elements: !2523)
!2523 = !{!2524, !2525}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2522, file: !2448, line: 99, baseType: !152, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2522, file: !2448, line: 99, baseType: !152, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 100, baseType: !2527, size: 32, offset: 32)
!2527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 100, size: 32, elements: !2528)
!2528 = !{!2529, !2530}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2527, file: !2448, line: 100, baseType: !152, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2527, file: !2448, line: 100, baseType: !152, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 101, baseType: !2532, size: 32, offset: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 101, size: 32, elements: !2533)
!2533 = !{!2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2532, file: !2448, line: 101, baseType: !152, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2532, file: !2448, line: 101, baseType: !152, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 102, baseType: !2537, size: 32, offset: 96)
!2537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 102, size: 32, elements: !2538)
!2538 = !{!2539, !2540}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2537, file: !2448, line: 102, baseType: !152, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2537, file: !2448, line: 102, baseType: !152, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 103, baseType: !2542, size: 32, offset: 128)
!2542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 103, size: 32, elements: !2543)
!2543 = !{!2544, !2545}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2542, file: !2448, line: 103, baseType: !152, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2542, file: !2448, line: 103, baseType: !152, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 104, baseType: !2547, size: 32, offset: 160)
!2547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 104, size: 32, elements: !2548)
!2548 = !{!2549, !2550}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2547, file: !2448, line: 104, baseType: !152, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2547, file: !2448, line: 104, baseType: !152, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 105, baseType: !2552, size: 32, offset: 192)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 105, size: 32, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2552, file: !2448, line: 105, baseType: !152, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2552, file: !2448, line: 105, baseType: !152, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2519, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2559, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !2560, splitDebugInlining: false, nameTableKind: None)
!2559 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2560 = !{!2342, !1149, !195, !152, !2561, !2578}
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !2564)
!2564 = !{!2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2563, file: !1598, line: 413, baseType: !1610, size: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2563, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2563, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2563, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2563, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2563, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2563, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2563, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2563, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2563, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2563, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2563, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2563, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2580, file: !1598, line: 447, baseType: !581, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2580, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2580, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2580, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2580, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2580, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2580, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2580, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2580, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2580, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2580, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2580, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2580, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2580, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2580, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2580, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2580, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2580, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2580, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2580, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2580, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2605, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2605 = !{!2606, !106, !107}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2608)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2609)
!2609 = !{!2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2608, file: !1598, line: 447, baseType: !581, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2608, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2608, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2608, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2608, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2608, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2608, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2608, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2608, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2608, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2608, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2608, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2608, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2608, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2608, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2608, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2608, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2608, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2608, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2608, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2608, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2633, splitDebugInlining: false, nameTableKind: None)
!2632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2633 = !{!120, !193, !185, !902, !2634, !196, !106}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2637 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2638 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2639, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2640, splitDebugInlining: false, nameTableKind: None)
!2639 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2640 = !{!630, !152}
!2641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2643, retainedTypes: !2653, splitDebugInlining: false, nameTableKind: None)
!2642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2643 = !{!2644}
!2644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2645, line: 62, baseType: !32, size: 32, elements: !2646)
!2645 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652}
!2647 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2648 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2649 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2650 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2651 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2652 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2653 = !{!2654, !2717, !152, !145, !630}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !506, line: 8619, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 8563, size: 3072, elements: !2657)
!2657 = !{!2658, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2656, file: !506, line: 8564, baseType: !2659, size: 768)
!2659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 768, elements: !2660)
!2660 = !{!2661}
!2661 = !DISubrange(count: 96)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2656, file: !506, line: 8565, baseType: !510, size: 32, offset: 768)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2656, file: !506, line: 8566, baseType: !510, size: 32, offset: 800)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2656, file: !506, line: 8567, baseType: !510, size: 32, offset: 832)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2656, file: !506, line: 8568, baseType: !510, size: 32, offset: 864)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2656, file: !506, line: 8569, baseType: !510, size: 32, offset: 896)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2656, file: !506, line: 8570, baseType: !510, size: 32, offset: 928)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2656, file: !506, line: 8571, baseType: !510, size: 32, offset: 960)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2656, file: !506, line: 8572, baseType: !510, size: 32, offset: 992)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2656, file: !506, line: 8573, baseType: !510, size: 32, offset: 1024)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2656, file: !506, line: 8574, baseType: !2672, size: 96, offset: 1056)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 96, elements: !1650)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2656, file: !506, line: 8575, baseType: !510, size: 32, offset: 1152)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2656, file: !506, line: 8576, baseType: !2672, size: 96, offset: 1184)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2656, file: !506, line: 8577, baseType: !510, size: 32, offset: 1280)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2656, file: !506, line: 8578, baseType: !2672, size: 96, offset: 1312)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2656, file: !506, line: 8579, baseType: !510, size: 32, offset: 1408)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2656, file: !506, line: 8580, baseType: !510, size: 32, offset: 1440)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2656, file: !506, line: 8581, baseType: !510, size: 32, offset: 1472)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2656, file: !506, line: 8582, baseType: !510, size: 32, offset: 1504)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2656, file: !506, line: 8583, baseType: !510, size: 32, offset: 1536)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2656, file: !506, line: 8584, baseType: !510, size: 32, offset: 1568)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2656, file: !506, line: 8585, baseType: !510, size: 32, offset: 1600)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2656, file: !506, line: 8586, baseType: !510, size: 32, offset: 1632)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2656, file: !506, line: 8587, baseType: !510, size: 32, offset: 1664)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2656, file: !506, line: 8588, baseType: !510, size: 32, offset: 1696)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2656, file: !506, line: 8589, baseType: !510, size: 32, offset: 1728)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2656, file: !506, line: 8590, baseType: !510, size: 32, offset: 1760)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2656, file: !506, line: 8591, baseType: !510, size: 32, offset: 1792)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2656, file: !506, line: 8592, baseType: !510, size: 32, offset: 1824)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2656, file: !506, line: 8593, baseType: !510, size: 32, offset: 1856)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2656, file: !506, line: 8594, baseType: !510, size: 32, offset: 1888)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2656, file: !506, line: 8595, baseType: !510, size: 32, offset: 1920)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2656, file: !506, line: 8596, baseType: !510, size: 32, offset: 1952)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2656, file: !506, line: 8597, baseType: !510, size: 32, offset: 1984)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2656, file: !506, line: 8598, baseType: !510, size: 32, offset: 2016)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2656, file: !506, line: 8599, baseType: !510, size: 32, offset: 2048)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2656, file: !506, line: 8600, baseType: !2672, size: 96, offset: 2080)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2656, file: !506, line: 8601, baseType: !510, size: 32, offset: 2176)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2656, file: !506, line: 8602, baseType: !2672, size: 96, offset: 2208)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2656, file: !506, line: 8603, baseType: !510, size: 32, offset: 2304)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2656, file: !506, line: 8604, baseType: !2672, size: 96, offset: 2336)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2656, file: !506, line: 8605, baseType: !510, size: 32, offset: 2432)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2656, file: !506, line: 8606, baseType: !510, size: 32, offset: 2464)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2656, file: !506, line: 8607, baseType: !510, size: 32, offset: 2496)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2656, file: !506, line: 8608, baseType: !510, size: 32, offset: 2528)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2656, file: !506, line: 8609, baseType: !510, size: 32, offset: 2560)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2656, file: !506, line: 8610, baseType: !2672, size: 96, offset: 2592)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2656, file: !506, line: 8611, baseType: !510, size: 32, offset: 2688)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2656, file: !506, line: 8612, baseType: !2672, size: 96, offset: 2720)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2656, file: !506, line: 8613, baseType: !510, size: 32, offset: 2816)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2656, file: !506, line: 8614, baseType: !2672, size: 96, offset: 2848)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2656, file: !506, line: 8615, baseType: !510, size: 32, offset: 2944)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2656, file: !506, line: 8616, baseType: !510, size: 32, offset: 2976)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2656, file: !506, line: 8617, baseType: !510, size: 32, offset: 3008)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2656, file: !506, line: 8618, baseType: !510, size: 32, offset: 3040)
!2717 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2720, splitDebugInlining: false, nameTableKind: None)
!2719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2720 = !{!2721, !2725, !988}
!2721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !989, line: 49, baseType: !32, size: 32, elements: !2722)
!2722 = !{!2723, !2724}
!2723 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2724 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2725 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !989, line: 56, baseType: !32, size: 32, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731}
!2727 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2728 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2729 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2730 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2731 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2734, retainedTypes: !2743, splitDebugInlining: false, nameTableKind: None)
!2733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2734 = !{!1253, !2735, !2739}
!2735 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1175, line: 179, baseType: !32, size: 32, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2738 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1175, line: 194, baseType: !32, size: 32, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2742 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2743 = !{!152, !1403}
!2744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2746, retainedTypes: !2757, splitDebugInlining: false, nameTableKind: None)
!2745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2746 = !{!221, !2747}
!2747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2645, line: 128, baseType: !32, size: 32, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2749 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2750 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2751 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2752 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2753 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2754 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2755 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2756 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2757 = !{!152, !2758, !2810, !630}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !506, line: 4575, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 4532, size: 390144, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2775, !2776, !2784, !2785}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2760, file: !506, line: 4533, baseType: !510, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2760, file: !506, line: 4534, baseType: !510, size: 32, offset: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2760, file: !506, line: 4535, baseType: !510, size: 32, offset: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2760, file: !506, line: 4536, baseType: !510, size: 32, offset: 96)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2760, file: !506, line: 4537, baseType: !515, size: 16256, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2760, file: !506, line: 4543, baseType: !2768, size: 4224, offset: 16384)
!2768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2769, size: 4224, elements: !526)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !506, line: 4538, size: 128, elements: !2770)
!2770 = !{!2771, !2772, !2773, !2774}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2769, file: !506, line: 4539, baseType: !510, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2769, file: !506, line: 4540, baseType: !510, size: 32, offset: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2769, file: !506, line: 4541, baseType: !510, size: 32, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2769, file: !506, line: 4542, baseType: !510, size: 32, offset: 96)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2760, file: !506, line: 4544, baseType: !529, size: 110464, offset: 20608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2760, file: !506, line: 4550, baseType: !2777, size: 24448, offset: 131072)
!2777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2778, size: 24448, elements: !540)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !506, line: 4545, size: 128, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2778, file: !506, line: 4546, baseType: !510, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2778, file: !506, line: 4547, baseType: !510, size: 32, offset: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2778, file: !506, line: 4548, baseType: !510, size: 32, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2778, file: !506, line: 4549, baseType: !510, size: 32, offset: 96)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2760, file: !506, line: 4551, baseType: !543, size: 106624, offset: 155520)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2760, file: !506, line: 4574, baseType: !2786, size: 128000, offset: 262144)
!2786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2787, size: 128000, elements: !574)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !506, line: 4552, size: 1024, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2787, file: !506, line: 4553, baseType: !510, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2787, file: !506, line: 4554, baseType: !510, size: 32, offset: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2787, file: !506, line: 4555, baseType: !510, size: 32, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2787, file: !506, line: 4556, baseType: !510, size: 32, offset: 96)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2787, file: !506, line: 4557, baseType: !510, size: 32, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2787, file: !506, line: 4558, baseType: !510, size: 32, offset: 160)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2787, file: !506, line: 4559, baseType: !510, size: 32, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2787, file: !506, line: 4560, baseType: !510, size: 32, offset: 224)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2787, file: !506, line: 4561, baseType: !510, size: 32, offset: 256)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2787, file: !506, line: 4562, baseType: !510, size: 32, offset: 288)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2787, file: !506, line: 4563, baseType: !510, size: 32, offset: 320)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2787, file: !506, line: 4564, baseType: !510, size: 32, offset: 352)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2787, file: !506, line: 4565, baseType: !510, size: 32, offset: 384)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2787, file: !506, line: 4566, baseType: !510, size: 32, offset: 416)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2787, file: !506, line: 4567, baseType: !510, size: 32, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2787, file: !506, line: 4568, baseType: !510, size: 32, offset: 480)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2787, file: !506, line: 4569, baseType: !567, size: 384, offset: 512)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2787, file: !506, line: 4570, baseType: !510, size: 32, offset: 896)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2787, file: !506, line: 4571, baseType: !510, size: 32, offset: 928)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2787, file: !506, line: 4572, baseType: !510, size: 32, offset: 960)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2787, file: !506, line: 4573, baseType: !510, size: 32, offset: 992)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !506, line: 8619, baseType: !2812)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 8563, size: 3072, elements: !2813)
!2813 = !{!2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2812, file: !506, line: 8564, baseType: !2659, size: 768)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2812, file: !506, line: 8565, baseType: !510, size: 32, offset: 768)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2812, file: !506, line: 8566, baseType: !510, size: 32, offset: 800)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2812, file: !506, line: 8567, baseType: !510, size: 32, offset: 832)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2812, file: !506, line: 8568, baseType: !510, size: 32, offset: 864)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2812, file: !506, line: 8569, baseType: !510, size: 32, offset: 896)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2812, file: !506, line: 8570, baseType: !510, size: 32, offset: 928)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2812, file: !506, line: 8571, baseType: !510, size: 32, offset: 960)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2812, file: !506, line: 8572, baseType: !510, size: 32, offset: 992)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2812, file: !506, line: 8573, baseType: !510, size: 32, offset: 1024)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2812, file: !506, line: 8574, baseType: !2672, size: 96, offset: 1056)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2812, file: !506, line: 8575, baseType: !510, size: 32, offset: 1152)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2812, file: !506, line: 8576, baseType: !2672, size: 96, offset: 1184)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2812, file: !506, line: 8577, baseType: !510, size: 32, offset: 1280)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2812, file: !506, line: 8578, baseType: !2672, size: 96, offset: 1312)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2812, file: !506, line: 8579, baseType: !510, size: 32, offset: 1408)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2812, file: !506, line: 8580, baseType: !510, size: 32, offset: 1440)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2812, file: !506, line: 8581, baseType: !510, size: 32, offset: 1472)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2812, file: !506, line: 8582, baseType: !510, size: 32, offset: 1504)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2812, file: !506, line: 8583, baseType: !510, size: 32, offset: 1536)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2812, file: !506, line: 8584, baseType: !510, size: 32, offset: 1568)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2812, file: !506, line: 8585, baseType: !510, size: 32, offset: 1600)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2812, file: !506, line: 8586, baseType: !510, size: 32, offset: 1632)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2812, file: !506, line: 8587, baseType: !510, size: 32, offset: 1664)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2812, file: !506, line: 8588, baseType: !510, size: 32, offset: 1696)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2812, file: !506, line: 8589, baseType: !510, size: 32, offset: 1728)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2812, file: !506, line: 8590, baseType: !510, size: 32, offset: 1760)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2812, file: !506, line: 8591, baseType: !510, size: 32, offset: 1792)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2812, file: !506, line: 8592, baseType: !510, size: 32, offset: 1824)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2812, file: !506, line: 8593, baseType: !510, size: 32, offset: 1856)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2812, file: !506, line: 8594, baseType: !510, size: 32, offset: 1888)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2812, file: !506, line: 8595, baseType: !510, size: 32, offset: 1920)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2812, file: !506, line: 8596, baseType: !510, size: 32, offset: 1952)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2812, file: !506, line: 8597, baseType: !510, size: 32, offset: 1984)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2812, file: !506, line: 8598, baseType: !510, size: 32, offset: 2016)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2812, file: !506, line: 8599, baseType: !510, size: 32, offset: 2048)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2812, file: !506, line: 8600, baseType: !2672, size: 96, offset: 2080)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2812, file: !506, line: 8601, baseType: !510, size: 32, offset: 2176)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2812, file: !506, line: 8602, baseType: !2672, size: 96, offset: 2208)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2812, file: !506, line: 8603, baseType: !510, size: 32, offset: 2304)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2812, file: !506, line: 8604, baseType: !2672, size: 96, offset: 2336)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2812, file: !506, line: 8605, baseType: !510, size: 32, offset: 2432)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2812, file: !506, line: 8606, baseType: !510, size: 32, offset: 2464)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2812, file: !506, line: 8607, baseType: !510, size: 32, offset: 2496)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2812, file: !506, line: 8608, baseType: !510, size: 32, offset: 2528)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2812, file: !506, line: 8609, baseType: !510, size: 32, offset: 2560)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2812, file: !506, line: 8610, baseType: !2672, size: 96, offset: 2592)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2812, file: !506, line: 8611, baseType: !510, size: 32, offset: 2688)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2812, file: !506, line: 8612, baseType: !2672, size: 96, offset: 2720)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2812, file: !506, line: 8613, baseType: !510, size: 32, offset: 2816)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2812, file: !506, line: 8614, baseType: !2672, size: 96, offset: 2848)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2812, file: !506, line: 8615, baseType: !510, size: 32, offset: 2944)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2812, file: !506, line: 8616, baseType: !510, size: 32, offset: 2976)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2812, file: !506, line: 8617, baseType: !510, size: 32, offset: 3008)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2812, file: !506, line: 8618, baseType: !510, size: 32, offset: 3040)
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2871, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2871 = !{!106, !185}
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2874, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2874 = !{!2875, !2882, !2330, !30}
!2875 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2876, line: 14, baseType: !32, size: 32, elements: !2877)
!2876 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2877 = !{!2878, !2879, !2880, !2881}
!2878 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2879 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2880 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2881 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2876, line: 42, baseType: !32, size: 32, elements: !2883)
!2883 = !{!2884, !2885, !2886, !2887, !2888, !2889}
!2884 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2885 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2886 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2887 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2888 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2889 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2893, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2894, splitDebugInlining: false, nameTableKind: None)
!2893 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2894 = !{!22, !106, !107}
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!2897 = !{!"Ubuntu clang version 14.0.6"}
!2898 = !{i32 7, !"Dwarf Version", i32 4}
!2899 = !{i32 2, !"Debug Info Version", i32 3}
!2900 = !{i32 1, !"wchar_size", i32 4}
!2901 = !{i32 1, !"min_enum_size", i32 4}
!2902 = !{i32 1, !"branch-target-enforcement", i32 0}
!2903 = !{i32 1, !"sign-return-address", i32 0}
!2904 = !{i32 1, !"sign-return-address-all", i32 0}
!2905 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2906 = !{i32 7, !"frame-pointer", i32 2}
!2907 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2908, file: !2908, line: 26, type: !2909, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !1949)
!2908 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2909 = !DISubroutineType(types: !2910)
!2910 = !{null}
!2911 = !DILocation(line: 28, column: 1, scope: !2907)
!2912 = !{i64 2155084371, i64 2155084391, i64 2155084454}
!2913 = !DILocation(line: 29, column: 1, scope: !2907)
!2914 = !{i64 2155084786, i64 2155084806, i64 2155084869}
!2915 = !DILocation(line: 30, column: 1, scope: !2907)
!2916 = !{i64 2155085205, i64 2155085225, i64 2155085288}
!2917 = !DILocation(line: 31, column: 1, scope: !2907)
!2918 = !{i64 2155089685, i64 2155089705, i64 2155089768}
!2919 = !DILocation(line: 33, column: 1, scope: !2907)
!2920 = !{i64 2155089977, i64 2155089997, i64 2155090060}
!2921 = !DILocation(line: 35, column: 1, scope: !2907)
!2922 = !{i64 2155090302, i64 2155090322, i64 2155090385}
!2923 = !DILocation(line: 50, column: 1, scope: !2907)
!2924 = !{i64 2155090729, i64 2155090749, i64 2155090812}
!2925 = !DILocation(line: 54, column: 1, scope: !2907)
!2926 = !{i64 2155091168, i64 2155091188, i64 2155091251}
!2927 = !DILocation(line: 61, column: 1, scope: !2907)
!2928 = !{i64 2155091485, i64 2155091505, i64 2155091568}
!2929 = !DILocation(line: 63, column: 1, scope: !2907)
!2930 = !{i64 2155091865, i64 2155091885, i64 2155091948}
!2931 = !DILocation(line: 64, column: 1, scope: !2907)
!2932 = !{i64 2155092387, i64 2155092407, i64 2155092470}
!2933 = !DILocation(line: 65, column: 1, scope: !2907)
!2934 = !{i64 2155092885, i64 2155092905, i64 2155092968}
!2935 = !DILocation(line: 66, column: 1, scope: !2907)
!2936 = !{i64 2155093367, i64 2155093387, i64 2155093450}
!2937 = !DILocation(line: 67, column: 1, scope: !2907)
!2938 = !{i64 2155093874, i64 2155093894, i64 2155093957}
!2939 = !DILocation(line: 68, column: 1, scope: !2907)
!2940 = !{i64 2155094362, i64 2155094382, i64 2155094445}
!2941 = !DILocation(line: 70, column: 1, scope: !2907)
!2942 = !{i64 2155094830, i64 2155094850, i64 2155094913}
!2943 = !DILocation(line: 71, column: 1, scope: !2907)
!2944 = !{i64 2155095272, i64 2155095292, i64 2155095355}
!2945 = !DILocation(line: 72, column: 1, scope: !2907)
!2946 = !{i64 2155095730, i64 2155095750, i64 2155095813}
!2947 = !DILocation(line: 97, column: 1, scope: !2907)
!2948 = !{i64 2155096037, i64 2155096057, i64 2155096120}
!2949 = !DILocation(line: 99, column: 1, scope: !2907)
!2950 = !{i64 2155096255, i64 2155096275, i64 2155096338}
!2951 = !DILocation(line: 102, column: 1, scope: !2907)
!2952 = !{i64 2155096512, i64 2155096532, i64 2155096595}
!2953 = !DILocation(line: 105, column: 1, scope: !2907)
!2954 = !{i64 2155096752, i64 2155096772, i64 2155096835}
!2955 = !DILocation(line: 115, column: 1, scope: !2907)
!2956 = !{i64 2155097091, i64 2155097111, i64 2155097174}
!2957 = !DILocation(line: 118, column: 1, scope: !2907)
!2958 = !{i64 2155097435, i64 2155097455, i64 2155097518}
!2959 = !DILocation(line: 32, column: 1, scope: !2960)
!2960 = !DILexicalBlockFile(scope: !2907, file: !2961, discriminator: 0)
!2961 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2962 = !{i64 2155097791, i64 2155097811, i64 2155097874}
!2963 = !DILocation(line: 33, column: 1, scope: !2960)
!2964 = !{i64 2155098303, i64 2155098323, i64 2155098386}
!2965 = !DILocation(line: 53, column: 1, scope: !2960)
!2966 = !{i64 2155098811, i64 2155098831, i64 2155098894}
!2967 = !DILocation(line: 54, column: 1, scope: !2960)
!2968 = !{i64 2155103290, i64 2155103310, i64 2155103373}
!2969 = !DILocation(line: 55, column: 1, scope: !2960)
!2970 = !{i64 2155103708, i64 2155103728, i64 2155103791}
!2971 = !DILocation(line: 56, column: 1, scope: !2960)
!2972 = !{i64 2155104126, i64 2155104146, i64 2155104209}
!2973 = !DILocation(line: 57, column: 1, scope: !2960)
!2974 = !{i64 2155104544, i64 2155104564, i64 2155104627}
!2975 = !DILocation(line: 58, column: 1, scope: !2960)
!2976 = !{i64 2155104962, i64 2155104982, i64 2155105045}
!2977 = !DILocation(line: 59, column: 1, scope: !2960)
!2978 = !{i64 2155105380, i64 2155105400, i64 2155105463}
!2979 = !DILocation(line: 60, column: 1, scope: !2960)
!2980 = !{i64 2155105804, i64 2155105824, i64 2155105887}
!2981 = !DILocation(line: 61, column: 1, scope: !2960)
!2982 = !{i64 2155106121, i64 2155106141, i64 2155106204}
!2983 = !DILocation(line: 70, column: 1, scope: !2960)
!2984 = !{i64 2155106350, i64 2155106370, i64 2155106433}
!2985 = !DILocation(line: 72, column: 1, scope: !2960)
!2986 = !{i64 2155106682, i64 2155106702, i64 2155106765}
!2987 = !DILocation(line: 73, column: 1, scope: !2960)
!2988 = !{i64 2155107132, i64 2155107152, i64 2155107215}
!2989 = !DILocation(line: 74, column: 1, scope: !2960)
!2990 = !{i64 2155107582, i64 2155107602, i64 2155107665}
!2991 = !DILocation(line: 75, column: 1, scope: !2960)
!2992 = !{i64 2155108032, i64 2155108052, i64 2155108115}
!2993 = !DILocation(line: 76, column: 1, scope: !2960)
!2994 = !{i64 2155108482, i64 2155108502, i64 2155108565}
!2995 = !DILocation(line: 77, column: 1, scope: !2960)
!2996 = !{i64 2155108932, i64 2155108952, i64 2155109015}
!2997 = !DILocation(line: 78, column: 1, scope: !2960)
!2998 = !{i64 2155109382, i64 2155109402, i64 2155109465}
!2999 = !DILocation(line: 79, column: 1, scope: !2960)
!3000 = !{i64 2155109832, i64 2155109852, i64 2155109915}
!3001 = !DILocation(line: 80, column: 1, scope: !2960)
!3002 = !{i64 2155110285, i64 2155110305, i64 2155110368}
!3003 = !DILocation(line: 84, column: 1, scope: !2960)
!3004 = !{i64 2155110617, i64 2155110637, i64 2155110700}
!3005 = !DILocation(line: 106, column: 1, scope: !2960)
!3006 = !{i64 2155110867, i64 2155110887, i64 2155110950}
!3007 = !DILocation(line: 11, column: 1, scope: !3008)
!3008 = !DILexicalBlockFile(scope: !2907, file: !3009, discriminator: 0)
!3009 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3010 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3011)
!3011 = !{!3012}
!3012 = !DILocalVariable(name: "data", arg: 1, scope: !3010, file: !111, line: 10, type: !106)
!3013 = !DILocation(line: 0, scope: !3010)
!3014 = !DILocation(line: 10, column: 1, scope: !3010)
!3015 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !2909, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1949)
!3016 = !DILocation(line: 12, column: 2, scope: !3015)
!3017 = !DILocation(line: 13, column: 1, scope: !3015)
!3018 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3019, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3028)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!107, !106, !185, !152, !118, !3021}
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3022, line: 99, baseType: !3023)
!3022 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3022, line: 40, baseType: !3024)
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3025)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3026)
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3025, file: !200, line: 18, baseType: !106, size: 32)
!3028 = !{!3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3064, !3073, !3076, !3077, !3080, !3083, !3086, !3089, !3095}
!3029 = !DILocalVariable(name: "packaged", arg: 1, scope: !3018, file: !200, line: 233, type: !106)
!3030 = !DILocalVariable(name: "len", arg: 2, scope: !3018, file: !200, line: 233, type: !185)
!3031 = !DILocalVariable(name: "flags", arg: 3, scope: !3018, file: !200, line: 233, type: !152)
!3032 = !DILocalVariable(name: "fmt", arg: 4, scope: !3018, file: !200, line: 234, type: !118)
!3033 = !DILocalVariable(name: "ap", arg: 5, scope: !3018, file: !200, line: 234, type: !3021)
!3034 = !DILocalVariable(name: "buf0", scope: !3018, file: !200, line: 247, type: !194)
!3035 = !DILocalVariable(name: "buf", scope: !3018, file: !200, line: 248, type: !194)
!3036 = !DILocalVariable(name: "size", scope: !3018, file: !200, line: 249, type: !32)
!3037 = !DILocalVariable(name: "align", scope: !3018, file: !200, line: 250, type: !32)
!3038 = !DILocalVariable(name: "str_ptr_pos", scope: !3018, file: !200, line: 251, type: !3039)
!3039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1156)
!3040 = !DILocalVariable(name: "str_ptr_arg", scope: !3018, file: !200, line: 252, type: !3039)
!3041 = !DILocalVariable(name: "s_idx", scope: !3018, file: !200, line: 253, type: !32)
!3042 = !DILocalVariable(name: "s_rw_cnt", scope: !3018, file: !200, line: 254, type: !32)
!3043 = !DILocalVariable(name: "s_ro_cnt", scope: !3018, file: !200, line: 255, type: !32)
!3044 = !DILocalVariable(name: "arg_idx", scope: !3018, file: !200, line: 256, type: !107)
!3045 = !DILocalVariable(name: "i", scope: !3018, file: !200, line: 257, type: !32)
!3046 = !DILocalVariable(name: "s", scope: !3018, file: !200, line: 258, type: !118)
!3047 = !DILocalVariable(name: "parsing", scope: !3018, file: !200, line: 259, type: !145)
!3048 = !DILocalVariable(name: "rws_pos_en", scope: !3018, file: !200, line: 263, type: !145)
!3049 = !DILocalVariable(name: "fros_cnt", scope: !3018, file: !200, line: 268, type: !107)
!3050 = !DILocalVariable(name: "is_str_arg", scope: !3018, file: !200, line: 269, type: !145)
!3051 = !DILocalVariable(name: "pkg_hdr", scope: !3018, file: !200, line: 270, type: !3052)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 32)
!3053 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3054, line: 78, size: 32, elements: !3055)
!3054 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3055 = !{!3056, !3063}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3053, file: !3054, line: 80, baseType: !3057, size: 32)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3054, line: 45, size: 32, elements: !3058)
!3058 = !{!3059, !3060, !3061, !3062}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3057, file: !3054, line: 47, baseType: !195, size: 8)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3057, file: !3054, line: 50, baseType: !195, size: 8, offset: 8)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3057, file: !3054, line: 53, baseType: !195, size: 8, offset: 16)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3057, file: !3054, line: 56, baseType: !195, size: 8, offset: 24)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3053, file: !3054, line: 82, baseType: !106, size: 32)
!3064 = !DILocalVariable(name: "v", scope: !3065, file: !200, line: 567, type: !3069)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !200, line: 562, column: 14)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !200, line: 481, column: 18)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !200, line: 466, column: 3)
!3068 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 343, column: 15)
!3069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3018, file: !200, line: 567, size: 64, elements: !3070)
!3070 = !{!3071, !3072}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3069, file: !200, line: 567, baseType: !183, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3069, file: !200, line: 567, baseType: !181, size: 64)
!3073 = !DILocalVariable(name: "is_ro", scope: !3074, file: !200, line: 620, type: !145)
!3074 = distinct !DILexicalBlock(scope: !3075, file: !200, line: 613, column: 19)
!3075 = distinct !DILexicalBlock(scope: !3068, file: !200, line: 613, column: 7)
!3076 = !DILocalVariable(name: "do_ro", scope: !3074, file: !200, line: 621, type: !145)
!3077 = !DILocalVariable(name: "s_ptr_idx", scope: !3078, file: !200, line: 626, type: !152)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !200, line: 625, column: 11)
!3079 = distinct !DILexicalBlock(scope: !3074, file: !200, line: 623, column: 8)
!3080 = !DILocalVariable(name: "v", scope: !3081, file: !200, line: 684, type: !107)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !200, line: 683, column: 35)
!3082 = distinct !DILexicalBlock(scope: !3075, file: !200, line: 683, column: 14)
!3083 = !DILocalVariable(name: "v", scope: !3084, file: !200, line: 691, type: !189)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !200, line: 690, column: 36)
!3085 = distinct !DILexicalBlock(scope: !3082, file: !200, line: 690, column: 14)
!3086 = !DILocalVariable(name: "v", scope: !3087, file: !200, line: 698, type: !191)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !200, line: 697, column: 41)
!3088 = distinct !DILexicalBlock(scope: !3085, file: !200, line: 697, column: 14)
!3089 = !DILocalVariable(name: "pos", scope: !3090, file: !200, line: 762, type: !195)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !200, line: 757, column: 31)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !200, line: 757, column: 3)
!3092 = distinct !DILexicalBlock(scope: !3093, file: !200, line: 757, column: 3)
!3093 = distinct !DILexicalBlock(scope: !3094, file: !200, line: 756, column: 16)
!3094 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 756, column: 6)
!3095 = !DILabel(scope: !3074, name: "process_string", file: !200, line: 615)
!3096 = !DILocation(line: 0, scope: !3018)
!3097 = !DILocation(line: 251, column: 2, scope: !3018)
!3098 = !DILocation(line: 251, column: 10, scope: !3018)
!3099 = !DILocation(line: 252, column: 2, scope: !3018)
!3100 = !DILocation(line: 252, column: 10, scope: !3018)
!3101 = !DILocation(line: 263, column: 29, scope: !3018)
!3102 = !DILocation(line: 263, column: 21, scope: !3018)
!3103 = !DILocation(line: 268, column: 21, scope: !3018)
!3104 = !DILocation(line: 268, column: 19, scope: !3018)
!3105 = !DILocation(line: 273, column: 6, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 273, column: 6)
!3107 = !DILocation(line: 273, column: 26, scope: !3106)
!3108 = !DILocation(line: 273, column: 6, scope: !3018)
!3109 = !DILocation(line: 297, column: 6, scope: !3018)
!3110 = !DILocation(line: 305, column: 11, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 305, column: 6)
!3112 = !DILocation(line: 305, column: 6, scope: !3018)
!3113 = !DILocation(line: 327, column: 19, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 327, column: 6)
!3115 = !DILocation(line: 327, column: 22, scope: !3114)
!3116 = !DILocation(line: 327, column: 33, scope: !3114)
!3117 = !DILocation(line: 327, column: 50, scope: !3114)
!3118 = !DILocation(line: 327, column: 6, scope: !3018)
!3119 = !DILocation(line: 338, column: 9, scope: !3018)
!3120 = !DILocation(line: 341, column: 2, scope: !3018)
!3121 = !DILocation(line: 472, column: 8, scope: !3067)
!3122 = !DILocation(line: 473, column: 14, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3124, file: !200, line: 473, column: 9)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !200, line: 472, column: 18)
!3125 = distinct !DILexicalBlock(scope: !3067, file: !200, line: 472, column: 8)
!3126 = !DILocation(line: 473, column: 9, scope: !3124)
!3127 = !DILocation(line: 479, column: 5, scope: !3124)
!3128 = !DILocation(line: 468, column: 9, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3067, file: !200, line: 468, column: 8)
!3130 = !DILocation(line: 468, column: 8, scope: !3129)
!3131 = !DILocation(line: 468, column: 15, scope: !3129)
!3132 = !DILocation(line: 468, column: 8, scope: !3067)
!3133 = distinct !{!3133, !3134, !3135}
!3134 = !DILocation(line: 343, column: 2, scope: !3018)
!3135 = !DILocation(line: 712, column: 2, scope: !3018)
!3136 = !DILocation(line: 481, column: 4, scope: !3067)
!3137 = !DILocation(line: 484, column: 12, scope: !3066)
!3138 = !DILocation(line: 485, column: 5, scope: !3066)
!3139 = !DILocation(line: 505, column: 5, scope: !3066)
!3140 = !DILocation(line: 518, column: 5, scope: !3066)
!3141 = !DILocation(line: 523, column: 5, scope: !3066)
!3142 = !DILocation(line: 532, column: 9, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3066, file: !200, line: 532, column: 9)
!3144 = !DILocation(line: 532, column: 17, scope: !3143)
!3145 = !DILocation(line: 532, column: 9, scope: !3066)
!3146 = !DILocation(line: 533, column: 10, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3148, file: !200, line: 533, column: 10)
!3148 = distinct !DILexicalBlock(scope: !3143, file: !200, line: 532, column: 25)
!3149 = !DILocation(line: 533, column: 18, scope: !3147)
!3150 = !DILocation(line: 0, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3065, file: !200, line: 569, column: 9)
!3152 = !DILocation(line: 0, scope: !3065)
!3153 = !DILocation(line: 579, column: 20, scope: !3065)
!3154 = !DILocation(line: 579, column: 11, scope: !3065)
!3155 = !DILocation(line: 580, column: 9, scope: !3065)
!3156 = !DILocation(line: 582, column: 21, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !200, line: 582, column: 10)
!3158 = distinct !DILexicalBlock(scope: !3159, file: !200, line: 580, column: 23)
!3159 = distinct !DILexicalBlock(scope: !3065, file: !200, line: 580, column: 9)
!3160 = !DILocation(line: 582, column: 28, scope: !3157)
!3161 = !DILocation(line: 582, column: 10, scope: !3158)
!3162 = !DILocation(line: 0, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3164, file: !200, line: 587, column: 17)
!3164 = distinct !DILexicalBlock(scope: !3158, file: !200, line: 585, column: 10)
!3165 = !DILocation(line: 593, column: 9, scope: !3065)
!3166 = !DILocation(line: 600, column: 5, scope: !3066)
!3167 = !DILocation(line: 605, column: 18, scope: !3068)
!3168 = !DILocation(line: 605, column: 9, scope: !3068)
!3169 = !DILocation(line: 608, column: 20, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3068, file: !200, line: 608, column: 7)
!3171 = !DILocation(line: 608, column: 23, scope: !3170)
!3172 = !DILocation(line: 608, column: 34, scope: !3170)
!3173 = !DILocation(line: 608, column: 41, scope: !3170)
!3174 = !DILocation(line: 608, column: 7, scope: !3068)
!3175 = !DILocation(line: 613, column: 7, scope: !3068)
!3176 = !DILocation(line: 614, column: 8, scope: !3074)
!3177 = !DILocation(line: 614, column: 4, scope: !3074)
!3178 = !DILocation(line: 256, column: 6, scope: !3018)
!3179 = !DILocation(line: 254, column: 15, scope: !3018)
!3180 = !DILocation(line: 320, column: 7, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3111, file: !200, line: 305, column: 20)
!3182 = !DILocation(line: 615, column: 1, scope: !3074)
!3183 = !DILocation(line: 616, column: 8, scope: !3074)
!3184 = !DILocation(line: 617, column: 5, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !200, line: 616, column: 22)
!3186 = distinct !DILexicalBlock(scope: !3074, file: !200, line: 616, column: 8)
!3187 = !DILocation(line: 617, column: 25, scope: !3185)
!3188 = !DILocation(line: 618, column: 4, scope: !3185)
!3189 = !DILocation(line: 620, column: 26, scope: !3074)
!3190 = !DILocation(line: 620, column: 29, scope: !3074)
!3191 = !DILocation(line: 620, column: 17, scope: !3074)
!3192 = !DILocation(line: 620, column: 43, scope: !3074)
!3193 = !DILocation(line: 0, scope: !3074)
!3194 = !DILocation(line: 623, column: 14, scope: !3079)
!3195 = !DILocation(line: 626, column: 26, scope: !3078)
!3196 = !DILocation(line: 626, column: 37, scope: !3078)
!3197 = !DILocation(line: 0, scope: !3078)
!3198 = !DILocation(line: 634, column: 15, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3078, file: !200, line: 634, column: 9)
!3200 = !DILocation(line: 635, column: 6, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !200, line: 635, column: 6)
!3202 = distinct !DILexicalBlock(scope: !3203, file: !200, line: 635, column: 6)
!3203 = distinct !DILexicalBlock(scope: !3204, file: !200, line: 635, column: 6)
!3204 = distinct !DILexicalBlock(scope: !3199, file: !200, line: 634, column: 44)
!3205 = !DILocation(line: 639, column: 15, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3078, file: !200, line: 639, column: 9)
!3207 = !DILocation(line: 639, column: 9, scope: !3078)
!3208 = !DILocation(line: 640, column: 6, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !200, line: 640, column: 6)
!3210 = distinct !DILexicalBlock(scope: !3211, file: !200, line: 640, column: 6)
!3211 = distinct !DILexicalBlock(scope: !3212, file: !200, line: 640, column: 6)
!3212 = distinct !DILexicalBlock(scope: !3206, file: !200, line: 639, column: 43)
!3213 = !DILocation(line: 644, column: 9, scope: !3078)
!3214 = !DILocation(line: 649, column: 27, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3216, file: !200, line: 644, column: 23)
!3216 = distinct !DILexicalBlock(scope: !3078, file: !200, line: 644, column: 9)
!3217 = !DILocation(line: 649, column: 6, scope: !3215)
!3218 = !DILocation(line: 649, column: 25, scope: !3215)
!3219 = !DILocation(line: 650, column: 27, scope: !3215)
!3220 = !DILocation(line: 650, column: 6, scope: !3215)
!3221 = !DILocation(line: 650, column: 25, scope: !3215)
!3222 = !DILocation(line: 651, column: 10, scope: !3215)
!3223 = !DILocation(line: 653, column: 26, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !200, line: 651, column: 17)
!3225 = distinct !DILexicalBlock(scope: !3215, file: !200, line: 651, column: 10)
!3226 = !DILocation(line: 654, column: 15, scope: !3224)
!3227 = !DILocation(line: 655, column: 6, scope: !3224)
!3228 = !DILocation(line: 656, column: 15, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3225, file: !200, line: 655, column: 13)
!3230 = !DILocation(line: 658, column: 16, scope: !3216)
!3231 = !DILocation(line: 663, column: 10, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !200, line: 658, column: 23)
!3233 = distinct !DILexicalBlock(scope: !3216, file: !200, line: 658, column: 16)
!3234 = !DILocation(line: 664, column: 5, scope: !3232)
!3235 = !DILocation(line: 664, column: 16, scope: !3233)
!3236 = !DILocation(line: 669, column: 10, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 664, column: 28)
!3238 = distinct !DILexicalBlock(scope: !3233, file: !200, line: 664, column: 16)
!3239 = !DILocation(line: 670, column: 5, scope: !3237)
!3240 = !DILocation(line: 675, column: 13, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 670, column: 12)
!3242 = !DILocation(line: 675, column: 27, scope: !3241)
!3243 = !DILocation(line: 675, column: 10, scope: !3241)
!3244 = !DILocation(line: 678, column: 10, scope: !3078)
!3245 = !DILocation(line: 680, column: 8, scope: !3074)
!3246 = !DILocation(line: 683, column: 14, scope: !3075)
!3247 = !DILocation(line: 684, column: 12, scope: !3081)
!3248 = !DILocation(line: 0, scope: !3081)
!3249 = !DILocation(line: 686, column: 8, scope: !3081)
!3250 = !DILocation(line: 687, column: 5, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !200, line: 686, column: 22)
!3252 = distinct !DILexicalBlock(scope: !3081, file: !200, line: 686, column: 8)
!3253 = !DILocation(line: 687, column: 17, scope: !3251)
!3254 = !DILocation(line: 688, column: 4, scope: !3251)
!3255 = !DILocation(line: 698, column: 18, scope: !3087)
!3256 = !DILocation(line: 0, scope: !3087)
!3257 = !DILocation(line: 700, column: 8, scope: !3087)
!3258 = !DILocation(line: 704, column: 6, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !200, line: 703, column: 12)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !200, line: 701, column: 9)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !200, line: 700, column: 22)
!3262 = distinct !DILexicalBlock(scope: !3087, file: !200, line: 700, column: 8)
!3263 = !DILocation(line: 704, column: 24, scope: !3259)
!3264 = !DILocation(line: 706, column: 4, scope: !3261)
!3265 = !DILocation(line: 709, column: 4, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 709, column: 4)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 709, column: 4)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !200, line: 709, column: 4)
!3269 = distinct !DILexicalBlock(scope: !3088, file: !200, line: 708, column: 10)
!3270 = !DILocation(line: 0, scope: !3082)
!3271 = !DILocation(line: 0, scope: !3068)
!3272 = !DILocation(line: 720, column: 6, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 720, column: 6)
!3274 = !DILocation(line: 720, column: 17, scope: !3273)
!3275 = !DILocation(line: 720, column: 31, scope: !3273)
!3276 = !DILocation(line: 720, column: 6, scope: !3018)
!3277 = !DILocation(line: 721, column: 3, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !200, line: 721, column: 3)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 721, column: 3)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !200, line: 721, column: 3)
!3281 = distinct !DILexicalBlock(scope: !3273, file: !200, line: 720, column: 38)
!3282 = !DILocation(line: 729, column: 6, scope: !3018)
!3283 = !DILocation(line: 730, column: 21, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !200, line: 729, column: 20)
!3285 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 729, column: 6)
!3286 = !DILocation(line: 730, column: 27, scope: !3284)
!3287 = !DILocation(line: 730, column: 3, scope: !3284)
!3288 = !DILocation(line: 737, column: 22, scope: !3018)
!3289 = !DILocation(line: 737, column: 20, scope: !3018)
!3290 = !DILocation(line: 0, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 739, column: 6)
!3292 = !DILocation(line: 745, column: 17, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3291, file: !200, line: 743, column: 9)
!3294 = !DILocation(line: 745, column: 25, scope: !3293)
!3295 = !DILocation(line: 746, column: 17, scope: !3293)
!3296 = !DILocation(line: 746, column: 28, scope: !3293)
!3297 = !DILocation(line: 749, column: 29, scope: !3018)
!3298 = !DILocation(line: 749, column: 16, scope: !3018)
!3299 = !DILocation(line: 749, column: 27, scope: !3018)
!3300 = !DILocation(line: 756, column: 6, scope: !3094)
!3301 = !DILocation(line: 756, column: 6, scope: !3018)
!3302 = !DILocation(line: 757, column: 3, scope: !3092)
!3303 = !DILocation(line: 758, column: 10, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3090, file: !200, line: 758, column: 8)
!3305 = !DILocation(line: 758, column: 25, scope: !3304)
!3306 = !DILocation(line: 758, column: 8, scope: !3090)
!3307 = !DILocation(line: 0, scope: !3090)
!3308 = !DILocation(line: 765, column: 8, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3090, file: !200, line: 765, column: 8)
!3310 = !DILocation(line: 765, column: 19, scope: !3309)
!3311 = !DILocation(line: 765, column: 23, scope: !3309)
!3312 = !DILocation(line: 765, column: 8, scope: !3090)
!3313 = !DILocation(line: 762, column: 33, scope: !3090)
!3314 = !DILocation(line: 769, column: 8, scope: !3090)
!3315 = !DILocation(line: 769, column: 11, scope: !3090)
!3316 = !DILocation(line: 757, column: 27, scope: !3091)
!3317 = !DILocation(line: 757, column: 17, scope: !3091)
!3318 = distinct !{!3318, !3302, !3319}
!3319 = !DILocation(line: 770, column: 3, scope: !3092)
!3320 = !DILocation(line: 774, column: 16, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !200, line: 774, column: 2)
!3322 = distinct !DILexicalBlock(scope: !3018, file: !200, line: 774, column: 2)
!3323 = !DILocation(line: 774, column: 2, scope: !3322)
!3324 = !DILocation(line: 776, column: 16, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !200, line: 776, column: 7)
!3326 = distinct !DILexicalBlock(scope: !3321, file: !200, line: 774, column: 30)
!3327 = !DILocation(line: 776, column: 19, scope: !3325)
!3328 = !DILocation(line: 776, column: 34, scope: !3325)
!3329 = !DILocation(line: 776, column: 7, scope: !3326)
!3330 = !DILocation(line: 780, column: 7, scope: !3326)
!3331 = !DILocation(line: 782, column: 13, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3333, file: !200, line: 780, column: 19)
!3333 = distinct !DILexicalBlock(scope: !3326, file: !200, line: 780, column: 7)
!3334 = !DILocation(line: 782, column: 8, scope: !3332)
!3335 = !DILocation(line: 782, column: 11, scope: !3332)
!3336 = !DILocation(line: 783, column: 3, scope: !3332)
!3337 = !DILocation(line: 785, column: 26, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3333, file: !200, line: 783, column: 10)
!3339 = !DILocation(line: 785, column: 41, scope: !3338)
!3340 = !DILocation(line: 785, column: 24, scope: !3338)
!3341 = !DILocation(line: 785, column: 8, scope: !3338)
!3342 = !DILocation(line: 787, column: 52, scope: !3338)
!3343 = !DILocation(line: 789, column: 11, scope: !3338)
!3344 = !DILocation(line: 789, column: 21, scope: !3338)
!3345 = !DILocation(line: 0, scope: !3333)
!3346 = !DILocation(line: 793, column: 7, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3326, file: !200, line: 793, column: 7)
!3348 = !DILocation(line: 793, column: 18, scope: !3347)
!3349 = !DILocation(line: 793, column: 22, scope: !3347)
!3350 = !DILocation(line: 793, column: 29, scope: !3347)
!3351 = !DILocation(line: 793, column: 7, scope: !3326)
!3352 = !DILocation(line: 797, column: 12, scope: !3326)
!3353 = !DILocation(line: 797, column: 7, scope: !3326)
!3354 = !DILocation(line: 797, column: 10, scope: !3326)
!3355 = !DILocation(line: 799, column: 3, scope: !3326)
!3356 = !DILocation(line: 800, column: 7, scope: !3326)
!3357 = !DILocation(line: 801, column: 2, scope: !3326)
!3358 = !DILocation(line: 338, column: 4, scope: !3018)
!3359 = !DILocation(line: 774, column: 26, scope: !3321)
!3360 = distinct !{!3360, !3323, !3361}
!3361 = !DILocation(line: 801, column: 2, scope: !3322)
!3362 = !DILocation(line: 808, column: 9, scope: !3018)
!3363 = !DILocation(line: 808, column: 2, scope: !3018)
!3364 = !DILocation(line: 813, column: 1, scope: !3018)
!3365 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3366, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3368)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!145, !118}
!3368 = !{!3369}
!3369 = !DILocalVariable(name: "addr", arg: 1, scope: !3365, file: !200, line: 33, type: !118)
!3370 = !DILocation(line: 0, scope: !3365)
!3371 = !DILocation(line: 41, column: 9, scope: !3365)
!3372 = !DILocation(line: 41, column: 2, scope: !3365)
!3373 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3374, file: !3374, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3375)
!3374 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3375 = !{!3376}
!3376 = !DILocalVariable(name: "addr", arg: 1, scope: !3373, file: !3374, line: 24, type: !13)
!3377 = !DILocation(line: 0, scope: !3373)
!3378 = !DILocation(line: 49, column: 30, scope: !3373)
!3379 = !DILocation(line: 49, column: 57, scope: !3373)
!3380 = !DILocation(line: 49, column: 2, scope: !3373)
!3381 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3382, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3384)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!107, !106, !185, !152, !118, null}
!3384 = !{!3385, !3386, !3387, !3388, !3389, !3390}
!3385 = !DILocalVariable(name: "packaged", arg: 1, scope: !3381, file: !200, line: 815, type: !106)
!3386 = !DILocalVariable(name: "len", arg: 2, scope: !3381, file: !200, line: 815, type: !185)
!3387 = !DILocalVariable(name: "flags", arg: 3, scope: !3381, file: !200, line: 815, type: !152)
!3388 = !DILocalVariable(name: "format", arg: 4, scope: !3381, file: !200, line: 816, type: !118)
!3389 = !DILocalVariable(name: "ap", scope: !3381, file: !200, line: 818, type: !3021)
!3390 = !DILocalVariable(name: "ret", scope: !3381, file: !200, line: 819, type: !107)
!3391 = !DILocation(line: 0, scope: !3381)
!3392 = !DILocation(line: 818, column: 2, scope: !3381)
!3393 = !DILocation(line: 818, column: 10, scope: !3381)
!3394 = !DILocation(line: 821, column: 2, scope: !3381)
!3395 = !DILocation(line: 822, column: 8, scope: !3381)
!3396 = !DILocation(line: 823, column: 2, scope: !3381)
!3397 = !DILocation(line: 825, column: 1, scope: !3381)
!3398 = !DILocation(line: 824, column: 2, scope: !3381)
!3399 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3400, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3410)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!107, !3402, !3406, !106, !106}
!3402 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3054, line: 297, baseType: !3403)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 32)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{!107, null}
!3406 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3054, line: 328, baseType: !3407)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 32)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!107, !3402, !106, !118, !3021}
!3410 = !{!3411, !3412, !3413, !3414, !3415, !3416, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429}
!3411 = !DILocalVariable(name: "out", arg: 1, scope: !3399, file: !200, line: 827, type: !3402)
!3412 = !DILocalVariable(name: "formatter", arg: 2, scope: !3399, file: !200, line: 828, type: !3406)
!3413 = !DILocalVariable(name: "ctx", arg: 3, scope: !3399, file: !200, line: 829, type: !106)
!3414 = !DILocalVariable(name: "packaged", arg: 4, scope: !3399, file: !200, line: 829, type: !106)
!3415 = !DILocalVariable(name: "buf", scope: !3399, file: !200, line: 831, type: !194)
!3416 = !DILocalVariable(name: "hdr", scope: !3399, file: !200, line: 832, type: !3417)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 32)
!3418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3054, line: 96, size: 64, elements: !3419)
!3419 = !{!3420, !3421}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3418, file: !3054, line: 98, baseType: !3053, size: 32)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3418, file: !3054, line: 101, baseType: !193, size: 32, offset: 32)
!3422 = !DILocalVariable(name: "s", scope: !3399, file: !200, line: 833, type: !193)
!3423 = !DILocalVariable(name: "ps", scope: !3399, file: !200, line: 833, type: !192)
!3424 = !DILocalVariable(name: "i", scope: !3399, file: !200, line: 834, type: !32)
!3425 = !DILocalVariable(name: "args_size", scope: !3399, file: !200, line: 834, type: !32)
!3426 = !DILocalVariable(name: "s_nbr", scope: !3399, file: !200, line: 834, type: !32)
!3427 = !DILocalVariable(name: "ros_nbr", scope: !3399, file: !200, line: 834, type: !32)
!3428 = !DILocalVariable(name: "rws_nbr", scope: !3399, file: !200, line: 834, type: !32)
!3429 = !DILocalVariable(name: "s_idx", scope: !3399, file: !200, line: 834, type: !32)
!3430 = !DILocation(line: 0, scope: !3399)
!3431 = !DILocation(line: 836, column: 10, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3399, file: !200, line: 836, column: 6)
!3433 = !DILocation(line: 836, column: 6, scope: !3399)
!3434 = !DILocation(line: 842, column: 28, scope: !3399)
!3435 = !DILocation(line: 842, column: 14, scope: !3399)
!3436 = !DILocation(line: 852, column: 16, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !200, line: 852, column: 2)
!3438 = distinct !DILexicalBlock(scope: !3399, file: !200, line: 852, column: 2)
!3439 = !DILocation(line: 852, column: 2, scope: !3438)
!3440 = !DILocation(line: 841, column: 28, scope: !3399)
!3441 = !DILocation(line: 841, column: 14, scope: !3399)
!3442 = !DILocation(line: 841, column: 32, scope: !3399)
!3443 = !DILocation(line: 847, column: 19, scope: !3399)
!3444 = !DILocation(line: 843, column: 28, scope: !3399)
!3445 = !DILocation(line: 843, column: 14, scope: !3399)
!3446 = !DILocation(line: 847, column: 31, scope: !3399)
!3447 = !DILocation(line: 844, column: 28, scope: !3399)
!3448 = !DILocation(line: 844, column: 14, scope: !3399)
!3449 = !DILocation(line: 847, column: 45, scope: !3399)
!3450 = !DILocation(line: 847, column: 41, scope: !3399)
!3451 = !DILocation(line: 854, column: 24, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3437, file: !200, line: 852, column: 30)
!3453 = !DILocation(line: 854, column: 11, scope: !3452)
!3454 = !DILocation(line: 855, column: 30, scope: !3452)
!3455 = !DILocation(line: 855, column: 22, scope: !3452)
!3456 = !DILocation(line: 855, column: 8, scope: !3452)
!3457 = !DILocation(line: 857, column: 7, scope: !3452)
!3458 = !DILocation(line: 859, column: 8, scope: !3452)
!3459 = !DILocation(line: 859, column: 18, scope: !3452)
!3460 = !DILocation(line: 859, column: 5, scope: !3452)
!3461 = !DILocation(line: 852, column: 26, scope: !3437)
!3462 = distinct !{!3462, !3439, !3463}
!3463 = !DILocation(line: 860, column: 2, scope: !3438)
!3464 = !DILocation(line: 863, column: 6, scope: !3399)
!3465 = !DILocation(line: 866, column: 56, scope: !3399)
!3466 = !DILocation(line: 866, column: 9, scope: !3399)
!3467 = !DILocation(line: 866, column: 2, scope: !3399)
!3468 = !DILocation(line: 867, column: 1, scope: !3399)
!3469 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3470, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3472)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!107, !3402, !3406, !106, !118, !106}
!3472 = !{!3473, !3474, !3475, !3476, !3477, !3478}
!3473 = !DILocalVariable(name: "out", arg: 1, scope: !3469, file: !200, line: 179, type: !3402)
!3474 = !DILocalVariable(name: "formatter", arg: 2, scope: !3469, file: !200, line: 180, type: !3406)
!3475 = !DILocalVariable(name: "ctx", arg: 3, scope: !3469, file: !200, line: 181, type: !106)
!3476 = !DILocalVariable(name: "fmt", arg: 4, scope: !3469, file: !200, line: 182, type: !118)
!3477 = !DILocalVariable(name: "buf", arg: 5, scope: !3469, file: !200, line: 182, type: !106)
!3478 = !DILocalVariable(name: "u", scope: !3469, file: !200, line: 187, type: !3479)
!3479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3469, file: !200, line: 184, size: 32, elements: !3480)
!3480 = !{!3481, !3482}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3479, file: !200, line: 185, baseType: !3021, size: 32)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3479, file: !200, line: 186, baseType: !106, size: 32)
!3483 = !DILocation(line: 0, scope: !3469)
!3484 = !DILocation(line: 191, column: 9, scope: !3469)
!3485 = !DILocation(line: 191, column: 2, scope: !3469)
!3486 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3487, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3489)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!145, !118, !107}
!3489 = !{!3490, !3491, !3492, !3493, !3494}
!3490 = !DILocalVariable(name: "fmt", arg: 1, scope: !3486, file: !200, line: 881, type: !118)
!3491 = !DILocalVariable(name: "n", arg: 2, scope: !3486, file: !200, line: 881, type: !107)
!3492 = !DILocalVariable(name: "c", scope: !3486, file: !200, line: 883, type: !120)
!3493 = !DILocalVariable(name: "mod", scope: !3486, file: !200, line: 884, type: !145)
!3494 = !DILocalVariable(name: "cnt", scope: !3486, file: !200, line: 885, type: !107)
!3495 = !DILocation(line: 0, scope: !3486)
!3496 = !DILocation(line: 887, column: 14, scope: !3486)
!3497 = !DILocation(line: 887, column: 22, scope: !3486)
!3498 = !DILocation(line: 887, column: 2, scope: !3486)
!3499 = !DILocation(line: 887, column: 18, scope: !3486)
!3500 = !DILocation(line: 888, column: 7, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3486, file: !200, line: 887, column: 31)
!3502 = !DILocation(line: 889, column: 12, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !200, line: 889, column: 8)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !200, line: 888, column: 12)
!3505 = distinct !DILexicalBlock(scope: !3501, file: !200, line: 888, column: 7)
!3506 = !DILocation(line: 889, column: 8, scope: !3504)
!3507 = !DILocation(line: 890, column: 11, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !200, line: 890, column: 9)
!3509 = distinct !DILexicalBlock(scope: !3503, file: !200, line: 889, column: 18)
!3510 = !DILocation(line: 890, column: 9, scope: !3509)
!3511 = !DILocation(line: 892, column: 16, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3508, file: !200, line: 892, column: 16)
!3513 = !DILocation(line: 892, column: 16, scope: !3508)
!3514 = !DILocation(line: 895, column: 15, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3503, file: !200, line: 895, column: 15)
!3516 = !DILocation(line: 895, column: 15, scope: !3503)
!3517 = !DILocation(line: 900, column: 9, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3501, file: !200, line: 900, column: 7)
!3519 = !DILocation(line: 900, column: 7, scope: !3501)
!3520 = distinct !{!3520, !3498, !3521}
!3521 = !DILocation(line: 903, column: 2, scope: !3486)
!3522 = !DILocation(line: 906, column: 1, scope: !3486)
!3523 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3524, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3526)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!145, !120}
!3526 = !{!3527}
!3527 = !DILocalVariable(name: "c", arg: 1, scope: !3523, file: !200, line: 873, type: !120)
!3528 = !DILocation(line: 0, scope: !3523)
!3529 = !DILocation(line: 875, column: 19, scope: !3523)
!3530 = !DILocation(line: 875, column: 2, scope: !3523)
!3531 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3532, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3538)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!107, !106, !185, !3534, !106, !152, !2557, !185}
!3534 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3054, line: 308, baseType: !3535)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 32)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!107, !13, !185, !106}
!3538 = !{!3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3556, !3557, !3558, !3559, !3560, !3566, !3569, !3570, !3571, !3573, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3589, !3592, !3593, !3594, !3595, !3596, !3597, !3599, !3602, !3603, !3604}
!3539 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3531, file: !200, line: 908, type: !106)
!3540 = !DILocalVariable(name: "in_len", arg: 2, scope: !3531, file: !200, line: 909, type: !185)
!3541 = !DILocalVariable(name: "cb", arg: 3, scope: !3531, file: !200, line: 910, type: !3534)
!3542 = !DILocalVariable(name: "ctx", arg: 4, scope: !3531, file: !200, line: 911, type: !106)
!3543 = !DILocalVariable(name: "flags", arg: 5, scope: !3531, file: !200, line: 912, type: !152)
!3544 = !DILocalVariable(name: "strl", arg: 6, scope: !3531, file: !200, line: 913, type: !2557)
!3545 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3531, file: !200, line: 914, type: !185)
!3546 = !DILocalVariable(name: "buf", scope: !3531, file: !200, line: 918, type: !194)
!3547 = !DILocalVariable(name: "buf32", scope: !3531, file: !200, line: 919, type: !1403)
!3548 = !DILocalVariable(name: "args_size", scope: !3531, file: !200, line: 920, type: !32)
!3549 = !DILocalVariable(name: "ros_nbr", scope: !3531, file: !200, line: 920, type: !32)
!3550 = !DILocalVariable(name: "rws_nbr", scope: !3531, file: !200, line: 920, type: !32)
!3551 = !DILocalVariable(name: "fmt_present", scope: !3531, file: !200, line: 921, type: !145)
!3552 = !DILocalVariable(name: "rw_cpy", scope: !3531, file: !200, line: 922, type: !145)
!3553 = !DILocalVariable(name: "ro_cpy", scope: !3531, file: !200, line: 923, type: !145)
!3554 = !DILocalVariable(name: "in_desc", scope: !3531, file: !200, line: 924, type: !3555)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 32)
!3556 = !DILocalVariable(name: "out_len", scope: !3531, file: !200, line: 960, type: !107)
!3557 = !DILocalVariable(name: "fmt", scope: !3531, file: !200, line: 965, type: !118)
!3558 = !DILocalVariable(name: "str_pos", scope: !3531, file: !200, line: 966, type: !194)
!3559 = !DILocalVariable(name: "strl_cnt", scope: !3531, file: !200, line: 967, type: !185)
!3560 = !DILocalVariable(name: "i", scope: !3561, file: !200, line: 973, type: !107)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !200, line: 973, column: 4)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !200, line: 972, column: 15)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !200, line: 972, column: 7)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !200, line: 970, column: 18)
!3565 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 970, column: 6)
!3566 = !DILocalVariable(name: "str", scope: !3567, file: !200, line: 974, type: !118)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !200, line: 973, column: 38)
!3568 = distinct !DILexicalBlock(scope: !3561, file: !200, line: 973, column: 4)
!3569 = !DILocalVariable(name: "len", scope: !3567, file: !200, line: 975, type: !107)
!3570 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3564, file: !200, line: 990, type: !145)
!3571 = !DILocalVariable(name: "i", scope: !3572, file: !200, line: 995, type: !107)
!3572 = distinct !DILexicalBlock(scope: !3564, file: !200, line: 995, column: 3)
!3573 = !DILocalVariable(name: "arg_idx", scope: !3574, file: !200, line: 996, type: !195)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !200, line: 995, column: 37)
!3575 = distinct !DILexicalBlock(scope: !3572, file: !200, line: 995, column: 3)
!3576 = !DILocalVariable(name: "arg_pos", scope: !3574, file: !200, line: 997, type: !195)
!3577 = !DILocalVariable(name: "str", scope: !3574, file: !200, line: 998, type: !118)
!3578 = !DILocalVariable(name: "is_ro", scope: !3574, file: !200, line: 999, type: !145)
!3579 = !DILocalVariable(name: "len", scope: !3574, file: !200, line: 1000, type: !107)
!3580 = !DILocalVariable(name: "out_desc", scope: !3531, file: !200, line: 1038, type: !3057)
!3581 = !DILocalVariable(name: "cpy_str_pos", scope: !3531, file: !200, line: 1040, type: !3039)
!3582 = !DILocalVariable(name: "keep_str_pos", scope: !3531, file: !200, line: 1042, type: !3039)
!3583 = !DILocalVariable(name: "scpy_cnt", scope: !3531, file: !200, line: 1043, type: !195)
!3584 = !DILocalVariable(name: "keep_cnt", scope: !3531, file: !200, line: 1044, type: !195)
!3585 = !DILocalVariable(name: "dst", scope: !3531, file: !200, line: 1045, type: !194)
!3586 = !DILocalVariable(name: "rv", scope: !3531, file: !200, line: 1046, type: !107)
!3587 = !DILocalVariable(name: "i", scope: !3588, file: !200, line: 1074, type: !107)
!3588 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 1074, column: 2)
!3589 = !DILocalVariable(name: "arg_idx", scope: !3590, file: !200, line: 1075, type: !195)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !200, line: 1074, column: 36)
!3591 = distinct !DILexicalBlock(scope: !3588, file: !200, line: 1074, column: 2)
!3592 = !DILocalVariable(name: "arg_pos", scope: !3590, file: !200, line: 1076, type: !195)
!3593 = !DILocalVariable(name: "str", scope: !3590, file: !200, line: 1077, type: !118)
!3594 = !DILocalVariable(name: "is_ro", scope: !3590, file: !200, line: 1078, type: !145)
!3595 = !DILocalVariable(name: "in_desc_backup", scope: !3531, file: !200, line: 1114, type: !3057)
!3596 = !DILocalVariable(name: "strs_len", scope: !3531, file: !200, line: 1134, type: !185)
!3597 = !DILocalVariable(name: "i", scope: !3598, file: !200, line: 1143, type: !107)
!3598 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 1143, column: 2)
!3599 = !DILocalVariable(name: "loc", scope: !3600, file: !200, line: 1144, type: !195)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !200, line: 1143, column: 37)
!3601 = distinct !DILexicalBlock(scope: !3598, file: !200, line: 1143, column: 2)
!3602 = !DILocalVariable(name: "str", scope: !3600, file: !200, line: 1145, type: !118)
!3603 = !DILocalVariable(name: "str_len", scope: !3600, file: !200, line: 1146, type: !197)
!3604 = !DILabel(scope: !3605, name: "calculate_string_length", file: !200, line: 1021)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !200, line: 1020, column: 56)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !200, line: 1020, column: 15)
!3607 = distinct !DILexicalBlock(scope: !3574, file: !200, line: 1014, column: 8)
!3608 = !DILocation(line: 0, scope: !3531)
!3609 = !DILocation(line: 916, column: 2, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !200, line: 916, column: 2)
!3611 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 916, column: 2)
!3612 = !DILocation(line: 916, column: 2, scope: !3611)
!3613 = !DILocation(line: 916, column: 2, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3610, file: !200, line: 916, column: 2)
!3615 = !DILocation(line: 919, column: 20, scope: !3531)
!3616 = !DILocation(line: 921, column: 27, scope: !3531)
!3617 = !DILocation(line: 921, column: 21, scope: !3531)
!3618 = !DILocation(line: 926, column: 18, scope: !3531)
!3619 = !DILocation(line: 926, column: 11, scope: !3531)
!3620 = !DILocation(line: 926, column: 34, scope: !3531)
!3621 = !DILocation(line: 931, column: 21, scope: !3531)
!3622 = !DILocation(line: 931, column: 12, scope: !3531)
!3623 = !DILocation(line: 932, column: 11, scope: !3531)
!3624 = !DILocation(line: 932, column: 19, scope: !3531)
!3625 = !DILocation(line: 938, column: 21, scope: !3531)
!3626 = !DILocation(line: 938, column: 12, scope: !3531)
!3627 = !DILocation(line: 939, column: 19, scope: !3531)
!3628 = !DILocation(line: 939, column: 23, scope: !3531)
!3629 = !DILocation(line: 946, column: 14, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 946, column: 6)
!3631 = !DILocation(line: 947, column: 7, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !200, line: 947, column: 7)
!3633 = distinct !DILexicalBlock(scope: !3630, file: !200, line: 946, column: 26)
!3634 = !DILocation(line: 947, column: 7, scope: !3633)
!3635 = !DILocation(line: 948, column: 4, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3632, file: !200, line: 947, column: 11)
!3637 = !DILocation(line: 949, column: 3, scope: !3636)
!3638 = !DILocation(line: 958, column: 23, scope: !3531)
!3639 = !DILocation(line: 958, column: 14, scope: !3531)
!3640 = !DILocation(line: 958, column: 27, scope: !3531)
!3641 = !DILocation(line: 965, column: 41, scope: !3531)
!3642 = !DILocation(line: 965, column: 20, scope: !3531)
!3643 = !DILocation(line: 966, column: 22, scope: !3531)
!3644 = !DILocation(line: 970, column: 9, scope: !3565)
!3645 = !DILocation(line: 970, column: 6, scope: !3531)
!3646 = !DILocation(line: 972, column: 7, scope: !3564)
!3647 = !DILocation(line: 0, scope: !3561)
!3648 = !DILocation(line: 973, column: 4, scope: !3561)
!3649 = !DILocation(line: 974, column: 46, scope: !3567)
!3650 = !DILocation(line: 974, column: 40, scope: !3567)
!3651 = !DILocation(line: 974, column: 23, scope: !3567)
!3652 = !DILocation(line: 0, scope: !3567)
!3653 = !DILocation(line: 975, column: 15, scope: !3567)
!3654 = !DILocation(line: 978, column: 14, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3567, file: !200, line: 978, column: 9)
!3656 = !DILocation(line: 979, column: 25, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3655, file: !200, line: 978, column: 38)
!3658 = !DILocation(line: 979, column: 19, scope: !3657)
!3659 = !DILocation(line: 979, column: 6, scope: !3657)
!3660 = !DILocation(line: 979, column: 23, scope: !3657)
!3661 = !DILocation(line: 980, column: 5, scope: !3657)
!3662 = !DILocation(line: 981, column: 13, scope: !3567)
!3663 = !DILocation(line: 982, column: 12, scope: !3567)
!3664 = !DILocation(line: 973, column: 34, scope: !3568)
!3665 = !DILocation(line: 973, column: 22, scope: !3568)
!3666 = distinct !{!3666, !3648, !3667}
!3667 = !DILocation(line: 983, column: 4, scope: !3561)
!3668 = !DILocation(line: 985, column: 16, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !200, line: 985, column: 8)
!3670 = distinct !DILexicalBlock(scope: !3563, file: !200, line: 984, column: 10)
!3671 = !DILocation(line: 967, column: 9, scope: !3531)
!3672 = !DILocation(line: 971, column: 11, scope: !3564)
!3673 = !DILocation(line: 0, scope: !3564)
!3674 = !DILocation(line: 0, scope: !3572)
!3675 = !DILocation(line: 995, column: 21, scope: !3575)
!3676 = !DILocation(line: 995, column: 3, scope: !3572)
!3677 = !DILocation(line: 990, column: 34, scope: !3564)
!3678 = !DILocation(line: 990, column: 26, scope: !3564)
!3679 = !DILocation(line: 996, column: 30, scope: !3574)
!3680 = !DILocation(line: 0, scope: !3574)
!3681 = !DILocation(line: 997, column: 30, scope: !3574)
!3682 = !DILocation(line: 997, column: 22, scope: !3574)
!3683 = !DILocation(line: 998, column: 39, scope: !3574)
!3684 = !DILocation(line: 998, column: 22, scope: !3574)
!3685 = !DILocation(line: 999, column: 17, scope: !3574)
!3686 = !DILocation(line: 1002, column: 20, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3574, file: !200, line: 1002, column: 8)
!3688 = !DILocation(line: 996, column: 22, scope: !3574)
!3689 = !DILocation(line: 1002, column: 35, scope: !3687)
!3690 = !DILocation(line: 1002, column: 23, scope: !3687)
!3691 = !DILocation(line: 1002, column: 8, scope: !3574)
!3692 = !DILocation(line: 1003, column: 5, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1003, column: 5)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !200, line: 1003, column: 5)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !200, line: 1003, column: 5)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1003, column: 5)
!3697 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1002, column: 45)
!3698 = !DILocation(line: 1010, column: 13, scope: !3697)
!3699 = !DILocation(line: 1011, column: 5, scope: !3697)
!3700 = !DILocation(line: 1014, column: 8, scope: !3574)
!3701 = !DILocation(line: 1015, column: 9, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3607, file: !200, line: 1014, column: 15)
!3703 = !DILocation(line: 1018, column: 14, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !200, line: 1017, column: 12)
!3705 = distinct !DILexicalBlock(scope: !3702, file: !200, line: 1015, column: 9)
!3706 = !DILocation(line: 1020, column: 4, scope: !3702)
!3707 = !DILocation(line: 1020, column: 15, scope: !3607)
!3708 = !DILocation(line: 1021, column: 1, scope: !3605)
!3709 = !DILocation(line: 1022, column: 11, scope: !3605)
!3710 = !DILocation(line: 1025, column: 14, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3605, file: !200, line: 1025, column: 9)
!3712 = !DILocation(line: 1026, column: 25, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1025, column: 38)
!3714 = !DILocation(line: 1026, column: 19, scope: !3713)
!3715 = !DILocation(line: 1026, column: 6, scope: !3713)
!3716 = !DILocation(line: 1026, column: 23, scope: !3713)
!3717 = !DILocation(line: 1027, column: 5, scope: !3713)
!3718 = !DILocation(line: 1031, column: 21, scope: !3605)
!3719 = !DILocation(line: 1031, column: 13, scope: !3605)
!3720 = !DILocation(line: 1032, column: 4, scope: !3605)
!3721 = !DILocation(line: 995, column: 33, scope: !3575)
!3722 = distinct !{!3722, !3676, !3723}
!3723 = !DILocation(line: 1033, column: 3, scope: !3572)
!3724 = !DILocation(line: 1040, column: 10, scope: !3531)
!3725 = !DILocation(line: 1042, column: 10, scope: !3531)
!3726 = !DILocation(line: 1052, column: 6, scope: !3531)
!3727 = !DILocation(line: 1055, column: 9, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !200, line: 1052, column: 14)
!3729 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 1052, column: 6)
!3730 = !DILocation(line: 1056, column: 2, scope: !3728)
!3731 = !DILocation(line: 1056, column: 21, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3729, file: !200, line: 1056, column: 13)
!3733 = !DILocation(line: 1066, column: 3, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !200, line: 1065, column: 11)
!3735 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 1065, column: 6)
!3736 = !DILocation(line: 1067, column: 2, scope: !3734)
!3737 = !DILocation(line: 1068, column: 10, scope: !3531)
!3738 = !DILocation(line: 0, scope: !3588)
!3739 = !DILocation(line: 1074, column: 20, scope: !3591)
!3740 = !DILocation(line: 1074, column: 2, scope: !3588)
!3741 = !DILocation(line: 1110, column: 24, scope: !3531)
!3742 = !DILocation(line: 1053, column: 12, scope: !3728)
!3743 = !DILocation(line: 1054, column: 12, scope: !3728)
!3744 = !DILocation(line: 1108, column: 30, scope: !3531)
!3745 = !DILocation(line: 1108, column: 40, scope: !3531)
!3746 = !DILocation(line: 1108, column: 38, scope: !3531)
!3747 = !DILocation(line: 1109, column: 31, scope: !3531)
!3748 = !DILocation(line: 1109, column: 24, scope: !3531)
!3749 = !DILocation(line: 1110, column: 31, scope: !3531)
!3750 = !DILocation(line: 1114, column: 31, scope: !3531)
!3751 = !DILocation(line: 1114, column: 48, scope: !3531)
!3752 = !DILocation(line: 1115, column: 13, scope: !3531)
!3753 = !DILocation(line: 1118, column: 7, scope: !3531)
!3754 = !DILocation(line: 1119, column: 9, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 1119, column: 6)
!3756 = !DILocation(line: 1119, column: 6, scope: !3531)
!3757 = !DILocation(line: 1075, column: 29, scope: !3590)
!3758 = !DILocation(line: 1075, column: 21, scope: !3590)
!3759 = !DILocation(line: 0, scope: !3590)
!3760 = !DILocation(line: 1076, column: 29, scope: !3590)
!3761 = !DILocation(line: 1076, column: 21, scope: !3590)
!3762 = !DILocation(line: 1077, column: 38, scope: !3590)
!3763 = !DILocation(line: 1077, column: 21, scope: !3590)
!3764 = !DILocation(line: 1078, column: 16, scope: !3590)
!3765 = !DILocation(line: 1080, column: 19, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3590, file: !200, line: 1080, column: 7)
!3767 = !DILocation(line: 1080, column: 34, scope: !3766)
!3768 = !DILocation(line: 1080, column: 22, scope: !3766)
!3769 = !DILocation(line: 1080, column: 7, scope: !3590)
!3770 = !DILocation(line: 1084, column: 7, scope: !3590)
!3771 = !DILocation(line: 1085, column: 8, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 1084, column: 14)
!3773 = distinct !DILexicalBlock(scope: !3590, file: !200, line: 1084, column: 7)
!3774 = !DILocation(line: 1086, column: 5, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !200, line: 1086, column: 5)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1086, column: 5)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !200, line: 1085, column: 49)
!3778 = distinct !DILexicalBlock(scope: !3772, file: !200, line: 1085, column: 8)
!3779 = !DILocation(line: 1086, column: 5, scope: !3776)
!3780 = !DILocation(line: 1086, column: 5, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3775, file: !200, line: 1086, column: 5)
!3782 = !DILocation(line: 1087, column: 25, scope: !3777)
!3783 = !DILocation(line: 1087, column: 5, scope: !3777)
!3784 = !DILocation(line: 1088, column: 4, scope: !3777)
!3785 = !DILocation(line: 1088, column: 15, scope: !3778)
!3786 = !DILocation(line: 1089, column: 5, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3788, file: !200, line: 1089, column: 5)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !200, line: 1089, column: 5)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !200, line: 1088, column: 61)
!3790 = distinct !DILexicalBlock(scope: !3778, file: !200, line: 1088, column: 15)
!3791 = !DILocation(line: 1089, column: 5, scope: !3788)
!3792 = !DILocation(line: 1089, column: 5, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3787, file: !200, line: 1089, column: 5)
!3794 = !DILocation(line: 1090, column: 26, scope: !3789)
!3795 = !DILocation(line: 1090, column: 5, scope: !3789)
!3796 = !DILocation(line: 1091, column: 4, scope: !3789)
!3797 = !DILocation(line: 1095, column: 8, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 1094, column: 10)
!3799 = !DILocation(line: 1096, column: 5, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !200, line: 1096, column: 5)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !200, line: 1096, column: 5)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !200, line: 1095, column: 49)
!3803 = distinct !DILexicalBlock(scope: !3798, file: !200, line: 1095, column: 8)
!3804 = !DILocation(line: 1096, column: 5, scope: !3801)
!3805 = !DILocation(line: 1096, column: 5, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3800, file: !200, line: 1096, column: 5)
!3807 = !DILocation(line: 1097, column: 25, scope: !3802)
!3808 = !DILocation(line: 1097, column: 5, scope: !3802)
!3809 = !DILocation(line: 1098, column: 4, scope: !3802)
!3810 = !DILocation(line: 1099, column: 5, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !200, line: 1099, column: 5)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !200, line: 1099, column: 5)
!3813 = distinct !DILexicalBlock(scope: !3803, file: !200, line: 1098, column: 11)
!3814 = !DILocation(line: 1099, column: 5, scope: !3812)
!3815 = !DILocation(line: 1099, column: 5, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3811, file: !200, line: 1099, column: 5)
!3817 = !DILocation(line: 1100, column: 26, scope: !3813)
!3818 = !DILocation(line: 1100, column: 5, scope: !3813)
!3819 = !DILocation(line: 1100, column: 30, scope: !3813)
!3820 = !DILocation(line: 1101, column: 26, scope: !3813)
!3821 = !DILocation(line: 1101, column: 5, scope: !3813)
!3822 = !DILocation(line: 0, scope: !3773)
!3823 = !DILocation(line: 1074, column: 32, scope: !3591)
!3824 = distinct !{!3824, !3740, !3825}
!3825 = !DILocation(line: 1104, column: 2, scope: !3588)
!3826 = !DILocation(line: 1124, column: 13, scope: !3531)
!3827 = !DILocation(line: 1127, column: 10, scope: !3531)
!3828 = !DILocation(line: 1127, column: 7, scope: !3531)
!3829 = !DILocation(line: 1128, column: 9, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 1128, column: 6)
!3831 = !DILocation(line: 1128, column: 6, scope: !3531)
!3832 = !DILocation(line: 1134, column: 27, scope: !3531)
!3833 = !DILocation(line: 1136, column: 7, scope: !3531)
!3834 = !DILocation(line: 1137, column: 9, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 1137, column: 6)
!3836 = !DILocation(line: 1137, column: 6, scope: !3531)
!3837 = !DILocation(line: 1131, column: 10, scope: !3531)
!3838 = !DILocation(line: 1140, column: 10, scope: !3531)
!3839 = !DILocation(line: 0, scope: !3598)
!3840 = !DILocation(line: 1143, column: 20, scope: !3601)
!3841 = !DILocation(line: 1143, column: 2, scope: !3598)
!3842 = !DILocation(line: 1144, column: 3, scope: !3600)
!3843 = !DILocation(line: 1144, column: 17, scope: !3600)
!3844 = !DILocation(line: 0, scope: !3600)
!3845 = !DILocation(line: 1144, column: 11, scope: !3600)
!3846 = !DILocation(line: 1145, column: 38, scope: !3600)
!3847 = !DILocation(line: 1145, column: 21, scope: !3600)
!3848 = !DILocation(line: 1146, column: 22, scope: !3600)
!3849 = !DILocation(line: 1146, column: 29, scope: !3600)
!3850 = !DILocation(line: 1148, column: 8, scope: !3600)
!3851 = !DILocation(line: 1149, column: 10, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3600, file: !200, line: 1149, column: 7)
!3853 = !DILocation(line: 1149, column: 7, scope: !3600)
!3854 = !DILocation(line: 1154, column: 8, scope: !3600)
!3855 = !DILocation(line: 1155, column: 10, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3600, file: !200, line: 1155, column: 7)
!3857 = !DILocation(line: 1155, column: 7, scope: !3600)
!3858 = !DILocation(line: 1159, column: 2, scope: !3601)
!3859 = !DILocation(line: 1152, column: 11, scope: !3600)
!3860 = !DILocation(line: 1158, column: 11, scope: !3600)
!3861 = !DILocation(line: 1143, column: 33, scope: !3601)
!3862 = distinct !{!3862, !3841, !3863}
!3863 = !DILocation(line: 1159, column: 2, scope: !3598)
!3864 = !DILocation(line: 1162, column: 8, scope: !3531)
!3865 = !DILocation(line: 1164, column: 2, scope: !3531)
!3866 = !DILocation(line: 1165, column: 1, scope: !3531)
!3867 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !3868, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3870)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!185, !106}
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3876, !3877}
!3871 = !DILocalVariable(name: "packaged", arg: 1, scope: !3867, file: !200, line: 196, type: !106)
!3872 = !DILocalVariable(name: "buf", scope: !3867, file: !200, line: 200, type: !194)
!3873 = !DILocalVariable(name: "start", scope: !3867, file: !200, line: 201, type: !194)
!3874 = !DILocalVariable(name: "args_size", scope: !3867, file: !200, line: 202, type: !32)
!3875 = !DILocalVariable(name: "s_nbr", scope: !3867, file: !200, line: 202, type: !32)
!3876 = !DILocalVariable(name: "ros_nbr", scope: !3867, file: !200, line: 202, type: !32)
!3877 = !DILocalVariable(name: "i", scope: !3878, file: !200, line: 215, type: !107)
!3878 = distinct !DILexicalBlock(scope: !3867, file: !200, line: 215, column: 2)
!3879 = !DILocation(line: 0, scope: !3867)
!3880 = !DILocation(line: 198, column: 2, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !200, line: 198, column: 2)
!3882 = distinct !DILexicalBlock(scope: !3867, file: !200, line: 198, column: 2)
!3883 = !DILocation(line: 198, column: 2, scope: !3882)
!3884 = !DILocation(line: 198, column: 2, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !200, line: 198, column: 2)
!3886 = !DILocation(line: 204, column: 14, scope: !3867)
!3887 = !DILocation(line: 204, column: 21, scope: !3867)
!3888 = !DILocation(line: 205, column: 14, scope: !3867)
!3889 = !DILocation(line: 206, column: 14, scope: !3867)
!3890 = !DILocation(line: 209, column: 6, scope: !3867)
!3891 = !DILocation(line: 212, column: 6, scope: !3867)
!3892 = !DILocation(line: 0, scope: !3878)
!3893 = !DILocation(line: 215, column: 20, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3878, file: !200, line: 215, column: 2)
!3895 = !DILocation(line: 215, column: 2, scope: !3878)
!3896 = !DILocation(line: 220, column: 33, scope: !3867)
!3897 = !DILocation(line: 220, column: 2, scope: !3867)
!3898 = !DILocation(line: 216, column: 6, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3894, file: !200, line: 215, column: 34)
!3900 = !DILocation(line: 217, column: 10, scope: !3899)
!3901 = !DILocation(line: 217, column: 36, scope: !3899)
!3902 = !DILocation(line: 217, column: 7, scope: !3899)
!3903 = !DILocation(line: 215, column: 30, scope: !3894)
!3904 = distinct !{!3904, !3895, !3905}
!3905 = !DILocation(line: 218, column: 2, scope: !3878)
!3906 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !3907, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3909)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!107, !3534, !106, !118, !197}
!3909 = !{!3910, !3911, !3912, !3913}
!3910 = !DILocalVariable(name: "cb", arg: 1, scope: !3906, file: !200, line: 223, type: !3534)
!3911 = !DILocalVariable(name: "ctx", arg: 2, scope: !3906, file: !200, line: 223, type: !106)
!3912 = !DILocalVariable(name: "str", arg: 3, scope: !3906, file: !200, line: 223, type: !118)
!3913 = !DILocalVariable(name: "strl", arg: 4, scope: !3906, file: !200, line: 223, type: !197)
!3914 = !DILocation(line: 0, scope: !3906)
!3915 = !DILocation(line: 225, column: 9, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3906, file: !200, line: 225, column: 6)
!3917 = !DILocation(line: 225, column: 6, scope: !3906)
!3918 = !DILocation(line: 226, column: 14, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !200, line: 225, column: 18)
!3920 = !DILocation(line: 226, column: 12, scope: !3919)
!3921 = !DILocation(line: 226, column: 3, scope: !3919)
!3922 = !DILocation(line: 229, column: 14, scope: !3906)
!3923 = !DILocation(line: 229, column: 9, scope: !3906)
!3924 = !DILocation(line: 229, column: 27, scope: !3906)
!3925 = !DILocation(line: 229, column: 39, scope: !3906)
!3926 = !DILocation(line: 230, column: 17, scope: !3906)
!3927 = !DILocation(line: 230, column: 9, scope: !3906)
!3928 = !DILocation(line: 230, column: 2, scope: !3906)
!3929 = !DILocation(line: 231, column: 1, scope: !3906)
!3930 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3931)
!3931 = !{!3932}
!3932 = !DILocalVariable(name: "c", arg: 1, scope: !3930, file: !212, line: 45, type: !107)
!3933 = !DILocation(line: 0, scope: !3930)
!3934 = !DILocation(line: 50, column: 2, scope: !3930)
!3935 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !3936, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3938)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{null, !213}
!3938 = !{!3939}
!3939 = !DILocalVariable(name: "fn", arg: 1, scope: !3935, file: !212, line: 63, type: !213)
!3940 = !DILocation(line: 0, scope: !3935)
!3941 = !DILocation(line: 65, column: 12, scope: !3935)
!3942 = !DILocation(line: 66, column: 1, scope: !3935)
!3943 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !1949)
!3944 = !DILocation(line: 78, column: 9, scope: !3943)
!3945 = !DILocation(line: 78, column: 2, scope: !3943)
!3946 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !3947, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3955)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{null, !118, !3949}
!3949 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3022, line: 99, baseType: !3950)
!3950 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3022, line: 40, baseType: !3951)
!3951 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !3952)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3953)
!3953 = !{!3954}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3952, file: !212, line: 79, baseType: !106, size: 32)
!3955 = !{!3956, !3957, !3958}
!3956 = !DILocalVariable(name: "fmt", arg: 1, scope: !3946, file: !212, line: 113, type: !118)
!3957 = !DILocalVariable(name: "ap", arg: 2, scope: !3946, file: !212, line: 113, type: !3949)
!3958 = !DILocalVariable(name: "ctx", scope: !3959, file: !212, line: 121, type: !3961)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !212, line: 120, column: 27)
!3960 = distinct !DILexicalBlock(scope: !3946, file: !212, line: 120, column: 6)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !3962)
!3962 = !{!3963, !3964}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3961, file: !212, line: 85, baseType: !32, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3961, file: !212, line: 86, baseType: !3965, offset: 32)
!3965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !3966)
!3966 = !{!3967}
!3967 = !DISubrange(count: 0)
!3968 = !DILocation(line: 0, scope: !3946)
!3969 = !DILocation(line: 148, column: 3, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3960, file: !212, line: 138, column: 9)
!3971 = !DILocation(line: 155, column: 1, scope: !3946)
!3972 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !3973, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!107, !107, !106}
!3975 = !{!3976, !3977}
!3976 = !DILocalVariable(name: "c", arg: 1, scope: !3972, file: !212, line: 107, type: !107)
!3977 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3972, file: !212, line: 107, type: !106)
!3978 = !DILocation(line: 0, scope: !3972)
!3979 = !DILocation(line: 110, column: 9, scope: !3972)
!3980 = !DILocation(line: 110, column: 2, scope: !3972)
!3981 = distinct !DISubprogram(name: "cbvprintf", scope: !3054, file: !3054, line: 739, type: !3982, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3984)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!107, !3402, !106, !118, !3949}
!3984 = !{!3985, !3986, !3987, !3988}
!3985 = !DILocalVariable(name: "out", arg: 1, scope: !3981, file: !3054, line: 739, type: !3402)
!3986 = !DILocalVariable(name: "ctx", arg: 2, scope: !3981, file: !3054, line: 739, type: !106)
!3987 = !DILocalVariable(name: "format", arg: 3, scope: !3981, file: !3054, line: 739, type: !118)
!3988 = !DILocalVariable(name: "ap", arg: 4, scope: !3981, file: !3054, line: 739, type: !3949)
!3989 = !DILocation(line: 0, scope: !3981)
!3990 = !DILocation(line: 741, column: 9, scope: !3981)
!3991 = !DILocation(line: 741, column: 2, scope: !3981)
!3992 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !3993, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3995)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{null, !193, !185}
!3995 = !{!3996, !3997, !3998}
!3996 = !DILocalVariable(name: "c", arg: 1, scope: !3992, file: !212, line: 157, type: !193)
!3997 = !DILocalVariable(name: "n", arg: 2, scope: !3992, file: !212, line: 157, type: !185)
!3998 = !DILocalVariable(name: "i", scope: !3992, file: !212, line: 159, type: !185)
!3999 = !DILocation(line: 0, scope: !3992)
!4000 = !DILocation(line: 164, column: 16, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !212, line: 164, column: 2)
!4002 = distinct !DILexicalBlock(scope: !3992, file: !212, line: 164, column: 2)
!4003 = !DILocation(line: 164, column: 2, scope: !4002)
!4004 = !DILocation(line: 165, column: 3, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4001, file: !212, line: 164, column: 26)
!4006 = !DILocation(line: 165, column: 13, scope: !4005)
!4007 = !DILocation(line: 164, column: 22, scope: !4001)
!4008 = distinct !{!4008, !4003, !4009}
!4009 = !DILocation(line: 166, column: 2, scope: !4002)
!4010 = !DILocation(line: 171, column: 1, scope: !3992)
!4011 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4012, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4014)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{null, !118, null}
!4014 = !{!4015, !4016}
!4015 = !DILocalVariable(name: "fmt", arg: 1, scope: !4011, file: !212, line: 203, type: !118)
!4016 = !DILocalVariable(name: "ap", scope: !4011, file: !212, line: 205, type: !3949)
!4017 = !DILocation(line: 0, scope: !4011)
!4018 = !DILocation(line: 205, column: 2, scope: !4011)
!4019 = !DILocation(line: 205, column: 10, scope: !4011)
!4020 = !DILocation(line: 207, column: 2, scope: !4011)
!4021 = !DILocation(line: 209, column: 2, scope: !4011)
!4022 = !DILocation(line: 211, column: 2, scope: !4011)
!4023 = !DILocation(line: 212, column: 1, scope: !4011)
!4024 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4025, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4027)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!107, !193, !185, !118, null}
!4027 = !{!4028, !4029, !4030, !4031, !4032}
!4028 = !DILocalVariable(name: "str", arg: 1, scope: !4024, file: !212, line: 239, type: !193)
!4029 = !DILocalVariable(name: "size", arg: 2, scope: !4024, file: !212, line: 239, type: !185)
!4030 = !DILocalVariable(name: "fmt", arg: 3, scope: !4024, file: !212, line: 239, type: !118)
!4031 = !DILocalVariable(name: "ap", scope: !4024, file: !212, line: 241, type: !3949)
!4032 = !DILocalVariable(name: "ret", scope: !4024, file: !212, line: 242, type: !107)
!4033 = !DILocation(line: 0, scope: !4024)
!4034 = !DILocation(line: 241, column: 2, scope: !4024)
!4035 = !DILocation(line: 241, column: 10, scope: !4024)
!4036 = !DILocation(line: 244, column: 2, scope: !4024)
!4037 = !DILocation(line: 245, column: 8, scope: !4024)
!4038 = !DILocation(line: 246, column: 2, scope: !4024)
!4039 = !DILocation(line: 249, column: 1, scope: !4024)
!4040 = !DILocation(line: 248, column: 2, scope: !4024)
!4041 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4042, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4044)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!107, !193, !185, !118, !3949}
!4044 = !{!4045, !4046, !4047, !4048, !4049}
!4045 = !DILocalVariable(name: "str", arg: 1, scope: !4041, file: !212, line: 251, type: !193)
!4046 = !DILocalVariable(name: "size", arg: 2, scope: !4041, file: !212, line: 251, type: !185)
!4047 = !DILocalVariable(name: "fmt", arg: 3, scope: !4041, file: !212, line: 251, type: !118)
!4048 = !DILocalVariable(name: "ap", arg: 4, scope: !4041, file: !212, line: 251, type: !3949)
!4049 = !DILocalVariable(name: "ctx", scope: !4041, file: !212, line: 253, type: !4050)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4051)
!4051 = !{!4052, !4053, !4054}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4050, file: !212, line: 218, baseType: !193, size: 32)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4050, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4050, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4055 = !DILocation(line: 0, scope: !4041)
!4056 = !DILocation(line: 253, column: 2, scope: !4041)
!4057 = !DILocation(line: 253, column: 21, scope: !4041)
!4058 = !DILocation(line: 253, column: 27, scope: !4041)
!4059 = !DILocation(line: 255, column: 2, scope: !4041)
!4060 = !DILocation(line: 257, column: 10, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4041, file: !212, line: 257, column: 6)
!4062 = !DILocation(line: 257, column: 22, scope: !4061)
!4063 = !DILocation(line: 257, column: 16, scope: !4061)
!4064 = !DILocation(line: 257, column: 6, scope: !4041)
!4065 = !DILocation(line: 258, column: 3, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4061, file: !212, line: 257, column: 27)
!4067 = !DILocation(line: 258, column: 18, scope: !4066)
!4068 = !DILocation(line: 259, column: 2, scope: !4066)
!4069 = !DILocation(line: 262, column: 1, scope: !4041)
!4070 = !DILocation(line: 261, column: 2, scope: !4041)
!4071 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4072, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4075)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!107, !107, !4074}
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 32)
!4075 = !{!4076, !4077}
!4076 = !DILocalVariable(name: "c", arg: 1, scope: !4071, file: !212, line: 223, type: !107)
!4077 = !DILocalVariable(name: "ctx", arg: 2, scope: !4071, file: !212, line: 223, type: !4074)
!4078 = !DILocation(line: 0, scope: !4071)
!4079 = !DILocation(line: 225, column: 11, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4071, file: !212, line: 225, column: 6)
!4081 = !DILocation(line: 225, column: 15, scope: !4080)
!4082 = !DILocation(line: 0, scope: !4080)
!4083 = !DILocation(line: 225, column: 23, scope: !4080)
!4084 = !DILocation(line: 225, column: 45, scope: !4080)
!4085 = !DILocation(line: 225, column: 37, scope: !4080)
!4086 = !DILocation(line: 225, column: 6, scope: !4071)
!4087 = !DILocation(line: 226, column: 8, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4080, file: !212, line: 225, column: 50)
!4089 = !DILocation(line: 226, column: 13, scope: !4088)
!4090 = !DILocation(line: 227, column: 3, scope: !4088)
!4091 = !DILocation(line: 230, column: 29, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4071, file: !212, line: 230, column: 6)
!4093 = !DILocation(line: 230, column: 17, scope: !4092)
!4094 = !DILocation(line: 230, column: 6, scope: !4071)
!4095 = !DILocation(line: 231, column: 22, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4092, file: !212, line: 230, column: 34)
!4097 = !DILocation(line: 231, column: 3, scope: !4096)
!4098 = !DILocation(line: 231, column: 26, scope: !4096)
!4099 = !DILocation(line: 232, column: 2, scope: !4096)
!4100 = !DILocation(line: 233, column: 28, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4092, file: !212, line: 232, column: 9)
!4102 = !DILocation(line: 233, column: 22, scope: !4101)
!4103 = !DILocation(line: 233, column: 3, scope: !4101)
!4104 = !DILocation(line: 233, column: 26, scope: !4101)
!4105 = !DILocation(line: 237, column: 1, scope: !4071)
!4106 = distinct !DISubprogram(name: "z_thread_entry", scope: !4107, file: !4107, line: 30, type: !4108, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !4110)
!4107 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4108 = !DISubroutineType(types: !4109)
!4109 = !{null, !687, !106, !106, !106}
!4110 = !{!4111, !4112, !4113, !4114}
!4111 = !DILocalVariable(name: "entry", arg: 1, scope: !4106, file: !4107, line: 30, type: !687)
!4112 = !DILocalVariable(name: "p1", arg: 2, scope: !4106, file: !4107, line: 31, type: !106)
!4113 = !DILocalVariable(name: "p2", arg: 3, scope: !4106, file: !4107, line: 31, type: !106)
!4114 = !DILocalVariable(name: "p3", arg: 4, scope: !4106, file: !4107, line: 31, type: !106)
!4115 = !DILocation(line: 0, scope: !4106)
!4116 = !DILocation(line: 36, column: 2, scope: !4106)
!4117 = !DILocation(line: 38, column: 17, scope: !4106)
!4118 = !DILocation(line: 38, column: 2, scope: !4106)
!4119 = !DILocation(line: 45, column: 2, scope: !4106)
!4120 = distinct !DISubprogram(name: "k_current_get", scope: !804, file: !804, line: 530, type: !4121, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !1949)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!4123}
!4123 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !4124)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 32)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !4126)
!4126 = !{!4127, !4185, !4197, !4198, !4199, !4200, !4201, !4216}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4125, file: !716, line: 247, baseType: !4128, size: 384)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !4129)
!4129 = !{!4130, !4154, !4161, !4162, !4163, !4172, !4173, !4174}
!4130 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !716, line: 60, baseType: !4131, size: 64)
!4131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4128, file: !716, line: 60, size: 64, elements: !4132)
!4132 = !{!4133, !4148}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4131, file: !716, line: 61, baseType: !4134, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !4135)
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !4136)
!4136 = !{!4137, !4143}
!4137 = !DIDerivedType(tag: DW_TAG_member, scope: !4135, file: !726, line: 38, baseType: !4138, size: 32)
!4138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4135, file: !726, line: 38, size: 32, elements: !4139)
!4139 = !{!4140, !4142}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4138, file: !726, line: 39, baseType: !4141, size: 32)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 32)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4138, file: !726, line: 40, baseType: !4141, size: 32)
!4143 = !DIDerivedType(tag: DW_TAG_member, scope: !4135, file: !726, line: 42, baseType: !4144, size: 32, offset: 32)
!4144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4135, file: !726, line: 42, size: 32, elements: !4145)
!4145 = !{!4146, !4147}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4144, file: !726, line: 43, baseType: !4141, size: 32)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4144, file: !726, line: 44, baseType: !4141, size: 32)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4131, file: !716, line: 62, baseType: !4149, size: 64)
!4149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !4150)
!4150 = !{!4151}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4149, file: !742, line: 50, baseType: !4152, size: 64)
!4152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4153, size: 64, elements: !747)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 32)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4128, file: !716, line: 68, baseType: !4155, size: 32, offset: 64)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 32)
!4156 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !4157)
!4157 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !4158)
!4158 = !{!4159}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4157, file: !752, line: 232, baseType: !4160, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !4135)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4128, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4128, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!4163 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !716, line: 90, baseType: !4164, size: 16, offset: 112)
!4164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4128, file: !716, line: 90, size: 16, elements: !4165)
!4165 = !{!4166, !4171}
!4166 = !DIDerivedType(tag: DW_TAG_member, scope: !4164, file: !716, line: 91, baseType: !4167, size: 16)
!4167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4164, file: !716, line: 91, size: 16, elements: !4168)
!4168 = !{!4169, !4170}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4167, file: !716, line: 96, baseType: !766, size: 8)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4167, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4164, file: !716, line: 100, baseType: !197, size: 16)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4128, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4128, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4128, file: !716, line: 131, baseType: !4175, size: 192, offset: 192)
!4175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !4176)
!4176 = !{!4177, !4178, !4184}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4175, file: !752, line: 245, baseType: !4134, size: 64)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4175, file: !752, line: 246, baseType: !4179, size: 32, offset: 64)
!4179 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !4180)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 32)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{null, !4183}
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 32)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4175, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4125, file: !716, line: 250, baseType: !4186, size: 288, offset: 384)
!4186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !4187)
!4187 = !{!4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4186, file: !785, line: 26, baseType: !152, size: 32)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4186, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4186, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4186, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4186, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4186, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4186, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4186, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4186, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4125, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4125, file: !716, line: 256, baseType: !4156, size: 64, offset: 704)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4125, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4125, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4125, file: !716, line: 325, baseType: !4202, size: 32, offset: 1056)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 32)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !4204)
!4204 = !{!4205, !4211, !4212}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4203, file: !804, line: 5074, baseType: !4206, size: 96)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !4207)
!4207 = !{!4208, !4209, !4210}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4206, file: !808, line: 57, baseType: !811, size: 32)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4206, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4206, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4203, file: !804, line: 5075, baseType: !4156, size: 64, offset: 96)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4203, file: !804, line: 5076, baseType: !4213, size: 32, offset: 160)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !4214)
!4214 = !{!4215}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4213, file: !818, line: 52, baseType: !22, size: 32)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4125, file: !716, line: 343, baseType: !4217, size: 64, offset: 1088)
!4217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !4218)
!4218 = !{!4219, !4220}
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4217, file: !785, line: 63, baseType: !152, size: 32)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4217, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!4221 = !DILocation(line: 535, column: 9, scope: !4120)
!4222 = !DILocation(line: 535, column: 2, scope: !4120)
!4223 = distinct !DISubprogram(name: "k_thread_abort", scope: !4224, file: !4224, line: 188, type: !4225, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !4227)
!4224 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!4225 = !DISubroutineType(types: !4226)
!4226 = !{null, !4123}
!4227 = !{!4228}
!4228 = !DILocalVariable(name: "thread", arg: 1, scope: !4223, file: !4224, line: 188, type: !4123)
!4229 = !DILocation(line: 0, scope: !4223)
!4230 = !DILocation(line: 197, column: 2, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4223, file: !4224, line: 197, column: 2)
!4232 = !{i64 2151042593}
!4233 = !DILocation(line: 198, column: 2, scope: !4223)
!4234 = !DILocation(line: 199, column: 1, scope: !4223)
!4235 = distinct !DISubprogram(name: "z_current_get", scope: !4224, file: !4224, line: 173, type: !4121, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !1949)
!4236 = !DILocation(line: 180, column: 2, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4235, file: !4224, line: 180, column: 2)
!4238 = !{i64 2151042525}
!4239 = !DILocation(line: 181, column: 9, scope: !4235)
!4240 = !DILocation(line: 181, column: 2, scope: !4235)
!4241 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2290, file: !2290, line: 1338, type: !4242, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4250)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!107, !3402, !106, !118, !4244, !152}
!4244 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3022, line: 99, baseType: !4245)
!4245 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3022, line: 40, baseType: !4246)
!4246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2290, baseType: !4247)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4248)
!4248 = !{!4249}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4247, file: !2290, baseType: !106, size: 32)
!4250 = !{!4251, !4252, !4253, !4254, !4255, !4256, !4260, !4261, !4262, !4264, !4269, !4312, !4315, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4327, !4328, !4329, !4333, !4336, !4338, !4341, !4342, !4343, !4348, !4354, !4357, !4361, !4367, !4371, !4374, !4376, !4379}
!4251 = !DILocalVariable(name: "out", arg: 1, scope: !4241, file: !2290, line: 1338, type: !3402)
!4252 = !DILocalVariable(name: "ctx", arg: 2, scope: !4241, file: !2290, line: 1338, type: !106)
!4253 = !DILocalVariable(name: "fp", arg: 3, scope: !4241, file: !2290, line: 1338, type: !118)
!4254 = !DILocalVariable(name: "ap", arg: 4, scope: !4241, file: !2290, line: 1339, type: !4244)
!4255 = !DILocalVariable(name: "flags", arg: 5, scope: !4241, file: !2290, line: 1339, type: !152)
!4256 = !DILocalVariable(name: "buf", scope: !4241, file: !2290, line: 1341, type: !4257)
!4257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4258)
!4258 = !{!4259}
!4259 = !DISubrange(count: 22)
!4260 = !DILocalVariable(name: "count", scope: !4241, file: !2290, line: 1342, type: !185)
!4261 = !DILocalVariable(name: "sint", scope: !4241, file: !2290, line: 1343, type: !2309)
!4262 = !DILocalVariable(name: "tagged_ap", scope: !4241, file: !2290, line: 1345, type: !4263)
!4263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4264 = !DILocalVariable(name: "rc", scope: !4265, file: !2290, line: 1377, type: !107)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !2290, line: 1377, column: 4)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !2290, line: 1376, column: 19)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1376, column: 7)
!4268 = distinct !DILexicalBlock(scope: !4241, file: !2290, line: 1375, column: 19)
!4269 = !DILocalVariable(name: "state", scope: !4268, file: !2290, line: 1395, type: !4270)
!4270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4241, file: !2290, line: 1392, size: 192, elements: !4271)
!4271 = !{!4272, !4280}
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4270, file: !2290, line: 1393, baseType: !4273, size: 64)
!4273 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2290, line: 166, size: 64, elements: !4274)
!4274 = !{!4275, !4276, !4277, !4278, !4279}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4273, file: !2290, line: 168, baseType: !2309, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4273, file: !2290, line: 171, baseType: !2312, size: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4273, file: !2290, line: 174, baseType: !183, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4273, file: !2290, line: 177, baseType: !181, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4273, file: !2290, line: 180, baseType: !106, size: 32)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4270, file: !2290, line: 1394, baseType: !4281, size: 96, offset: 64)
!4281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2290, line: 189, size: 96, elements: !4282)
!4282 = !{!4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4307}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4281, file: !2290, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4281, file: !2290, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4281, file: !2290, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4281, file: !2290, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4281, file: !2290, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4281, file: !2290, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4281, file: !2290, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4281, file: !2290, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4281, file: !2290, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4281, file: !2290, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4281, file: !2290, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4281, file: !2290, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4281, file: !2290, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4281, file: !2290, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4281, file: !2290, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4281, file: !2290, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4281, file: !2290, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4281, file: !2290, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4281, file: !2290, line: 260, baseType: !196, size: 8, offset: 24)
!4302 = !DIDerivedType(tag: DW_TAG_member, scope: !4281, file: !2290, line: 262, baseType: !4303, size: 32, offset: 32)
!4303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4281, file: !2290, line: 262, size: 32, elements: !4304)
!4304 = !{!4305, !4306}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4303, file: !2290, line: 267, baseType: !107, size: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4303, file: !2290, line: 289, baseType: !107, size: 32)
!4307 = !DIDerivedType(tag: DW_TAG_member, scope: !4281, file: !2290, line: 292, baseType: !4308, size: 32, offset: 64)
!4308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4281, file: !2290, line: 292, size: 32, elements: !4309)
!4309 = !{!4310, !4311}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4308, file: !2290, line: 297, baseType: !107, size: 32)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4308, file: !2290, line: 306, baseType: !107, size: 32)
!4312 = !DILocalVariable(name: "conv", scope: !4268, file: !2290, line: 1400, type: !4313)
!4313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4314)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 32)
!4315 = !DILocalVariable(name: "value", scope: !4268, file: !2290, line: 1401, type: !4316)
!4316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4317)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 32)
!4318 = !DILocalVariable(name: "sp", scope: !4268, file: !2290, line: 1402, type: !118)
!4319 = !DILocalVariable(name: "width", scope: !4268, file: !2290, line: 1403, type: !107)
!4320 = !DILocalVariable(name: "precision", scope: !4268, file: !2290, line: 1404, type: !107)
!4321 = !DILocalVariable(name: "bps", scope: !4268, file: !2290, line: 1405, type: !118)
!4322 = !DILocalVariable(name: "bpe", scope: !4268, file: !2290, line: 1406, type: !118)
!4323 = !DILocalVariable(name: "sign", scope: !4268, file: !2290, line: 1407, type: !120)
!4324 = !DILocalVariable(name: "arg", scope: !4325, file: !2290, line: 1432, type: !107)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !2290, line: 1431, column: 24)
!4326 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1431, column: 7)
!4327 = !DILocalVariable(name: "specifier_cat", scope: !4268, file: !2290, line: 1468, type: !2289)
!4328 = !DILocalVariable(name: "length_mod", scope: !4268, file: !2290, line: 1470, type: !2297)
!4329 = !DILocalVariable(name: "rc", scope: !4330, file: !2290, line: 1575, type: !107)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !2290, line: 1575, column: 4)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1574, column: 43)
!4332 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1574, column: 7)
!4333 = !DILocalVariable(name: "rc", scope: !4334, file: !2290, line: 1584, type: !107)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !2290, line: 1584, column: 4)
!4335 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1582, column: 28)
!4336 = !DILocalVariable(name: "len", scope: !4337, file: !2290, line: 1589, type: !185)
!4337 = distinct !DILexicalBlock(scope: !4335, file: !2290, line: 1586, column: 13)
!4338 = !DILocalVariable(name: "len", scope: !4339, file: !2290, line: 1641, type: !185)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !2290, line: 1640, column: 24)
!4340 = distinct !DILexicalBlock(scope: !4335, file: !2290, line: 1640, column: 8)
!4341 = !DILocalVariable(name: "nj_len", scope: !4268, file: !2290, line: 1722, type: !185)
!4342 = !DILocalVariable(name: "pad_len", scope: !4268, file: !2290, line: 1723, type: !107)
!4343 = !DILocalVariable(name: "pad", scope: !4344, file: !2290, line: 1751, type: !120)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !2290, line: 1750, column: 26)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !2290, line: 1750, column: 8)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !2290, line: 1747, column: 18)
!4347 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1747, column: 7)
!4348 = !DILocalVariable(name: "rc", scope: !4349, file: !2290, line: 1758, type: !107)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !2290, line: 1758, column: 7)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !2290, line: 1757, column: 21)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !2290, line: 1757, column: 10)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !2290, line: 1756, column: 26)
!4353 = distinct !DILexicalBlock(scope: !4344, file: !2290, line: 1756, column: 9)
!4354 = !DILocalVariable(name: "rc", scope: !4355, file: !2290, line: 1765, type: !107)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !2290, line: 1765, column: 6)
!4356 = distinct !DILexicalBlock(scope: !4344, file: !2290, line: 1764, column: 25)
!4357 = !DILocalVariable(name: "rc", scope: !4358, file: !2290, line: 1774, type: !107)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !2290, line: 1774, column: 4)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !2290, line: 1773, column: 18)
!4360 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1773, column: 7)
!4361 = !DILocalVariable(name: "rc", scope: !4362, file: !2290, line: 1819, type: !107)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !2290, line: 1819, column: 5)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !2290, line: 1818, column: 44)
!4364 = distinct !DILexicalBlock(scope: !4365, file: !2290, line: 1818, column: 8)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !2290, line: 1817, column: 10)
!4366 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1777, column: 7)
!4367 = !DILocalVariable(name: "rc", scope: !4368, file: !2290, line: 1823, type: !107)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !2290, line: 1823, column: 5)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !2290, line: 1822, column: 26)
!4370 = distinct !DILexicalBlock(scope: !4365, file: !2290, line: 1822, column: 8)
!4371 = !DILocalVariable(name: "rc", scope: !4372, file: !2290, line: 1828, type: !107)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !2290, line: 1828, column: 5)
!4373 = distinct !DILexicalBlock(scope: !4365, file: !2290, line: 1827, column: 26)
!4374 = !DILocalVariable(name: "rc", scope: !4375, file: !2290, line: 1831, type: !107)
!4375 = distinct !DILexicalBlock(scope: !4365, file: !2290, line: 1831, column: 4)
!4376 = !DILocalVariable(name: "rc", scope: !4377, file: !2290, line: 1836, type: !107)
!4377 = distinct !DILexicalBlock(scope: !4378, file: !2290, line: 1836, column: 4)
!4378 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1835, column: 21)
!4379 = !DILabel(scope: !4335, name: "prec_int_pad0", file: !2290, line: 1634)
!4380 = !DILocation(line: 0, scope: !4241)
!4381 = !DILocation(line: 1341, column: 2, scope: !4241)
!4382 = !DILocation(line: 1341, column: 7, scope: !4241)
!4383 = !DILocation(line: 1375, column: 2, scope: !4241)
!4384 = !DILocation(line: 1342, column: 9, scope: !4241)
!4385 = !DILocation(line: 1375, column: 9, scope: !4241)
!4386 = !DILocation(line: 1377, column: 4, scope: !4265)
!4387 = !DILocation(line: 0, scope: !4265)
!4388 = !DILocation(line: 1377, column: 4, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1377, column: 4)
!4390 = distinct !{!4390, !4383, !4391}
!4391 = !DILocation(line: 1839, column: 2, scope: !4241)
!4392 = !DILocation(line: 1392, column: 3, scope: !4268)
!4393 = !DILocation(line: 1395, column: 5, scope: !4268)
!4394 = !DILocation(line: 0, scope: !4268)
!4395 = !DILocation(line: 1409, column: 8, scope: !4268)
!4396 = !DILocation(line: 1414, column: 13, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1414, column: 7)
!4398 = !DILocation(line: 1414, column: 7, scope: !4268)
!4399 = !DILocation(line: 1415, column: 12, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4397, file: !2290, line: 1414, column: 25)
!4401 = !DILocation(line: 1417, column: 14, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4400, file: !2290, line: 1417, column: 8)
!4403 = !DILocation(line: 1417, column: 8, scope: !4400)
!4404 = !DILocation(line: 1418, column: 21, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !2290, line: 1417, column: 19)
!4406 = !DILocation(line: 1419, column: 13, scope: !4405)
!4407 = !DILocation(line: 1420, column: 4, scope: !4405)
!4408 = !DILocation(line: 1421, column: 20, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4397, file: !2290, line: 1421, column: 14)
!4410 = !DILocation(line: 1421, column: 14, scope: !4397)
!4411 = !DILocation(line: 1431, column: 13, scope: !4326)
!4412 = !DILocation(line: 1431, column: 7, scope: !4268)
!4413 = !DILocation(line: 1432, column: 14, scope: !4325)
!4414 = !DILocation(line: 0, scope: !4325)
!4415 = !DILocation(line: 1434, column: 12, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4325, file: !2290, line: 1434, column: 8)
!4417 = !DILocation(line: 1434, column: 8, scope: !4325)
!4418 = !DILocation(line: 1435, column: 24, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4416, file: !2290, line: 1434, column: 17)
!4420 = !DILocation(line: 1436, column: 4, scope: !4419)
!4421 = !DILocation(line: 1439, column: 20, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4326, file: !2290, line: 1439, column: 14)
!4423 = !DILocation(line: 1439, column: 14, scope: !4326)
!4424 = !DILocation(line: 1469, column: 37, scope: !4268)
!4425 = !DILocation(line: 1448, column: 20, scope: !4268)
!4426 = !DILocation(line: 1449, column: 22, scope: !4268)
!4427 = !DILocation(line: 1471, column: 34, scope: !4268)
!4428 = !DILocation(line: 1478, column: 7, scope: !4268)
!4429 = !DILocation(line: 1479, column: 4, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !2290, line: 1478, column: 40)
!4431 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1478, column: 7)
!4432 = !DILocation(line: 1484, column: 19, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4430, file: !2290, line: 1479, column: 24)
!4434 = !DILocation(line: 1484, column: 17, scope: !4433)
!4435 = !DILocation(line: 1485, column: 5, scope: !4433)
!4436 = !DILocation(line: 1492, column: 20, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !2290, line: 1491, column: 12)
!4438 = distinct !DILexicalBlock(scope: !4433, file: !2290, line: 1487, column: 9)
!4439 = !DILocation(line: 1492, column: 18, scope: !4437)
!4440 = !DILocation(line: 1494, column: 5, scope: !4433)
!4441 = !DILocation(line: 1497, column: 23, scope: !4433)
!4442 = !DILocation(line: 1496, column: 17, scope: !4433)
!4443 = !DILocation(line: 1498, column: 5, scope: !4433)
!4444 = !DILocation(line: 1501, column: 23, scope: !4433)
!4445 = !DILocation(line: 1500, column: 17, scope: !4433)
!4446 = !DILocation(line: 1502, column: 5, scope: !4433)
!4447 = !DILocation(line: 1513, column: 23, scope: !4433)
!4448 = !DILocation(line: 1513, column: 6, scope: !4433)
!4449 = !DILocation(line: 1512, column: 17, scope: !4433)
!4450 = !DILocation(line: 1514, column: 5, scope: !4433)
!4451 = !DILocation(line: 0, scope: !4433)
!4452 = !DILocation(line: 1516, column: 8, scope: !4430)
!4453 = !DILocation(line: 1517, column: 19, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !2290, line: 1516, column: 33)
!4455 = distinct !DILexicalBlock(scope: !4430, file: !2290, line: 1516, column: 8)
!4456 = !DILocation(line: 1517, column: 17, scope: !4454)
!4457 = !DILocation(line: 1518, column: 4, scope: !4454)
!4458 = !DILocation(line: 1519, column: 19, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !2290, line: 1518, column: 39)
!4460 = distinct !DILexicalBlock(scope: !4455, file: !2290, line: 1518, column: 15)
!4461 = !DILocation(line: 1519, column: 17, scope: !4459)
!4462 = !DILocation(line: 1520, column: 4, scope: !4459)
!4463 = !DILocation(line: 1522, column: 4, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !2290, line: 1521, column: 47)
!4465 = distinct !DILexicalBlock(scope: !4431, file: !2290, line: 1521, column: 14)
!4466 = !DILocation(line: 1527, column: 19, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4464, file: !2290, line: 1522, column: 24)
!4468 = !DILocation(line: 1527, column: 17, scope: !4467)
!4469 = !DILocation(line: 1528, column: 5, scope: !4467)
!4470 = !DILocation(line: 0, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !2290, line: 1530, column: 9)
!4472 = !DILocation(line: 1540, column: 23, scope: !4467)
!4473 = !DILocation(line: 1539, column: 17, scope: !4467)
!4474 = !DILocation(line: 1542, column: 5, scope: !4467)
!4475 = !DILocation(line: 1545, column: 23, scope: !4467)
!4476 = !DILocation(line: 1544, column: 17, scope: !4467)
!4477 = !DILocation(line: 1547, column: 5, scope: !4467)
!4478 = !DILocation(line: 1551, column: 23, scope: !4467)
!4479 = !DILocation(line: 1551, column: 6, scope: !4467)
!4480 = !DILocation(line: 1550, column: 17, scope: !4467)
!4481 = !DILocation(line: 1552, column: 5, scope: !4467)
!4482 = !DILocation(line: 0, scope: !4467)
!4483 = !DILocation(line: 1554, column: 8, scope: !4464)
!4484 = !DILocation(line: 1555, column: 19, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !2290, line: 1554, column: 33)
!4486 = distinct !DILexicalBlock(scope: !4464, file: !2290, line: 1554, column: 8)
!4487 = !DILocation(line: 1555, column: 17, scope: !4485)
!4488 = !DILocation(line: 1556, column: 4, scope: !4485)
!4489 = !DILocation(line: 1557, column: 19, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !2290, line: 1556, column: 39)
!4491 = distinct !DILexicalBlock(scope: !4486, file: !2290, line: 1556, column: 15)
!4492 = !DILocation(line: 1557, column: 17, scope: !4490)
!4493 = !DILocation(line: 1558, column: 4, scope: !4490)
!4494 = !DILocation(line: 0, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !2290, line: 1560, column: 8)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !2290, line: 1559, column: 45)
!4497 = distinct !DILexicalBlock(scope: !4465, file: !2290, line: 1559, column: 14)
!4498 = !DILocation(line: 1566, column: 17, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !2290, line: 1565, column: 46)
!4500 = distinct !DILexicalBlock(scope: !4497, file: !2290, line: 1565, column: 14)
!4501 = !DILocation(line: 1566, column: 15, scope: !4499)
!4502 = !DILocation(line: 1567, column: 3, scope: !4499)
!4503 = !DILocation(line: 1574, column: 21, scope: !4332)
!4504 = !DILocation(line: 1575, column: 4, scope: !4330)
!4505 = !DILocation(line: 0, scope: !4330)
!4506 = !DILocation(line: 1575, column: 4, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4330, file: !2290, line: 1575, column: 4)
!4508 = !DILocation(line: 1582, column: 17, scope: !4268)
!4509 = !DILocation(line: 1582, column: 3, scope: !4268)
!4510 = !DILocation(line: 1584, column: 4, scope: !4334)
!4511 = !DILocation(line: 0, scope: !4334)
!4512 = !DILocation(line: 1584, column: 4, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4334, file: !2290, line: 1584, column: 4)
!4514 = !DILocation(line: 1587, column: 31, scope: !4337)
!4515 = !DILocation(line: 1591, column: 18, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4337, file: !2290, line: 1591, column: 8)
!4517 = !DILocation(line: 1591, column: 8, scope: !4337)
!4518 = !DILocation(line: 1592, column: 11, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4516, file: !2290, line: 1591, column: 24)
!4520 = !DILocation(line: 0, scope: !4337)
!4521 = !DILocation(line: 1593, column: 4, scope: !4519)
!4522 = !DILocation(line: 1594, column: 11, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4516, file: !2290, line: 1593, column: 11)
!4524 = !DILocation(line: 1604, column: 51, scope: !4335)
!4525 = !DILocation(line: 1604, column: 13, scope: !4335)
!4526 = !DILocation(line: 1604, column: 11, scope: !4335)
!4527 = !DILocation(line: 1606, column: 4, scope: !4335)
!4528 = !DILocation(line: 1609, column: 14, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4335, file: !2290, line: 1609, column: 8)
!4530 = !DILocation(line: 1609, column: 8, scope: !4335)
!4531 = !DILocation(line: 1619, column: 18, scope: !4335)
!4532 = !DILocation(line: 1620, column: 13, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4335, file: !2290, line: 1620, column: 8)
!4534 = !DILocation(line: 1620, column: 8, scope: !4335)
!4535 = !DILocation(line: 1622, column: 36, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4533, file: !2290, line: 1620, column: 18)
!4537 = !DILocation(line: 1622, column: 17, scope: !4536)
!4538 = !DILocation(line: 1623, column: 4, scope: !4536)
!4539 = !DILocation(line: 1632, column: 29, scope: !4335)
!4540 = !DILocation(line: 1632, column: 10, scope: !4335)
!4541 = !DILocation(line: 1632, column: 4, scope: !4335)
!4542 = !DILocation(line: 1407, column: 8, scope: !4268)
!4543 = !DILocation(line: 0, scope: !4335)
!4544 = !DILocation(line: 1634, column: 3, scope: !4335)
!4545 = !DILocation(line: 1640, column: 18, scope: !4340)
!4546 = !DILocation(line: 1640, column: 8, scope: !4335)
!4547 = !DILocation(line: 1729, column: 13, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1729, column: 7)
!4549 = !DILocation(line: 1641, column: 22, scope: !4339)
!4550 = !DILocation(line: 0, scope: !4339)
!4551 = !DILocation(line: 1646, column: 21, scope: !4339)
!4552 = !DILocation(line: 1649, column: 13, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4339, file: !2290, line: 1649, column: 9)
!4554 = !DILocation(line: 1649, column: 9, scope: !4339)
!4555 = !DILocation(line: 1650, column: 35, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4553, file: !2290, line: 1649, column: 34)
!4557 = !DILocation(line: 1650, column: 23, scope: !4556)
!4558 = !DILocation(line: 1651, column: 5, scope: !4556)
!4559 = !DILocation(line: 1660, column: 15, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4335, file: !2290, line: 1660, column: 8)
!4561 = !DILocation(line: 1660, column: 19, scope: !4560)
!4562 = !DILocation(line: 1660, column: 8, scope: !4335)
!4563 = !DILocation(line: 1661, column: 23, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4560, file: !2290, line: 1660, column: 28)
!4565 = !DILocation(line: 1661, column: 11, scope: !4564)
!4566 = !DILocation(line: 1665, column: 22, scope: !4564)
!4567 = !DILocation(line: 1666, column: 21, scope: !4564)
!4568 = !DILocation(line: 1668, column: 5, scope: !4564)
!4569 = !DILocation(line: 1677, column: 30, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !2290, line: 1676, column: 49)
!4571 = distinct !DILexicalBlock(scope: !4335, file: !2290, line: 1676, column: 8)
!4572 = !DILocation(line: 1677, column: 5, scope: !4570)
!4573 = !DILocation(line: 1680, column: 4, scope: !4335)
!4574 = !DILocation(line: 0, scope: !4516)
!4575 = !DILocation(line: 1597, column: 14, scope: !4337)
!4576 = !DILocation(line: 1699, column: 11, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1699, column: 7)
!4578 = !DILocation(line: 1699, column: 7, scope: !4268)
!4579 = !DILocation(line: 1725, column: 7, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1725, column: 7)
!4581 = !DILocation(line: 1725, column: 12, scope: !4580)
!4582 = !DILocation(line: 1747, column: 13, scope: !4347)
!4583 = !DILocation(line: 1747, column: 7, scope: !4268)
!4584 = !DILocation(line: 1722, column: 24, scope: !4268)
!4585 = !DILocation(line: 1725, column: 7, scope: !4268)
!4586 = !DILocation(line: 1729, column: 7, scope: !4268)
!4587 = !DILocation(line: 1736, column: 13, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4268, file: !2290, line: 1736, column: 7)
!4589 = !DILocation(line: 1735, column: 19, scope: !4268)
!4590 = !DILocation(line: 1736, column: 7, scope: !4268)
!4591 = !DILocation(line: 1748, column: 10, scope: !4346)
!4592 = !DILocation(line: 1750, column: 15, scope: !4345)
!4593 = !DILocation(line: 1750, column: 8, scope: !4346)
!4594 = !DILocation(line: 0, scope: !4344)
!4595 = !DILocation(line: 1756, column: 15, scope: !4353)
!4596 = !DILocation(line: 1756, column: 9, scope: !4344)
!4597 = !DILocation(line: 1758, column: 7, scope: !4349)
!4598 = !DILocation(line: 0, scope: !4349)
!4599 = !DILocation(line: 1758, column: 7, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4349, file: !2290, line: 1758, column: 7)
!4601 = !DILocation(line: 1764, column: 5, scope: !4344)
!4602 = !DILocation(line: 0, scope: !4346)
!4603 = !DILocation(line: 1764, column: 20, scope: !4344)
!4604 = !DILocation(line: 1764, column: 17, scope: !4344)
!4605 = !DILocation(line: 1765, column: 6, scope: !4355)
!4606 = !DILocation(line: 0, scope: !4355)
!4607 = !DILocation(line: 1765, column: 6, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4355, file: !2290, line: 1765, column: 6)
!4609 = distinct !{!4609, !4601, !4610}
!4610 = !DILocation(line: 1766, column: 5, scope: !4344)
!4611 = !DILocation(line: 1773, column: 12, scope: !4360)
!4612 = !DILocation(line: 1773, column: 7, scope: !4268)
!4613 = !DILocation(line: 1773, column: 7, scope: !4360)
!4614 = !DILocation(line: 1774, column: 4, scope: !4358)
!4615 = !DILocation(line: 0, scope: !4358)
!4616 = !DILocation(line: 1774, column: 4, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4358, file: !2290, line: 1774, column: 4)
!4618 = !DILocation(line: 1818, column: 8, scope: !4364)
!4619 = !DILocation(line: 1818, column: 27, scope: !4364)
!4620 = !DILocation(line: 1818, column: 25, scope: !4364)
!4621 = !DILocation(line: 1818, column: 8, scope: !4365)
!4622 = !DILocation(line: 1819, column: 5, scope: !4362)
!4623 = !DILocation(line: 0, scope: !4362)
!4624 = !DILocation(line: 1819, column: 5, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4362, file: !2290, line: 1819, column: 5)
!4626 = !DILocation(line: 1822, column: 14, scope: !4370)
!4627 = !DILocation(line: 1822, column: 8, scope: !4365)
!4628 = !DILocation(line: 1823, column: 5, scope: !4368)
!4629 = !DILocation(line: 0, scope: !4368)
!4630 = !DILocation(line: 1823, column: 5, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4368, file: !2290, line: 1823, column: 5)
!4632 = !DILocation(line: 1826, column: 20, scope: !4365)
!4633 = !DILocation(line: 1827, column: 4, scope: !4365)
!4634 = !DILocation(line: 0, scope: !4365)
!4635 = !DILocation(line: 1827, column: 21, scope: !4365)
!4636 = !DILocation(line: 1827, column: 18, scope: !4365)
!4637 = !DILocation(line: 1828, column: 5, scope: !4372)
!4638 = !DILocation(line: 0, scope: !4372)
!4639 = !DILocation(line: 1828, column: 5, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4372, file: !2290, line: 1828, column: 5)
!4641 = distinct !{!4641, !4633, !4642}
!4642 = !DILocation(line: 1829, column: 4, scope: !4365)
!4643 = !DILocation(line: 1831, column: 4, scope: !4375)
!4644 = !DILocation(line: 0, scope: !4375)
!4645 = !DILocation(line: 1831, column: 4, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4375, file: !2290, line: 1831, column: 4)
!4647 = !DILocation(line: 1835, column: 16, scope: !4268)
!4648 = !DILocation(line: 1835, column: 3, scope: !4268)
!4649 = !DILocation(line: 1836, column: 4, scope: !4377)
!4650 = !DILocation(line: 0, scope: !4377)
!4651 = !DILocation(line: 1836, column: 4, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4377, file: !2290, line: 1836, column: 4)
!4653 = !DILocation(line: 1837, column: 4, scope: !4378)
!4654 = distinct !{!4654, !4648, !4655}
!4655 = !DILocation(line: 1838, column: 3, scope: !4268)
!4656 = !DILocation(line: 1844, column: 1, scope: !4241)
!4657 = distinct !DISubprogram(name: "extract_conversion", scope: !2290, file: !2290, line: 642, type: !4658, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4660)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!118, !4314, !118}
!4660 = !{!4661, !4662}
!4661 = !DILocalVariable(name: "conv", arg: 1, scope: !4657, file: !2290, line: 642, type: !4314)
!4662 = !DILocalVariable(name: "sp", arg: 2, scope: !4657, file: !2290, line: 643, type: !118)
!4663 = !DILocation(line: 0, scope: !4657)
!4664 = !DILocation(line: 645, column: 10, scope: !4657)
!4665 = !DILocation(line: 653, column: 2, scope: !4657)
!4666 = !DILocation(line: 654, column: 6, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4657, file: !2290, line: 654, column: 6)
!4668 = !DILocation(line: 654, column: 10, scope: !4667)
!4669 = !DILocation(line: 654, column: 6, scope: !4657)
!4670 = !DILocation(line: 655, column: 24, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4667, file: !2290, line: 654, column: 18)
!4672 = !DILocation(line: 655, column: 19, scope: !4671)
!4673 = !DILocation(line: 656, column: 3, scope: !4671)
!4674 = !DILocation(line: 659, column: 7, scope: !4657)
!4675 = !DILocation(line: 660, column: 7, scope: !4657)
!4676 = !DILocation(line: 661, column: 7, scope: !4657)
!4677 = !DILocation(line: 662, column: 7, scope: !4657)
!4678 = !DILocation(line: 663, column: 7, scope: !4657)
!4679 = !DILocation(line: 665, column: 2, scope: !4657)
!4680 = !DILocation(line: 666, column: 1, scope: !4657)
!4681 = distinct !DISubprogram(name: "outs", scope: !2290, file: !2290, line: 1319, type: !4682, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4684)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!107, !3402, !106, !118, !118}
!4684 = !{!4685, !4686, !4687, !4688, !4689, !4690}
!4685 = !DILocalVariable(name: "out", arg: 1, scope: !4681, file: !2290, line: 1319, type: !3402)
!4686 = !DILocalVariable(name: "ctx", arg: 2, scope: !4681, file: !2290, line: 1320, type: !106)
!4687 = !DILocalVariable(name: "sp", arg: 3, scope: !4681, file: !2290, line: 1321, type: !118)
!4688 = !DILocalVariable(name: "ep", arg: 4, scope: !4681, file: !2290, line: 1322, type: !118)
!4689 = !DILocalVariable(name: "count", scope: !4681, file: !2290, line: 1324, type: !185)
!4690 = !DILocalVariable(name: "rc", scope: !4691, file: !2290, line: 1327, type: !107)
!4691 = distinct !DILexicalBlock(scope: !4681, file: !2290, line: 1326, column: 45)
!4692 = !DILocation(line: 0, scope: !4681)
!4693 = !DILocation(line: 1326, column: 2, scope: !4681)
!4694 = !DILocation(line: 1324, column: 9, scope: !4681)
!4695 = !DILocation(line: 1326, column: 13, scope: !4681)
!4696 = !DILocation(line: 1326, column: 19, scope: !4681)
!4697 = !DILocation(line: 1327, column: 21, scope: !4691)
!4698 = !DILocation(line: 1326, column: 36, scope: !4681)
!4699 = !DILocation(line: 1326, column: 39, scope: !4681)
!4700 = !DILocation(line: 1327, column: 24, scope: !4691)
!4701 = !DILocation(line: 1327, column: 16, scope: !4691)
!4702 = !DILocation(line: 1327, column: 12, scope: !4691)
!4703 = !DILocation(line: 0, scope: !4691)
!4704 = !DILocation(line: 1329, column: 10, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4691, file: !2290, line: 1329, column: 7)
!4706 = !DILocation(line: 1329, column: 7, scope: !4691)
!4707 = distinct !{!4707, !4693, !4708}
!4708 = !DILocation(line: 1333, column: 2, scope: !4681)
!4709 = !DILocation(line: 1336, column: 1, scope: !4681)
!4710 = distinct !DISubprogram(name: "encode_uint", scope: !2290, file: !2290, line: 788, type: !4711, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4713)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!193, !2312, !4314, !193, !118}
!4713 = !{!4714, !4715, !4716, !4717, !4718, !4719, !4721, !4722}
!4714 = !DILocalVariable(name: "value", arg: 1, scope: !4710, file: !2290, line: 788, type: !2312)
!4715 = !DILocalVariable(name: "conv", arg: 2, scope: !4710, file: !2290, line: 789, type: !4314)
!4716 = !DILocalVariable(name: "bps", arg: 3, scope: !4710, file: !2290, line: 790, type: !193)
!4717 = !DILocalVariable(name: "bpe", arg: 4, scope: !4710, file: !2290, line: 791, type: !118)
!4718 = !DILocalVariable(name: "upcase", scope: !4710, file: !2290, line: 793, type: !145)
!4719 = !DILocalVariable(name: "radix", scope: !4710, file: !2290, line: 794, type: !4720)
!4720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4721 = !DILocalVariable(name: "bp", scope: !4710, file: !2290, line: 795, type: !193)
!4722 = !DILocalVariable(name: "lsv", scope: !4723, file: !2290, line: 798, type: !32)
!4723 = distinct !DILexicalBlock(scope: !4710, file: !2290, line: 797, column: 5)
!4724 = !DILocation(line: 0, scope: !4710)
!4725 = !DILocation(line: 793, column: 35, scope: !4710)
!4726 = !DILocation(line: 793, column: 24, scope: !4710)
!4727 = !DILocation(line: 793, column: 16, scope: !4710)
!4728 = !DILocation(line: 794, column: 29, scope: !4710)
!4729 = !DILocation(line: 795, column: 24, scope: !4710)
!4730 = !DILocation(line: 795, column: 17, scope: !4710)
!4731 = !DILocation(line: 797, column: 2, scope: !4710)
!4732 = !DILocation(line: 802, column: 9, scope: !4723)
!4733 = !DILocation(line: 798, column: 22, scope: !4723)
!4734 = !DILocation(line: 0, scope: !4723)
!4735 = !DILocation(line: 800, column: 16, scope: !4723)
!4736 = !DILocation(line: 800, column: 11, scope: !4723)
!4737 = !DILocation(line: 800, column: 4, scope: !4723)
!4738 = !DILocation(line: 800, column: 9, scope: !4723)
!4739 = !DILocation(line: 803, column: 18, scope: !4710)
!4740 = !DILocation(line: 803, column: 24, scope: !4710)
!4741 = !DILocation(line: 803, column: 2, scope: !4723)
!4742 = distinct !{!4742, !4731, !4743}
!4743 = !DILocation(line: 803, column: 37, scope: !4710)
!4744 = !DILocation(line: 808, column: 12, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4710, file: !2290, line: 808, column: 6)
!4746 = !DILocation(line: 808, column: 6, scope: !4710)
!4747 = !DILocation(line: 809, column: 7, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4745, file: !2290, line: 808, column: 23)
!4749 = !DILocation(line: 813, column: 3, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !2290, line: 811, column: 27)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2290, line: 811, column: 14)
!4752 = distinct !DILexicalBlock(scope: !4748, file: !2290, line: 809, column: 7)
!4753 = !DILocation(line: 0, scope: !4752)
!4754 = !DILocation(line: 818, column: 2, scope: !4710)
!4755 = distinct !DISubprogram(name: "store_count", scope: !2290, file: !2290, line: 1280, type: !4756, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4760)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{null, !4758, !106, !107}
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 32)
!4759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4281)
!4760 = !{!4761, !4762, !4763}
!4761 = !DILocalVariable(name: "conv", arg: 1, scope: !4755, file: !2290, line: 1280, type: !4758)
!4762 = !DILocalVariable(name: "dp", arg: 2, scope: !4755, file: !2290, line: 1281, type: !106)
!4763 = !DILocalVariable(name: "count", arg: 3, scope: !4755, file: !2290, line: 1282, type: !107)
!4764 = !DILocation(line: 0, scope: !4755)
!4765 = !DILocation(line: 1284, column: 38, scope: !4755)
!4766 = !DILocation(line: 1284, column: 2, scope: !4755)
!4767 = !DILocation(line: 1286, column: 4, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4755, file: !2290, line: 1284, column: 50)
!4769 = !DILocation(line: 1286, column: 14, scope: !4768)
!4770 = !DILocation(line: 1287, column: 3, scope: !4768)
!4771 = !DILocation(line: 1289, column: 24, scope: !4768)
!4772 = !DILocation(line: 1289, column: 22, scope: !4768)
!4773 = !DILocation(line: 1290, column: 3, scope: !4768)
!4774 = !DILocation(line: 1292, column: 18, scope: !4768)
!4775 = !DILocation(line: 1292, column: 4, scope: !4768)
!4776 = !DILocation(line: 1292, column: 16, scope: !4768)
!4777 = !DILocation(line: 1293, column: 3, scope: !4768)
!4778 = !DILocation(line: 1295, column: 4, scope: !4768)
!4779 = !DILocation(line: 1295, column: 15, scope: !4768)
!4780 = !DILocation(line: 1296, column: 3, scope: !4768)
!4781 = !DILocation(line: 1298, column: 22, scope: !4768)
!4782 = !DILocation(line: 1298, column: 4, scope: !4768)
!4783 = !DILocation(line: 1298, column: 20, scope: !4768)
!4784 = !DILocation(line: 1299, column: 3, scope: !4768)
!4785 = !DILocation(line: 1301, column: 21, scope: !4768)
!4786 = !DILocation(line: 1301, column: 4, scope: !4768)
!4787 = !DILocation(line: 1301, column: 19, scope: !4768)
!4788 = !DILocation(line: 1302, column: 3, scope: !4768)
!4789 = !DILocation(line: 1304, column: 4, scope: !4768)
!4790 = !DILocation(line: 1304, column: 17, scope: !4768)
!4791 = !DILocation(line: 1305, column: 3, scope: !4768)
!4792 = !DILocation(line: 1307, column: 4, scope: !4768)
!4793 = !DILocation(line: 1307, column: 20, scope: !4768)
!4794 = !DILocation(line: 1308, column: 3, scope: !4768)
!4795 = !DILocation(line: 1316, column: 1, scope: !4755)
!4796 = distinct !DISubprogram(name: "isupper", scope: !4797, file: !4797, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4798)
!4797 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4798 = !{!4799}
!4799 = !DILocalVariable(name: "a", arg: 1, scope: !4796, file: !4797, line: 16, type: !107)
!4800 = !DILocation(line: 0, scope: !4796)
!4801 = !DILocation(line: 18, column: 29, scope: !4796)
!4802 = !DILocation(line: 18, column: 45, scope: !4796)
!4803 = !DILocation(line: 18, column: 2, scope: !4796)
!4804 = distinct !DISubprogram(name: "conversion_radix", scope: !2290, file: !2290, line: 761, type: !4805, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4807)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!185, !120}
!4807 = !{!4808}
!4808 = !DILocalVariable(name: "specifier", arg: 1, scope: !4804, file: !2290, line: 761, type: !120)
!4809 = !DILocation(line: 0, scope: !4804)
!4810 = !DILocation(line: 763, column: 2, scope: !4804)
!4811 = !DILocation(line: 770, column: 3, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4804, file: !2290, line: 763, column: 21)
!4813 = !DILocation(line: 774, column: 3, scope: !4812)
!4814 = !DILocation(line: 0, scope: !4812)
!4815 = !DILocation(line: 776, column: 1, scope: !4804)
!4816 = distinct !DISubprogram(name: "extract_flags", scope: !2290, file: !2290, line: 339, type: !4658, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4817)
!4817 = !{!4818, !4819, !4820}
!4818 = !DILocalVariable(name: "conv", arg: 1, scope: !4816, file: !2290, line: 339, type: !4314)
!4819 = !DILocalVariable(name: "sp", arg: 2, scope: !4816, file: !2290, line: 340, type: !118)
!4820 = !DILocalVariable(name: "loop", scope: !4816, file: !2290, line: 342, type: !145)
!4821 = !DILocation(line: 0, scope: !4816)
!4822 = !DILocation(line: 344, column: 2, scope: !4816)
!4823 = !DILocation(line: 345, column: 11, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4816, file: !2290, line: 344, column: 5)
!4825 = !DILocation(line: 345, column: 3, scope: !4824)
!4826 = !DILocation(line: 351, column: 4, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4824, file: !2290, line: 345, column: 16)
!4828 = !DILocation(line: 354, column: 4, scope: !4827)
!4829 = !DILocation(line: 357, column: 4, scope: !4827)
!4830 = !DILocation(line: 360, column: 4, scope: !4827)
!4831 = !DILocation(line: 0, scope: !4827)
!4832 = !DILocation(line: 370, column: 12, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4816, file: !2290, line: 370, column: 6)
!4834 = !DILocation(line: 370, column: 22, scope: !4833)
!4835 = !DILocation(line: 371, column: 19, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4833, file: !2290, line: 370, column: 42)
!4837 = !DILocation(line: 372, column: 2, scope: !4836)
!4838 = !DILocation(line: 376, column: 2, scope: !4816)
!4839 = distinct !DISubprogram(name: "extract_width", scope: !2290, file: !2290, line: 388, type: !4658, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4840)
!4840 = !{!4841, !4842, !4843, !4844}
!4841 = !DILocalVariable(name: "conv", arg: 1, scope: !4839, file: !2290, line: 388, type: !4314)
!4842 = !DILocalVariable(name: "sp", arg: 2, scope: !4839, file: !2290, line: 389, type: !118)
!4843 = !DILocalVariable(name: "wp", scope: !4839, file: !2290, line: 398, type: !118)
!4844 = !DILocalVariable(name: "width", scope: !4839, file: !2290, line: 399, type: !185)
!4845 = !DILocation(line: 0, scope: !4839)
!4846 = !DILocation(line: 391, column: 8, scope: !4839)
!4847 = !DILocation(line: 391, column: 22, scope: !4839)
!4848 = !DILocation(line: 393, column: 6, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4839, file: !2290, line: 393, column: 6)
!4850 = !DILocation(line: 393, column: 10, scope: !4849)
!4851 = !DILocation(line: 393, column: 6, scope: !4839)
!4852 = !DILocation(line: 394, column: 20, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4849, file: !2290, line: 393, column: 18)
!4854 = !DILocation(line: 395, column: 10, scope: !4853)
!4855 = !DILocation(line: 395, column: 3, scope: !4853)
!4856 = !DILocation(line: 399, column: 17, scope: !4839)
!4857 = !DILocation(line: 401, column: 6, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4839, file: !2290, line: 401, column: 6)
!4859 = !DILocation(line: 401, column: 9, scope: !4858)
!4860 = !DILocation(line: 401, column: 6, scope: !4839)
!4861 = !DILocation(line: 402, column: 23, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4858, file: !2290, line: 401, column: 16)
!4863 = !DILocation(line: 403, column: 9, scope: !4862)
!4864 = !DILocation(line: 403, column: 21, scope: !4862)
!4865 = !DILocation(line: 405, column: 11, scope: !4862)
!4866 = !DILocation(line: 404, column: 21, scope: !4862)
!4867 = !DILocation(line: 406, column: 2, scope: !4862)
!4868 = !DILocation(line: 409, column: 1, scope: !4839)
!4869 = distinct !DISubprogram(name: "extract_prec", scope: !2290, file: !2290, line: 420, type: !4658, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4870)
!4870 = !{!4871, !4872, !4873}
!4871 = !DILocalVariable(name: "conv", arg: 1, scope: !4869, file: !2290, line: 420, type: !4314)
!4872 = !DILocalVariable(name: "sp", arg: 2, scope: !4869, file: !2290, line: 421, type: !118)
!4873 = !DILocalVariable(name: "prec", scope: !4869, file: !2290, line: 435, type: !185)
!4874 = !DILocation(line: 0, scope: !4869)
!4875 = !DILocation(line: 423, column: 24, scope: !4869)
!4876 = !DILocation(line: 423, column: 28, scope: !4869)
!4877 = !DILocation(line: 423, column: 8, scope: !4869)
!4878 = !DILocation(line: 423, column: 21, scope: !4869)
!4879 = !DILocation(line: 425, column: 6, scope: !4869)
!4880 = !DILocation(line: 428, column: 2, scope: !4869)
!4881 = !DILocation(line: 430, column: 6, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4869, file: !2290, line: 430, column: 6)
!4883 = !DILocation(line: 430, column: 10, scope: !4882)
!4884 = !DILocation(line: 430, column: 6, scope: !4869)
!4885 = !DILocation(line: 431, column: 19, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4882, file: !2290, line: 430, column: 18)
!4887 = !DILocation(line: 432, column: 10, scope: !4886)
!4888 = !DILocation(line: 432, column: 3, scope: !4886)
!4889 = !DILocation(line: 435, column: 16, scope: !4869)
!4890 = !DILocation(line: 437, column: 8, scope: !4869)
!4891 = !DILocation(line: 437, column: 19, scope: !4869)
!4892 = !DILocation(line: 439, column: 10, scope: !4869)
!4893 = !DILocation(line: 438, column: 20, scope: !4869)
!4894 = !DILocation(line: 441, column: 9, scope: !4869)
!4895 = !DILocation(line: 442, column: 1, scope: !4869)
!4896 = distinct !DISubprogram(name: "extract_length", scope: !2290, file: !2290, line: 453, type: !4658, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4897)
!4897 = !{!4898, !4899}
!4898 = !DILocalVariable(name: "conv", arg: 1, scope: !4896, file: !2290, line: 453, type: !4314)
!4899 = !DILocalVariable(name: "sp", arg: 2, scope: !4896, file: !2290, line: 454, type: !118)
!4900 = !DILocation(line: 0, scope: !4896)
!4901 = !DILocation(line: 456, column: 10, scope: !4896)
!4902 = !DILocation(line: 456, column: 2, scope: !4896)
!4903 = !DILocation(line: 458, column: 8, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !2290, line: 458, column: 7)
!4905 = distinct !DILexicalBlock(scope: !4896, file: !2290, line: 456, column: 15)
!4906 = !DILocation(line: 458, column: 7, scope: !4904)
!4907 = !DILocation(line: 458, column: 13, scope: !4904)
!4908 = !DILocation(line: 0, scope: !4904)
!4909 = !DILocation(line: 458, column: 7, scope: !4905)
!4910 = !DILocation(line: 459, column: 21, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4904, file: !2290, line: 458, column: 21)
!4912 = !DILocation(line: 460, column: 4, scope: !4911)
!4913 = !DILocation(line: 461, column: 3, scope: !4911)
!4914 = !DILocation(line: 462, column: 21, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4904, file: !2290, line: 461, column: 10)
!4916 = !DILocation(line: 466, column: 8, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4905, file: !2290, line: 466, column: 7)
!4918 = !DILocation(line: 466, column: 7, scope: !4917)
!4919 = !DILocation(line: 466, column: 13, scope: !4917)
!4920 = !DILocation(line: 0, scope: !4917)
!4921 = !DILocation(line: 466, column: 7, scope: !4905)
!4922 = !DILocation(line: 467, column: 21, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4917, file: !2290, line: 466, column: 21)
!4924 = !DILocation(line: 468, column: 4, scope: !4923)
!4925 = !DILocation(line: 469, column: 3, scope: !4923)
!4926 = !DILocation(line: 470, column: 21, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4917, file: !2290, line: 469, column: 10)
!4928 = !DILocation(line: 474, column: 9, scope: !4905)
!4929 = !DILocation(line: 474, column: 20, scope: !4905)
!4930 = !DILocation(line: 475, column: 3, scope: !4905)
!4931 = !DILocation(line: 476, column: 3, scope: !4905)
!4932 = !DILocation(line: 478, column: 9, scope: !4905)
!4933 = !DILocation(line: 478, column: 20, scope: !4905)
!4934 = !DILocation(line: 479, column: 3, scope: !4905)
!4935 = !DILocation(line: 480, column: 3, scope: !4905)
!4936 = !DILocation(line: 482, column: 9, scope: !4905)
!4937 = !DILocation(line: 482, column: 20, scope: !4905)
!4938 = !DILocation(line: 483, column: 3, scope: !4905)
!4939 = !DILocation(line: 484, column: 3, scope: !4905)
!4940 = !DILocation(line: 486, column: 9, scope: !4905)
!4941 = !DILocation(line: 486, column: 20, scope: !4905)
!4942 = !DILocation(line: 487, column: 3, scope: !4905)
!4943 = !DILocation(line: 492, column: 21, scope: !4905)
!4944 = !DILocation(line: 493, column: 3, scope: !4905)
!4945 = !DILocation(line: 495, column: 9, scope: !4905)
!4946 = !DILocation(line: 495, column: 20, scope: !4905)
!4947 = !DILocation(line: 496, column: 3, scope: !4905)
!4948 = !DILocation(line: 498, column: 2, scope: !4896)
!4949 = distinct !DISubprogram(name: "extract_specifier", scope: !2290, file: !2290, line: 513, type: !4658, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4950)
!4950 = !{!4951, !4952, !4953, !4954}
!4951 = !DILocalVariable(name: "conv", arg: 1, scope: !4949, file: !2290, line: 513, type: !4314)
!4952 = !DILocalVariable(name: "sp", arg: 2, scope: !4949, file: !2290, line: 514, type: !118)
!4953 = !DILocalVariable(name: "unsupported", scope: !4949, file: !2290, line: 516, type: !145)
!4954 = !DILabel(scope: !4955, name: "int_conv", file: !2290, line: 526)
!4955 = distinct !DILexicalBlock(scope: !4949, file: !2290, line: 520, column: 27)
!4956 = !DILocation(line: 0, scope: !4949)
!4957 = !DILocation(line: 518, column: 20, scope: !4949)
!4958 = !DILocation(line: 518, column: 8, scope: !4949)
!4959 = !DILocation(line: 518, column: 18, scope: !4949)
!4960 = !DILocation(line: 520, column: 2, scope: !4949)
!4961 = !DILocation(line: 525, column: 3, scope: !4955)
!4962 = !DILocation(line: 0, scope: !4955)
!4963 = !DILocation(line: 526, column: 1, scope: !4955)
!4964 = !DILocation(line: 528, column: 24, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4955, file: !2290, line: 528, column: 7)
!4966 = !DILocation(line: 528, column: 7, scope: !4955)
!4967 = !DILocation(line: 535, column: 23, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4955, file: !2290, line: 535, column: 7)
!4969 = !DILocation(line: 535, column: 7, scope: !4955)
!4970 = !DILocation(line: 536, column: 36, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4968, file: !2290, line: 535, column: 31)
!4972 = !DILocation(line: 537, column: 3, scope: !4971)
!4973 = !DILocation(line: 570, column: 9, scope: !4955)
!4974 = !DILocation(line: 570, column: 23, scope: !4955)
!4975 = !DILocation(line: 575, column: 4, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !2290, line: 573, column: 48)
!4977 = distinct !DILexicalBlock(scope: !4955, file: !2290, line: 573, column: 7)
!4978 = !DILocation(line: 603, column: 9, scope: !4955)
!4979 = !DILocation(line: 603, column: 23, scope: !4955)
!4980 = !DILocation(line: 605, column: 24, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4955, file: !2290, line: 605, column: 7)
!4982 = !DILocation(line: 605, column: 7, scope: !4955)
!4983 = !DILocation(line: 612, column: 9, scope: !4955)
!4984 = !DILocation(line: 612, column: 23, scope: !4955)
!4985 = !DILocation(line: 619, column: 24, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4955, file: !2290, line: 619, column: 7)
!4987 = !DILocation(line: 619, column: 7, scope: !4955)
!4988 = !DILocation(line: 625, column: 9, scope: !4955)
!4989 = !DILocation(line: 625, column: 17, scope: !4955)
!4990 = !DILocation(line: 626, column: 3, scope: !4955)
!4991 = !DILocation(line: 629, column: 20, scope: !4949)
!4992 = !DILocation(line: 629, column: 8, scope: !4949)
!4993 = !DILocation(line: 518, column: 23, scope: !4949)
!4994 = !DILocation(line: 631, column: 2, scope: !4949)
!4995 = distinct !DISubprogram(name: "extract_decimal", scope: !2290, file: !2290, line: 318, type: !4996, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{!185, !184}
!4998 = !{!4999, !5000, !5001}
!4999 = !DILocalVariable(name: "str", arg: 1, scope: !4995, file: !2290, line: 318, type: !184)
!5000 = !DILocalVariable(name: "sp", scope: !4995, file: !2290, line: 320, type: !118)
!5001 = !DILocalVariable(name: "val", scope: !4995, file: !2290, line: 321, type: !185)
!5002 = !DILocation(line: 0, scope: !4995)
!5003 = !DILocation(line: 320, column: 19, scope: !4995)
!5004 = !DILocation(line: 323, column: 37, scope: !4995)
!5005 = !DILocation(line: 323, column: 17, scope: !4995)
!5006 = !DILocation(line: 323, column: 9, scope: !4995)
!5007 = !DILocation(line: 323, column: 2, scope: !4995)
!5008 = !DILocation(line: 324, column: 13, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4995, file: !2290, line: 323, column: 43)
!5010 = !DILocation(line: 324, column: 24, scope: !5009)
!5011 = !DILocation(line: 324, column: 19, scope: !5009)
!5012 = !DILocation(line: 324, column: 27, scope: !5009)
!5013 = distinct !{!5013, !5007, !5014}
!5014 = !DILocation(line: 325, column: 2, scope: !4995)
!5015 = !DILocation(line: 326, column: 7, scope: !4995)
!5016 = !DILocation(line: 327, column: 2, scope: !4995)
!5017 = distinct !DISubprogram(name: "isdigit", scope: !4797, file: !4797, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !5018)
!5018 = !{!5019}
!5019 = !DILocalVariable(name: "a", arg: 1, scope: !5017, file: !4797, line: 43, type: !107)
!5020 = !DILocation(line: 0, scope: !5017)
!5021 = !DILocation(line: 45, column: 29, scope: !5017)
!5022 = !DILocation(line: 45, column: 45, scope: !5017)
!5023 = !DILocation(line: 45, column: 2, scope: !5017)
!5024 = distinct !DISubprogram(name: "assert_post_action", scope: !5025, file: !5025, line: 26, type: !5026, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !5028)
!5025 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5026 = !DISubroutineType(types: !5027)
!5027 = !{null, !118, !32}
!5028 = !{!5029, !5030}
!5029 = !DILocalVariable(name: "file", arg: 1, scope: !5024, file: !5025, line: 26, type: !118)
!5030 = !DILocalVariable(name: "line", arg: 2, scope: !5024, file: !5025, line: 26, type: !32)
!5031 = !DILocation(line: 0, scope: !5024)
!5032 = !DILocation(line: 43, column: 2, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5024, file: !5025, line: 43, column: 2)
!5034 = !{i64 2151047937, i64 2151047953, i64 2151047979, i64 2151048007, i64 2151048027}
!5035 = !DILocation(line: 44, column: 1, scope: !5024)
!5036 = distinct !DISubprogram(name: "assert_print", scope: !5025, file: !5025, line: 46, type: !4012, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !5037)
!5037 = !{!5038, !5039}
!5038 = !DILocalVariable(name: "fmt", arg: 1, scope: !5036, file: !5025, line: 46, type: !118)
!5039 = !DILocalVariable(name: "ap", scope: !5036, file: !5025, line: 48, type: !5040)
!5040 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3022, line: 99, baseType: !5041)
!5041 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3022, line: 40, baseType: !5042)
!5042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5025, baseType: !5043)
!5043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5044)
!5044 = !{!5045}
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5043, file: !5025, line: 48, baseType: !106, size: 32)
!5046 = !DILocation(line: 0, scope: !5036)
!5047 = !DILocation(line: 48, column: 2, scope: !5036)
!5048 = !DILocation(line: 48, column: 10, scope: !5036)
!5049 = !DILocation(line: 50, column: 2, scope: !5036)
!5050 = !DILocation(line: 52, column: 2, scope: !5036)
!5051 = !DILocation(line: 54, column: 2, scope: !5036)
!5052 = !DILocation(line: 55, column: 1, scope: !5036)
!5053 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5054, file: !5054, line: 9, type: !2909, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !1949)
!5054 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!5055 = !DILocation(line: 11, column: 1, scope: !5053)
!5056 = !{i64 2147561023, i64 2147561066, i64 2147561106}
!5057 = !DILocation(line: 12, column: 1, scope: !5053)
!5058 = !{i64 2147565250, i64 2147565293, i64 2147565333}
!5059 = !DILocation(line: 13, column: 1, scope: !5053)
!5060 = !{i64 2147565459, i64 2147565502, i64 2147565542}
!5061 = !DILocation(line: 14, column: 1, scope: !5053)
!5062 = !{i64 2147565676, i64 2147565719, i64 2147565759}
!5063 = !DILocation(line: 15, column: 1, scope: !5053)
!5064 = !{i64 2147565845, i64 2147565888, i64 2147565928}
!5065 = !DILocation(line: 16, column: 1, scope: !5053)
!5066 = !{i64 2147566030, i64 2147566073, i64 2147566113}
!5067 = !DILocation(line: 17, column: 1, scope: !5053)
!5068 = !{i64 2147566247, i64 2147566290, i64 2147566330}
!5069 = !DILocation(line: 18, column: 1, scope: !5053)
!5070 = !{i64 2147566410, i64 2147566453, i64 2147566493}
!5071 = !DILocation(line: 19, column: 1, scope: !5053)
!5072 = !{i64 2147566594, i64 2147566637, i64 2147566677}
!5073 = !DILocation(line: 20, column: 1, scope: !5053)
!5074 = !{i64 2147566774, i64 2147566817, i64 2147566857}
!5075 = !DILocation(line: 21, column: 1, scope: !5053)
!5076 = !{i64 2147567017, i64 2147567060, i64 2147567100}
!5077 = !DILocation(line: 22, column: 1, scope: !5053)
!5078 = !{i64 2147567253, i64 2147567296, i64 2147567336}
!5079 = !DILocation(line: 23, column: 1, scope: !5053)
!5080 = !{i64 2147567456, i64 2147567499, i64 2147567539}
!5081 = !DILocation(line: 24, column: 1, scope: !5053)
!5082 = !{i64 2147567659, i64 2147567702, i64 2147567742}
!5083 = !DILocation(line: 25, column: 1, scope: !5053)
!5084 = !{i64 2147567858, i64 2147567901, i64 2147567941}
!5085 = !DILocation(line: 26, column: 1, scope: !5053)
!5086 = !{i64 2147568033, i64 2147568076, i64 2147568116}
!5087 = !DILocation(line: 27, column: 1, scope: !5053)
!5088 = !{i64 2147568241, i64 2147568284, i64 2147568324}
!5089 = !DILocation(line: 28, column: 1, scope: !5053)
!5090 = !{i64 2147568445, i64 2147568488, i64 2147568528}
!5091 = !DILocation(line: 29, column: 1, scope: !5053)
!5092 = !{i64 2147568638, i64 2147568681, i64 2147568721}
!5093 = !DILocation(line: 30, column: 1, scope: !5053)
!5094 = !{i64 2147568840, i64 2147568883, i64 2147568923}
!5095 = !DILocation(line: 31, column: 1, scope: !5053)
!5096 = !{i64 2147569039, i64 2147569082, i64 2147569122}
!5097 = !DILocation(line: 32, column: 1, scope: !5053)
!5098 = !{i64 2147569266, i64 2147569309, i64 2147569349}
!5099 = !DILocation(line: 33, column: 1, scope: !5053)
!5100 = !{i64 2147569481, i64 2147569524, i64 2147569564}
!5101 = !DILocation(line: 34, column: 1, scope: !5053)
!5102 = !{i64 2147569668, i64 2147569711, i64 2147569751}
!5103 = !DILocation(line: 35, column: 1, scope: !5053)
!5104 = !{i64 2147569885, i64 2147569928, i64 2147569968}
!5105 = !DILocation(line: 36, column: 1, scope: !5053)
!5106 = !{i64 2147570057, i64 2147570100, i64 2147570140}
!5107 = !DILocation(line: 37, column: 1, scope: !5053)
!5108 = !{i64 2147570259, i64 2147570302, i64 2147570342}
!5109 = !DILocation(line: 38, column: 1, scope: !5053)
!5110 = !{i64 2147570458, i64 2147570501, i64 2147570541}
!5111 = !DILocation(line: 39, column: 1, scope: !5053)
!5112 = !{i64 2147570633, i64 2147570676, i64 2147570716}
!5113 = !DILocation(line: 40, column: 1, scope: !5053)
!5114 = !{i64 2147570886, i64 2147570929, i64 2147570969}
!5115 = !DILocation(line: 41, column: 1, scope: !5053)
!5116 = !{i64 2147571124, i64 2147571167, i64 2147571207}
!5117 = !DILocation(line: 42, column: 1, scope: !5053)
!5118 = !{i64 2147571359, i64 2147571402, i64 2147571442}
!5119 = !DILocation(line: 43, column: 1, scope: !5053)
!5120 = !{i64 2147571585, i64 2147571628, i64 2147571668}
!5121 = !DILocation(line: 44, column: 1, scope: !5053)
!5122 = !{i64 2147571820, i64 2147571863, i64 2147571903}
!5123 = !DILocation(line: 45, column: 1, scope: !5053)
!5124 = !{i64 2147572055, i64 2147572098, i64 2147572138}
!5125 = !DILocation(line: 46, column: 1, scope: !5053)
!5126 = !{i64 2147572296, i64 2147572339, i64 2147572379}
!5127 = !DILocation(line: 47, column: 1, scope: !5053)
!5128 = !{i64 2147572531, i64 2147572574, i64 2147572614}
!5129 = !DILocation(line: 48, column: 1, scope: !5053)
!5130 = !{i64 2147572760, i64 2147572803, i64 2147572843}
!5131 = !DILocation(line: 49, column: 1, scope: !5053)
!5132 = !{i64 2147572995, i64 2147573038, i64 2147573078}
!5133 = !DILocation(line: 50, column: 1, scope: !5053)
!5134 = !{i64 2147573245, i64 2147573288, i64 2147573328}
!5135 = !DILocation(line: 51, column: 1, scope: !5053)
!5136 = !{i64 2147573474, i64 2147573517, i64 2147573557}
!5137 = !DILocation(line: 52, column: 1, scope: !5053)
!5138 = !{i64 2147573682, i64 2147573725, i64 2147573765}
!5139 = !DILocation(line: 53, column: 1, scope: !5053)
!5140 = !{i64 2147573893, i64 2147573936, i64 2147573976}
!5141 = !DILocation(line: 54, column: 1, scope: !5053)
!5142 = !{i64 2147574128, i64 2147574171, i64 2147574211}
!5143 = !DILocation(line: 55, column: 1, scope: !5053)
!5144 = !{i64 2147578418, i64 2147578461, i64 2147578501}
!5145 = !DILocation(line: 56, column: 1, scope: !5053)
!5146 = !{i64 2147578635, i64 2147578678, i64 2147578718}
!5147 = !DILocation(line: 57, column: 1, scope: !5053)
!5148 = !{i64 2147578864, i64 2147578907, i64 2147578947}
!5149 = !DILocation(line: 58, column: 1, scope: !5053)
!5150 = !{i64 2147579102, i64 2147579145, i64 2147579185}
!5151 = !DILocation(line: 59, column: 1, scope: !5053)
!5152 = !{i64 2147579334, i64 2147579377, i64 2147579417}
!5153 = !DILocation(line: 60, column: 1, scope: !5053)
!5154 = !{i64 2147579560, i64 2147579603, i64 2147579643}
!5155 = !DILocation(line: 61, column: 1, scope: !5053)
!5156 = !{i64 2147579777, i64 2147579820, i64 2147579860}
!5157 = !DILocation(line: 62, column: 1, scope: !5053)
!5158 = !{i64 2147580009, i64 2147580052, i64 2147580092}
!5159 = !DILocation(line: 63, column: 1, scope: !5053)
!5160 = !{i64 2147580235, i64 2147580278, i64 2147580318}
!5161 = !DILocation(line: 64, column: 1, scope: !5053)
!5162 = !{i64 2147580449, i64 2147580492, i64 2147580532}
!5163 = !DILocation(line: 65, column: 1, scope: !5053)
!5164 = !{i64 2147580669, i64 2147580712, i64 2147580752}
!5165 = !DILocation(line: 66, column: 1, scope: !5053)
!5166 = !{i64 2147580901, i64 2147580944, i64 2147580984}
!5167 = !DILocation(line: 67, column: 1, scope: !5053)
!5168 = !{i64 2147581109, i64 2147581152, i64 2147581192}
!5169 = !DILocation(line: 68, column: 1, scope: !5053)
!5170 = !{i64 2147581314, i64 2147581357, i64 2147581397}
!5171 = !DILocation(line: 69, column: 1, scope: !5053)
!5172 = !{i64 2147581531, i64 2147581574, i64 2147581614}
!5173 = !DILocation(line: 70, column: 1, scope: !5053)
!5174 = !{i64 2147581745, i64 2147581788, i64 2147581828}
!5175 = !DILocation(line: 71, column: 1, scope: !5053)
!5176 = !{i64 2147581971, i64 2147582014, i64 2147582054}
!5177 = !DILocation(line: 72, column: 1, scope: !5053)
!5178 = !{i64 2147582191, i64 2147582234, i64 2147582274}
!5179 = !DILocation(line: 73, column: 1, scope: !5053)
!5180 = !{i64 2147582396, i64 2147582439, i64 2147582479}
!5181 = !DILocation(line: 74, column: 1, scope: !5053)
!5182 = !{i64 2147582628, i64 2147582671, i64 2147582711}
!5183 = !DILocation(line: 75, column: 1, scope: !5053)
!5184 = !{i64 2147582863, i64 2147582906, i64 2147582946}
!5185 = !DILocation(line: 76, column: 1, scope: !5053)
!5186 = !{i64 2147583113, i64 2147583156, i64 2147583196}
!5187 = !DILocation(line: 77, column: 1, scope: !5053)
!5188 = !{i64 2147583363, i64 2147583406, i64 2147583446}
!5189 = !DILocation(line: 78, column: 1, scope: !5053)
!5190 = !{i64 2147583601, i64 2147583644, i64 2147583684}
!5191 = !DILocation(line: 79, column: 1, scope: !5053)
!5192 = !{i64 2147583812, i64 2147583855, i64 2147583895}
!5193 = !DILocation(line: 80, column: 1, scope: !5053)
!5194 = !{i64 2147584029, i64 2147584072, i64 2147584112}
!5195 = !DILocation(line: 81, column: 1, scope: !5053)
!5196 = !{i64 2147584225, i64 2147584268, i64 2147584308}
!5197 = !DILocation(line: 82, column: 1, scope: !5053)
!5198 = !{i64 2147584427, i64 2147584470, i64 2147584510}
!5199 = !DILocation(line: 83, column: 1, scope: !5053)
!5200 = !{i64 2147584614, i64 2147584657, i64 2147584697}
!5201 = !DILocation(line: 84, column: 1, scope: !5053)
!5202 = !{i64 2147584804, i64 2147584847, i64 2147584887}
!5203 = !DILocation(line: 85, column: 1, scope: !5053)
!5204 = !{i64 2147584991, i64 2147585034, i64 2147585074}
!5205 = !DILocation(line: 86, column: 1, scope: !5053)
!5206 = !{i64 2147585187, i64 2147585230, i64 2147585270}
!5207 = !DILocation(line: 87, column: 1, scope: !5053)
!5208 = !{i64 2147585383, i64 2147585426, i64 2147585466}
!5209 = !DILocation(line: 88, column: 1, scope: !5053)
!5210 = !{i64 2147585594, i64 2147585637, i64 2147585677}
!5211 = !DILocation(line: 89, column: 1, scope: !5053)
!5212 = !{i64 2147585802, i64 2147585845, i64 2147585885}
!5213 = !DILocation(line: 90, column: 1, scope: !5053)
!5214 = !{i64 2147585986, i64 2147586029, i64 2147586069}
!5215 = !DILocation(line: 91, column: 1, scope: !5053)
!5216 = !{i64 2147586182, i64 2147586225, i64 2147586265}
!5217 = !DILocation(line: 92, column: 1, scope: !5053)
!5218 = !{i64 2147586375, i64 2147586418, i64 2147586458}
!5219 = !DILocation(line: 93, column: 1, scope: !5053)
!5220 = !{i64 2147586622, i64 2147586665, i64 2147586705}
!5221 = !DILocation(line: 94, column: 1, scope: !5053)
!5222 = !{i64 2147586845, i64 2147586888, i64 2147586928}
!5223 = !DILocation(line: 95, column: 1, scope: !5053)
!5224 = !{i64 2147591111, i64 2147591154, i64 2147591194}
!5225 = !DILocation(line: 96, column: 1, scope: !5053)
!5226 = !{i64 2147591304, i64 2147591347, i64 2147591387}
!5227 = !DILocation(line: 97, column: 1, scope: !5053)
!5228 = !{i64 2147591470, i64 2147591513, i64 2147591553}
!5229 = !DILocation(line: 98, column: 1, scope: !5053)
!5230 = !{i64 2147591654, i64 2147591697, i64 2147591737}
!5231 = !DILocation(line: 99, column: 1, scope: !5053)
!5232 = !{i64 2147591844, i64 2147591887, i64 2147591927}
!5233 = !DILocation(line: 100, column: 1, scope: !5053)
!5234 = !{i64 2147592028, i64 2147592071, i64 2147592111}
!5235 = !DILocation(line: 101, column: 1, scope: !5053)
!5236 = !{i64 2147592242, i64 2147592285, i64 2147592325}
!5237 = !DILocation(line: 102, column: 1, scope: !5053)
!5238 = !{i64 2147592453, i64 2147592496, i64 2147592536}
!5239 = !DILocation(line: 103, column: 1, scope: !5053)
!5240 = !{i64 2147592676, i64 2147592719, i64 2147592759}
!5241 = !DILocation(line: 104, column: 1, scope: !5053)
!5242 = !{i64 2147592860, i64 2147592903, i64 2147592943}
!5243 = !DILocation(line: 105, column: 1, scope: !5053)
!5244 = !{i64 2147593026, i64 2147593069, i64 2147593109}
!5245 = !DILocation(line: 106, column: 1, scope: !5053)
!5246 = !{i64 2147593207, i64 2147593250, i64 2147593290}
!5247 = !DILocation(line: 107, column: 1, scope: !5053)
!5248 = !{i64 2147593400, i64 2147593443, i64 2147593483}
!5249 = !DILocation(line: 108, column: 1, scope: !5053)
!5250 = !{i64 2147593626, i64 2147593669, i64 2147593709}
!5251 = !DILocation(line: 109, column: 1, scope: !5053)
!5252 = !{i64 2147593840, i64 2147593883, i64 2147593923}
!5253 = !DILocation(line: 110, column: 1, scope: !5053)
!5254 = !{i64 2147594066, i64 2147594109, i64 2147594149}
!5255 = !DILocation(line: 111, column: 1, scope: !5053)
!5256 = !{i64 2147594283, i64 2147594326, i64 2147594366}
!5257 = !DILocation(line: 112, column: 1, scope: !5053)
!5258 = !{i64 2147594560, i64 2147594603, i64 2147594643}
!5259 = !DILocation(line: 113, column: 1, scope: !5053)
!5260 = !{i64 2147594786, i64 2147594829, i64 2147594869}
!5261 = !DILocation(line: 114, column: 1, scope: !5053)
!5262 = !{i64 2147594994, i64 2147595037, i64 2147595077}
!5263 = !DILocation(line: 115, column: 1, scope: !5053)
!5264 = !{i64 2147595190, i64 2147595233, i64 2147595273}
!5265 = !DILocation(line: 116, column: 1, scope: !5053)
!5266 = !{i64 2147595455, i64 2147595498, i64 2147595538}
!5267 = !DILocation(line: 117, column: 1, scope: !5053)
!5268 = !{i64 2147595669, i64 2147595712, i64 2147595752}
!5269 = !DILocation(line: 118, column: 1, scope: !5053)
!5270 = !{i64 2147595832, i64 2147595875, i64 2147595915}
!5271 = !DILocation(line: 119, column: 1, scope: !5053)
!5272 = !{i64 2147596019, i64 2147596062, i64 2147596102}
!5273 = !DILocation(line: 120, column: 1, scope: !5053)
!5274 = !{i64 2147596227, i64 2147596270, i64 2147596310}
!5275 = !DILocation(line: 121, column: 1, scope: !5053)
!5276 = !{i64 2147596423, i64 2147596466, i64 2147596506}
!5277 = !DILocation(line: 122, column: 1, scope: !5053)
!5278 = !{i64 2147596616, i64 2147596659, i64 2147596699}
!5279 = !DILocation(line: 123, column: 1, scope: !5053)
!5280 = !{i64 2147596798, i64 2147596841, i64 2147596881}
!5281 = !DILocation(line: 124, column: 1, scope: !5053)
!5282 = !{i64 2147597012, i64 2147597055, i64 2147597095}
!5283 = !DILocation(line: 125, column: 1, scope: !5053)
!5284 = !{i64 2147597211, i64 2147597254, i64 2147597294}
!5285 = !DILocation(line: 126, column: 1, scope: !5053)
!5286 = !{i64 2147597446, i64 2147597489, i64 2147597529}
!5287 = !DILocation(line: 127, column: 1, scope: !5053)
!5288 = !{i64 2147597696, i64 2147597739, i64 2147597779}
!5289 = !DILocation(line: 128, column: 1, scope: !5053)
!5290 = !{i64 2147597898, i64 2147597941, i64 2147597981}
!5291 = !DILocation(line: 129, column: 1, scope: !5053)
!5292 = !{i64 2147598121, i64 2147598164, i64 2147598204}
!5293 = !DILocation(line: 130, column: 1, scope: !5053)
!5294 = !{i64 2147598335, i64 2147598378, i64 2147598418}
!5295 = !DILocation(line: 131, column: 1, scope: !5053)
!5296 = !{i64 2147598579, i64 2147598622, i64 2147598662}
!5297 = !DILocation(line: 132, column: 1, scope: !5053)
!5298 = !{i64 2147598808, i64 2147598851, i64 2147598891}
!5299 = !DILocation(line: 133, column: 1, scope: !5053)
!5300 = !{i64 2147599034, i64 2147599077, i64 2147599117}
!5301 = !DILocation(line: 134, column: 1, scope: !5053)
!5302 = !{i64 2147599293, i64 2147599336, i64 2147599376}
!5303 = !DILocation(line: 135, column: 1, scope: !5053)
!5304 = !{i64 2147599513, i64 2147599556, i64 2147599596}
!5305 = !DILocation(line: 136, column: 1, scope: !5053)
!5306 = !{i64 2147599745, i64 2147599788, i64 2147599828}
!5307 = !DILocation(line: 137, column: 1, scope: !5053)
!5308 = !{i64 2147604047, i64 2147604090, i64 2147604130}
!5309 = !DILocation(line: 138, column: 1, scope: !5053)
!5310 = !{i64 2147604288, i64 2147604331, i64 2147604371}
!5311 = !DILocation(line: 139, column: 1, scope: !5053)
!5312 = !{i64 2147604511, i64 2147604554, i64 2147604594}
!5313 = !DILocation(line: 140, column: 1, scope: !5053)
!5314 = !{i64 2147604728, i64 2147604771, i64 2147604811}
!5315 = !DILocation(line: 141, column: 1, scope: !5053)
!5316 = !{i64 2147604969, i64 2147605012, i64 2147605052}
!5317 = !DILocation(line: 142, column: 1, scope: !5053)
!5318 = !{i64 2147605156, i64 2147605199, i64 2147605239}
!5319 = !DILocation(line: 143, column: 1, scope: !5053)
!5320 = !{i64 2147605385, i64 2147605428, i64 2147605468}
!5321 = !DILocation(line: 144, column: 1, scope: !5053)
!5322 = !{i64 2147605599, i64 2147605642, i64 2147605682}
!5323 = !DILocation(line: 145, column: 1, scope: !5053)
!5324 = !{i64 2147605801, i64 2147605844, i64 2147605884}
!5325 = !DILocation(line: 146, column: 1, scope: !5053)
!5326 = !{i64 2147605997, i64 2147606040, i64 2147606080}
!5327 = !DILocation(line: 147, column: 1, scope: !5053)
!5328 = !{i64 2147606209, i64 2147606252, i64 2147606292}
!5329 = !DILocation(line: 148, column: 1, scope: !5053)
!5330 = !{i64 2147606430, i64 2147606473, i64 2147606513}
!5331 = !DILocation(line: 149, column: 1, scope: !5053)
!5332 = !{i64 2147606644, i64 2147606687, i64 2147606727}
!5333 = !DILocation(line: 150, column: 1, scope: !5053)
!5334 = !{i64 2147606834, i64 2147606877, i64 2147606917}
!5335 = !DILocation(line: 151, column: 1, scope: !5053)
!5336 = !{i64 2147607033, i64 2147607076, i64 2147607116}
!5337 = !DILocation(line: 152, column: 1, scope: !5053)
!5338 = !{i64 2147607238, i64 2147607281, i64 2147607321}
!5339 = !DILocation(line: 153, column: 1, scope: !5053)
!5340 = !{i64 2147607458, i64 2147607501, i64 2147607541}
!5341 = !DILocation(line: 154, column: 1, scope: !5053)
!5342 = !{i64 2147607660, i64 2147607703, i64 2147607743}
!5343 = !DILocation(line: 155, column: 1, scope: !5053)
!5344 = !{i64 2147607859, i64 2147607902, i64 2147607942}
!5345 = !DILocation(line: 156, column: 1, scope: !5053)
!5346 = !{i64 2147608028, i64 2147608071, i64 2147608111}
!5347 = !DILocation(line: 157, column: 1, scope: !5053)
!5348 = !{i64 2147608212, i64 2147608255, i64 2147608295}
!5349 = !DILocation(line: 158, column: 1, scope: !5053)
!5350 = !{i64 2147608396, i64 2147608439, i64 2147608479}
!5351 = !DILocation(line: 159, column: 1, scope: !5053)
!5352 = !{i64 2147608583, i64 2147608626, i64 2147608666}
!5353 = !DILocation(line: 160, column: 1, scope: !5053)
!5354 = !{i64 2147608767, i64 2147608810, i64 2147608850}
!5355 = !DILocation(line: 161, column: 1, scope: !5053)
!5356 = !{i64 2147608954, i64 2147608997, i64 2147609037}
!5357 = !DILocation(line: 162, column: 1, scope: !5053)
!5358 = !{i64 2147609166, i64 2147609209, i64 2147609249}
!5359 = !DILocation(line: 163, column: 1, scope: !5053)
!5360 = !{i64 2147609404, i64 2147609447, i64 2147609487}
!5361 = !DILocation(line: 164, column: 1, scope: !5053)
!5362 = !{i64 2147609634, i64 2147609677, i64 2147609717}
!5363 = !DILocation(line: 165, column: 1, scope: !5053)
!5364 = !{i64 2147609863, i64 2147609906, i64 2147609946}
!5365 = !DILocation(line: 166, column: 1, scope: !5053)
!5366 = !{i64 2147610050, i64 2147610093, i64 2147610133}
!5367 = !DILocation(line: 167, column: 1, scope: !5053)
!5368 = !{i64 2147610246, i64 2147610289, i64 2147610329}
!5369 = !DILocation(line: 168, column: 1, scope: !5053)
!5370 = !{i64 2147610454, i64 2147610497, i64 2147610537}
!5371 = !DILocation(line: 169, column: 1, scope: !5053)
!5372 = !{i64 2147610666, i64 2147610709, i64 2147610749}
!5373 = !DILocation(line: 170, column: 1, scope: !5053)
!5374 = !{i64 2147610865, i64 2147610908, i64 2147610948}
!5375 = !DILocation(line: 171, column: 1, scope: !5053)
!5376 = !{i64 2147611103, i64 2147611146, i64 2147611186}
!5377 = !DILocation(line: 172, column: 1, scope: !5053)
!5378 = !{i64 2147611299, i64 2147611342, i64 2147611382}
!5379 = !DILocation(line: 173, column: 1, scope: !5053)
!5380 = !{i64 2147611501, i64 2147611544, i64 2147611584}
!5381 = !DILocation(line: 174, column: 1, scope: !5053)
!5382 = !{i64 2147611694, i64 2147611737, i64 2147611777}
!5383 = !DILocation(line: 175, column: 1, scope: !5053)
!5384 = !{i64 2147611928, i64 2147611971, i64 2147612011}
!5385 = !DILocation(line: 176, column: 1, scope: !5053)
!5386 = !{i64 2147612091, i64 2147612134, i64 2147612174}
!5387 = !DILocation(line: 177, column: 1, scope: !5053)
!5388 = !{i64 2147612330, i64 2147612373, i64 2147612413}
!5389 = !DILocation(line: 178, column: 1, scope: !5053)
!5390 = !{i64 2147612569, i64 2147612612, i64 2147612652}
!5391 = !DILocation(line: 179, column: 1, scope: !5053)
!5392 = !{i64 2147612805, i64 2147612848, i64 2147612888}
!5393 = !DILocation(line: 180, column: 1, scope: !5053)
!5394 = !{i64 2147613035, i64 2147613078, i64 2147613118}
!5395 = !DILocation(line: 181, column: 1, scope: !5053)
!5396 = !{i64 2147617283, i64 2147617326, i64 2147617366}
!5397 = !DILocation(line: 182, column: 1, scope: !5053)
!5398 = !{i64 2147617482, i64 2147617525, i64 2147617565}
!5399 = !DILocation(line: 183, column: 1, scope: !5053)
!5400 = !{i64 2147617753, i64 2147617796, i64 2147617836}
!5401 = !DILocation(line: 184, column: 1, scope: !5053)
!5402 = !{i64 2147617928, i64 2147617971, i64 2147618011}
!5403 = !DILocation(line: 185, column: 1, scope: !5053)
!5404 = !{i64 2147618162, i64 2147618205, i64 2147618245}
!5405 = !DILocation(line: 186, column: 1, scope: !5053)
!5406 = !{i64 2147618370, i64 2147618413, i64 2147618453}
!5407 = !DILocation(line: 187, column: 1, scope: !5053)
!5408 = !{i64 2147618588, i64 2147618631, i64 2147618671}
!5409 = !DILocation(line: 188, column: 1, scope: !5053)
!5410 = !{i64 2147618778, i64 2147618821, i64 2147618861}
!5411 = !DILocation(line: 189, column: 1, scope: !5053)
!5412 = !{i64 2147619010, i64 2147619053, i64 2147619093}
!5413 = !DILocation(line: 190, column: 1, scope: !5053)
!5414 = !{i64 2147619230, i64 2147619273, i64 2147619313}
!5415 = !DILocation(line: 191, column: 1, scope: !5053)
!5416 = !{i64 2147619426, i64 2147619469, i64 2147619509}
!5417 = !DILocation(line: 192, column: 1, scope: !5053)
!5418 = !{i64 2147619632, i64 2147619675, i64 2147619715}
!5419 = !DILocation(line: 193, column: 1, scope: !5053)
!5420 = !{i64 2147619837, i64 2147619880, i64 2147619920}
!5421 = !DILocation(line: 194, column: 1, scope: !5053)
!5422 = !{i64 2147620063, i64 2147620106, i64 2147620146}
!5423 = !DILocation(line: 195, column: 1, scope: !5053)
!5424 = !{i64 2147620271, i64 2147620314, i64 2147620354}
!5425 = !DILocation(line: 196, column: 1, scope: !5053)
!5426 = !{i64 2147620467, i64 2147620510, i64 2147620550}
!5427 = !DILocation(line: 197, column: 1, scope: !5053)
!5428 = !{i64 2147620699, i64 2147620742, i64 2147620782}
!5429 = !DILocation(line: 198, column: 1, scope: !5053)
!5430 = !{i64 2147620877, i64 2147620920, i64 2147620960}
!5431 = !DILocation(line: 199, column: 1, scope: !5053)
!5432 = !{i64 2147621086, i64 2147621129, i64 2147621169}
!5433 = !DILocation(line: 200, column: 1, scope: !5053)
!5434 = !{i64 2147621294, i64 2147621337, i64 2147621377}
!5435 = !DILocation(line: 201, column: 1, scope: !5053)
!5436 = !{i64 2147621490, i64 2147621533, i64 2147621573}
!5437 = !DILocation(line: 202, column: 1, scope: !5053)
!5438 = !{i64 2147621722, i64 2147621765, i64 2147621805}
!5439 = !DILocation(line: 203, column: 1, scope: !5053)
!5440 = !{i64 2147621924, i64 2147621967, i64 2147622007}
!5441 = !DILocation(line: 204, column: 1, scope: !5053)
!5442 = !{i64 2147622174, i64 2147622217, i64 2147622257}
!5443 = !DILocation(line: 205, column: 1, scope: !5053)
!5444 = !{i64 2147622412, i64 2147622455, i64 2147622495}
!5445 = !DILocation(line: 206, column: 1, scope: !5053)
!5446 = !{i64 2147622620, i64 2147622663, i64 2147622703}
!5447 = !DILocation(line: 207, column: 1, scope: !5053)
!5448 = !{i64 2147622816, i64 2147622859, i64 2147622899}
!5449 = !DILocation(line: 208, column: 1, scope: !5053)
!5450 = !{i64 2147622994, i64 2147623037, i64 2147623077}
!5451 = !DILocation(line: 209, column: 1, scope: !5053)
!5452 = !{i64 2147623211, i64 2147623254, i64 2147623294}
!5453 = !DILocation(line: 210, column: 1, scope: !5053)
!5454 = !{i64 2147623416, i64 2147623459, i64 2147623499}
!5455 = !DILocation(line: 211, column: 1, scope: !5053)
!5456 = !{i64 2147623651, i64 2147623694, i64 2147623734}
!5457 = !DILocation(line: 212, column: 1, scope: !5053)
!5458 = !{i64 2147623874, i64 2147623917, i64 2147623957}
!5459 = !DILocation(line: 213, column: 1, scope: !5053)
!5460 = !{i64 2147624091, i64 2147624134, i64 2147624174}
!5461 = !DILocation(line: 214, column: 1, scope: !5053)
!5462 = !{i64 2147624296, i64 2147624339, i64 2147624379}
!5463 = !DILocation(line: 215, column: 1, scope: !5053)
!5464 = !{i64 2147624504, i64 2147624547, i64 2147624587}
!5465 = !DILocation(line: 216, column: 1, scope: !5053)
!5466 = !{i64 2147624700, i64 2147624743, i64 2147624783}
!5467 = !DILocation(line: 217, column: 1, scope: !5053)
!5468 = !{i64 2147624914, i64 2147624957, i64 2147624997}
!5469 = !DILocation(line: 218, column: 1, scope: !5053)
!5470 = !{i64 2147625122, i64 2147625165, i64 2147625205}
!5471 = !DILocation(line: 219, column: 1, scope: !5053)
!5472 = !{i64 2147625312, i64 2147625355, i64 2147625395}
!5473 = !DILocation(line: 220, column: 1, scope: !5053)
!5474 = !{i64 2147625526, i64 2147625569, i64 2147625609}
!5475 = !DILocation(line: 221, column: 1, scope: !5053)
!5476 = !{i64 2147625788, i64 2147625831, i64 2147625871}
!5477 = !DILocation(line: 222, column: 1, scope: !5053)
!5478 = !{i64 2147625999, i64 2147626042, i64 2147626082}
!5479 = !DILocation(line: 223, column: 1, scope: !5053)
!5480 = !{i64 2147630304, i64 2147630347, i64 2147630387}
!5481 = !DILocation(line: 224, column: 1, scope: !5053)
!5482 = !{i64 2147630515, i64 2147630558, i64 2147630598}
!5483 = !DILocation(line: 225, column: 1, scope: !5053)
!5484 = !{i64 2147630744, i64 2147630787, i64 2147630827}
!5485 = !DILocation(line: 226, column: 1, scope: !5053)
!5486 = !{i64 2147631009, i64 2147631052, i64 2147631092}
!5487 = !DILocation(line: 227, column: 1, scope: !5053)
!5488 = !{i64 2147631214, i64 2147631257, i64 2147631297}
!5489 = !DILocation(line: 228, column: 1, scope: !5053)
!5490 = !{i64 2147631410, i64 2147631453, i64 2147631493}
!5491 = !DILocation(line: 229, column: 1, scope: !5053)
!5492 = !{i64 2147631633, i64 2147631676, i64 2147631716}
!5493 = !DILocation(line: 230, column: 1, scope: !5053)
!5494 = !{i64 2147631796, i64 2147631839, i64 2147631879}
!5495 = !DILocation(line: 231, column: 1, scope: !5053)
!5496 = !{i64 2147632001, i64 2147632044, i64 2147632084}
!5497 = !DILocation(line: 232, column: 1, scope: !5053)
!5498 = !{i64 2147632221, i64 2147632264, i64 2147632304}
!5499 = !DILocation(line: 233, column: 1, scope: !5053)
!5500 = !{i64 2147632435, i64 2147632478, i64 2147632518}
!5501 = !DILocation(line: 234, column: 1, scope: !5053)
!5502 = !{i64 2147632679, i64 2147632722, i64 2147632762}
!5503 = !DILocation(line: 235, column: 1, scope: !5053)
!5504 = !{i64 2147632911, i64 2147632954, i64 2147632994}
!5505 = !DILocation(line: 236, column: 1, scope: !5053)
!5506 = !{i64 2147633125, i64 2147633168, i64 2147633208}
!5507 = !DILocation(line: 237, column: 1, scope: !5053)
!5508 = !{i64 2147633336, i64 2147633379, i64 2147633419}
!5509 = !DILocation(line: 238, column: 1, scope: !5053)
!5510 = !{i64 2147633529, i64 2147633572, i64 2147633612}
!5511 = !DILocation(line: 239, column: 1, scope: !5053)
!5512 = !{i64 2147633728, i64 2147633771, i64 2147633811}
!5513 = !DILocation(line: 240, column: 1, scope: !5053)
!5514 = !{i64 2147633900, i64 2147633943, i64 2147633983}
!5515 = !DILocation(line: 241, column: 1, scope: !5053)
!5516 = !{i64 2147634093, i64 2147634136, i64 2147634176}
!5517 = !DILocation(line: 242, column: 1, scope: !5053)
!5518 = !{i64 2147634265, i64 2147634308, i64 2147634348}
!5519 = !DILocation(line: 243, column: 1, scope: !5053)
!5520 = !{i64 2147634455, i64 2147634498, i64 2147634538}
!5521 = !DILocation(line: 244, column: 1, scope: !5053)
!5522 = !{i64 2147634648, i64 2147634691, i64 2147634731}
!5523 = !DILocation(line: 245, column: 1, scope: !5053)
!5524 = !{i64 2147634844, i64 2147634887, i64 2147634927}
!5525 = !DILocation(line: 246, column: 1, scope: !5053)
!5526 = !{i64 2147635007, i64 2147635050, i64 2147635090}
!5527 = !DILocation(line: 247, column: 1, scope: !5053)
!5528 = !{i64 2147635209, i64 2147635252, i64 2147635292}
!5529 = !DILocation(line: 248, column: 1, scope: !5053)
!5530 = !{i64 2147635420, i64 2147635463, i64 2147635503}
!5531 = !DILocation(line: 249, column: 1, scope: !5053)
!5532 = !{i64 2147635625, i64 2147635668, i64 2147635708}
!5533 = !DILocation(line: 250, column: 1, scope: !5053)
!5534 = !{i64 2147635833, i64 2147635876, i64 2147635916}
!5535 = !DILocation(line: 251, column: 1, scope: !5053)
!5536 = !{i64 2147636026, i64 2147636069, i64 2147636109}
!5537 = !DILocation(line: 252, column: 1, scope: !5053)
!5538 = !{i64 2147636264, i64 2147636307, i64 2147636347}
!5539 = !DILocation(line: 253, column: 1, scope: !5053)
!5540 = !{i64 2147636451, i64 2147636494, i64 2147636534}
!5541 = !DILocation(line: 254, column: 1, scope: !5053)
!5542 = !{i64 2147636620, i64 2147636663, i64 2147636703}
!5543 = !DILocation(line: 255, column: 1, scope: !5053)
!5544 = !{i64 2147636813, i64 2147636856, i64 2147636896}
!5545 = !DILocation(line: 256, column: 1, scope: !5053)
!5546 = !{i64 2147637018, i64 2147637061, i64 2147637101}
!5547 = !DILocation(line: 257, column: 1, scope: !5053)
!5548 = !{i64 2147637229, i64 2147637272, i64 2147637312}
!5549 = !DILocation(line: 258, column: 1, scope: !5053)
!5550 = !{i64 2147637452, i64 2147637495, i64 2147637535}
!5551 = !DILocation(line: 259, column: 1, scope: !5053)
!5552 = !{i64 2147637666, i64 2147637709, i64 2147637749}
!5553 = !DILocation(line: 260, column: 1, scope: !5053)
!5554 = !{i64 2147637884, i64 2147637927, i64 2147637967}
!5555 = !DILocation(line: 261, column: 1, scope: !5053)
!5556 = !{i64 2147638098, i64 2147638141, i64 2147638181}
!5557 = !DILocation(line: 262, column: 1, scope: !5053)
!5558 = !{i64 2147638312, i64 2147638355, i64 2147638395}
!5559 = !DILocation(line: 263, column: 1, scope: !5053)
!5560 = !{i64 2147638529, i64 2147638572, i64 2147638612}
!5561 = !DILocation(line: 264, column: 1, scope: !5053)
!5562 = !{i64 2147638743, i64 2147638786, i64 2147638826}
!5563 = !DILocation(line: 265, column: 1, scope: !5053)
!5564 = !{i64 2147638984, i64 2147639027, i64 2147639067}
!5565 = !DILocation(line: 266, column: 1, scope: !5053)
!5566 = !{i64 2147639150, i64 2147639193, i64 2147639233}
!5567 = !DILocation(line: 267, column: 1, scope: !5053)
!5568 = !{i64 2147643438, i64 2147643481, i64 2147643521}
!5569 = !DILocation(line: 268, column: 1, scope: !5053)
!5570 = !{i64 2147643655, i64 2147643698, i64 2147643738}
!5571 = !DILocation(line: 269, column: 1, scope: !5053)
!5572 = !{i64 2147643860, i64 2147643903, i64 2147643943}
!5573 = !DILocation(line: 270, column: 1, scope: !5053)
!5574 = !{i64 2147644077, i64 2147644120, i64 2147644160}
!5575 = !DILocation(line: 271, column: 1, scope: !5053)
!5576 = !{i64 2147644369, i64 2147644412, i64 2147644452}
!5577 = !DILocation(line: 272, column: 1, scope: !5053)
!5578 = !{i64 2147644601, i64 2147644644, i64 2147644684}
!5579 = !DILocation(line: 273, column: 1, scope: !5053)
!5580 = !{i64 2147644818, i64 2147644861, i64 2147644901}
!5581 = !DILocation(line: 274, column: 1, scope: !5053)
!5582 = !{i64 2147645025, i64 2147645068, i64 2147645108}
!5583 = !DILocation(line: 275, column: 1, scope: !5053)
!5584 = !{i64 2147645226, i64 2147645269, i64 2147645309}
!5585 = !DILocation(line: 276, column: 1, scope: !5053)
!5586 = !{i64 2147645458, i64 2147645501, i64 2147645541}
!5587 = !DILocation(line: 277, column: 1, scope: !5053)
!5588 = !{i64 2147645666, i64 2147645709, i64 2147645749}
!5589 = !DILocation(line: 278, column: 1, scope: !5053)
!5590 = !{i64 2147645856, i64 2147645899, i64 2147645939}
!5591 = !DILocation(line: 279, column: 1, scope: !5053)
!5592 = !{i64 2147646082, i64 2147646125, i64 2147646165}
!5593 = !DILocation(line: 280, column: 1, scope: !5053)
!5594 = !{i64 2147646271, i64 2147646314, i64 2147646354}
!5595 = !DILocation(line: 281, column: 1, scope: !5053)
!5596 = !{i64 2147646542, i64 2147646585, i64 2147646625}
!5597 = !DILocation(line: 282, column: 1, scope: !5053)
!5598 = !{i64 2147646762, i64 2147646805, i64 2147646845}
!5599 = !DILocation(line: 283, column: 1, scope: !5053)
!5600 = !{i64 2147647015, i64 2147647058, i64 2147647098}
!5601 = !DILocation(line: 284, column: 1, scope: !5053)
!5602 = !{i64 2147647223, i64 2147647266, i64 2147647306}
!5603 = !DILocation(line: 285, column: 1, scope: !5053)
!5604 = !{i64 2147647455, i64 2147647498, i64 2147647538}
!5605 = !DILocation(line: 286, column: 1, scope: !5053)
!5606 = !{i64 2147647666, i64 2147647709, i64 2147647749}
!5607 = !DILocation(line: 287, column: 1, scope: !5053)
!5608 = !{i64 2147647856, i64 2147647899, i64 2147647939}
!5609 = !DILocation(line: 288, column: 1, scope: !5053)
!5610 = !{i64 2147648070, i64 2147648113, i64 2147648153}
!5611 = !DILocation(line: 289, column: 1, scope: !5053)
!5612 = !{i64 2147648269, i64 2147648312, i64 2147648352}
!5613 = !DILocation(line: 290, column: 1, scope: !5053)
!5614 = !{i64 2147648456, i64 2147648499, i64 2147648539}
!5615 = !DILocation(line: 291, column: 1, scope: !5053)
!5616 = !{i64 2147648652, i64 2147648695, i64 2147648735}
!5617 = !DILocation(line: 292, column: 1, scope: !5053)
!5618 = !{i64 2147648860, i64 2147648903, i64 2147648943}
!5619 = !DILocation(line: 293, column: 1, scope: !5053)
!5620 = !{i64 2147649089, i64 2147649132, i64 2147649172}
!5621 = !DILocation(line: 294, column: 1, scope: !5053)
!5622 = !{i64 2147649291, i64 2147649334, i64 2147649374}
!5623 = !DILocation(line: 295, column: 1, scope: !5053)
!5624 = !{i64 2147649490, i64 2147649533, i64 2147649573}
!5625 = !DILocation(line: 296, column: 1, scope: !5053)
!5626 = !{i64 2147649707, i64 2147649750, i64 2147649790}
!5627 = !DILocation(line: 298, column: 1, scope: !5053)
!5628 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !632, file: !632, line: 225, type: !639, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5629)
!5629 = !{!5630}
!5630 = !DILocalVariable(name: "arg", arg: 1, scope: !5628, file: !632, line: 225, type: !641)
!5631 = !DILocation(line: 0, scope: !5628)
!5632 = !DILocation(line: 230, column: 2, scope: !5628)
!5633 = !DILocation(line: 233, column: 2, scope: !5628)
!5634 = !DILocation(line: 236, column: 2, scope: !5628)
!5635 = !DILocation(line: 255, column: 2, scope: !5628)
!5636 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !632, file: !632, line: 50, type: !2909, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !1949)
!5637 = !DILocation(line: 53, column: 2, scope: !5636)
!5638 = !DILocation(line: 54, column: 1, scope: !5636)
!5639 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !632, file: !632, line: 14, type: !2909, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !1949)
!5640 = !DILocation(line: 23, column: 2, scope: !5639)
!5641 = !DILocation(line: 24, column: 2, scope: !5639)
!5642 = !DILocation(line: 25, column: 2, scope: !5639)
!5643 = !DILocation(line: 27, column: 2, scope: !5639)
!5644 = !DILocation(line: 31, column: 2, scope: !5639)
!5645 = !DILocation(line: 33, column: 2, scope: !5639)
!5646 = !DILocation(line: 36, column: 2, scope: !5639)
!5647 = !DILocation(line: 37, column: 2, scope: !5639)
!5648 = !DILocation(line: 40, column: 2, scope: !5639)
!5649 = !DILocation(line: 41, column: 2, scope: !5639)
!5650 = !DILocation(line: 42, column: 2, scope: !5639)
!5651 = !DILocation(line: 43, column: 2, scope: !5639)
!5652 = !DILocation(line: 44, column: 2, scope: !5639)
!5653 = !DILocation(line: 47, column: 2, scope: !5639)
!5654 = !DILocation(line: 48, column: 1, scope: !5639)
!5655 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !632, file: !632, line: 57, type: !2909, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !1949)
!5656 = !DILocation(line: 61, column: 2, scope: !5655)
!5657 = !DILocation(line: 63, column: 2, scope: !5655)
!5658 = !DILocation(line: 80, column: 1, scope: !5655)
!5659 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5660, file: !5660, line: 164, type: !5661, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5663)
!5660 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5661 = !DISubroutineType(types: !5662)
!5662 = !{null, !576, !152, !195, !145, !145}
!5663 = !{!5664, !5665, !5666, !5667, !5668}
!5664 = !DILocalVariable(name: "base", arg: 1, scope: !5659, file: !5660, line: 164, type: !576)
!5665 = !DILocalVariable(name: "pdap", arg: 2, scope: !5659, file: !5660, line: 164, type: !152)
!5666 = !DILocalVariable(name: "perm", arg: 3, scope: !5659, file: !5660, line: 164, type: !195)
!5667 = !DILocalVariable(name: "sreq", arg: 4, scope: !5659, file: !5660, line: 164, type: !145)
!5668 = !DILocalVariable(name: "lock", arg: 5, scope: !5659, file: !5660, line: 164, type: !145)
!5669 = !DILocation(line: 0, scope: !5659)
!5670 = !DILocation(line: 166, column: 24, scope: !5659)
!5671 = !DILocation(line: 166, column: 5, scope: !5659)
!5672 = !DILocation(line: 166, column: 22, scope: !5659)
!5673 = !DILocation(line: 167, column: 1, scope: !5659)
!5674 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !222, file: !222, line: 454, type: !5675, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5677)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{null, !504, !152, !152}
!5677 = !{!5678, !5679, !5680}
!5678 = !DILocalVariable(name: "base", arg: 1, scope: !5674, file: !222, line: 454, type: !504)
!5679 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5674, file: !222, line: 454, type: !152)
!5680 = !DILocalVariable(name: "control", arg: 3, scope: !5674, file: !222, line: 454, type: !152)
!5681 = !DILocation(line: 0, scope: !5674)
!5682 = !DILocation(line: 456, column: 5, scope: !5674)
!5683 = !DILocation(line: 456, column: 22, scope: !5674)
!5684 = !DILocation(line: 457, column: 1, scope: !5674)
!5685 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !222, file: !222, line: 379, type: !5686, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5688)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{null, !504, !152}
!5688 = !{!5689, !5690}
!5689 = !DILocalVariable(name: "base", arg: 1, scope: !5685, file: !222, line: 379, type: !504)
!5690 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5685, file: !222, line: 379, type: !152)
!5691 = !DILocation(line: 0, scope: !5685)
!5692 = !DILocation(line: 381, column: 26, scope: !5685)
!5693 = !DILocation(line: 382, column: 1, scope: !5685)
!5694 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5695, file: !5695, line: 136, type: !5696, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5698)
!5695 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5696 = !DISubroutineType(types: !5697)
!5697 = !{null, !619}
!5698 = !{!5699}
!5699 = !DILocalVariable(name: "base", arg: 1, scope: !5694, file: !5695, line: 136, type: !619)
!5700 = !DILocation(line: 0, scope: !5694)
!5701 = !DILocation(line: 138, column: 16, scope: !5694)
!5702 = !DILocation(line: 139, column: 1, scope: !5694)
!5703 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5660, file: !5660, line: 136, type: !5704, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5706)
!5704 = !DISubroutineType(types: !5705)
!5705 = !{null, !576, !152, !152, !145}
!5706 = !{!5707, !5708, !5709, !5710}
!5707 = !DILocalVariable(name: "base", arg: 1, scope: !5703, file: !5660, line: 136, type: !576)
!5708 = !DILocalVariable(name: "mda", arg: 2, scope: !5703, file: !5660, line: 136, type: !152)
!5709 = !DILocalVariable(name: "domainId", arg: 3, scope: !5703, file: !5660, line: 136, type: !152)
!5710 = !DILocalVariable(name: "lock", arg: 4, scope: !5703, file: !5660, line: 136, type: !145)
!5711 = !DILocation(line: 0, scope: !5703)
!5712 = !DILocation(line: 140, column: 20, scope: !5703)
!5713 = !DILocation(line: 141, column: 1, scope: !5703)
!5714 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5715, file: !5715, line: 14, type: !4012, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5716)
!5715 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5716 = !{!5717, !5718}
!5717 = !DILocalVariable(name: "fmt", arg: 1, scope: !5714, file: !5715, line: 14, type: !118)
!5718 = !DILocalVariable(name: "ap", scope: !5714, file: !5715, line: 16, type: !5719)
!5719 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3022, line: 99, baseType: !5720)
!5720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3022, line: 40, baseType: !5721)
!5721 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5715, baseType: !5722)
!5722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5723)
!5723 = !{!5724}
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5722, file: !5715, line: 16, baseType: !106, size: 32)
!5725 = !DILocation(line: 0, scope: !5714)
!5726 = !DILocation(line: 16, column: 2, scope: !5714)
!5727 = !DILocation(line: 16, column: 10, scope: !5714)
!5728 = !DILocation(line: 18, column: 2, scope: !5714)
!5729 = !DILocation(line: 19, column: 2, scope: !5714)
!5730 = !DILocation(line: 20, column: 2, scope: !5714)
!5731 = !DILocation(line: 21, column: 1, scope: !5714)
!5732 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5715, file: !5715, line: 23, type: !5733, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5735)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{null, !118, !5719}
!5735 = !{!5736, !5737}
!5736 = !DILocalVariable(name: "fmt", arg: 1, scope: !5732, file: !5715, line: 23, type: !118)
!5737 = !DILocalVariable(name: "ap", arg: 2, scope: !5732, file: !5715, line: 23, type: !5719)
!5738 = !DILocation(line: 0, scope: !5732)
!5739 = !DILocation(line: 25, column: 2, scope: !5732)
!5740 = !DILocation(line: 26, column: 1, scope: !5732)
!5741 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5715, file: !5715, line: 52, type: !5742, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5744)
!5742 = !DISubroutineType(types: !5743)
!5743 = !{null, !107, !13, !185}
!5744 = !{!5745, !5746, !5747, !5748}
!5745 = !DILocalVariable(name: "level", arg: 1, scope: !5741, file: !5715, line: 52, type: !107)
!5746 = !DILocalVariable(name: "data", arg: 2, scope: !5741, file: !5715, line: 52, type: !13)
!5747 = !DILocalVariable(name: "size", arg: 3, scope: !5741, file: !5715, line: 52, type: !185)
!5748 = !DILocalVariable(name: "data_buffer", scope: !5741, file: !5715, line: 54, type: !118)
!5749 = !DILocation(line: 0, scope: !5741)
!5750 = !DILocation(line: 55, column: 14, scope: !5741)
!5751 = !DILocation(line: 55, column: 2, scope: !5741)
!5752 = !DILocation(line: 56, column: 3, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5741, file: !5715, line: 55, column: 20)
!5754 = !DILocation(line: 57, column: 3, scope: !5753)
!5755 = !DILocation(line: 59, column: 7, scope: !5753)
!5756 = distinct !{!5756, !5751, !5757}
!5757 = !DILocation(line: 65, column: 2, scope: !5741)
!5758 = !DILocation(line: 66, column: 1, scope: !5741)
!5759 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5760, file: !5760, line: 175, type: !5761, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5763)
!5760 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5761 = !DISubroutineType(types: !5762)
!5762 = !{!120, !107}
!5763 = !{!5764}
!5764 = !DILocalVariable(name: "level", arg: 1, scope: !5759, file: !5760, line: 175, type: !107)
!5765 = !DILocation(line: 0, scope: !5759)
!5766 = !DILocation(line: 177, column: 2, scope: !5759)
!5767 = !DILocation(line: 189, column: 1, scope: !5759)
!5768 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5715, file: !5715, line: 28, type: !5769, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5771)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{null, !118, !185}
!5771 = !{!5772, !5773, !5774, !5776, !5778}
!5772 = !DILocalVariable(name: "data", arg: 1, scope: !5768, file: !5715, line: 28, type: !118)
!5773 = !DILocalVariable(name: "length", arg: 2, scope: !5768, file: !5715, line: 28, type: !185)
!5774 = !DILocalVariable(name: "i", scope: !5775, file: !5715, line: 30, type: !185)
!5775 = distinct !DILexicalBlock(scope: !5768, file: !5715, line: 30, column: 2)
!5776 = !DILocalVariable(name: "i", scope: !5777, file: !5715, line: 40, type: !185)
!5777 = distinct !DILexicalBlock(scope: !5768, file: !5715, line: 40, column: 2)
!5778 = !DILocalVariable(name: "c", scope: !5779, file: !5715, line: 42, type: !196)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !5715, line: 41, column: 19)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !5715, line: 41, column: 7)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !5715, line: 40, column: 54)
!5782 = distinct !DILexicalBlock(scope: !5777, file: !5715, line: 40, column: 2)
!5783 = !DILocation(line: 0, scope: !5768)
!5784 = !DILocation(line: 0, scope: !5775)
!5785 = !DILocation(line: 30, column: 2, scope: !5775)
!5786 = !DILocation(line: 38, column: 2, scope: !5768)
!5787 = !DILocation(line: 0, scope: !5777)
!5788 = !DILocation(line: 40, column: 2, scope: !5777)
!5789 = !DILocation(line: 31, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !5715, line: 31, column: 7)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !5715, line: 30, column: 54)
!5792 = distinct !DILexicalBlock(scope: !5775, file: !5715, line: 30, column: 2)
!5793 = !DILocation(line: 31, column: 7, scope: !5791)
!5794 = !DILocation(line: 32, column: 35, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5790, file: !5715, line: 31, column: 19)
!5796 = !DILocation(line: 32, column: 20, scope: !5795)
!5797 = !DILocation(line: 32, column: 4, scope: !5795)
!5798 = !DILocation(line: 33, column: 3, scope: !5795)
!5799 = !DILocation(line: 34, column: 4, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5790, file: !5715, line: 33, column: 10)
!5801 = !DILocation(line: 30, column: 50, scope: !5792)
!5802 = !DILocation(line: 30, column: 24, scope: !5792)
!5803 = distinct !{!5803, !5785, !5804}
!5804 = !DILocation(line: 36, column: 2, scope: !5775)
!5805 = !DILocation(line: 49, column: 2, scope: !5768)
!5806 = !DILocation(line: 50, column: 1, scope: !5768)
!5807 = !DILocation(line: 41, column: 9, scope: !5780)
!5808 = !DILocation(line: 41, column: 7, scope: !5781)
!5809 = !DILocation(line: 42, column: 22, scope: !5779)
!5810 = !DILocation(line: 0, scope: !5779)
!5811 = !DILocation(line: 44, column: 25, scope: !5779)
!5812 = !DILocation(line: 44, column: 17, scope: !5779)
!5813 = !DILocation(line: 44, column: 33, scope: !5779)
!5814 = !DILocation(line: 44, column: 4, scope: !5779)
!5815 = !DILocation(line: 45, column: 3, scope: !5779)
!5816 = !DILocation(line: 46, column: 4, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5780, file: !5715, line: 45, column: 10)
!5818 = !DILocation(line: 40, column: 50, scope: !5782)
!5819 = !DILocation(line: 40, column: 24, scope: !5782)
!5820 = distinct !{!5820, !5788, !5821}
!5821 = !DILocation(line: 48, column: 2, scope: !5777)
!5822 = distinct !DISubprogram(name: "isprint", scope: !4797, file: !4797, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5823)
!5823 = !{!5824}
!5824 = !DILocalVariable(name: "c", arg: 1, scope: !5822, file: !4797, line: 37, type: !107)
!5825 = !DILocation(line: 0, scope: !5822)
!5826 = !DILocation(line: 39, column: 38, scope: !5822)
!5827 = !DILocation(line: 39, column: 2, scope: !5822)
!5828 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5829, file: !5829, line: 57, type: !5830, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5876)
!5829 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5830 = !DISubroutineType(types: !5831)
!5831 = !{null, !32, !5832}
!5832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5833, size: 32)
!5833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5834)
!5834 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2448, line: 141, baseType: !5835)
!5835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2448, line: 97, size: 256, elements: !5836)
!5836 = !{!5837}
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5835, file: !2448, line: 107, baseType: !5838, size: 256)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !5839)
!5839 = !{!5840, !5845, !5850, !5855, !5860, !5865, !5870, !5875}
!5840 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !2448, line: 99, baseType: !5841, size: 32)
!5841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !2448, line: 99, size: 32, elements: !5842)
!5842 = !{!5843, !5844}
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5841, file: !2448, line: 99, baseType: !152, size: 32)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5841, file: !2448, line: 99, baseType: !152, size: 32)
!5845 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !2448, line: 100, baseType: !5846, size: 32, offset: 32)
!5846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !2448, line: 100, size: 32, elements: !5847)
!5847 = !{!5848, !5849}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5846, file: !2448, line: 100, baseType: !152, size: 32)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5846, file: !2448, line: 100, baseType: !152, size: 32)
!5850 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !2448, line: 101, baseType: !5851, size: 32, offset: 64)
!5851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !2448, line: 101, size: 32, elements: !5852)
!5852 = !{!5853, !5854}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5851, file: !2448, line: 101, baseType: !152, size: 32)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5851, file: !2448, line: 101, baseType: !152, size: 32)
!5855 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !2448, line: 102, baseType: !5856, size: 32, offset: 96)
!5856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !2448, line: 102, size: 32, elements: !5857)
!5857 = !{!5858, !5859}
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5856, file: !2448, line: 102, baseType: !152, size: 32)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5856, file: !2448, line: 102, baseType: !152, size: 32)
!5860 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !2448, line: 103, baseType: !5861, size: 32, offset: 128)
!5861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !2448, line: 103, size: 32, elements: !5862)
!5862 = !{!5863, !5864}
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5861, file: !2448, line: 103, baseType: !152, size: 32)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5861, file: !2448, line: 103, baseType: !152, size: 32)
!5865 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !2448, line: 104, baseType: !5866, size: 32, offset: 160)
!5866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !2448, line: 104, size: 32, elements: !5867)
!5867 = !{!5868, !5869}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5866, file: !2448, line: 104, baseType: !152, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5866, file: !2448, line: 104, baseType: !152, size: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !2448, line: 105, baseType: !5871, size: 32, offset: 192)
!5871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !2448, line: 105, size: 32, elements: !5872)
!5872 = !{!5873, !5874}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5871, file: !2448, line: 105, baseType: !152, size: 32)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5871, file: !2448, line: 105, baseType: !152, size: 32)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5838, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!5876 = !{!5877, !5878}
!5877 = !DILocalVariable(name: "reason", arg: 1, scope: !5828, file: !5829, line: 57, type: !32)
!5878 = !DILocalVariable(name: "esf", arg: 2, scope: !5828, file: !5829, line: 57, type: !5832)
!5879 = !DILocation(line: 0, scope: !5828)
!5880 = !DILocation(line: 60, column: 10, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5828, file: !5829, line: 60, column: 6)
!5882 = !DILocation(line: 60, column: 6, scope: !5828)
!5883 = !DILocation(line: 61, column: 3, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5881, file: !5829, line: 60, column: 19)
!5885 = !DILocation(line: 62, column: 2, scope: !5884)
!5886 = !DILocation(line: 63, column: 2, scope: !5828)
!5887 = !DILocation(line: 64, column: 1, scope: !5828)
!5888 = distinct !DISubprogram(name: "esf_dump", scope: !5829, file: !5829, line: 20, type: !5889, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5891)
!5889 = !DISubroutineType(types: !5890)
!5890 = !{null, !5832}
!5891 = !{!5892}
!5892 = !DILocalVariable(name: "esf", arg: 1, scope: !5888, file: !5829, line: 20, type: !5832)
!5893 = !DILocation(line: 0, scope: !5888)
!5894 = !DILocation(line: 22, column: 2, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !5829, line: 22, column: 2)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !5829, line: 22, column: 2)
!5897 = distinct !DILexicalBlock(scope: !5898, file: !5829, line: 22, column: 2)
!5898 = distinct !DILexicalBlock(scope: !5888, file: !5829, line: 22, column: 2)
!5899 = !DILocation(line: 24, column: 2, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !5829, line: 24, column: 2)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !5829, line: 24, column: 2)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !5829, line: 24, column: 2)
!5903 = distinct !DILexicalBlock(scope: !5888, file: !5829, line: 24, column: 2)
!5904 = !DILocation(line: 26, column: 2, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !5829, line: 26, column: 2)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !5829, line: 26, column: 2)
!5907 = distinct !DILexicalBlock(scope: !5908, file: !5829, line: 26, column: 2)
!5908 = distinct !DILexicalBlock(scope: !5888, file: !5829, line: 26, column: 2)
!5909 = !DILocation(line: 53, column: 2, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !5829, line: 53, column: 2)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !5829, line: 53, column: 2)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !5829, line: 53, column: 2)
!5913 = distinct !DILexicalBlock(scope: !5888, file: !5829, line: 53, column: 2)
!5914 = !DILocation(line: 55, column: 1, scope: !5888)
!5915 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5829, file: !5829, line: 82, type: !5916, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5931)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{null, !5832, !5918}
!5918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5919, size: 32)
!5919 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !785, line: 37, baseType: !5920)
!5920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !5921)
!5921 = !{!5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930}
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5920, file: !785, line: 26, baseType: !152, size: 32)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5920, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5920, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5920, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5920, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5920, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5920, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5920, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5920, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!5931 = !{!5932, !5933, !5934}
!5932 = !DILocalVariable(name: "esf", arg: 1, scope: !5915, file: !5829, line: 82, type: !5832)
!5933 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5915, file: !5829, line: 82, type: !5918)
!5934 = !DILocalVariable(name: "reason", scope: !5915, file: !5829, line: 88, type: !32)
!5935 = !DILocation(line: 0, scope: !5915)
!5936 = !DILocation(line: 88, column: 35, scope: !5915)
!5937 = !DILocation(line: 108, column: 2, scope: !5915)
!5938 = !DILocation(line: 131, column: 1, scope: !5915)
!5939 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5829, file: !5829, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5940)
!5940 = !{!5941, !5942, !5943}
!5941 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5939, file: !5829, line: 133, type: !106)
!5942 = !DILocalVariable(name: "ssf_contents", scope: !5939, file: !5829, line: 135, type: !1403)
!5943 = !DILocalVariable(name: "oops_esf", scope: !5939, file: !5829, line: 136, type: !5834)
!5944 = !DILocation(line: 0, scope: !5939)
!5945 = !DILocation(line: 136, column: 2, scope: !5939)
!5946 = !DILocation(line: 136, column: 15, scope: !5939)
!5947 = !DILocation(line: 139, column: 22, scope: !5939)
!5948 = !DILocation(line: 139, column: 17, scope: !5939)
!5949 = !DILocation(line: 139, column: 20, scope: !5939)
!5950 = !DILocation(line: 141, column: 2, scope: !5939)
!5951 = !DILocation(line: 142, column: 2, scope: !5939)
!5952 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5953, file: !5953, line: 40, type: !5954, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5956)
!5953 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5954 = !DISubroutineType(types: !5955)
!5955 = !{null, !32}
!5956 = !{!5957}
!5957 = !DILocalVariable(name: "irq", arg: 1, scope: !5952, file: !5953, line: 40, type: !32)
!5958 = !DILocation(line: 0, scope: !5952)
!5959 = !DILocation(line: 42, column: 2, scope: !5952)
!5960 = !DILocation(line: 43, column: 1, scope: !5952)
!5961 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1598, file: !1598, line: 1684, type: !5962, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5964)
!5962 = !DISubroutineType(types: !5963)
!5963 = !{null, !2342}
!5964 = !{!5965}
!5965 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5961, file: !1598, line: 1684, type: !2342)
!5966 = !DILocation(line: 0, scope: !5961)
!5967 = !DILocation(line: 1686, column: 23, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5961, file: !1598, line: 1686, column: 7)
!5969 = !DILocation(line: 1686, column: 7, scope: !5961)
!5970 = !DILocation(line: 1688, column: 5, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5968, file: !1598, line: 1687, column: 3)
!5972 = !{i64 2154452928}
!5973 = !DILocation(line: 1689, column: 81, scope: !5971)
!5974 = !DILocation(line: 1689, column: 60, scope: !5971)
!5975 = !DILocation(line: 1689, column: 34, scope: !5971)
!5976 = !DILocation(line: 1689, column: 5, scope: !5971)
!5977 = !DILocation(line: 1689, column: 43, scope: !5971)
!5978 = !DILocation(line: 1690, column: 5, scope: !5971)
!5979 = !{i64 2154453042}
!5980 = !DILocation(line: 1691, column: 3, scope: !5971)
!5981 = !DILocation(line: 1692, column: 1, scope: !5961)
!5982 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5953, file: !5953, line: 45, type: !5954, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5983)
!5983 = !{!5984}
!5984 = !DILocalVariable(name: "irq", arg: 1, scope: !5982, file: !5953, line: 45, type: !32)
!5985 = !DILocation(line: 0, scope: !5982)
!5986 = !DILocation(line: 47, column: 2, scope: !5982)
!5987 = !DILocation(line: 48, column: 1, scope: !5982)
!5988 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1598, file: !1598, line: 1722, type: !5962, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5989)
!5989 = !{!5990}
!5990 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5988, file: !1598, line: 1722, type: !2342)
!5991 = !DILocation(line: 0, scope: !5988)
!5992 = !DILocation(line: 1724, column: 23, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5988, file: !1598, line: 1724, column: 7)
!5994 = !DILocation(line: 1724, column: 7, scope: !5988)
!5995 = !DILocation(line: 1726, column: 81, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5993, file: !1598, line: 1725, column: 3)
!5997 = !DILocation(line: 1726, column: 60, scope: !5996)
!5998 = !DILocation(line: 1726, column: 34, scope: !5996)
!5999 = !DILocation(line: 1726, column: 5, scope: !5996)
!6000 = !DILocation(line: 1726, column: 43, scope: !5996)
!6001 = !DILocation(line: 271, column: 3, scope: !6002, inlinedAt: !6004)
!6002 = distinct !DISubprogram(name: "__DSB", scope: !6003, file: !6003, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !1949)
!6003 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6004 = distinct !DILocation(line: 1727, column: 5, scope: !5996)
!6005 = !{i64 6907315}
!6006 = !DILocation(line: 260, column: 3, scope: !6007, inlinedAt: !6008)
!6007 = distinct !DISubprogram(name: "__ISB", scope: !6003, file: !6003, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !1949)
!6008 = distinct !DILocation(line: 1728, column: 5, scope: !5996)
!6009 = !{i64 6907032}
!6010 = !DILocation(line: 1729, column: 3, scope: !5996)
!6011 = !DILocation(line: 1730, column: 1, scope: !5988)
!6012 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5953, file: !5953, line: 50, type: !6013, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6015)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{!107, !32}
!6015 = !{!6016}
!6016 = !DILocalVariable(name: "irq", arg: 1, scope: !6012, file: !5953, line: 50, type: !32)
!6017 = !DILocation(line: 0, scope: !6012)
!6018 = !DILocation(line: 52, column: 20, scope: !6012)
!6019 = !DILocation(line: 52, column: 9, scope: !6012)
!6020 = !DILocation(line: 52, column: 41, scope: !6012)
!6021 = !DILocation(line: 52, column: 39, scope: !6012)
!6022 = !DILocation(line: 52, column: 2, scope: !6012)
!6023 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5953, file: !5953, line: 64, type: !6024, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6026)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{null, !32, !32, !152}
!6026 = !{!6027, !6028, !6029}
!6027 = !DILocalVariable(name: "irq", arg: 1, scope: !6023, file: !5953, line: 64, type: !32)
!6028 = !DILocalVariable(name: "prio", arg: 2, scope: !6023, file: !5953, line: 64, type: !32)
!6029 = !DILocalVariable(name: "flags", arg: 3, scope: !6023, file: !5953, line: 64, type: !152)
!6030 = !DILocation(line: 0, scope: !6023)
!6031 = !DILocation(line: 83, column: 8, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !5953, line: 82, column: 9)
!6033 = distinct !DILexicalBlock(scope: !6023, file: !5953, line: 76, column: 6)
!6034 = !DILocation(line: 91, column: 2, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !5953, line: 91, column: 2)
!6036 = distinct !DILexicalBlock(scope: !6023, file: !5953, line: 91, column: 2)
!6037 = !DILocation(line: 91, column: 2, scope: !6036)
!6038 = !DILocation(line: 91, column: 2, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !5953, line: 91, column: 2)
!6040 = !DILocation(line: 95, column: 2, scope: !6023)
!6041 = !DILocation(line: 96, column: 1, scope: !6023)
!6042 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6043, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6045)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{null, !2342, !152}
!6045 = !{!6046, !6047}
!6046 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6042, file: !1598, line: 1814, type: !2342)
!6047 = !DILocalVariable(name: "priority", arg: 2, scope: !6042, file: !1598, line: 1814, type: !152)
!6048 = !DILocation(line: 0, scope: !6042)
!6049 = !DILocation(line: 0, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6042, file: !1598, line: 1816, column: 7)
!6051 = !DILocation(line: 1816, column: 7, scope: !6042)
!6052 = !DILocation(line: 1824, column: 1, scope: !6042)
!6053 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5953, file: !5953, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6054)
!6054 = !{!6055}
!6055 = !DILocalVariable(name: "unused", arg: 1, scope: !6053, file: !5953, line: 155, type: !13)
!6056 = !DILocation(line: 0, scope: !6053)
!6057 = !DILocation(line: 159, column: 2, scope: !6053)
!6058 = !DILocation(line: 160, column: 1, scope: !6053)
!6059 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6060, file: !6060, line: 87, type: !2909, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !1949)
!6060 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6061 = !DILocation(line: 89, column: 2, scope: !6059)
!6062 = !DILocation(line: 90, column: 2, scope: !6059)
!6063 = !DILocation(line: 91, column: 1, scope: !6059)
!6064 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6060, file: !6060, line: 23, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!6065 = !DISubprogram(name: "z_arm_int_exit", scope: !6066, file: !6066, line: 153, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!6066 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6067 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6068, file: !6068, line: 256, type: !2909, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6068 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6069 = !DILocation(line: 258, column: 2, scope: !6067)
!6070 = !DILocation(line: 260, column: 2, scope: !6067)
!6071 = !DILocation(line: 262, column: 2, scope: !6067)
!6072 = !DILocation(line: 263, column: 2, scope: !6067)
!6073 = !DILocation(line: 267, column: 2, scope: !6067)
!6074 = !DILocation(line: 268, column: 2, scope: !6067)
!6075 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6068, file: !6068, line: 53, type: !2909, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6076 = !DILocation(line: 55, column: 12, scope: !6075)
!6077 = !DILocation(line: 271, column: 3, scope: !6078, inlinedAt: !6079)
!6078 = distinct !DISubprogram(name: "__DSB", scope: !6003, file: !6003, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6079 = distinct !DILocation(line: 56, column: 2, scope: !6075)
!6080 = !{i64 6943089}
!6081 = !DILocation(line: 260, column: 3, scope: !6082, inlinedAt: !6083)
!6082 = distinct !DISubprogram(name: "__ISB", scope: !6003, file: !6003, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6083 = distinct !DILocation(line: 57, column: 2, scope: !6075)
!6084 = !{i64 6942806}
!6085 = !DILocation(line: 58, column: 1, scope: !6075)
!6086 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6068, file: !6068, line: 96, type: !2909, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6087 = !DILocation(line: 103, column: 13, scope: !6086)
!6088 = !DILocation(line: 975, column: 3, scope: !6089, inlinedAt: !6094)
!6089 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6003, file: !6003, line: 971, type: !6090, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !6092)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{!152}
!6092 = !{!6093}
!6093 = !DILocalVariable(name: "result", scope: !6089, file: !6003, line: 973, type: !152)
!6094 = distinct !DILocation(line: 189, column: 16, scope: !6086)
!6095 = !{i64 6963919}
!6096 = !DILocation(line: 0, scope: !6089, inlinedAt: !6094)
!6097 = !DILocation(line: 189, column: 32, scope: !6086)
!6098 = !DILocalVariable(name: "control", arg: 1, scope: !6099, file: !6003, line: 1001, type: !152)
!6099 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6003, file: !6003, line: 1001, type: !6100, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !6102)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{null, !152}
!6102 = !{!6098}
!6103 = !DILocation(line: 0, scope: !6099, inlinedAt: !6104)
!6104 = distinct !DILocation(line: 189, column: 2, scope: !6086)
!6105 = !DILocation(line: 1003, column: 3, scope: !6099, inlinedAt: !6104)
!6106 = !{i64 6964639}
!6107 = !DILocation(line: 260, column: 3, scope: !6082, inlinedAt: !6108)
!6108 = distinct !DILocation(line: 1004, column: 3, scope: !6099, inlinedAt: !6104)
!6109 = !DILocation(line: 191, column: 1, scope: !6086)
!6110 = distinct !DISubprogram(name: "arch_swap", scope: !6111, file: !6111, line: 33, type: !6013, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !6112)
!6111 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6112 = !{!6113}
!6113 = !DILocalVariable(name: "key", arg: 1, scope: !6110, file: !6111, line: 33, type: !32)
!6114 = !DILocation(line: 0, scope: !6110)
!6115 = !DILocation(line: 36, column: 2, scope: !6110)
!6116 = !DILocation(line: 36, column: 17, scope: !6110)
!6117 = !DILocation(line: 36, column: 25, scope: !6110)
!6118 = !DILocation(line: 37, column: 37, scope: !6110)
!6119 = !DILocation(line: 37, column: 17, scope: !6110)
!6120 = !DILocation(line: 37, column: 35, scope: !6110)
!6121 = !DILocation(line: 41, column: 12, scope: !6110)
!6122 = !DILocalVariable(name: "key", arg: 1, scope: !6123, file: !6124, line: 84, type: !32)
!6123 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !6125)
!6124 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6125 = !{!6122}
!6126 = !DILocation(line: 0, scope: !6123, inlinedAt: !6127)
!6127 = distinct !DILocation(line: 44, column: 2, scope: !6110)
!6128 = !DILocation(line: 95, column: 2, scope: !6123, inlinedAt: !6127)
!6129 = !{i64 2844994}
!6130 = !DILocation(line: 53, column: 9, scope: !6110)
!6131 = !DILocation(line: 53, column: 24, scope: !6110)
!6132 = !DILocation(line: 53, column: 2, scope: !6110)
!6133 = distinct !DISubprogram(name: "arch_new_thread", scope: !6134, file: !6134, line: 56, type: !6135, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !6239)
!6134 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6135 = !DISubroutineType(types: !6136)
!6136 = !{null, !6137, !6234, !193, !687, !106, !106, !106}
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6138, size: 32)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !6139)
!6139 = !{!6140, !6198, !6210, !6211, !6212, !6213, !6214, !6229}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6138, file: !716, line: 247, baseType: !6141, size: 384)
!6141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !6142)
!6142 = !{!6143, !6167, !6174, !6175, !6176, !6185, !6186, !6187}
!6143 = !DIDerivedType(tag: DW_TAG_member, scope: !6141, file: !716, line: 60, baseType: !6144, size: 64)
!6144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6141, file: !716, line: 60, size: 64, elements: !6145)
!6145 = !{!6146, !6161}
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6144, file: !716, line: 61, baseType: !6147, size: 64)
!6147 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !6148)
!6148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !6149)
!6149 = !{!6150, !6156}
!6150 = !DIDerivedType(tag: DW_TAG_member, scope: !6148, file: !726, line: 38, baseType: !6151, size: 32)
!6151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6148, file: !726, line: 38, size: 32, elements: !6152)
!6152 = !{!6153, !6155}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6151, file: !726, line: 39, baseType: !6154, size: 32)
!6154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 32)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6151, file: !726, line: 40, baseType: !6154, size: 32)
!6156 = !DIDerivedType(tag: DW_TAG_member, scope: !6148, file: !726, line: 42, baseType: !6157, size: 32, offset: 32)
!6157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6148, file: !726, line: 42, size: 32, elements: !6158)
!6158 = !{!6159, !6160}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6157, file: !726, line: 43, baseType: !6154, size: 32)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6157, file: !726, line: 44, baseType: !6154, size: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6144, file: !716, line: 62, baseType: !6162, size: 64)
!6162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !6163)
!6163 = !{!6164}
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6162, file: !742, line: 50, baseType: !6165, size: 64)
!6165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6166, size: 64, elements: !747)
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6162, size: 32)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6141, file: !716, line: 68, baseType: !6168, size: 32, offset: 64)
!6168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 32)
!6169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !6170)
!6170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !6171)
!6171 = !{!6172}
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6170, file: !752, line: 232, baseType: !6173, size: 64)
!6173 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !6148)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6141, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6141, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!6176 = !DIDerivedType(tag: DW_TAG_member, scope: !6141, file: !716, line: 90, baseType: !6177, size: 16, offset: 112)
!6177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6141, file: !716, line: 90, size: 16, elements: !6178)
!6178 = !{!6179, !6184}
!6179 = !DIDerivedType(tag: DW_TAG_member, scope: !6177, file: !716, line: 91, baseType: !6180, size: 16)
!6180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6177, file: !716, line: 91, size: 16, elements: !6181)
!6181 = !{!6182, !6183}
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6180, file: !716, line: 96, baseType: !766, size: 8)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6180, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6177, file: !716, line: 100, baseType: !197, size: 16)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6141, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6141, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6141, file: !716, line: 131, baseType: !6188, size: 192, offset: 192)
!6188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !6189)
!6189 = !{!6190, !6191, !6197}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6188, file: !752, line: 245, baseType: !6147, size: 64)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6188, file: !752, line: 246, baseType: !6192, size: 32, offset: 64)
!6192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !6193)
!6193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6194, size: 32)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{null, !6196}
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6188, size: 32)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6188, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6138, file: !716, line: 250, baseType: !6199, size: 288, offset: 384)
!6199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !6200)
!6200 = !{!6201, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209}
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6199, file: !785, line: 26, baseType: !152, size: 32)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6199, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6199, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6199, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6199, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6199, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6199, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6199, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6199, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6138, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6138, file: !716, line: 256, baseType: !6169, size: 64, offset: 704)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6138, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6138, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6138, file: !716, line: 325, baseType: !6215, size: 32, offset: 1056)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 32)
!6216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !6217)
!6217 = !{!6218, !6224, !6225}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6216, file: !804, line: 5074, baseType: !6219, size: 96)
!6219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !6220)
!6220 = !{!6221, !6222, !6223}
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6219, file: !808, line: 57, baseType: !811, size: 32)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6219, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6219, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6216, file: !804, line: 5075, baseType: !6169, size: 64, offset: 96)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6216, file: !804, line: 5076, baseType: !6226, size: 32, offset: 160)
!6226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !6227)
!6227 = !{!6228}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6226, file: !818, line: 52, baseType: !22, size: 32)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6138, file: !716, line: 343, baseType: !6230, size: 64, offset: 1088)
!6230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !6231)
!6231 = !{!6232, !6233}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6230, file: !785, line: 63, baseType: !152, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6230, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6235, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !6236)
!6236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !6237)
!6237 = !{!6238}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6236, file: !706, line: 48, baseType: !120, size: 8)
!6239 = !{!6240, !6241, !6242, !6243, !6244, !6245, !6246, !6247}
!6240 = !DILocalVariable(name: "thread", arg: 1, scope: !6133, file: !6134, line: 56, type: !6137)
!6241 = !DILocalVariable(name: "stack", arg: 2, scope: !6133, file: !6134, line: 56, type: !6234)
!6242 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6133, file: !6134, line: 57, type: !193)
!6243 = !DILocalVariable(name: "entry", arg: 4, scope: !6133, file: !6134, line: 57, type: !687)
!6244 = !DILocalVariable(name: "p1", arg: 5, scope: !6133, file: !6134, line: 58, type: !106)
!6245 = !DILocalVariable(name: "p2", arg: 6, scope: !6133, file: !6134, line: 58, type: !106)
!6246 = !DILocalVariable(name: "p3", arg: 7, scope: !6133, file: !6134, line: 58, type: !106)
!6247 = !DILocalVariable(name: "iframe", scope: !6133, file: !6134, line: 60, type: !2446)
!6248 = !DILocation(line: 0, scope: !6133)
!6249 = !DILocation(line: 85, column: 11, scope: !6133)
!6250 = !DILocation(line: 93, column: 10, scope: !6133)
!6251 = !DILocation(line: 98, column: 13, scope: !6133)
!6252 = !DILocation(line: 100, column: 15, scope: !6133)
!6253 = !DILocation(line: 100, column: 10, scope: !6133)
!6254 = !DILocation(line: 100, column: 13, scope: !6133)
!6255 = !DILocation(line: 101, column: 15, scope: !6133)
!6256 = !DILocation(line: 101, column: 10, scope: !6133)
!6257 = !DILocation(line: 101, column: 13, scope: !6133)
!6258 = !DILocation(line: 102, column: 15, scope: !6133)
!6259 = !DILocation(line: 102, column: 10, scope: !6133)
!6260 = !DILocation(line: 102, column: 13, scope: !6133)
!6261 = !DILocation(line: 103, column: 15, scope: !6133)
!6262 = !DILocation(line: 103, column: 10, scope: !6133)
!6263 = !DILocation(line: 103, column: 13, scope: !6133)
!6264 = !DILocation(line: 106, column: 10, scope: !6133)
!6265 = !DILocation(line: 106, column: 15, scope: !6133)
!6266 = !DILocation(line: 122, column: 29, scope: !6133)
!6267 = !DILocation(line: 122, column: 23, scope: !6133)
!6268 = !DILocation(line: 122, column: 27, scope: !6133)
!6269 = !DILocation(line: 123, column: 15, scope: !6133)
!6270 = !DILocation(line: 123, column: 23, scope: !6133)
!6271 = !DILocation(line: 143, column: 1, scope: !6133)
!6272 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6134, file: !6134, line: 530, type: !6273, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !6275)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{null, !6137, !193, !687}
!6275 = !{!6276, !6277, !6278}
!6276 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6272, file: !6134, line: 530, type: !6137)
!6277 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6272, file: !6134, line: 530, type: !193)
!6278 = !DILocalVariable(name: "_main", arg: 3, scope: !6272, file: !6134, line: 531, type: !687)
!6279 = !DILocation(line: 0, scope: !6272)
!6280 = !DILocation(line: 535, column: 11, scope: !6272)
!6281 = !DILocation(line: 576, column: 2, scope: !6272)
!6282 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6283 = !DILocation(line: 603, column: 2, scope: !6272)
!6284 = distinct !DISubprogram(name: "z_arm_fault", scope: !6285, file: !6285, line: 1036, type: !6286, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6301)
!6285 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6286 = !DISubroutineType(types: !6287)
!6287 = !{null, !152, !152, !152, !6288}
!6288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !785, line: 37, baseType: !6290)
!6290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !6291)
!6291 = !{!6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6290, file: !785, line: 26, baseType: !152, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6290, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6290, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6290, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6290, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6290, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6290, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6290, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6290, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!6301 = !{!6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311}
!6302 = !DILocalVariable(name: "msp", arg: 1, scope: !6284, file: !6285, line: 1036, type: !152)
!6303 = !DILocalVariable(name: "psp", arg: 2, scope: !6284, file: !6285, line: 1036, type: !152)
!6304 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6284, file: !6285, line: 1036, type: !152)
!6305 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6284, file: !6285, line: 1037, type: !6288)
!6306 = !DILocalVariable(name: "reason", scope: !6284, file: !6285, line: 1039, type: !152)
!6307 = !DILocalVariable(name: "fault", scope: !6284, file: !6285, line: 1040, type: !107)
!6308 = !DILocalVariable(name: "recoverable", scope: !6284, file: !6285, line: 1041, type: !145)
!6309 = !DILocalVariable(name: "nested_exc", scope: !6284, file: !6285, line: 1041, type: !145)
!6310 = !DILocalVariable(name: "esf", scope: !6284, file: !6285, line: 1042, type: !2514)
!6311 = !DILocalVariable(name: "esf_copy", scope: !6284, file: !6285, line: 1047, type: !2515)
!6312 = !DILocation(line: 0, scope: !6284)
!6313 = !DILocation(line: 1040, column: 19, scope: !6284)
!6314 = !DILocation(line: 1041, column: 2, scope: !6284)
!6315 = !DILocation(line: 1047, column: 2, scope: !6284)
!6316 = !DILocation(line: 1047, column: 15, scope: !6284)
!6317 = !DILocalVariable(name: "key", arg: 1, scope: !6318, file: !6124, line: 84, type: !32)
!6318 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6319)
!6319 = !{!6317}
!6320 = !DILocation(line: 0, scope: !6318, inlinedAt: !6321)
!6321 = distinct !DILocation(line: 1050, column: 2, scope: !6284)
!6322 = !DILocation(line: 95, column: 2, scope: !6318, inlinedAt: !6321)
!6323 = !{i64 2878238}
!6324 = !DILocation(line: 1055, column: 9, scope: !6284)
!6325 = !DILocation(line: 1056, column: 2, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !6285, line: 1056, column: 2)
!6327 = distinct !DILexicalBlock(scope: !6284, file: !6285, line: 1056, column: 2)
!6328 = !DILocation(line: 1056, column: 2, scope: !6327)
!6329 = !DILocation(line: 1056, column: 2, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6326, file: !6285, line: 1056, column: 2)
!6331 = !DILocation(line: 1040, column: 24, scope: !6284)
!6332 = !DILocation(line: 1063, column: 11, scope: !6284)
!6333 = !DILocation(line: 1064, column: 6, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6284, file: !6285, line: 1064, column: 6)
!6335 = !{i8 0, i8 2}
!6336 = !DILocation(line: 1064, column: 6, scope: !6284)
!6337 = !DILocation(line: 1070, column: 20, scope: !6284)
!6338 = !DILocation(line: 1070, column: 2, scope: !6284)
!6339 = !DILocation(line: 1089, column: 6, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6284, file: !6285, line: 1089, column: 6)
!6341 = !DILocation(line: 0, scope: !6340)
!6342 = !DILocation(line: 1089, column: 6, scope: !6284)
!6343 = !DILocation(line: 1090, column: 28, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !6285, line: 1090, column: 7)
!6345 = distinct !DILexicalBlock(scope: !6340, file: !6285, line: 1089, column: 18)
!6346 = !DILocation(line: 1090, column: 44, scope: !6344)
!6347 = !DILocation(line: 1090, column: 7, scope: !6345)
!6348 = !DILocation(line: 1091, column: 24, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6344, file: !6285, line: 1090, column: 50)
!6350 = !DILocation(line: 1092, column: 3, scope: !6349)
!6351 = !DILocation(line: 1094, column: 23, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6340, file: !6285, line: 1093, column: 9)
!6353 = !DILocation(line: 1097, column: 2, scope: !6284)
!6354 = !DILocation(line: 1098, column: 1, scope: !6284)
!6355 = distinct !DISubprogram(name: "get_esf", scope: !6285, file: !6285, line: 894, type: !6356, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6359)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{!2514, !152, !152, !152, !6358}
!6358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6359 = !{!6360, !6361, !6362, !6363, !6364, !6365}
!6360 = !DILocalVariable(name: "msp", arg: 1, scope: !6355, file: !6285, line: 894, type: !152)
!6361 = !DILocalVariable(name: "psp", arg: 2, scope: !6355, file: !6285, line: 894, type: !152)
!6362 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6355, file: !6285, line: 894, type: !152)
!6363 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6355, file: !6285, line: 895, type: !6358)
!6364 = !DILocalVariable(name: "alternative_state_exc", scope: !6355, file: !6285, line: 897, type: !145)
!6365 = !DILocalVariable(name: "ptr_esf", scope: !6355, file: !6285, line: 898, type: !2514)
!6366 = !DILocation(line: 0, scope: !6355)
!6367 = !DILocation(line: 900, column: 14, scope: !6355)
!6368 = !DILocation(line: 902, column: 49, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6355, file: !6285, line: 902, column: 6)
!6370 = !DILocation(line: 902, column: 6, scope: !6355)
!6371 = !DILocation(line: 983, column: 44, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6355, file: !6285, line: 983, column: 6)
!6373 = !DILocation(line: 985, column: 3, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !6285, line: 985, column: 3)
!6375 = distinct !DILexicalBlock(scope: !6376, file: !6285, line: 985, column: 3)
!6376 = distinct !DILexicalBlock(scope: !6377, file: !6285, line: 985, column: 3)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !6285, line: 985, column: 3)
!6378 = distinct !DILexicalBlock(scope: !6372, file: !6285, line: 984, column: 47)
!6379 = !DILocation(line: 986, column: 3, scope: !6378)
!6380 = !DILocation(line: 983, column: 18, scope: !6372)
!6381 = !DILocation(line: 991, column: 7, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !6285, line: 990, column: 30)
!6383 = distinct !DILexicalBlock(scope: !6355, file: !6285, line: 990, column: 6)
!6384 = !DILocation(line: 998, column: 16, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !6285, line: 995, column: 10)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !6285, line: 991, column: 7)
!6387 = !DILocation(line: 1002, column: 2, scope: !6355)
!6388 = !DILocation(line: 1003, column: 1, scope: !6355)
!6389 = distinct !DISubprogram(name: "fault_handle", scope: !6285, file: !6285, line: 786, type: !6390, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6392)
!6390 = !DISubroutineType(types: !6391)
!6391 = !{!152, !2514, !107, !6358}
!6392 = !{!6393, !6394, !6395, !6396}
!6393 = !DILocalVariable(name: "esf", arg: 1, scope: !6389, file: !6285, line: 786, type: !2514)
!6394 = !DILocalVariable(name: "fault", arg: 2, scope: !6389, file: !6285, line: 786, type: !107)
!6395 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6389, file: !6285, line: 786, type: !6358)
!6396 = !DILocalVariable(name: "reason", scope: !6389, file: !6285, line: 788, type: !152)
!6397 = !DILocation(line: 0, scope: !6389)
!6398 = !DILocation(line: 790, column: 15, scope: !6389)
!6399 = !DILocation(line: 792, column: 2, scope: !6389)
!6400 = !DILocation(line: 794, column: 12, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6389, file: !6285, line: 792, column: 17)
!6402 = !DILocation(line: 795, column: 3, scope: !6401)
!6403 = !DILocation(line: 800, column: 12, scope: !6401)
!6404 = !DILocation(line: 801, column: 3, scope: !6401)
!6405 = !DILocation(line: 803, column: 12, scope: !6401)
!6406 = !DILocation(line: 804, column: 3, scope: !6401)
!6407 = !DILocation(line: 806, column: 12, scope: !6401)
!6408 = !DILocation(line: 807, column: 3, scope: !6401)
!6409 = !DILocation(line: 814, column: 3, scope: !6401)
!6410 = !DILocation(line: 815, column: 3, scope: !6401)
!6411 = !DILocation(line: 820, column: 3, scope: !6401)
!6412 = !DILocation(line: 821, column: 3, scope: !6401)
!6413 = !DILocation(line: 829, column: 2, scope: !6389)
!6414 = distinct !DISubprogram(name: "hard_fault", scope: !6285, file: !6285, line: 709, type: !6415, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6417)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{!152, !2514, !6358}
!6417 = !{!6418, !6419, !6420}
!6418 = !DILocalVariable(name: "esf", arg: 1, scope: !6414, file: !6285, line: 709, type: !2514)
!6419 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6414, file: !6285, line: 709, type: !6358)
!6420 = !DILocalVariable(name: "reason", scope: !6414, file: !6285, line: 711, type: !152)
!6421 = !DILocation(line: 0, scope: !6414)
!6422 = !DILocation(line: 713, column: 2, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !6285, line: 713, column: 2)
!6424 = distinct !DILexicalBlock(scope: !6425, file: !6285, line: 713, column: 2)
!6425 = distinct !DILexicalBlock(scope: !6426, file: !6285, line: 713, column: 2)
!6426 = distinct !DILexicalBlock(scope: !6414, file: !6285, line: 713, column: 2)
!6427 = !DILocation(line: 732, column: 15, scope: !6414)
!6428 = !DILocation(line: 734, column: 12, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6414, file: !6285, line: 734, column: 6)
!6430 = !DILocation(line: 734, column: 17, scope: !6429)
!6431 = !DILocation(line: 734, column: 41, scope: !6429)
!6432 = !DILocation(line: 734, column: 6, scope: !6414)
!6433 = !DILocation(line: 735, column: 3, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !6285, line: 735, column: 3)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !6285, line: 735, column: 3)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !6285, line: 735, column: 3)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !6285, line: 735, column: 3)
!6438 = distinct !DILexicalBlock(scope: !6429, file: !6285, line: 734, column: 47)
!6439 = !DILocation(line: 736, column: 2, scope: !6438)
!6440 = !DILocation(line: 736, column: 19, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6429, file: !6285, line: 736, column: 13)
!6442 = !DILocation(line: 736, column: 49, scope: !6441)
!6443 = !DILocation(line: 736, column: 13, scope: !6429)
!6444 = !DILocation(line: 737, column: 3, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !6285, line: 737, column: 3)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !6285, line: 737, column: 3)
!6447 = distinct !DILexicalBlock(scope: !6448, file: !6285, line: 737, column: 3)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !6285, line: 737, column: 3)
!6449 = distinct !DILexicalBlock(scope: !6441, file: !6285, line: 736, column: 55)
!6450 = !DILocation(line: 738, column: 2, scope: !6449)
!6451 = !DILocation(line: 738, column: 19, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6441, file: !6285, line: 738, column: 13)
!6453 = !DILocation(line: 738, column: 24, scope: !6452)
!6454 = !DILocation(line: 738, column: 47, scope: !6452)
!6455 = !DILocation(line: 738, column: 13, scope: !6441)
!6456 = !DILocation(line: 739, column: 3, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !6285, line: 739, column: 3)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !6285, line: 739, column: 3)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !6285, line: 739, column: 3)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !6285, line: 739, column: 3)
!6461 = distinct !DILexicalBlock(scope: !6452, file: !6285, line: 738, column: 53)
!6462 = !DILocation(line: 740, column: 7, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6461, file: !6285, line: 740, column: 7)
!6464 = !DILocation(line: 740, column: 7, scope: !6461)
!6465 = !DILocation(line: 741, column: 4, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !6285, line: 741, column: 4)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !6285, line: 741, column: 4)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !6285, line: 741, column: 4)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !6285, line: 741, column: 4)
!6470 = distinct !DILexicalBlock(scope: !6463, file: !6285, line: 740, column: 38)
!6471 = !DILocation(line: 742, column: 24, scope: !6470)
!6472 = !DILocation(line: 743, column: 3, scope: !6470)
!6473 = !DILocation(line: 743, column: 20, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6463, file: !6285, line: 743, column: 14)
!6475 = !DILocation(line: 743, column: 25, scope: !6474)
!6476 = !DILocation(line: 743, column: 52, scope: !6474)
!6477 = !DILocation(line: 743, column: 14, scope: !6463)
!6478 = !DILocation(line: 744, column: 13, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6474, file: !6285, line: 743, column: 58)
!6480 = !DILocation(line: 745, column: 3, scope: !6479)
!6481 = !DILocation(line: 745, column: 20, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6474, file: !6285, line: 745, column: 14)
!6483 = !DILocation(line: 745, column: 25, scope: !6482)
!6484 = !DILocation(line: 745, column: 52, scope: !6482)
!6485 = !DILocation(line: 745, column: 14, scope: !6474)
!6486 = !DILocation(line: 746, column: 13, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6482, file: !6285, line: 745, column: 58)
!6488 = !DILocation(line: 747, column: 3, scope: !6487)
!6489 = !DILocation(line: 747, column: 20, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6482, file: !6285, line: 747, column: 14)
!6491 = !DILocation(line: 747, column: 52, scope: !6490)
!6492 = !DILocation(line: 747, column: 14, scope: !6482)
!6493 = !DILocation(line: 748, column: 13, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6490, file: !6285, line: 747, column: 58)
!6495 = !DILocation(line: 754, column: 4, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6497, file: !6285, line: 754, column: 4)
!6497 = distinct !DILexicalBlock(scope: !6498, file: !6285, line: 754, column: 4)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !6285, line: 754, column: 4)
!6499 = distinct !DILexicalBlock(scope: !6490, file: !6285, line: 753, column: 10)
!6500 = !DILocation(line: 758, column: 3, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !6285, line: 758, column: 3)
!6502 = distinct !DILexicalBlock(scope: !6503, file: !6285, line: 758, column: 3)
!6503 = distinct !DILexicalBlock(scope: !6504, file: !6285, line: 758, column: 3)
!6504 = distinct !DILexicalBlock(scope: !6452, file: !6285, line: 757, column: 9)
!6505 = !DILocation(line: 766, column: 2, scope: !6414)
!6506 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6285, file: !6285, line: 229, type: !6390, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6507)
!6507 = !{!6508, !6509, !6510, !6511, !6512, !6513}
!6508 = !DILocalVariable(name: "esf", arg: 1, scope: !6506, file: !6285, line: 229, type: !2514)
!6509 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6506, file: !6285, line: 229, type: !107)
!6510 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6506, file: !6285, line: 230, type: !6358)
!6511 = !DILocalVariable(name: "reason", scope: !6506, file: !6285, line: 232, type: !152)
!6512 = !DILocalVariable(name: "mmfar", scope: !6506, file: !6285, line: 233, type: !152)
!6513 = !DILocalVariable(name: "temp", scope: !6514, file: !6285, line: 254, type: !152)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !6285, line: 244, column: 48)
!6515 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 244, column: 6)
!6516 = !DILocation(line: 0, scope: !6506)
!6517 = !DILocation(line: 235, column: 2, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !6285, line: 235, column: 2)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !6285, line: 235, column: 2)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !6285, line: 235, column: 2)
!6521 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 235, column: 2)
!6522 = !DILocation(line: 237, column: 12, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 237, column: 6)
!6524 = !DILocation(line: 237, column: 17, scope: !6523)
!6525 = !DILocation(line: 237, column: 41, scope: !6523)
!6526 = !DILocation(line: 237, column: 6, scope: !6506)
!6527 = !DILocation(line: 238, column: 3, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !6285, line: 238, column: 3)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !6285, line: 238, column: 3)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !6285, line: 238, column: 3)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !6285, line: 238, column: 3)
!6532 = distinct !DILexicalBlock(scope: !6523, file: !6285, line: 237, column: 47)
!6533 = !DILocation(line: 240, column: 2, scope: !6532)
!6534 = !DILocation(line: 241, column: 12, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 241, column: 6)
!6536 = !DILocation(line: 241, column: 17, scope: !6535)
!6537 = !DILocation(line: 241, column: 43, scope: !6535)
!6538 = !DILocation(line: 241, column: 6, scope: !6506)
!6539 = !DILocation(line: 242, column: 3, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !6285, line: 242, column: 3)
!6541 = distinct !DILexicalBlock(scope: !6542, file: !6285, line: 242, column: 3)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !6285, line: 242, column: 3)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !6285, line: 242, column: 3)
!6544 = distinct !DILexicalBlock(scope: !6535, file: !6285, line: 241, column: 49)
!6545 = !DILocation(line: 243, column: 2, scope: !6544)
!6546 = !DILocation(line: 244, column: 12, scope: !6515)
!6547 = !DILocation(line: 244, column: 17, scope: !6515)
!6548 = !DILocation(line: 244, column: 42, scope: !6515)
!6549 = !DILocation(line: 244, column: 6, scope: !6506)
!6550 = !DILocation(line: 245, column: 3, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !6285, line: 245, column: 3)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !6285, line: 245, column: 3)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !6285, line: 245, column: 3)
!6554 = distinct !DILexicalBlock(scope: !6514, file: !6285, line: 245, column: 3)
!6555 = !DILocation(line: 254, column: 24, scope: !6514)
!6556 = !DILocation(line: 0, scope: !6514)
!6557 = !DILocation(line: 256, column: 13, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6514, file: !6285, line: 256, column: 7)
!6559 = !DILocation(line: 256, column: 18, scope: !6558)
!6560 = !DILocation(line: 256, column: 44, scope: !6558)
!6561 = !DILocation(line: 256, column: 7, scope: !6514)
!6562 = !DILocation(line: 258, column: 4, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !6285, line: 258, column: 4)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !6285, line: 258, column: 4)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !6285, line: 258, column: 4)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !6285, line: 258, column: 4)
!6567 = distinct !DILexicalBlock(scope: !6558, file: !6285, line: 256, column: 50)
!6568 = !DILocation(line: 259, column: 24, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6567, file: !6285, line: 259, column: 8)
!6570 = !DILocation(line: 259, column: 8, scope: !6567)
!6571 = !DILocation(line: 261, column: 15, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6569, file: !6285, line: 259, column: 30)
!6573 = !DILocation(line: 262, column: 4, scope: !6572)
!6574 = !DILocation(line: 265, column: 12, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 265, column: 6)
!6576 = !DILocation(line: 265, column: 17, scope: !6575)
!6577 = !DILocation(line: 265, column: 42, scope: !6575)
!6578 = !DILocation(line: 265, column: 6, scope: !6506)
!6579 = !DILocation(line: 266, column: 3, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6581, file: !6285, line: 266, column: 3)
!6581 = distinct !DILexicalBlock(scope: !6582, file: !6285, line: 266, column: 3)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !6285, line: 266, column: 3)
!6583 = distinct !DILexicalBlock(scope: !6584, file: !6285, line: 266, column: 3)
!6584 = distinct !DILexicalBlock(scope: !6575, file: !6285, line: 265, column: 48)
!6585 = !DILocation(line: 267, column: 2, scope: !6584)
!6586 = !DILocation(line: 269, column: 12, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 269, column: 6)
!6588 = !DILocation(line: 269, column: 17, scope: !6587)
!6589 = !DILocation(line: 269, column: 41, scope: !6587)
!6590 = !DILocation(line: 269, column: 6, scope: !6506)
!6591 = !DILocation(line: 270, column: 3, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !6285, line: 270, column: 3)
!6593 = distinct !DILexicalBlock(scope: !6594, file: !6285, line: 270, column: 3)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !6285, line: 270, column: 3)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !6285, line: 270, column: 3)
!6596 = distinct !DILexicalBlock(scope: !6587, file: !6285, line: 269, column: 47)
!6597 = !DILocation(line: 272, column: 2, scope: !6596)
!6598 = !DILocation(line: 288, column: 12, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 288, column: 6)
!6600 = !DILocation(line: 288, column: 17, scope: !6599)
!6601 = !DILocation(line: 288, column: 41, scope: !6599)
!6602 = !DILocation(line: 289, column: 9, scope: !6599)
!6603 = !DILocation(line: 289, column: 14, scope: !6599)
!6604 = !DILocation(line: 288, column: 6, scope: !6506)
!6605 = !DILocation(line: 348, column: 2, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !6285, line: 348, column: 2)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !6285, line: 348, column: 2)
!6608 = distinct !DILexicalBlock(scope: !6599, file: !6285, line: 289, column: 40)
!6609 = !DILocation(line: 348, column: 2, scope: !6607)
!6610 = !DILocation(line: 348, column: 2, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !6285, line: 348, column: 2)
!6612 = !DILocation(line: 360, column: 12, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6506, file: !6285, line: 360, column: 6)
!6614 = !DILocation(line: 360, column: 17, scope: !6613)
!6615 = !DILocation(line: 360, column: 41, scope: !6613)
!6616 = !DILocation(line: 360, column: 6, scope: !6506)
!6617 = !DILocation(line: 361, column: 14, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6613, file: !6285, line: 360, column: 47)
!6619 = !DILocation(line: 362, column: 2, scope: !6618)
!6620 = !DILocation(line: 366, column: 12, scope: !6506)
!6621 = !DILocation(line: 369, column: 15, scope: !6506)
!6622 = !DILocation(line: 371, column: 2, scope: !6506)
!6623 = distinct !DISubprogram(name: "bus_fault", scope: !6285, file: !6285, line: 383, type: !6624, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6626)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!107, !2514, !107, !6358}
!6626 = !{!6627, !6628, !6629, !6630, !6631}
!6627 = !DILocalVariable(name: "esf", arg: 1, scope: !6623, file: !6285, line: 383, type: !2514)
!6628 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6623, file: !6285, line: 383, type: !107)
!6629 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6623, file: !6285, line: 383, type: !6358)
!6630 = !DILocalVariable(name: "reason", scope: !6623, file: !6285, line: 385, type: !152)
!6631 = !DILocalVariable(name: "bfar", scope: !6632, file: !6285, line: 405, type: !152)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !6285, line: 395, column: 42)
!6633 = distinct !DILexicalBlock(scope: !6623, file: !6285, line: 395, column: 6)
!6634 = !DILocation(line: 0, scope: !6623)
!6635 = !DILocation(line: 387, column: 2, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !6285, line: 387, column: 2)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !6285, line: 387, column: 2)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !6285, line: 387, column: 2)
!6639 = distinct !DILexicalBlock(scope: !6623, file: !6285, line: 387, column: 2)
!6640 = !DILocation(line: 389, column: 11, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6623, file: !6285, line: 389, column: 6)
!6642 = !DILocation(line: 389, column: 16, scope: !6641)
!6643 = !DILocation(line: 389, column: 6, scope: !6623)
!6644 = !DILocation(line: 390, column: 3, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !6285, line: 390, column: 3)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !6285, line: 390, column: 3)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !6285, line: 390, column: 3)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !6285, line: 390, column: 3)
!6649 = distinct !DILexicalBlock(scope: !6641, file: !6285, line: 389, column: 39)
!6650 = !DILocation(line: 391, column: 2, scope: !6649)
!6651 = !DILocation(line: 392, column: 11, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6623, file: !6285, line: 392, column: 6)
!6653 = !DILocation(line: 392, column: 16, scope: !6652)
!6654 = !DILocation(line: 392, column: 6, scope: !6623)
!6655 = !DILocation(line: 393, column: 3, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !6285, line: 393, column: 3)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !6285, line: 393, column: 3)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !6285, line: 393, column: 3)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !6285, line: 393, column: 3)
!6660 = distinct !DILexicalBlock(scope: !6652, file: !6285, line: 392, column: 41)
!6661 = !DILocation(line: 394, column: 2, scope: !6660)
!6662 = !DILocation(line: 395, column: 11, scope: !6633)
!6663 = !DILocation(line: 395, column: 16, scope: !6633)
!6664 = !DILocation(line: 395, column: 6, scope: !6623)
!6665 = !DILocation(line: 396, column: 3, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !6285, line: 396, column: 3)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !6285, line: 396, column: 3)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !6285, line: 396, column: 3)
!6669 = distinct !DILexicalBlock(scope: !6632, file: !6285, line: 396, column: 3)
!6670 = !DILocation(line: 405, column: 3, scope: !6632)
!6671 = !DILocation(line: 0, scope: !6632)
!6672 = !DILocation(line: 407, column: 13, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6632, file: !6285, line: 407, column: 7)
!6674 = !DILocation(line: 407, column: 18, scope: !6673)
!6675 = !DILocation(line: 407, column: 44, scope: !6673)
!6676 = !DILocation(line: 407, column: 7, scope: !6632)
!6677 = !DILocation(line: 408, column: 4, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !6285, line: 408, column: 4)
!6679 = distinct !DILexicalBlock(scope: !6680, file: !6285, line: 408, column: 4)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !6285, line: 408, column: 4)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !6285, line: 408, column: 4)
!6682 = distinct !DILexicalBlock(scope: !6673, file: !6285, line: 407, column: 50)
!6683 = !DILocation(line: 409, column: 24, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6682, file: !6285, line: 409, column: 8)
!6685 = !DILocation(line: 409, column: 8, scope: !6682)
!6686 = !DILocation(line: 411, column: 15, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6684, file: !6285, line: 409, column: 30)
!6688 = !DILocation(line: 412, column: 4, scope: !6687)
!6689 = !DILocation(line: 415, column: 11, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6623, file: !6285, line: 415, column: 6)
!6691 = !DILocation(line: 415, column: 16, scope: !6690)
!6692 = !DILocation(line: 415, column: 6, scope: !6623)
!6693 = !DILocation(line: 416, column: 3, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !6285, line: 416, column: 3)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !6285, line: 416, column: 3)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !6285, line: 416, column: 3)
!6697 = distinct !DILexicalBlock(scope: !6698, file: !6285, line: 416, column: 3)
!6698 = distinct !DILexicalBlock(scope: !6690, file: !6285, line: 415, column: 44)
!6699 = !DILocation(line: 417, column: 2, scope: !6698)
!6700 = !DILocation(line: 418, column: 12, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6623, file: !6285, line: 418, column: 6)
!6702 = !DILocation(line: 418, column: 17, scope: !6701)
!6703 = !DILocation(line: 418, column: 41, scope: !6701)
!6704 = !DILocation(line: 418, column: 6, scope: !6623)
!6705 = !DILocation(line: 423, column: 18, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6701, file: !6285, line: 423, column: 13)
!6707 = !DILocation(line: 423, column: 23, scope: !6706)
!6708 = !DILocation(line: 423, column: 13, scope: !6701)
!6709 = !DILocation(line: 0, scope: !6701)
!6710 = !DILocation(line: 524, column: 12, scope: !6623)
!6711 = !DILocation(line: 526, column: 15, scope: !6623)
!6712 = !DILocation(line: 528, column: 2, scope: !6623)
!6713 = distinct !DISubprogram(name: "usage_fault", scope: !6285, file: !6285, line: 539, type: !6714, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6718)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!152, !6716}
!6716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6717, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2515)
!6718 = !{!6719, !6720}
!6719 = !DILocalVariable(name: "esf", arg: 1, scope: !6713, file: !6285, line: 539, type: !6716)
!6720 = !DILocalVariable(name: "reason", scope: !6713, file: !6285, line: 541, type: !152)
!6721 = !DILocation(line: 0, scope: !6713)
!6722 = !DILocation(line: 543, column: 2, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !6285, line: 543, column: 2)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !6285, line: 543, column: 2)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !6285, line: 543, column: 2)
!6726 = distinct !DILexicalBlock(scope: !6713, file: !6285, line: 543, column: 2)
!6727 = !DILocation(line: 546, column: 12, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6713, file: !6285, line: 546, column: 6)
!6729 = !DILocation(line: 546, column: 17, scope: !6728)
!6730 = !DILocation(line: 546, column: 43, scope: !6728)
!6731 = !DILocation(line: 546, column: 6, scope: !6713)
!6732 = !DILocation(line: 547, column: 3, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !6285, line: 547, column: 3)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !6285, line: 547, column: 3)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !6285, line: 547, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !6285, line: 547, column: 3)
!6737 = distinct !DILexicalBlock(scope: !6728, file: !6285, line: 546, column: 49)
!6738 = !DILocation(line: 548, column: 2, scope: !6737)
!6739 = !DILocation(line: 549, column: 12, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6713, file: !6285, line: 549, column: 6)
!6741 = !DILocation(line: 549, column: 17, scope: !6740)
!6742 = !DILocation(line: 549, column: 43, scope: !6740)
!6743 = !DILocation(line: 549, column: 6, scope: !6713)
!6744 = !DILocation(line: 550, column: 3, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6285, line: 550, column: 3)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6285, line: 550, column: 3)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6285, line: 550, column: 3)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6285, line: 550, column: 3)
!6749 = distinct !DILexicalBlock(scope: !6740, file: !6285, line: 549, column: 49)
!6750 = !DILocation(line: 551, column: 2, scope: !6749)
!6751 = !DILocation(line: 567, column: 12, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6713, file: !6285, line: 567, column: 6)
!6753 = !DILocation(line: 567, column: 17, scope: !6752)
!6754 = !DILocation(line: 567, column: 38, scope: !6752)
!6755 = !DILocation(line: 567, column: 6, scope: !6713)
!6756 = !DILocation(line: 568, column: 3, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !6285, line: 568, column: 3)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !6285, line: 568, column: 3)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !6285, line: 568, column: 3)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !6285, line: 568, column: 3)
!6761 = distinct !DILexicalBlock(scope: !6752, file: !6285, line: 567, column: 44)
!6762 = !DILocation(line: 569, column: 2, scope: !6761)
!6763 = !DILocation(line: 570, column: 12, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6713, file: !6285, line: 570, column: 6)
!6765 = !DILocation(line: 570, column: 17, scope: !6764)
!6766 = !DILocation(line: 570, column: 39, scope: !6764)
!6767 = !DILocation(line: 570, column: 6, scope: !6713)
!6768 = !DILocation(line: 571, column: 3, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6285, line: 571, column: 3)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6285, line: 571, column: 3)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !6285, line: 571, column: 3)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !6285, line: 571, column: 3)
!6773 = distinct !DILexicalBlock(scope: !6764, file: !6285, line: 570, column: 45)
!6774 = !DILocation(line: 572, column: 2, scope: !6773)
!6775 = !DILocation(line: 573, column: 12, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6713, file: !6285, line: 573, column: 6)
!6777 = !DILocation(line: 573, column: 17, scope: !6776)
!6778 = !DILocation(line: 573, column: 42, scope: !6776)
!6779 = !DILocation(line: 573, column: 6, scope: !6713)
!6780 = !DILocation(line: 574, column: 3, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6285, line: 574, column: 3)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6285, line: 574, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6285, line: 574, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6285, line: 574, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6776, file: !6285, line: 573, column: 48)
!6786 = !DILocation(line: 575, column: 2, scope: !6785)
!6787 = !DILocation(line: 576, column: 12, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6713, file: !6285, line: 576, column: 6)
!6789 = !DILocation(line: 576, column: 17, scope: !6788)
!6790 = !DILocation(line: 576, column: 44, scope: !6788)
!6791 = !DILocation(line: 576, column: 6, scope: !6713)
!6792 = !DILocation(line: 577, column: 3, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6285, line: 577, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6285, line: 577, column: 3)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6285, line: 577, column: 3)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6285, line: 577, column: 3)
!6797 = distinct !DILexicalBlock(scope: !6788, file: !6285, line: 576, column: 50)
!6798 = !DILocation(line: 578, column: 2, scope: !6797)
!6799 = !DILocation(line: 581, column: 12, scope: !6713)
!6800 = !DILocation(line: 583, column: 2, scope: !6713)
!6801 = distinct !DISubprogram(name: "debug_monitor", scope: !6285, file: !6285, line: 632, type: !6802, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6804)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{null, !2514, !6358}
!6804 = !{!6805, !6806}
!6805 = !DILocalVariable(name: "esf", arg: 1, scope: !6801, file: !6285, line: 632, type: !2514)
!6806 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6801, file: !6285, line: 632, type: !6358)
!6807 = !DILocation(line: 0, scope: !6801)
!6808 = !DILocation(line: 634, column: 15, scope: !6801)
!6809 = !DILocation(line: 636, column: 2, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !6285, line: 636, column: 2)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !6285, line: 636, column: 2)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6285, line: 636, column: 2)
!6813 = distinct !DILexicalBlock(scope: !6801, file: !6285, line: 636, column: 2)
!6814 = !DILocation(line: 652, column: 1, scope: !6801)
!6815 = distinct !DISubprogram(name: "reserved_exception", scope: !6285, file: !6285, line: 776, type: !6816, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6818)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{null, !6716, !107}
!6818 = !{!6819, !6820}
!6819 = !DILocalVariable(name: "esf", arg: 1, scope: !6815, file: !6285, line: 776, type: !6716)
!6820 = !DILocalVariable(name: "fault", arg: 2, scope: !6815, file: !6285, line: 776, type: !107)
!6821 = !DILocation(line: 0, scope: !6815)
!6822 = !DILocation(line: 780, column: 2, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6285, line: 780, column: 2)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6285, line: 780, column: 2)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6285, line: 780, column: 2)
!6826 = distinct !DILexicalBlock(scope: !6815, file: !6285, line: 780, column: 2)
!6827 = !DILocation(line: 783, column: 1, scope: !6815)
!6828 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6285, file: !6285, line: 658, type: !6829, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6831)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{!145, !2514}
!6831 = !{!6832, !6833, !6834}
!6832 = !DILocalVariable(name: "esf", arg: 1, scope: !6828, file: !6285, line: 658, type: !2514)
!6833 = !DILocalVariable(name: "ret_addr", scope: !6828, file: !6285, line: 660, type: !2557)
!6834 = !DILocalVariable(name: "fault_insn", scope: !6828, file: !6285, line: 686, type: !197)
!6835 = !DILocation(line: 0, scope: !6828)
!6836 = !DILocation(line: 660, column: 46, scope: !6828)
!6837 = !DILocation(line: 660, column: 23, scope: !6828)
!6838 = !DILocation(line: 682, column: 11, scope: !6828)
!6839 = !DILocation(line: 271, column: 3, scope: !6840, inlinedAt: !6841)
!6840 = distinct !DISubprogram(name: "__DSB", scope: !6003, file: !6003, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !1949)
!6841 = distinct !DILocation(line: 683, column: 2, scope: !6828)
!6842 = !{i64 6970193}
!6843 = !DILocation(line: 260, column: 3, scope: !6844, inlinedAt: !6845)
!6844 = distinct !DISubprogram(name: "__ISB", scope: !6003, file: !6003, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !1949)
!6845 = distinct !DILocation(line: 684, column: 2, scope: !6828)
!6846 = !{i64 6969910}
!6847 = !DILocation(line: 686, column: 35, scope: !6828)
!6848 = !DILocation(line: 686, column: 24, scope: !6828)
!6849 = !DILocation(line: 688, column: 11, scope: !6828)
!6850 = !DILocation(line: 271, column: 3, scope: !6840, inlinedAt: !6851)
!6851 = distinct !DILocation(line: 689, column: 2, scope: !6828)
!6852 = !DILocation(line: 260, column: 3, scope: !6844, inlinedAt: !6853)
!6853 = distinct !DILocation(line: 690, column: 2, scope: !6828)
!6854 = !DILocation(line: 693, column: 45, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6828, file: !6285, line: 693, column: 6)
!6856 = !DILocation(line: 699, column: 1, scope: !6828)
!6857 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6285, file: !6285, line: 1107, type: !2909, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !1949)
!6858 = !DILocation(line: 1111, column: 11, scope: !6857)
!6859 = !DILocation(line: 1136, column: 1, scope: !6857)
!6860 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6861, file: !6861, line: 26, type: !2909, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !6862)
!6861 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6862 = !{!6863}
!6863 = !DILocalVariable(name: "irq", scope: !6860, file: !6861, line: 28, type: !107)
!6864 = !DILocation(line: 0, scope: !6860)
!6865 = !DILocation(line: 30, column: 2, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6860, file: !6861, line: 30, column: 2)
!6867 = !DILocation(line: 31, column: 3, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6861, line: 30, column: 39)
!6869 = distinct !DILexicalBlock(scope: !6866, file: !6861, line: 30, column: 2)
!6870 = !DILocation(line: 30, column: 35, scope: !6869)
!6871 = !DILocation(line: 30, column: 13, scope: !6869)
!6872 = distinct !{!6872, !6865, !6873}
!6873 = !DILocation(line: 32, column: 2, scope: !6866)
!6874 = !DILocation(line: 33, column: 1, scope: !6860)
!6875 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6043, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !6876)
!6876 = !{!6877, !6878}
!6877 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6875, file: !1598, line: 1814, type: !2342)
!6878 = !DILocalVariable(name: "priority", arg: 2, scope: !6875, file: !1598, line: 1814, type: !152)
!6879 = !DILocation(line: 0, scope: !6875)
!6880 = !DILocation(line: 1816, column: 7, scope: !6875)
!6881 = !DILocation(line: 0, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6875, file: !1598, line: 1816, column: 7)
!6883 = !DILocation(line: 1824, column: 1, scope: !6875)
!6884 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6885, file: !6885, line: 27, type: !6886, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6986)
!6885 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6886 = !DISubroutineType(types: !6887)
!6887 = !{null, !6888}
!6888 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !6889)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 32)
!6890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !6891)
!6891 = !{!6892, !6950, !6962, !6963, !6964, !6965, !6966, !6981}
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6890, file: !716, line: 247, baseType: !6893, size: 384)
!6893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !6894)
!6894 = !{!6895, !6919, !6926, !6927, !6928, !6937, !6938, !6939}
!6895 = !DIDerivedType(tag: DW_TAG_member, scope: !6893, file: !716, line: 60, baseType: !6896, size: 64)
!6896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6893, file: !716, line: 60, size: 64, elements: !6897)
!6897 = !{!6898, !6913}
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6896, file: !716, line: 61, baseType: !6899, size: 64)
!6899 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !6900)
!6900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !6901)
!6901 = !{!6902, !6908}
!6902 = !DIDerivedType(tag: DW_TAG_member, scope: !6900, file: !726, line: 38, baseType: !6903, size: 32)
!6903 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6900, file: !726, line: 38, size: 32, elements: !6904)
!6904 = !{!6905, !6907}
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6903, file: !726, line: 39, baseType: !6906, size: 32)
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6900, size: 32)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6903, file: !726, line: 40, baseType: !6906, size: 32)
!6908 = !DIDerivedType(tag: DW_TAG_member, scope: !6900, file: !726, line: 42, baseType: !6909, size: 32, offset: 32)
!6909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6900, file: !726, line: 42, size: 32, elements: !6910)
!6910 = !{!6911, !6912}
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6909, file: !726, line: 43, baseType: !6906, size: 32)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6909, file: !726, line: 44, baseType: !6906, size: 32)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6896, file: !716, line: 62, baseType: !6914, size: 64)
!6914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !6915)
!6915 = !{!6916}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6914, file: !742, line: 50, baseType: !6917, size: 64)
!6917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6918, size: 64, elements: !747)
!6918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6893, file: !716, line: 68, baseType: !6920, size: 32, offset: 64)
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6921, size: 32)
!6921 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !6922)
!6922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !6923)
!6923 = !{!6924}
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6922, file: !752, line: 232, baseType: !6925, size: 64)
!6925 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !6900)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6893, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6893, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!6928 = !DIDerivedType(tag: DW_TAG_member, scope: !6893, file: !716, line: 90, baseType: !6929, size: 16, offset: 112)
!6929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6893, file: !716, line: 90, size: 16, elements: !6930)
!6930 = !{!6931, !6936}
!6931 = !DIDerivedType(tag: DW_TAG_member, scope: !6929, file: !716, line: 91, baseType: !6932, size: 16)
!6932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6929, file: !716, line: 91, size: 16, elements: !6933)
!6933 = !{!6934, !6935}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6932, file: !716, line: 96, baseType: !766, size: 8)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6932, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6929, file: !716, line: 100, baseType: !197, size: 16)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6893, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6893, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6893, file: !716, line: 131, baseType: !6940, size: 192, offset: 192)
!6940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !6941)
!6941 = !{!6942, !6943, !6949}
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6940, file: !752, line: 245, baseType: !6899, size: 64)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6940, file: !752, line: 246, baseType: !6944, size: 32, offset: 64)
!6944 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !6945)
!6945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6946, size: 32)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{null, !6948}
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6940, size: 32)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6940, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6890, file: !716, line: 250, baseType: !6951, size: 288, offset: 384)
!6951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !6952)
!6952 = !{!6953, !6954, !6955, !6956, !6957, !6958, !6959, !6960, !6961}
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6951, file: !785, line: 26, baseType: !152, size: 32)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6951, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6951, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6951, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6951, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6951, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6951, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6951, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6951, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6890, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6890, file: !716, line: 256, baseType: !6921, size: 64, offset: 704)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6890, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6890, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6890, file: !716, line: 325, baseType: !6967, size: 32, offset: 1056)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6968, size: 32)
!6968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !6969)
!6969 = !{!6970, !6976, !6977}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6968, file: !804, line: 5074, baseType: !6971, size: 96)
!6971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !6972)
!6972 = !{!6973, !6974, !6975}
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6971, file: !808, line: 57, baseType: !811, size: 32)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6971, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6971, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6968, file: !804, line: 5075, baseType: !6921, size: 64, offset: 96)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6968, file: !804, line: 5076, baseType: !6978, size: 32, offset: 160)
!6978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !6979)
!6979 = !{!6980}
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6978, file: !818, line: 52, baseType: !22, size: 32)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6890, file: !716, line: 343, baseType: !6982, size: 64, offset: 1088)
!6982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !6983)
!6983 = !{!6984, !6985}
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6982, file: !785, line: 63, baseType: !152, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6982, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!6986 = !{!6987}
!6987 = !DILocalVariable(name: "thread", arg: 1, scope: !6884, file: !6885, line: 27, type: !6888)
!6988 = !DILocation(line: 0, scope: !6884)
!6989 = !DILocation(line: 29, column: 6, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6884, file: !6885, line: 29, column: 6)
!6991 = !DILocation(line: 29, column: 15, scope: !6990)
!6992 = !DILocation(line: 29, column: 6, scope: !6884)
!6993 = !DILocation(line: 1031, column: 3, scope: !6994, inlinedAt: !6997)
!6994 = distinct !DISubprogram(name: "__get_IPSR", scope: !6003, file: !6003, line: 1027, type: !6090, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6995)
!6995 = !{!6996}
!6996 = !DILocalVariable(name: "result", scope: !6994, file: !6003, line: 1029, type: !152)
!6997 = distinct !DILocation(line: 48, column: 10, scope: !6998, inlinedAt: !7002)
!6998 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6999, file: !6999, line: 46, type: !7000, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !1949)
!6999 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!145}
!7002 = distinct !DILocation(line: 30, column: 7, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6885, line: 30, column: 7)
!7004 = distinct !DILexicalBlock(scope: !6990, file: !6885, line: 29, column: 26)
!7005 = !{i64 6971417}
!7006 = !DILocation(line: 0, scope: !6994, inlinedAt: !6997)
!7007 = !DILocation(line: 48, column: 9, scope: !6998, inlinedAt: !7002)
!7008 = !DILocation(line: 30, column: 7, scope: !7004)
!7009 = !DILocation(line: 42, column: 14, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7003, file: !6885, line: 30, column: 25)
!7011 = !DILocation(line: 48, column: 15, scope: !7010)
!7012 = !DILocation(line: 49, column: 3, scope: !7010)
!7013 = !DILocation(line: 52, column: 2, scope: !6884)
!7014 = !DILocation(line: 53, column: 1, scope: !6884)
!7015 = distinct !DISubprogram(name: "strcpy", scope: !7016, file: !7016, line: 20, type: !7017, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7021)
!7016 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7017 = !DISubroutineType(types: !7018)
!7018 = !{!193, !7019, !7020}
!7019 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7020 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7021 = !{!7022, !7023, !7024}
!7022 = !DILocalVariable(name: "d", arg: 1, scope: !7015, file: !7016, line: 20, type: !7019)
!7023 = !DILocalVariable(name: "s", arg: 2, scope: !7015, file: !7016, line: 20, type: !7020)
!7024 = !DILocalVariable(name: "dest", scope: !7015, file: !7016, line: 22, type: !193)
!7025 = !DILocation(line: 0, scope: !7015)
!7026 = !DILocation(line: 24, column: 9, scope: !7015)
!7027 = !DILocation(line: 24, column: 12, scope: !7015)
!7028 = !DILocation(line: 24, column: 2, scope: !7015)
!7029 = !DILocation(line: 25, column: 6, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7015, file: !7016, line: 24, column: 21)
!7031 = !DILocation(line: 26, column: 4, scope: !7030)
!7032 = !DILocation(line: 27, column: 4, scope: !7030)
!7033 = distinct !{!7033, !7028, !7034}
!7034 = !DILocation(line: 28, column: 2, scope: !7015)
!7035 = !DILocation(line: 30, column: 5, scope: !7015)
!7036 = !DILocation(line: 32, column: 2, scope: !7015)
!7037 = distinct !DISubprogram(name: "strncpy", scope: !7016, file: !7016, line: 42, type: !7038, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7040)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{!193, !7019, !7020, !185}
!7040 = !{!7041, !7042, !7043, !7044}
!7041 = !DILocalVariable(name: "d", arg: 1, scope: !7037, file: !7016, line: 42, type: !7019)
!7042 = !DILocalVariable(name: "s", arg: 2, scope: !7037, file: !7016, line: 42, type: !7020)
!7043 = !DILocalVariable(name: "n", arg: 3, scope: !7037, file: !7016, line: 42, type: !185)
!7044 = !DILocalVariable(name: "dest", scope: !7037, file: !7016, line: 44, type: !193)
!7045 = !DILocation(line: 0, scope: !7037)
!7046 = !DILocation(line: 46, column: 12, scope: !7037)
!7047 = !DILocation(line: 46, column: 17, scope: !7037)
!7048 = !DILocation(line: 46, column: 20, scope: !7037)
!7049 = !DILocation(line: 46, column: 23, scope: !7037)
!7050 = !DILocation(line: 46, column: 2, scope: !7037)
!7051 = !DILocation(line: 47, column: 6, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7037, file: !7016, line: 46, column: 32)
!7053 = !DILocation(line: 48, column: 4, scope: !7052)
!7054 = !DILocation(line: 49, column: 4, scope: !7052)
!7055 = !DILocation(line: 50, column: 4, scope: !7052)
!7056 = distinct !{!7056, !7050, !7057}
!7057 = !DILocation(line: 51, column: 2, scope: !7037)
!7058 = !DILocation(line: 54, column: 6, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7037, file: !7016, line: 53, column: 16)
!7060 = !DILocation(line: 55, column: 4, scope: !7059)
!7061 = !DILocation(line: 56, column: 4, scope: !7059)
!7062 = !DILocation(line: 53, column: 11, scope: !7037)
!7063 = !DILocation(line: 53, column: 2, scope: !7037)
!7064 = distinct !{!7064, !7063, !7065}
!7065 = !DILocation(line: 57, column: 2, scope: !7037)
!7066 = !DILocation(line: 59, column: 2, scope: !7037)
!7067 = distinct !DISubprogram(name: "strchr", scope: !7016, file: !7016, line: 69, type: !7068, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7070)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!193, !118, !107}
!7070 = !{!7071, !7072, !7073}
!7071 = !DILocalVariable(name: "s", arg: 1, scope: !7067, file: !7016, line: 69, type: !118)
!7072 = !DILocalVariable(name: "c", arg: 2, scope: !7067, file: !7016, line: 69, type: !107)
!7073 = !DILocalVariable(name: "tmp", scope: !7067, file: !7016, line: 71, type: !120)
!7074 = !DILocation(line: 0, scope: !7067)
!7075 = !DILocation(line: 73, column: 2, scope: !7067)
!7076 = !DILocation(line: 73, column: 10, scope: !7067)
!7077 = !DILocation(line: 73, column: 13, scope: !7067)
!7078 = !DILocation(line: 73, column: 21, scope: !7067)
!7079 = !DILocation(line: 74, column: 4, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7067, file: !7016, line: 73, column: 38)
!7081 = distinct !{!7081, !7075, !7082}
!7082 = !DILocation(line: 75, column: 2, scope: !7067)
!7083 = !DILocation(line: 77, column: 9, scope: !7067)
!7084 = !DILocation(line: 77, column: 2, scope: !7067)
!7085 = distinct !DISubprogram(name: "strrchr", scope: !7016, file: !7016, line: 87, type: !7068, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7086)
!7086 = !{!7087, !7088, !7089}
!7087 = !DILocalVariable(name: "s", arg: 1, scope: !7085, file: !7016, line: 87, type: !118)
!7088 = !DILocalVariable(name: "c", arg: 2, scope: !7085, file: !7016, line: 87, type: !107)
!7089 = !DILocalVariable(name: "match", scope: !7085, file: !7016, line: 89, type: !193)
!7090 = !DILocation(line: 0, scope: !7085)
!7091 = !DILocation(line: 91, column: 2, scope: !7085)
!7092 = !DILocation(line: 92, column: 7, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !7016, line: 92, column: 7)
!7094 = distinct !DILexicalBlock(scope: !7085, file: !7016, line: 91, column: 5)
!7095 = !DILocation(line: 92, column: 10, scope: !7093)
!7096 = !DILocation(line: 92, column: 7, scope: !7094)
!7097 = !DILocation(line: 95, column: 13, scope: !7085)
!7098 = !DILocation(line: 95, column: 2, scope: !7094)
!7099 = distinct !{!7099, !7091, !7100}
!7100 = !DILocation(line: 95, column: 15, scope: !7085)
!7101 = !DILocation(line: 97, column: 2, scope: !7085)
!7102 = distinct !DISubprogram(name: "strlen", scope: !7016, file: !7016, line: 107, type: !7103, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7105)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!185, !118}
!7105 = !{!7106, !7107}
!7106 = !DILocalVariable(name: "s", arg: 1, scope: !7102, file: !7016, line: 107, type: !118)
!7107 = !DILocalVariable(name: "n", scope: !7102, file: !7016, line: 109, type: !185)
!7108 = !DILocation(line: 0, scope: !7102)
!7109 = !DILocation(line: 111, column: 9, scope: !7102)
!7110 = !DILocation(line: 111, column: 12, scope: !7102)
!7111 = !DILocation(line: 111, column: 2, scope: !7102)
!7112 = !DILocation(line: 112, column: 4, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7102, file: !7016, line: 111, column: 21)
!7114 = !DILocation(line: 113, column: 4, scope: !7113)
!7115 = distinct !{!7115, !7111, !7116}
!7116 = !DILocation(line: 114, column: 2, scope: !7102)
!7117 = !DILocation(line: 116, column: 2, scope: !7102)
!7118 = distinct !DISubprogram(name: "strnlen", scope: !7016, file: !7016, line: 126, type: !7119, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7121)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!185, !118, !185}
!7121 = !{!7122, !7123, !7124}
!7122 = !DILocalVariable(name: "s", arg: 1, scope: !7118, file: !7016, line: 126, type: !118)
!7123 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7118, file: !7016, line: 126, type: !185)
!7124 = !DILocalVariable(name: "n", scope: !7118, file: !7016, line: 128, type: !185)
!7125 = !DILocation(line: 0, scope: !7118)
!7126 = !DILocation(line: 130, column: 9, scope: !7118)
!7127 = !DILocation(line: 130, column: 12, scope: !7118)
!7128 = !DILocation(line: 130, column: 20, scope: !7118)
!7129 = !DILocation(line: 130, column: 2, scope: !7118)
!7130 = !DILocation(line: 131, column: 4, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7118, file: !7016, line: 130, column: 35)
!7132 = !DILocation(line: 132, column: 4, scope: !7131)
!7133 = distinct !{!7133, !7129, !7134}
!7134 = !DILocation(line: 133, column: 2, scope: !7118)
!7135 = !DILocation(line: 135, column: 2, scope: !7118)
!7136 = distinct !DISubprogram(name: "strcmp", scope: !7016, file: !7016, line: 145, type: !7137, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7139)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!107, !118, !118}
!7139 = !{!7140, !7141}
!7140 = !DILocalVariable(name: "s1", arg: 1, scope: !7136, file: !7016, line: 145, type: !118)
!7141 = !DILocalVariable(name: "s2", arg: 2, scope: !7136, file: !7016, line: 145, type: !118)
!7142 = !DILocation(line: 0, scope: !7136)
!7143 = !DILocation(line: 147, column: 10, scope: !7136)
!7144 = !DILocation(line: 147, column: 17, scope: !7136)
!7145 = !DILocation(line: 147, column: 14, scope: !7136)
!7146 = !DILocation(line: 147, column: 22, scope: !7136)
!7147 = !DILocation(line: 148, column: 5, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7136, file: !7016, line: 147, column: 40)
!7149 = !DILocation(line: 149, column: 5, scope: !7148)
!7150 = distinct !{!7150, !7151, !7152}
!7151 = !DILocation(line: 147, column: 2, scope: !7136)
!7152 = !DILocation(line: 150, column: 2, scope: !7136)
!7153 = !DILocation(line: 152, column: 9, scope: !7136)
!7154 = !DILocation(line: 152, column: 15, scope: !7136)
!7155 = !DILocation(line: 152, column: 13, scope: !7136)
!7156 = !DILocation(line: 152, column: 2, scope: !7136)
!7157 = distinct !DISubprogram(name: "strncmp", scope: !7016, file: !7016, line: 162, type: !7158, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7160)
!7158 = !DISubroutineType(types: !7159)
!7159 = !{!107, !118, !118, !185}
!7160 = !{!7161, !7162, !7163}
!7161 = !DILocalVariable(name: "s1", arg: 1, scope: !7157, file: !7016, line: 162, type: !118)
!7162 = !DILocalVariable(name: "s2", arg: 2, scope: !7157, file: !7016, line: 162, type: !118)
!7163 = !DILocalVariable(name: "n", arg: 3, scope: !7157, file: !7016, line: 162, type: !185)
!7164 = !DILocation(line: 0, scope: !7157)
!7165 = !DILocation(line: 164, column: 17, scope: !7157)
!7166 = !DILocation(line: 164, column: 21, scope: !7157)
!7167 = !DILocation(line: 164, column: 28, scope: !7157)
!7168 = !DILocation(line: 164, column: 25, scope: !7157)
!7169 = !DILocation(line: 164, column: 33, scope: !7157)
!7170 = !DILocation(line: 165, column: 5, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7157, file: !7016, line: 164, column: 51)
!7172 = !DILocation(line: 166, column: 5, scope: !7171)
!7173 = !DILocation(line: 167, column: 4, scope: !7171)
!7174 = distinct !{!7174, !7175, !7176}
!7175 = !DILocation(line: 164, column: 2, scope: !7157)
!7176 = !DILocation(line: 168, column: 2, scope: !7157)
!7177 = !DILocation(line: 170, column: 25, scope: !7157)
!7178 = !DILocation(line: 170, column: 31, scope: !7157)
!7179 = !DILocation(line: 170, column: 29, scope: !7157)
!7180 = !DILocation(line: 170, column: 9, scope: !7157)
!7181 = !DILocation(line: 170, column: 2, scope: !7157)
!7182 = distinct !DISubprogram(name: "strtok_r", scope: !7016, file: !7016, line: 180, type: !7183, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7185)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!193, !193, !118, !192}
!7185 = !{!7186, !7187, !7188, !7189, !7190}
!7186 = !DILocalVariable(name: "str", arg: 1, scope: !7182, file: !7016, line: 180, type: !193)
!7187 = !DILocalVariable(name: "sep", arg: 2, scope: !7182, file: !7016, line: 180, type: !118)
!7188 = !DILocalVariable(name: "state", arg: 3, scope: !7182, file: !7016, line: 180, type: !192)
!7189 = !DILocalVariable(name: "start", scope: !7182, file: !7016, line: 182, type: !193)
!7190 = !DILocalVariable(name: "end", scope: !7182, file: !7016, line: 182, type: !193)
!7191 = !DILocation(line: 0, scope: !7182)
!7192 = !DILocation(line: 184, column: 10, scope: !7182)
!7193 = !DILocation(line: 184, column: 22, scope: !7182)
!7194 = !DILocation(line: 187, column: 9, scope: !7182)
!7195 = !DILocation(line: 187, column: 16, scope: !7182)
!7196 = !DILocation(line: 187, column: 19, scope: !7182)
!7197 = !DILocation(line: 187, column: 2, scope: !7182)
!7198 = !DILocation(line: 188, column: 8, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7182, file: !7016, line: 187, column: 40)
!7200 = distinct !{!7200, !7197, !7201}
!7201 = !DILocation(line: 189, column: 2, scope: !7182)
!7202 = !DILocation(line: 198, column: 9, scope: !7182)
!7203 = !DILocation(line: 198, column: 18, scope: !7182)
!7204 = !DILocation(line: 198, column: 17, scope: !7182)
!7205 = !DILocation(line: 198, column: 2, scope: !7182)
!7206 = !DILocation(line: 199, column: 6, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7182, file: !7016, line: 198, column: 37)
!7208 = !DILocation(line: 198, column: 14, scope: !7182)
!7209 = distinct !{!7209, !7205, !7210}
!7210 = !DILocation(line: 200, column: 2, scope: !7182)
!7211 = !DILocation(line: 203, column: 8, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !7016, line: 202, column: 20)
!7213 = distinct !DILexicalBlock(scope: !7182, file: !7016, line: 202, column: 6)
!7214 = !DILocation(line: 204, column: 16, scope: !7212)
!7215 = !DILocation(line: 205, column: 2, scope: !7212)
!7216 = !DILocation(line: 210, column: 1, scope: !7182)
!7217 = distinct !DISubprogram(name: "strcat", scope: !7016, file: !7016, line: 212, type: !7017, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7218)
!7218 = !{!7219, !7220}
!7219 = !DILocalVariable(name: "dest", arg: 1, scope: !7217, file: !7016, line: 212, type: !7019)
!7220 = !DILocalVariable(name: "src", arg: 2, scope: !7217, file: !7016, line: 212, type: !7020)
!7221 = !DILocation(line: 0, scope: !7217)
!7222 = !DILocation(line: 214, column: 16, scope: !7217)
!7223 = !DILocation(line: 214, column: 14, scope: !7217)
!7224 = !DILocation(line: 214, column: 2, scope: !7217)
!7225 = !DILocation(line: 215, column: 2, scope: !7217)
!7226 = distinct !DISubprogram(name: "strncat", scope: !7016, file: !7016, line: 218, type: !7038, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7227)
!7227 = !{!7228, !7229, !7230, !7231, !7232}
!7228 = !DILocalVariable(name: "dest", arg: 1, scope: !7226, file: !7016, line: 218, type: !7019)
!7229 = !DILocalVariable(name: "src", arg: 2, scope: !7226, file: !7016, line: 218, type: !7020)
!7230 = !DILocalVariable(name: "n", arg: 3, scope: !7226, file: !7016, line: 219, type: !185)
!7231 = !DILocalVariable(name: "orig_dest", scope: !7226, file: !7016, line: 221, type: !193)
!7232 = !DILocalVariable(name: "len", scope: !7226, file: !7016, line: 222, type: !185)
!7233 = !DILocation(line: 0, scope: !7226)
!7234 = !DILocation(line: 222, column: 15, scope: !7226)
!7235 = !DILocation(line: 224, column: 7, scope: !7226)
!7236 = !DILocation(line: 225, column: 14, scope: !7226)
!7237 = !DILocation(line: 225, column: 19, scope: !7226)
!7238 = !DILocation(line: 225, column: 11, scope: !7226)
!7239 = !DILocation(line: 225, column: 23, scope: !7226)
!7240 = !DILocation(line: 225, column: 28, scope: !7226)
!7241 = !DILocation(line: 225, column: 2, scope: !7226)
!7242 = !DILocation(line: 226, column: 17, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7226, file: !7016, line: 225, column: 38)
!7244 = !DILocation(line: 226, column: 8, scope: !7243)
!7245 = !DILocation(line: 226, column: 11, scope: !7243)
!7246 = distinct !{!7246, !7241, !7247}
!7247 = !DILocation(line: 227, column: 2, scope: !7226)
!7248 = !DILocation(line: 228, column: 8, scope: !7226)
!7249 = !DILocation(line: 230, column: 2, scope: !7226)
!7250 = distinct !DISubprogram(name: "memcmp", scope: !7016, file: !7016, line: 239, type: !7251, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7253)
!7251 = !DISubroutineType(types: !7252)
!7252 = !{!107, !13, !13, !185}
!7253 = !{!7254, !7255, !7256, !7257, !7258}
!7254 = !DILocalVariable(name: "m1", arg: 1, scope: !7250, file: !7016, line: 239, type: !13)
!7255 = !DILocalVariable(name: "m2", arg: 2, scope: !7250, file: !7016, line: 239, type: !13)
!7256 = !DILocalVariable(name: "n", arg: 3, scope: !7250, file: !7016, line: 239, type: !185)
!7257 = !DILocalVariable(name: "c1", scope: !7250, file: !7016, line: 241, type: !118)
!7258 = !DILocalVariable(name: "c2", scope: !7250, file: !7016, line: 242, type: !118)
!7259 = !DILocation(line: 0, scope: !7250)
!7260 = !DILocation(line: 244, column: 7, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7250, file: !7016, line: 244, column: 6)
!7262 = !DILocation(line: 244, column: 6, scope: !7250)
!7263 = !DILocation(line: 248, column: 10, scope: !7250)
!7264 = !DILocation(line: 248, column: 14, scope: !7250)
!7265 = !DILocation(line: 248, column: 19, scope: !7250)
!7266 = !DILocation(line: 248, column: 2, scope: !7250)
!7267 = !DILocation(line: 248, column: 23, scope: !7250)
!7268 = !DILocation(line: 248, column: 30, scope: !7250)
!7269 = !DILocation(line: 248, column: 27, scope: !7250)
!7270 = !DILocation(line: 249, column: 5, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7250, file: !7016, line: 248, column: 36)
!7272 = !DILocation(line: 250, column: 5, scope: !7271)
!7273 = distinct !{!7273, !7266, !7274}
!7274 = !DILocation(line: 251, column: 2, scope: !7250)
!7275 = !DILocation(line: 253, column: 9, scope: !7250)
!7276 = !DILocation(line: 253, column: 15, scope: !7250)
!7277 = !DILocation(line: 253, column: 13, scope: !7250)
!7278 = !DILocation(line: 253, column: 2, scope: !7250)
!7279 = !DILocation(line: 254, column: 1, scope: !7250)
!7280 = distinct !DISubprogram(name: "memmove", scope: !7016, file: !7016, line: 263, type: !7281, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7283)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{!106, !106, !13, !185}
!7283 = !{!7284, !7285, !7286, !7287, !7288}
!7284 = !DILocalVariable(name: "d", arg: 1, scope: !7280, file: !7016, line: 263, type: !106)
!7285 = !DILocalVariable(name: "s", arg: 2, scope: !7280, file: !7016, line: 263, type: !13)
!7286 = !DILocalVariable(name: "n", arg: 3, scope: !7280, file: !7016, line: 263, type: !185)
!7287 = !DILocalVariable(name: "dest", scope: !7280, file: !7016, line: 265, type: !193)
!7288 = !DILocalVariable(name: "src", scope: !7280, file: !7016, line: 266, type: !118)
!7289 = !DILocation(line: 0, scope: !7280)
!7290 = !DILocation(line: 268, column: 21, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7280, file: !7016, line: 268, column: 6)
!7292 = !DILocation(line: 268, column: 28, scope: !7291)
!7293 = !DILocation(line: 268, column: 6, scope: !7280)
!7294 = !DILocation(line: 280, column: 12, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7291, file: !7016, line: 278, column: 9)
!7296 = !DILocation(line: 280, column: 3, scope: !7295)
!7297 = !DILocation(line: 275, column: 5, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !7016, line: 274, column: 17)
!7299 = distinct !DILexicalBlock(scope: !7291, file: !7016, line: 268, column: 33)
!7300 = !DILocation(line: 276, column: 14, scope: !7298)
!7301 = !DILocation(line: 276, column: 4, scope: !7298)
!7302 = !DILocation(line: 276, column: 12, scope: !7298)
!7303 = !DILocation(line: 274, column: 12, scope: !7299)
!7304 = !DILocation(line: 274, column: 3, scope: !7299)
!7305 = distinct !{!7305, !7304, !7306}
!7306 = !DILocation(line: 277, column: 3, scope: !7299)
!7307 = !DILocation(line: 281, column: 12, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7295, file: !7016, line: 280, column: 17)
!7309 = !DILocation(line: 281, column: 10, scope: !7308)
!7310 = !DILocation(line: 282, column: 8, scope: !7308)
!7311 = !DILocation(line: 283, column: 7, scope: !7308)
!7312 = !DILocation(line: 284, column: 5, scope: !7308)
!7313 = distinct !{!7313, !7296, !7314}
!7314 = !DILocation(line: 285, column: 3, scope: !7295)
!7315 = !DILocation(line: 288, column: 2, scope: !7280)
!7316 = distinct !DISubprogram(name: "memcpy", scope: !7016, file: !7016, line: 298, type: !7317, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7321)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{!106, !7319, !7320, !185}
!7319 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7320 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7321 = !{!7322, !7323, !7324, !7325, !7326}
!7322 = !DILocalVariable(name: "d", arg: 1, scope: !7316, file: !7016, line: 298, type: !7319)
!7323 = !DILocalVariable(name: "s", arg: 2, scope: !7316, file: !7016, line: 298, type: !7320)
!7324 = !DILocalVariable(name: "n", arg: 3, scope: !7316, file: !7016, line: 298, type: !185)
!7325 = !DILocalVariable(name: "d_byte", scope: !7316, file: !7016, line: 302, type: !902)
!7326 = !DILocalVariable(name: "s_byte", scope: !7316, file: !7016, line: 303, type: !2634)
!7327 = !DILocation(line: 0, scope: !7316)
!7328 = !DILocation(line: 337, column: 11, scope: !7316)
!7329 = !DILocation(line: 337, column: 2, scope: !7316)
!7330 = !DILocation(line: 338, column: 25, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7316, file: !7016, line: 337, column: 16)
!7332 = !DILocation(line: 338, column: 17, scope: !7331)
!7333 = !DILocation(line: 338, column: 11, scope: !7331)
!7334 = !DILocation(line: 338, column: 15, scope: !7331)
!7335 = !DILocation(line: 339, column: 4, scope: !7331)
!7336 = distinct !{!7336, !7329, !7337}
!7337 = !DILocation(line: 340, column: 2, scope: !7316)
!7338 = !DILocation(line: 342, column: 2, scope: !7316)
!7339 = distinct !DISubprogram(name: "memset", scope: !7016, file: !7016, line: 352, type: !7340, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7342)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!106, !106, !107, !185}
!7342 = !{!7343, !7344, !7345, !7346, !7347}
!7343 = !DILocalVariable(name: "buf", arg: 1, scope: !7339, file: !7016, line: 352, type: !106)
!7344 = !DILocalVariable(name: "c", arg: 2, scope: !7339, file: !7016, line: 352, type: !107)
!7345 = !DILocalVariable(name: "n", arg: 3, scope: !7339, file: !7016, line: 352, type: !185)
!7346 = !DILocalVariable(name: "d_byte", scope: !7339, file: !7016, line: 356, type: !902)
!7347 = !DILocalVariable(name: "c_byte", scope: !7339, file: !7016, line: 357, type: !196)
!7348 = !DILocation(line: 0, scope: !7339)
!7349 = !DILocation(line: 357, column: 25, scope: !7339)
!7350 = !DILocation(line: 389, column: 11, scope: !7339)
!7351 = !DILocation(line: 389, column: 2, scope: !7339)
!7352 = !DILocation(line: 390, column: 11, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7339, file: !7016, line: 389, column: 16)
!7354 = !DILocation(line: 390, column: 15, scope: !7353)
!7355 = !DILocation(line: 391, column: 4, scope: !7353)
!7356 = distinct !{!7356, !7351, !7357}
!7357 = !DILocation(line: 392, column: 2, scope: !7339)
!7358 = !DILocation(line: 394, column: 2, scope: !7339)
!7359 = distinct !DISubprogram(name: "memchr", scope: !7016, file: !7016, line: 404, type: !7360, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7362)
!7360 = !DISubroutineType(types: !7361)
!7361 = !{!106, !13, !107, !185}
!7362 = !{!7363, !7364, !7365, !7366}
!7363 = !DILocalVariable(name: "s", arg: 1, scope: !7359, file: !7016, line: 404, type: !13)
!7364 = !DILocalVariable(name: "c", arg: 2, scope: !7359, file: !7016, line: 404, type: !107)
!7365 = !DILocalVariable(name: "n", arg: 3, scope: !7359, file: !7016, line: 404, type: !185)
!7366 = !DILocalVariable(name: "p", scope: !7367, file: !7016, line: 407, type: !2634)
!7367 = distinct !DILexicalBlock(scope: !7368, file: !7016, line: 406, column: 14)
!7368 = distinct !DILexicalBlock(scope: !7359, file: !7016, line: 406, column: 6)
!7369 = !DILocation(line: 0, scope: !7359)
!7370 = !DILocation(line: 406, column: 8, scope: !7368)
!7371 = !DILocation(line: 406, column: 6, scope: !7359)
!7372 = !DILocation(line: 409, column: 3, scope: !7367)
!7373 = !DILocation(line: 0, scope: !7367)
!7374 = !DILocation(line: 410, column: 8, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7376, file: !7016, line: 410, column: 8)
!7376 = distinct !DILexicalBlock(scope: !7367, file: !7016, line: 409, column: 6)
!7377 = !DILocation(line: 410, column: 13, scope: !7375)
!7378 = !DILocation(line: 410, column: 8, scope: !7376)
!7379 = distinct !{!7379, !7372, !7380}
!7380 = !DILocation(line: 414, column: 20, scope: !7367)
!7381 = !DILocation(line: 417, column: 2, scope: !7359)
!7382 = !DILocation(line: 418, column: 1, scope: !7359)
!7383 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !654, file: !654, line: 23, type: !3936, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7384)
!7384 = !{!7385}
!7385 = !DILocalVariable(name: "hook", arg: 1, scope: !7383, file: !654, line: 23, type: !213)
!7386 = !DILocation(line: 0, scope: !7383)
!7387 = !DILocation(line: 25, column: 15, scope: !7383)
!7388 = !DILocation(line: 26, column: 1, scope: !7383)
!7389 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !654, file: !654, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7390)
!7390 = !{!7391}
!7391 = !DILocalVariable(name: "c", arg: 1, scope: !7389, file: !654, line: 14, type: !107)
!7392 = !DILocation(line: 0, scope: !7389)
!7393 = !DILocation(line: 18, column: 2, scope: !7389)
!7394 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !654, file: !654, line: 28, type: !7395, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7397)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!107, !107, !650}
!7397 = !{!7398, !7399}
!7398 = !DILocalVariable(name: "c", arg: 1, scope: !7394, file: !654, line: 28, type: !107)
!7399 = !DILocalVariable(name: "stream", arg: 2, scope: !7394, file: !654, line: 28, type: !650)
!7400 = !DILocation(line: 0, scope: !7394)
!7401 = !DILocation(line: 30, column: 27, scope: !7394)
!7402 = !DILocation(line: 30, column: 50, scope: !7394)
!7403 = !DILocation(line: 30, column: 9, scope: !7394)
!7404 = !DILocation(line: 30, column: 2, scope: !7394)
!7405 = distinct !DISubprogram(name: "fputc", scope: !654, file: !654, line: 41, type: !7395, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7406)
!7406 = !{!7407, !7408}
!7407 = !DILocalVariable(name: "c", arg: 1, scope: !7405, file: !654, line: 41, type: !107)
!7408 = !DILocalVariable(name: "stream", arg: 2, scope: !7405, file: !654, line: 41, type: !650)
!7409 = !DILocation(line: 0, scope: !7405)
!7410 = !DILocation(line: 43, column: 9, scope: !7405)
!7411 = !DILocation(line: 43, column: 2, scope: !7405)
!7412 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7413, file: !7413, line: 72, type: !7395, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7414)
!7413 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!7414 = !{!7415, !7416}
!7415 = !DILocalVariable(name: "c", arg: 1, scope: !7412, file: !7413, line: 72, type: !107)
!7416 = !DILocalVariable(name: "stream", arg: 2, scope: !7412, file: !7413, line: 72, type: !650)
!7417 = !DILocation(line: 0, scope: !7412)
!7418 = !DILocation(line: 81, column: 2, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7412, file: !7413, line: 81, column: 2)
!7420 = !{i64 2151107962}
!7421 = !DILocation(line: 82, column: 9, scope: !7412)
!7422 = !DILocation(line: 82, column: 2, scope: !7412)
!7423 = distinct !DISubprogram(name: "fputs", scope: !654, file: !654, line: 46, type: !7424, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7427)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{!107, !7020, !7426}
!7426 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !650)
!7427 = !{!7428, !7429, !7430, !7431}
!7428 = !DILocalVariable(name: "s", arg: 1, scope: !7423, file: !654, line: 46, type: !7020)
!7429 = !DILocalVariable(name: "stream", arg: 2, scope: !7423, file: !654, line: 46, type: !7426)
!7430 = !DILocalVariable(name: "len", scope: !7423, file: !654, line: 48, type: !107)
!7431 = !DILocalVariable(name: "ret", scope: !7423, file: !654, line: 49, type: !107)
!7432 = !DILocation(line: 0, scope: !7423)
!7433 = !DILocation(line: 48, column: 12, scope: !7423)
!7434 = !DILocation(line: 51, column: 8, scope: !7423)
!7435 = !DILocation(line: 53, column: 13, scope: !7423)
!7436 = !DILocation(line: 53, column: 9, scope: !7423)
!7437 = !DILocation(line: 53, column: 2, scope: !7423)
!7438 = distinct !DISubprogram(name: "fwrite", scope: !654, file: !654, line: 99, type: !7439, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7441)
!7439 = !DISubroutineType(types: !7440)
!7440 = !{!185, !7320, !185, !185, !7426}
!7441 = !{!7442, !7443, !7444, !7445}
!7442 = !DILocalVariable(name: "ptr", arg: 1, scope: !7438, file: !654, line: 99, type: !7320)
!7443 = !DILocalVariable(name: "size", arg: 2, scope: !7438, file: !654, line: 99, type: !185)
!7444 = !DILocalVariable(name: "nitems", arg: 3, scope: !7438, file: !654, line: 99, type: !185)
!7445 = !DILocalVariable(name: "stream", arg: 4, scope: !7438, file: !654, line: 100, type: !7426)
!7446 = !DILocation(line: 0, scope: !7438)
!7447 = !DILocation(line: 102, column: 9, scope: !7438)
!7448 = !DILocation(line: 102, column: 2, scope: !7438)
!7449 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7413, file: !7413, line: 96, type: !7439, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7450)
!7450 = !{!7451, !7452, !7453, !7454}
!7451 = !DILocalVariable(name: "ptr", arg: 1, scope: !7449, file: !7413, line: 96, type: !7320)
!7452 = !DILocalVariable(name: "size", arg: 2, scope: !7449, file: !7413, line: 96, type: !185)
!7453 = !DILocalVariable(name: "nitems", arg: 3, scope: !7449, file: !7413, line: 96, type: !185)
!7454 = !DILocalVariable(name: "stream", arg: 4, scope: !7449, file: !7413, line: 96, type: !7426)
!7455 = !DILocation(line: 0, scope: !7449)
!7456 = !DILocation(line: 107, column: 2, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7449, file: !7413, line: 107, column: 2)
!7458 = !{i64 2151108066}
!7459 = !DILocation(line: 108, column: 9, scope: !7449)
!7460 = !DILocation(line: 108, column: 2, scope: !7449)
!7461 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !654, file: !654, line: 56, type: !7439, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7462)
!7462 = !{!7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470}
!7463 = !DILocalVariable(name: "ptr", arg: 1, scope: !7461, file: !654, line: 56, type: !7320)
!7464 = !DILocalVariable(name: "size", arg: 2, scope: !7461, file: !654, line: 56, type: !185)
!7465 = !DILocalVariable(name: "nitems", arg: 3, scope: !7461, file: !654, line: 57, type: !185)
!7466 = !DILocalVariable(name: "stream", arg: 4, scope: !7461, file: !654, line: 57, type: !7426)
!7467 = !DILocalVariable(name: "i", scope: !7461, file: !654, line: 59, type: !185)
!7468 = !DILocalVariable(name: "j", scope: !7461, file: !654, line: 60, type: !185)
!7469 = !DILocalVariable(name: "p", scope: !7461, file: !654, line: 61, type: !2634)
!7470 = !DILabel(scope: !7461, name: "done", file: !654, line: 82)
!7471 = !DILocation(line: 0, scope: !7461)
!7472 = !DILocation(line: 63, column: 14, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7461, file: !654, line: 63, column: 6)
!7474 = !DILocation(line: 63, column: 24, scope: !7473)
!7475 = !DILocation(line: 72, column: 3, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7461, file: !654, line: 70, column: 5)
!7477 = !DILocation(line: 0, scope: !7476)
!7478 = !DILocation(line: 73, column: 8, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !654, line: 73, column: 8)
!7480 = distinct !DILexicalBlock(scope: !7476, file: !654, line: 72, column: 6)
!7481 = !DILocation(line: 73, column: 29, scope: !7479)
!7482 = !DILocation(line: 73, column: 27, scope: !7479)
!7483 = !DILocation(line: 73, column: 21, scope: !7479)
!7484 = !DILocation(line: 73, column: 33, scope: !7479)
!7485 = !DILocation(line: 73, column: 8, scope: !7480)
!7486 = !DILocation(line: 76, column: 5, scope: !7480)
!7487 = !DILocation(line: 77, column: 14, scope: !7476)
!7488 = !DILocation(line: 77, column: 3, scope: !7480)
!7489 = distinct !{!7489, !7475, !7490}
!7490 = !DILocation(line: 77, column: 17, scope: !7476)
!7491 = !DILocation(line: 79, column: 4, scope: !7476)
!7492 = !DILocation(line: 80, column: 13, scope: !7461)
!7493 = !DILocation(line: 80, column: 2, scope: !7476)
!7494 = distinct !{!7494, !7495, !7496}
!7495 = !DILocation(line: 70, column: 2, scope: !7461)
!7496 = !DILocation(line: 80, column: 16, scope: !7461)
!7497 = !DILocation(line: 82, column: 1, scope: !7461)
!7498 = !DILocation(line: 83, column: 17, scope: !7461)
!7499 = !DILocation(line: 83, column: 2, scope: !7461)
!7500 = !DILocation(line: 84, column: 1, scope: !7461)
!7501 = distinct !DISubprogram(name: "puts", scope: !654, file: !654, line: 106, type: !7502, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7504)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{!107, !118}
!7504 = !{!7505}
!7505 = !DILocalVariable(name: "s", arg: 1, scope: !7501, file: !654, line: 106, type: !118)
!7506 = !DILocation(line: 0, scope: !7501)
!7507 = !DILocation(line: 108, column: 6, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7501, file: !654, line: 108, column: 6)
!7509 = !DILocation(line: 108, column: 23, scope: !7508)
!7510 = !DILocation(line: 108, column: 6, scope: !7501)
!7511 = !DILocation(line: 112, column: 9, scope: !7501)
!7512 = !DILocation(line: 112, column: 29, scope: !7501)
!7513 = !DILocation(line: 112, column: 2, scope: !7501)
!7514 = !DILocation(line: 113, column: 1, scope: !7501)
!7515 = distinct !DISubprogram(name: "end_report", scope: !661, file: !661, line: 67, type: !2909, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7516 = !DILocation(line: 69, column: 6, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7515, file: !661, line: 69, column: 6)
!7518 = !DILocation(line: 0, scope: !7517)
!7519 = !DILocation(line: 74, column: 1, scope: !7515)
!7520 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !661, file: !661, line: 159, type: !2909, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7521 = !DILocation(line: 183, column: 1, scope: !7520)
!7522 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !661, file: !661, line: 185, type: !2909, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7523 = !DILocation(line: 196, column: 1, scope: !7522)
!7524 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !661, file: !661, line: 295, type: !2909, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7525 = !DILocation(line: 298, column: 34, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7527, file: !661, line: 297, column: 47)
!7527 = distinct !DILexicalBlock(scope: !7524, file: !661, line: 297, column: 6)
!7528 = !DILocation(line: 300, column: 2, scope: !7524)
!7529 = !DILocation(line: 301, column: 1, scope: !7524)
!7530 = distinct !DISubprogram(name: "ztest_test_skip", scope: !661, file: !661, line: 476, type: !2909, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7531 = !DILocation(line: 478, column: 10, scope: !7530)
!7532 = !DILocation(line: 478, column: 2, scope: !7530)
!7533 = !DILocation(line: 480, column: 15, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7530, file: !661, line: 478, column: 17)
!7535 = !DILocation(line: 481, column: 3, scope: !7534)
!7536 = !DILocation(line: 484, column: 15, scope: !7534)
!7537 = !DILocation(line: 485, column: 3, scope: !7534)
!7538 = !DILocation(line: 486, column: 3, scope: !7534)
!7539 = !DILocation(line: 489, column: 9, scope: !7534)
!7540 = !DILocation(line: 488, column: 3, scope: !7534)
!7541 = !DILocation(line: 490, column: 15, scope: !7534)
!7542 = !DILocation(line: 491, column: 3, scope: !7534)
!7543 = !DILocation(line: 493, column: 1, scope: !7530)
!7544 = distinct !DISubprogram(name: "test_finalize", scope: !661, file: !661, line: 432, type: !2909, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7545 = !DILocation(line: 435, column: 3, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !661, line: 434, column: 41)
!7547 = distinct !DILexicalBlock(scope: !7544, file: !661, line: 434, column: 6)
!7548 = !DILocation(line: 436, column: 18, scope: !7546)
!7549 = !DILocation(line: 436, column: 3, scope: !7546)
!7550 = !DILocation(line: 438, column: 1, scope: !7544)
!7551 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !661, file: !661, line: 274, type: !7552, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7554)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!118, !660}
!7554 = !{!7555}
!7555 = !DILocalVariable(name: "phase", arg: 1, scope: !7551, file: !661, line: 274, type: !660)
!7556 = !DILocation(line: 0, scope: !7551)
!7557 = !DILocation(line: 276, column: 2, scope: !7551)
!7558 = !DILocation(line: 0, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7551, file: !661, line: 276, column: 17)
!7560 = !DILocation(line: 292, column: 1, scope: !7551)
!7561 = distinct !DISubprogram(name: "k_thread_abort", scope: !4224, file: !4224, line: 188, type: !7562, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7566)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{null, !7564}
!7564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !7565)
!7565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!7566 = !{!7567}
!7567 = !DILocalVariable(name: "thread", arg: 1, scope: !7561, file: !4224, line: 188, type: !7564)
!7568 = !DILocation(line: 0, scope: !7561)
!7569 = !DILocation(line: 197, column: 2, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7561, file: !4224, line: 197, column: 2)
!7571 = !{i64 2151069945}
!7572 = !DILocation(line: 198, column: 2, scope: !7561)
!7573 = !DILocation(line: 199, column: 1, scope: !7561)
!7574 = distinct !DISubprogram(name: "k_current_get", scope: !804, file: !804, line: 530, type: !7575, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!7564}
!7577 = !DILocation(line: 535, column: 9, scope: !7574)
!7578 = !DILocation(line: 535, column: 2, scope: !7574)
!7579 = distinct !DISubprogram(name: "z_current_get", scope: !4224, file: !4224, line: 173, type: !7575, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7580 = !DILocation(line: 180, column: 2, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7579, file: !4224, line: 180, column: 2)
!7582 = !{i64 2151069877}
!7583 = !DILocation(line: 181, column: 9, scope: !7579)
!7584 = !DILocation(line: 181, column: 2, scope: !7579)
!7585 = distinct !DISubprogram(name: "ztest_test_fail", scope: !661, file: !661, line: 440, type: !2909, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7586 = !DILocation(line: 442, column: 10, scope: !7585)
!7587 = !DILocation(line: 442, column: 2, scope: !7585)
!7588 = !DILocation(line: 444, column: 15, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7585, file: !661, line: 442, column: 17)
!7590 = !DILocation(line: 445, column: 3, scope: !7589)
!7591 = !DILocation(line: 448, column: 15, scope: !7589)
!7592 = !DILocation(line: 449, column: 3, scope: !7589)
!7593 = !DILocation(line: 450, column: 3, scope: !7589)
!7594 = !DILocation(line: 453, column: 9, scope: !7589)
!7595 = !DILocation(line: 452, column: 3, scope: !7589)
!7596 = !DILocation(line: 454, column: 15, scope: !7589)
!7597 = !DILocation(line: 455, column: 3, scope: !7589)
!7598 = !DILocation(line: 457, column: 1, scope: !7585)
!7599 = distinct !DISubprogram(name: "ztest_test_pass", scope: !661, file: !661, line: 459, type: !2909, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7600 = !DILocation(line: 461, column: 10, scope: !7599)
!7601 = !DILocation(line: 461, column: 2, scope: !7599)
!7602 = !DILocation(line: 463, column: 15, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7599, file: !661, line: 461, column: 17)
!7604 = !DILocation(line: 465, column: 3, scope: !7603)
!7605 = !DILocation(line: 468, column: 9, scope: !7603)
!7606 = !DILocation(line: 467, column: 3, scope: !7603)
!7607 = !DILocation(line: 469, column: 15, scope: !7603)
!7608 = !DILocation(line: 470, column: 7, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7603, file: !661, line: 470, column: 7)
!7610 = !DILocation(line: 470, column: 13, scope: !7609)
!7611 = !DILocation(line: 470, column: 7, scope: !7603)
!7612 = !DILocation(line: 0, scope: !7603)
!7613 = !DILocation(line: 474, column: 1, scope: !7599)
!7614 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !661, file: !661, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7615)
!7615 = !{!7616}
!7616 = !DILocalVariable(name: "data", arg: 1, scope: !7614, file: !661, line: 495, type: !106)
!7617 = !DILocation(line: 0, scope: !7614)
!7618 = !DILocation(line: 498, column: 2, scope: !7614)
!7619 = !DILocation(line: 499, column: 1, scope: !7614)
!7620 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !7621, file: !7621, line: 24, type: !2909, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7621 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!7622 = !DILocation(line: 32, column: 2, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7620, file: !7621, line: 32, column: 2)
!7624 = !{i64 2151192152}
!7625 = !DILocation(line: 34, column: 1, scope: !7620)
!7626 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !661, file: !661, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7627)
!7627 = !{!7628}
!7628 = !DILocalVariable(name: "data", arg: 1, scope: !7626, file: !661, line: 501, type: !106)
!7629 = !DILocation(line: 0, scope: !7626)
!7630 = !DILocation(line: 504, column: 2, scope: !7626)
!7631 = !DILocation(line: 505, column: 1, scope: !7626)
!7632 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !7621, file: !7621, line: 47, type: !2909, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7633 = !DILocation(line: 55, column: 2, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7632, file: !7621, line: 55, column: 2)
!7635 = !{i64 2151192220}
!7636 = !DILocation(line: 57, column: 1, scope: !7632)
!7637 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !661, file: !661, line: 617, type: !7638, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7657)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{!7640, !118, !7640}
!7640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7641, size: 32)
!7641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !7642)
!7642 = !{!7643, !7644, !7645, !7646, !7647}
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !7641, file: !114, line: 98, baseType: !118, size: 32)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7641, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !7641, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !7641, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7641, file: !114, line: 104, baseType: !7648, size: 32, offset: 128)
!7648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7649)
!7649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7650, size: 32)
!7650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !7651)
!7651 = !{!7652, !7653, !7654, !7655, !7656}
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !7650, file: !114, line: 125, baseType: !152, size: 32)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !7650, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !7650, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !7650, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !7650, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!7657 = !{!7658, !7659, !7660}
!7658 = !DILocalVariable(name: "suite", arg: 1, scope: !7637, file: !661, line: 617, type: !118)
!7659 = !DILocalVariable(name: "prev", arg: 2, scope: !7637, file: !661, line: 617, type: !7640)
!7660 = !DILocalVariable(name: "test", scope: !7637, file: !661, line: 619, type: !7640)
!7661 = !DILocation(line: 0, scope: !7637)
!7662 = !DILocation(line: 619, column: 39, scope: !7637)
!7663 = !DILocation(line: 619, column: 33, scope: !7637)
!7664 = !DILocation(line: 621, column: 14, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !661, line: 621, column: 2)
!7666 = distinct !DILexicalBlock(scope: !7637, file: !661, line: 621, column: 2)
!7667 = !DILocation(line: 621, column: 2, scope: !7666)
!7668 = !DILocation(line: 622, column: 27, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !661, line: 622, column: 7)
!7670 = distinct !DILexicalBlock(scope: !7665, file: !661, line: 621, column: 51)
!7671 = !DILocation(line: 622, column: 7, scope: !7669)
!7672 = !DILocation(line: 622, column: 44, scope: !7669)
!7673 = !DILocation(line: 622, column: 7, scope: !7670)
!7674 = !DILocation(line: 621, column: 43, scope: !7665)
!7675 = distinct !{!7675, !7667, !7676}
!7676 = !DILocation(line: 625, column: 2, scope: !7666)
!7677 = !DILocation(line: 627, column: 1, scope: !7637)
!7678 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !661, file: !661, line: 764, type: !7502, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7679)
!7679 = !{!7680}
!7680 = !DILocalVariable(name: "name", arg: 1, scope: !7678, file: !661, line: 764, type: !118)
!7681 = !DILocation(line: 0, scope: !7678)
!7682 = !DILocation(line: 766, column: 36, scope: !7678)
!7683 = !DILocation(line: 766, column: 9, scope: !7678)
!7684 = !DILocation(line: 766, column: 2, scope: !7678)
!7685 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !661, file: !661, line: 604, type: !7686, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7705)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!7688, !118}
!7688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7689, size: 32)
!7689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !7690)
!7690 = !{!7691, !7692, !7693, !7694, !7695, !7696, !7697}
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7689, file: !114, line: 179, baseType: !117, size: 32)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !7689, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !7689, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !7689, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !7689, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !7689, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7689, file: !114, line: 197, baseType: !7698, size: 32, offset: 192)
!7698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7699)
!7699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7700, size: 32)
!7700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !7701)
!7701 = !{!7702, !7703, !7704}
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !7700, file: !114, line: 116, baseType: !152, size: 32)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !7700, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !7700, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!7705 = !{!7706, !7707}
!7706 = !DILocalVariable(name: "name", arg: 1, scope: !7685, file: !661, line: 604, type: !118)
!7707 = !DILocalVariable(name: "node", scope: !7685, file: !661, line: 606, type: !7688)
!7708 = !DILocation(line: 0, scope: !7685)
!7709 = !DILocation(line: 608, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7685, file: !661, line: 608, column: 2)
!7711 = !DILocation(line: 609, column: 26, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !661, line: 609, column: 7)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !661, line: 608, column: 87)
!7714 = distinct !DILexicalBlock(scope: !7710, file: !661, line: 608, column: 2)
!7715 = !DILocation(line: 609, column: 7, scope: !7712)
!7716 = !DILocation(line: 609, column: 32, scope: !7712)
!7717 = !DILocation(line: 609, column: 7, scope: !7713)
!7718 = !DILocation(line: 608, column: 79, scope: !7714)
!7719 = !DILocation(line: 608, column: 49, scope: !7714)
!7720 = distinct !{!7720, !7709, !7721}
!7721 = !DILocation(line: 612, column: 2, scope: !7710)
!7722 = !DILocation(line: 615, column: 1, scope: !7685)
!7723 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !661, file: !661, line: 652, type: !7724, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7726)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!107, !7688}
!7726 = !{!7727, !7728, !7729, !7730, !7731, !7732}
!7727 = !DILocalVariable(name: "suite", arg: 1, scope: !7723, file: !661, line: 652, type: !7688)
!7728 = !DILocalVariable(name: "test", scope: !7723, file: !661, line: 654, type: !7640)
!7729 = !DILocalVariable(name: "data", scope: !7723, file: !661, line: 655, type: !106)
!7730 = !DILocalVariable(name: "fail", scope: !7723, file: !661, line: 656, type: !107)
!7731 = !DILocalVariable(name: "tc_result", scope: !7723, file: !661, line: 657, type: !107)
!7732 = !DILocalVariable(name: "i", scope: !7733, file: !661, line: 692, type: !107)
!7733 = distinct !DILexicalBlock(scope: !7723, file: !661, line: 692, column: 2)
!7734 = !DILocation(line: 0, scope: !7723)
!7735 = !DILocation(line: 663, column: 12, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7723, file: !661, line: 663, column: 6)
!7737 = !DILocation(line: 663, column: 6, scope: !7723)
!7738 = !DILocation(line: 664, column: 15, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7736, file: !661, line: 663, column: 21)
!7740 = !DILocation(line: 665, column: 3, scope: !7739)
!7741 = !DILocation(line: 679, column: 2, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7723, file: !661, line: 679, column: 2)
!7743 = !DILocation(line: 680, column: 33, scope: !7723)
!7744 = !DILocation(line: 681, column: 14, scope: !7723)
!7745 = !DILocation(line: 682, column: 8, scope: !7723)
!7746 = !DILocation(line: 688, column: 55, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7723, file: !661, line: 688, column: 6)
!7748 = !DILocation(line: 688, column: 61, scope: !7747)
!7749 = !DILocation(line: 688, column: 6, scope: !7723)
!7750 = !DILocation(line: 689, column: 10, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7747, file: !661, line: 688, column: 70)
!7752 = !DILocation(line: 690, column: 2, scope: !7751)
!7753 = !DILocation(line: 0, scope: !7733)
!7754 = !DILocation(line: 727, column: 3, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !661, line: 692, column: 46)
!7756 = distinct !DILexicalBlock(scope: !7733, file: !661, line: 692, column: 2)
!7757 = !DILocation(line: 0, scope: !7755)
!7758 = !DILocation(line: 727, column: 48, scope: !7755)
!7759 = !DILocation(line: 727, column: 19, scope: !7755)
!7760 = !DILocation(line: 727, column: 61, scope: !7755)
!7761 = !DILocation(line: 728, column: 41, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !661, line: 728, column: 8)
!7763 = distinct !DILexicalBlock(scope: !7755, file: !661, line: 727, column: 71)
!7764 = !DILocation(line: 728, column: 53, scope: !7762)
!7765 = !DILocation(line: 728, column: 8, scope: !7762)
!7766 = !DILocation(line: 728, column: 8, scope: !7763)
!7767 = !DILocation(line: 729, column: 11, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7762, file: !661, line: 728, column: 60)
!7769 = !DILocation(line: 729, column: 18, scope: !7768)
!7770 = !DILocation(line: 729, column: 27, scope: !7768)
!7771 = !DILocation(line: 730, column: 17, scope: !7768)
!7772 = !DILocation(line: 731, column: 9, scope: !7768)
!7773 = !DILocation(line: 732, column: 12, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !661, line: 731, column: 31)
!7775 = distinct !DILexicalBlock(scope: !7768, file: !661, line: 731, column: 9)
!7776 = !DILocation(line: 732, column: 19, scope: !7774)
!7777 = !DILocation(line: 733, column: 5, scope: !7774)
!7778 = !DILocation(line: 734, column: 12, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !661, line: 733, column: 38)
!7780 = distinct !DILexicalBlock(scope: !7775, file: !661, line: 733, column: 16)
!7781 = !DILocation(line: 734, column: 19, scope: !7779)
!7782 = !DILocation(line: 735, column: 5, scope: !7779)
!7783 = !DILocation(line: 736, column: 12, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !661, line: 735, column: 38)
!7785 = distinct !DILexicalBlock(scope: !7780, file: !661, line: 735, column: 16)
!7786 = !DILocation(line: 736, column: 19, scope: !7784)
!7787 = !DILocation(line: 737, column: 5, scope: !7784)
!7788 = !DILocation(line: 0, scope: !7775)
!7789 = !DILocation(line: 739, column: 19, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7768, file: !661, line: 739, column: 9)
!7791 = !DILocation(line: 739, column: 9, scope: !7768)
!7792 = !DILocation(line: 744, column: 31, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7763, file: !661, line: 744, column: 8)
!7794 = !DILocation(line: 744, column: 43, scope: !7793)
!7795 = !DILocation(line: 744, column: 8, scope: !7763)
!7796 = distinct !{!7796, !7754, !7797}
!7797 = !DILocation(line: 747, column: 3, scope: !7755)
!7798 = !DILocation(line: 750, column: 7, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7755, file: !661, line: 750, column: 7)
!7800 = !DILocation(line: 750, column: 38, scope: !7799)
!7801 = !DILocation(line: 751, column: 16, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7799, file: !661, line: 750, column: 52)
!7803 = !DILocation(line: 752, column: 3, scope: !7802)
!7804 = !DILocation(line: 755, column: 2, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !661, line: 755, column: 2)
!7806 = distinct !DILexicalBlock(scope: !7723, file: !661, line: 755, column: 2)
!7807 = !DILocation(line: 0, scope: !7805)
!7808 = !DILocation(line: 756, column: 8, scope: !7723)
!7809 = !DILocation(line: 757, column: 13, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7723, file: !661, line: 757, column: 6)
!7811 = !DILocation(line: 757, column: 22, scope: !7810)
!7812 = !DILocation(line: 757, column: 6, scope: !7723)
!7813 = !DILocation(line: 758, column: 3, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7810, file: !661, line: 757, column: 31)
!7815 = !DILocation(line: 759, column: 2, scope: !7814)
!7816 = !DILocation(line: 762, column: 1, scope: !7723)
!7817 = distinct !DISubprogram(name: "run_test", scope: !661, file: !661, line: 521, type: !7818, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7820)
!7818 = !DISubroutineType(types: !7819)
!7819 = !{!107, !7688, !7640, !106}
!7820 = !{!7821, !7822, !7823, !7824}
!7821 = !DILocalVariable(name: "suite", arg: 1, scope: !7817, file: !661, line: 521, type: !7688)
!7822 = !DILocalVariable(name: "test", arg: 2, scope: !7817, file: !661, line: 521, type: !7640)
!7823 = !DILocalVariable(name: "data", arg: 3, scope: !7817, file: !661, line: 521, type: !106)
!7824 = !DILocalVariable(name: "ret", scope: !7817, file: !661, line: 523, type: !107)
!7825 = !DILocation(line: 0, scope: !7817)
!7826 = !DILocation(line: 528, column: 2, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 528, column: 2)
!7828 = !DILocation(line: 530, column: 8, scope: !7817)
!7829 = !DILocation(line: 536, column: 3, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !661, line: 535, column: 41)
!7831 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 535, column: 6)
!7832 = !DILocation(line: 539, column: 32, scope: !7830)
!7833 = !DILocation(line: 539, column: 39, scope: !7830)
!7834 = !DILocation(line: 541, column: 11, scope: !7830)
!7835 = !DILocation(line: 541, column: 26, scope: !7830)
!7836 = !DILocation(line: 537, column: 3, scope: !7830)
!7837 = !DILocation(line: 543, column: 3, scope: !7830)
!7838 = !DILocation(line: 544, column: 13, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7830, file: !661, line: 544, column: 7)
!7840 = !DILocation(line: 544, column: 18, scope: !7839)
!7841 = !DILocation(line: 544, column: 7, scope: !7830)
!7842 = !DILocation(line: 545, column: 4, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7839, file: !661, line: 544, column: 27)
!7844 = !DILocation(line: 546, column: 3, scope: !7843)
!7845 = !DILocation(line: 548, column: 7, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7830, file: !661, line: 548, column: 7)
!7847 = !DILocation(line: 548, column: 46, scope: !7846)
!7848 = !DILocation(line: 550, column: 4, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7846, file: !661, line: 549, column: 47)
!7850 = !DILocation(line: 551, column: 4, scope: !7849)
!7851 = !DILocation(line: 552, column: 3, scope: !7849)
!7852 = !DILocation(line: 564, column: 8, scope: !7817)
!7853 = !DILocation(line: 565, column: 13, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 565, column: 6)
!7855 = !DILocation(line: 565, column: 19, scope: !7854)
!7856 = !DILocation(line: 565, column: 6, scope: !7817)
!7857 = !DILocation(line: 566, column: 3, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7854, file: !661, line: 565, column: 28)
!7859 = !DILocation(line: 567, column: 2, scope: !7858)
!7860 = !DILocation(line: 568, column: 2, scope: !7817)
!7861 = !DILocation(line: 570, column: 2, scope: !7817)
!7862 = !DILocation(line: 571, column: 6, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 571, column: 6)
!7864 = !DILocation(line: 571, column: 28, scope: !7863)
!7865 = !DILocation(line: 571, column: 35, scope: !7863)
!7866 = !DILocation(line: 571, column: 20, scope: !7863)
!7867 = !DILocation(line: 571, column: 6, scope: !7817)
!7868 = !DILocation(line: 572, column: 34, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7863, file: !661, line: 571, column: 54)
!7870 = !DILocation(line: 573, column: 2, scope: !7869)
!7871 = !DILocation(line: 575, column: 8, scope: !7817)
!7872 = !DILocation(line: 583, column: 6, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 583, column: 6)
!7874 = !DILocation(line: 583, column: 39, scope: !7873)
!7875 = !DILocation(line: 585, column: 46, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7873, file: !661, line: 585, column: 13)
!7877 = !DILocation(line: 590, column: 10, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !661, line: 589, column: 54)
!7879 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 589, column: 6)
!7880 = !DILocation(line: 593, column: 8, scope: !7817)
!7881 = !DILocation(line: 594, column: 2, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 594, column: 2)
!7883 = !DILocation(line: 595, column: 10, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7817, file: !661, line: 595, column: 6)
!7885 = !DILocation(line: 595, column: 21, scope: !7884)
!7886 = !DILocation(line: 595, column: 24, scope: !7884)
!7887 = !DILocation(line: 595, column: 6, scope: !7817)
!7888 = !DILocation(line: 596, column: 15, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7884, file: !661, line: 595, column: 56)
!7890 = !DILocation(line: 597, column: 2, scope: !7889)
!7891 = !DILocation(line: 599, column: 2, scope: !7817)
!7892 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !828, file: !828, line: 98, type: !2909, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7893 = !DILocation(line: 100, column: 18, scope: !7892)
!7894 = !DILocation(line: 100, column: 16, scope: !7892)
!7895 = !DILocation(line: 101, column: 1, scope: !7892)
!7896 = distinct !DISubprogram(name: "k_thread_create", scope: !4224, file: !4224, line: 24, type: !7897, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7905)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{!7564, !7565, !7899, !185, !687, !106, !106, !106, !107, !152, !7901}
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7900, size: 32)
!7900 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !705)
!7901 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !7902)
!7902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !7903)
!7903 = !{!7904}
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !7902, file: !693, line: 66, baseType: !692, size: 64)
!7905 = !{!7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915}
!7906 = !DILocalVariable(name: "new_thread", arg: 1, scope: !7896, file: !4224, line: 24, type: !7565)
!7907 = !DILocalVariable(name: "stack", arg: 2, scope: !7896, file: !4224, line: 24, type: !7899)
!7908 = !DILocalVariable(name: "stack_size", arg: 3, scope: !7896, file: !4224, line: 24, type: !185)
!7909 = !DILocalVariable(name: "entry", arg: 4, scope: !7896, file: !4224, line: 24, type: !687)
!7910 = !DILocalVariable(name: "p1", arg: 5, scope: !7896, file: !4224, line: 24, type: !106)
!7911 = !DILocalVariable(name: "p2", arg: 6, scope: !7896, file: !4224, line: 24, type: !106)
!7912 = !DILocalVariable(name: "p3", arg: 7, scope: !7896, file: !4224, line: 24, type: !106)
!7913 = !DILocalVariable(name: "prio", arg: 8, scope: !7896, file: !4224, line: 24, type: !107)
!7914 = !DILocalVariable(name: "options", arg: 9, scope: !7896, file: !4224, line: 24, type: !152)
!7915 = !DILocalVariable(name: "delay", arg: 10, scope: !7896, file: !4224, line: 24, type: !7901)
!7916 = !DILocation(line: 0, scope: !7896)
!7917 = !DILocation(line: 49, column: 2, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7896, file: !4224, line: 49, column: 2)
!7919 = !{i64 2151069333}
!7920 = !DILocation(line: 50, column: 9, scope: !7896)
!7921 = !DILocation(line: 50, column: 2, scope: !7896)
!7922 = distinct !DISubprogram(name: "k_object_access_grant", scope: !7923, file: !7923, line: 24, type: !7924, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7926)
!7923 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!7924 = !DISubroutineType(types: !7925)
!7925 = !{null, !13, !7565}
!7926 = !{!7927, !7928}
!7927 = !DILocalVariable(name: "object", arg: 1, scope: !7922, file: !7923, line: 24, type: !13)
!7928 = !DILocalVariable(name: "thread", arg: 2, scope: !7922, file: !7923, line: 24, type: !7565)
!7929 = !DILocation(line: 0, scope: !7922)
!7930 = !DILocation(line: 34, column: 2, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7922, file: !7923, line: 34, column: 2)
!7932 = !{i64 2150585753}
!7933 = !DILocation(line: 36, column: 1, scope: !7922)
!7934 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4224, file: !4224, line: 391, type: !7935, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7937)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!107, !7564, !118}
!7937 = !{!7938, !7939}
!7938 = !DILocalVariable(name: "thread", arg: 1, scope: !7934, file: !4224, line: 391, type: !7564)
!7939 = !DILocalVariable(name: "str", arg: 2, scope: !7934, file: !4224, line: 391, type: !118)
!7940 = !DILocation(line: 0, scope: !7934)
!7941 = !DILocation(line: 400, column: 2, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7934, file: !4224, line: 400, column: 2)
!7943 = !{i64 2151070761}
!7944 = !DILocation(line: 401, column: 9, scope: !7934)
!7945 = !DILocation(line: 401, column: 2, scope: !7934)
!7946 = distinct !DISubprogram(name: "k_thread_start", scope: !4224, file: !4224, line: 205, type: !7562, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7947)
!7947 = !{!7948}
!7948 = !DILocalVariable(name: "thread", arg: 1, scope: !7946, file: !4224, line: 205, type: !7564)
!7949 = !DILocation(line: 0, scope: !7946)
!7950 = !DILocation(line: 214, column: 2, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7946, file: !4224, line: 214, column: 2)
!7952 = !{i64 2151070013}
!7953 = !DILocation(line: 215, column: 2, scope: !7946)
!7954 = !DILocation(line: 216, column: 1, scope: !7946)
!7955 = distinct !DISubprogram(name: "k_thread_join", scope: !4224, file: !4224, line: 74, type: !7956, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7958)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!107, !7565, !7901}
!7958 = !{!7959, !7960}
!7959 = !DILocalVariable(name: "thread", arg: 1, scope: !7955, file: !4224, line: 74, type: !7565)
!7960 = !DILocalVariable(name: "timeout", arg: 2, scope: !7955, file: !4224, line: 74, type: !7901)
!7961 = !DILocation(line: 0, scope: !7955)
!7962 = !DILocation(line: 83, column: 2, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7955, file: !4224, line: 83, column: 2)
!7964 = !{i64 2151069469}
!7965 = !DILocation(line: 84, column: 9, scope: !7955)
!7966 = !DILocation(line: 84, column: 2, scope: !7955)
!7967 = distinct !DISubprogram(name: "run_test_rules", scope: !661, file: !661, line: 207, type: !7968, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7970)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{null, !145, !7640, !106}
!7970 = !{!7971, !7972, !7973, !7974}
!7971 = !DILocalVariable(name: "is_before", arg: 1, scope: !7967, file: !661, line: 207, type: !145)
!7972 = !DILocalVariable(name: "test", arg: 2, scope: !7967, file: !661, line: 207, type: !7640)
!7973 = !DILocalVariable(name: "data", arg: 3, scope: !7967, file: !661, line: 207, type: !106)
!7974 = !DILocalVariable(name: "rule", scope: !7975, file: !661, line: 209, type: !7976)
!7975 = distinct !DILexicalBlock(scope: !7967, file: !661, line: 209, column: 2)
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7977, size: 32)
!7977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !7978)
!7978 = !{!7979, !7986}
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !7977, file: !114, line: 438, baseType: !7980, size: 32)
!7980 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !7981)
!7981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7982, size: 32)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{null, !7984, !106}
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 32)
!7985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7641)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !7977, file: !114, line: 439, baseType: !7980, size: 32, offset: 32)
!7987 = !DILocation(line: 0, scope: !7967)
!7988 = !DILocation(line: 0, scope: !7975)
!7989 = !DILocation(line: 209, column: 2, scope: !7975)
!7990 = !DILocation(line: 217, column: 1, scope: !7967)
!7991 = !DILocation(line: 211, column: 17, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7993, file: !661, line: 211, column: 7)
!7993 = distinct !DILexicalBlock(scope: !7994, file: !661, line: 210, column: 49)
!7994 = distinct !DILexicalBlock(scope: !7975, file: !661, line: 209, column: 2)
!7995 = !DILocation(line: 211, column: 26, scope: !7992)
!7996 = !DILocation(line: 211, column: 20, scope: !7992)
!7997 = !DILocation(line: 211, column: 7, scope: !7993)
!7998 = !DILocation(line: 213, column: 34, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7992, file: !661, line: 213, column: 14)
!8000 = !DILocation(line: 213, column: 28, scope: !7999)
!8001 = !DILocation(line: 213, column: 14, scope: !7992)
!8002 = !DILocation(line: 0, scope: !7992)
!8003 = !DILocation(line: 210, column: 41, scope: !7994)
!8004 = !DILocation(line: 210, column: 12, scope: !7994)
!8005 = distinct !{!8005, !7989, !8006}
!8006 = !DILocation(line: 216, column: 2, scope: !7975)
!8007 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !828, file: !828, line: 103, type: !2909, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8008)
!8008 = !{!8009}
!8009 = !DILocalVariable(name: "spend_cycle", scope: !8007, file: !828, line: 105, type: !152)
!8010 = !DILocation(line: 105, column: 25, scope: !8007)
!8011 = !DILocation(line: 105, column: 44, scope: !8007)
!8012 = !DILocation(line: 105, column: 42, scope: !8007)
!8013 = !DILocation(line: 0, scope: !8007)
!8014 = !DILocation(line: 107, column: 18, scope: !8007)
!8015 = !DILocation(line: 107, column: 16, scope: !8007)
!8016 = !DILocation(line: 108, column: 1, scope: !8007)
!8017 = distinct !DISubprogram(name: "cleanup_test", scope: !661, file: !661, line: 76, type: !8018, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8020)
!8018 = !DISubroutineType(types: !8019)
!8019 = !{!107, !7640}
!8020 = !{!8021, !8022, !8023}
!8021 = !DILocalVariable(name: "test", arg: 1, scope: !8017, file: !661, line: 76, type: !7640)
!8022 = !DILocalVariable(name: "ret", scope: !8017, file: !661, line: 78, type: !107)
!8023 = !DILocalVariable(name: "mock_status", scope: !8017, file: !661, line: 79, type: !107)
!8024 = !DILocation(line: 0, scope: !8017)
!8025 = !DILocation(line: 89, column: 3, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !661, line: 88, column: 41)
!8027 = distinct !DILexicalBlock(scope: !8017, file: !661, line: 88, column: 6)
!8028 = !DILocation(line: 103, column: 2, scope: !8017)
!8029 = distinct !DISubprogram(name: "get_final_test_result", scope: !661, file: !661, line: 236, type: !8030, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8032)
!8030 = !DISubroutineType(types: !8031)
!8031 = !{!107, !7984, !107}
!8032 = !{!8033, !8034, !8035, !8036}
!8033 = !DILocalVariable(name: "test", arg: 1, scope: !8029, file: !661, line: 236, type: !7984)
!8034 = !DILocalVariable(name: "ret", arg: 2, scope: !8029, file: !661, line: 236, type: !107)
!8035 = !DILocalVariable(name: "expected_result", scope: !8029, file: !661, line: 238, type: !682)
!8036 = !DILocalVariable(name: "expectation", scope: !8037, file: !661, line: 240, type: !8038)
!8037 = distinct !DILexicalBlock(scope: !8029, file: !661, line: 240, column: 2)
!8038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8039, size: 32)
!8039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8040)
!8040 = !{!8041, !8042, !8043}
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8039, file: !114, line: 48, baseType: !118, size: 32)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8039, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8039, file: !114, line: 50, baseType: !682, size: 32, offset: 64)
!8044 = !DILocation(line: 0, scope: !8029)
!8045 = !DILocation(line: 0, scope: !8037)
!8046 = !DILocation(line: 240, column: 2, scope: !8037)
!8047 = !DILocation(line: 243, column: 27, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !661, line: 243, column: 7)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !661, line: 242, column: 75)
!8050 = distinct !DILexicalBlock(scope: !8037, file: !661, line: 240, column: 2)
!8051 = !DILocation(line: 243, column: 44, scope: !8048)
!8052 = !DILocation(line: 243, column: 7, scope: !8048)
!8053 = !DILocation(line: 243, column: 50, scope: !8048)
!8054 = !DILocation(line: 243, column: 55, scope: !8048)
!8055 = !DILocation(line: 244, column: 27, scope: !8048)
!8056 = !DILocation(line: 244, column: 50, scope: !8048)
!8057 = !DILocation(line: 244, column: 7, scope: !8048)
!8058 = !DILocation(line: 244, column: 67, scope: !8048)
!8059 = !DILocation(line: 243, column: 7, scope: !8049)
!8060 = !DILocation(line: 242, column: 60, scope: !8050)
!8061 = !DILocation(line: 242, column: 19, scope: !8050)
!8062 = distinct !{!8062, !8046, !8063}
!8063 = !DILocation(line: 248, column: 2, scope: !8037)
!8064 = !DILocation(line: 245, column: 35, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8048, file: !661, line: 244, column: 73)
!8066 = !DILocation(line: 250, column: 6, scope: !8029)
!8067 = !DILocation(line: 255, column: 15, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !661, line: 250, column: 53)
!8069 = distinct !DILexicalBlock(scope: !8029, file: !661, line: 250, column: 6)
!8070 = !DILocation(line: 255, column: 10, scope: !8068)
!8071 = !DILocation(line: 255, column: 3, scope: !8068)
!8072 = !DILocation(line: 262, column: 15, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !661, line: 257, column: 53)
!8074 = distinct !DILexicalBlock(scope: !8029, file: !661, line: 257, column: 6)
!8075 = !DILocation(line: 262, column: 10, scope: !8073)
!8076 = !DILocation(line: 262, column: 3, scope: !8073)
!8077 = !DILocation(line: 266, column: 1, scope: !8029)
!8078 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !828, file: !828, line: 81, type: !8079, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!118, !107}
!8081 = !{!8082}
!8082 = !DILocalVariable(name: "result", arg: 1, scope: !8078, file: !828, line: 81, type: !107)
!8083 = !DILocation(line: 0, scope: !8078)
!8084 = !DILocation(line: 83, column: 2, scope: !8078)
!8085 = !DILocation(line: 0, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8078, file: !828, line: 83, column: 18)
!8087 = !DILocation(line: 93, column: 1, scope: !8078)
!8088 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !804, file: !804, line: 1675, type: !6090, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8089 = !DILocation(line: 1677, column: 9, scope: !8088)
!8090 = !DILocation(line: 1677, column: 2, scope: !8088)
!8091 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8092, file: !8092, line: 809, type: !8093, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8095)
!8092 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!152, !152}
!8095 = !{!8096}
!8096 = !DILocalVariable(name: "t", arg: 1, scope: !8091, file: !8092, line: 809, type: !152)
!8097 = !DILocation(line: 0, scope: !8091)
!8098 = !DILocation(line: 812, column: 17, scope: !8091)
!8099 = !DILocalVariable(name: "t", arg: 1, scope: !8100, file: !8092, line: 102, type: !695)
!8100 = distinct !DISubprogram(name: "z_tmcvt", scope: !8092, file: !8092, line: 102, type: !8101, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8103)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{!695, !695, !152, !152, !145, !145, !145, !145}
!8103 = !{!8099, !8104, !8105, !8106, !8107, !8108, !8109, !8110, !8111, !8112, !8113}
!8104 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8100, file: !8092, line: 102, type: !152)
!8105 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8100, file: !8092, line: 103, type: !152)
!8106 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8100, file: !8092, line: 103, type: !145)
!8107 = !DILocalVariable(name: "result32", arg: 5, scope: !8100, file: !8092, line: 104, type: !145)
!8108 = !DILocalVariable(name: "round_up", arg: 6, scope: !8100, file: !8092, line: 104, type: !145)
!8109 = !DILocalVariable(name: "round_off", arg: 7, scope: !8100, file: !8092, line: 105, type: !145)
!8110 = !DILocalVariable(name: "mul_ratio", scope: !8100, file: !8092, line: 107, type: !145)
!8111 = !DILocalVariable(name: "div_ratio", scope: !8100, file: !8092, line: 109, type: !145)
!8112 = !DILocalVariable(name: "off", scope: !8100, file: !8092, line: 116, type: !695)
!8113 = !DILocalVariable(name: "rdivisor", scope: !8114, file: !8092, line: 119, type: !152)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !8092, line: 118, column: 18)
!8115 = distinct !DILexicalBlock(scope: !8100, file: !8092, line: 118, column: 6)
!8116 = !DILocation(line: 0, scope: !8100, inlinedAt: !8117)
!8117 = distinct !DILocation(line: 812, column: 9, scope: !8091)
!8118 = !DILocation(line: 135, column: 5, scope: !8119, inlinedAt: !8117)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !8092, line: 134, column: 17)
!8120 = distinct !DILexicalBlock(scope: !8100, file: !8092, line: 134, column: 6)
!8121 = !DILocation(line: 136, column: 16, scope: !8122, inlinedAt: !8117)
!8122 = distinct !DILexicalBlock(scope: !8119, file: !8092, line: 136, column: 7)
!8123 = !DILocation(line: 812, column: 9, scope: !8091)
!8124 = !DILocation(line: 812, column: 2, scope: !8091)
!8125 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8126, file: !8126, line: 24, type: !6090, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8126 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8127 = !DILocation(line: 26, column: 9, scope: !8125)
!8128 = !DILocation(line: 26, column: 2, scope: !8125)
!8129 = distinct !DISubprogram(name: "test_cb", scope: !661, file: !661, line: 507, type: !690, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8130)
!8130 = !{!8131, !8132, !8133, !8134, !8135}
!8131 = !DILocalVariable(name: "a", arg: 1, scope: !8129, file: !661, line: 507, type: !106)
!8132 = !DILocalVariable(name: "b", arg: 2, scope: !8129, file: !661, line: 507, type: !106)
!8133 = !DILocalVariable(name: "c", arg: 3, scope: !8129, file: !661, line: 507, type: !106)
!8134 = !DILocalVariable(name: "suite", scope: !8129, file: !661, line: 509, type: !7688)
!8135 = !DILocalVariable(name: "test", scope: !8129, file: !661, line: 510, type: !7640)
!8136 = !DILocation(line: 0, scope: !8129)
!8137 = !DILocation(line: 510, column: 33, scope: !8129)
!8138 = !DILocation(line: 512, column: 14, scope: !8129)
!8139 = !DILocation(line: 513, column: 2, scope: !8129)
!8140 = !DILocation(line: 514, column: 13, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8129, file: !661, line: 514, column: 6)
!8142 = !DILocation(line: 514, column: 6, scope: !8141)
!8143 = !DILocation(line: 514, column: 6, scope: !8129)
!8144 = !DILocation(line: 515, column: 3, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8141, file: !661, line: 514, column: 21)
!8146 = !DILocation(line: 516, column: 2, scope: !8145)
!8147 = !DILocation(line: 517, column: 2, scope: !8129)
!8148 = !DILocation(line: 518, column: 14, scope: !8129)
!8149 = !DILocation(line: 519, column: 1, scope: !8129)
!8150 = distinct !DISubprogram(name: "run_test_functions", scope: !661, file: !661, line: 219, type: !8151, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8153)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{null, !7688, !7640, !106}
!8153 = !{!8154, !8155, !8156}
!8154 = !DILocalVariable(name: "suite", arg: 1, scope: !8150, file: !661, line: 219, type: !7688)
!8155 = !DILocalVariable(name: "test", arg: 2, scope: !8150, file: !661, line: 219, type: !7640)
!8156 = !DILocalVariable(name: "data", arg: 3, scope: !8150, file: !661, line: 220, type: !106)
!8157 = !DILocation(line: 0, scope: !8150)
!8158 = !DILocation(line: 222, column: 8, scope: !8150)
!8159 = !DILocation(line: 223, column: 8, scope: !8150)
!8160 = !DILocation(line: 223, column: 2, scope: !8150)
!8161 = !DILocation(line: 224, column: 1, scope: !8150)
!8162 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !661, file: !661, line: 929, type: !8163, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8165)
!8163 = !DISubroutineType(types: !8164)
!8164 = !{!107, !13}
!8165 = !{!8166, !8167, !8168}
!8166 = !DILocalVariable(name: "state", arg: 1, scope: !8162, file: !661, line: 929, type: !13)
!8167 = !DILocalVariable(name: "count", scope: !8162, file: !661, line: 931, type: !107)
!8168 = !DILocalVariable(name: "ptr", scope: !8169, file: !661, line: 954, type: !7688)
!8169 = distinct !DILexicalBlock(scope: !8162, file: !661, line: 954, column: 2)
!8170 = !DILocation(line: 0, scope: !8162)
!8171 = !DILocation(line: 933, column: 6, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8162, file: !661, line: 933, column: 6)
!8173 = !DILocation(line: 933, column: 18, scope: !8172)
!8174 = !DILocation(line: 933, column: 6, scope: !8162)
!8175 = !DILocation(line: 0, scope: !8169)
!8176 = !DILocation(line: 954, column: 2, scope: !8169)
!8177 = !DILocation(line: 956, column: 12, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !661, line: 955, column: 48)
!8179 = distinct !DILexicalBlock(scope: !8169, file: !661, line: 954, column: 2)
!8180 = !DILocation(line: 956, column: 9, scope: !8178)
!8181 = !DILocation(line: 960, column: 7, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !661, line: 960, column: 7)
!8183 = !DILocation(line: 960, column: 19, scope: !8182)
!8184 = !DILocation(line: 955, column: 41, scope: !8179)
!8185 = !DILocation(line: 960, column: 50, scope: !8182)
!8186 = distinct !{!8186, !8176, !8187}
!8187 = !DILocation(line: 964, column: 2, scope: !8169)
!8188 = !DILocation(line: 967, column: 2, scope: !8162)
!8189 = !DILocation(line: 969, column: 2, scope: !8162)
!8190 = !DILocation(line: 970, column: 1, scope: !8162)
!8191 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !661, file: !661, line: 907, type: !8192, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8194)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!107, !7688, !13}
!8194 = !{!8195, !8196, !8197, !8198, !8199, !8201}
!8195 = !DILocalVariable(name: "ptr", arg: 1, scope: !8191, file: !661, line: 907, type: !7688)
!8196 = !DILocalVariable(name: "state", arg: 2, scope: !8191, file: !661, line: 907, type: !13)
!8197 = !DILocalVariable(name: "stats", scope: !8191, file: !661, line: 909, type: !7699)
!8198 = !DILocalVariable(name: "count", scope: !8191, file: !661, line: 910, type: !107)
!8199 = !DILocalVariable(name: "i", scope: !8200, file: !661, line: 914, type: !107)
!8200 = distinct !DILexicalBlock(scope: !8191, file: !661, line: 914, column: 2)
!8201 = !DILocalVariable(name: "fail", scope: !8202, file: !661, line: 916, type: !107)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !661, line: 915, column: 47)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !661, line: 915, column: 7)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !661, line: 914, column: 47)
!8205 = distinct !DILexicalBlock(scope: !8200, file: !661, line: 914, column: 2)
!8206 = !DILocation(line: 0, scope: !8191)
!8207 = !DILocation(line: 909, column: 41, scope: !8191)
!8208 = !DILocation(line: 912, column: 2, scope: !8191)
!8209 = !DILocation(line: 0, scope: !8200)
!8210 = !DILocation(line: 915, column: 7, scope: !8203)
!8211 = !DILocation(line: 915, column: 7, scope: !8204)
!8212 = !DILocation(line: 916, column: 15, scope: !8202)
!8213 = !DILocation(line: 0, scope: !8202)
!8214 = !DILocation(line: 919, column: 20, scope: !8202)
!8215 = !DILocation(line: 920, column: 31, scope: !8202)
!8216 = !DILocation(line: 920, column: 25, scope: !8202)
!8217 = !DILocation(line: 921, column: 3, scope: !8202)
!8218 = !DILocation(line: 0, scope: !8203)
!8219 = !DILocation(line: 926, column: 2, scope: !8191)
!8220 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !661, file: !661, line: 886, type: !2909, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8221)
!8221 = !{!8222}
!8222 = !DILocalVariable(name: "ptr", scope: !8223, file: !661, line: 894, type: !7688)
!8223 = distinct !DILexicalBlock(scope: !8220, file: !661, line: 894, column: 2)
!8224 = !DILocation(line: 892, column: 2, scope: !8220)
!8225 = !DILocation(line: 0, scope: !8223)
!8226 = !DILocation(line: 894, column: 2, scope: !8223)
!8227 = !DILocation(line: 903, column: 2, scope: !8220)
!8228 = !DILocation(line: 905, column: 1, scope: !8220)
!8229 = !DILocation(line: 898, column: 3, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !661, line: 895, column: 48)
!8231 = distinct !DILexicalBlock(scope: !8223, file: !661, line: 894, column: 2)
!8232 = !DILocation(line: 895, column: 41, scope: !8231)
!8233 = !DILocation(line: 895, column: 11, scope: !8231)
!8234 = distinct !{!8234, !8226, !8235}
!8235 = !DILocation(line: 902, column: 2, scope: !8223)
!8236 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !661, file: !661, line: 852, type: !8237, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8239)
!8237 = !DISubroutineType(types: !8238)
!8238 = !{null, !7688}
!8239 = !{!8240, !8241, !8242, !8243}
!8240 = !DILocalVariable(name: "suite", arg: 1, scope: !8236, file: !661, line: 852, type: !7688)
!8241 = !DILocalVariable(name: "test", scope: !8236, file: !661, line: 854, type: !7640)
!8242 = !DILocalVariable(name: "tc_result", scope: !8236, file: !661, line: 855, type: !107)
!8243 = !DILocalVariable(name: "flush_frequency", scope: !8236, file: !661, line: 856, type: !107)
!8244 = !DILocation(line: 0, scope: !8236)
!8245 = !DILocation(line: 858, column: 2, scope: !8236)
!8246 = !DILocation(line: 860, column: 47, scope: !8236)
!8247 = !DILocation(line: 860, column: 18, scope: !8236)
!8248 = !DILocation(line: 860, column: 60, scope: !8236)
!8249 = !DILocation(line: 860, column: 2, scope: !8236)
!8250 = !DILocation(line: 861, column: 13, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !661, line: 861, column: 7)
!8252 = distinct !DILexicalBlock(scope: !8236, file: !661, line: 860, column: 70)
!8253 = !DILocation(line: 861, column: 20, scope: !8251)
!8254 = !DILocation(line: 861, column: 47, scope: !8251)
!8255 = !DILocation(line: 861, column: 31, scope: !8251)
!8256 = !DILocation(line: 861, column: 7, scope: !8252)
!8257 = !DILocation(line: 863, column: 27, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8251, file: !661, line: 863, column: 14)
!8259 = !DILocation(line: 863, column: 38, scope: !8258)
!8260 = !DILocation(line: 0, scope: !8251)
!8261 = !DILocation(line: 869, column: 3, scope: !8252)
!8262 = distinct !{!8262, !8249, !8263}
!8263 = !DILocation(line: 880, column: 2, scope: !8236)
!8264 = !DILocation(line: 881, column: 2, scope: !8236)
!8265 = !DILocation(line: 883, column: 1, scope: !8236)
!8266 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !661, file: !661, line: 801, type: !8237, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8267)
!8267 = !{!8268, !8269, !8270, !8271, !8272, !8273, !8274, !8275, !8276, !8277, !8278, !8279, !8280, !8281}
!8268 = !DILocalVariable(name: "suite", arg: 1, scope: !8266, file: !661, line: 801, type: !7688)
!8269 = !DILocalVariable(name: "distinct_pass", scope: !8266, file: !661, line: 803, type: !107)
!8270 = !DILocalVariable(name: "distinct_fail", scope: !8266, file: !661, line: 803, type: !107)
!8271 = !DILocalVariable(name: "distinct_skip", scope: !8266, file: !661, line: 803, type: !107)
!8272 = !DILocalVariable(name: "distinct_total", scope: !8266, file: !661, line: 803, type: !107)
!8273 = !DILocalVariable(name: "effective_total", scope: !8266, file: !661, line: 804, type: !107)
!8274 = !DILocalVariable(name: "expanded_pass", scope: !8266, file: !661, line: 805, type: !107)
!8275 = !DILocalVariable(name: "expanded_passrate", scope: !8266, file: !661, line: 805, type: !107)
!8276 = !DILocalVariable(name: "passrate_major", scope: !8266, file: !661, line: 806, type: !107)
!8277 = !DILocalVariable(name: "passrate_minor", scope: !8266, file: !661, line: 806, type: !107)
!8278 = !DILocalVariable(name: "passrate_tail", scope: !8266, file: !661, line: 806, type: !107)
!8279 = !DILocalVariable(name: "suite_result", scope: !8266, file: !661, line: 807, type: !107)
!8280 = !DILocalVariable(name: "test", scope: !8266, file: !661, line: 809, type: !7640)
!8281 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8266, file: !661, line: 810, type: !32)
!8282 = !DILocation(line: 0, scope: !8266)
!8283 = !DILocation(line: 813, column: 47, scope: !8266)
!8284 = !DILocation(line: 813, column: 18, scope: !8266)
!8285 = !DILocation(line: 813, column: 60, scope: !8266)
!8286 = !DILocation(line: 813, column: 2, scope: !8266)
!8287 = !DILocation(line: 814, column: 17, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8266, file: !661, line: 813, column: 70)
!8289 = !DILocation(line: 815, column: 36, scope: !8288)
!8290 = !DILocation(line: 815, column: 43, scope: !8288)
!8291 = !DILocation(line: 815, column: 27, scope: !8288)
!8292 = !DILocation(line: 816, column: 20, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8288, file: !661, line: 816, column: 7)
!8294 = !DILocation(line: 816, column: 47, scope: !8293)
!8295 = !DILocation(line: 816, column: 31, scope: !8293)
!8296 = !DILocation(line: 816, column: 7, scope: !8288)
!8297 = !DILocation(line: 817, column: 17, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8293, file: !661, line: 816, column: 58)
!8299 = !DILocation(line: 818, column: 3, scope: !8298)
!8300 = !DILocation(line: 818, column: 27, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8293, file: !661, line: 818, column: 14)
!8302 = !DILocation(line: 818, column: 38, scope: !8301)
!8303 = !DILocation(line: 818, column: 14, scope: !8293)
!8304 = !DILocation(line: 819, column: 17, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8301, file: !661, line: 818, column: 65)
!8306 = !DILocation(line: 820, column: 3, scope: !8305)
!8307 = !DILocation(line: 821, column: 17, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8301, file: !661, line: 820, column: 10)
!8309 = distinct !{!8309, !8286, !8310}
!8310 = !DILocation(line: 823, column: 2, scope: !8266)
!8311 = !DILocation(line: 825, column: 20, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8266, file: !661, line: 825, column: 6)
!8313 = !DILocation(line: 825, column: 6, scope: !8266)
!8314 = !DILocation(line: 829, column: 33, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8312, file: !661, line: 828, column: 9)
!8316 = !DILocation(line: 829, column: 18, scope: !8315)
!8317 = !DILocation(line: 830, column: 36, scope: !8315)
!8318 = !DILocation(line: 831, column: 33, scope: !8315)
!8319 = !DILocation(line: 832, column: 37, scope: !8315)
!8320 = !DILocation(line: 833, column: 38, scope: !8315)
!8321 = !DILocation(line: 834, column: 56, scope: !8315)
!8322 = !DILocation(line: 834, column: 39, scope: !8315)
!8323 = !DILocation(line: 834, column: 64, scope: !8315)
!8324 = !DILocation(line: 835, column: 78, scope: !8315)
!8325 = !DILocation(line: 835, column: 61, scope: !8315)
!8326 = !DILocation(line: 836, column: 21, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8315, file: !661, line: 836, column: 7)
!8328 = !DILocation(line: 836, column: 7, scope: !8315)
!8329 = !DILocation(line: 0, scope: !8312)
!8330 = !DILocation(line: 841, column: 2, scope: !8266)
!8331 = !DILocation(line: 849, column: 1, scope: !8266)
!8332 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !661, file: !661, line: 773, type: !8237, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8333)
!8333 = !{!8334, !8335}
!8334 = !DILocalVariable(name: "suite", arg: 1, scope: !8332, file: !661, line: 773, type: !7688)
!8335 = !DILocalVariable(name: "test", scope: !8332, file: !661, line: 775, type: !7640)
!8336 = !DILocation(line: 0, scope: !8332)
!8337 = !DILocation(line: 777, column: 47, scope: !8332)
!8338 = !DILocation(line: 777, column: 18, scope: !8332)
!8339 = !DILocation(line: 777, column: 60, scope: !8332)
!8340 = !DILocation(line: 777, column: 2, scope: !8332)
!8341 = !DILocation(line: 778, column: 9, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8332, file: !661, line: 777, column: 70)
!8343 = !DILocation(line: 778, column: 16, scope: !8342)
!8344 = !DILocation(line: 778, column: 26, scope: !8342)
!8345 = !DILocation(line: 779, column: 9, scope: !8342)
!8346 = !DILocation(line: 779, column: 16, scope: !8342)
!8347 = !DILocation(line: 779, column: 27, scope: !8342)
!8348 = !DILocation(line: 780, column: 9, scope: !8342)
!8349 = !DILocation(line: 780, column: 16, scope: !8342)
!8350 = !DILocation(line: 780, column: 27, scope: !8342)
!8351 = !DILocation(line: 781, column: 9, scope: !8342)
!8352 = !DILocation(line: 781, column: 16, scope: !8342)
!8353 = !DILocation(line: 781, column: 27, scope: !8342)
!8354 = !DILocation(line: 782, column: 9, scope: !8342)
!8355 = !DILocation(line: 782, column: 16, scope: !8342)
!8356 = !DILocation(line: 782, column: 34, scope: !8342)
!8357 = distinct !{!8357, !8340, !8358}
!8358 = !DILocation(line: 783, column: 2, scope: !8332)
!8359 = !DILocation(line: 784, column: 1, scope: !8332)
!8360 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !661, file: !661, line: 972, type: !2909, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8361)
!8361 = !{!8362, !8363, !8364}
!8362 = !DILocalVariable(name: "all_tests_run", scope: !8360, file: !661, line: 974, type: !145)
!8363 = !DILocalVariable(name: "suite", scope: !8360, file: !661, line: 975, type: !7688)
!8364 = !DILocalVariable(name: "test", scope: !8360, file: !661, line: 976, type: !7640)
!8365 = !DILocation(line: 0, scope: !8360)
!8366 = !DILocation(line: 979, column: 3, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !661, line: 979, column: 3)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !661, line: 978, column: 47)
!8369 = distinct !DILexicalBlock(scope: !8360, file: !661, line: 978, column: 6)
!8370 = !DILocation(line: 987, column: 3, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !661, line: 987, column: 3)
!8372 = !DILocation(line: 981, column: 15, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !661, line: 981, column: 8)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !661, line: 980, column: 17)
!8375 = distinct !DILexicalBlock(scope: !8367, file: !661, line: 979, column: 3)
!8376 = !DILocation(line: 981, column: 22, scope: !8373)
!8377 = !DILocation(line: 981, column: 32, scope: !8373)
!8378 = !DILocation(line: 981, column: 8, scope: !8374)
!8379 = !DILocation(line: 982, column: 59, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8373, file: !661, line: 981, column: 37)
!8381 = !DILocation(line: 982, column: 5, scope: !8380)
!8382 = !DILocation(line: 984, column: 4, scope: !8380)
!8383 = !DILocation(line: 980, column: 8, scope: !8375)
!8384 = !DILocation(line: 979, column: 52, scope: !8375)
!8385 = distinct !{!8385, !8366, !8386}
!8386 = !DILocation(line: 985, column: 3, scope: !8367)
!8387 = !DILocation(line: 988, column: 40, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !661, line: 987, column: 86)
!8389 = distinct !DILexicalBlock(scope: !8371, file: !661, line: 987, column: 3)
!8390 = !DILocation(line: 988, column: 12, scope: !8388)
!8391 = !DILocation(line: 989, column: 14, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8388, file: !661, line: 989, column: 8)
!8393 = !DILocation(line: 989, column: 8, scope: !8388)
!8394 = !DILocation(line: 992, column: 17, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8392, file: !661, line: 989, column: 23)
!8396 = !DILocation(line: 992, column: 29, scope: !8395)
!8397 = !DILocation(line: 990, column: 5, scope: !8395)
!8398 = !DILocation(line: 994, column: 4, scope: !8395)
!8399 = !DILocation(line: 987, column: 78, scope: !8389)
!8400 = !DILocation(line: 987, column: 49, scope: !8389)
!8401 = distinct !{!8401, !8370, !8402}
!8402 = !DILocation(line: 995, column: 3, scope: !8371)
!8403 = !DILocation(line: 997, column: 7, scope: !8368)
!8404 = !DILocation(line: 998, column: 16, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !661, line: 997, column: 23)
!8406 = distinct !DILexicalBlock(scope: !8368, file: !661, line: 997, column: 7)
!8407 = !DILocation(line: 999, column: 3, scope: !8405)
!8408 = !DILocation(line: 1002, column: 2, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8360, file: !661, line: 1002, column: 2)
!8410 = !DILocation(line: 1003, column: 13, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !661, line: 1003, column: 7)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !661, line: 1002, column: 85)
!8413 = distinct !DILexicalBlock(scope: !8409, file: !661, line: 1002, column: 2)
!8414 = !DILocation(line: 1003, column: 20, scope: !8411)
!8415 = !DILocation(line: 1003, column: 46, scope: !8411)
!8416 = !DILocation(line: 1003, column: 31, scope: !8411)
!8417 = !DILocation(line: 1003, column: 72, scope: !8411)
!8418 = !DILocation(line: 1003, column: 57, scope: !8411)
!8419 = !DILocation(line: 1004, column: 20, scope: !8411)
!8420 = !DILocation(line: 1003, column: 83, scope: !8411)
!8421 = !DILocation(line: 1003, column: 7, scope: !8412)
!8422 = !DILocation(line: 1005, column: 41, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8411, file: !661, line: 1004, column: 31)
!8424 = !DILocation(line: 1005, column: 64, scope: !8423)
!8425 = !DILocation(line: 1005, column: 4, scope: !8423)
!8426 = !DILocation(line: 1006, column: 16, scope: !8423)
!8427 = !DILocation(line: 1007, column: 3, scope: !8423)
!8428 = !DILocation(line: 1002, column: 77, scope: !8413)
!8429 = !DILocation(line: 1002, column: 48, scope: !8413)
!8430 = distinct !{!8430, !8408, !8431}
!8431 = !DILocation(line: 1008, column: 2, scope: !8409)
!8432 = !DILocation(line: 1009, column: 1, scope: !8360)
!8433 = distinct !DISubprogram(name: "ztest_run_all", scope: !661, file: !661, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8434)
!8434 = !{!8435}
!8435 = !DILocalVariable(name: "state", arg: 1, scope: !8433, file: !661, line: 1011, type: !13)
!8436 = !DILocation(line: 0, scope: !8433)
!8437 = !DILocation(line: 1011, column: 51, scope: !8433)
!8438 = !DILocation(line: 1011, column: 41, scope: !8433)
!8439 = !DILocation(line: 1011, column: 67, scope: !8433)
!8440 = distinct !DISubprogram(name: "test_main", scope: !661, file: !661, line: 1013, type: !2909, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8441 = !DILocation(line: 1015, column: 2, scope: !8440)
!8442 = !DILocation(line: 1017, column: 2, scope: !8440)
!8443 = !DILocation(line: 1018, column: 1, scope: !8440)
!8444 = distinct !DISubprogram(name: "main", scope: !661, file: !661, line: 1030, type: !2909, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8445 = !DILocation(line: 1046, column: 2, scope: !8444)
!8446 = !DILocation(line: 1047, column: 2, scope: !8444)
!8447 = !DILocation(line: 1071, column: 1, scope: !8444)
!8448 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !837, file: !837, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8449)
!8449 = !{!8450}
!8450 = !DILocalVariable(name: "state", arg: 1, scope: !8448, file: !837, line: 30, type: !13)
!8451 = !DILocation(line: 0, scope: !8448)
!8452 = !DILocation(line: 32, column: 2, scope: !8448)
!8453 = !DILocation(line: 33, column: 1, scope: !8448)
!8454 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !837, file: !837, line: 45, type: !844, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8455)
!8455 = !{!8456, !8457, !8458}
!8456 = !DILocalVariable(name: "state", arg: 1, scope: !8454, file: !837, line: 45, type: !13)
!8457 = !DILocalVariable(name: "suite", arg: 2, scope: !8454, file: !837, line: 45, type: !846)
!8458 = !DILocalVariable(name: "run_suite", scope: !8454, file: !837, line: 47, type: !145)
!8459 = !DILocation(line: 0, scope: !8454)
!8460 = !DILocation(line: 49, column: 13, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8454, file: !837, line: 49, column: 6)
!8462 = !DILocation(line: 49, column: 23, scope: !8461)
!8463 = !DILocation(line: 49, column: 6, scope: !8454)
!8464 = !DILocation(line: 50, column: 15, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8461, file: !837, line: 49, column: 32)
!8466 = !DILocation(line: 51, column: 2, scope: !8465)
!8467 = !DILocation(line: 53, column: 2, scope: !8454)
!8468 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !837, file: !837, line: 65, type: !865, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8469)
!8469 = !{!8470, !8471}
!8470 = !DILocalVariable(name: "suite", arg: 1, scope: !8468, file: !837, line: 65, type: !118)
!8471 = !DILocalVariable(name: "test", arg: 2, scope: !8468, file: !837, line: 65, type: !118)
!8472 = !DILocation(line: 0, scope: !8468)
!8473 = !DILocation(line: 67, column: 2, scope: !8468)
!8474 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !8475, file: !8475, line: 24, type: !8163, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8476)
!8475 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!8476 = !{!8477}
!8477 = !DILocalVariable(name: "state", arg: 1, scope: !8474, file: !8475, line: 24, type: !13)
!8478 = !DILocation(line: 0, scope: !8474)
!8479 = !DILocation(line: 32, column: 2, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8474, file: !8475, line: 32, column: 2)
!8481 = !{i64 2151164904}
!8482 = !DILocation(line: 33, column: 9, scope: !8474)
!8483 = !DILocation(line: 33, column: 2, scope: !8474)
!8484 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !837, file: !837, line: 20, type: !8485, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8487)
!8485 = !DISubroutineType(types: !8486)
!8486 = !{!118, !118}
!8487 = !{!8488}
!8488 = !DILocalVariable(name: "file", arg: 1, scope: !8484, file: !837, line: 20, type: !118)
!8489 = !DILocation(line: 0, scope: !8484)
!8490 = !DILocation(line: 22, column: 2, scope: !8484)
!8491 = distinct !DISubprogram(name: "uart_console_init", scope: !965, file: !965, line: 588, type: !909, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8492)
!8492 = !{!8493}
!8493 = !DILocalVariable(name: "arg", arg: 1, scope: !8491, file: !965, line: 588, type: !881)
!8494 = !DILocation(line: 0, scope: !8491)
!8495 = !DILocation(line: 593, column: 7, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !965, line: 593, column: 6)
!8497 = !DILocation(line: 593, column: 6, scope: !8491)
!8498 = !DILocation(line: 597, column: 2, scope: !8491)
!8499 = !DILocation(line: 599, column: 2, scope: !8491)
!8500 = !DILocation(line: 600, column: 1, scope: !8491)
!8501 = distinct !DISubprogram(name: "device_is_ready", scope: !8502, file: !8502, line: 47, type: !8503, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8505)
!8502 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!8503 = !DISubroutineType(types: !8504)
!8504 = !{!145, !881}
!8505 = !{!8506}
!8506 = !DILocalVariable(name: "dev", arg: 1, scope: !8501, file: !8502, line: 47, type: !881)
!8507 = !DILocation(line: 0, scope: !8501)
!8508 = !DILocation(line: 55, column: 2, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8501, file: !8502, line: 55, column: 2)
!8510 = !{i64 2151380612}
!8511 = !DILocation(line: 56, column: 9, scope: !8501)
!8512 = !DILocation(line: 56, column: 2, scope: !8501)
!8513 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !965, file: !965, line: 573, type: !2909, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !1949)
!8514 = !DILocation(line: 576, column: 2, scope: !8513)
!8515 = !DILocation(line: 579, column: 2, scope: !8513)
!8516 = !DILocation(line: 581, column: 1, scope: !8513)
!8517 = distinct !DISubprogram(name: "console_out", scope: !965, file: !965, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8518)
!8518 = !{!8519}
!8519 = !DILocalVariable(name: "c", arg: 1, scope: !8517, file: !965, line: 77, type: !107)
!8520 = !DILocation(line: 0, scope: !8517)
!8521 = !DILocation(line: 89, column: 11, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8517, file: !965, line: 89, column: 6)
!8523 = !DILocation(line: 89, column: 6, scope: !8517)
!8524 = !DILocation(line: 90, column: 3, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8522, file: !965, line: 89, column: 17)
!8526 = !DILocation(line: 91, column: 2, scope: !8525)
!8527 = !DILocation(line: 92, column: 34, scope: !8517)
!8528 = !DILocation(line: 92, column: 2, scope: !8517)
!8529 = !DILocation(line: 94, column: 2, scope: !8517)
!8530 = distinct !DISubprogram(name: "uart_poll_out", scope: !8531, file: !8531, line: 95, type: !905, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8532)
!8531 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/pytest")
!8532 = !{!8533, !8534}
!8533 = !DILocalVariable(name: "dev", arg: 1, scope: !8530, file: !8531, line: 95, type: !881)
!8534 = !DILocalVariable(name: "out_char", arg: 2, scope: !8530, file: !8531, line: 95, type: !196)
!8535 = !DILocation(line: 0, scope: !8530)
!8536 = !DILocation(line: 105, column: 2, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8530, file: !8531, line: 105, column: 2)
!8538 = !{i64 2151463857}
!8539 = !DILocation(line: 106, column: 2, scope: !8530)
!8540 = !DILocation(line: 107, column: 1, scope: !8530)
!8541 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !875, file: !875, line: 574, type: !905, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8542)
!8542 = !{!8543, !8544, !8545}
!8543 = !DILocalVariable(name: "dev", arg: 1, scope: !8541, file: !875, line: 574, type: !881)
!8544 = !DILocalVariable(name: "out_char", arg: 2, scope: !8541, file: !875, line: 575, type: !196)
!8545 = !DILocalVariable(name: "api", scope: !8541, file: !875, line: 577, type: !872)
!8546 = !DILocation(line: 0, scope: !8541)
!8547 = !DILocation(line: 578, column: 40, scope: !8541)
!8548 = !DILocation(line: 580, column: 7, scope: !8541)
!8549 = !DILocation(line: 580, column: 2, scope: !8541)
!8550 = !DILocation(line: 581, column: 1, scope: !8541)
!8551 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !884, file: !884, line: 730, type: !8503, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8552)
!8552 = !{!8553}
!8553 = !DILocalVariable(name: "dev", arg: 1, scope: !8551, file: !884, line: 730, type: !881)
!8554 = !DILocation(line: 0, scope: !8551)
!8555 = !DILocation(line: 732, column: 9, scope: !8551)
!8556 = !DILocation(line: 732, column: 2, scope: !8551)
!8557 = distinct !DISubprogram(name: "uart_register_input", scope: !965, file: !965, line: 560, type: !8558, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8605)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !8560, !8560, !8602}
!8560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8561, size: 32)
!8561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !804, line: 2208, size: 160, elements: !8562)
!8562 = !{!8563}
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8561, file: !804, line: 2209, baseType: !8564, size: 160)
!8564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !804, line: 1709, size: 160, elements: !8565)
!8565 = !{!8566, !8579, !8583}
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8564, file: !804, line: 1710, baseType: !8567, size: 64)
!8567 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8568, line: 46, baseType: !8569)
!8568 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8568, line: 41, size: 64, elements: !8570)
!8570 = !{!8571, !8578}
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8569, file: !8568, line: 42, baseType: !8572, size: 32)
!8572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8573, size: 32)
!8573 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8568, line: 39, baseType: !8574)
!8574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8568, line: 35, size: 32, elements: !8575)
!8575 = !{!8576}
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8574, file: !8568, line: 36, baseType: !8577, size: 32)
!8577 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8568, line: 32, baseType: !152)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8569, file: !8568, line: 43, baseType: !8572, size: 32, offset: 32)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8564, file: !804, line: 1711, baseType: !8580, size: 32, offset: 64)
!8580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !8581)
!8581 = !{!8582}
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8580, file: !818, line: 52, baseType: !22, size: 32)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8564, file: !804, line: 1712, baseType: !8584, size: 64, offset: 96)
!8584 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !8585)
!8585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !8586)
!8586 = !{!8587}
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8585, file: !752, line: 232, baseType: !8588, size: 64)
!8588 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !8589)
!8589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !8590)
!8590 = !{!8591, !8597}
!8591 = !DIDerivedType(tag: DW_TAG_member, scope: !8589, file: !726, line: 38, baseType: !8592, size: 32)
!8592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8589, file: !726, line: 38, size: 32, elements: !8593)
!8593 = !{!8594, !8596}
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8592, file: !726, line: 39, baseType: !8595, size: 32)
!8595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8589, size: 32)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8592, file: !726, line: 40, baseType: !8595, size: 32)
!8597 = !DIDerivedType(tag: DW_TAG_member, scope: !8589, file: !726, line: 42, baseType: !8598, size: 32, offset: 32)
!8598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8589, file: !726, line: 42, size: 32, elements: !8599)
!8599 = !{!8600, !8601}
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8598, file: !726, line: 43, baseType: !8595, size: 32)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8598, file: !726, line: 44, baseType: !8595, size: 32)
!8602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8603, size: 32)
!8603 = !DISubroutineType(types: !8604)
!8604 = !{!195, !193, !195}
!8605 = !{!8606, !8607, !8608}
!8606 = !DILocalVariable(name: "avail", arg: 1, scope: !8557, file: !965, line: 560, type: !8560)
!8607 = !DILocalVariable(name: "lines", arg: 2, scope: !8557, file: !965, line: 560, type: !8560)
!8608 = !DILocalVariable(name: "completion", arg: 3, scope: !8557, file: !965, line: 561, type: !8602)
!8609 = !DILocation(line: 0, scope: !8557)
!8610 = !DILocation(line: 566, column: 1, scope: !8557)
!8611 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1078, file: !1078, line: 40, type: !1000, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8612)
!8612 = !{!8613, !8614, !8615, !8616, !8618, !8619, !8624, !8625}
!8613 = !DILocalVariable(name: "port", arg: 1, scope: !8611, file: !1078, line: 40, type: !1002)
!8614 = !DILocalVariable(name: "pin", arg: 2, scope: !8611, file: !1078, line: 40, type: !1017)
!8615 = !DILocalVariable(name: "flags", arg: 3, scope: !8611, file: !1078, line: 41, type: !1018)
!8616 = !DILocalVariable(name: "config", scope: !8611, file: !1078, line: 43, type: !8617)
!8617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!8618 = !DILocalVariable(name: "base", scope: !8611, file: !1078, line: 44, type: !1115)
!8619 = !DILocalVariable(name: "pin_cfg", scope: !8611, file: !1078, line: 52, type: !8620)
!8620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !8621)
!8621 = !{!8622, !8623}
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8620, file: !1131, line: 60, baseType: !1130, size: 128)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8620, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!8624 = !DILocalVariable(name: "gpio_cfg_reg", scope: !8611, file: !1078, line: 54, type: !630)
!8625 = !DILocalVariable(name: "reg", scope: !8611, file: !1078, line: 56, type: !152)
!8626 = !DILocation(line: 0, scope: !8611)
!8627 = !DILocation(line: 43, column: 47, scope: !8611)
!8628 = !DILocation(line: 44, column: 28, scope: !8611)
!8629 = !DILocation(line: 46, column: 35, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8611, file: !1078, line: 46, column: 6)
!8631 = !DILocation(line: 50, column: 2, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !1078, line: 50, column: 2)
!8633 = distinct !DILexicalBlock(scope: !8611, file: !1078, line: 50, column: 2)
!8634 = !DILocation(line: 50, column: 2, scope: !8633)
!8635 = !DILocation(line: 50, column: 2, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8632, file: !1078, line: 50, column: 2)
!8637 = !DILocation(line: 52, column: 2, scope: !8611)
!8638 = !DILocation(line: 52, column: 25, scope: !8611)
!8639 = !DILocation(line: 55, column: 32, scope: !8611)
!8640 = !DILocation(line: 55, column: 47, scope: !8611)
!8641 = !DILocation(line: 55, column: 3, scope: !8611)
!8642 = !DILocation(line: 56, column: 17, scope: !8611)
!8643 = !DILocation(line: 66, column: 13, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8611, file: !1078, line: 66, column: 6)
!8645 = !DILocation(line: 66, column: 34, scope: !8644)
!8646 = !DILocation(line: 66, column: 6, scope: !8611)
!8647 = !DILocation(line: 70, column: 36, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8611, file: !1078, line: 70, column: 6)
!8649 = !DILocation(line: 70, column: 14, scope: !8648)
!8650 = !DILocation(line: 70, column: 30, scope: !8648)
!8651 = !DILocation(line: 72, column: 7, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8648, file: !1078, line: 70, column: 72)
!8653 = !DILocation(line: 73, column: 8, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !1078, line: 72, column: 38)
!8655 = distinct !DILexicalBlock(scope: !8652, file: !1078, line: 72, column: 7)
!8656 = !DILocation(line: 74, column: 3, scope: !8654)
!8657 = !DILocation(line: 75, column: 8, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8655, file: !1078, line: 74, column: 10)
!8659 = !DILocation(line: 79, column: 7, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8648, file: !1078, line: 77, column: 9)
!8661 = !DILocation(line: 0, scope: !8648)
!8662 = !DILocation(line: 84, column: 27, scope: !8611)
!8663 = !DILocation(line: 84, column: 26, scope: !8611)
!8664 = !DILocation(line: 84, column: 2, scope: !8611)
!8665 = !DILocation(line: 86, column: 10, scope: !8611)
!8666 = !DILocation(line: 86, column: 25, scope: !8611)
!8667 = !DILocation(line: 87, column: 2, scope: !8611)
!8668 = !DILocation(line: 98, column: 2, scope: !8611)
!8669 = !DILocation(line: 99, column: 2, scope: !8611)
!8670 = !DILocation(line: 101, column: 6, scope: !8611)
!8671 = !DILocation(line: 103, column: 14, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8673, file: !1078, line: 103, column: 7)
!8673 = distinct !DILexicalBlock(scope: !8674, file: !1078, line: 101, column: 35)
!8674 = distinct !DILexicalBlock(scope: !8611, file: !1078, line: 101, column: 6)
!8675 = !DILocation(line: 103, column: 38, scope: !8672)
!8676 = !DILocation(line: 103, column: 7, scope: !8673)
!8677 = !DILocation(line: 105, column: 21, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8672, file: !1078, line: 105, column: 14)
!8679 = !DILocation(line: 105, column: 46, scope: !8678)
!8680 = !DILocation(line: 105, column: 14, scope: !8672)
!8681 = !DILocation(line: 0, scope: !8672)
!8682 = !DILocation(line: 110, column: 3, scope: !8673)
!8683 = !DILocation(line: 111, column: 2, scope: !8673)
!8684 = !DILocation(line: 113, column: 3, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8674, file: !1078, line: 111, column: 9)
!8686 = !DILocation(line: 117, column: 1, scope: !8611)
!8687 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1078, file: !1078, line: 119, type: !8688, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8690)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{!107, !1002, !1403}
!8690 = !{!8691, !8692, !8693, !8694}
!8691 = !DILocalVariable(name: "port", arg: 1, scope: !8687, file: !1078, line: 119, type: !1002)
!8692 = !DILocalVariable(name: "value", arg: 2, scope: !8687, file: !1078, line: 119, type: !1403)
!8693 = !DILocalVariable(name: "config", scope: !8687, file: !1078, line: 121, type: !8617)
!8694 = !DILocalVariable(name: "base", scope: !8687, file: !1078, line: 122, type: !1115)
!8695 = !DILocation(line: 0, scope: !8687)
!8696 = !DILocation(line: 121, column: 47, scope: !8687)
!8697 = !DILocation(line: 122, column: 28, scope: !8687)
!8698 = !DILocation(line: 124, column: 11, scope: !8687)
!8699 = !DILocation(line: 124, column: 9, scope: !8687)
!8700 = !DILocation(line: 126, column: 2, scope: !8687)
!8701 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1078, file: !1078, line: 129, type: !1027, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8702)
!8702 = !{!8703, !8704, !8705, !8706, !8707}
!8703 = !DILocalVariable(name: "port", arg: 1, scope: !8701, file: !1078, line: 129, type: !1002)
!8704 = !DILocalVariable(name: "mask", arg: 2, scope: !8701, file: !1078, line: 130, type: !1029)
!8705 = !DILocalVariable(name: "value", arg: 3, scope: !8701, file: !1078, line: 131, type: !1024)
!8706 = !DILocalVariable(name: "config", scope: !8701, file: !1078, line: 133, type: !8617)
!8707 = !DILocalVariable(name: "base", scope: !8701, file: !1078, line: 134, type: !1115)
!8708 = !DILocation(line: 0, scope: !8701)
!8709 = !DILocation(line: 133, column: 47, scope: !8701)
!8710 = !DILocation(line: 134, column: 28, scope: !8701)
!8711 = !DILocation(line: 137, column: 5, scope: !8701)
!8712 = !DILocation(line: 137, column: 32, scope: !8701)
!8713 = !DILocation(line: 137, column: 30, scope: !8701)
!8714 = !DILocation(line: 137, column: 48, scope: !8701)
!8715 = !DILocation(line: 137, column: 39, scope: !8701)
!8716 = !DILocation(line: 136, column: 2, scope: !8701)
!8717 = !DILocation(line: 139, column: 2, scope: !8701)
!8718 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1078, file: !1078, line: 142, type: !1032, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8719)
!8719 = !{!8720, !8721, !8722, !8723}
!8720 = !DILocalVariable(name: "port", arg: 1, scope: !8718, file: !1078, line: 142, type: !1002)
!8721 = !DILocalVariable(name: "pins", arg: 2, scope: !8718, file: !1078, line: 143, type: !1029)
!8722 = !DILocalVariable(name: "config", scope: !8718, file: !1078, line: 145, type: !8617)
!8723 = !DILocalVariable(name: "base", scope: !8718, file: !1078, line: 146, type: !1115)
!8724 = !DILocation(line: 0, scope: !8718)
!8725 = !DILocation(line: 145, column: 47, scope: !8718)
!8726 = !DILocation(line: 146, column: 28, scope: !8718)
!8727 = !DILocation(line: 148, column: 29, scope: !8718)
!8728 = !DILocation(line: 148, column: 54, scope: !8718)
!8729 = !DILocation(line: 148, column: 2, scope: !8718)
!8730 = !DILocation(line: 150, column: 2, scope: !8718)
!8731 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1078, file: !1078, line: 153, type: !1032, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8732)
!8732 = !{!8733, !8734, !8735, !8736}
!8733 = !DILocalVariable(name: "port", arg: 1, scope: !8731, file: !1078, line: 153, type: !1002)
!8734 = !DILocalVariable(name: "pins", arg: 2, scope: !8731, file: !1078, line: 154, type: !1029)
!8735 = !DILocalVariable(name: "config", scope: !8731, file: !1078, line: 156, type: !8617)
!8736 = !DILocalVariable(name: "base", scope: !8731, file: !1078, line: 157, type: !1115)
!8737 = !DILocation(line: 0, scope: !8731)
!8738 = !DILocation(line: 156, column: 47, scope: !8731)
!8739 = !DILocation(line: 157, column: 28, scope: !8731)
!8740 = !DILocation(line: 159, column: 29, scope: !8731)
!8741 = !DILocation(line: 159, column: 56, scope: !8731)
!8742 = !DILocation(line: 159, column: 54, scope: !8731)
!8743 = !DILocation(line: 159, column: 2, scope: !8731)
!8744 = !DILocation(line: 161, column: 2, scope: !8731)
!8745 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1078, file: !1078, line: 164, type: !1032, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8746)
!8746 = !{!8747, !8748, !8749, !8750}
!8747 = !DILocalVariable(name: "port", arg: 1, scope: !8745, file: !1078, line: 164, type: !1002)
!8748 = !DILocalVariable(name: "pins", arg: 2, scope: !8745, file: !1078, line: 165, type: !1029)
!8749 = !DILocalVariable(name: "config", scope: !8745, file: !1078, line: 167, type: !8617)
!8750 = !DILocalVariable(name: "base", scope: !8745, file: !1078, line: 168, type: !1115)
!8751 = !DILocation(line: 0, scope: !8745)
!8752 = !DILocation(line: 167, column: 47, scope: !8745)
!8753 = !DILocation(line: 168, column: 28, scope: !8745)
!8754 = !DILocation(line: 170, column: 29, scope: !8745)
!8755 = !DILocation(line: 170, column: 54, scope: !8745)
!8756 = !DILocation(line: 170, column: 2, scope: !8745)
!8757 = !DILocation(line: 172, column: 2, scope: !8745)
!8758 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1078, file: !1078, line: 175, type: !1038, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8759)
!8759 = !{!8760, !8761, !8762, !8763, !8764, !8765, !8766, !8767, !8768, !8769}
!8760 = !DILocalVariable(name: "port", arg: 1, scope: !8758, file: !1078, line: 175, type: !1002)
!8761 = !DILocalVariable(name: "pin", arg: 2, scope: !8758, file: !1078, line: 176, type: !1017)
!8762 = !DILocalVariable(name: "mode", arg: 3, scope: !8758, file: !1078, line: 177, type: !977)
!8763 = !DILocalVariable(name: "trig", arg: 4, scope: !8758, file: !1078, line: 178, type: !983)
!8764 = !DILocalVariable(name: "config", scope: !8758, file: !1078, line: 180, type: !8617)
!8765 = !DILocalVariable(name: "base", scope: !8758, file: !1078, line: 181, type: !1115)
!8766 = !DILocalVariable(name: "icr_reg", scope: !8758, file: !1078, line: 182, type: !630)
!8767 = !DILocalVariable(name: "key", scope: !8758, file: !1078, line: 183, type: !32)
!8768 = !DILocalVariable(name: "icr_val", scope: !8758, file: !1078, line: 184, type: !152)
!8769 = !DILocalVariable(name: "shift", scope: !8758, file: !1078, line: 185, type: !195)
!8770 = !DILocation(line: 0, scope: !8758)
!8771 = !DILocation(line: 180, column: 47, scope: !8758)
!8772 = !DILocation(line: 181, column: 28, scope: !8758)
!8773 = !DILocation(line: 187, column: 14, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8758, file: !1078, line: 187, column: 6)
!8775 = !DILocation(line: 187, column: 21, scope: !8774)
!8776 = !DILocation(line: 187, column: 19, scope: !8774)
!8777 = !DILocation(line: 187, column: 31, scope: !8774)
!8778 = !DILocation(line: 188, column: 6, scope: !8774)
!8779 = !DILocation(line: 193, column: 12, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8758, file: !1078, line: 193, column: 6)
!8781 = !DILocation(line: 193, column: 35, scope: !8780)
!8782 = !DILocation(line: 195, column: 42, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8780, file: !1078, line: 195, column: 13)
!8784 = !DILocation(line: 198, column: 19, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8783, file: !1078, line: 198, column: 13)
!8786 = !DILocation(line: 198, column: 43, scope: !8785)
!8787 = !DILocation(line: 0, scope: !8780)
!8788 = !DILocation(line: 205, column: 10, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8758, file: !1078, line: 205, column: 6)
!8790 = !DILocation(line: 205, column: 6, scope: !8758)
!8791 = !DILocation(line: 206, column: 14, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8789, file: !1078, line: 205, column: 17)
!8793 = !DILocation(line: 207, column: 21, scope: !8792)
!8794 = !DILocation(line: 208, column: 2, scope: !8792)
!8795 = !DILocation(line: 208, column: 17, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8789, file: !1078, line: 208, column: 13)
!8797 = !DILocation(line: 208, column: 13, scope: !8789)
!8798 = !DILocation(line: 209, column: 14, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8796, file: !1078, line: 208, column: 24)
!8800 = !DILocation(line: 210, column: 21, scope: !8799)
!8801 = !DILocation(line: 0, scope: !8789)
!8802 = !DILocation(line: 55, column: 2, scope: !8803, inlinedAt: !8809)
!8803 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6124, file: !6124, line: 42, type: !8804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8806)
!8804 = !DISubroutineType(types: !8805)
!8805 = !{!32}
!8806 = !{!8807, !8808}
!8807 = !DILocalVariable(name: "key", scope: !8803, file: !6124, line: 44, type: !32)
!8808 = !DILocalVariable(name: "tmp", scope: !8803, file: !6124, line: 53, type: !32)
!8809 = distinct !DILocation(line: 215, column: 8, scope: !8758)
!8810 = !{i64 3056033}
!8811 = !DILocation(line: 0, scope: !8803, inlinedAt: !8809)
!8812 = !DILocation(line: 217, column: 14, scope: !8758)
!8813 = !DILocation(line: 217, column: 33, scope: !8758)
!8814 = !DILocation(line: 217, column: 30, scope: !8758)
!8815 = !DILocation(line: 217, column: 25, scope: !8758)
!8816 = !DILocation(line: 217, column: 23, scope: !8758)
!8817 = !DILocation(line: 217, column: 52, scope: !8758)
!8818 = !DILocation(line: 217, column: 41, scope: !8758)
!8819 = !DILocation(line: 217, column: 11, scope: !8758)
!8820 = !DILocation(line: 219, column: 2, scope: !8758)
!8821 = !DILocation(line: 220, column: 2, scope: !8758)
!8822 = !DILocation(line: 221, column: 2, scope: !8758)
!8823 = !DILocalVariable(name: "key", arg: 1, scope: !8824, file: !6124, line: 84, type: !32)
!8824 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8825)
!8825 = !{!8823}
!8826 = !DILocation(line: 0, scope: !8824, inlinedAt: !8827)
!8827 = distinct !DILocation(line: 223, column: 2, scope: !8758)
!8828 = !DILocation(line: 95, column: 2, scope: !8824, inlinedAt: !8827)
!8829 = !{i64 3056850}
!8830 = !DILocation(line: 225, column: 2, scope: !8758)
!8831 = !DILocation(line: 226, column: 1, scope: !8758)
!8832 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1078, file: !1078, line: 228, type: !1042, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8833)
!8833 = !{!8834, !8835, !8836, !8837}
!8834 = !DILocalVariable(name: "port", arg: 1, scope: !8832, file: !1078, line: 228, type: !1002)
!8835 = !DILocalVariable(name: "cb", arg: 2, scope: !8832, file: !1078, line: 229, type: !1044)
!8836 = !DILocalVariable(name: "set", arg: 3, scope: !8832, file: !1078, line: 229, type: !145)
!8837 = !DILocalVariable(name: "data", scope: !8832, file: !1078, line: 231, type: !8838)
!8838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!8839 = !DILocation(line: 0, scope: !8832)
!8840 = !DILocation(line: 231, column: 37, scope: !8832)
!8841 = !DILocation(line: 233, column: 37, scope: !8832)
!8842 = !DILocation(line: 233, column: 9, scope: !8832)
!8843 = !DILocation(line: 233, column: 2, scope: !8832)
!8844 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8845, file: !8845, line: 38, type: !8846, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8849)
!8845 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8846 = !DISubroutineType(types: !8847)
!8847 = !{!107, !8848, !1044, !145}
!8848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!8849 = !{!8850, !8851, !8852}
!8850 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8844, file: !8845, line: 38, type: !8848)
!8851 = !DILocalVariable(name: "callback", arg: 2, scope: !8844, file: !8845, line: 39, type: !1044)
!8852 = !DILocalVariable(name: "set", arg: 3, scope: !8844, file: !8845, line: 40, type: !145)
!8853 = !DILocation(line: 0, scope: !8844)
!8854 = !DILocation(line: 42, column: 2, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !8845, line: 42, column: 2)
!8856 = distinct !DILexicalBlock(scope: !8844, file: !8845, line: 42, column: 2)
!8857 = !DILocation(line: 42, column: 2, scope: !8856)
!8858 = !DILocation(line: 42, column: 2, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8855, file: !8845, line: 42, column: 2)
!8860 = !DILocation(line: 43, column: 2, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !8845, line: 43, column: 2)
!8862 = distinct !DILexicalBlock(scope: !8844, file: !8845, line: 43, column: 2)
!8863 = !DILocation(line: 43, column: 2, scope: !8862)
!8864 = !DILocation(line: 43, column: 2, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !8845, line: 43, column: 2)
!8866 = !DILocation(line: 45, column: 7, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8844, file: !8845, line: 45, column: 6)
!8868 = !DILocation(line: 45, column: 6, scope: !8844)
!8869 = !DILocation(line: 46, column: 56, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8871, file: !8845, line: 46, column: 7)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !8845, line: 45, column: 38)
!8872 = !DILocation(line: 46, column: 8, scope: !8870)
!8873 = !DILocation(line: 46, column: 7, scope: !8871)
!8874 = !DILocation(line: 51, column: 13, scope: !8867)
!8875 = !DILocation(line: 56, column: 43, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !8845, line: 55, column: 11)
!8877 = distinct !DILexicalBlock(scope: !8844, file: !8845, line: 55, column: 6)
!8878 = !DILocation(line: 56, column: 3, scope: !8876)
!8879 = !DILocation(line: 57, column: 2, scope: !8876)
!8880 = !DILocation(line: 60, column: 1, scope: !8844)
!8881 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1049, file: !1049, line: 261, type: !8882, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8884)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{!145, !8848}
!8884 = !{!8885}
!8885 = !DILocalVariable(name: "list", arg: 1, scope: !8881, file: !1049, line: 261, type: !8848)
!8886 = !DILocation(line: 0, scope: !8881)
!8887 = !DILocation(line: 261, column: 1, scope: !8881)
!8888 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1049, file: !1049, line: 417, type: !8889, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8891)
!8889 = !DISubroutineType(types: !8890)
!8890 = !{!145, !8848, !1104}
!8891 = !{!8892, !8893, !8894, !8895}
!8892 = !DILocalVariable(name: "list", arg: 1, scope: !8888, file: !1049, line: 417, type: !8848)
!8893 = !DILocalVariable(name: "node", arg: 2, scope: !8888, file: !1049, line: 417, type: !1104)
!8894 = !DILocalVariable(name: "prev", scope: !8888, file: !1049, line: 417, type: !1104)
!8895 = !DILocalVariable(name: "test", scope: !8888, file: !1049, line: 417, type: !1104)
!8896 = !DILocation(line: 0, scope: !8888)
!8897 = !DILocation(line: 417, column: 1, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8888, file: !1049, line: 417, column: 1)
!8899 = !DILocation(line: 417, column: 1, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8898, file: !1049, line: 417, column: 1)
!8901 = !DILocation(line: 417, column: 1, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8903, file: !1049, line: 417, column: 1)
!8903 = distinct !DILexicalBlock(scope: !8900, file: !1049, line: 417, column: 1)
!8904 = !DILocation(line: 417, column: 1, scope: !8903)
!8905 = distinct !{!8905, !8897, !8897}
!8906 = !DILocation(line: 417, column: 1, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8902, file: !1049, line: 417, column: 1)
!8908 = !DILocation(line: 417, column: 1, scope: !8888)
!8909 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1049, file: !1049, line: 298, type: !8910, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8912)
!8910 = !DISubroutineType(types: !8911)
!8911 = !{null, !8848, !1104}
!8912 = !{!8913, !8914}
!8913 = !DILocalVariable(name: "list", arg: 1, scope: !8909, file: !1049, line: 298, type: !8848)
!8914 = !DILocalVariable(name: "node", arg: 2, scope: !8909, file: !1049, line: 298, type: !1104)
!8915 = !DILocation(line: 0, scope: !8909)
!8916 = !DILocation(line: 298, column: 1, scope: !8909)
!8917 = !DILocation(line: 298, column: 1, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8909, file: !1049, line: 298, column: 1)
!8919 = !DILocation(line: 298, column: 1, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8918, file: !1049, line: 298, column: 1)
!8921 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1049, file: !1049, line: 231, type: !8922, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{!1104, !8848}
!8924 = !{!8925}
!8925 = !DILocalVariable(name: "list", arg: 1, scope: !8921, file: !1049, line: 231, type: !8848)
!8926 = !DILocation(line: 0, scope: !8921)
!8927 = !DILocation(line: 233, column: 15, scope: !8921)
!8928 = !DILocation(line: 233, column: 2, scope: !8921)
!8929 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1049, file: !1049, line: 209, type: !8930, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8932)
!8930 = !DISubroutineType(types: !8931)
!8931 = !{null, !1104, !1104}
!8932 = !{!8933, !8934}
!8933 = !DILocalVariable(name: "parent", arg: 1, scope: !8929, file: !1049, line: 209, type: !1104)
!8934 = !DILocalVariable(name: "child", arg: 2, scope: !8929, file: !1049, line: 209, type: !1104)
!8935 = !DILocation(line: 0, scope: !8929)
!8936 = !DILocation(line: 211, column: 10, scope: !8929)
!8937 = !DILocation(line: 211, column: 15, scope: !8929)
!8938 = !DILocation(line: 212, column: 1, scope: !8929)
!8939 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1049, file: !1049, line: 214, type: !8910, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8940)
!8940 = !{!8941, !8942}
!8941 = !DILocalVariable(name: "list", arg: 1, scope: !8939, file: !1049, line: 214, type: !8848)
!8942 = !DILocalVariable(name: "node", arg: 2, scope: !8939, file: !1049, line: 214, type: !1104)
!8943 = !DILocation(line: 0, scope: !8939)
!8944 = !DILocation(line: 216, column: 8, scope: !8939)
!8945 = !DILocation(line: 216, column: 13, scope: !8939)
!8946 = !DILocation(line: 217, column: 1, scope: !8939)
!8947 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1049, file: !1049, line: 243, type: !8922, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8948)
!8948 = !{!8949}
!8949 = !DILocalVariable(name: "list", arg: 1, scope: !8947, file: !1049, line: 243, type: !8848)
!8950 = !DILocation(line: 0, scope: !8947)
!8951 = !DILocation(line: 245, column: 15, scope: !8947)
!8952 = !DILocation(line: 245, column: 2, scope: !8947)
!8953 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1049, file: !1049, line: 219, type: !8910, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8954)
!8954 = !{!8955, !8956}
!8955 = !DILocalVariable(name: "list", arg: 1, scope: !8953, file: !1049, line: 219, type: !8848)
!8956 = !DILocalVariable(name: "node", arg: 2, scope: !8953, file: !1049, line: 219, type: !1104)
!8957 = !DILocation(line: 0, scope: !8953)
!8958 = !DILocation(line: 221, column: 8, scope: !8953)
!8959 = !DILocation(line: 221, column: 13, scope: !8953)
!8960 = !DILocation(line: 222, column: 1, scope: !8953)
!8961 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1049, file: !1049, line: 401, type: !8962, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8964)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{null, !8848, !1104, !1104}
!8964 = !{!8965, !8966, !8967}
!8965 = !DILocalVariable(name: "list", arg: 1, scope: !8961, file: !1049, line: 401, type: !8848)
!8966 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8961, file: !1049, line: 401, type: !1104)
!8967 = !DILocalVariable(name: "node", arg: 3, scope: !8961, file: !1049, line: 401, type: !1104)
!8968 = !DILocation(line: 0, scope: !8961)
!8969 = !DILocation(line: 401, column: 1, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8961, file: !1049, line: 401, column: 1)
!8971 = !DILocation(line: 0, scope: !8970)
!8972 = !DILocation(line: 401, column: 1, scope: !8961)
!8973 = !DILocation(line: 401, column: 1, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8970, file: !1049, line: 401, column: 1)
!8975 = !DILocation(line: 401, column: 1, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8974, file: !1049, line: 401, column: 1)
!8977 = !DILocation(line: 401, column: 1, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8976, file: !1049, line: 401, column: 1)
!8979 = !DILocation(line: 401, column: 1, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8970, file: !1049, line: 401, column: 1)
!8981 = !DILocation(line: 401, column: 1, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8980, file: !1049, line: 401, column: 1)
!8983 = !DILocation(line: 401, column: 1, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8982, file: !1049, line: 401, column: 1)
!8985 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1049, file: !1049, line: 285, type: !8986, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8988)
!8986 = !DISubroutineType(types: !8987)
!8987 = !{!1104, !1104}
!8988 = !{!8989}
!8989 = !DILocalVariable(name: "node", arg: 1, scope: !8985, file: !1049, line: 285, type: !1104)
!8990 = !DILocation(line: 0, scope: !8985)
!8991 = !DILocation(line: 285, column: 1, scope: !8985)
!8992 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1049, file: !1049, line: 274, type: !8986, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8993)
!8993 = !{!8994}
!8994 = !DILocalVariable(name: "node", arg: 1, scope: !8992, file: !1049, line: 274, type: !1104)
!8995 = !DILocation(line: 0, scope: !8992)
!8996 = !DILocation(line: 274, column: 1, scope: !8992)
!8997 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1049, file: !1049, line: 204, type: !8986, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8998)
!8998 = !{!8999}
!8999 = !DILocalVariable(name: "node", arg: 1, scope: !8997, file: !1049, line: 204, type: !1104)
!9000 = !DILocation(line: 0, scope: !8997)
!9001 = !DILocation(line: 206, column: 15, scope: !8997)
!9002 = !DILocation(line: 206, column: 2, scope: !8997)
!9003 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !989, file: !989, line: 131, type: !9004, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9006)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{!152, !1115}
!9006 = !{!9007}
!9007 = !DILocalVariable(name: "base", arg: 1, scope: !9003, file: !989, line: 131, type: !1115)
!9008 = !DILocation(line: 0, scope: !9003)
!9009 = !DILocation(line: 133, column: 12, scope: !9003)
!9010 = !DILocation(line: 133, column: 5, scope: !9003)
!9011 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !989, file: !989, line: 178, type: !9012, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9014)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{null, !1115, !152}
!9014 = !{!9015, !9016}
!9015 = !DILocalVariable(name: "base", arg: 1, scope: !9011, file: !989, line: 178, type: !1115)
!9016 = !DILocalVariable(name: "portVal", arg: 2, scope: !9011, file: !989, line: 178, type: !152)
!9017 = !DILocation(line: 0, scope: !9011)
!9018 = !DILocation(line: 180, column: 5, scope: !9011)
!9019 = !DILocation(line: 180, column: 23, scope: !9011)
!9020 = !DILocation(line: 181, column: 1, scope: !9011)
!9021 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1078, file: !1078, line: 236, type: !9022, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9024)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{null, !1002}
!9024 = !{!9025, !9026, !9027, !9028}
!9025 = !DILocalVariable(name: "port", arg: 1, scope: !9021, file: !1078, line: 236, type: !1002)
!9026 = !DILocalVariable(name: "config", scope: !9021, file: !1078, line: 238, type: !8617)
!9027 = !DILocalVariable(name: "data", scope: !9021, file: !1078, line: 239, type: !8838)
!9028 = !DILocalVariable(name: "int_status", scope: !9021, file: !1078, line: 240, type: !152)
!9029 = !DILocation(line: 0, scope: !9021)
!9030 = !DILocation(line: 238, column: 47, scope: !9021)
!9031 = !DILocation(line: 239, column: 37, scope: !9021)
!9032 = !DILocation(line: 242, column: 23, scope: !9021)
!9033 = !DILocation(line: 242, column: 29, scope: !9021)
!9034 = !DILocation(line: 244, column: 20, scope: !9021)
!9035 = !DILocation(line: 246, column: 29, scope: !9021)
!9036 = !DILocation(line: 246, column: 2, scope: !9021)
!9037 = !DILocation(line: 247, column: 1, scope: !9021)
!9038 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8845, file: !8845, line: 69, type: !9039, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9041)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{null, !8848, !1002, !152}
!9041 = !{!9042, !9043, !9044, !9045, !9046}
!9042 = !DILocalVariable(name: "list", arg: 1, scope: !9038, file: !8845, line: 69, type: !8848)
!9043 = !DILocalVariable(name: "port", arg: 2, scope: !9038, file: !8845, line: 70, type: !1002)
!9044 = !DILocalVariable(name: "pins", arg: 3, scope: !9038, file: !8845, line: 71, type: !152)
!9045 = !DILocalVariable(name: "cb", scope: !9038, file: !8845, line: 73, type: !1044)
!9046 = !DILocalVariable(name: "tmp", scope: !9038, file: !8845, line: 73, type: !1044)
!9047 = !DILocation(line: 0, scope: !9038)
!9048 = !DILocation(line: 75, column: 2, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9038, file: !8845, line: 75, column: 2)
!9050 = !DILocation(line: 0, scope: !9049)
!9051 = !DILocation(line: 76, column: 11, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !8845, line: 76, column: 7)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !8845, line: 75, column: 57)
!9054 = distinct !DILexicalBlock(scope: !9049, file: !8845, line: 75, column: 2)
!9055 = !DILocation(line: 76, column: 20, scope: !9052)
!9056 = !DILocation(line: 76, column: 7, scope: !9053)
!9057 = !DILocation(line: 77, column: 4, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9059, file: !8845, line: 77, column: 4)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !8845, line: 77, column: 4)
!9060 = distinct !DILexicalBlock(scope: !9052, file: !8845, line: 76, column: 28)
!9061 = !DILocation(line: 77, column: 4, scope: !9059)
!9062 = !DILocation(line: 77, column: 4, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9058, file: !8845, line: 77, column: 4)
!9064 = !DILocation(line: 78, column: 4, scope: !9060)
!9065 = !DILocation(line: 79, column: 3, scope: !9060)
!9066 = !DILocation(line: 75, column: 2, scope: !9054)
!9067 = !DILocation(line: 81, column: 1, scope: !9038)
!9068 = !DILocation(line: 0, scope: !1143)
!9069 = !DILocation(line: 318, column: 1, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !1143, file: !1078, line: 318, column: 1)
!9071 = !DILocation(line: 318, column: 1, scope: !1143)
!9072 = !DILocation(line: 318, column: 1, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !1143, file: !1078, line: 318, column: 1)
!9074 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1368, file: !1368, line: 114, type: !1266, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9075)
!9075 = !{!9076, !9077, !9078, !9079}
!9076 = !DILocalVariable(name: "dev", arg: 1, scope: !9074, file: !1368, line: 114, type: !1268)
!9077 = !DILocalVariable(name: "c", arg: 2, scope: !9074, file: !1368, line: 114, type: !902)
!9078 = !DILocalVariable(name: "uart", scope: !9074, file: !1368, line: 116, type: !1339)
!9079 = !DILocalVariable(name: "ret", scope: !9074, file: !1368, line: 117, type: !107)
!9080 = !DILocation(line: 0, scope: !9074)
!9081 = !DILocation(line: 116, column: 20, scope: !9074)
!9082 = !DILocation(line: 119, column: 6, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9074, file: !1368, line: 119, column: 6)
!9084 = !DILocation(line: 119, column: 6, scope: !9074)
!9085 = !DILocation(line: 120, column: 8, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9083, file: !1368, line: 119, column: 55)
!9087 = !DILocation(line: 120, column: 6, scope: !9086)
!9088 = !DILocation(line: 122, column: 7, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9086, file: !1368, line: 122, column: 7)
!9090 = !DILocation(line: 122, column: 7, scope: !9086)
!9091 = !DILocation(line: 123, column: 4, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9089, file: !1368, line: 122, column: 54)
!9093 = !DILocation(line: 124, column: 3, scope: !9092)
!9094 = !DILocation(line: 128, column: 2, scope: !9074)
!9095 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1368, file: !1368, line: 105, type: !1285, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9096)
!9096 = !{!9097, !9098, !9099}
!9097 = !DILocalVariable(name: "dev", arg: 1, scope: !9095, file: !1368, line: 105, type: !1268)
!9098 = !DILocalVariable(name: "c", arg: 2, scope: !9095, file: !1368, line: 105, type: !196)
!9099 = !DILocalVariable(name: "uart", scope: !9095, file: !1368, line: 107, type: !1339)
!9100 = !DILocation(line: 0, scope: !9095)
!9101 = !DILocation(line: 107, column: 20, scope: !9095)
!9102 = !DILocation(line: 109, column: 2, scope: !9095)
!9103 = !DILocation(line: 109, column: 10, scope: !9095)
!9104 = distinct !{!9104, !9102, !9105}
!9105 = !DILocation(line: 110, column: 2, scope: !9095)
!9106 = !DILocation(line: 111, column: 2, scope: !9095)
!9107 = !DILocation(line: 112, column: 1, scope: !9095)
!9108 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1368, file: !1368, line: 133, type: !1311, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9109)
!9109 = !{!9110, !9111, !9112, !9113, !9114}
!9110 = !DILocalVariable(name: "dev", arg: 1, scope: !9108, file: !1368, line: 133, type: !1268)
!9111 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9108, file: !1368, line: 134, type: !933)
!9112 = !DILocalVariable(name: "size", arg: 3, scope: !9108, file: !1368, line: 135, type: !107)
!9113 = !DILocalVariable(name: "uart", scope: !9108, file: !1368, line: 137, type: !1339)
!9114 = !DILocalVariable(name: "num_tx", scope: !9108, file: !1368, line: 138, type: !32)
!9115 = !DILocation(line: 0, scope: !9108)
!9116 = !DILocation(line: 137, column: 20, scope: !9108)
!9117 = !DILocation(line: 140, column: 26, scope: !9108)
!9118 = !DILocation(line: 140, column: 31, scope: !9108)
!9119 = !DILocation(line: 141, column: 6, scope: !9108)
!9120 = !DILocation(line: 140, column: 2, scope: !9108)
!9121 = !DILocation(line: 143, column: 22, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9108, file: !1368, line: 141, column: 51)
!9123 = !DILocation(line: 143, column: 3, scope: !9122)
!9124 = !DILocation(line: 144, column: 9, scope: !9122)
!9125 = distinct !{!9125, !9120, !9126}
!9126 = !DILocation(line: 145, column: 2, scope: !9108)
!9127 = !DILocation(line: 147, column: 2, scope: !9108)
!9128 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1368, file: !1368, line: 150, type: !1315, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9129)
!9129 = !{!9130, !9131, !9132, !9133, !9134}
!9130 = !DILocalVariable(name: "dev", arg: 1, scope: !9128, file: !1368, line: 150, type: !1268)
!9131 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9128, file: !1368, line: 150, type: !194)
!9132 = !DILocalVariable(name: "size", arg: 3, scope: !9128, file: !1368, line: 151, type: !939)
!9133 = !DILocalVariable(name: "uart", scope: !9128, file: !1368, line: 153, type: !1339)
!9134 = !DILocalVariable(name: "num_rx", scope: !9128, file: !1368, line: 154, type: !32)
!9135 = !DILocation(line: 0, scope: !9128)
!9136 = !DILocation(line: 153, column: 20, scope: !9128)
!9137 = !DILocation(line: 156, column: 26, scope: !9128)
!9138 = !DILocation(line: 156, column: 31, scope: !9128)
!9139 = !DILocation(line: 157, column: 6, scope: !9128)
!9140 = !DILocation(line: 156, column: 2, scope: !9128)
!9141 = !DILocation(line: 159, column: 23, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9128, file: !1368, line: 157, column: 51)
!9143 = !DILocation(line: 159, column: 17, scope: !9142)
!9144 = !DILocation(line: 159, column: 3, scope: !9142)
!9145 = !DILocation(line: 159, column: 21, scope: !9142)
!9146 = distinct !{!9146, !9140, !9147}
!9147 = !DILocation(line: 160, column: 2, scope: !9128)
!9148 = !DILocation(line: 162, column: 6, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9128, file: !1368, line: 162, column: 6)
!9150 = !DILocation(line: 162, column: 6, scope: !9128)
!9151 = !DILocation(line: 163, column: 3, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9149, file: !1368, line: 162, column: 53)
!9153 = !DILocation(line: 164, column: 2, scope: !9152)
!9154 = !DILocation(line: 166, column: 2, scope: !9128)
!9155 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1368, file: !1368, line: 169, type: !1319, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9156)
!9156 = !{!9157, !9158}
!9157 = !DILocalVariable(name: "dev", arg: 1, scope: !9155, file: !1368, line: 169, type: !1268)
!9158 = !DILocalVariable(name: "uart", scope: !9155, file: !1368, line: 171, type: !1339)
!9159 = !DILocation(line: 0, scope: !9155)
!9160 = !DILocation(line: 171, column: 20, scope: !9155)
!9161 = !DILocation(line: 173, column: 2, scope: !9155)
!9162 = !DILocation(line: 174, column: 1, scope: !9155)
!9163 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1368, file: !1368, line: 176, type: !1319, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9164)
!9164 = !{!9165, !9166}
!9165 = !DILocalVariable(name: "dev", arg: 1, scope: !9163, file: !1368, line: 176, type: !1268)
!9166 = !DILocalVariable(name: "uart", scope: !9163, file: !1368, line: 178, type: !1339)
!9167 = !DILocation(line: 0, scope: !9163)
!9168 = !DILocation(line: 178, column: 20, scope: !9163)
!9169 = !DILocation(line: 180, column: 2, scope: !9163)
!9170 = !DILocation(line: 181, column: 1, scope: !9163)
!9171 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1368, file: !1368, line: 183, type: !1289, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9172)
!9172 = !{!9173, !9174}
!9173 = !DILocalVariable(name: "dev", arg: 1, scope: !9171, file: !1368, line: 183, type: !1268)
!9174 = !DILocalVariable(name: "uart", scope: !9171, file: !1368, line: 185, type: !1339)
!9175 = !DILocation(line: 0, scope: !9171)
!9176 = !DILocation(line: 185, column: 20, scope: !9171)
!9177 = !DILocation(line: 187, column: 9, scope: !9171)
!9178 = !DILocation(line: 187, column: 2, scope: !9171)
!9179 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1368, file: !1368, line: 190, type: !1319, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9180)
!9180 = !{!9181, !9182}
!9181 = !DILocalVariable(name: "dev", arg: 1, scope: !9179, file: !1368, line: 190, type: !1268)
!9182 = !DILocalVariable(name: "uart", scope: !9179, file: !1368, line: 192, type: !1339)
!9183 = !DILocation(line: 0, scope: !9179)
!9184 = !DILocation(line: 192, column: 20, scope: !9179)
!9185 = !DILocation(line: 194, column: 2, scope: !9179)
!9186 = !DILocation(line: 195, column: 1, scope: !9179)
!9187 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1368, file: !1368, line: 197, type: !1319, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9188)
!9188 = !{!9189, !9190}
!9189 = !DILocalVariable(name: "dev", arg: 1, scope: !9187, file: !1368, line: 197, type: !1268)
!9190 = !DILocalVariable(name: "uart", scope: !9187, file: !1368, line: 199, type: !1339)
!9191 = !DILocation(line: 0, scope: !9187)
!9192 = !DILocation(line: 199, column: 20, scope: !9187)
!9193 = !DILocation(line: 201, column: 2, scope: !9187)
!9194 = !DILocation(line: 202, column: 1, scope: !9187)
!9195 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1368, file: !1368, line: 204, type: !1289, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9196)
!9196 = !{!9197, !9198}
!9197 = !DILocalVariable(name: "dev", arg: 1, scope: !9195, file: !1368, line: 204, type: !1268)
!9198 = !DILocalVariable(name: "uart", scope: !9195, file: !1368, line: 206, type: !1339)
!9199 = !DILocation(line: 0, scope: !9195)
!9200 = !DILocation(line: 206, column: 20, scope: !9195)
!9201 = !DILocation(line: 208, column: 9, scope: !9195)
!9202 = !DILocation(line: 208, column: 2, scope: !9195)
!9203 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1368, file: !1368, line: 211, type: !1319, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9204)
!9204 = !{!9205, !9206}
!9205 = !DILocalVariable(name: "dev", arg: 1, scope: !9203, file: !1368, line: 211, type: !1268)
!9206 = !DILocalVariable(name: "uart", scope: !9203, file: !1368, line: 213, type: !1339)
!9207 = !DILocation(line: 0, scope: !9203)
!9208 = !DILocation(line: 213, column: 20, scope: !9203)
!9209 = !DILocation(line: 215, column: 2, scope: !9203)
!9210 = !DILocation(line: 216, column: 2, scope: !9203)
!9211 = !DILocation(line: 217, column: 1, scope: !9203)
!9212 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1368, file: !1368, line: 219, type: !1319, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9213)
!9213 = !{!9214, !9215}
!9214 = !DILocalVariable(name: "dev", arg: 1, scope: !9212, file: !1368, line: 219, type: !1268)
!9215 = !DILocalVariable(name: "uart", scope: !9212, file: !1368, line: 221, type: !1339)
!9216 = !DILocation(line: 0, scope: !9212)
!9217 = !DILocation(line: 221, column: 20, scope: !9212)
!9218 = !DILocation(line: 223, column: 2, scope: !9212)
!9219 = !DILocation(line: 224, column: 2, scope: !9212)
!9220 = !DILocation(line: 225, column: 1, scope: !9212)
!9221 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1368, file: !1368, line: 227, type: !1289, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9222)
!9222 = !{!9223, !9224}
!9223 = !DILocalVariable(name: "dev", arg: 1, scope: !9221, file: !1368, line: 227, type: !1268)
!9224 = !DILocalVariable(name: "uart", scope: !9221, file: !1368, line: 229, type: !1339)
!9225 = !DILocation(line: 0, scope: !9221)
!9226 = !DILocation(line: 229, column: 20, scope: !9221)
!9227 = !DILocation(line: 231, column: 9, scope: !9221)
!9228 = !DILocation(line: 231, column: 53, scope: !9221)
!9229 = !DILocation(line: 232, column: 3, scope: !9221)
!9230 = !DILocation(line: 231, column: 2, scope: !9221)
!9231 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1368, file: !1368, line: 235, type: !1289, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9232)
!9232 = !{!9233}
!9233 = !DILocalVariable(name: "dev", arg: 1, scope: !9231, file: !1368, line: 235, type: !1268)
!9234 = !DILocation(line: 0, scope: !9231)
!9235 = !DILocation(line: 237, column: 2, scope: !9231)
!9236 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1368, file: !1368, line: 240, type: !1333, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9237)
!9237 = !{!9238, !9239, !9240, !9241}
!9238 = !DILocalVariable(name: "dev", arg: 1, scope: !9236, file: !1368, line: 240, type: !1268)
!9239 = !DILocalVariable(name: "cb", arg: 2, scope: !9236, file: !1368, line: 241, type: !1335)
!9240 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9236, file: !1368, line: 242, type: !106)
!9241 = !DILocalVariable(name: "data", scope: !9236, file: !1368, line: 244, type: !9242)
!9242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!9243 = !DILocation(line: 0, scope: !9236)
!9244 = !DILocation(line: 244, column: 36, scope: !9236)
!9245 = !DILocation(line: 246, column: 8, scope: !9236)
!9246 = !DILocation(line: 246, column: 17, scope: !9236)
!9247 = !DILocation(line: 247, column: 8, scope: !9236)
!9248 = !DILocation(line: 247, column: 16, scope: !9236)
!9249 = !DILocation(line: 248, column: 1, scope: !9236)
!9250 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1175, file: !1175, line: 392, type: !9251, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9253)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{!145, !1339, !152}
!9253 = !{!9254, !9255, !9256}
!9254 = !DILocalVariable(name: "base", arg: 1, scope: !9250, file: !1175, line: 392, type: !1339)
!9255 = !DILocalVariable(name: "flag", arg: 2, scope: !9250, file: !1175, line: 392, type: !152)
!9256 = !DILocalVariable(name: "uart_reg", scope: !9250, file: !1175, line: 393, type: !630)
!9257 = !DILocation(line: 0, scope: !9250)
!9258 = !DILocation(line: 395, column: 29, scope: !9250)
!9259 = !DILocation(line: 395, column: 52, scope: !9250)
!9260 = !DILocation(line: 395, column: 44, scope: !9250)
!9261 = !DILocation(line: 395, column: 16, scope: !9250)
!9262 = !DILocation(line: 396, column: 20, scope: !9250)
!9263 = !DILocation(line: 396, column: 39, scope: !9250)
!9264 = !DILocation(line: 396, column: 12, scope: !9250)
!9265 = !DILocation(line: 396, column: 5, scope: !9250)
!9266 = distinct !DISubprogram(name: "UART_Getchar", scope: !1175, file: !1175, line: 358, type: !9267, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9269)
!9267 = !DISubroutineType(types: !9268)
!9268 = !{!195, !1339}
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "base", arg: 1, scope: !9266, file: !1175, line: 358, type: !1339)
!9271 = !DILocation(line: 0, scope: !9266)
!9272 = !DILocation(line: 360, column: 22, scope: !9266)
!9273 = !DILocation(line: 360, column: 12, scope: !9266)
!9274 = !DILocation(line: 360, column: 5, scope: !9266)
!9275 = distinct !DISubprogram(name: "UART_Putchar", scope: !1175, file: !1175, line: 346, type: !9276, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9278)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{null, !1339, !195}
!9278 = !{!9279, !9280}
!9279 = !DILocalVariable(name: "base", arg: 1, scope: !9275, file: !1175, line: 346, type: !1339)
!9280 = !DILocalVariable(name: "data", arg: 2, scope: !9275, file: !1175, line: 346, type: !195)
!9281 = !DILocation(line: 0, scope: !9275)
!9282 = !DILocation(line: 348, column: 28, scope: !9275)
!9283 = !DILocation(line: 348, column: 5, scope: !9275)
!9284 = !DILocation(line: 348, column: 25, scope: !9275)
!9285 = !DILocation(line: 349, column: 1, scope: !9275)
!9286 = !DILocation(line: 0, scope: !1441)
!9287 = !DILocation(line: 339, column: 1, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !1441, file: !1368, line: 339, column: 1)
!9289 = !DILocation(line: 339, column: 1, scope: !1441)
!9290 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1368, file: !1368, line: 260, type: !1319, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9291)
!9291 = !{!9292, !9293}
!9292 = !DILocalVariable(name: "dev", arg: 1, scope: !9290, file: !1368, line: 260, type: !1268)
!9293 = !DILocalVariable(name: "data", scope: !9290, file: !1368, line: 262, type: !9242)
!9294 = !DILocation(line: 0, scope: !9290)
!9295 = !DILocation(line: 262, column: 36, scope: !9290)
!9296 = !DILocation(line: 264, column: 12, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9290, file: !1368, line: 264, column: 6)
!9298 = !DILocation(line: 264, column: 6, scope: !9297)
!9299 = !DILocation(line: 264, column: 6, scope: !9290)
!9300 = !DILocation(line: 265, column: 29, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9297, file: !1368, line: 264, column: 22)
!9302 = !DILocation(line: 265, column: 3, scope: !9301)
!9303 = !DILocation(line: 266, column: 2, scope: !9301)
!9304 = !DILocation(line: 267, column: 1, scope: !9290)
!9305 = distinct !DISubprogram(name: "uart_imx_init", scope: !1368, file: !1368, line: 56, type: !1289, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9306)
!9306 = !{!9307, !9308, !9309, !9310, !9311, !9312}
!9307 = !DILocalVariable(name: "dev", arg: 1, scope: !9305, file: !1368, line: 56, type: !1268)
!9308 = !DILocalVariable(name: "uart", scope: !9305, file: !1368, line: 58, type: !1339)
!9309 = !DILocalVariable(name: "config", scope: !9305, file: !1368, line: 59, type: !1365)
!9310 = !DILocalVariable(name: "old_level", scope: !9305, file: !1368, line: 60, type: !32)
!9311 = !DILocalVariable(name: "err", scope: !9305, file: !1368, line: 61, type: !107)
!9312 = !DILocalVariable(name: "initConfig", scope: !9305, file: !1368, line: 67, type: !9313)
!9313 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1175, line: 57, baseType: !9314)
!9314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1175, line: 49, size: 192, elements: !9315)
!9315 = !{!9316, !9317, !9318, !9319, !9320, !9321}
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9314, file: !1175, line: 51, baseType: !152, size: 32)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9314, file: !1175, line: 52, baseType: !152, size: 32, offset: 32)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9314, file: !1175, line: 53, baseType: !152, size: 32, offset: 64)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9314, file: !1175, line: 54, baseType: !152, size: 32, offset: 96)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9314, file: !1175, line: 55, baseType: !152, size: 32, offset: 128)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9314, file: !1175, line: 56, baseType: !152, size: 32, offset: 160)
!9322 = !DILocation(line: 0, scope: !9305)
!9323 = !DILocation(line: 58, column: 20, scope: !9305)
!9324 = !DILocation(line: 55, column: 2, scope: !9325, inlinedAt: !9329)
!9325 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6124, file: !6124, line: 42, type: !8804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9326)
!9326 = !{!9327, !9328}
!9327 = !DILocalVariable(name: "key", scope: !9325, file: !6124, line: 44, type: !32)
!9328 = !DILocalVariable(name: "tmp", scope: !9325, file: !6124, line: 53, type: !32)
!9329 = distinct !DILocation(line: 64, column: 14, scope: !9305)
!9330 = !{i64 2850604}
!9331 = !DILocation(line: 0, scope: !9325, inlinedAt: !9329)
!9332 = !DILocation(line: 67, column: 2, scope: !9305)
!9333 = !DILocation(line: 67, column: 21, scope: !9305)
!9334 = !DILocation(line: 67, column: 34, scope: !9305)
!9335 = !DILocation(line: 68, column: 23, scope: !9305)
!9336 = !DILocation(line: 75, column: 36, scope: !9305)
!9337 = !DILocation(line: 75, column: 8, scope: !9305)
!9338 = !DILocation(line: 76, column: 6, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9305, file: !1368, line: 76, column: 6)
!9340 = !DILocation(line: 76, column: 6, scope: !9305)
!9341 = !DILocation(line: 81, column: 26, scope: !9305)
!9342 = !DILocation(line: 81, column: 24, scope: !9305)
!9343 = !DILocation(line: 83, column: 2, scope: !9305)
!9344 = !DILocation(line: 86, column: 2, scope: !9305)
!9345 = !DILocation(line: 87, column: 2, scope: !9305)
!9346 = !DILocalVariable(name: "key", arg: 1, scope: !9347, file: !6124, line: 84, type: !32)
!9347 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9348)
!9348 = !{!9346}
!9349 = !DILocation(line: 0, scope: !9347, inlinedAt: !9350)
!9350 = distinct !DILocation(line: 90, column: 2, scope: !9305)
!9351 = !DILocation(line: 95, column: 2, scope: !9347, inlinedAt: !9350)
!9352 = !{i64 2851421}
!9353 = !DILocation(line: 93, column: 10, scope: !9305)
!9354 = !DILocation(line: 93, column: 2, scope: !9305)
!9355 = !DILocation(line: 97, column: 34, scope: !9305)
!9356 = !DILocation(line: 97, column: 26, scope: !9305)
!9357 = !DILocation(line: 97, column: 2, scope: !9305)
!9358 = !DILocation(line: 100, column: 2, scope: !9305)
!9359 = !DILocation(line: 102, column: 2, scope: !9305)
!9360 = !DILocation(line: 103, column: 1, scope: !9305)
!9361 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1377, file: !1377, line: 342, type: !9362, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9364)
!9362 = !DISubroutineType(types: !9363)
!9363 = !{!107, !1374, !195}
!9364 = !{!9365, !9366, !9367, !9368}
!9365 = !DILocalVariable(name: "config", arg: 1, scope: !9361, file: !1377, line: 342, type: !1374)
!9366 = !DILocalVariable(name: "id", arg: 2, scope: !9361, file: !1377, line: 343, type: !195)
!9367 = !DILocalVariable(name: "ret", scope: !9361, file: !1377, line: 345, type: !107)
!9368 = !DILocalVariable(name: "state", scope: !9361, file: !1377, line: 346, type: !1380)
!9369 = !DILocation(line: 0, scope: !9361)
!9370 = !DILocation(line: 346, column: 2, scope: !9361)
!9371 = !DILocation(line: 348, column: 8, scope: !9361)
!9372 = !DILocation(line: 349, column: 10, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9361, file: !1377, line: 349, column: 6)
!9374 = !DILocation(line: 349, column: 6, scope: !9361)
!9375 = !DILocation(line: 353, column: 44, scope: !9361)
!9376 = !DILocation(line: 353, column: 9, scope: !9361)
!9377 = !DILocation(line: 353, column: 2, scope: !9361)
!9378 = !DILocation(line: 354, column: 1, scope: !9361)
!9379 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1175, file: !1175, line: 444, type: !9276, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9380)
!9380 = !{!9381, !9382}
!9381 = !DILocalVariable(name: "base", arg: 1, scope: !9379, file: !1175, line: 444, type: !1339)
!9382 = !DILocalVariable(name: "watermark", arg: 2, scope: !9379, file: !1175, line: 444, type: !195)
!9383 = !DILocation(line: 0, scope: !9379)
!9384 = !DILocation(line: 447, column: 28, scope: !9379)
!9385 = !DILocation(line: 447, column: 48, scope: !9379)
!9386 = !DILocation(line: 447, column: 72, scope: !9379)
!9387 = !DILocation(line: 447, column: 25, scope: !9379)
!9388 = !DILocation(line: 448, column: 1, scope: !9379)
!9389 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1175, file: !1175, line: 458, type: !9276, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9390)
!9390 = !{!9391, !9392}
!9391 = !DILocalVariable(name: "base", arg: 1, scope: !9389, file: !1175, line: 458, type: !1339)
!9392 = !DILocalVariable(name: "watermark", arg: 2, scope: !9389, file: !1175, line: 458, type: !195)
!9393 = !DILocation(line: 0, scope: !9389)
!9394 = !DILocation(line: 461, column: 28, scope: !9389)
!9395 = !DILocation(line: 461, column: 48, scope: !9389)
!9396 = !DILocation(line: 461, column: 72, scope: !9389)
!9397 = !DILocation(line: 461, column: 25, scope: !9389)
!9398 = !DILocation(line: 462, column: 1, scope: !9389)
!9399 = distinct !DISubprogram(name: "UART_Enable", scope: !1175, file: !1175, line: 242, type: !9400, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9402)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{null, !1339}
!9402 = !{!9403}
!9403 = !DILocalVariable(name: "base", arg: 1, scope: !9399, file: !1175, line: 242, type: !1339)
!9404 = !DILocation(line: 0, scope: !9399)
!9405 = !DILocation(line: 244, column: 5, scope: !9399)
!9406 = !DILocation(line: 244, column: 25, scope: !9399)
!9407 = !DILocation(line: 245, column: 1, scope: !9399)
!9408 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1377, file: !1377, line: 316, type: !9409, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9411)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!107, !1374, !1380}
!9411 = !{!9412, !9413, !9414}
!9412 = !DILocalVariable(name: "config", arg: 1, scope: !9408, file: !1377, line: 317, type: !1374)
!9413 = !DILocalVariable(name: "state", arg: 2, scope: !9408, file: !1377, line: 318, type: !1380)
!9414 = !DILocalVariable(name: "reg", scope: !9408, file: !1377, line: 320, type: !22)
!9415 = !DILocation(line: 0, scope: !9408)
!9416 = !DILocation(line: 329, column: 39, scope: !9408)
!9417 = !DILocation(line: 329, column: 52, scope: !9408)
!9418 = !DILocation(line: 329, column: 9, scope: !9408)
!9419 = !DILocation(line: 329, column: 2, scope: !9408)
!9420 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1677, file: !1677, line: 270, type: !1683, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9421)
!9421 = !{!9422}
!9422 = !DILocalVariable(name: "dev", arg: 1, scope: !9420, file: !1677, line: 270, type: !1685)
!9423 = !DILocation(line: 0, scope: !9420)
!9424 = !DILocation(line: 274, column: 2, scope: !9420)
!9425 = !DILocation(line: 275, column: 12, scope: !9420)
!9426 = !DILocation(line: 276, column: 15, scope: !9420)
!9427 = !DILocation(line: 277, column: 16, scope: !9420)
!9428 = !DILocation(line: 278, column: 15, scope: !9420)
!9429 = !DILocation(line: 279, column: 16, scope: !9420)
!9430 = !DILocation(line: 282, column: 2, scope: !9420)
!9431 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6043, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9432)
!9432 = !{!9433, !9434}
!9433 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9431, file: !1598, line: 1814, type: !2342)
!9434 = !DILocalVariable(name: "priority", arg: 2, scope: !9431, file: !1598, line: 1814, type: !152)
!9435 = !DILocation(line: 0, scope: !9431)
!9436 = !DILocation(line: 1822, column: 46, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !1598, line: 1821, column: 3)
!9438 = distinct !DILexicalBlock(scope: !9431, file: !1598, line: 1816, column: 7)
!9439 = !DILocation(line: 1824, column: 1, scope: !9431)
!9440 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1677, file: !1677, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9441)
!9441 = !{!9442, !9443}
!9442 = !DILocalVariable(name: "arg", arg: 1, scope: !9440, file: !1677, line: 118, type: !106)
!9443 = !DILocalVariable(name: "dticks", scope: !9440, file: !1677, line: 121, type: !152)
!9444 = !DILocation(line: 0, scope: !9440)
!9445 = !DILocation(line: 124, column: 2, scope: !9440)
!9446 = !DILocation(line: 129, column: 17, scope: !9440)
!9447 = !DILocation(line: 129, column: 14, scope: !9440)
!9448 = !DILocation(line: 130, column: 15, scope: !9440)
!9449 = !DILocation(line: 145, column: 27, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !1677, line: 132, column: 16)
!9451 = distinct !DILexicalBlock(scope: !9440, file: !1677, line: 132, column: 6)
!9452 = !DILocation(line: 145, column: 25, scope: !9450)
!9453 = !DILocation(line: 145, column: 45, scope: !9450)
!9454 = !DILocation(line: 146, column: 30, scope: !9450)
!9455 = !DILocation(line: 146, column: 20, scope: !9450)
!9456 = !DILocation(line: 147, column: 3, scope: !9450)
!9457 = !DILocation(line: 151, column: 2, scope: !9440)
!9458 = !DILocation(line: 152, column: 1, scope: !9440)
!9459 = distinct !DISubprogram(name: "elapsed", scope: !1677, file: !1677, line: 85, type: !6090, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9460)
!9460 = !{!9461, !9462, !9463}
!9461 = !DILocalVariable(name: "val1", scope: !9459, file: !1677, line: 87, type: !152)
!9462 = !DILocalVariable(name: "ctrl", scope: !9459, file: !1677, line: 88, type: !152)
!9463 = !DILocalVariable(name: "val2", scope: !9459, file: !1677, line: 89, type: !152)
!9464 = !DILocation(line: 87, column: 27, scope: !9459)
!9465 = !DILocation(line: 0, scope: !9459)
!9466 = !DILocation(line: 88, column: 27, scope: !9459)
!9467 = !DILocation(line: 89, column: 27, scope: !9459)
!9468 = !DILocation(line: 105, column: 12, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9459, file: !1677, line: 105, column: 6)
!9470 = !DILocation(line: 106, column: 6, scope: !9469)
!9471 = !DILocation(line: 107, column: 16, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9469, file: !1677, line: 106, column: 24)
!9473 = !DILocation(line: 111, column: 18, scope: !9472)
!9474 = !DILocation(line: 112, column: 2, scope: !9472)
!9475 = !DILocation(line: 114, column: 20, scope: !9459)
!9476 = !DILocation(line: 114, column: 30, scope: !9459)
!9477 = !DILocation(line: 114, column: 28, scope: !9459)
!9478 = !DILocation(line: 114, column: 2, scope: !9459)
!9479 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1677, file: !1677, line: 154, type: !9480, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9482)
!9480 = !DISubroutineType(types: !9481)
!9481 = !{null, !1149, !145}
!9482 = !{!9483, !9484, !9485, !9486, !9487, !9488, !9489, !9494, !9495}
!9483 = !DILocalVariable(name: "ticks", arg: 1, scope: !9479, file: !1677, line: 154, type: !1149)
!9484 = !DILocalVariable(name: "idle", arg: 2, scope: !9479, file: !1677, line: 154, type: !145)
!9485 = !DILocalVariable(name: "delay", scope: !9479, file: !1677, line: 169, type: !152)
!9486 = !DILocalVariable(name: "val1", scope: !9479, file: !1677, line: 170, type: !152)
!9487 = !DILocalVariable(name: "val2", scope: !9479, file: !1677, line: 170, type: !152)
!9488 = !DILocalVariable(name: "last_load_", scope: !9479, file: !1677, line: 171, type: !152)
!9489 = !DILocalVariable(name: "key", scope: !9479, file: !1677, line: 176, type: !9490)
!9490 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !818, line: 106, baseType: !9491)
!9491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !818, line: 32, size: 32, elements: !9492)
!9492 = !{!9493}
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9491, file: !818, line: 33, baseType: !107, size: 32)
!9494 = !DILocalVariable(name: "pending", scope: !9479, file: !1677, line: 178, type: !152)
!9495 = !DILocalVariable(name: "unannounced", scope: !9479, file: !1677, line: 185, type: !152)
!9496 = !DILocation(line: 0, scope: !9479)
!9497 = !DILocation(line: 162, column: 49, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9479, file: !1677, line: 162, column: 6)
!9499 = !DILocation(line: 163, column: 17, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9498, file: !1677, line: 162, column: 78)
!9501 = !DILocation(line: 164, column: 13, scope: !9500)
!9502 = !DILocation(line: 165, column: 3, scope: !9500)
!9503 = !DILocation(line: 171, column: 24, scope: !9479)
!9504 = !DILocation(line: 173, column: 10, scope: !9479)
!9505 = !DILocation(line: 174, column: 10, scope: !9479)
!9506 = !DILocalVariable(name: "l", arg: 1, scope: !9507, file: !818, line: 136, type: !9510)
!9507 = distinct !DISubprogram(name: "k_spin_lock", scope: !818, file: !818, line: 136, type: !9508, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9511)
!9508 = !DISubroutineType(types: !9509)
!9509 = !{!9490, !9510}
!9510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!9511 = !{!9506, !9512}
!9512 = !DILocalVariable(name: "k", scope: !9507, file: !818, line: 139, type: !9490)
!9513 = !DILocation(line: 0, scope: !9507, inlinedAt: !9514)
!9514 = distinct !DILocation(line: 176, column: 25, scope: !9479)
!9515 = !DILocation(line: 55, column: 2, scope: !9516, inlinedAt: !9520)
!9516 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6124, file: !6124, line: 42, type: !8804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9517)
!9517 = !{!9518, !9519}
!9518 = !DILocalVariable(name: "key", scope: !9516, file: !6124, line: 44, type: !32)
!9519 = !DILocalVariable(name: "tmp", scope: !9516, file: !6124, line: 53, type: !32)
!9520 = distinct !DILocation(line: 145, column: 10, scope: !9507, inlinedAt: !9514)
!9521 = !{i64 2953342}
!9522 = !DILocation(line: 0, scope: !9516, inlinedAt: !9520)
!9523 = !DILocation(line: 148, column: 2, scope: !9524, inlinedAt: !9514)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !818, line: 148, column: 2)
!9525 = distinct !DILexicalBlock(scope: !9507, file: !818, line: 148, column: 2)
!9526 = !DILocation(line: 148, column: 2, scope: !9525, inlinedAt: !9514)
!9527 = !DILocation(line: 148, column: 2, scope: !9528, inlinedAt: !9514)
!9528 = distinct !DILexicalBlock(scope: !9524, file: !818, line: 148, column: 2)
!9529 = !DILocation(line: 160, column: 2, scope: !9507, inlinedAt: !9514)
!9530 = !DILocation(line: 178, column: 21, scope: !9479)
!9531 = !DILocation(line: 180, column: 18, scope: !9479)
!9532 = !DILocation(line: 182, column: 14, scope: !9479)
!9533 = !DILocation(line: 183, column: 15, scope: !9479)
!9534 = !DILocation(line: 185, column: 39, scope: !9479)
!9535 = !DILocation(line: 185, column: 37, scope: !9479)
!9536 = !DILocation(line: 187, column: 27, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9479, file: !1677, line: 187, column: 6)
!9538 = !DILocation(line: 187, column: 6, scope: !9479)
!9539 = !DILocation(line: 202, column: 27, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9537, file: !1677, line: 195, column: 9)
!9541 = !DILocation(line: 202, column: 48, scope: !9540)
!9542 = !DILocation(line: 203, column: 9, scope: !9540)
!9543 = !DILocation(line: 204, column: 11, scope: !9540)
!9544 = !DILocation(line: 205, column: 13, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9540, file: !1677, line: 205, column: 7)
!9546 = !DILocation(line: 205, column: 7, scope: !9540)
!9547 = !DILocation(line: 0, scope: !9537)
!9548 = !DILocation(line: 212, column: 18, scope: !9479)
!9549 = !DILocation(line: 214, column: 28, scope: !9479)
!9550 = !DILocation(line: 214, column: 16, scope: !9479)
!9551 = !DILocation(line: 215, column: 15, scope: !9479)
!9552 = !DILocation(line: 227, column: 11, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9479, file: !1677, line: 227, column: 6)
!9554 = !DILocation(line: 227, column: 6, scope: !9479)
!9555 = !DILocation(line: 228, column: 15, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9553, file: !1677, line: 227, column: 19)
!9557 = !DILocation(line: 228, column: 38, scope: !9556)
!9558 = !DILocation(line: 228, column: 24, scope: !9556)
!9559 = !DILocation(line: 229, column: 2, scope: !9556)
!9560 = !DILocation(line: 230, column: 24, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9553, file: !1677, line: 229, column: 9)
!9562 = !DILocation(line: 230, column: 15, scope: !9561)
!9563 = !DILocation(line: 0, scope: !9553)
!9564 = !DILocalVariable(name: "key", arg: 2, scope: !9565, file: !818, line: 190, type: !9490)
!9565 = distinct !DISubprogram(name: "k_spin_unlock", scope: !818, file: !818, line: 189, type: !9566, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9568)
!9566 = !DISubroutineType(types: !9567)
!9567 = !{null, !9510, !9490}
!9568 = !{!9569, !9564}
!9569 = !DILocalVariable(name: "l", arg: 1, scope: !9565, file: !818, line: 189, type: !9510)
!9570 = !DILocation(line: 0, scope: !9565, inlinedAt: !9571)
!9571 = distinct !DILocation(line: 232, column: 2, scope: !9479)
!9572 = !DILocation(line: 194, column: 2, scope: !9573, inlinedAt: !9571)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !818, line: 194, column: 2)
!9574 = distinct !DILexicalBlock(scope: !9565, file: !818, line: 194, column: 2)
!9575 = !DILocation(line: 194, column: 2, scope: !9574, inlinedAt: !9571)
!9576 = !DILocation(line: 194, column: 2, scope: !9577, inlinedAt: !9571)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !818, line: 194, column: 2)
!9578 = !DILocalVariable(name: "key", arg: 1, scope: !9579, file: !6124, line: 84, type: !32)
!9579 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9580)
!9580 = !{!9578}
!9581 = !DILocation(line: 0, scope: !9579, inlinedAt: !9582)
!9582 = distinct !DILocation(line: 215, column: 2, scope: !9565, inlinedAt: !9571)
!9583 = !DILocation(line: 95, column: 2, scope: !9579, inlinedAt: !9582)
!9584 = !{i64 2954159}
!9585 = !DILocation(line: 234, column: 1, scope: !9479)
!9586 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1677, file: !1677, line: 236, type: !6090, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9587)
!9587 = !{!9588, !9589}
!9588 = !DILocalVariable(name: "key", scope: !9586, file: !1677, line: 242, type: !9490)
!9589 = !DILocalVariable(name: "cyc", scope: !9586, file: !1677, line: 243, type: !152)
!9590 = !DILocation(line: 0, scope: !9507, inlinedAt: !9591)
!9591 = distinct !DILocation(line: 242, column: 25, scope: !9586)
!9592 = !DILocation(line: 55, column: 2, scope: !9516, inlinedAt: !9593)
!9593 = distinct !DILocation(line: 145, column: 10, scope: !9507, inlinedAt: !9591)
!9594 = !DILocation(line: 0, scope: !9516, inlinedAt: !9593)
!9595 = !DILocation(line: 148, column: 2, scope: !9524, inlinedAt: !9591)
!9596 = !DILocation(line: 148, column: 2, scope: !9525, inlinedAt: !9591)
!9597 = !DILocation(line: 148, column: 2, scope: !9528, inlinedAt: !9591)
!9598 = !DILocation(line: 160, column: 2, scope: !9507, inlinedAt: !9591)
!9599 = !DILocation(line: 0, scope: !9586)
!9600 = !DILocation(line: 243, column: 17, scope: !9586)
!9601 = !DILocation(line: 243, column: 29, scope: !9586)
!9602 = !DILocation(line: 243, column: 43, scope: !9586)
!9603 = !DILocation(line: 0, scope: !9565, inlinedAt: !9604)
!9604 = distinct !DILocation(line: 245, column: 2, scope: !9586)
!9605 = !DILocation(line: 194, column: 2, scope: !9573, inlinedAt: !9604)
!9606 = !DILocation(line: 194, column: 2, scope: !9574, inlinedAt: !9604)
!9607 = !DILocation(line: 194, column: 2, scope: !9577, inlinedAt: !9604)
!9608 = !DILocation(line: 243, column: 27, scope: !9586)
!9609 = !DILocation(line: 243, column: 41, scope: !9586)
!9610 = !DILocation(line: 0, scope: !9579, inlinedAt: !9611)
!9611 = distinct !DILocation(line: 215, column: 2, scope: !9565, inlinedAt: !9604)
!9612 = !DILocation(line: 95, column: 2, scope: !9579, inlinedAt: !9611)
!9613 = !DILocation(line: 246, column: 13, scope: !9586)
!9614 = !DILocation(line: 246, column: 2, scope: !9586)
!9615 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1677, file: !1677, line: 249, type: !6090, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9616)
!9616 = !{!9617, !9618}
!9617 = !DILocalVariable(name: "key", scope: !9615, file: !1677, line: 251, type: !9490)
!9618 = !DILocalVariable(name: "ret", scope: !9615, file: !1677, line: 252, type: !152)
!9619 = !DILocation(line: 0, scope: !9507, inlinedAt: !9620)
!9620 = distinct !DILocation(line: 251, column: 25, scope: !9615)
!9621 = !DILocation(line: 55, column: 2, scope: !9516, inlinedAt: !9622)
!9622 = distinct !DILocation(line: 145, column: 10, scope: !9507, inlinedAt: !9620)
!9623 = !DILocation(line: 0, scope: !9516, inlinedAt: !9622)
!9624 = !DILocation(line: 148, column: 2, scope: !9524, inlinedAt: !9620)
!9625 = !DILocation(line: 148, column: 2, scope: !9525, inlinedAt: !9620)
!9626 = !DILocation(line: 148, column: 2, scope: !9528, inlinedAt: !9620)
!9627 = !DILocation(line: 160, column: 2, scope: !9507, inlinedAt: !9620)
!9628 = !DILocation(line: 0, scope: !9615)
!9629 = !DILocation(line: 252, column: 17, scope: !9615)
!9630 = !DILocation(line: 252, column: 29, scope: !9615)
!9631 = !DILocation(line: 0, scope: !9565, inlinedAt: !9632)
!9632 = distinct !DILocation(line: 254, column: 2, scope: !9615)
!9633 = !DILocation(line: 194, column: 2, scope: !9573, inlinedAt: !9632)
!9634 = !DILocation(line: 194, column: 2, scope: !9574, inlinedAt: !9632)
!9635 = !DILocation(line: 194, column: 2, scope: !9577, inlinedAt: !9632)
!9636 = !DILocation(line: 252, column: 27, scope: !9615)
!9637 = !DILocation(line: 0, scope: !9579, inlinedAt: !9638)
!9638 = distinct !DILocation(line: 215, column: 2, scope: !9565, inlinedAt: !9632)
!9639 = !DILocation(line: 95, column: 2, scope: !9579, inlinedAt: !9638)
!9640 = !DILocation(line: 255, column: 2, scope: !9615)
!9641 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1677, file: !1677, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !1949)
!9642 = !DILocation(line: 260, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9641, file: !1677, line: 260, column: 6)
!9644 = !DILocation(line: 260, column: 16, scope: !9643)
!9645 = !DILocation(line: 260, column: 6, scope: !9641)
!9646 = !DILocation(line: 261, column: 17, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9643, file: !1677, line: 260, column: 34)
!9648 = !DILocation(line: 262, column: 2, scope: !9647)
!9649 = !DILocation(line: 263, column: 1, scope: !9641)
!9650 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1677, file: !1677, line: 265, type: !2909, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !1949)
!9651 = !DILocation(line: 267, column: 16, scope: !9650)
!9652 = !DILocation(line: 268, column: 1, scope: !9650)
!9653 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9654, file: !9654, line: 9, type: !9655, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !9685)
!9654 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9655 = !DISubroutineType(types: !9656)
!9656 = !{!107, !9657, !195, !9684}
!9657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9658, size: 32)
!9658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9659)
!9659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1377, line: 60, size: 64, elements: !9660)
!9660 = !{!9661, !9683}
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9659, file: !1377, line: 69, baseType: !9662, size: 32)
!9662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9663, size: 32)
!9663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9664)
!9664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1377, line: 50, size: 64, elements: !9665)
!9665 = !{!9666, !9681, !9682}
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9664, file: !1377, line: 52, baseType: !9667, size: 32)
!9667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9668, size: 32)
!9668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9669)
!9669 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1131, line: 64, baseType: !9670)
!9670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !9671)
!9671 = !{!9672, !9680}
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9670, file: !1131, line: 60, baseType: !9673, size: 128)
!9673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !9674)
!9674 = !{!9675, !9676, !9677, !9678, !9679}
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9673, file: !1131, line: 52, baseType: !152, size: 32)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9673, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9673, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9673, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9673, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9670, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9664, file: !1377, line: 54, baseType: !195, size: 8, offset: 32)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9664, file: !1377, line: 56, baseType: !195, size: 8, offset: 40)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9659, file: !1377, line: 71, baseType: !195, size: 8, offset: 32)
!9684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9662, size: 32)
!9685 = !{!9686, !9687, !9688}
!9686 = !DILocalVariable(name: "config", arg: 1, scope: !9653, file: !9654, line: 9, type: !9657)
!9687 = !DILocalVariable(name: "id", arg: 2, scope: !9653, file: !9654, line: 9, type: !195)
!9688 = !DILocalVariable(name: "state", arg: 3, scope: !9653, file: !9654, line: 10, type: !9684)
!9689 = !DILocation(line: 0, scope: !9653)
!9690 = !DILocation(line: 12, column: 20, scope: !9653)
!9691 = !DILocation(line: 13, column: 27, scope: !9653)
!9692 = !DILocation(line: 13, column: 42, scope: !9653)
!9693 = !DILocation(line: 13, column: 19, scope: !9653)
!9694 = !DILocation(line: 13, column: 16, scope: !9653)
!9695 = !DILocation(line: 13, column: 2, scope: !9653)
!9696 = distinct !{!9696, !9695, !9697}
!9697 = !DILocation(line: 19, column: 2, scope: !9653)
!9698 = !DILocation(line: 14, column: 23, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !9654, line: 14, column: 7)
!9700 = distinct !DILexicalBlock(scope: !9653, file: !9654, line: 13, column: 54)
!9701 = !DILocation(line: 14, column: 10, scope: !9699)
!9702 = !DILocation(line: 18, column: 11, scope: !9700)
!9703 = !DILocation(line: 14, column: 7, scope: !9700)
!9704 = !DILocation(line: 22, column: 1, scope: !9653)
!9705 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1718, file: !1718, line: 51, type: !1724, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !9706)
!9706 = !{!9707}
!9707 = !DILocalVariable(name: "dev", arg: 1, scope: !9705, file: !1718, line: 51, type: !1726)
!9708 = !DILocation(line: 0, scope: !9705)
!9709 = !DILocation(line: 66, column: 2, scope: !9705)
!9710 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1718, file: !1718, line: 10, type: !9711, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !9727)
!9711 = !DISubroutineType(types: !9712)
!9712 = !{!107, !9713, !195, !22}
!9713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9714, size: 32)
!9714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9715)
!9715 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1131, line: 64, baseType: !9716)
!9716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !9717)
!9717 = !{!9718, !9726}
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9716, file: !1131, line: 60, baseType: !9719, size: 128)
!9719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !9720)
!9720 = !{!9721, !9722, !9723, !9724, !9725}
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9719, file: !1131, line: 52, baseType: !152, size: 32)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9719, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9719, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9719, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9719, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9716, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!9727 = !{!9728, !9729, !9730, !9731, !9733, !9736, !9737, !9738, !9739, !9740}
!9728 = !DILocalVariable(name: "pins", arg: 1, scope: !9710, file: !1718, line: 10, type: !9713)
!9729 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9710, file: !1718, line: 10, type: !195)
!9730 = !DILocalVariable(name: "reg", arg: 3, scope: !9710, file: !1718, line: 11, type: !22)
!9731 = !DILocalVariable(name: "i", scope: !9732, file: !1718, line: 14, type: !195)
!9732 = distinct !DILexicalBlock(scope: !9710, file: !1718, line: 14, column: 2)
!9733 = !DILocalVariable(name: "mux_register", scope: !9734, file: !1718, line: 15, type: !152)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !1718, line: 14, column: 41)
!9735 = distinct !DILexicalBlock(scope: !9732, file: !1718, line: 14, column: 2)
!9736 = !DILocalVariable(name: "mux_mode", scope: !9734, file: !1718, line: 16, type: !152)
!9737 = !DILocalVariable(name: "input_register", scope: !9734, file: !1718, line: 17, type: !152)
!9738 = !DILocalVariable(name: "input_daisy", scope: !9734, file: !1718, line: 18, type: !152)
!9739 = !DILocalVariable(name: "config_register", scope: !9734, file: !1718, line: 19, type: !152)
!9740 = !DILocalVariable(name: "pin_ctrl_flags", scope: !9734, file: !1718, line: 20, type: !152)
!9741 = !DILocation(line: 0, scope: !9710)
!9742 = !DILocation(line: 0, scope: !9732)
!9743 = !DILocation(line: 14, column: 25, scope: !9735)
!9744 = !DILocation(line: 14, column: 2, scope: !9732)
!9745 = !DILocation(line: 48, column: 2, scope: !9710)
!9746 = !DILocation(line: 15, column: 42, scope: !9734)
!9747 = !DILocation(line: 0, scope: !9734)
!9748 = !DILocation(line: 16, column: 38, scope: !9734)
!9749 = !DILocation(line: 17, column: 44, scope: !9734)
!9750 = !DILocation(line: 19, column: 45, scope: !9734)
!9751 = !DILocation(line: 20, column: 37, scope: !9734)
!9752 = !DILocation(line: 35, column: 4, scope: !9734)
!9753 = !DILocation(line: 36, column: 4, scope: !9734)
!9754 = !DILocation(line: 35, column: 45, scope: !9734)
!9755 = !DILocation(line: 34, column: 5, scope: !9734)
!9756 = !DILocation(line: 34, column: 53, scope: !9734)
!9757 = !DILocation(line: 37, column: 7, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9734, file: !1718, line: 37, column: 7)
!9759 = !DILocation(line: 37, column: 7, scope: !9734)
!9760 = !DILocation(line: 18, column: 41, scope: !9734)
!9761 = !DILocation(line: 39, column: 5, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9758, file: !1718, line: 37, column: 23)
!9763 = !DILocation(line: 38, column: 6, scope: !9762)
!9764 = !DILocation(line: 38, column: 56, scope: !9762)
!9765 = !DILocation(line: 40, column: 3, scope: !9762)
!9766 = !DILocation(line: 41, column: 7, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9734, file: !1718, line: 41, column: 7)
!9768 = !DILocation(line: 41, column: 7, scope: !9734)
!9769 = !DILocation(line: 43, column: 20, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9767, file: !1718, line: 41, column: 24)
!9771 = !DILocation(line: 42, column: 6, scope: !9770)
!9772 = !DILocation(line: 42, column: 57, scope: !9770)
!9773 = !DILocation(line: 44, column: 3, scope: !9770)
!9774 = !DILocation(line: 14, column: 37, scope: !9735)
!9775 = distinct !{!9775, !9744, !9776}
!9776 = !DILocation(line: 47, column: 2, scope: !9732)
!9777 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !9778, file: !9778, line: 43, type: !9779, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !9833)
!9778 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9779 = !DISubroutineType(types: !9780)
!9780 = !{null, !9781, !152, !152, !152}
!9781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9782, size: 32)
!9782 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !506, line: 4575, baseType: !9783)
!9783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 4532, size: 390144, elements: !9784)
!9784 = !{!9785, !9786, !9787, !9788, !9789, !9790, !9798, !9799, !9807, !9808}
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !9783, file: !506, line: 4533, baseType: !510, size: 32)
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !9783, file: !506, line: 4534, baseType: !510, size: 32, offset: 32)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !9783, file: !506, line: 4535, baseType: !510, size: 32, offset: 64)
!9788 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !9783, file: !506, line: 4536, baseType: !510, size: 32, offset: 96)
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9783, file: !506, line: 4537, baseType: !515, size: 16256, offset: 128)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9783, file: !506, line: 4543, baseType: !9791, size: 4224, offset: 16384)
!9791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9792, size: 4224, elements: !526)
!9792 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9783, file: !506, line: 4538, size: 128, elements: !9793)
!9793 = !{!9794, !9795, !9796, !9797}
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9792, file: !506, line: 4539, baseType: !510, size: 32)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !9792, file: !506, line: 4540, baseType: !510, size: 32, offset: 32)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !9792, file: !506, line: 4541, baseType: !510, size: 32, offset: 64)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !9792, file: !506, line: 4542, baseType: !510, size: 32, offset: 96)
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9783, file: !506, line: 4544, baseType: !529, size: 110464, offset: 20608)
!9799 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9783, file: !506, line: 4550, baseType: !9800, size: 24448, offset: 131072)
!9800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9801, size: 24448, elements: !540)
!9801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9783, file: !506, line: 4545, size: 128, elements: !9802)
!9802 = !{!9803, !9804, !9805, !9806}
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9801, file: !506, line: 4546, baseType: !510, size: 32)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !9801, file: !506, line: 4547, baseType: !510, size: 32, offset: 32)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !9801, file: !506, line: 4548, baseType: !510, size: 32, offset: 64)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !9801, file: !506, line: 4549, baseType: !510, size: 32, offset: 96)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9783, file: !506, line: 4551, baseType: !543, size: 106624, offset: 155520)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9783, file: !506, line: 4574, baseType: !9809, size: 128000, offset: 262144)
!9809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9810, size: 128000, elements: !574)
!9810 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9783, file: !506, line: 4552, size: 1024, elements: !9811)
!9811 = !{!9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829, !9830, !9831, !9832}
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !9810, file: !506, line: 4553, baseType: !510, size: 32)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !9810, file: !506, line: 4554, baseType: !510, size: 32, offset: 32)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !9810, file: !506, line: 4555, baseType: !510, size: 32, offset: 64)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !9810, file: !506, line: 4556, baseType: !510, size: 32, offset: 96)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !9810, file: !506, line: 4557, baseType: !510, size: 32, offset: 128)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !9810, file: !506, line: 4558, baseType: !510, size: 32, offset: 160)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !9810, file: !506, line: 4559, baseType: !510, size: 32, offset: 192)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !9810, file: !506, line: 4560, baseType: !510, size: 32, offset: 224)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !9810, file: !506, line: 4561, baseType: !510, size: 32, offset: 256)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !9810, file: !506, line: 4562, baseType: !510, size: 32, offset: 288)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !9810, file: !506, line: 4563, baseType: !510, size: 32, offset: 320)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !9810, file: !506, line: 4564, baseType: !510, size: 32, offset: 352)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !9810, file: !506, line: 4565, baseType: !510, size: 32, offset: 384)
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !9810, file: !506, line: 4566, baseType: !510, size: 32, offset: 416)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !9810, file: !506, line: 4567, baseType: !510, size: 32, offset: 448)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !9810, file: !506, line: 4568, baseType: !510, size: 32, offset: 480)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9810, file: !506, line: 4569, baseType: !567, size: 384, offset: 512)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !9810, file: !506, line: 4570, baseType: !510, size: 32, offset: 896)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !9810, file: !506, line: 4571, baseType: !510, size: 32, offset: 928)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !9810, file: !506, line: 4572, baseType: !510, size: 32, offset: 960)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9810, file: !506, line: 4573, baseType: !510, size: 32, offset: 992)
!9833 = !{!9834, !9835, !9836, !9837}
!9834 = !DILocalVariable(name: "base", arg: 1, scope: !9777, file: !9778, line: 43, type: !9781)
!9835 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9777, file: !9778, line: 43, type: !152)
!9836 = !DILocalVariable(name: "pre", arg: 3, scope: !9777, file: !9778, line: 43, type: !152)
!9837 = !DILocalVariable(name: "post", arg: 4, scope: !9777, file: !9778, line: 43, type: !152)
!9838 = !DILocation(line: 0, scope: !9777)
!9839 = !DILocation(line: 45, column: 5, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !9778, line: 45, column: 5)
!9841 = distinct !DILexicalBlock(scope: !9777, file: !9778, line: 45, column: 5)
!9842 = !DILocation(line: 45, column: 5, scope: !9841)
!9843 = !DILocation(line: 45, column: 5, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9840, file: !9778, line: 45, column: 5)
!9845 = !DILocation(line: 46, column: 5, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9847, file: !9778, line: 46, column: 5)
!9847 = distinct !DILexicalBlock(scope: !9777, file: !9778, line: 46, column: 5)
!9848 = !DILocation(line: 46, column: 5, scope: !9847)
!9849 = !DILocation(line: 46, column: 5, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !9778, line: 46, column: 5)
!9851 = !DILocation(line: 48, column: 25, scope: !9777)
!9852 = !DILocation(line: 48, column: 42, scope: !9777)
!9853 = !DILocation(line: 50, column: 24, scope: !9777)
!9854 = !DILocation(line: 49, column: 94, scope: !9777)
!9855 = !DILocation(line: 50, column: 54, scope: !9777)
!9856 = !DILocation(line: 48, column: 22, scope: !9777)
!9857 = !DILocation(line: 51, column: 1, scope: !9777)
!9858 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !9778, file: !9778, line: 59, type: !9859, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !9861)
!9859 = !DISubroutineType(types: !9860)
!9860 = !{null, !9781, !152, !1403, !1403}
!9861 = !{!9862, !9863, !9864, !9865}
!9862 = !DILocalVariable(name: "base", arg: 1, scope: !9858, file: !9778, line: 59, type: !9781)
!9863 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9858, file: !9778, line: 59, type: !152)
!9864 = !DILocalVariable(name: "pre", arg: 3, scope: !9858, file: !9778, line: 59, type: !1403)
!9865 = !DILocalVariable(name: "post", arg: 4, scope: !9858, file: !9778, line: 59, type: !1403)
!9866 = !DILocation(line: 0, scope: !9858)
!9867 = !DILocation(line: 61, column: 5, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !9778, line: 61, column: 5)
!9869 = distinct !DILexicalBlock(scope: !9858, file: !9778, line: 61, column: 5)
!9870 = !DILocation(line: 61, column: 5, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9868, file: !9778, line: 61, column: 5)
!9872 = !DILocation(line: 63, column: 13, scope: !9858)
!9873 = !DILocation(line: 63, column: 63, scope: !9858)
!9874 = !DILocation(line: 63, column: 10, scope: !9858)
!9875 = !DILocation(line: 64, column: 14, scope: !9858)
!9876 = !DILocation(line: 64, column: 31, scope: !9858)
!9877 = !DILocation(line: 64, column: 11, scope: !9858)
!9878 = !DILocation(line: 65, column: 1, scope: !9858)
!9879 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !9778, file: !9778, line: 73, type: !9880, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !9882)
!9880 = !DISubroutineType(types: !9881)
!9881 = !{null, !9781, !152, !152, !152, !152}
!9882 = !{!9883, !9884, !9885, !9886, !9887}
!9883 = !DILocalVariable(name: "base", arg: 1, scope: !9879, file: !9778, line: 73, type: !9781)
!9884 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9879, file: !9778, line: 73, type: !152)
!9885 = !DILocalVariable(name: "mux", arg: 3, scope: !9879, file: !9778, line: 73, type: !152)
!9886 = !DILocalVariable(name: "pre", arg: 4, scope: !9879, file: !9778, line: 73, type: !152)
!9887 = !DILocalVariable(name: "post", arg: 5, scope: !9879, file: !9778, line: 73, type: !152)
!9888 = !DILocation(line: 0, scope: !9879)
!9889 = !DILocation(line: 75, column: 5, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9891, file: !9778, line: 75, column: 5)
!9891 = distinct !DILexicalBlock(scope: !9879, file: !9778, line: 75, column: 5)
!9892 = !DILocation(line: 75, column: 5, scope: !9891)
!9893 = !DILocation(line: 75, column: 5, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9890, file: !9778, line: 75, column: 5)
!9895 = !DILocation(line: 76, column: 5, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !9778, line: 76, column: 5)
!9897 = distinct !DILexicalBlock(scope: !9879, file: !9778, line: 76, column: 5)
!9898 = !DILocation(line: 76, column: 5, scope: !9897)
!9899 = !DILocation(line: 76, column: 5, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9896, file: !9778, line: 76, column: 5)
!9901 = !DILocation(line: 78, column: 25, scope: !9879)
!9902 = !DILocation(line: 78, column: 42, scope: !9879)
!9903 = !DILocation(line: 80, column: 24, scope: !9879)
!9904 = !DILocation(line: 80, column: 51, scope: !9879)
!9905 = !DILocation(line: 79, column: 121, scope: !9879)
!9906 = !DILocation(line: 80, column: 49, scope: !9879)
!9907 = !DILocation(line: 80, column: 81, scope: !9879)
!9908 = !DILocation(line: 78, column: 22, scope: !9879)
!9909 = !DILocation(line: 81, column: 1, scope: !9879)
!9910 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !9911, file: !9911, line: 43, type: !9912, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9914)
!9911 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9912 = !DISubroutineType(types: !9913)
!9913 = !{!152, !2654}
!9914 = !{!9915}
!9915 = !DILocalVariable(name: "base", arg: 1, scope: !9910, file: !9911, line: 43, type: !2654)
!9916 = !DILocation(line: 0, scope: !9910)
!9917 = !DILocation(line: 45, column: 9, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9910, file: !9911, line: 45, column: 9)
!9919 = !DILocation(line: 45, column: 9, scope: !9910)
!9920 = !DILocation(line: 48, column: 26, scope: !9910)
!9921 = !DILocation(line: 48, column: 45, scope: !9910)
!9922 = !DILocation(line: 48, column: 23, scope: !9910)
!9923 = !DILocation(line: 48, column: 5, scope: !9910)
!9924 = !DILocation(line: 49, column: 1, scope: !9910)
!9925 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2645, file: !2645, line: 220, type: !9926, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9928)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{!145, !2654, !152}
!9928 = !{!9929, !9930}
!9929 = !DILocalVariable(name: "base", arg: 1, scope: !9925, file: !2645, line: 220, type: !2654)
!9930 = !DILocalVariable(name: "pllControl", arg: 2, scope: !9925, file: !2645, line: 220, type: !152)
!9931 = !DILocation(line: 0, scope: !9925)
!9932 = !DILocation(line: 222, column: 19, scope: !9925)
!9933 = !DILocation(line: 222, column: 58, scope: !9925)
!9934 = !DILocation(line: 222, column: 12, scope: !9925)
!9935 = !DILocation(line: 222, column: 5, scope: !9925)
!9936 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !9911, file: !9911, line: 57, type: !9912, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9937)
!9937 = !{!9938}
!9938 = !DILocalVariable(name: "base", arg: 1, scope: !9936, file: !9911, line: 57, type: !2654)
!9939 = !DILocation(line: 0, scope: !9936)
!9940 = !DILocation(line: 59, column: 9, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9936, file: !9911, line: 59, column: 9)
!9942 = !DILocation(line: 59, column: 9, scope: !9936)
!9943 = !DILocation(line: 62, column: 9, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9936, file: !9911, line: 62, column: 9)
!9945 = !DILocation(line: 62, column: 28, scope: !9944)
!9946 = !DILocation(line: 0, scope: !9944)
!9947 = !DILocation(line: 66, column: 1, scope: !9936)
!9948 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !9911, file: !9911, line: 74, type: !9912, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9949)
!9949 = !{!9950, !9951, !9952, !9953}
!9950 = !DILocalVariable(name: "base", arg: 1, scope: !9948, file: !9911, line: 74, type: !2654)
!9951 = !DILocalVariable(name: "divSelect", scope: !9948, file: !9911, line: 76, type: !195)
!9952 = !DILocalVariable(name: "divTestSelect", scope: !9948, file: !9911, line: 76, type: !195)
!9953 = !DILocalVariable(name: "factor", scope: !9948, file: !9911, line: 77, type: !2717)
!9954 = !DILocation(line: 0, scope: !9948)
!9955 = !DILocation(line: 79, column: 9, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9948, file: !9911, line: 79, column: 9)
!9957 = !DILocation(line: 79, column: 9, scope: !9948)
!9958 = !DILocation(line: 82, column: 17, scope: !9948)
!9959 = !DILocation(line: 83, column: 22, scope: !9948)
!9960 = !DILocation(line: 83, column: 100, scope: !9948)
!9961 = !DILocation(line: 83, column: 21, scope: !9948)
!9962 = !DILocation(line: 86, column: 5, scope: !9948)
!9963 = !DILocation(line: 100, column: 9, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9948, file: !9911, line: 100, column: 9)
!9965 = !DILocation(line: 100, column: 41, scope: !9964)
!9966 = !DILocation(line: 100, column: 9, scope: !9948)
!9967 = !DILocation(line: 102, column: 27, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9964, file: !9911, line: 101, column: 5)
!9969 = !DILocation(line: 102, column: 59, scope: !9968)
!9970 = !DILocation(line: 102, column: 19, scope: !9968)
!9971 = !DILocation(line: 103, column: 27, scope: !9968)
!9972 = !DILocation(line: 103, column: 62, scope: !9968)
!9973 = !DILocation(line: 103, column: 19, scope: !9968)
!9974 = !DILocation(line: 102, column: 95, scope: !9968)
!9975 = !DILocation(line: 104, column: 27, scope: !9968)
!9976 = !DILocation(line: 104, column: 60, scope: !9968)
!9977 = !DILocation(line: 104, column: 19, scope: !9968)
!9978 = !DILocation(line: 103, column: 98, scope: !9968)
!9979 = !DILocation(line: 105, column: 39, scope: !9968)
!9980 = !DILocation(line: 105, column: 27, scope: !9968)
!9981 = !DILocation(line: 105, column: 60, scope: !9968)
!9982 = !DILocation(line: 105, column: 70, scope: !9968)
!9983 = !DILocation(line: 105, column: 57, scope: !9968)
!9984 = !DILocation(line: 105, column: 16, scope: !9968)
!9985 = !DILocation(line: 105, column: 9, scope: !9968)
!9986 = !DILocation(line: 109, column: 28, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9964, file: !9911, line: 108, column: 5)
!9988 = !DILocation(line: 109, column: 48, scope: !9987)
!9989 = !DILocation(line: 109, column: 46, scope: !9987)
!9990 = !DILocation(line: 109, column: 9, scope: !9987)
!9991 = !DILocation(line: 111, column: 1, scope: !9948)
!9992 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !9911, file: !9911, line: 119, type: !9912, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9993)
!9993 = !{!9994}
!9994 = !DILocalVariable(name: "base", arg: 1, scope: !9992, file: !9911, line: 119, type: !2654)
!9995 = !DILocation(line: 0, scope: !9992)
!9996 = !DILocation(line: 121, column: 9, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !9911, line: 121, column: 9)
!9998 = !DILocation(line: 125, column: 1, scope: !9992)
!9999 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !9911, file: !9911, line: 133, type: !9912, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10000)
!10000 = !{!10001, !10002, !10003, !10004, !10005}
!10001 = !DILocalVariable(name: "base", arg: 1, scope: !9999, file: !9911, line: 133, type: !2654)
!10002 = !DILocalVariable(name: "divSelect", scope: !9999, file: !9911, line: 135, type: !195)
!10003 = !DILocalVariable(name: "divPostSelect", scope: !9999, file: !9911, line: 135, type: !195)
!10004 = !DILocalVariable(name: "divTestSelect", scope: !9999, file: !9911, line: 135, type: !195)
!10005 = !DILocalVariable(name: "factor", scope: !9999, file: !9911, line: 136, type: !2717)
!10006 = !DILocation(line: 0, scope: !9999)
!10007 = !DILocation(line: 138, column: 9, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9999, file: !9911, line: 138, column: 9)
!10009 = !DILocation(line: 138, column: 9, scope: !9999)
!10010 = !DILocation(line: 141, column: 17, scope: !9999)
!10011 = !DILocation(line: 142, column: 22, scope: !9999)
!10012 = !DILocation(line: 142, column: 101, scope: !9999)
!10013 = !DILocation(line: 142, column: 21, scope: !9999)
!10014 = !DILocation(line: 144, column: 22, scope: !9999)
!10015 = !DILocation(line: 144, column: 104, scope: !9999)
!10016 = !DILocation(line: 144, column: 21, scope: !9999)
!10017 = !DILocation(line: 147, column: 5, scope: !9999)
!10018 = !DILocation(line: 161, column: 5, scope: !9999)
!10019 = !DILocation(line: 175, column: 9, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9999, file: !9911, line: 175, column: 9)
!10021 = !DILocation(line: 175, column: 43, scope: !10020)
!10022 = !DILocation(line: 175, column: 9, scope: !9999)
!10023 = !DILocation(line: 177, column: 27, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !9911, line: 176, column: 5)
!10025 = !DILocation(line: 177, column: 61, scope: !10024)
!10026 = !DILocation(line: 177, column: 19, scope: !10024)
!10027 = !DILocation(line: 178, column: 27, scope: !10024)
!10028 = !DILocation(line: 178, column: 64, scope: !10024)
!10029 = !DILocation(line: 178, column: 19, scope: !10024)
!10030 = !DILocation(line: 177, column: 99, scope: !10024)
!10031 = !DILocation(line: 179, column: 27, scope: !10024)
!10032 = !DILocation(line: 179, column: 62, scope: !10024)
!10033 = !DILocation(line: 179, column: 19, scope: !10024)
!10034 = !DILocation(line: 178, column: 102, scope: !10024)
!10035 = !DILocation(line: 180, column: 40, scope: !10024)
!10036 = !DILocation(line: 180, column: 58, scope: !10024)
!10037 = !DILocation(line: 180, column: 27, scope: !10024)
!10038 = !DILocation(line: 180, column: 79, scope: !10024)
!10039 = !DILocation(line: 180, column: 89, scope: !10024)
!10040 = !DILocation(line: 180, column: 76, scope: !10024)
!10041 = !DILocation(line: 180, column: 16, scope: !10024)
!10042 = !DILocation(line: 180, column: 9, scope: !10024)
!10043 = !DILocation(line: 184, column: 29, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10020, file: !9911, line: 183, column: 5)
!10045 = !DILocation(line: 184, column: 47, scope: !10044)
!10046 = !DILocation(line: 184, column: 67, scope: !10044)
!10047 = !DILocation(line: 184, column: 65, scope: !10044)
!10048 = !DILocation(line: 184, column: 9, scope: !10044)
!10049 = !DILocation(line: 186, column: 1, scope: !9999)
!10050 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !9911, file: !9911, line: 194, type: !9912, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10051)
!10051 = !{!10052, !10053, !10054, !10055, !10056}
!10052 = !DILocalVariable(name: "base", arg: 1, scope: !10050, file: !9911, line: 194, type: !2654)
!10053 = !DILocalVariable(name: "divSelect", scope: !10050, file: !9911, line: 196, type: !195)
!10054 = !DILocalVariable(name: "divPostSelect", scope: !10050, file: !9911, line: 196, type: !195)
!10055 = !DILocalVariable(name: "divTestSelect", scope: !10050, file: !9911, line: 196, type: !195)
!10056 = !DILocalVariable(name: "factor", scope: !10050, file: !9911, line: 197, type: !2717)
!10057 = !DILocation(line: 0, scope: !10050)
!10058 = !DILocation(line: 199, column: 9, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10050, file: !9911, line: 199, column: 9)
!10060 = !DILocation(line: 199, column: 9, scope: !10050)
!10061 = !DILocation(line: 202, column: 17, scope: !10050)
!10062 = !DILocation(line: 203, column: 22, scope: !10050)
!10063 = !DILocation(line: 203, column: 101, scope: !10050)
!10064 = !DILocation(line: 203, column: 21, scope: !10050)
!10065 = !DILocation(line: 205, column: 22, scope: !10050)
!10066 = !DILocation(line: 205, column: 104, scope: !10050)
!10067 = !DILocation(line: 205, column: 21, scope: !10050)
!10068 = !DILocation(line: 208, column: 5, scope: !10050)
!10069 = !DILocation(line: 222, column: 5, scope: !10050)
!10070 = !DILocation(line: 236, column: 9, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10050, file: !9911, line: 236, column: 9)
!10072 = !DILocation(line: 236, column: 43, scope: !10071)
!10073 = !DILocation(line: 236, column: 9, scope: !10050)
!10074 = !DILocation(line: 238, column: 27, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10071, file: !9911, line: 237, column: 5)
!10076 = !DILocation(line: 238, column: 61, scope: !10075)
!10077 = !DILocation(line: 238, column: 19, scope: !10075)
!10078 = !DILocation(line: 239, column: 27, scope: !10075)
!10079 = !DILocation(line: 239, column: 64, scope: !10075)
!10080 = !DILocation(line: 239, column: 19, scope: !10075)
!10081 = !DILocation(line: 238, column: 99, scope: !10075)
!10082 = !DILocation(line: 240, column: 27, scope: !10075)
!10083 = !DILocation(line: 240, column: 62, scope: !10075)
!10084 = !DILocation(line: 240, column: 19, scope: !10075)
!10085 = !DILocation(line: 239, column: 102, scope: !10075)
!10086 = !DILocation(line: 241, column: 40, scope: !10075)
!10087 = !DILocation(line: 241, column: 58, scope: !10075)
!10088 = !DILocation(line: 241, column: 27, scope: !10075)
!10089 = !DILocation(line: 241, column: 79, scope: !10075)
!10090 = !DILocation(line: 241, column: 89, scope: !10075)
!10091 = !DILocation(line: 241, column: 76, scope: !10075)
!10092 = !DILocation(line: 241, column: 16, scope: !10075)
!10093 = !DILocation(line: 241, column: 9, scope: !10075)
!10094 = !DILocation(line: 245, column: 29, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10071, file: !9911, line: 244, column: 5)
!10096 = !DILocation(line: 245, column: 47, scope: !10095)
!10097 = !DILocation(line: 245, column: 67, scope: !10095)
!10098 = !DILocation(line: 245, column: 65, scope: !10095)
!10099 = !DILocation(line: 245, column: 9, scope: !10095)
!10100 = !DILocation(line: 247, column: 1, scope: !10050)
!10101 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !9911, file: !9911, line: 255, type: !10102, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10104)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{!152, !2654, !152}
!10104 = !{!10105, !10106, !10107, !10108}
!10105 = !DILocalVariable(name: "base", arg: 1, scope: !10101, file: !9911, line: 255, type: !2654)
!10106 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10101, file: !9911, line: 255, type: !152)
!10107 = !DILocalVariable(name: "main", scope: !10101, file: !9911, line: 257, type: !152)
!10108 = !DILocalVariable(name: "frac", scope: !10101, file: !9911, line: 257, type: !152)
!10109 = !DILocation(line: 0, scope: !10101)
!10110 = !DILocation(line: 260, column: 5, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !9911, line: 260, column: 5)
!10112 = distinct !DILexicalBlock(scope: !10101, file: !9911, line: 260, column: 5)
!10113 = !DILocation(line: 260, column: 5, scope: !10112)
!10114 = !DILocation(line: 260, column: 5, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10111, file: !9911, line: 260, column: 5)
!10116 = !DILocation(line: 262, column: 12, scope: !10101)
!10117 = !DILocation(line: 263, column: 12, scope: !10101)
!10118 = !DILocation(line: 265, column: 17, scope: !10101)
!10119 = !DILocation(line: 265, column: 24, scope: !10101)
!10120 = !DILocation(line: 265, column: 5, scope: !10101)
!10121 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2645, file: !2645, line: 373, type: !10102, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10122)
!10122 = !{!10123, !10124}
!10123 = !DILocalVariable(name: "base", arg: 1, scope: !10121, file: !2645, line: 373, type: !2654)
!10124 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10121, file: !2645, line: 373, type: !152)
!10125 = !DILocation(line: 0, scope: !10121)
!10126 = !DILocation(line: 375, column: 13, scope: !10121)
!10127 = !DILocation(line: 375, column: 52, scope: !10121)
!10128 = !DILocation(line: 375, column: 49, scope: !10121)
!10129 = !DILocation(line: 375, column: 85, scope: !10121)
!10130 = !DILocation(line: 375, column: 5, scope: !10121)
!10131 = distinct !DISubprogram(name: "GPIO_Init", scope: !10132, file: !10132, line: 47, type: !10133, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10157)
!10132 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10133 = !DISubroutineType(types: !10134)
!10134 = !{null, !10135, !10147}
!10135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10136, size: 32)
!10136 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !506, line: 19729, baseType: !10137)
!10137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 19720, size: 256, elements: !10138)
!10138 = !{!10139, !10140, !10141, !10142, !10143, !10144, !10145, !10146}
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !10137, file: !506, line: 19721, baseType: !510, size: 32)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !10137, file: !506, line: 19722, baseType: !510, size: 32, offset: 32)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !10137, file: !506, line: 19723, baseType: !581, size: 32, offset: 64)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10137, file: !506, line: 19724, baseType: !510, size: 32, offset: 96)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10137, file: !506, line: 19725, baseType: !510, size: 32, offset: 128)
!10144 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !10137, file: !506, line: 19726, baseType: !510, size: 32, offset: 160)
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !10137, file: !506, line: 19727, baseType: !510, size: 32, offset: 192)
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !10137, file: !506, line: 19728, baseType: !510, size: 32, offset: 224)
!10147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10148, size: 32)
!10148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10149)
!10149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !989, line: 78, baseType: !10150)
!10150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !989, line: 73, size: 96, elements: !10151)
!10151 = !{!10152, !10153, !10155}
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10150, file: !989, line: 75, baseType: !152, size: 32)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10150, file: !989, line: 76, baseType: !10154, size: 32, offset: 32)
!10154 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !989, line: 53, baseType: !2721)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !10150, file: !989, line: 77, baseType: !10156, size: 32, offset: 64)
!10156 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !989, line: 63, baseType: !2725)
!10157 = !{!10158, !10159, !10160, !10161}
!10158 = !DILocalVariable(name: "base", arg: 1, scope: !10131, file: !10132, line: 47, type: !10135)
!10159 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10131, file: !10132, line: 47, type: !10147)
!10160 = !DILocalVariable(name: "pin", scope: !10131, file: !10132, line: 49, type: !152)
!10161 = !DILocalVariable(name: "icr", scope: !10131, file: !10132, line: 50, type: !630)
!10162 = !DILocation(line: 0, scope: !10131)
!10163 = !DILocation(line: 53, column: 5, scope: !10131)
!10164 = !DILocation(line: 53, column: 24, scope: !10131)
!10165 = !DILocation(line: 54, column: 2, scope: !10131)
!10166 = !DILocation(line: 54, column: 26, scope: !10131)
!10167 = !DILocation(line: 57, column: 23, scope: !10131)
!10168 = !DILocation(line: 60, column: 21, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10131, file: !10132, line: 60, column: 9)
!10170 = !DILocation(line: 60, column: 31, scope: !10169)
!10171 = !DILocation(line: 0, scope: !10169)
!10172 = !DILocation(line: 60, column: 9, scope: !10131)
!10173 = !DILocation(line: 61, column: 9, scope: !10169)
!10174 = !DILocation(line: 61, column: 29, scope: !10169)
!10175 = !DILocation(line: 63, column: 32, scope: !10169)
!10176 = !DILocation(line: 63, column: 9, scope: !10169)
!10177 = !DILocation(line: 63, column: 29, scope: !10169)
!10178 = !DILocation(line: 66, column: 12, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10131, file: !10132, line: 66, column: 8)
!10180 = !DILocation(line: 66, column: 8, scope: !10131)
!10181 = !DILocation(line: 73, column: 24, scope: !10131)
!10182 = !DILocation(line: 73, column: 5, scope: !10131)
!10183 = !DILocation(line: 77, column: 30, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10185, file: !10132, line: 76, column: 9)
!10185 = distinct !DILexicalBlock(scope: !10131, file: !10132, line: 74, column: 5)
!10186 = !DILocation(line: 77, column: 26, scope: !10184)
!10187 = !DILocation(line: 77, column: 21, scope: !10184)
!10188 = !DILocation(line: 77, column: 18, scope: !10184)
!10189 = !DILocation(line: 78, column: 13, scope: !10184)
!10190 = !DILocation(line: 82, column: 21, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10185, file: !10132, line: 81, column: 9)
!10192 = !DILocation(line: 82, column: 38, scope: !10191)
!10193 = !DILocation(line: 82, column: 34, scope: !10191)
!10194 = !DILocation(line: 82, column: 29, scope: !10191)
!10195 = !DILocation(line: 82, column: 26, scope: !10191)
!10196 = !DILocation(line: 82, column: 53, scope: !10191)
!10197 = !DILocation(line: 82, column: 47, scope: !10191)
!10198 = !DILocation(line: 83, column: 13, scope: !10191)
!10199 = !DILocation(line: 87, column: 21, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10185, file: !10132, line: 86, column: 9)
!10201 = !DILocation(line: 87, column: 38, scope: !10200)
!10202 = !DILocation(line: 87, column: 34, scope: !10200)
!10203 = !DILocation(line: 87, column: 29, scope: !10200)
!10204 = !DILocation(line: 87, column: 26, scope: !10200)
!10205 = !DILocation(line: 87, column: 53, scope: !10200)
!10206 = !DILocation(line: 87, column: 47, scope: !10200)
!10207 = !DILocation(line: 88, column: 13, scope: !10200)
!10208 = !DILocation(line: 92, column: 29, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10185, file: !10132, line: 91, column: 9)
!10210 = !DILocation(line: 92, column: 25, scope: !10209)
!10211 = !DILocation(line: 92, column: 18, scope: !10209)
!10212 = !DILocation(line: 93, column: 13, scope: !10209)
!10213 = !DILocation(line: 0, scope: !10185)
!10214 = !DILocation(line: 100, column: 1, scope: !10131)
!10215 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !10132, file: !10132, line: 111, type: !10216, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10219)
!10216 = !DISubroutineType(types: !10217)
!10217 = !{null, !10135, !152, !10218}
!10218 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !989, line: 70, baseType: !988)
!10219 = !{!10220, !10221, !10222}
!10220 = !DILocalVariable(name: "base", arg: 1, scope: !10215, file: !10132, line: 111, type: !10135)
!10221 = !DILocalVariable(name: "pin", arg: 2, scope: !10215, file: !10132, line: 111, type: !152)
!10222 = !DILocalVariable(name: "pinVal", arg: 3, scope: !10215, file: !10132, line: 111, type: !10218)
!10223 = !DILocation(line: 0, scope: !10215)
!10224 = !DILocation(line: 113, column: 5, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10226, file: !10132, line: 113, column: 5)
!10226 = distinct !DILexicalBlock(scope: !10215, file: !10132, line: 113, column: 5)
!10227 = !DILocation(line: 113, column: 5, scope: !10226)
!10228 = !DILocation(line: 113, column: 5, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10225, file: !10132, line: 113, column: 5)
!10230 = !DILocation(line: 114, column: 16, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10215, file: !10132, line: 114, column: 9)
!10232 = !DILocation(line: 0, scope: !10231)
!10233 = !DILocation(line: 114, column: 9, scope: !10215)
!10234 = !DILocation(line: 116, column: 9, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10231, file: !10132, line: 115, column: 5)
!10236 = !DILocation(line: 116, column: 27, scope: !10235)
!10237 = !DILocation(line: 117, column: 5, scope: !10235)
!10238 = !DILocation(line: 120, column: 30, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10231, file: !10132, line: 119, column: 5)
!10240 = !DILocation(line: 120, column: 9, scope: !10239)
!10241 = !DILocation(line: 120, column: 27, scope: !10239)
!10242 = !DILocation(line: 122, column: 1, scope: !10215)
!10243 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !10132, file: !10132, line: 133, type: !10244, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10246)
!10244 = !DISubroutineType(types: !10245)
!10245 = !{null, !10135, !152, !145}
!10246 = !{!10247, !10248, !10249}
!10247 = !DILocalVariable(name: "base", arg: 1, scope: !10243, file: !10132, line: 133, type: !10135)
!10248 = !DILocalVariable(name: "pin", arg: 2, scope: !10243, file: !10132, line: 133, type: !152)
!10249 = !DILocalVariable(name: "enable", arg: 3, scope: !10243, file: !10132, line: 133, type: !145)
!10250 = !DILocation(line: 0, scope: !10243)
!10251 = !DILocation(line: 135, column: 5, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !10132, line: 135, column: 5)
!10253 = distinct !DILexicalBlock(scope: !10243, file: !10132, line: 135, column: 5)
!10254 = !DILocation(line: 135, column: 5, scope: !10253)
!10255 = !DILocation(line: 135, column: 5, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10252, file: !10132, line: 135, column: 5)
!10257 = !DILocation(line: 0, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10243, file: !10132, line: 137, column: 8)
!10259 = !DILocation(line: 137, column: 8, scope: !10243)
!10260 = !DILocation(line: 138, column: 9, scope: !10258)
!10261 = !DILocation(line: 138, column: 28, scope: !10258)
!10262 = !DILocation(line: 140, column: 31, scope: !10258)
!10263 = !DILocation(line: 140, column: 9, scope: !10258)
!10264 = !DILocation(line: 140, column: 28, scope: !10258)
!10265 = !DILocation(line: 141, column: 1, scope: !10243)
!10266 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !10132, file: !10132, line: 150, type: !10244, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10267)
!10267 = !{!10268, !10269, !10270}
!10268 = !DILocalVariable(name: "base", arg: 1, scope: !10266, file: !10132, line: 150, type: !10135)
!10269 = !DILocalVariable(name: "pin", arg: 2, scope: !10266, file: !10132, line: 150, type: !152)
!10270 = !DILocalVariable(name: "enable", arg: 3, scope: !10266, file: !10132, line: 150, type: !145)
!10271 = !DILocation(line: 0, scope: !10266)
!10272 = !DILocation(line: 152, column: 5, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10274, file: !10132, line: 152, column: 5)
!10274 = distinct !DILexicalBlock(scope: !10266, file: !10132, line: 152, column: 5)
!10275 = !DILocation(line: 152, column: 5, scope: !10274)
!10276 = !DILocation(line: 152, column: 5, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10273, file: !10132, line: 152, column: 5)
!10278 = !DILocation(line: 0, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10266, file: !10132, line: 154, column: 8)
!10280 = !DILocation(line: 154, column: 8, scope: !10266)
!10281 = !DILocation(line: 155, column: 9, scope: !10279)
!10282 = !DILocation(line: 155, column: 33, scope: !10279)
!10283 = !DILocation(line: 157, column: 36, scope: !10279)
!10284 = !DILocation(line: 157, column: 9, scope: !10279)
!10285 = !DILocation(line: 157, column: 33, scope: !10279)
!10286 = !DILocation(line: 158, column: 1, scope: !10266)
!10287 = distinct !DISubprogram(name: "UART_Init", scope: !10288, file: !10288, line: 47, type: !10289, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10325)
!10288 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10289 = !DISubroutineType(types: !10290)
!10290 = !{null, !10291, !10314}
!10291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10292, size: 32)
!10292 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !506, line: 41342, baseType: !10293)
!10293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 41322, size: 1504, elements: !10294)
!10294 = !{!10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313}
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10293, file: !506, line: 41323, baseType: !581, size: 32)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10293, file: !506, line: 41324, baseType: !1345, size: 480, offset: 32)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10293, file: !506, line: 41325, baseType: !510, size: 32, offset: 512)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10293, file: !506, line: 41326, baseType: !1345, size: 480, offset: 544)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10293, file: !506, line: 41327, baseType: !510, size: 32, offset: 1024)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10293, file: !506, line: 41328, baseType: !510, size: 32, offset: 1056)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10293, file: !506, line: 41329, baseType: !510, size: 32, offset: 1088)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10293, file: !506, line: 41330, baseType: !510, size: 32, offset: 1120)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10293, file: !506, line: 41331, baseType: !510, size: 32, offset: 1152)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10293, file: !506, line: 41332, baseType: !510, size: 32, offset: 1184)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10293, file: !506, line: 41333, baseType: !510, size: 32, offset: 1216)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10293, file: !506, line: 41334, baseType: !510, size: 32, offset: 1248)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10293, file: !506, line: 41335, baseType: !510, size: 32, offset: 1280)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10293, file: !506, line: 41336, baseType: !510, size: 32, offset: 1312)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10293, file: !506, line: 41337, baseType: !510, size: 32, offset: 1344)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10293, file: !506, line: 41338, baseType: !581, size: 32, offset: 1376)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10293, file: !506, line: 41339, baseType: !510, size: 32, offset: 1408)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10293, file: !506, line: 41340, baseType: !510, size: 32, offset: 1440)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10293, file: !506, line: 41341, baseType: !510, size: 32, offset: 1472)
!10314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10315, size: 32)
!10315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10316)
!10316 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1175, line: 57, baseType: !10317)
!10317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1175, line: 49, size: 192, elements: !10318)
!10318 = !{!10319, !10320, !10321, !10322, !10323, !10324}
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10317, file: !1175, line: 51, baseType: !152, size: 32)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10317, file: !1175, line: 52, baseType: !152, size: 32, offset: 32)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10317, file: !1175, line: 53, baseType: !152, size: 32, offset: 64)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10317, file: !1175, line: 54, baseType: !152, size: 32, offset: 96)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10317, file: !1175, line: 55, baseType: !152, size: 32, offset: 128)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10317, file: !1175, line: 56, baseType: !152, size: 32, offset: 160)
!10325 = !{!10326, !10327}
!10326 = !DILocalVariable(name: "base", arg: 1, scope: !10287, file: !10288, line: 47, type: !10291)
!10327 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10287, file: !10288, line: 47, type: !10314)
!10328 = !DILocation(line: 0, scope: !10287)
!10329 = !DILocation(line: 49, column: 5, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10331, file: !10288, line: 49, column: 5)
!10331 = distinct !DILexicalBlock(scope: !10287, file: !10288, line: 49, column: 5)
!10332 = !DILocation(line: 49, column: 5, scope: !10331)
!10333 = !DILocation(line: 49, column: 5, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10330, file: !10288, line: 49, column: 5)
!10335 = !DILocation(line: 52, column: 5, scope: !10287)
!10336 = !DILocation(line: 52, column: 25, scope: !10287)
!10337 = !DILocation(line: 55, column: 5, scope: !10287)
!10338 = !DILocation(line: 60, column: 41, scope: !10287)
!10339 = !DILocation(line: 61, column: 41, scope: !10287)
!10340 = !DILocation(line: 62, column: 41, scope: !10287)
!10341 = !DILocation(line: 63, column: 41, scope: !10287)
!10342 = !DILocation(line: 60, column: 5, scope: !10287)
!10343 = !DILocation(line: 60, column: 25, scope: !10287)
!10344 = !DILocation(line: 61, column: 52, scope: !10287)
!10345 = !DILocation(line: 62, column: 52, scope: !10287)
!10346 = !DILocation(line: 63, column: 52, scope: !10287)
!10347 = !DILocation(line: 68, column: 5, scope: !10287)
!10348 = !DILocation(line: 68, column: 25, scope: !10287)
!10349 = !DILocation(line: 72, column: 40, scope: !10287)
!10350 = !DILocation(line: 72, column: 63, scope: !10287)
!10351 = !DILocation(line: 72, column: 5, scope: !10287)
!10352 = !DILocation(line: 73, column: 1, scope: !10287)
!10353 = distinct !DISubprogram(name: "UART_Deinit", scope: !10288, file: !10288, line: 82, type: !10354, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10356)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{null, !10291}
!10356 = !{!10357}
!10357 = !DILocalVariable(name: "base", arg: 1, scope: !10353, file: !10288, line: 82, type: !10291)
!10358 = !DILocation(line: 0, scope: !10353)
!10359 = !DILocation(line: 85, column: 5, scope: !10353)
!10360 = !DILocation(line: 85, column: 25, scope: !10353)
!10361 = !DILocation(line: 88, column: 26, scope: !10353)
!10362 = !DILocation(line: 89, column: 5, scope: !10353)
!10363 = !DILocation(line: 89, column: 26, scope: !10353)
!10364 = !DILocation(line: 90, column: 5, scope: !10353)
!10365 = !DILocation(line: 90, column: 26, scope: !10353)
!10366 = !DILocation(line: 93, column: 5, scope: !10353)
!10367 = !DILocation(line: 93, column: 26, scope: !10353)
!10368 = !DILocation(line: 94, column: 5, scope: !10353)
!10369 = !DILocation(line: 94, column: 26, scope: !10353)
!10370 = !DILocation(line: 95, column: 5, scope: !10353)
!10371 = !DILocation(line: 95, column: 26, scope: !10353)
!10372 = !DILocation(line: 96, column: 5, scope: !10353)
!10373 = !DILocation(line: 96, column: 26, scope: !10353)
!10374 = !DILocation(line: 97, column: 5, scope: !10353)
!10375 = !DILocation(line: 97, column: 26, scope: !10353)
!10376 = !DILocation(line: 98, column: 5, scope: !10353)
!10377 = !DILocation(line: 98, column: 26, scope: !10353)
!10378 = !DILocation(line: 99, column: 5, scope: !10353)
!10379 = !DILocation(line: 99, column: 26, scope: !10353)
!10380 = !DILocation(line: 103, column: 25, scope: !10353)
!10381 = !DILocation(line: 104, column: 5, scope: !10353)
!10382 = !DILocation(line: 104, column: 14, scope: !10353)
!10383 = !DILocation(line: 104, column: 34, scope: !10353)
!10384 = !DILocation(line: 104, column: 12, scope: !10353)
!10385 = distinct !{!10385, !10381, !10386}
!10386 = !DILocation(line: 104, column: 57, scope: !10353)
!10387 = !DILocation(line: 105, column: 1, scope: !10353)
!10388 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !10288, file: !10288, line: 113, type: !10389, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10391)
!10389 = !DISubroutineType(types: !10390)
!10390 = !{null, !10291, !152, !152}
!10391 = !{!10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10403, !10404}
!10392 = !DILocalVariable(name: "base", arg: 1, scope: !10388, file: !10288, line: 113, type: !10291)
!10393 = !DILocalVariable(name: "clockRate", arg: 2, scope: !10388, file: !10288, line: 113, type: !152)
!10394 = !DILocalVariable(name: "baudRate", arg: 3, scope: !10388, file: !10288, line: 113, type: !152)
!10395 = !DILocalVariable(name: "numerator", scope: !10388, file: !10288, line: 115, type: !152)
!10396 = !DILocalVariable(name: "denominator", scope: !10388, file: !10288, line: 116, type: !152)
!10397 = !DILocalVariable(name: "divisor", scope: !10388, file: !10288, line: 117, type: !152)
!10398 = !DILocalVariable(name: "refFreqDiv", scope: !10388, file: !10288, line: 118, type: !152)
!10399 = !DILocalVariable(name: "divider", scope: !10388, file: !10288, line: 119, type: !152)
!10400 = !DILocalVariable(name: "m", scope: !10401, file: !10288, line: 141, type: !152)
!10401 = distinct !DILexicalBlock(scope: !10402, file: !10288, line: 140, column: 5)
!10402 = distinct !DILexicalBlock(scope: !10388, file: !10288, line: 138, column: 9)
!10403 = !DILocalVariable(name: "n", scope: !10401, file: !10288, line: 142, type: !152)
!10404 = !DILocalVariable(name: "max", scope: !10401, file: !10288, line: 143, type: !152)
!10405 = !DILocation(line: 0, scope: !10388)
!10406 = !DILocation(line: 123, column: 28, scope: !10388)
!10407 = !DILocation(line: 126, column: 24, scope: !10388)
!10408 = !DILocation(line: 126, column: 5, scope: !10388)
!10409 = !DILocation(line: 129, column: 33, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10388, file: !10288, line: 127, column: 5)
!10411 = distinct !{!10411, !10408, !10412}
!10412 = !DILocation(line: 131, column: 5, scope: !10388)
!10413 = !DILocation(line: 133, column: 27, scope: !10388)
!10414 = !DILocation(line: 134, column: 35, scope: !10388)
!10415 = !DILocation(line: 138, column: 20, scope: !10402)
!10416 = !DILocation(line: 138, column: 48, scope: !10402)
!10417 = !DILocation(line: 141, column: 33, scope: !10401)
!10418 = !DILocation(line: 141, column: 38, scope: !10401)
!10419 = !DILocation(line: 141, column: 65, scope: !10401)
!10420 = !DILocation(line: 0, scope: !10401)
!10421 = !DILocation(line: 142, column: 35, scope: !10401)
!10422 = !DILocation(line: 142, column: 40, scope: !10401)
!10423 = !DILocation(line: 142, column: 61, scope: !10401)
!10424 = !DILocation(line: 143, column: 26, scope: !10401)
!10425 = !DILocation(line: 143, column: 24, scope: !10401)
!10426 = !DILocation(line: 144, column: 19, scope: !10401)
!10427 = !DILocation(line: 145, column: 21, scope: !10401)
!10428 = !DILocation(line: 146, column: 15, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10401, file: !10288, line: 146, column: 13)
!10430 = !DILocation(line: 146, column: 13, scope: !10401)
!10431 = !DILocation(line: 148, column: 15, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10401, file: !10288, line: 148, column: 13)
!10433 = !DILocation(line: 148, column: 13, scope: !10401)
!10434 = !DILocation(line: 150, column: 5, scope: !10401)
!10435 = !DILocation(line: 151, column: 26, scope: !10388)
!10436 = !DILocation(line: 151, column: 31, scope: !10388)
!10437 = !DILocation(line: 151, column: 52, scope: !10388)
!10438 = !DILocation(line: 153, column: 5, scope: !10388)
!10439 = !DILocation(line: 0, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10388, file: !10288, line: 154, column: 5)
!10441 = !DILocation(line: 180, column: 5, scope: !10388)
!10442 = !DILocation(line: 180, column: 25, scope: !10388)
!10443 = !DILocation(line: 181, column: 25, scope: !10388)
!10444 = !DILocation(line: 182, column: 27, scope: !10388)
!10445 = !DILocation(line: 182, column: 5, scope: !10388)
!10446 = !DILocation(line: 182, column: 25, scope: !10388)
!10447 = !DILocation(line: 183, column: 27, scope: !10388)
!10448 = !DILocation(line: 183, column: 5, scope: !10388)
!10449 = !DILocation(line: 183, column: 25, scope: !10388)
!10450 = !DILocation(line: 184, column: 28, scope: !10388)
!10451 = !DILocation(line: 184, column: 5, scope: !10388)
!10452 = !DILocation(line: 184, column: 26, scope: !10388)
!10453 = !DILocation(line: 185, column: 1, scope: !10388)
!10454 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !10288, file: !10288, line: 194, type: !10455, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10457)
!10455 = !DISubroutineType(types: !10456)
!10456 = !{null, !10291, !152, !145}
!10457 = !{!10458, !10459, !10460}
!10458 = !DILocalVariable(name: "base", arg: 1, scope: !10454, file: !10288, line: 194, type: !10291)
!10459 = !DILocalVariable(name: "direction", arg: 2, scope: !10454, file: !10288, line: 194, type: !152)
!10460 = !DILocalVariable(name: "invert", arg: 3, scope: !10454, file: !10288, line: 194, type: !145)
!10461 = !DILocation(line: 0, scope: !10454)
!10462 = !DILocation(line: 196, column: 5, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !10288, line: 196, column: 5)
!10464 = distinct !DILexicalBlock(scope: !10454, file: !10288, line: 196, column: 5)
!10465 = !DILocation(line: 196, column: 5, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10463, file: !10288, line: 196, column: 5)
!10467 = !DILocation(line: 198, column: 9, scope: !10454)
!10468 = !DILocation(line: 200, column: 13, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !10288, line: 199, column: 5)
!10470 = distinct !DILexicalBlock(scope: !10454, file: !10288, line: 198, column: 9)
!10471 = !DILocation(line: 201, column: 13, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10469, file: !10288, line: 200, column: 13)
!10473 = !DILocation(line: 201, column: 33, scope: !10472)
!10474 = !DILocation(line: 202, column: 13, scope: !10469)
!10475 = !DILocation(line: 203, column: 13, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10469, file: !10288, line: 202, column: 13)
!10477 = !DILocation(line: 203, column: 33, scope: !10476)
!10478 = !DILocation(line: 207, column: 13, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10470, file: !10288, line: 206, column: 5)
!10480 = !DILocation(line: 208, column: 13, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10479, file: !10288, line: 207, column: 13)
!10482 = !DILocation(line: 208, column: 33, scope: !10481)
!10483 = !DILocation(line: 209, column: 13, scope: !10479)
!10484 = !DILocation(line: 210, column: 13, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10479, file: !10288, line: 209, column: 13)
!10486 = !DILocation(line: 210, column: 33, scope: !10485)
!10487 = !DILocation(line: 212, column: 1, scope: !10454)
!10488 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !10288, file: !10288, line: 224, type: !10489, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10491)
!10489 = !DISubroutineType(types: !10490)
!10490 = !{null, !10291, !145}
!10491 = !{!10492, !10493}
!10492 = !DILocalVariable(name: "base", arg: 1, scope: !10488, file: !10288, line: 224, type: !10291)
!10493 = !DILocalVariable(name: "enable", arg: 2, scope: !10488, file: !10288, line: 224, type: !145)
!10494 = !DILocation(line: 0, scope: !10488)
!10495 = !DILocation(line: 0, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10488, file: !10288, line: 226, column: 9)
!10497 = !DILocation(line: 226, column: 9, scope: !10488)
!10498 = !DILocation(line: 230, column: 1, scope: !10488)
!10499 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !10288, file: !10288, line: 239, type: !10489, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10500)
!10500 = !{!10501, !10502}
!10501 = !DILocalVariable(name: "base", arg: 1, scope: !10499, file: !10288, line: 239, type: !10291)
!10502 = !DILocalVariable(name: "enable", arg: 2, scope: !10499, file: !10288, line: 239, type: !145)
!10503 = !DILocation(line: 0, scope: !10499)
!10504 = !DILocation(line: 0, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10499, file: !10288, line: 241, column: 9)
!10506 = !DILocation(line: 241, column: 9, scope: !10499)
!10507 = !DILocation(line: 245, column: 1, scope: !10499)
!10508 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !10288, file: !10288, line: 258, type: !10455, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10509)
!10509 = !{!10510, !10511, !10512, !10513, !10514}
!10510 = !DILocalVariable(name: "base", arg: 1, scope: !10508, file: !10288, line: 258, type: !10291)
!10511 = !DILocalVariable(name: "intSource", arg: 2, scope: !10508, file: !10288, line: 258, type: !152)
!10512 = !DILocalVariable(name: "enable", arg: 3, scope: !10508, file: !10288, line: 258, type: !145)
!10513 = !DILocalVariable(name: "uart_reg", scope: !10508, file: !10288, line: 260, type: !630)
!10514 = !DILocalVariable(name: "uart_mask", scope: !10508, file: !10288, line: 261, type: !152)
!10515 = !DILocation(line: 0, scope: !10508)
!10516 = !DILocation(line: 263, column: 29, scope: !10508)
!10517 = !DILocation(line: 263, column: 57, scope: !10508)
!10518 = !DILocation(line: 263, column: 44, scope: !10508)
!10519 = !DILocation(line: 263, column: 16, scope: !10508)
!10520 = !DILocation(line: 264, column: 34, scope: !10508)
!10521 = !DILocation(line: 264, column: 20, scope: !10508)
!10522 = !DILocation(line: 266, column: 9, scope: !10508)
!10523 = !DILocation(line: 267, column: 19, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10508, file: !10288, line: 266, column: 9)
!10525 = !DILocation(line: 267, column: 9, scope: !10524)
!10526 = !DILocation(line: 269, column: 22, scope: !10524)
!10527 = !DILocation(line: 269, column: 19, scope: !10524)
!10528 = !DILocation(line: 0, scope: !10524)
!10529 = !DILocation(line: 270, column: 1, scope: !10508)
!10530 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !10288, file: !10288, line: 299, type: !10531, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10533)
!10531 = !DISubroutineType(types: !10532)
!10532 = !{null, !10291, !152}
!10533 = !{!10534, !10535, !10536, !10537}
!10534 = !DILocalVariable(name: "base", arg: 1, scope: !10530, file: !10288, line: 299, type: !10291)
!10535 = !DILocalVariable(name: "flag", arg: 2, scope: !10530, file: !10288, line: 299, type: !152)
!10536 = !DILocalVariable(name: "uart_reg", scope: !10530, file: !10288, line: 301, type: !630)
!10537 = !DILocalVariable(name: "uart_mask", scope: !10530, file: !10288, line: 302, type: !152)
!10538 = !DILocation(line: 0, scope: !10530)
!10539 = !DILocation(line: 304, column: 29, scope: !10530)
!10540 = !DILocation(line: 304, column: 52, scope: !10530)
!10541 = !DILocation(line: 304, column: 44, scope: !10530)
!10542 = !DILocation(line: 304, column: 16, scope: !10530)
!10543 = !DILocation(line: 305, column: 29, scope: !10530)
!10544 = !DILocation(line: 305, column: 20, scope: !10530)
!10545 = !DILocation(line: 308, column: 15, scope: !10530)
!10546 = !DILocation(line: 309, column: 1, scope: !10530)
!10547 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !10288, file: !10288, line: 322, type: !10455, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10548)
!10548 = !{!10549, !10550, !10551, !10552, !10553}
!10549 = !DILocalVariable(name: "base", arg: 1, scope: !10547, file: !10288, line: 322, type: !10291)
!10550 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !10547, file: !10288, line: 322, type: !152)
!10551 = !DILocalVariable(name: "enable", arg: 3, scope: !10547, file: !10288, line: 322, type: !145)
!10552 = !DILocalVariable(name: "uart_reg", scope: !10547, file: !10288, line: 324, type: !630)
!10553 = !DILocalVariable(name: "uart_mask", scope: !10547, file: !10288, line: 325, type: !152)
!10554 = !DILocation(line: 0, scope: !10547)
!10555 = !DILocation(line: 327, column: 29, scope: !10547)
!10556 = !DILocation(line: 327, column: 57, scope: !10547)
!10557 = !DILocation(line: 327, column: 44, scope: !10547)
!10558 = !DILocation(line: 327, column: 16, scope: !10547)
!10559 = !DILocation(line: 328, column: 34, scope: !10547)
!10560 = !DILocation(line: 328, column: 20, scope: !10547)
!10561 = !DILocation(line: 329, column: 9, scope: !10547)
!10562 = !DILocation(line: 330, column: 19, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10547, file: !10288, line: 329, column: 9)
!10564 = !DILocation(line: 330, column: 9, scope: !10563)
!10565 = !DILocation(line: 332, column: 22, scope: !10563)
!10566 = !DILocation(line: 332, column: 19, scope: !10563)
!10567 = !DILocation(line: 0, scope: !10563)
!10568 = !DILocation(line: 333, column: 1, scope: !10547)
!10569 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !10288, file: !10288, line: 345, type: !10489, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10570)
!10570 = !{!10571, !10572}
!10571 = !DILocalVariable(name: "base", arg: 1, scope: !10569, file: !10288, line: 345, type: !10291)
!10572 = !DILocalVariable(name: "enable", arg: 2, scope: !10569, file: !10288, line: 345, type: !145)
!10573 = !DILocation(line: 0, scope: !10569)
!10574 = !DILocation(line: 0, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10569, file: !10288, line: 347, column: 9)
!10576 = !DILocation(line: 347, column: 9, scope: !10569)
!10577 = !DILocation(line: 351, column: 1, scope: !10569)
!10578 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !10288, file: !10288, line: 362, type: !10489, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10579)
!10579 = !{!10580, !10581}
!10580 = !DILocalVariable(name: "base", arg: 1, scope: !10578, file: !10288, line: 362, type: !10291)
!10581 = !DILocalVariable(name: "enable", arg: 2, scope: !10578, file: !10288, line: 362, type: !145)
!10582 = !DILocation(line: 0, scope: !10578)
!10583 = !DILocation(line: 0, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10578, file: !10288, line: 364, column: 9)
!10585 = !DILocation(line: 364, column: 9, scope: !10578)
!10586 = !DILocation(line: 368, column: 1, scope: !10578)
!10587 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !10288, file: !10288, line: 379, type: !10489, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10588)
!10588 = !{!10589, !10590}
!10589 = !DILocalVariable(name: "base", arg: 1, scope: !10587, file: !10288, line: 379, type: !10291)
!10590 = !DILocalVariable(name: "active", arg: 2, scope: !10587, file: !10288, line: 379, type: !145)
!10591 = !DILocation(line: 0, scope: !10587)
!10592 = !DILocation(line: 0, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10587, file: !10288, line: 381, column: 9)
!10594 = !DILocation(line: 381, column: 9, scope: !10587)
!10595 = !DILocation(line: 385, column: 1, scope: !10587)
!10596 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !10288, file: !10288, line: 394, type: !10531, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10597)
!10597 = !{!10598, !10599}
!10598 = !DILocalVariable(name: "base", arg: 1, scope: !10596, file: !10288, line: 394, type: !10291)
!10599 = !DILocalVariable(name: "mode", arg: 2, scope: !10596, file: !10288, line: 394, type: !152)
!10600 = !DILocation(line: 0, scope: !10596)
!10601 = !DILocation(line: 396, column: 5, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !10288, line: 396, column: 5)
!10603 = distinct !DILexicalBlock(scope: !10596, file: !10288, line: 396, column: 5)
!10604 = !DILocation(line: 396, column: 5, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10602, file: !10288, line: 396, column: 5)
!10606 = !DILocation(line: 0, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10596, file: !10288, line: 398, column: 9)
!10608 = !DILocation(line: 398, column: 9, scope: !10596)
!10609 = !DILocation(line: 402, column: 1, scope: !10596)
!10610 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !10288, file: !10288, line: 412, type: !10489, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10611)
!10611 = !{!10612, !10613}
!10612 = !DILocalVariable(name: "base", arg: 1, scope: !10610, file: !10288, line: 412, type: !10291)
!10613 = !DILocalVariable(name: "active", arg: 2, scope: !10610, file: !10288, line: 412, type: !145)
!10614 = !DILocation(line: 0, scope: !10610)
!10615 = !DILocation(line: 0, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10610, file: !10288, line: 414, column: 9)
!10617 = !DILocation(line: 414, column: 9, scope: !10610)
!10618 = !DILocation(line: 418, column: 1, scope: !10610)
!10619 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !10288, file: !10288, line: 427, type: !10489, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10620)
!10620 = !{!10621, !10622}
!10621 = !DILocalVariable(name: "base", arg: 1, scope: !10619, file: !10288, line: 427, type: !10291)
!10622 = !DILocalVariable(name: "active", arg: 2, scope: !10619, file: !10288, line: 427, type: !145)
!10623 = !DILocation(line: 0, scope: !10619)
!10624 = !DILocation(line: 0, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10619, file: !10288, line: 429, column: 9)
!10626 = !DILocation(line: 429, column: 9, scope: !10619)
!10627 = !DILocation(line: 433, column: 1, scope: !10619)
!10628 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !10288, file: !10288, line: 442, type: !10489, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10629)
!10629 = !{!10630, !10631}
!10630 = !DILocalVariable(name: "base", arg: 1, scope: !10628, file: !10288, line: 442, type: !10291)
!10631 = !DILocalVariable(name: "active", arg: 2, scope: !10628, file: !10288, line: 442, type: !145)
!10632 = !DILocation(line: 0, scope: !10628)
!10633 = !DILocation(line: 0, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10628, file: !10288, line: 444, column: 9)
!10635 = !DILocation(line: 444, column: 9, scope: !10628)
!10636 = !DILocation(line: 448, column: 1, scope: !10628)
!10637 = distinct !DISubprogram(name: "UART_Putchar9", scope: !10288, file: !10288, line: 460, type: !10638, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10640)
!10638 = !DISubroutineType(types: !10639)
!10639 = !{null, !10291, !197}
!10640 = !{!10641, !10642}
!10641 = !DILocalVariable(name: "base", arg: 1, scope: !10637, file: !10288, line: 460, type: !10291)
!10642 = !DILocalVariable(name: "data", arg: 2, scope: !10637, file: !10288, line: 460, type: !197)
!10643 = !DILocation(line: 0, scope: !10637)
!10644 = !DILocation(line: 462, column: 5, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !10288, line: 462, column: 5)
!10646 = distinct !DILexicalBlock(scope: !10637, file: !10288, line: 462, column: 5)
!10647 = !DILocation(line: 462, column: 5, scope: !10646)
!10648 = !DILocation(line: 462, column: 5, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10645, file: !10288, line: 462, column: 5)
!10650 = !DILocation(line: 0, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10637, file: !10288, line: 464, column: 9)
!10652 = !DILocation(line: 464, column: 9, scope: !10637)
!10653 = !DILocation(line: 468, column: 33, scope: !10637)
!10654 = !DILocation(line: 468, column: 5, scope: !10637)
!10655 = !DILocation(line: 468, column: 25, scope: !10637)
!10656 = !DILocation(line: 469, column: 1, scope: !10637)
!10657 = distinct !DISubprogram(name: "UART_Getchar9", scope: !10288, file: !10288, line: 478, type: !10658, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10660)
!10658 = !DISubroutineType(types: !10659)
!10659 = !{!197, !10291}
!10660 = !{!10661, !10662}
!10661 = !DILocalVariable(name: "base", arg: 1, scope: !10657, file: !10288, line: 478, type: !10291)
!10662 = !DILocalVariable(name: "rxData", scope: !10657, file: !10288, line: 480, type: !197)
!10663 = !DILocation(line: 0, scope: !10657)
!10664 = !DILocation(line: 480, column: 23, scope: !10657)
!10665 = !DILocation(line: 482, column: 9, scope: !10657)
!10666 = !DILocation(line: 491, column: 5, scope: !10657)
!10667 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !10288, file: !10288, line: 501, type: !10489, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10668)
!10668 = !{!10669, !10670}
!10669 = !DILocalVariable(name: "base", arg: 1, scope: !10667, file: !10288, line: 501, type: !10291)
!10670 = !DILocalVariable(name: "enable", arg: 2, scope: !10667, file: !10288, line: 501, type: !145)
!10671 = !DILocation(line: 0, scope: !10667)
!10672 = !DILocation(line: 0, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10667, file: !10288, line: 503, column: 9)
!10674 = !DILocation(line: 503, column: 9, scope: !10667)
!10675 = !DILocation(line: 507, column: 1, scope: !10667)
!10676 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !10288, file: !10288, line: 516, type: !10489, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10677)
!10677 = !{!10678, !10679}
!10678 = !DILocalVariable(name: "base", arg: 1, scope: !10676, file: !10288, line: 516, type: !10291)
!10679 = !DILocalVariable(name: "enable", arg: 2, scope: !10676, file: !10288, line: 516, type: !145)
!10680 = !DILocation(line: 0, scope: !10676)
!10681 = !DILocation(line: 0, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10676, file: !10288, line: 518, column: 9)
!10683 = !DILocation(line: 518, column: 9, scope: !10676)
!10684 = !DILocation(line: 522, column: 1, scope: !10676)
!10685 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !10288, file: !10288, line: 534, type: !10489, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10686)
!10686 = !{!10687, !10688}
!10687 = !DILocalVariable(name: "base", arg: 1, scope: !10685, file: !10288, line: 534, type: !10291)
!10688 = !DILocalVariable(name: "enable", arg: 2, scope: !10685, file: !10288, line: 534, type: !145)
!10689 = !DILocation(line: 0, scope: !10685)
!10690 = !DILocation(line: 0, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10685, file: !10288, line: 536, column: 9)
!10692 = !DILocation(line: 536, column: 9, scope: !10685)
!10693 = !DILocation(line: 540, column: 1, scope: !10685)
!10694 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !10288, file: !10288, line: 550, type: !10531, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10695)
!10695 = !{!10696, !10697}
!10696 = !DILocalVariable(name: "base", arg: 1, scope: !10694, file: !10288, line: 550, type: !10291)
!10697 = !DILocalVariable(name: "voteClock", arg: 2, scope: !10694, file: !10288, line: 550, type: !152)
!10698 = !DILocation(line: 0, scope: !10694)
!10699 = !DILocation(line: 552, column: 5, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10701, file: !10288, line: 552, column: 5)
!10701 = distinct !DILexicalBlock(scope: !10694, file: !10288, line: 552, column: 5)
!10702 = !DILocation(line: 552, column: 5, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10700, file: !10288, line: 552, column: 5)
!10704 = !DILocation(line: 0, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10694, file: !10288, line: 555, column: 9)
!10706 = !DILocation(line: 555, column: 9, scope: !10694)
!10707 = !DILocation(line: 559, column: 1, scope: !10694)
!10708 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !10288, file: !10288, line: 571, type: !10489, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10709)
!10709 = !{!10710, !10711}
!10710 = !DILocalVariable(name: "base", arg: 1, scope: !10708, file: !10288, line: 571, type: !10291)
!10711 = !DILocalVariable(name: "enable", arg: 2, scope: !10708, file: !10288, line: 571, type: !145)
!10712 = !DILocation(line: 0, scope: !10708)
!10713 = !DILocation(line: 0, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10708, file: !10288, line: 573, column: 9)
!10715 = !DILocation(line: 573, column: 9, scope: !10708)
!10716 = !DILocation(line: 577, column: 1, scope: !10708)
!10717 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !10288, file: !10288, line: 587, type: !10489, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10718)
!10718 = !{!10719, !10720}
!10719 = !DILocalVariable(name: "base", arg: 1, scope: !10717, file: !10288, line: 587, type: !10291)
!10720 = !DILocalVariable(name: "active", arg: 2, scope: !10717, file: !10288, line: 587, type: !145)
!10721 = !DILocation(line: 0, scope: !10717)
!10722 = !DILocation(line: 0, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10717, file: !10288, line: 589, column: 9)
!10724 = !DILocation(line: 589, column: 9, scope: !10717)
!10725 = !DILocation(line: 593, column: 1, scope: !10717)
!10726 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !10288, file: !10288, line: 602, type: !10489, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10727)
!10727 = !{!10728, !10729}
!10728 = !DILocalVariable(name: "base", arg: 1, scope: !10726, file: !10288, line: 602, type: !10291)
!10729 = !DILocalVariable(name: "enable", arg: 2, scope: !10726, file: !10288, line: 602, type: !145)
!10730 = !DILocation(line: 0, scope: !10726)
!10731 = !DILocation(line: 0, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10726, file: !10288, line: 604, column: 9)
!10733 = !DILocation(line: 604, column: 9, scope: !10726)
!10734 = !DILocation(line: 608, column: 1, scope: !10726)
!10735 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !10736, file: !10736, line: 42, type: !10737, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10753)
!10736 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10737 = !DISubroutineType(types: !10738)
!10738 = !{!152, !10739}
!10739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10740, size: 32)
!10740 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !506, line: 20831, baseType: !10741)
!10741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 20820, size: 320, elements: !10742)
!10742 = !{!10743, !10744, !10745, !10746, !10747, !10748, !10749, !10750, !10751, !10752}
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !10741, file: !506, line: 20821, baseType: !510, size: 32)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !10741, file: !506, line: 20822, baseType: !510, size: 32, offset: 32)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !10741, file: !506, line: 20823, baseType: !510, size: 32, offset: 64)
!10746 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !10741, file: !506, line: 20824, baseType: !510, size: 32, offset: 96)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !10741, file: !506, line: 20825, baseType: !510, size: 32, offset: 128)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !10741, file: !506, line: 20826, baseType: !510, size: 32, offset: 160)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !10741, file: !506, line: 20827, baseType: !510, size: 32, offset: 192)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10741, file: !506, line: 20828, baseType: !581, size: 32, offset: 224)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10741, file: !506, line: 20829, baseType: !581, size: 32, offset: 256)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !10741, file: !506, line: 20830, baseType: !581, size: 32, offset: 288)
!10753 = !{!10754, !10755, !10756, !10757, !10758}
!10754 = !DILocalVariable(name: "base", arg: 1, scope: !10735, file: !10736, line: 42, type: !10739)
!10755 = !DILocalVariable(name: "root", scope: !10735, file: !10736, line: 44, type: !152)
!10756 = !DILocalVariable(name: "hz", scope: !10735, file: !10736, line: 45, type: !152)
!10757 = !DILocalVariable(name: "pre", scope: !10735, file: !10736, line: 46, type: !152)
!10758 = !DILocalVariable(name: "post", scope: !10735, file: !10736, line: 46, type: !152)
!10759 = !DILocation(line: 0, scope: !10735)
!10760 = !DILocation(line: 46, column: 2, scope: !10735)
!10761 = !DILocation(line: 48, column: 10, scope: !10735)
!10762 = !DILocation(line: 48, column: 2, scope: !10735)
!10763 = !DILocation(line: 56, column: 3, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10735, file: !10736, line: 48, column: 26)
!10765 = !DILocation(line: 0, scope: !10764)
!10766 = !DILocation(line: 61, column: 2, scope: !10735)
!10767 = !DILocation(line: 66, column: 8, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10735, file: !10736, line: 61, column: 16)
!10769 = !DILocation(line: 67, column: 3, scope: !10768)
!10770 = !DILocation(line: 0, scope: !10768)
!10771 = !DILocation(line: 72, column: 15, scope: !10735)
!10772 = !DILocation(line: 72, column: 19, scope: !10735)
!10773 = !DILocation(line: 72, column: 12, scope: !10735)
!10774 = !DILocation(line: 72, column: 27, scope: !10735)
!10775 = !DILocation(line: 72, column: 32, scope: !10735)
!10776 = !DILocation(line: 72, column: 24, scope: !10735)
!10777 = !DILocation(line: 72, column: 2, scope: !10735)
!10778 = !DILocation(line: 73, column: 1, scope: !10735)
!10779 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !222, file: !222, line: 368, type: !10780, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10782)
!10780 = !DISubroutineType(types: !10781)
!10781 = !{!152, !2758, !152}
!10782 = !{!10783, !10784}
!10783 = !DILocalVariable(name: "base", arg: 1, scope: !10779, file: !222, line: 368, type: !2758)
!10784 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10779, file: !222, line: 368, type: !152)
!10785 = !DILocation(line: 0, scope: !10779)
!10786 = !DILocation(line: 370, column: 13, scope: !10779)
!10787 = !DILocation(line: 370, column: 58, scope: !10779)
!10788 = !DILocation(line: 370, column: 5, scope: !10779)
!10789 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !10736, file: !10736, line: 81, type: !10790, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10810)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!152, !10792}
!10792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10793, size: 32)
!10793 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !506, line: 12462, baseType: !10794)
!10794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 12450, size: 544, elements: !10795)
!10795 = !{!10796, !10797, !10798, !10799, !10800, !10801, !10802, !10803, !10804, !10805, !10809}
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !10794, file: !506, line: 12451, baseType: !581, size: 32)
!10797 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !10794, file: !506, line: 12452, baseType: !510, size: 32, offset: 32)
!10798 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !10794, file: !506, line: 12453, baseType: !510, size: 32, offset: 64)
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !10794, file: !506, line: 12454, baseType: !510, size: 32, offset: 96)
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !10794, file: !506, line: 12455, baseType: !510, size: 32, offset: 128)
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !10794, file: !506, line: 12456, baseType: !510, size: 32, offset: 160)
!10802 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !10794, file: !506, line: 12457, baseType: !510, size: 32, offset: 192)
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !10794, file: !506, line: 12458, baseType: !510, size: 32, offset: 224)
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !10794, file: !506, line: 12459, baseType: !510, size: 32, offset: 256)
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10794, file: !506, line: 12460, baseType: !10806, size: 224, offset: 288)
!10806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 224, elements: !10807)
!10807 = !{!10808}
!10808 = !DISubrange(count: 28)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !10794, file: !506, line: 12461, baseType: !510, size: 32, offset: 512)
!10810 = !{!10811, !10812, !10813, !10814, !10815}
!10811 = !DILocalVariable(name: "base", arg: 1, scope: !10789, file: !10736, line: 81, type: !10792)
!10812 = !DILocalVariable(name: "root", scope: !10789, file: !10736, line: 83, type: !152)
!10813 = !DILocalVariable(name: "hz", scope: !10789, file: !10736, line: 84, type: !152)
!10814 = !DILocalVariable(name: "pre", scope: !10789, file: !10736, line: 85, type: !152)
!10815 = !DILocalVariable(name: "post", scope: !10789, file: !10736, line: 85, type: !152)
!10816 = !DILocation(line: 0, scope: !10789)
!10817 = !DILocation(line: 85, column: 2, scope: !10789)
!10818 = !DILocation(line: 87, column: 10, scope: !10789)
!10819 = !DILocation(line: 87, column: 2, scope: !10789)
!10820 = !DILocation(line: 95, column: 3, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10789, file: !10736, line: 87, column: 26)
!10822 = !DILocation(line: 0, scope: !10821)
!10823 = !DILocation(line: 100, column: 2, scope: !10789)
!10824 = !DILocation(line: 105, column: 8, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10789, file: !10736, line: 100, column: 16)
!10826 = !DILocation(line: 106, column: 3, scope: !10825)
!10827 = !DILocation(line: 0, scope: !10825)
!10828 = !DILocation(line: 111, column: 15, scope: !10789)
!10829 = !DILocation(line: 111, column: 19, scope: !10789)
!10830 = !DILocation(line: 111, column: 12, scope: !10789)
!10831 = !DILocation(line: 111, column: 27, scope: !10789)
!10832 = !DILocation(line: 111, column: 32, scope: !10789)
!10833 = !DILocation(line: 111, column: 24, scope: !10789)
!10834 = !DILocation(line: 111, column: 2, scope: !10789)
!10835 = !DILocation(line: 112, column: 1, scope: !10789)
!10836 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !10736, file: !10736, line: 120, type: !10837, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10881)
!10837 = !DISubroutineType(types: !10838)
!10838 = !{!152, !10839}
!10839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10840, size: 32)
!10840 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !506, line: 3477, baseType: !10841)
!10841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 3446, size: 20256, elements: !10842)
!10842 = !{!10843, !10844, !10845, !10846, !10848, !10849, !10850, !10851, !10852, !10853, !10854, !10855, !10856, !10857, !10858, !10859, !10861, !10862, !10863, !10864, !10865, !10875, !10877, !10879, !10880}
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !10841, file: !506, line: 3447, baseType: !510, size: 32)
!10844 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !10841, file: !506, line: 3448, baseType: !510, size: 32, offset: 32)
!10845 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !10841, file: !506, line: 3449, baseType: !510, size: 32, offset: 64)
!10846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10841, file: !506, line: 3450, baseType: !10847, size: 32, offset: 96)
!10847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 32, elements: !1665)
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !10841, file: !506, line: 3451, baseType: !510, size: 32, offset: 128)
!10849 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !10841, file: !506, line: 3452, baseType: !510, size: 32, offset: 160)
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !10841, file: !506, line: 3453, baseType: !510, size: 32, offset: 192)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !10841, file: !506, line: 3454, baseType: !510, size: 32, offset: 224)
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !10841, file: !506, line: 3455, baseType: !510, size: 32, offset: 256)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !10841, file: !506, line: 3456, baseType: !510, size: 32, offset: 288)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !10841, file: !506, line: 3457, baseType: !510, size: 32, offset: 320)
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !10841, file: !506, line: 3458, baseType: !510, size: 32, offset: 352)
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !10841, file: !506, line: 3459, baseType: !510, size: 32, offset: 384)
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !10841, file: !506, line: 3460, baseType: !510, size: 32, offset: 416)
!10858 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !10841, file: !506, line: 3461, baseType: !581, size: 32, offset: 448)
!10859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10841, file: !506, line: 3462, baseType: !10860, size: 64, offset: 480)
!10860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 64, elements: !1611)
!10861 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !10841, file: !506, line: 3463, baseType: !581, size: 32, offset: 544)
!10862 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !10841, file: !506, line: 3464, baseType: !510, size: 32, offset: 576)
!10863 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !10841, file: !506, line: 3465, baseType: !581, size: 32, offset: 608)
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10841, file: !506, line: 3466, baseType: !567, size: 384, offset: 640)
!10865 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !10841, file: !506, line: 3472, baseType: !10866, size: 8192, offset: 1024)
!10866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10867, size: 8192, elements: !10873)
!10867 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10841, file: !506, line: 3467, size: 128, elements: !10868)
!10868 = !{!10869, !10870, !10871, !10872}
!10869 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !10867, file: !506, line: 3468, baseType: !510, size: 32)
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !10867, file: !506, line: 3469, baseType: !510, size: 32, offset: 32)
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !10867, file: !506, line: 3470, baseType: !510, size: 32, offset: 64)
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !10867, file: !506, line: 3471, baseType: !510, size: 32, offset: 96)
!10873 = !{!10874}
!10874 = !DISubrange(count: 64)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10841, file: !506, line: 3473, baseType: !10876, size: 8192, offset: 9216)
!10876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 8192, elements: !709)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !10841, file: !506, line: 3474, baseType: !10878, size: 2048, offset: 17408)
!10878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 2048, elements: !10873)
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !10841, file: !506, line: 3475, baseType: !2659, size: 768, offset: 19456)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !10841, file: !506, line: 3476, baseType: !510, size: 32, offset: 20224)
!10881 = !{!10882, !10883, !10884, !10885, !10886}
!10882 = !DILocalVariable(name: "base", arg: 1, scope: !10836, file: !10736, line: 120, type: !10839)
!10883 = !DILocalVariable(name: "root", scope: !10836, file: !10736, line: 122, type: !152)
!10884 = !DILocalVariable(name: "hz", scope: !10836, file: !10736, line: 123, type: !152)
!10885 = !DILocalVariable(name: "pre", scope: !10836, file: !10736, line: 124, type: !152)
!10886 = !DILocalVariable(name: "post", scope: !10836, file: !10736, line: 124, type: !152)
!10887 = !DILocation(line: 0, scope: !10836)
!10888 = !DILocation(line: 124, column: 2, scope: !10836)
!10889 = !DILocation(line: 126, column: 10, scope: !10836)
!10890 = !DILocation(line: 126, column: 2, scope: !10836)
!10891 = !DILocation(line: 134, column: 3, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10836, file: !10736, line: 126, column: 26)
!10893 = !DILocation(line: 0, scope: !10892)
!10894 = !DILocation(line: 139, column: 2, scope: !10836)
!10895 = !DILocation(line: 144, column: 8, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10836, file: !10736, line: 139, column: 16)
!10897 = !DILocation(line: 144, column: 45, scope: !10896)
!10898 = !DILocation(line: 145, column: 3, scope: !10896)
!10899 = !DILocation(line: 147, column: 8, scope: !10896)
!10900 = !DILocation(line: 148, column: 3, scope: !10896)
!10901 = !DILocation(line: 0, scope: !10896)
!10902 = !DILocation(line: 153, column: 15, scope: !10836)
!10903 = !DILocation(line: 153, column: 19, scope: !10836)
!10904 = !DILocation(line: 153, column: 12, scope: !10836)
!10905 = !DILocation(line: 153, column: 27, scope: !10836)
!10906 = !DILocation(line: 153, column: 32, scope: !10836)
!10907 = !DILocation(line: 153, column: 24, scope: !10836)
!10908 = !DILocation(line: 153, column: 2, scope: !10836)
!10909 = !DILocation(line: 154, column: 1, scope: !10836)
!10910 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !10736, file: !10736, line: 162, type: !10911, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10927)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!152, !10913}
!10913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10914, size: 32)
!10914 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !506, line: 21082, baseType: !10915)
!10915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 21072, size: 144, elements: !10916)
!10916 = !{!10917, !10918, !10920, !10921, !10922, !10923, !10924, !10925, !10926}
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !10915, file: !506, line: 21073, baseType: !624, size: 16)
!10918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10915, file: !506, line: 21074, baseType: !10919, size: 16, offset: 16)
!10919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 16, elements: !747)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !10915, file: !506, line: 21075, baseType: !624, size: 16, offset: 32)
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10915, file: !506, line: 21076, baseType: !10919, size: 16, offset: 48)
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !10915, file: !506, line: 21077, baseType: !624, size: 16, offset: 64)
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10915, file: !506, line: 21078, baseType: !10919, size: 16, offset: 80)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !10915, file: !506, line: 21079, baseType: !624, size: 16, offset: 96)
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10915, file: !506, line: 21080, baseType: !10919, size: 16, offset: 112)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !10915, file: !506, line: 21081, baseType: !624, size: 16, offset: 128)
!10927 = !{!10928, !10929, !10930, !10931, !10932}
!10928 = !DILocalVariable(name: "base", arg: 1, scope: !10910, file: !10736, line: 162, type: !10913)
!10929 = !DILocalVariable(name: "root", scope: !10910, file: !10736, line: 164, type: !152)
!10930 = !DILocalVariable(name: "hz", scope: !10910, file: !10736, line: 165, type: !152)
!10931 = !DILocalVariable(name: "pre", scope: !10910, file: !10736, line: 166, type: !152)
!10932 = !DILocalVariable(name: "post", scope: !10910, file: !10736, line: 166, type: !152)
!10933 = !DILocation(line: 0, scope: !10910)
!10934 = !DILocation(line: 166, column: 2, scope: !10910)
!10935 = !DILocation(line: 168, column: 10, scope: !10910)
!10936 = !DILocation(line: 168, column: 2, scope: !10910)
!10937 = !DILocation(line: 0, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10910, file: !10736, line: 168, column: 26)
!10939 = !DILocation(line: 189, column: 2, scope: !10910)
!10940 = !DILocation(line: 194, column: 8, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10910, file: !10736, line: 189, column: 16)
!10942 = !DILocation(line: 194, column: 45, scope: !10941)
!10943 = !DILocation(line: 195, column: 3, scope: !10941)
!10944 = !DILocation(line: 0, scope: !10941)
!10945 = !DILocation(line: 200, column: 15, scope: !10910)
!10946 = !DILocation(line: 200, column: 19, scope: !10910)
!10947 = !DILocation(line: 200, column: 12, scope: !10910)
!10948 = !DILocation(line: 200, column: 27, scope: !10910)
!10949 = !DILocation(line: 200, column: 32, scope: !10910)
!10950 = !DILocation(line: 200, column: 24, scope: !10910)
!10951 = !DILocation(line: 200, column: 2, scope: !10910)
!10952 = !DILocation(line: 201, column: 1, scope: !10910)
!10953 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !10736, file: !10736, line: 209, type: !10954, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10979)
!10954 = !DISubroutineType(types: !10955)
!10955 = !{!152, !10956}
!10956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10957, size: 32)
!10957 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !506, line: 41342, baseType: !10958)
!10958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 41322, size: 1504, elements: !10959)
!10959 = !{!10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972, !10973, !10974, !10975, !10976, !10977, !10978}
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10958, file: !506, line: 41323, baseType: !581, size: 32)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10958, file: !506, line: 41324, baseType: !1345, size: 480, offset: 32)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10958, file: !506, line: 41325, baseType: !510, size: 32, offset: 512)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10958, file: !506, line: 41326, baseType: !1345, size: 480, offset: 544)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10958, file: !506, line: 41327, baseType: !510, size: 32, offset: 1024)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10958, file: !506, line: 41328, baseType: !510, size: 32, offset: 1056)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10958, file: !506, line: 41329, baseType: !510, size: 32, offset: 1088)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10958, file: !506, line: 41330, baseType: !510, size: 32, offset: 1120)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10958, file: !506, line: 41331, baseType: !510, size: 32, offset: 1152)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10958, file: !506, line: 41332, baseType: !510, size: 32, offset: 1184)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10958, file: !506, line: 41333, baseType: !510, size: 32, offset: 1216)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10958, file: !506, line: 41334, baseType: !510, size: 32, offset: 1248)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10958, file: !506, line: 41335, baseType: !510, size: 32, offset: 1280)
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10958, file: !506, line: 41336, baseType: !510, size: 32, offset: 1312)
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10958, file: !506, line: 41337, baseType: !510, size: 32, offset: 1344)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10958, file: !506, line: 41338, baseType: !581, size: 32, offset: 1376)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10958, file: !506, line: 41339, baseType: !510, size: 32, offset: 1408)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10958, file: !506, line: 41340, baseType: !510, size: 32, offset: 1440)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10958, file: !506, line: 41341, baseType: !510, size: 32, offset: 1472)
!10979 = !{!10980, !10981, !10982, !10983, !10984}
!10980 = !DILocalVariable(name: "base", arg: 1, scope: !10953, file: !10736, line: 209, type: !10956)
!10981 = !DILocalVariable(name: "root", scope: !10953, file: !10736, line: 211, type: !152)
!10982 = !DILocalVariable(name: "hz", scope: !10953, file: !10736, line: 212, type: !152)
!10983 = !DILocalVariable(name: "pre", scope: !10953, file: !10736, line: 213, type: !152)
!10984 = !DILocalVariable(name: "post", scope: !10953, file: !10736, line: 213, type: !152)
!10985 = !DILocation(line: 0, scope: !10953)
!10986 = !DILocation(line: 213, column: 2, scope: !10953)
!10987 = !DILocation(line: 215, column: 10, scope: !10953)
!10988 = !DILocation(line: 215, column: 2, scope: !10953)
!10989 = !DILocation(line: 223, column: 3, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10953, file: !10736, line: 215, column: 26)
!10991 = !DILocation(line: 227, column: 3, scope: !10990)
!10992 = !DILocation(line: 231, column: 3, scope: !10990)
!10993 = !DILocation(line: 235, column: 3, scope: !10990)
!10994 = !DILocation(line: 239, column: 3, scope: !10990)
!10995 = !DILocation(line: 243, column: 3, scope: !10990)
!10996 = !DILocation(line: 0, scope: !10990)
!10997 = !DILocation(line: 248, column: 2, scope: !10953)
!10998 = !DILocation(line: 253, column: 8, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10953, file: !10736, line: 248, column: 16)
!11000 = !DILocation(line: 253, column: 45, scope: !10999)
!11001 = !DILocation(line: 254, column: 3, scope: !10999)
!11002 = !DILocation(line: 256, column: 8, scope: !10999)
!11003 = !DILocation(line: 257, column: 3, scope: !10999)
!11004 = !DILocation(line: 0, scope: !10999)
!11005 = !DILocation(line: 262, column: 15, scope: !10953)
!11006 = !DILocation(line: 262, column: 19, scope: !10953)
!11007 = !DILocation(line: 262, column: 12, scope: !10953)
!11008 = !DILocation(line: 262, column: 27, scope: !10953)
!11009 = !DILocation(line: 262, column: 32, scope: !10953)
!11010 = !DILocation(line: 262, column: 24, scope: !10953)
!11011 = !DILocation(line: 262, column: 2, scope: !10953)
!11012 = !DILocation(line: 263, column: 1, scope: !10953)
!11013 = distinct !DISubprogram(name: "z_device_state_init", scope: !11014, file: !11014, line: 23, type: !2909, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11015)
!11014 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11015 = !{!11016}
!11016 = !DILocalVariable(name: "dev", scope: !11013, file: !11014, line: 25, type: !11017)
!11017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11018, size: 32)
!11018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11019)
!11019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !11020)
!11020 = !{!11021, !11022, !11023, !11024, !11030, !11031}
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11019, file: !884, line: 380, baseType: !118, size: 32)
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11019, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11019, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11019, file: !884, line: 386, baseType: !11025, size: 32, offset: 96)
!11025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11026, size: 32)
!11026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !11027)
!11027 = !{!11028, !11029}
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11026, file: !884, line: 359, baseType: !195, size: 8)
!11029 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11026, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11019, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11019, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!11032 = !DILocation(line: 0, scope: !11013)
!11033 = !DILocation(line: 31, column: 1, scope: !11013)
!11034 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11014, file: !11014, line: 33, type: !11035, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11037)
!11035 = !DISubroutineType(types: !11036)
!11036 = !{!11017, !118}
!11037 = !{!11038, !11039}
!11038 = !DILocalVariable(name: "name", arg: 1, scope: !11034, file: !11014, line: 33, type: !118)
!11039 = !DILocalVariable(name: "dev", scope: !11034, file: !11014, line: 35, type: !11017)
!11040 = !DILocation(line: 0, scope: !11034)
!11041 = !DILocation(line: 40, column: 12, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11034, file: !11014, line: 40, column: 6)
!11043 = !DILocation(line: 40, column: 21, scope: !11042)
!11044 = !DILocation(line: 40, column: 25, scope: !11042)
!11045 = !DILocation(line: 40, column: 33, scope: !11042)
!11046 = !DILocation(line: 40, column: 6, scope: !11034)
!11047 = !DILocation(line: 55, column: 2, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11034, file: !11014, line: 55, column: 2)
!11049 = !DILocation(line: 50, column: 7, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !11014, line: 50, column: 7)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !11014, line: 49, column: 57)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !11014, line: 49, column: 2)
!11053 = distinct !DILexicalBlock(scope: !11034, file: !11014, line: 49, column: 2)
!11054 = !DILocation(line: 50, column: 30, scope: !11050)
!11055 = !DILocation(line: 50, column: 39, scope: !11050)
!11056 = !DILocation(line: 50, column: 44, scope: !11050)
!11057 = !DILocation(line: 50, column: 7, scope: !11051)
!11058 = !DILocation(line: 49, column: 53, scope: !11052)
!11059 = !DILocation(line: 49, column: 33, scope: !11052)
!11060 = !DILocation(line: 49, column: 2, scope: !11053)
!11061 = distinct !{!11061, !11060, !11062}
!11062 = !DILocation(line: 53, column: 2, scope: !11053)
!11063 = !DILocation(line: 56, column: 7, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !11014, line: 56, column: 7)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !11014, line: 55, column: 57)
!11066 = distinct !DILexicalBlock(scope: !11048, file: !11014, line: 55, column: 2)
!11067 = !DILocation(line: 56, column: 30, scope: !11064)
!11068 = !DILocation(line: 56, column: 52, scope: !11064)
!11069 = !DILocation(line: 56, column: 34, scope: !11064)
!11070 = !DILocation(line: 56, column: 58, scope: !11064)
!11071 = !DILocation(line: 56, column: 7, scope: !11065)
!11072 = !DILocation(line: 55, column: 53, scope: !11066)
!11073 = !DILocation(line: 55, column: 33, scope: !11066)
!11074 = distinct !{!11074, !11047, !11075}
!11075 = !DILocation(line: 59, column: 2, scope: !11048)
!11076 = !DILocation(line: 62, column: 1, scope: !11034)
!11077 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11014, file: !11014, line: 93, type: !11078, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11080)
!11078 = !DISubroutineType(types: !11079)
!11079 = !{!145, !11017}
!11080 = !{!11081}
!11081 = !DILocalVariable(name: "dev", arg: 1, scope: !11077, file: !11014, line: 93, type: !11017)
!11082 = !DILocation(line: 0, scope: !11077)
!11083 = !DILocation(line: 99, column: 10, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11077, file: !11014, line: 99, column: 6)
!11085 = !DILocation(line: 99, column: 6, scope: !11077)
!11086 = !DILocation(line: 103, column: 14, scope: !11077)
!11087 = !DILocation(line: 103, column: 21, scope: !11077)
!11088 = !DILocation(line: 103, column: 33, scope: !11077)
!11089 = !DILocation(line: 103, column: 49, scope: !11077)
!11090 = !DILocation(line: 103, column: 58, scope: !11077)
!11091 = !DILocation(line: 104, column: 1, scope: !11077)
!11092 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11014, file: !11014, line: 87, type: !11093, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11096)
!11093 = !DISubroutineType(types: !11094)
!11094 = !{!185, !11095}
!11095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11017, size: 32)
!11096 = !{!11097}
!11097 = !DILocalVariable(name: "devices", arg: 1, scope: !11092, file: !11014, line: 87, type: !11095)
!11098 = !DILocation(line: 0, scope: !11092)
!11099 = !DILocation(line: 89, column: 11, scope: !11092)
!11100 = !DILocation(line: 90, column: 2, scope: !11092)
!11101 = distinct !DISubprogram(name: "device_required_foreach", scope: !11014, file: !11014, line: 125, type: !11102, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11108)
!11102 = !DISubroutineType(types: !11103)
!11103 = !{!107, !11017, !11104, !106}
!11104 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !884, line: 471, baseType: !11105)
!11105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11106, size: 32)
!11106 = !DISubroutineType(types: !11107)
!11107 = !{!107, !11017, !106}
!11108 = !{!11109, !11110, !11111, !11112, !11113}
!11109 = !DILocalVariable(name: "dev", arg: 1, scope: !11101, file: !11014, line: 125, type: !11017)
!11110 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11101, file: !11014, line: 126, type: !11104)
!11111 = !DILocalVariable(name: "context", arg: 3, scope: !11101, file: !11014, line: 127, type: !106)
!11112 = !DILocalVariable(name: "handle_count", scope: !11101, file: !11014, line: 129, type: !185)
!11113 = !DILocalVariable(name: "handles", scope: !11101, file: !11014, line: 130, type: !897)
!11114 = !DILocation(line: 0, scope: !11101)
!11115 = !DILocation(line: 129, column: 2, scope: !11101)
!11116 = !DILocation(line: 129, column: 9, scope: !11101)
!11117 = !DILocation(line: 130, column: 35, scope: !11101)
!11118 = !DILocation(line: 132, column: 33, scope: !11101)
!11119 = !DILocation(line: 132, column: 9, scope: !11101)
!11120 = !DILocation(line: 133, column: 1, scope: !11101)
!11121 = !DILocation(line: 132, column: 2, scope: !11101)
!11122 = distinct !DISubprogram(name: "device_required_handles_get", scope: !884, file: !884, line: 493, type: !11123, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11125)
!11123 = !DISubroutineType(types: !11124)
!11124 = !{!897, !11017, !2317}
!11125 = !{!11126, !11127, !11128, !11129}
!11126 = !DILocalVariable(name: "dev", arg: 1, scope: !11122, file: !884, line: 493, type: !11017)
!11127 = !DILocalVariable(name: "count", arg: 2, scope: !11122, file: !884, line: 493, type: !2317)
!11128 = !DILocalVariable(name: "rv", scope: !11122, file: !884, line: 495, type: !897)
!11129 = !DILocalVariable(name: "i", scope: !11130, file: !884, line: 498, type: !185)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !884, line: 497, column: 18)
!11131 = distinct !DILexicalBlock(scope: !11122, file: !884, line: 497, column: 6)
!11132 = !DILocation(line: 0, scope: !11122)
!11133 = !DILocation(line: 495, column: 35, scope: !11122)
!11134 = !DILocation(line: 497, column: 9, scope: !11131)
!11135 = !DILocation(line: 497, column: 6, scope: !11122)
!11136 = !DILocation(line: 0, scope: !11130)
!11137 = !DILocation(line: 500, column: 11, scope: !11130)
!11138 = !DILocation(line: 500, column: 40, scope: !11130)
!11139 = !DILocation(line: 502, column: 4, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11130, file: !884, line: 501, column: 40)
!11141 = distinct !{!11141, !11142, !11143}
!11142 = !DILocation(line: 500, column: 3, scope: !11130)
!11143 = !DILocation(line: 503, column: 3, scope: !11130)
!11144 = !DILocation(line: 504, column: 10, scope: !11130)
!11145 = !DILocation(line: 505, column: 2, scope: !11130)
!11146 = !DILocation(line: 507, column: 2, scope: !11122)
!11147 = distinct !DISubprogram(name: "device_visitor", scope: !11014, file: !11014, line: 106, type: !11148, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11150)
!11148 = !DISubroutineType(types: !11149)
!11149 = !{!107, !897, !185, !11104, !106}
!11150 = !{!11151, !11152, !11153, !11154, !11155, !11157, !11160, !11161}
!11151 = !DILocalVariable(name: "handles", arg: 1, scope: !11147, file: !11014, line: 106, type: !897)
!11152 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11147, file: !11014, line: 107, type: !185)
!11153 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11147, file: !11014, line: 108, type: !11104)
!11154 = !DILocalVariable(name: "context", arg: 4, scope: !11147, file: !11014, line: 109, type: !106)
!11155 = !DILocalVariable(name: "i", scope: !11156, file: !11014, line: 112, type: !185)
!11156 = distinct !DILexicalBlock(scope: !11147, file: !11014, line: 112, column: 2)
!11157 = !DILocalVariable(name: "dh", scope: !11158, file: !11014, line: 113, type: !899)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !11014, line: 112, column: 44)
!11159 = distinct !DILexicalBlock(scope: !11156, file: !11014, line: 112, column: 2)
!11160 = !DILocalVariable(name: "rdev", scope: !11158, file: !11014, line: 114, type: !11017)
!11161 = !DILocalVariable(name: "rc", scope: !11158, file: !11014, line: 115, type: !107)
!11162 = !DILocation(line: 0, scope: !11147)
!11163 = !DILocation(line: 0, scope: !11156)
!11164 = !DILocation(line: 112, column: 23, scope: !11159)
!11165 = !DILocation(line: 112, column: 2, scope: !11156)
!11166 = distinct !{!11166, !11165, !11167}
!11167 = !DILocation(line: 120, column: 2, scope: !11156)
!11168 = !DILocation(line: 113, column: 24, scope: !11158)
!11169 = !DILocation(line: 0, scope: !11158)
!11170 = !DILocation(line: 114, column: 31, scope: !11158)
!11171 = !DILocation(line: 115, column: 12, scope: !11158)
!11172 = !DILocation(line: 117, column: 10, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11158, file: !11014, line: 117, column: 7)
!11174 = !DILocation(line: 112, column: 39, scope: !11159)
!11175 = !DILocation(line: 123, column: 1, scope: !11147)
!11176 = distinct !DISubprogram(name: "device_from_handle", scope: !884, file: !884, line: 439, type: !11177, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11179)
!11177 = !DISubroutineType(types: !11178)
!11178 = !{!11017, !899}
!11179 = !{!11180, !11181, !11182}
!11180 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11176, file: !884, line: 439, type: !899)
!11181 = !DILocalVariable(name: "dev", scope: !11176, file: !884, line: 443, type: !11017)
!11182 = !DILocalVariable(name: "numdev", scope: !11176, file: !884, line: 444, type: !185)
!11183 = !DILocation(line: 0, scope: !11176)
!11184 = !DILocation(line: 446, column: 7, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11176, file: !884, line: 446, column: 6)
!11186 = !DILocation(line: 446, column: 18, scope: !11185)
!11187 = !DILocation(line: 446, column: 23, scope: !11185)
!11188 = !DILocation(line: 450, column: 2, scope: !11176)
!11189 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11014, file: !11014, line: 135, type: !11102, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11190)
!11190 = !{!11191, !11192, !11193, !11194, !11195}
!11191 = !DILocalVariable(name: "dev", arg: 1, scope: !11189, file: !11014, line: 135, type: !11017)
!11192 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11189, file: !11014, line: 136, type: !11104)
!11193 = !DILocalVariable(name: "context", arg: 3, scope: !11189, file: !11014, line: 137, type: !106)
!11194 = !DILocalVariable(name: "handle_count", scope: !11189, file: !11014, line: 139, type: !185)
!11195 = !DILocalVariable(name: "handles", scope: !11189, file: !11014, line: 140, type: !897)
!11196 = !DILocation(line: 0, scope: !11189)
!11197 = !DILocation(line: 139, column: 2, scope: !11189)
!11198 = !DILocation(line: 139, column: 9, scope: !11189)
!11199 = !DILocation(line: 140, column: 35, scope: !11189)
!11200 = !DILocation(line: 142, column: 33, scope: !11189)
!11201 = !DILocation(line: 142, column: 9, scope: !11189)
!11202 = !DILocation(line: 143, column: 1, scope: !11189)
!11203 = !DILocation(line: 142, column: 2, scope: !11189)
!11204 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !884, file: !884, line: 573, type: !11123, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11205)
!11205 = !{!11206, !11207, !11208, !11209, !11210}
!11206 = !DILocalVariable(name: "dev", arg: 1, scope: !11204, file: !884, line: 573, type: !11017)
!11207 = !DILocalVariable(name: "count", arg: 2, scope: !11204, file: !884, line: 573, type: !2317)
!11208 = !DILocalVariable(name: "rv", scope: !11204, file: !884, line: 575, type: !897)
!11209 = !DILocalVariable(name: "region", scope: !11204, file: !884, line: 576, type: !185)
!11210 = !DILocalVariable(name: "i", scope: !11204, file: !884, line: 577, type: !185)
!11211 = !DILocation(line: 0, scope: !11204)
!11212 = !DILocation(line: 575, column: 35, scope: !11204)
!11213 = !DILocation(line: 579, column: 9, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11204, file: !884, line: 579, column: 6)
!11215 = !DILocation(line: 579, column: 6, scope: !11204)
!11216 = !DILocation(line: 582, column: 8, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !884, line: 582, column: 8)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !884, line: 581, column: 23)
!11219 = distinct !DILexicalBlock(scope: !11214, file: !884, line: 579, column: 18)
!11220 = !DILocation(line: 582, column: 12, scope: !11217)
!11221 = !DILocation(line: 585, column: 6, scope: !11218)
!11222 = !DILocation(line: 0, scope: !11219)
!11223 = !DILocation(line: 581, column: 17, scope: !11219)
!11224 = !DILocation(line: 581, column: 3, scope: !11219)
!11225 = !DILocation(line: 588, column: 10, scope: !11219)
!11226 = !DILocation(line: 588, column: 16, scope: !11219)
!11227 = !DILocation(line: 589, column: 4, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11219, file: !884, line: 588, column: 39)
!11229 = !DILocation(line: 588, column: 3, scope: !11219)
!11230 = distinct !{!11230, !11229, !11231}
!11231 = !DILocation(line: 590, column: 3, scope: !11219)
!11232 = !DILocation(line: 591, column: 10, scope: !11219)
!11233 = !DILocation(line: 592, column: 2, scope: !11219)
!11234 = !DILocation(line: 575, column: 25, scope: !11204)
!11235 = !DILocation(line: 594, column: 2, scope: !11204)
!11236 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1747, file: !1747, line: 49, type: !11237, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1744, retainedNodes: !1949)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{!187}
!11239 = !DILocation(line: 51, column: 10, scope: !11236)
!11240 = !DILocation(line: 51, column: 20, scope: !11236)
!11241 = !DILocation(line: 51, column: 2, scope: !11236)
!11242 = distinct !DISubprogram(name: "coredump", scope: !2876, file: !2876, line: 209, type: !11243, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11386)
!11243 = !DISubroutineType(types: !11244)
!11244 = !{null, !32, !11245, !11289}
!11245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11246, size: 32)
!11246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11247)
!11247 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2448, line: 141, baseType: !11248)
!11248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2448, line: 97, size: 256, elements: !11249)
!11249 = !{!11250}
!11250 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11248, file: !2448, line: 107, baseType: !11251, size: 256)
!11251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !11252)
!11252 = !{!11253, !11258, !11263, !11268, !11273, !11278, !11283, !11288}
!11253 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !2448, line: 99, baseType: !11254, size: 32)
!11254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11251, file: !2448, line: 99, size: 32, elements: !11255)
!11255 = !{!11256, !11257}
!11256 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11254, file: !2448, line: 99, baseType: !152, size: 32)
!11257 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11254, file: !2448, line: 99, baseType: !152, size: 32)
!11258 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !2448, line: 100, baseType: !11259, size: 32, offset: 32)
!11259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11251, file: !2448, line: 100, size: 32, elements: !11260)
!11260 = !{!11261, !11262}
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11259, file: !2448, line: 100, baseType: !152, size: 32)
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11259, file: !2448, line: 100, baseType: !152, size: 32)
!11263 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !2448, line: 101, baseType: !11264, size: 32, offset: 64)
!11264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11251, file: !2448, line: 101, size: 32, elements: !11265)
!11265 = !{!11266, !11267}
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11264, file: !2448, line: 101, baseType: !152, size: 32)
!11267 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11264, file: !2448, line: 101, baseType: !152, size: 32)
!11268 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !2448, line: 102, baseType: !11269, size: 32, offset: 96)
!11269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11251, file: !2448, line: 102, size: 32, elements: !11270)
!11270 = !{!11271, !11272}
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11269, file: !2448, line: 102, baseType: !152, size: 32)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11269, file: !2448, line: 102, baseType: !152, size: 32)
!11273 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !2448, line: 103, baseType: !11274, size: 32, offset: 128)
!11274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11251, file: !2448, line: 103, size: 32, elements: !11275)
!11275 = !{!11276, !11277}
!11276 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11274, file: !2448, line: 103, baseType: !152, size: 32)
!11277 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11274, file: !2448, line: 103, baseType: !152, size: 32)
!11278 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !2448, line: 104, baseType: !11279, size: 32, offset: 160)
!11279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11251, file: !2448, line: 104, size: 32, elements: !11280)
!11280 = !{!11281, !11282}
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11279, file: !2448, line: 104, baseType: !152, size: 32)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11279, file: !2448, line: 104, baseType: !152, size: 32)
!11283 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !2448, line: 105, baseType: !11284, size: 32, offset: 192)
!11284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11251, file: !2448, line: 105, size: 32, elements: !11285)
!11285 = !{!11286, !11287}
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11284, file: !2448, line: 105, baseType: !152, size: 32)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11284, file: !2448, line: 105, baseType: !152, size: 32)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11251, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!11289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11290, size: 32)
!11290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !11291)
!11291 = !{!11292, !11350, !11362, !11363, !11364, !11365, !11366, !11381}
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11290, file: !716, line: 247, baseType: !11293, size: 384)
!11293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !11294)
!11294 = !{!11295, !11319, !11326, !11327, !11328, !11337, !11338, !11339}
!11295 = !DIDerivedType(tag: DW_TAG_member, scope: !11293, file: !716, line: 60, baseType: !11296, size: 64)
!11296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11293, file: !716, line: 60, size: 64, elements: !11297)
!11297 = !{!11298, !11313}
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11296, file: !716, line: 61, baseType: !11299, size: 64)
!11299 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !11300)
!11300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !11301)
!11301 = !{!11302, !11308}
!11302 = !DIDerivedType(tag: DW_TAG_member, scope: !11300, file: !726, line: 38, baseType: !11303, size: 32)
!11303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11300, file: !726, line: 38, size: 32, elements: !11304)
!11304 = !{!11305, !11307}
!11305 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11303, file: !726, line: 39, baseType: !11306, size: 32)
!11306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11300, size: 32)
!11307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11303, file: !726, line: 40, baseType: !11306, size: 32)
!11308 = !DIDerivedType(tag: DW_TAG_member, scope: !11300, file: !726, line: 42, baseType: !11309, size: 32, offset: 32)
!11309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11300, file: !726, line: 42, size: 32, elements: !11310)
!11310 = !{!11311, !11312}
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11309, file: !726, line: 43, baseType: !11306, size: 32)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11309, file: !726, line: 44, baseType: !11306, size: 32)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11296, file: !716, line: 62, baseType: !11314, size: 64)
!11314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !11315)
!11315 = !{!11316}
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11314, file: !742, line: 50, baseType: !11317, size: 64)
!11317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11318, size: 64, elements: !747)
!11318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11314, size: 32)
!11319 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11293, file: !716, line: 68, baseType: !11320, size: 32, offset: 64)
!11320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11321, size: 32)
!11321 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !11322)
!11322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !11323)
!11323 = !{!11324}
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11322, file: !752, line: 232, baseType: !11325, size: 64)
!11325 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !11300)
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11293, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!11327 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11293, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!11328 = !DIDerivedType(tag: DW_TAG_member, scope: !11293, file: !716, line: 90, baseType: !11329, size: 16, offset: 112)
!11329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11293, file: !716, line: 90, size: 16, elements: !11330)
!11330 = !{!11331, !11336}
!11331 = !DIDerivedType(tag: DW_TAG_member, scope: !11329, file: !716, line: 91, baseType: !11332, size: 16)
!11332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11329, file: !716, line: 91, size: 16, elements: !11333)
!11333 = !{!11334, !11335}
!11334 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11332, file: !716, line: 96, baseType: !766, size: 8)
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11332, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11329, file: !716, line: 100, baseType: !197, size: 16)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11293, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!11338 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11293, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11293, file: !716, line: 131, baseType: !11340, size: 192, offset: 192)
!11340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !11341)
!11341 = !{!11342, !11343, !11349}
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11340, file: !752, line: 245, baseType: !11299, size: 64)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11340, file: !752, line: 246, baseType: !11344, size: 32, offset: 64)
!11344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !11345)
!11345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11346, size: 32)
!11346 = !DISubroutineType(types: !11347)
!11347 = !{null, !11348}
!11348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11340, size: 32)
!11349 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11340, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11290, file: !716, line: 250, baseType: !11351, size: 288, offset: 384)
!11351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !11352)
!11352 = !{!11353, !11354, !11355, !11356, !11357, !11358, !11359, !11360, !11361}
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11351, file: !785, line: 26, baseType: !152, size: 32)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11351, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11351, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11351, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11351, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11351, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11351, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11351, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11351, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11290, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11290, file: !716, line: 256, baseType: !11321, size: 64, offset: 704)
!11364 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11290, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!11365 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11290, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11290, file: !716, line: 325, baseType: !11367, size: 32, offset: 1056)
!11367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11368, size: 32)
!11368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !11369)
!11369 = !{!11370, !11376, !11377}
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11368, file: !804, line: 5074, baseType: !11371, size: 96)
!11371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !11372)
!11372 = !{!11373, !11374, !11375}
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11371, file: !808, line: 57, baseType: !811, size: 32)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11371, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!11375 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11371, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!11376 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11368, file: !804, line: 5075, baseType: !11321, size: 64, offset: 96)
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11368, file: !804, line: 5076, baseType: !11378, size: 32, offset: 160)
!11378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !11379)
!11379 = !{!11380}
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11378, file: !818, line: 52, baseType: !22, size: 32)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11290, file: !716, line: 343, baseType: !11382, size: 64, offset: 1088)
!11382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !11383)
!11383 = !{!11384, !11385}
!11384 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11382, file: !785, line: 63, baseType: !152, size: 32)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11382, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!11386 = !{!11387, !11388, !11389}
!11387 = !DILocalVariable(name: "reason", arg: 1, scope: !11242, file: !2876, line: 209, type: !32)
!11388 = !DILocalVariable(name: "esf", arg: 2, scope: !11242, file: !2876, line: 209, type: !11245)
!11389 = !DILocalVariable(name: "thread", arg: 3, scope: !11242, file: !2876, line: 210, type: !11289)
!11390 = !DILocation(line: 0, scope: !11242)
!11391 = !DILocation(line: 212, column: 1, scope: !11242)
!11392 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2876, file: !2876, line: 214, type: !11393, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11395)
!11393 = !DISubroutineType(types: !11394)
!11394 = !{null, !22, !22}
!11395 = !{!11396, !11397}
!11396 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11392, file: !2876, line: 214, type: !22)
!11397 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11392, file: !2876, line: 214, type: !22)
!11398 = !DILocation(line: 0, scope: !11392)
!11399 = !DILocation(line: 216, column: 1, scope: !11392)
!11400 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2876, file: !2876, line: 218, type: !11401, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11403)
!11401 = !DISubroutineType(types: !11402)
!11402 = !{null, !194, !185}
!11403 = !{!11404, !11405}
!11404 = !DILocalVariable(name: "buf", arg: 1, scope: !11400, file: !2876, line: 218, type: !194)
!11405 = !DILocalVariable(name: "buflen", arg: 2, scope: !11400, file: !2876, line: 218, type: !185)
!11406 = !DILocation(line: 0, scope: !11400)
!11407 = !DILocation(line: 220, column: 1, scope: !11400)
!11408 = distinct !DISubprogram(name: "coredump_query", scope: !2876, file: !2876, line: 222, type: !11409, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11411)
!11409 = !DISubroutineType(types: !11410)
!11410 = !{!107, !2875, !106}
!11411 = !{!11412, !11413}
!11412 = !DILocalVariable(name: "query_id", arg: 1, scope: !11408, file: !2876, line: 222, type: !2875)
!11413 = !DILocalVariable(name: "arg", arg: 2, scope: !11408, file: !2876, line: 222, type: !106)
!11414 = !DILocation(line: 0, scope: !11408)
!11415 = !DILocation(line: 224, column: 2, scope: !11408)
!11416 = distinct !DISubprogram(name: "coredump_cmd", scope: !2876, file: !2876, line: 227, type: !11417, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11419)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{!107, !2882, !106}
!11419 = !{!11420, !11421}
!11420 = !DILocalVariable(name: "query_id", arg: 1, scope: !11416, file: !2876, line: 227, type: !2882)
!11421 = !DILocalVariable(name: "arg", arg: 2, scope: !11416, file: !2876, line: 227, type: !106)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 229, column: 2, scope: !11416)
!11424 = distinct !DISubprogram(name: "arch_system_halt", scope: !11425, file: !11425, line: 23, type: !5954, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11426)
!11425 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11426 = !{!11427}
!11427 = !DILocalVariable(name: "reason", arg: 1, scope: !11424, file: !11425, line: 23, type: !32)
!11428 = !DILocation(line: 0, scope: !11424)
!11429 = !DILocation(line: 55, column: 2, scope: !11430, inlinedAt: !11434)
!11430 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6124, file: !6124, line: 42, type: !8804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11431)
!11431 = !{!11432, !11433}
!11432 = !DILocalVariable(name: "key", scope: !11430, file: !6124, line: 44, type: !32)
!11433 = !DILocalVariable(name: "tmp", scope: !11430, file: !6124, line: 53, type: !32)
!11434 = distinct !DILocation(line: 31, column: 8, scope: !11424)
!11435 = !{i64 2847155}
!11436 = !DILocation(line: 0, scope: !11430, inlinedAt: !11434)
!11437 = !DILocation(line: 32, column: 2, scope: !11424)
!11438 = !DILocation(line: 32, column: 2, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !11425, line: 32, column: 2)
!11440 = distinct !DILexicalBlock(scope: !11424, file: !11425, line: 32, column: 2)
!11441 = distinct !{!11441, !11442, !11443}
!11442 = !DILocation(line: 32, column: 2, scope: !11440)
!11443 = !DILocation(line: 34, column: 2, scope: !11440)
!11444 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11425, file: !11425, line: 39, type: !11445, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11447)
!11445 = !DISubroutineType(types: !11446)
!11446 = !{null, !32, !11245}
!11447 = !{!11448, !11449}
!11448 = !DILocalVariable(name: "reason", arg: 1, scope: !11444, file: !11425, line: 39, type: !32)
!11449 = !DILocalVariable(name: "esf", arg: 2, scope: !11444, file: !11425, line: 40, type: !11245)
!11450 = !DILocation(line: 0, scope: !11444)
!11451 = !DILocation(line: 45, column: 2, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !11425, line: 45, column: 2)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !11425, line: 45, column: 2)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !11425, line: 45, column: 2)
!11455 = distinct !DILexicalBlock(scope: !11444, file: !11425, line: 45, column: 2)
!11456 = !DILocation(line: 46, column: 2, scope: !11444)
!11457 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11425, file: !11425, line: 81, type: !5954, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11458)
!11458 = !{!11459}
!11459 = !DILocalVariable(name: "reason", arg: 1, scope: !11457, file: !11425, line: 81, type: !32)
!11460 = !DILocation(line: 0, scope: !11457)
!11461 = !DILocation(line: 83, column: 2, scope: !11457)
!11462 = distinct !DISubprogram(name: "z_fatal_error", scope: !11425, file: !11425, line: 96, type: !11445, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11463)
!11463 = !{!11464, !11465, !11466, !11467}
!11464 = !DILocalVariable(name: "reason", arg: 1, scope: !11462, file: !11425, line: 96, type: !32)
!11465 = !DILocalVariable(name: "esf", arg: 2, scope: !11462, file: !11425, line: 96, type: !11245)
!11466 = !DILocalVariable(name: "key", scope: !11462, file: !11425, line: 102, type: !32)
!11467 = !DILocalVariable(name: "thread", scope: !11462, file: !11425, line: 103, type: !11289)
!11468 = !DILocation(line: 0, scope: !11462)
!11469 = !DILocation(line: 55, column: 2, scope: !11430, inlinedAt: !11470)
!11470 = distinct !DILocation(line: 102, column: 21, scope: !11462)
!11471 = !DILocation(line: 0, scope: !11430, inlinedAt: !11470)
!11472 = !DILocation(line: 104, column: 4, scope: !11462)
!11473 = !DILocation(line: 109, column: 2, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !11425, line: 109, column: 2)
!11475 = distinct !DILexicalBlock(scope: !11476, file: !11425, line: 109, column: 2)
!11476 = distinct !DILexicalBlock(scope: !11477, file: !11425, line: 109, column: 2)
!11477 = distinct !DILexicalBlock(scope: !11462, file: !11425, line: 109, column: 2)
!11478 = !DILocation(line: 119, column: 11, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11462, file: !11425, line: 119, column: 6)
!11480 = !DILocation(line: 119, column: 20, scope: !11479)
!11481 = !DILocalVariable(name: "esf", arg: 1, scope: !11482, file: !6999, line: 71, type: !11245)
!11482 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !6999, file: !6999, line: 71, type: !11483, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11485)
!11483 = !DISubroutineType(types: !11484)
!11484 = !{!145, !11245}
!11485 = !{!11481}
!11486 = !DILocation(line: 0, scope: !11482, inlinedAt: !11487)
!11487 = distinct !DILocation(line: 119, column: 23, scope: !11479)
!11488 = !DILocation(line: 73, column: 21, scope: !11482, inlinedAt: !11487)
!11489 = !DILocation(line: 73, column: 26, scope: !11482, inlinedAt: !11487)
!11490 = !DILocation(line: 73, column: 9, scope: !11482, inlinedAt: !11487)
!11491 = !DILocation(line: 119, column: 6, scope: !11462)
!11492 = !DILocation(line: 120, column: 3, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !11425, line: 120, column: 3)
!11494 = distinct !DILexicalBlock(scope: !11495, file: !11425, line: 120, column: 3)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !11425, line: 120, column: 3)
!11496 = distinct !DILexicalBlock(scope: !11497, file: !11425, line: 120, column: 3)
!11497 = distinct !DILexicalBlock(scope: !11479, file: !11425, line: 119, column: 57)
!11498 = !DILocation(line: 121, column: 2, scope: !11497)
!11499 = !DILocation(line: 124, column: 2, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !11425, line: 124, column: 2)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !11425, line: 124, column: 2)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !11425, line: 124, column: 2)
!11503 = distinct !DILexicalBlock(scope: !11462, file: !11425, line: 124, column: 2)
!11504 = !DILocation(line: 131, column: 2, scope: !11462)
!11505 = !DILocation(line: 0, scope: !11482, inlinedAt: !11506)
!11506 = distinct !DILocation(line: 163, column: 24, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !11425, line: 163, column: 7)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !11425, line: 160, column: 9)
!11509 = distinct !DILexicalBlock(scope: !11462, file: !11425, line: 146, column: 6)
!11510 = !DILocation(line: 73, column: 21, scope: !11482, inlinedAt: !11506)
!11511 = !DILocation(line: 73, column: 26, scope: !11482, inlinedAt: !11506)
!11512 = !DILocation(line: 73, column: 9, scope: !11482, inlinedAt: !11506)
!11513 = !DILocation(line: 163, column: 7, scope: !11508)
!11514 = !DILocalVariable(name: "key", arg: 1, scope: !11515, file: !6124, line: 84, type: !32)
!11515 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11516)
!11516 = !{!11514}
!11517 = !DILocation(line: 0, scope: !11515, inlinedAt: !11518)
!11518 = distinct !DILocation(line: 171, column: 4, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11507, file: !11425, line: 163, column: 58)
!11520 = !DILocation(line: 95, column: 2, scope: !11515, inlinedAt: !11518)
!11521 = !{i64 2847972}
!11522 = !DILocation(line: 172, column: 4, scope: !11519)
!11523 = !DILocation(line: 163, column: 21, scope: !11507)
!11524 = !DILocation(line: 178, column: 15, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !11425, line: 178, column: 8)
!11526 = distinct !DILexicalBlock(scope: !11507, file: !11425, line: 174, column: 10)
!11527 = !DILocation(line: 0, scope: !11515, inlinedAt: !11528)
!11528 = distinct !DILocation(line: 179, column: 5, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11525, file: !11425, line: 178, column: 38)
!11530 = !DILocation(line: 0, scope: !11515, inlinedAt: !11531)
!11531 = distinct !DILocation(line: 186, column: 2, scope: !11462)
!11532 = !DILocation(line: 178, column: 8, scope: !11526)
!11533 = !DILocation(line: 189, column: 3, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11535, file: !11425, line: 188, column: 41)
!11535 = distinct !DILexicalBlock(scope: !11462, file: !11425, line: 188, column: 6)
!11536 = !DILocation(line: 191, column: 1, scope: !11462)
!11537 = distinct !DISubprogram(name: "k_current_get", scope: !804, file: !804, line: 530, type: !11538, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !1949)
!11538 = !DISubroutineType(types: !11539)
!11539 = !{!11540}
!11540 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !11289)
!11541 = !DILocation(line: 535, column: 9, scope: !11537)
!11542 = !DILocation(line: 535, column: 2, scope: !11537)
!11543 = distinct !DISubprogram(name: "reason_to_str", scope: !11425, file: !11425, line: 62, type: !11544, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{!118, !32}
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "reason", arg: 1, scope: !11543, file: !11425, line: 62, type: !32)
!11548 = !DILocation(line: 0, scope: !11543)
!11549 = !DILocation(line: 64, column: 2, scope: !11543)
!11550 = !DILocation(line: 0, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11543, file: !11425, line: 64, column: 18)
!11552 = !DILocation(line: 78, column: 1, scope: !11543)
!11553 = distinct !DISubprogram(name: "thread_name_get", scope: !11425, file: !11425, line: 51, type: !11554, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11556)
!11554 = !DISubroutineType(types: !11555)
!11555 = !{!118, !11289}
!11556 = !{!11557, !11558}
!11557 = !DILocalVariable(name: "thread", arg: 1, scope: !11553, file: !11425, line: 51, type: !11289)
!11558 = !DILocalVariable(name: "thread_name", scope: !11553, file: !11425, line: 53, type: !118)
!11559 = !DILocation(line: 0, scope: !11553)
!11560 = !DILocation(line: 53, column: 36, scope: !11553)
!11561 = !DILocation(line: 53, column: 28, scope: !11553)
!11562 = !DILocation(line: 53, column: 47, scope: !11553)
!11563 = !DILocation(line: 55, column: 19, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11553, file: !11425, line: 55, column: 6)
!11565 = !DILocation(line: 55, column: 28, scope: !11564)
!11566 = !DILocation(line: 55, column: 32, scope: !11564)
!11567 = !DILocation(line: 55, column: 47, scope: !11564)
!11568 = !DILocation(line: 55, column: 6, scope: !11553)
!11569 = !DILocation(line: 57, column: 2, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11564, file: !11425, line: 55, column: 57)
!11571 = !DILocation(line: 59, column: 2, scope: !11553)
!11572 = distinct !DISubprogram(name: "k_thread_abort", scope: !4224, file: !4224, line: 188, type: !11573, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11575)
!11573 = !DISubroutineType(types: !11574)
!11574 = !{null, !11540}
!11575 = !{!11576}
!11576 = !DILocalVariable(name: "thread", arg: 1, scope: !11572, file: !4224, line: 188, type: !11540)
!11577 = !DILocation(line: 0, scope: !11572)
!11578 = !DILocation(line: 197, column: 2, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11572, file: !4224, line: 197, column: 2)
!11580 = !{i64 2151046298}
!11581 = !DILocation(line: 198, column: 2, scope: !11572)
!11582 = !DILocation(line: 199, column: 1, scope: !11572)
!11583 = distinct !DISubprogram(name: "z_current_get", scope: !4224, file: !4224, line: 173, type: !11538, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !1949)
!11584 = !DILocation(line: 180, column: 2, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11583, file: !4224, line: 180, column: 2)
!11586 = !{i64 2151046230}
!11587 = !DILocation(line: 181, column: 9, scope: !11583)
!11588 = !DILocation(line: 181, column: 2, scope: !11583)
!11589 = distinct !DISubprogram(name: "z_early_memset", scope: !1754, file: !1754, line: 108, type: !11590, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11592)
!11590 = !DISubroutineType(types: !11591)
!11591 = !{null, !106, !107, !185}
!11592 = !{!11593, !11594, !11595}
!11593 = !DILocalVariable(name: "dst", arg: 1, scope: !11589, file: !1754, line: 108, type: !106)
!11594 = !DILocalVariable(name: "c", arg: 2, scope: !11589, file: !1754, line: 108, type: !107)
!11595 = !DILocalVariable(name: "n", arg: 3, scope: !11589, file: !1754, line: 108, type: !185)
!11596 = !DILocation(line: 0, scope: !11589)
!11597 = !DILocation(line: 110, column: 9, scope: !11589)
!11598 = !DILocation(line: 111, column: 1, scope: !11589)
!11599 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1754, file: !1754, line: 121, type: !11600, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11602)
!11600 = !DISubroutineType(types: !11601)
!11601 = !{null, !106, !13, !185}
!11602 = !{!11603, !11604, !11605}
!11603 = !DILocalVariable(name: "dst", arg: 1, scope: !11599, file: !1754, line: 121, type: !106)
!11604 = !DILocalVariable(name: "src", arg: 2, scope: !11599, file: !1754, line: 121, type: !13)
!11605 = !DILocalVariable(name: "n", arg: 3, scope: !11599, file: !1754, line: 121, type: !185)
!11606 = !DILocation(line: 0, scope: !11599)
!11607 = !DILocation(line: 123, column: 9, scope: !11599)
!11608 = !DILocation(line: 124, column: 1, scope: !11599)
!11609 = distinct !DISubprogram(name: "z_bss_zero", scope: !1754, file: !1754, line: 132, type: !2909, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11610 = !DILocation(line: 143, column: 2, scope: !11609)
!11611 = !DILocation(line: 168, column: 1, scope: !11609)
!11612 = distinct !DISubprogram(name: "z_init_cpu", scope: !1754, file: !1754, line: 372, type: !11613, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11615)
!11613 = !DISubroutineType(types: !11614)
!11614 = !{null, !107}
!11615 = !{!11616}
!11616 = !DILocalVariable(name: "id", arg: 1, scope: !11612, file: !1754, line: 372, type: !107)
!11617 = !DILocation(line: 0, scope: !11612)
!11618 = !DILocation(line: 374, column: 2, scope: !11612)
!11619 = !DILocation(line: 375, column: 34, scope: !11612)
!11620 = !DILocation(line: 375, column: 19, scope: !11612)
!11621 = !DILocation(line: 375, column: 31, scope: !11612)
!11622 = !DILocation(line: 376, column: 24, scope: !11612)
!11623 = !DILocation(line: 376, column: 19, scope: !11612)
!11624 = !DILocation(line: 376, column: 22, scope: !11612)
!11625 = !DILocation(line: 378, column: 26, scope: !11612)
!11626 = !DILocation(line: 378, column: 4, scope: !11612)
!11627 = !DILocation(line: 378, column: 50, scope: !11612)
!11628 = !DILocation(line: 377, column: 19, scope: !11612)
!11629 = !DILocation(line: 377, column: 29, scope: !11612)
!11630 = !DILocation(line: 384, column: 1, scope: !11612)
!11631 = distinct !DISubprogram(name: "init_idle_thread", scope: !1754, file: !1754, line: 343, type: !11613, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11632)
!11632 = !{!11633, !11634, !11635, !11638}
!11633 = !DILocalVariable(name: "i", arg: 1, scope: !11631, file: !1754, line: 343, type: !107)
!11634 = !DILocalVariable(name: "thread", scope: !11631, file: !1754, line: 345, type: !1846)
!11635 = !DILocalVariable(name: "stack", scope: !11631, file: !1754, line: 346, type: !11636)
!11636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11637, size: 32)
!11637 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !1958)
!11638 = !DILocalVariable(name: "tname", scope: !11631, file: !1754, line: 354, type: !193)
!11639 = !DILocation(line: 0, scope: !11631)
!11640 = !DILocation(line: 345, column: 29, scope: !11631)
!11641 = !DILocation(line: 346, column: 28, scope: !11631)
!11642 = !DILocation(line: 362, column: 37, scope: !11631)
!11643 = !DILocation(line: 362, column: 36, scope: !11631)
!11644 = !DILocation(line: 361, column: 2, scope: !11631)
!11645 = !DILocation(line: 365, column: 2, scope: !11631)
!11646 = !DILocation(line: 370, column: 1, scope: !11631)
!11647 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !706, file: !706, line: 331, type: !11648, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11650)
!11648 = !DISubroutineType(types: !11649)
!11649 = !{!193, !11636}
!11650 = !{!11651}
!11651 = !DILocalVariable(name: "sym", arg: 1, scope: !11647, file: !706, line: 331, type: !11636)
!11652 = !DILocation(line: 0, scope: !11647)
!11653 = !DILocation(line: 333, column: 9, scope: !11647)
!11654 = !DILocation(line: 333, column: 2, scope: !11647)
!11655 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11656, file: !11656, line: 155, type: !11657, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11659)
!11656 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11657 = !DISubroutineType(types: !11658)
!11658 = !{null, !1846}
!11659 = !{!11660}
!11660 = !DILocalVariable(name: "thread", arg: 1, scope: !11655, file: !11656, line: 155, type: !1846)
!11661 = !DILocation(line: 0, scope: !11655)
!11662 = !DILocation(line: 157, column: 15, scope: !11655)
!11663 = !DILocation(line: 157, column: 28, scope: !11655)
!11664 = !DILocation(line: 158, column: 1, scope: !11655)
!11665 = distinct !DISubprogram(name: "z_cstart", scope: !1754, file: !1754, line: 501, type: !2909, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11666)
!11666 = !{!11667}
!11667 = !DILocalVariable(name: "dummy_thread", scope: !11665, file: !1754, line: 518, type: !1847)
!11668 = !DILocation(line: 507, column: 2, scope: !11665)
!11669 = !DILocation(line: 43, column: 14, scope: !11670, inlinedAt: !11674)
!11670 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11671, file: !11671, line: 40, type: !2909, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11672)
!11671 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11672 = !{!11673}
!11673 = !DILocalVariable(name: "msp", scope: !11670, file: !11671, line: 42, type: !152)
!11674 = distinct !DILocation(line: 44, column: 2, scope: !11675, inlinedAt: !11677)
!11675 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11676, file: !11676, line: 42, type: !2909, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11676 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11677 = distinct !DILocation(line: 510, column: 2, scope: !11665)
!11678 = !DILocation(line: 43, column: 3, scope: !11670, inlinedAt: !11674)
!11679 = !DILocation(line: 43, column: 60, scope: !11670, inlinedAt: !11674)
!11680 = !DILocation(line: 0, scope: !11670, inlinedAt: !11674)
!11681 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11682, file: !6003, line: 1153, type: !152)
!11682 = distinct !DISubprogram(name: "__set_MSP", scope: !6003, file: !6003, line: 1153, type: !6100, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11683)
!11683 = !{!11681}
!11684 = !DILocation(line: 0, scope: !11682, inlinedAt: !11685)
!11685 = distinct !DILocation(line: 46, column: 2, scope: !11670, inlinedAt: !11674)
!11686 = !DILocation(line: 1155, column: 3, scope: !11682, inlinedAt: !11685)
!11687 = !{i64 7509914}
!11688 = !DILocation(line: 62, column: 11, scope: !11670, inlinedAt: !11674)
!11689 = !DILocation(line: 102, column: 2, scope: !11690, inlinedAt: !11691)
!11690 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6999, file: !6999, line: 97, type: !2909, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11691 = distinct !DILocation(line: 45, column: 2, scope: !11675, inlinedAt: !11677)
!11692 = !DILocation(line: 108, column: 2, scope: !11690, inlinedAt: !11691)
!11693 = !DILocation(line: 112, column: 2, scope: !11690, inlinedAt: !11691)
!11694 = !DILocation(line: 113, column: 2, scope: !11690, inlinedAt: !11691)
!11695 = !DILocation(line: 114, column: 2, scope: !11690, inlinedAt: !11691)
!11696 = !DILocation(line: 116, column: 2, scope: !11690, inlinedAt: !11691)
!11697 = !DILocation(line: 123, column: 13, scope: !11690, inlinedAt: !11691)
!11698 = !DILocation(line: 46, column: 2, scope: !11675, inlinedAt: !11677)
!11699 = !DILocation(line: 47, column: 2, scope: !11675, inlinedAt: !11677)
!11700 = !DILocation(line: 174, column: 12, scope: !11701, inlinedAt: !11702)
!11701 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6999, file: !6999, line: 169, type: !2909, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11702 = distinct !DILocation(line: 48, column: 2, scope: !11675, inlinedAt: !11677)
!11703 = !DILocation(line: 179, column: 12, scope: !11701, inlinedAt: !11702)
!11704 = !DILocation(line: 518, column: 2, scope: !11665)
!11705 = !DILocation(line: 518, column: 18, scope: !11665)
!11706 = !DILocation(line: 520, column: 2, scope: !11665)
!11707 = !DILocation(line: 523, column: 2, scope: !11665)
!11708 = !DILocation(line: 526, column: 2, scope: !11665)
!11709 = !DILocation(line: 527, column: 2, scope: !11665)
!11710 = !DILocation(line: 543, column: 24, scope: !11665)
!11711 = !DILocation(line: 543, column: 2, scope: !11665)
!11712 = !DILocation(line: 0, scope: !1980)
!11713 = !DILocation(line: 246, column: 15, scope: !1998)
!11714 = !DILocation(line: 246, column: 36, scope: !1997)
!11715 = !DILocation(line: 246, column: 2, scope: !1998)
!11716 = !DILocation(line: 247, column: 37, scope: !1996)
!11717 = !DILocation(line: 0, scope: !1996)
!11718 = !DILocation(line: 248, column: 19, scope: !1996)
!11719 = !DILocation(line: 248, column: 12, scope: !1996)
!11720 = !DILocation(line: 250, column: 11, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !1996, file: !1754, line: 250, column: 7)
!11722 = !DILocation(line: 250, column: 7, scope: !1996)
!11723 = !DILocation(line: 254, column: 11, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !1754, line: 254, column: 8)
!11725 = distinct !DILexicalBlock(scope: !11721, file: !1754, line: 250, column: 20)
!11726 = !DILocation(line: 254, column: 8, scope: !11725)
!11727 = !DILocation(line: 255, column: 9, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11724, file: !1754, line: 254, column: 17)
!11729 = !DILocation(line: 258, column: 9, scope: !11728)
!11730 = !DILocation(line: 261, column: 28, scope: !11728)
!11731 = !DILocation(line: 261, column: 10, scope: !11728)
!11732 = !DILocation(line: 261, column: 17, scope: !11728)
!11733 = !DILocation(line: 261, column: 26, scope: !11728)
!11734 = !DILocation(line: 262, column: 4, scope: !11728)
!11735 = !DILocation(line: 263, column: 9, scope: !11725)
!11736 = !DILocation(line: 263, column: 16, scope: !11725)
!11737 = !DILocation(line: 263, column: 28, scope: !11725)
!11738 = !DILocation(line: 264, column: 3, scope: !11725)
!11739 = !DILocation(line: 246, column: 60, scope: !1997)
!11740 = distinct !{!11740, !11715, !11741}
!11741 = !DILocation(line: 265, column: 2, scope: !1998)
!11742 = !DILocation(line: 266, column: 1, scope: !1980)
!11743 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6043, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11744)
!11744 = !{!11745, !11746}
!11745 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11743, file: !1598, line: 1814, type: !2342)
!11746 = !DILocalVariable(name: "priority", arg: 2, scope: !11743, file: !1598, line: 1814, type: !152)
!11747 = !DILocation(line: 0, scope: !11743)
!11748 = !DILocation(line: 1822, column: 48, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !1598, line: 1821, column: 3)
!11750 = distinct !DILexicalBlock(scope: !11743, file: !1598, line: 1816, column: 7)
!11751 = !DILocation(line: 1822, column: 32, scope: !11749)
!11752 = !DILocation(line: 1822, column: 40, scope: !11749)
!11753 = !DILocation(line: 1822, column: 5, scope: !11749)
!11754 = !DILocation(line: 1822, column: 46, scope: !11749)
!11755 = !DILocation(line: 1824, column: 1, scope: !11743)
!11756 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11676, file: !11676, line: 32, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!11757 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11758, file: !11758, line: 215, type: !11657, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11759)
!11758 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11759 = !{!11760}
!11760 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11757, file: !11758, line: 215, type: !1846)
!11761 = !DILocation(line: 0, scope: !11757)
!11762 = !DILocation(line: 217, column: 21, scope: !11757)
!11763 = !DILocation(line: 217, column: 34, scope: !11757)
!11764 = !DILocation(line: 221, column: 21, scope: !11757)
!11765 = !DILocation(line: 221, column: 34, scope: !11757)
!11766 = !DILocation(line: 232, column: 16, scope: !11757)
!11767 = !DILocation(line: 232, column: 30, scope: !11757)
!11768 = !DILocation(line: 239, column: 24, scope: !11757)
!11769 = !DILocation(line: 240, column: 1, scope: !11757)
!11770 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1754, file: !1754, line: 399, type: !11771, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11773)
!11771 = !DISubroutineType(types: !11772)
!11772 = !{!193}
!11773 = !{!11774}
!11774 = !DILocalVariable(name: "stack_ptr", scope: !11770, file: !1754, line: 401, type: !193)
!11775 = !DILocation(line: 404, column: 2, scope: !11770)
!11776 = !DILocation(line: 416, column: 24, scope: !11770)
!11777 = !DILocation(line: 418, column: 14, scope: !11770)
!11778 = !DILocation(line: 0, scope: !11770)
!11779 = !DILocation(line: 423, column: 2, scope: !11770)
!11780 = !DILocation(line: 424, column: 2, scope: !11770)
!11781 = !DILocation(line: 426, column: 2, scope: !11770)
!11782 = !DILocation(line: 428, column: 2, scope: !11770)
!11783 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1754, file: !1754, line: 432, type: !11784, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11786)
!11784 = !DISubroutineType(types: !11785)
!11785 = !{null, !193}
!11786 = !{!11787}
!11787 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11783, file: !1754, line: 432, type: !193)
!11788 = !DILocation(line: 0, scope: !11783)
!11789 = !DILocation(line: 435, column: 2, scope: !11783)
!11790 = !DILocation(line: 445, column: 2, scope: !11783)
!11791 = distinct !DISubprogram(name: "bg_thread_main", scope: !1754, file: !1754, line: 277, type: !690, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11792)
!11792 = !{!11793, !11794, !11795}
!11793 = !DILocalVariable(name: "unused1", arg: 1, scope: !11791, file: !1754, line: 277, type: !106)
!11794 = !DILocalVariable(name: "unused2", arg: 2, scope: !11791, file: !1754, line: 277, type: !106)
!11795 = !DILocalVariable(name: "unused3", arg: 3, scope: !11791, file: !1754, line: 277, type: !106)
!11796 = !DILocation(line: 0, scope: !11791)
!11797 = !DILocation(line: 291, column: 20, scope: !11791)
!11798 = !DILocation(line: 293, column: 2, scope: !11791)
!11799 = !DILocation(line: 297, column: 2, scope: !11791)
!11800 = !DILocation(line: 305, column: 2, scope: !11791)
!11801 = !DILocation(line: 307, column: 2, scope: !11791)
!11802 = !DILocation(line: 330, column: 8, scope: !11791)
!11803 = !DILocation(line: 333, column: 34, scope: !11791)
!11804 = !DILocation(line: 339, column: 1, scope: !11791)
!11805 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2009, file: !2009, line: 45, type: !11806, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11814)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{null, !11808, !106}
!11808 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !804, line: 103, baseType: !11809)
!11809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11810, size: 32)
!11810 = !DISubroutineType(types: !11811)
!11811 = !{null, !11812, !106}
!11812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11813, size: 32)
!11813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!11814 = !{!11815, !11816}
!11815 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11805, file: !2009, line: 45, type: !11808)
!11816 = !DILocalVariable(name: "user_data", arg: 2, scope: !11805, file: !2009, line: 45, type: !106)
!11817 = !DILocation(line: 0, scope: !11805)
!11818 = !DILocation(line: 71, column: 1, scope: !11805)
!11819 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2009, file: !2009, line: 73, type: !11806, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11820)
!11820 = !{!11821, !11822}
!11821 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11819, file: !2009, line: 73, type: !11808)
!11822 = !DILocalVariable(name: "user_data", arg: 2, scope: !11819, file: !2009, line: 73, type: !106)
!11823 = !DILocation(line: 0, scope: !11819)
!11824 = !DILocation(line: 95, column: 1, scope: !11819)
!11825 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2009, file: !2009, line: 97, type: !7000, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11826 = !DILocation(line: 1031, column: 3, scope: !11827, inlinedAt: !11830)
!11827 = distinct !DISubprogram(name: "__get_IPSR", scope: !6003, file: !6003, line: 1027, type: !6090, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11828)
!11828 = !{!11829}
!11829 = !DILocalVariable(name: "result", scope: !11827, file: !6003, line: 1029, type: !152)
!11830 = distinct !DILocation(line: 48, column: 10, scope: !11831, inlinedAt: !11832)
!11831 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6999, file: !6999, line: 46, type: !7000, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11832 = distinct !DILocation(line: 99, column: 9, scope: !11825)
!11833 = !{i64 7021758}
!11834 = !DILocation(line: 0, scope: !11827, inlinedAt: !11830)
!11835 = !DILocation(line: 48, column: 9, scope: !11831, inlinedAt: !11832)
!11836 = !DILocation(line: 99, column: 2, scope: !11825)
!11837 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2009, file: !2009, line: 106, type: !2909, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11838 = !DILocation(line: 108, column: 2, scope: !11837)
!11839 = !DILocation(line: 108, column: 17, scope: !11837)
!11840 = !DILocation(line: 108, column: 30, scope: !11837)
!11841 = !DILocation(line: 109, column: 1, scope: !11837)
!11842 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2009, file: !2009, line: 116, type: !2909, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11843 = !DILocation(line: 118, column: 2, scope: !11842)
!11844 = !DILocation(line: 118, column: 17, scope: !11842)
!11845 = !DILocation(line: 118, column: 30, scope: !11842)
!11846 = !DILocation(line: 119, column: 1, scope: !11842)
!11847 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2009, file: !2009, line: 126, type: !7000, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11848 = !DILocation(line: 128, column: 10, scope: !11847)
!11849 = !DILocation(line: 128, column: 25, scope: !11847)
!11850 = !DILocation(line: 128, column: 38, scope: !11847)
!11851 = !DILocation(line: 128, column: 53, scope: !11847)
!11852 = !DILocation(line: 128, column: 2, scope: !11847)
!11853 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2009, file: !2009, line: 187, type: !11854, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11856)
!11854 = !DISubroutineType(types: !11855)
!11855 = !{!107, !2013, !118}
!11856 = !{!11857, !11858}
!11857 = !DILocalVariable(name: "thread", arg: 1, scope: !11853, file: !2009, line: 187, type: !2013)
!11858 = !DILocalVariable(name: "value", arg: 2, scope: !11853, file: !2009, line: 187, type: !118)
!11859 = !DILocation(line: 0, scope: !11853)
!11860 = !DILocation(line: 190, column: 13, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11853, file: !2009, line: 190, column: 6)
!11862 = !DILocation(line: 190, column: 6, scope: !11853)
!11863 = !DILocation(line: 194, column: 10, scope: !11853)
!11864 = !DILocation(line: 194, column: 2, scope: !11853)
!11865 = !DILocation(line: 195, column: 2, scope: !11853)
!11866 = !DILocation(line: 195, column: 47, scope: !11853)
!11867 = !DILocation(line: 199, column: 2, scope: !11853)
!11868 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2009, file: !2009, line: 238, type: !11869, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11871)
!11869 = !DISubroutineType(types: !11870)
!11870 = !{!118, !2013}
!11871 = !{!11872}
!11872 = !DILocalVariable(name: "thread", arg: 1, scope: !11868, file: !2009, line: 238, type: !2013)
!11873 = !DILocation(line: 0, scope: !11868)
!11874 = !DILocation(line: 241, column: 23, scope: !11868)
!11875 = !DILocation(line: 241, column: 2, scope: !11868)
!11876 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2009, file: !2009, line: 248, type: !11877, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11879)
!11877 = !DISubroutineType(types: !11878)
!11878 = !{!107, !2012, !193, !185}
!11879 = !{!11880, !11881, !11882}
!11880 = !DILocalVariable(name: "thread", arg: 1, scope: !11876, file: !2009, line: 248, type: !2012)
!11881 = !DILocalVariable(name: "buf", arg: 2, scope: !11876, file: !2009, line: 248, type: !193)
!11882 = !DILocalVariable(name: "size", arg: 3, scope: !11876, file: !2009, line: 248, type: !185)
!11883 = !DILocation(line: 0, scope: !11876)
!11884 = !DILocation(line: 251, column: 15, scope: !11876)
!11885 = !DILocation(line: 251, column: 2, scope: !11876)
!11886 = !DILocation(line: 252, column: 2, scope: !11876)
!11887 = !DILocation(line: 0, scope: !2008)
!11888 = !DILocation(line: 281, column: 11, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !2008, file: !2009, line: 281, column: 6)
!11890 = !DILocation(line: 281, column: 20, scope: !11889)
!11891 = !DILocation(line: 275, column: 45, scope: !2008)
!11892 = !DILocation(line: 285, column: 10, scope: !2008)
!11893 = !DILocation(line: 0, scope: !2127)
!11894 = !DILocation(line: 293, column: 39, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !2127, file: !2009, line: 293, column: 2)
!11896 = !DILocation(line: 293, column: 2, scope: !2127)
!11897 = !DILocation(line: 273, column: 14, scope: !2008)
!11898 = !DILocation(line: 309, column: 2, scope: !2008)
!11899 = !DILocation(line: 309, column: 11, scope: !2008)
!11900 = !DILocation(line: 311, column: 2, scope: !2008)
!11901 = !DILocation(line: 293, column: 26, scope: !11895)
!11902 = !DILocation(line: 294, column: 9, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11895, file: !2009, line: 293, column: 54)
!11904 = !DILocation(line: 295, column: 21, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11903, file: !2009, line: 295, column: 7)
!11906 = !DILocation(line: 295, column: 28, scope: !11905)
!11907 = !DILocation(line: 295, column: 7, scope: !11903)
!11908 = !DILocation(line: 299, column: 25, scope: !11903)
!11909 = !DILocation(line: 299, column: 41, scope: !11903)
!11910 = !DILocation(line: 300, column: 7, scope: !11903)
!11911 = !DILocation(line: 300, column: 26, scope: !11903)
!11912 = !DILocation(line: 299, column: 10, scope: !11903)
!11913 = !DILocation(line: 299, column: 7, scope: !11903)
!11914 = !DILocation(line: 302, column: 16, scope: !11903)
!11915 = !DILocation(line: 304, column: 20, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11903, file: !2009, line: 304, column: 7)
!11917 = !DILocation(line: 304, column: 7, scope: !11903)
!11918 = !DILocation(line: 305, column: 26, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11916, file: !2009, line: 304, column: 26)
!11920 = !DILocation(line: 305, column: 42, scope: !11919)
!11921 = !DILocation(line: 305, column: 11, scope: !11919)
!11922 = !DILocation(line: 305, column: 8, scope: !11919)
!11923 = !DILocation(line: 306, column: 3, scope: !11919)
!11924 = !DILocation(line: 293, column: 50, scope: !11895)
!11925 = !DILocation(line: 312, column: 1, scope: !2008)
!11926 = distinct !DISubprogram(name: "copy_bytes", scope: !2009, file: !2009, line: 261, type: !11927, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!185, !193, !185, !118, !185}
!11929 = !{!11930, !11931, !11932, !11933, !11934}
!11930 = !DILocalVariable(name: "dest", arg: 1, scope: !11926, file: !2009, line: 261, type: !193)
!11931 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11926, file: !2009, line: 261, type: !185)
!11932 = !DILocalVariable(name: "src", arg: 3, scope: !11926, file: !2009, line: 261, type: !118)
!11933 = !DILocalVariable(name: "src_size", arg: 4, scope: !11926, file: !2009, line: 261, type: !185)
!11934 = !DILocalVariable(name: "bytes_to_copy", scope: !11926, file: !2009, line: 263, type: !185)
!11935 = !DILocation(line: 0, scope: !11926)
!11936 = !DILocation(line: 265, column: 18, scope: !11926)
!11937 = !DILocation(line: 266, column: 2, scope: !11926)
!11938 = !DILocation(line: 268, column: 2, scope: !11926)
!11939 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2009, file: !2009, line: 383, type: !11940, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11942)
!11940 = !DISubroutineType(types: !11941)
!11941 = !{null, !2013}
!11942 = !{!11943}
!11943 = !DILocalVariable(name: "thread", arg: 1, scope: !11939, file: !2009, line: 383, type: !2013)
!11944 = !DILocation(line: 0, scope: !11939)
!11945 = !DILocation(line: 387, column: 2, scope: !11939)
!11946 = !DILocation(line: 388, column: 1, scope: !11939)
!11947 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2009, file: !2009, line: 528, type: !11948, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11955)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!193, !2013, !11950, !185, !687, !106, !106, !106, !107, !152, !118}
!11950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11951, size: 32)
!11951 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !11952)
!11952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !11953)
!11953 = !{!11954}
!11954 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11952, file: !706, line: 48, baseType: !120, size: 8)
!11955 = !{!11956, !11957, !11958, !11959, !11960, !11961, !11962, !11963, !11964, !11965, !11966}
!11956 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11947, file: !2009, line: 528, type: !2013)
!11957 = !DILocalVariable(name: "stack", arg: 2, scope: !11947, file: !2009, line: 529, type: !11950)
!11958 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11947, file: !2009, line: 529, type: !185)
!11959 = !DILocalVariable(name: "entry", arg: 4, scope: !11947, file: !2009, line: 530, type: !687)
!11960 = !DILocalVariable(name: "p1", arg: 5, scope: !11947, file: !2009, line: 531, type: !106)
!11961 = !DILocalVariable(name: "p2", arg: 6, scope: !11947, file: !2009, line: 531, type: !106)
!11962 = !DILocalVariable(name: "p3", arg: 7, scope: !11947, file: !2009, line: 531, type: !106)
!11963 = !DILocalVariable(name: "prio", arg: 8, scope: !11947, file: !2009, line: 532, type: !107)
!11964 = !DILocalVariable(name: "options", arg: 9, scope: !11947, file: !2009, line: 532, type: !152)
!11965 = !DILocalVariable(name: "name", arg: 10, scope: !11947, file: !2009, line: 532, type: !118)
!11966 = !DILocalVariable(name: "stack_ptr", scope: !11947, file: !2009, line: 534, type: !193)
!11967 = !DILocation(line: 0, scope: !11947)
!11968 = !DILocation(line: 536, column: 2, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !2009, line: 536, column: 2)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !2009, line: 536, column: 2)
!11971 = distinct !DILexicalBlock(scope: !11947, file: !2009, line: 536, column: 2)
!11972 = !DILocation(line: 536, column: 2, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11969, file: !2009, line: 536, column: 2)
!11974 = !DILocation(line: 550, column: 28, scope: !11947)
!11975 = !DILocation(line: 550, column: 2, scope: !11947)
!11976 = !DILocation(line: 553, column: 34, scope: !11947)
!11977 = !DILocation(line: 553, column: 2, scope: !11947)
!11978 = !DILocation(line: 554, column: 14, scope: !11947)
!11979 = !DILocation(line: 564, column: 2, scope: !11947)
!11980 = !DILocation(line: 567, column: 14, scope: !11947)
!11981 = !DILocation(line: 567, column: 24, scope: !11947)
!11982 = !DILocation(line: 594, column: 11, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11947, file: !2009, line: 594, column: 6)
!11984 = !DILocation(line: 0, scope: !11983)
!11985 = !DILocation(line: 594, column: 6, scope: !11947)
!11986 = !DILocation(line: 595, column: 3, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11983, file: !2009, line: 594, column: 20)
!11988 = !DILocation(line: 598, column: 3, scope: !11987)
!11989 = !DILocation(line: 598, column: 52, scope: !11987)
!11990 = !DILocation(line: 599, column: 2, scope: !11987)
!11991 = !DILocation(line: 600, column: 23, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11983, file: !2009, line: 599, column: 9)
!11993 = !DILocation(line: 612, column: 7, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11947, file: !2009, line: 612, column: 6)
!11995 = !DILocation(line: 612, column: 6, scope: !11947)
!11996 = !DILocation(line: 627, column: 40, scope: !11947)
!11997 = !DILocation(line: 637, column: 2, scope: !11947)
!11998 = !DILocation(line: 613, column: 15, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11994, file: !2009, line: 612, column: 17)
!12000 = !DILocation(line: 613, column: 29, scope: !11999)
!12001 = !DILocation(line: 638, column: 1, scope: !11947)
!12002 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !11656, file: !11656, line: 78, type: !12003, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12005)
!12003 = !DISubroutineType(types: !12004)
!12004 = !{!145, !106}
!12005 = !{!12006}
!12006 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12002, file: !11656, line: 78, type: !106)
!12007 = !DILocation(line: 0, scope: !12002)
!12008 = !DILocation(line: 80, column: 21, scope: !12002)
!12009 = !DILocation(line: 80, column: 2, scope: !12002)
!12010 = distinct !DISubprogram(name: "z_waitq_init", scope: !12011, file: !12011, line: 47, type: !12012, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12014)
!12011 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12012 = !DISubroutineType(types: !12013)
!12013 = !{null, !2044}
!12014 = !{!12015}
!12015 = !DILocalVariable(name: "w", arg: 1, scope: !12010, file: !12011, line: 47, type: !2044)
!12016 = !DILocation(line: 0, scope: !12010)
!12017 = !DILocation(line: 49, column: 21, scope: !12010)
!12018 = !DILocation(line: 49, column: 2, scope: !12010)
!12019 = !DILocation(line: 50, column: 1, scope: !12010)
!12020 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2009, file: !2009, line: 791, type: !12021, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12024)
!12021 = !DISubroutineType(types: !12022)
!12022 = !{null, !12023, !107, !152, !32}
!12023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!12024 = !{!12025, !12026, !12027, !12028}
!12025 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12020, file: !2009, line: 791, type: !12023)
!12026 = !DILocalVariable(name: "priority", arg: 2, scope: !12020, file: !2009, line: 791, type: !107)
!12027 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12020, file: !2009, line: 792, type: !152)
!12028 = !DILocalVariable(name: "options", arg: 4, scope: !12020, file: !2009, line: 792, type: !32)
!12029 = !DILocation(line: 0, scope: !12020)
!12030 = !DILocation(line: 795, column: 15, scope: !12020)
!12031 = !DILocation(line: 795, column: 25, scope: !12020)
!12032 = !DILocation(line: 796, column: 30, scope: !12020)
!12033 = !DILocation(line: 796, column: 15, scope: !12020)
!12034 = !DILocation(line: 796, column: 28, scope: !12020)
!12035 = !DILocation(line: 797, column: 30, scope: !12020)
!12036 = !DILocation(line: 797, column: 15, scope: !12020)
!12037 = !DILocation(line: 797, column: 28, scope: !12020)
!12038 = !DILocation(line: 799, column: 22, scope: !12020)
!12039 = !DILocation(line: 799, column: 15, scope: !12020)
!12040 = !DILocation(line: 799, column: 20, scope: !12020)
!12041 = !DILocation(line: 801, column: 15, scope: !12020)
!12042 = !DILocation(line: 801, column: 28, scope: !12020)
!12043 = !DILocation(line: 814, column: 2, scope: !12020)
!12044 = !DILocation(line: 815, column: 1, scope: !12020)
!12045 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2009, file: !2009, line: 449, type: !12046, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12048)
!12046 = !DISubroutineType(types: !12047)
!12047 = !{!193, !2013, !11950, !185}
!12048 = !{!12049, !12050, !12051, !12052, !12053, !12054, !12055, !12056}
!12049 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12045, file: !2009, line: 449, type: !2013)
!12050 = !DILocalVariable(name: "stack", arg: 2, scope: !12045, file: !2009, line: 450, type: !11950)
!12051 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12045, file: !2009, line: 450, type: !185)
!12052 = !DILocalVariable(name: "stack_obj_size", scope: !12045, file: !2009, line: 452, type: !185)
!12053 = !DILocalVariable(name: "stack_buf_size", scope: !12045, file: !2009, line: 452, type: !185)
!12054 = !DILocalVariable(name: "stack_ptr", scope: !12045, file: !2009, line: 453, type: !193)
!12055 = !DILocalVariable(name: "stack_buf_start", scope: !12045, file: !2009, line: 453, type: !193)
!12056 = !DILocalVariable(name: "delta", scope: !12045, file: !2009, line: 454, type: !185)
!12057 = !DILocation(line: 0, scope: !12045)
!12058 = !DILocation(line: 465, column: 20, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12045, file: !2009, line: 463, column: 2)
!12060 = !DILocation(line: 473, column: 28, scope: !12045)
!12061 = !DILocation(line: 520, column: 2, scope: !12045)
!12062 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12063, file: !12063, line: 40, type: !12064, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12066)
!12063 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12064 = !DISubroutineType(types: !12065)
!12065 = !{null, !12023}
!12066 = !{!12067}
!12067 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12062, file: !12063, line: 40, type: !12023)
!12068 = !DILocation(line: 0, scope: !12062)
!12069 = !DILocation(line: 42, column: 31, scope: !12062)
!12070 = !DILocation(line: 42, column: 2, scope: !12062)
!12071 = !DILocation(line: 43, column: 1, scope: !12062)
!12072 = distinct !DISubprogram(name: "z_init_timeout", scope: !12063, file: !12063, line: 25, type: !2070, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12073)
!12073 = !{!12074}
!12074 = !DILocalVariable(name: "to", arg: 1, scope: !12072, file: !12063, line: 25, type: !2072)
!12075 = !DILocation(line: 0, scope: !12072)
!12076 = !DILocation(line: 27, column: 22, scope: !12072)
!12077 = !DILocation(line: 27, column: 2, scope: !12072)
!12078 = !DILocation(line: 28, column: 1, scope: !12072)
!12079 = distinct !DISubprogram(name: "sys_dnode_init", scope: !726, file: !726, line: 211, type: !12080, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12082)
!12080 = !DISubroutineType(types: !12081)
!12081 = !{null, !2113}
!12082 = !{!12083}
!12083 = !DILocalVariable(name: "node", arg: 1, scope: !12079, file: !726, line: 211, type: !2113)
!12084 = !DILocation(line: 0, scope: !12079)
!12085 = !DILocation(line: 213, column: 8, scope: !12079)
!12086 = !DILocation(line: 213, column: 13, scope: !12079)
!12087 = !DILocation(line: 214, column: 8, scope: !12079)
!12088 = !DILocation(line: 214, column: 13, scope: !12079)
!12089 = !DILocation(line: 215, column: 1, scope: !12079)
!12090 = distinct !DISubprogram(name: "sys_dlist_init", scope: !726, file: !726, line: 197, type: !12091, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12094)
!12091 = !DISubroutineType(types: !12092)
!12092 = !{null, !12093}
!12093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!12094 = !{!12095}
!12095 = !DILocalVariable(name: "list", arg: 1, scope: !12090, file: !726, line: 197, type: !12093)
!12096 = !DILocation(line: 0, scope: !12090)
!12097 = !DILocation(line: 199, column: 8, scope: !12090)
!12098 = !DILocation(line: 199, column: 13, scope: !12090)
!12099 = !DILocation(line: 200, column: 8, scope: !12090)
!12100 = !DILocation(line: 200, column: 13, scope: !12090)
!12101 = !DILocation(line: 201, column: 1, scope: !12090)
!12102 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2009, file: !2009, line: 641, type: !12103, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12109)
!12103 = !DISubroutineType(types: !12104)
!12104 = !{!2012, !2013, !11950, !185, !687, !106, !106, !106, !107, !152, !12105}
!12105 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !12106)
!12106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !12107)
!12107 = !{!12108}
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12106, file: !693, line: 66, baseType: !692, size: 64)
!12109 = !{!12110, !12111, !12112, !12113, !12114, !12115, !12116, !12117, !12118, !12119}
!12110 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12102, file: !2009, line: 641, type: !2013)
!12111 = !DILocalVariable(name: "stack", arg: 2, scope: !12102, file: !2009, line: 642, type: !11950)
!12112 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12102, file: !2009, line: 643, type: !185)
!12113 = !DILocalVariable(name: "entry", arg: 4, scope: !12102, file: !2009, line: 643, type: !687)
!12114 = !DILocalVariable(name: "p1", arg: 5, scope: !12102, file: !2009, line: 644, type: !106)
!12115 = !DILocalVariable(name: "p2", arg: 6, scope: !12102, file: !2009, line: 644, type: !106)
!12116 = !DILocalVariable(name: "p3", arg: 7, scope: !12102, file: !2009, line: 644, type: !106)
!12117 = !DILocalVariable(name: "prio", arg: 8, scope: !12102, file: !2009, line: 645, type: !107)
!12118 = !DILocalVariable(name: "options", arg: 9, scope: !12102, file: !2009, line: 645, type: !152)
!12119 = !DILocalVariable(name: "delay", arg: 10, scope: !12102, file: !2009, line: 645, type: !12105)
!12120 = !DILocation(line: 0, scope: !12102)
!12121 = !DILocation(line: 1031, column: 3, scope: !11827, inlinedAt: !12122)
!12122 = distinct !DILocation(line: 48, column: 10, scope: !11831, inlinedAt: !12123)
!12123 = distinct !DILocation(line: 647, column: 2, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12125, file: !2009, line: 647, column: 2)
!12125 = distinct !DILexicalBlock(scope: !12102, file: !2009, line: 647, column: 2)
!12126 = !DILocation(line: 0, scope: !11827, inlinedAt: !12122)
!12127 = !DILocation(line: 48, column: 9, scope: !11831, inlinedAt: !12123)
!12128 = !DILocation(line: 647, column: 2, scope: !12125)
!12129 = !DILocation(line: 647, column: 2, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12124, file: !2009, line: 647, column: 2)
!12131 = !DILocation(line: 649, column: 2, scope: !12102)
!12132 = !DILocation(line: 652, column: 7, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12102, file: !2009, line: 652, column: 6)
!12134 = !DILocation(line: 652, column: 6, scope: !12102)
!12135 = !DILocation(line: 653, column: 3, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12133, file: !2009, line: 652, column: 39)
!12137 = !DILocation(line: 654, column: 2, scope: !12136)
!12138 = !DILocation(line: 656, column: 2, scope: !12102)
!12139 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2009, file: !2009, line: 401, type: !12140, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12142)
!12140 = !DISubroutineType(types: !12141)
!12141 = !{null, !2013, !12105}
!12142 = !{!12143, !12144}
!12143 = !DILocalVariable(name: "thread", arg: 1, scope: !12139, file: !2009, line: 401, type: !2013)
!12144 = !DILocalVariable(name: "delay", arg: 2, scope: !12139, file: !2009, line: 401, type: !12105)
!12145 = !DILocation(line: 0, scope: !12139)
!12146 = !DILocation(line: 404, column: 6, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12139, file: !2009, line: 404, column: 6)
!12148 = !DILocation(line: 404, column: 6, scope: !12139)
!12149 = !DILocation(line: 405, column: 3, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12147, file: !2009, line: 404, column: 38)
!12151 = !DILocation(line: 406, column: 2, scope: !12150)
!12152 = !DILocation(line: 407, column: 3, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12147, file: !2009, line: 406, column: 9)
!12154 = !DILocation(line: 413, column: 1, scope: !12139)
!12155 = distinct !DISubprogram(name: "k_thread_start", scope: !4224, file: !4224, line: 205, type: !12156, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12158)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{null, !2012}
!12158 = !{!12159}
!12159 = !DILocalVariable(name: "thread", arg: 1, scope: !12155, file: !4224, line: 205, type: !2012)
!12160 = !DILocation(line: 0, scope: !12155)
!12161 = !DILocation(line: 214, column: 2, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12155, file: !4224, line: 214, column: 2)
!12163 = !{i64 2151071522}
!12164 = !DILocation(line: 215, column: 2, scope: !12155)
!12165 = !DILocation(line: 216, column: 1, scope: !12155)
!12166 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12063, file: !12063, line: 47, type: !12140, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12167)
!12167 = !{!12168, !12169}
!12168 = !DILocalVariable(name: "thread", arg: 1, scope: !12166, file: !12063, line: 47, type: !2013)
!12169 = !DILocalVariable(name: "ticks", arg: 2, scope: !12166, file: !12063, line: 47, type: !12105)
!12170 = !DILocation(line: 0, scope: !12166)
!12171 = !DILocation(line: 49, column: 30, scope: !12166)
!12172 = !DILocation(line: 49, column: 2, scope: !12166)
!12173 = !DILocation(line: 50, column: 1, scope: !12166)
!12174 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2009, file: !2009, line: 748, type: !2909, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12175)
!12175 = !{!12176, !12194}
!12176 = !DILocalVariable(name: "thread_data", scope: !12177, file: !2009, line: 750, type: !12178)
!12177 = distinct !DILexicalBlock(scope: !12174, file: !2009, line: 750, column: 2)
!12178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12179, size: 32)
!12179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !804, line: 620, size: 384, elements: !12180)
!12180 = !{!12181, !12182, !12183, !12184, !12185, !12186, !12187, !12188, !12189, !12190, !12191, !12193}
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12179, file: !804, line: 621, baseType: !2013, size: 32)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12179, file: !804, line: 622, baseType: !11950, size: 32, offset: 32)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12179, file: !804, line: 623, baseType: !32, size: 32, offset: 64)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12179, file: !804, line: 624, baseType: !687, size: 32, offset: 96)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12179, file: !804, line: 625, baseType: !106, size: 32, offset: 128)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12179, file: !804, line: 626, baseType: !106, size: 32, offset: 160)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12179, file: !804, line: 627, baseType: !106, size: 32, offset: 192)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12179, file: !804, line: 628, baseType: !107, size: 32, offset: 224)
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12179, file: !804, line: 629, baseType: !152, size: 32, offset: 256)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12179, file: !804, line: 630, baseType: !1149, size: 32, offset: 288)
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12179, file: !804, line: 631, baseType: !12192, size: 32, offset: 320)
!12192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 32)
!12193 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12179, file: !804, line: 632, baseType: !118, size: 32, offset: 352)
!12194 = !DILocalVariable(name: "thread_data", scope: !12195, file: !2009, line: 781, type: !12178)
!12195 = distinct !DILexicalBlock(scope: !12174, file: !2009, line: 781, column: 2)
!12196 = !DILocation(line: 0, scope: !12177)
!12197 = !DILocation(line: 750, column: 2, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12199, file: !2009, line: 750, column: 2)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !2009, line: 750, column: 2)
!12200 = distinct !DILexicalBlock(scope: !12177, file: !2009, line: 750, column: 2)
!12201 = !DILocation(line: 750, column: 2, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !2009, line: 750, column: 2)
!12203 = distinct !DILexicalBlock(scope: !12198, file: !2009, line: 750, column: 2)
!12204 = !DILocation(line: 750, column: 2, scope: !12199)
!12205 = !DILocation(line: 750, column: 2, scope: !12177)
!12206 = !DILocation(line: 780, column: 2, scope: !12174)
!12207 = !DILocation(line: 0, scope: !12195)
!12208 = !DILocation(line: 781, column: 2, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12210, file: !2009, line: 781, column: 2)
!12210 = distinct !DILexicalBlock(scope: !12211, file: !2009, line: 781, column: 2)
!12211 = distinct !DILexicalBlock(scope: !12195, file: !2009, line: 781, column: 2)
!12212 = !DILocation(line: 752, column: 17, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12200, file: !2009, line: 750, column: 38)
!12214 = !DILocation(line: 753, column: 17, scope: !12213)
!12215 = !DILocation(line: 754, column: 17, scope: !12213)
!12216 = !DILocation(line: 755, column: 17, scope: !12213)
!12217 = !DILocation(line: 756, column: 17, scope: !12213)
!12218 = !DILocation(line: 757, column: 17, scope: !12213)
!12219 = !DILocation(line: 758, column: 17, scope: !12213)
!12220 = !DILocation(line: 759, column: 17, scope: !12213)
!12221 = !DILocation(line: 760, column: 17, scope: !12213)
!12222 = !DILocation(line: 761, column: 17, scope: !12213)
!12223 = !DILocation(line: 751, column: 3, scope: !12213)
!12224 = !DILocation(line: 763, column: 16, scope: !12213)
!12225 = !DILocation(line: 763, column: 29, scope: !12213)
!12226 = !DILocation(line: 763, column: 39, scope: !12213)
!12227 = !DILocation(line: 750, column: 2, scope: !12200)
!12228 = !DILocation(line: 750, column: 2, scope: !12203)
!12229 = distinct !{!12229, !12205, !12230}
!12230 = !DILocation(line: 764, column: 2, scope: !12177)
!12231 = !DILocation(line: 781, column: 2, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !2009, line: 781, column: 2)
!12233 = distinct !DILexicalBlock(scope: !12209, file: !2009, line: 781, column: 2)
!12234 = !DILocation(line: 781, column: 2, scope: !12210)
!12235 = !DILocation(line: 781, column: 2, scope: !12195)
!12236 = !DILocation(line: 787, column: 2, scope: !12174)
!12237 = !DILocation(line: 788, column: 1, scope: !12174)
!12238 = !DILocation(line: 782, column: 20, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12240, file: !2009, line: 782, column: 7)
!12240 = distinct !DILexicalBlock(scope: !12211, file: !2009, line: 781, column: 38)
!12241 = !DILocation(line: 782, column: 31, scope: !12239)
!12242 = !DILocation(line: 782, column: 7, scope: !12240)
!12243 = !DILocation(line: 783, column: 37, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12239, file: !2009, line: 782, column: 51)
!12245 = !DILocation(line: 784, column: 10, scope: !12244)
!12246 = !DILocation(line: 783, column: 4, scope: !12244)
!12247 = !DILocation(line: 785, column: 3, scope: !12244)
!12248 = !DILocation(line: 781, column: 2, scope: !12211)
!12249 = !DILocation(line: 781, column: 2, scope: !12233)
!12250 = distinct !{!12250, !12235, !12251}
!12251 = !DILocation(line: 786, column: 2, scope: !12195)
!12252 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8092, file: !8092, line: 403, type: !12253, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12255)
!12253 = !DISubroutineType(types: !12254)
!12254 = !{!695, !695}
!12255 = !{!12256}
!12256 = !DILocalVariable(name: "t", arg: 1, scope: !12252, file: !8092, line: 403, type: !695)
!12257 = !DILocation(line: 0, scope: !12252)
!12258 = !DILocalVariable(name: "t", arg: 1, scope: !12259, file: !8092, line: 102, type: !695)
!12259 = distinct !DISubprogram(name: "z_tmcvt", scope: !8092, file: !8092, line: 102, type: !8101, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12260)
!12260 = !{!12258, !12261, !12262, !12263, !12264, !12265, !12266, !12267, !12268, !12269, !12270}
!12261 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12259, file: !8092, line: 102, type: !152)
!12262 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12259, file: !8092, line: 103, type: !152)
!12263 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12259, file: !8092, line: 103, type: !145)
!12264 = !DILocalVariable(name: "result32", arg: 5, scope: !12259, file: !8092, line: 104, type: !145)
!12265 = !DILocalVariable(name: "round_up", arg: 6, scope: !12259, file: !8092, line: 104, type: !145)
!12266 = !DILocalVariable(name: "round_off", arg: 7, scope: !12259, file: !8092, line: 105, type: !145)
!12267 = !DILocalVariable(name: "mul_ratio", scope: !12259, file: !8092, line: 107, type: !145)
!12268 = !DILocalVariable(name: "div_ratio", scope: !12259, file: !8092, line: 109, type: !145)
!12269 = !DILocalVariable(name: "off", scope: !12259, file: !8092, line: 116, type: !695)
!12270 = !DILocalVariable(name: "rdivisor", scope: !12271, file: !8092, line: 119, type: !152)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !8092, line: 118, column: 18)
!12272 = distinct !DILexicalBlock(scope: !12259, file: !8092, line: 118, column: 6)
!12273 = !DILocation(line: 0, scope: !12259, inlinedAt: !12274)
!12274 = distinct !DILocation(line: 406, column: 9, scope: !12252)
!12275 = !DILocation(line: 145, column: 13, scope: !12276, inlinedAt: !12274)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !8092, line: 144, column: 10)
!12277 = distinct !DILexicalBlock(scope: !12278, file: !8092, line: 142, column: 7)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !8092, line: 141, column: 24)
!12279 = distinct !DILexicalBlock(scope: !12280, file: !8092, line: 141, column: 13)
!12280 = distinct !DILexicalBlock(scope: !12259, file: !8092, line: 134, column: 6)
!12281 = !DILocation(line: 406, column: 2, scope: !12252)
!12282 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2009, file: !2009, line: 817, type: !4108, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12283)
!12283 = !{!12284, !12285, !12286, !12287}
!12284 = !DILocalVariable(name: "entry", arg: 1, scope: !12282, file: !2009, line: 817, type: !687)
!12285 = !DILocalVariable(name: "p1", arg: 2, scope: !12282, file: !2009, line: 818, type: !106)
!12286 = !DILocalVariable(name: "p2", arg: 3, scope: !12282, file: !2009, line: 818, type: !106)
!12287 = !DILocalVariable(name: "p3", arg: 4, scope: !12282, file: !2009, line: 818, type: !106)
!12288 = !DILocation(line: 0, scope: !12282)
!12289 = !DILocation(line: 822, column: 2, scope: !12282)
!12290 = !DILocation(line: 822, column: 17, scope: !12282)
!12291 = !DILocation(line: 822, column: 30, scope: !12282)
!12292 = !DILocation(line: 823, column: 2, scope: !12282)
!12293 = !DILocation(line: 845, column: 2, scope: !12282)
!12294 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2009, file: !2009, line: 853, type: !12295, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12298)
!12295 = !DISubroutineType(types: !12296)
!12296 = !{!145, !12297}
!12297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!12298 = !{!12299, !12300}
!12299 = !DILocalVariable(name: "l", arg: 1, scope: !12294, file: !2009, line: 853, type: !12297)
!12300 = !DILocalVariable(name: "thread_cpu", scope: !12294, file: !2009, line: 855, type: !22)
!12301 = !DILocation(line: 0, scope: !12294)
!12302 = !DILocation(line: 855, column: 28, scope: !12294)
!12303 = !DILocation(line: 857, column: 17, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12294, file: !2009, line: 857, column: 6)
!12305 = !DILocation(line: 857, column: 6, scope: !12294)
!12306 = !DILocation(line: 858, column: 19, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !2009, line: 858, column: 7)
!12308 = distinct !DILexicalBlock(scope: !12304, file: !2009, line: 857, column: 24)
!12309 = !DILocation(line: 858, column: 42, scope: !12307)
!12310 = !DILocation(line: 858, column: 28, scope: !12307)
!12311 = !DILocation(line: 858, column: 25, scope: !12307)
!12312 = !DILocation(line: 858, column: 7, scope: !12308)
!12313 = !DILocation(line: 862, column: 2, scope: !12294)
!12314 = !DILocation(line: 863, column: 1, scope: !12294)
!12315 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2009, file: !2009, line: 865, type: !12295, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12316)
!12316 = !{!12317}
!12317 = !DILocalVariable(name: "l", arg: 1, scope: !12315, file: !2009, line: 865, type: !12297)
!12318 = !DILocation(line: 0, scope: !12315)
!12319 = !DILocation(line: 867, column: 9, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12315, file: !2009, line: 867, column: 6)
!12321 = !DILocation(line: 867, column: 38, scope: !12320)
!12322 = !DILocation(line: 867, column: 24, scope: !12320)
!12323 = !DILocation(line: 867, column: 54, scope: !12320)
!12324 = !DILocation(line: 867, column: 43, scope: !12320)
!12325 = !DILocation(line: 867, column: 41, scope: !12320)
!12326 = !DILocation(line: 867, column: 20, scope: !12320)
!12327 = !DILocation(line: 867, column: 6, scope: !12315)
!12328 = !DILocation(line: 870, column: 16, scope: !12315)
!12329 = !DILocation(line: 871, column: 2, scope: !12315)
!12330 = !DILocation(line: 872, column: 1, scope: !12315)
!12331 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2009, file: !2009, line: 874, type: !12332, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12334)
!12332 = !DISubroutineType(types: !12333)
!12333 = !{null, !12297}
!12334 = !{!12335}
!12335 = !DILocalVariable(name: "l", arg: 1, scope: !12331, file: !2009, line: 874, type: !12297)
!12336 = !DILocation(line: 0, scope: !12331)
!12337 = !DILocation(line: 876, column: 32, scope: !12331)
!12338 = !DILocation(line: 876, column: 18, scope: !12331)
!12339 = !DILocation(line: 876, column: 48, scope: !12331)
!12340 = !DILocation(line: 876, column: 37, scope: !12331)
!12341 = !DILocation(line: 876, column: 35, scope: !12331)
!12342 = !DILocation(line: 876, column: 5, scope: !12331)
!12343 = !DILocation(line: 876, column: 16, scope: !12331)
!12344 = !DILocation(line: 877, column: 1, scope: !12331)
!12345 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2009, file: !2009, line: 888, type: !12346, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12348)
!12346 = !DISubroutineType(types: !12347)
!12347 = !{!107, !2013}
!12348 = !{!12349}
!12349 = !DILocalVariable(name: "thread", arg: 1, scope: !12345, file: !2009, line: 888, type: !2013)
!12350 = !DILocation(line: 0, scope: !12345)
!12351 = !DILocation(line: 893, column: 2, scope: !12345)
!12352 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2009, file: !2009, line: 897, type: !12353, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!107, !2013, !32}
!12355 = !{!12356, !12357}
!12356 = !DILocalVariable(name: "thread", arg: 1, scope: !12352, file: !2009, line: 897, type: !2013)
!12357 = !DILocalVariable(name: "options", arg: 2, scope: !12352, file: !2009, line: 897, type: !32)
!12358 = !DILocation(line: 0, scope: !12352)
!12359 = !DILocation(line: 902, column: 2, scope: !12352)
!12360 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2009, file: !2009, line: 1072, type: !12361, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12366)
!12361 = !DISubroutineType(types: !12362)
!12362 = !{!107, !2012, !12363}
!12363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12364, size: 32)
!12364 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !716, line: 234, baseType: !12365)
!12365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !716, line: 192, elements: !1949)
!12366 = !{!12367, !12368}
!12367 = !DILocalVariable(name: "thread", arg: 1, scope: !12360, file: !2009, line: 1072, type: !2012)
!12368 = !DILocalVariable(name: "stats", arg: 2, scope: !12360, file: !2009, line: 1073, type: !12363)
!12369 = !DILocation(line: 0, scope: !12360)
!12370 = !DILocation(line: 1075, column: 14, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12360, file: !2009, line: 1075, column: 6)
!12372 = !DILocation(line: 1075, column: 23, scope: !12371)
!12373 = !DILocation(line: 1086, column: 1, scope: !12360)
!12374 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2009, file: !2009, line: 1088, type: !12375, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12377)
!12375 = !DISubroutineType(types: !12376)
!12376 = !{!107, !12363}
!12377 = !{!12378}
!12378 = !DILocalVariable(name: "stats", arg: 1, scope: !12374, file: !2009, line: 1088, type: !12363)
!12379 = !DILocation(line: 0, scope: !12374)
!12380 = !DILocation(line: 1094, column: 12, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12374, file: !2009, line: 1094, column: 6)
!12382 = !DILocation(line: 1120, column: 1, scope: !12374)
!12383 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12384, file: !12384, line: 20, type: !2909, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !1949)
!12384 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12385 = !DILocation(line: 30, column: 2, scope: !12383)
!12386 = !DILocation(line: 31, column: 1, scope: !12383)
!12387 = distinct !DISubprogram(name: "idle", scope: !12384, file: !12384, line: 33, type: !690, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !12388)
!12388 = !{!12389, !12390, !12391}
!12389 = !DILocalVariable(name: "unused1", arg: 1, scope: !12387, file: !12384, line: 33, type: !106)
!12390 = !DILocalVariable(name: "unused2", arg: 2, scope: !12387, file: !12384, line: 33, type: !106)
!12391 = !DILocalVariable(name: "unused3", arg: 3, scope: !12387, file: !12384, line: 33, type: !106)
!12392 = !DILocation(line: 0, scope: !12387)
!12393 = !DILocation(line: 39, column: 2, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12395, file: !12384, line: 39, column: 2)
!12395 = distinct !DILexicalBlock(scope: !12387, file: !12384, line: 39, column: 2)
!12396 = !DILocation(line: 39, column: 2, scope: !12395)
!12397 = !DILocation(line: 39, column: 2, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12394, file: !12384, line: 39, column: 2)
!12399 = !DILocation(line: 55, column: 2, scope: !12400, inlinedAt: !12404)
!12400 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6124, file: !6124, line: 42, type: !8804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !12401)
!12401 = !{!12402, !12403}
!12402 = !DILocalVariable(name: "key", scope: !12400, file: !6124, line: 44, type: !32)
!12403 = !DILocalVariable(name: "tmp", scope: !12400, file: !6124, line: 53, type: !32)
!12404 = distinct !DILocation(line: 62, column: 10, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12387, file: !12384, line: 41, column: 15)
!12406 = !{i64 2845497}
!12407 = !DILocation(line: 0, scope: !12400, inlinedAt: !12404)
!12408 = !DILocation(line: 86, column: 3, scope: !12405)
!12409 = !DILocation(line: 41, column: 2, scope: !12387)
!12410 = distinct !{!12410, !12409, !12411}
!12411 = !DILocation(line: 105, column: 2, scope: !12387)
!12412 = distinct !DISubprogram(name: "k_cpu_idle", scope: !804, file: !804, line: 5627, type: !2909, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !1949)
!12413 = !DILocation(line: 5629, column: 2, scope: !12412)
!12414 = !DILocation(line: 5630, column: 1, scope: !12412)
!12415 = !DISubprogram(name: "arch_cpu_idle", scope: !688, file: !688, line: 167, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!12416 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2236, file: !2236, line: 93, type: !12417, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12419)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!1149, !2134, !2134}
!12419 = !{!12420, !12421, !12422, !12423}
!12420 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12416, file: !2236, line: 93, type: !2134)
!12421 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12416, file: !2236, line: 94, type: !2134)
!12422 = !DILocalVariable(name: "b1", scope: !12416, file: !2236, line: 97, type: !1149)
!12423 = !DILocalVariable(name: "b2", scope: !12416, file: !2236, line: 98, type: !1149)
!12424 = !DILocation(line: 0, scope: !12416)
!12425 = !DILocation(line: 97, column: 30, scope: !12416)
!12426 = !DILocation(line: 98, column: 30, scope: !12416)
!12427 = !DILocation(line: 100, column: 9, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12416, file: !2236, line: 100, column: 6)
!12429 = !DILocation(line: 100, column: 6, scope: !12416)
!12430 = !DILocation(line: 125, column: 1, scope: !12416)
!12431 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2236, file: !2236, line: 428, type: !12432, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12434)
!12432 = !DISubroutineType(types: !12433)
!12433 = !{null, !2134}
!12434 = !{!12435}
!12435 = !DILocalVariable(name: "curr", arg: 1, scope: !12431, file: !2236, line: 428, type: !2134)
!12436 = !DILocation(line: 0, scope: !12431)
!12437 = !DILocation(line: 434, column: 6, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12431, file: !2236, line: 434, column: 6)
!12439 = !DILocation(line: 434, column: 23, scope: !12438)
!12440 = !DILocation(line: 434, column: 6, scope: !12431)
!12441 = !DILocation(line: 435, column: 50, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12438, file: !2236, line: 434, column: 29)
!12443 = !DILocation(line: 435, column: 48, scope: !12442)
!12444 = !DILocation(line: 435, column: 29, scope: !12442)
!12445 = !DILocation(line: 436, column: 24, scope: !12442)
!12446 = !DILocation(line: 436, column: 3, scope: !12442)
!12447 = !DILocation(line: 437, column: 2, scope: !12442)
!12448 = !DILocation(line: 438, column: 1, scope: !12431)
!12449 = distinct !DISubprogram(name: "slice_time", scope: !2236, file: !2236, line: 407, type: !12450, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12452)
!12450 = !DISubroutineType(types: !12451)
!12451 = !{!107, !2134}
!12452 = !{!12453, !12454}
!12453 = !DILocalVariable(name: "curr", arg: 1, scope: !12449, file: !2236, line: 407, type: !2134)
!12454 = !DILocalVariable(name: "ret", scope: !12449, file: !2236, line: 409, type: !107)
!12455 = !DILocation(line: 0, scope: !12449)
!12456 = !DILocation(line: 409, column: 12, scope: !12449)
!12457 = !DILocation(line: 416, column: 2, scope: !12449)
!12458 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2236, file: !2236, line: 440, type: !12459, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12461)
!12459 = !DISubroutineType(types: !12460)
!12460 = !{null, !1149, !107}
!12461 = !{!12462, !12463, !12464, !12470}
!12462 = !DILocalVariable(name: "slice", arg: 1, scope: !12458, file: !2236, line: 440, type: !1149)
!12463 = !DILocalVariable(name: "prio", arg: 2, scope: !12458, file: !2236, line: 440, type: !107)
!12464 = !DILocalVariable(name: "__i", scope: !12465, file: !2236, line: 442, type: !12466)
!12465 = distinct !DILexicalBlock(scope: !12458, file: !2236, line: 442, column: 2)
!12466 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !818, line: 106, baseType: !12467)
!12467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !818, line: 32, size: 32, elements: !12468)
!12468 = !{!12469}
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12467, file: !818, line: 33, baseType: !107, size: 32)
!12470 = !DILocalVariable(name: "__key", scope: !12465, file: !2236, line: 442, type: !12466)
!12471 = !DILocation(line: 0, scope: !12458)
!12472 = !DILocation(line: 0, scope: !12465)
!12473 = !DILocalVariable(name: "l", arg: 1, scope: !12474, file: !818, line: 136, type: !12477)
!12474 = distinct !DISubprogram(name: "k_spin_lock", scope: !818, file: !818, line: 136, type: !12475, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12478)
!12475 = !DISubroutineType(types: !12476)
!12476 = !{!12466, !12477}
!12477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!12478 = !{!12473, !12479}
!12479 = !DILocalVariable(name: "k", scope: !12474, file: !818, line: 139, type: !12466)
!12480 = !DILocation(line: 0, scope: !12474, inlinedAt: !12481)
!12481 = distinct !DILocation(line: 442, column: 2, scope: !12465)
!12482 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !12487)
!12483 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6124, file: !6124, line: 42, type: !8804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12484)
!12484 = !{!12485, !12486}
!12485 = !DILocalVariable(name: "key", scope: !12483, file: !6124, line: 44, type: !32)
!12486 = !DILocalVariable(name: "tmp", scope: !12483, file: !6124, line: 53, type: !32)
!12487 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !12481)
!12488 = !{i64 2889468}
!12489 = !DILocation(line: 0, scope: !12483, inlinedAt: !12487)
!12490 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !12481)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !818, line: 148, column: 2)
!12492 = distinct !DILexicalBlock(scope: !12474, file: !818, line: 148, column: 2)
!12493 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !12481)
!12494 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !12481)
!12495 = distinct !DILexicalBlock(scope: !12491, file: !818, line: 148, column: 2)
!12496 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !12481)
!12497 = !DILocation(line: 443, column: 29, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !2236, line: 442, column: 26)
!12499 = distinct !DILexicalBlock(scope: !12465, file: !2236, line: 442, column: 2)
!12500 = !DILocation(line: 444, column: 17, scope: !12498)
!12501 = !DILocation(line: 445, column: 51, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12498, file: !2236, line: 445, column: 7)
!12503 = !DILocation(line: 445, column: 7, scope: !12498)
!12504 = !DILocation(line: 0, scope: !12498)
!12505 = !DILocation(line: 451, column: 18, scope: !12498)
!12506 = !DILocation(line: 452, column: 3, scope: !12498)
!12507 = !DILocalVariable(name: "key", arg: 2, scope: !12508, file: !818, line: 190, type: !12466)
!12508 = distinct !DISubprogram(name: "k_spin_unlock", scope: !818, file: !818, line: 189, type: !12509, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12511)
!12509 = !DISubroutineType(types: !12510)
!12510 = !{null, !12477, !12466}
!12511 = !{!12512, !12507}
!12512 = !DILocalVariable(name: "l", arg: 1, scope: !12508, file: !818, line: 189, type: !12477)
!12513 = !DILocation(line: 0, scope: !12508, inlinedAt: !12514)
!12514 = distinct !DILocation(line: 442, column: 2, scope: !12499)
!12515 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !12514)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !818, line: 194, column: 2)
!12517 = distinct !DILexicalBlock(scope: !12508, file: !818, line: 194, column: 2)
!12518 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !12514)
!12519 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !12514)
!12520 = distinct !DILexicalBlock(scope: !12516, file: !818, line: 194, column: 2)
!12521 = !DILocalVariable(name: "key", arg: 1, scope: !12522, file: !6124, line: 84, type: !32)
!12522 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12523)
!12523 = !{!12521}
!12524 = !DILocation(line: 0, scope: !12522, inlinedAt: !12525)
!12525 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !12514)
!12526 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !12525)
!12527 = !{i64 2890285}
!12528 = !DILocation(line: 454, column: 1, scope: !12458)
!12529 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8092, file: !8092, line: 389, type: !8093, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12530)
!12530 = !{!12531}
!12531 = !DILocalVariable(name: "t", arg: 1, scope: !12529, file: !8092, line: 389, type: !152)
!12532 = !DILocation(line: 0, scope: !12529)
!12533 = !DILocalVariable(name: "t", arg: 1, scope: !12534, file: !8092, line: 102, type: !695)
!12534 = distinct !DISubprogram(name: "z_tmcvt", scope: !8092, file: !8092, line: 102, type: !8101, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12535)
!12535 = !{!12533, !12536, !12537, !12538, !12539, !12540, !12541, !12542, !12543, !12544, !12545}
!12536 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12534, file: !8092, line: 102, type: !152)
!12537 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12534, file: !8092, line: 103, type: !152)
!12538 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12534, file: !8092, line: 103, type: !145)
!12539 = !DILocalVariable(name: "result32", arg: 5, scope: !12534, file: !8092, line: 104, type: !145)
!12540 = !DILocalVariable(name: "round_up", arg: 6, scope: !12534, file: !8092, line: 104, type: !145)
!12541 = !DILocalVariable(name: "round_off", arg: 7, scope: !12534, file: !8092, line: 105, type: !145)
!12542 = !DILocalVariable(name: "mul_ratio", scope: !12534, file: !8092, line: 107, type: !145)
!12543 = !DILocalVariable(name: "div_ratio", scope: !12534, file: !8092, line: 109, type: !145)
!12544 = !DILocalVariable(name: "off", scope: !12534, file: !8092, line: 116, type: !695)
!12545 = !DILocalVariable(name: "rdivisor", scope: !12546, file: !8092, line: 119, type: !152)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !8092, line: 118, column: 18)
!12547 = distinct !DILexicalBlock(scope: !12534, file: !8092, line: 118, column: 6)
!12548 = !DILocation(line: 0, scope: !12534, inlinedAt: !12549)
!12549 = distinct !DILocation(line: 392, column: 9, scope: !12529)
!12550 = !DILocation(line: 143, column: 25, scope: !12551, inlinedAt: !12549)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !8092, line: 142, column: 17)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !8092, line: 142, column: 7)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !8092, line: 141, column: 24)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !8092, line: 141, column: 13)
!12555 = distinct !DILexicalBlock(scope: !12534, file: !8092, line: 134, column: 6)
!12556 = !DILocation(line: 392, column: 2, scope: !12529)
!12557 = distinct !DISubprogram(name: "z_time_slice", scope: !2236, file: !2236, line: 502, type: !11613, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12558)
!12558 = !{!12559, !12560}
!12559 = !DILocalVariable(name: "ticks", arg: 1, scope: !12557, file: !2236, line: 502, type: !107)
!12560 = !DILocalVariable(name: "key", scope: !12557, file: !2236, line: 511, type: !12466)
!12561 = !DILocation(line: 0, scope: !12557)
!12562 = !DILocation(line: 0, scope: !12474, inlinedAt: !12563)
!12563 = distinct !DILocation(line: 511, column: 25, scope: !12557)
!12564 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !12565)
!12565 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !12563)
!12566 = !DILocation(line: 0, scope: !12483, inlinedAt: !12565)
!12567 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !12563)
!12568 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !12563)
!12569 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !12563)
!12570 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !12563)
!12571 = !DILocation(line: 514, column: 6, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12557, file: !2236, line: 514, column: 6)
!12573 = !DILocation(line: 514, column: 25, scope: !12572)
!12574 = !DILocation(line: 514, column: 22, scope: !12572)
!12575 = !DILocation(line: 514, column: 6, scope: !12557)
!12576 = !DILocation(line: 515, column: 3, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12572, file: !2236, line: 514, column: 35)
!12578 = !DILocation(line: 0, scope: !12508, inlinedAt: !12579)
!12579 = distinct !DILocation(line: 516, column: 3, scope: !12577)
!12580 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !12579)
!12581 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !12579)
!12582 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !12579)
!12583 = !DILocation(line: 0, scope: !12522, inlinedAt: !12584)
!12584 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !12579)
!12585 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !12584)
!12586 = !DILocation(line: 517, column: 3, scope: !12577)
!12587 = !DILocation(line: 519, column: 18, scope: !12557)
!12588 = !DILocation(line: 522, column: 6, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12557, file: !2236, line: 522, column: 6)
!12590 = !DILocation(line: 522, column: 27, scope: !12589)
!12591 = !DILocation(line: 522, column: 30, scope: !12589)
!12592 = !DILocation(line: 522, column: 6, scope: !12557)
!12593 = !DILocation(line: 523, column: 30, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12595, file: !2236, line: 523, column: 7)
!12595 = distinct !DILexicalBlock(scope: !12589, file: !2236, line: 522, column: 51)
!12596 = !DILocation(line: 523, column: 13, scope: !12594)
!12597 = !DILocation(line: 523, column: 7, scope: !12595)
!12598 = !DILocation(line: 530, column: 10, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12594, file: !2236, line: 523, column: 43)
!12600 = !DILocation(line: 531, column: 3, scope: !12599)
!12601 = !DILocation(line: 532, column: 30, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12594, file: !2236, line: 531, column: 10)
!12603 = !DILocation(line: 535, column: 29, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12589, file: !2236, line: 534, column: 9)
!12605 = !DILocation(line: 0, scope: !12508, inlinedAt: !12606)
!12606 = distinct !DILocation(line: 537, column: 2, scope: !12557)
!12607 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !12606)
!12608 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !12606)
!12609 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !12606)
!12610 = !DILocation(line: 0, scope: !12522, inlinedAt: !12611)
!12611 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !12606)
!12612 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !12611)
!12613 = !DILocation(line: 538, column: 1, scope: !12557)
!12614 = distinct !DISubprogram(name: "sliceable", scope: !2236, file: !2236, line: 468, type: !12615, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12617)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{!145, !2134}
!12617 = !{!12618, !12619}
!12618 = !DILocalVariable(name: "thread", arg: 1, scope: !12614, file: !2236, line: 468, type: !2134)
!12619 = !DILocalVariable(name: "ret", scope: !12614, file: !2236, line: 470, type: !145)
!12620 = !DILocation(line: 0, scope: !12614)
!12621 = !DILocation(line: 470, column: 13, scope: !12614)
!12622 = !DILocation(line: 471, column: 3, scope: !12614)
!12623 = !DILocation(line: 471, column: 7, scope: !12614)
!12624 = !DILocation(line: 472, column: 3, scope: !12614)
!12625 = !DILocation(line: 472, column: 37, scope: !12614)
!12626 = !DILocation(line: 472, column: 24, scope: !12614)
!12627 = !DILocation(line: 472, column: 43, scope: !12614)
!12628 = !DILocation(line: 472, column: 7, scope: !12614)
!12629 = !DILocation(line: 473, column: 3, scope: !12614)
!12630 = !DILocation(line: 473, column: 7, scope: !12614)
!12631 = !DILocation(line: 473, column: 6, scope: !12614)
!12632 = !DILocation(line: 479, column: 2, scope: !12614)
!12633 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2236, file: !2236, line: 482, type: !12634, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12636)
!12634 = !DISubroutineType(types: !12635)
!12635 = !{!12466, !12466}
!12636 = !{!12637, !12638}
!12637 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12633, file: !2236, line: 482, type: !12466)
!12638 = !DILocalVariable(name: "curr", scope: !12633, file: !2236, line: 484, type: !2134)
!12639 = !DILocation(line: 0, scope: !12633)
!12640 = !DILocation(line: 484, column: 26, scope: !12633)
!12641 = !DILocation(line: 493, column: 7, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12633, file: !2236, line: 493, column: 6)
!12643 = !DILocation(line: 493, column: 6, scope: !12633)
!12644 = !DILocation(line: 494, column: 3, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12642, file: !2236, line: 493, column: 49)
!12646 = !DILocation(line: 495, column: 2, scope: !12645)
!12647 = !DILocation(line: 496, column: 2, scope: !12633)
!12648 = !DILocation(line: 499, column: 1, scope: !12633)
!12649 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11656, file: !11656, line: 106, type: !12615, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12650)
!12650 = !{!12651, !12652}
!12651 = !DILocalVariable(name: "thread", arg: 1, scope: !12649, file: !11656, line: 106, type: !2134)
!12652 = !DILocalVariable(name: "state", scope: !12649, file: !11656, line: 108, type: !195)
!12653 = !DILocation(line: 0, scope: !12649)
!12654 = !DILocation(line: 108, column: 31, scope: !12649)
!12655 = !DILocation(line: 110, column: 16, scope: !12649)
!12656 = !DILocation(line: 111, column: 41, scope: !12649)
!12657 = !DILocation(line: 110, column: 2, scope: !12649)
!12658 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2236, file: !2236, line: 393, type: !12432, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12659)
!12659 = !{!12660}
!12660 = !DILocalVariable(name: "thread", arg: 1, scope: !12658, file: !2236, line: 393, type: !2134)
!12661 = !DILocation(line: 0, scope: !12658)
!12662 = !DILocation(line: 395, column: 6, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12658, file: !2236, line: 395, column: 6)
!12664 = !DILocation(line: 395, column: 6, scope: !12658)
!12665 = !DILocalVariable(name: "thread", arg: 1, scope: !12666, file: !2236, line: 264, type: !2134)
!12666 = distinct !DISubprogram(name: "dequeue_thread", scope: !2236, file: !2236, line: 264, type: !12432, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12667)
!12667 = !{!12665}
!12668 = !DILocation(line: 0, scope: !12666, inlinedAt: !12669)
!12669 = distinct !DILocation(line: 396, column: 3, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12663, file: !2236, line: 395, column: 34)
!12671 = !DILocation(line: 266, column: 15, scope: !12666, inlinedAt: !12669)
!12672 = !DILocation(line: 266, column: 28, scope: !12666, inlinedAt: !12669)
!12673 = !DILocalVariable(name: "thread", arg: 1, scope: !12674, file: !2236, line: 232, type: !2134)
!12674 = distinct !DISubprogram(name: "runq_remove", scope: !2236, file: !2236, line: 232, type: !12432, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12675)
!12675 = !{!12673}
!12676 = !DILocation(line: 0, scope: !12674, inlinedAt: !12677)
!12677 = distinct !DILocation(line: 268, column: 3, scope: !12678, inlinedAt: !12669)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !2236, line: 267, column: 35)
!12679 = distinct !DILexicalBlock(scope: !12666, file: !2236, line: 267, column: 6)
!12680 = !DILocation(line: 234, column: 2, scope: !12674, inlinedAt: !12677)
!12681 = !DILocation(line: 397, column: 2, scope: !12670)
!12682 = !DILocalVariable(name: "thread", arg: 1, scope: !12683, file: !2236, line: 250, type: !2134)
!12683 = distinct !DISubprogram(name: "queue_thread", scope: !2236, file: !2236, line: 250, type: !12432, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12684)
!12684 = !{!12682}
!12685 = !DILocation(line: 0, scope: !12683, inlinedAt: !12686)
!12686 = distinct !DILocation(line: 398, column: 2, scope: !12658)
!12687 = !DILocation(line: 252, column: 15, scope: !12683, inlinedAt: !12686)
!12688 = !DILocation(line: 252, column: 28, scope: !12683, inlinedAt: !12686)
!12689 = !DILocalVariable(name: "thread", arg: 1, scope: !12690, file: !2236, line: 227, type: !2134)
!12690 = distinct !DISubprogram(name: "runq_add", scope: !2236, file: !2236, line: 227, type: !12432, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12691)
!12691 = !{!12689}
!12692 = !DILocation(line: 0, scope: !12690, inlinedAt: !12693)
!12693 = distinct !DILocation(line: 254, column: 3, scope: !12694, inlinedAt: !12686)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !2236, line: 253, column: 35)
!12695 = distinct !DILexicalBlock(scope: !12683, file: !2236, line: 253, column: 6)
!12696 = !DILocalVariable(name: "pq", arg: 1, scope: !12697, file: !2236, line: 181, type: !12700)
!12697 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2236, file: !2236, line: 181, type: !12698, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12701)
!12698 = !DISubroutineType(types: !12699)
!12699 = !{null, !12700, !2134}
!12700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 32)
!12701 = !{!12696, !12702, !12703}
!12702 = !DILocalVariable(name: "thread", arg: 2, scope: !12697, file: !2236, line: 182, type: !2134)
!12703 = !DILocalVariable(name: "t", scope: !12697, file: !2236, line: 184, type: !2134)
!12704 = !DILocation(line: 0, scope: !12697, inlinedAt: !12705)
!12705 = distinct !DILocation(line: 229, column: 2, scope: !12690, inlinedAt: !12693)
!12706 = !DILocation(line: 186, column: 2, scope: !12707, inlinedAt: !12705)
!12707 = distinct !DILexicalBlock(scope: !12708, file: !2236, line: 186, column: 2)
!12708 = distinct !DILexicalBlock(scope: !12697, file: !2236, line: 186, column: 2)
!12709 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !12705)
!12710 = !DILocation(line: 186, column: 2, scope: !12711, inlinedAt: !12705)
!12711 = distinct !DILexicalBlock(scope: !12707, file: !2236, line: 186, column: 2)
!12712 = !DILocation(line: 188, column: 2, scope: !12713, inlinedAt: !12705)
!12713 = distinct !DILexicalBlock(scope: !12697, file: !2236, line: 188, column: 2)
!12714 = !DILocation(line: 188, column: 2, scope: !12715, inlinedAt: !12705)
!12715 = distinct !DILexicalBlock(scope: !12713, file: !2236, line: 188, column: 2)
!12716 = !DILocation(line: 0, scope: !12713, inlinedAt: !12705)
!12717 = !DILocation(line: 189, column: 7, scope: !12718, inlinedAt: !12705)
!12718 = distinct !DILexicalBlock(scope: !12719, file: !2236, line: 189, column: 7)
!12719 = distinct !DILexicalBlock(scope: !12715, file: !2236, line: 188, column: 56)
!12720 = !DILocation(line: 189, column: 35, scope: !12718, inlinedAt: !12705)
!12721 = !DILocation(line: 189, column: 7, scope: !12719, inlinedAt: !12705)
!12722 = !DILocation(line: 191, column: 21, scope: !12723, inlinedAt: !12705)
!12723 = distinct !DILexicalBlock(scope: !12718, file: !2236, line: 189, column: 40)
!12724 = !DILocation(line: 190, column: 4, scope: !12723, inlinedAt: !12705)
!12725 = !DILocation(line: 192, column: 4, scope: !12723, inlinedAt: !12705)
!12726 = distinct !{!12726, !12712, !12727}
!12727 = !DILocation(line: 194, column: 2, scope: !12713, inlinedAt: !12705)
!12728 = !DILocation(line: 196, column: 37, scope: !12697, inlinedAt: !12705)
!12729 = !DILocation(line: 196, column: 2, scope: !12697, inlinedAt: !12705)
!12730 = !DILocation(line: 197, column: 1, scope: !12697, inlinedAt: !12705)
!12731 = !DILocation(line: 399, column: 25, scope: !12658)
!12732 = !DILocation(line: 399, column: 22, scope: !12658)
!12733 = !DILocation(line: 399, column: 2, scope: !12658)
!12734 = !DILocation(line: 400, column: 1, scope: !12658)
!12735 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11656, file: !11656, line: 136, type: !12615, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12736)
!12736 = !{!12737}
!12737 = !DILocalVariable(name: "thread", arg: 1, scope: !12735, file: !11656, line: 136, type: !2134)
!12738 = !DILocation(line: 0, scope: !12735)
!12739 = !DILocation(line: 138, column: 9, scope: !12735)
!12740 = !DILocation(line: 138, column: 2, scope: !12735)
!12741 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2236, file: !2236, line: 1137, type: !12698, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12742)
!12742 = !{!12743, !12744}
!12743 = !DILocalVariable(name: "pq", arg: 1, scope: !12741, file: !2236, line: 1137, type: !12700)
!12744 = !DILocalVariable(name: "thread", arg: 2, scope: !12741, file: !2236, line: 1137, type: !2134)
!12745 = !DILocation(line: 0, scope: !12741)
!12746 = !DILocation(line: 1139, column: 2, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12748, file: !2236, line: 1139, column: 2)
!12748 = distinct !DILexicalBlock(scope: !12741, file: !2236, line: 1139, column: 2)
!12749 = !DILocation(line: 1139, column: 2, scope: !12748)
!12750 = !DILocation(line: 1139, column: 2, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12747, file: !2236, line: 1139, column: 2)
!12752 = !DILocation(line: 1141, column: 33, scope: !12741)
!12753 = !DILocation(line: 1141, column: 2, scope: !12741)
!12754 = !DILocation(line: 1142, column: 1, scope: !12741)
!12755 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11656, file: !11656, line: 83, type: !12615, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12756)
!12756 = !{!12757}
!12757 = !DILocalVariable(name: "thread", arg: 1, scope: !12755, file: !11656, line: 83, type: !2134)
!12758 = !DILocation(line: 0, scope: !12755)
!12759 = !DILocation(line: 89, column: 16, scope: !12755)
!12760 = !DILocation(line: 89, column: 2, scope: !12755)
!12761 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !726, file: !726, line: 294, type: !12762, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12764)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{!2232, !12700}
!12764 = !{!12765}
!12765 = !DILocalVariable(name: "list", arg: 1, scope: !12761, file: !726, line: 294, type: !12700)
!12766 = !DILocation(line: 0, scope: !12761)
!12767 = !DILocation(line: 296, column: 9, scope: !12761)
!12768 = !DILocation(line: 296, column: 49, scope: !12761)
!12769 = !DILocation(line: 296, column: 2, scope: !12761)
!12770 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !726, file: !726, line: 443, type: !12771, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12773)
!12771 = !DISubroutineType(types: !12772)
!12772 = !{null, !2232, !2232}
!12773 = !{!12774, !12775, !12776}
!12774 = !DILocalVariable(name: "successor", arg: 1, scope: !12770, file: !726, line: 443, type: !2232)
!12775 = !DILocalVariable(name: "node", arg: 2, scope: !12770, file: !726, line: 443, type: !2232)
!12776 = !DILocalVariable(name: "prev", scope: !12770, file: !726, line: 445, type: !12777)
!12777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2232)
!12778 = !DILocation(line: 0, scope: !12770)
!12779 = !DILocation(line: 445, column: 39, scope: !12770)
!12780 = !DILocation(line: 447, column: 8, scope: !12770)
!12781 = !DILocation(line: 447, column: 13, scope: !12770)
!12782 = !DILocation(line: 448, column: 8, scope: !12770)
!12783 = !DILocation(line: 448, column: 13, scope: !12770)
!12784 = !DILocation(line: 449, column: 8, scope: !12770)
!12785 = !DILocation(line: 449, column: 13, scope: !12770)
!12786 = !DILocation(line: 450, column: 18, scope: !12770)
!12787 = !DILocation(line: 451, column: 1, scope: !12770)
!12788 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !726, file: !726, line: 341, type: !12789, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12791)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{!2232, !12700, !2232}
!12791 = !{!12792, !12793}
!12792 = !DILocalVariable(name: "list", arg: 1, scope: !12788, file: !726, line: 341, type: !12700)
!12793 = !DILocalVariable(name: "node", arg: 2, scope: !12788, file: !726, line: 342, type: !2232)
!12794 = !DILocation(line: 0, scope: !12788)
!12795 = !DILocation(line: 344, column: 15, scope: !12788)
!12796 = !DILocation(line: 344, column: 9, scope: !12788)
!12797 = !DILocation(line: 344, column: 26, scope: !12788)
!12798 = !DILocation(line: 344, column: 2, scope: !12788)
!12799 = distinct !DISubprogram(name: "sys_dlist_append", scope: !726, file: !726, line: 404, type: !12800, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12802)
!12800 = !DISubroutineType(types: !12801)
!12801 = !{null, !12700, !2232}
!12802 = !{!12803, !12804, !12805}
!12803 = !DILocalVariable(name: "list", arg: 1, scope: !12799, file: !726, line: 404, type: !12700)
!12804 = !DILocalVariable(name: "node", arg: 2, scope: !12799, file: !726, line: 404, type: !2232)
!12805 = !DILocalVariable(name: "tail", scope: !12799, file: !726, line: 406, type: !12777)
!12806 = !DILocation(line: 0, scope: !12799)
!12807 = !DILocation(line: 406, column: 34, scope: !12799)
!12808 = !DILocation(line: 408, column: 8, scope: !12799)
!12809 = !DILocation(line: 408, column: 13, scope: !12799)
!12810 = !DILocation(line: 409, column: 8, scope: !12799)
!12811 = !DILocation(line: 409, column: 13, scope: !12799)
!12812 = !DILocation(line: 411, column: 8, scope: !12799)
!12813 = !DILocation(line: 411, column: 13, scope: !12799)
!12814 = !DILocation(line: 412, column: 13, scope: !12799)
!12815 = !DILocation(line: 413, column: 1, scope: !12799)
!12816 = distinct !DISubprogram(name: "update_cache", scope: !2236, file: !2236, line: 559, type: !11613, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12817)
!12817 = !{!12818, !12819}
!12818 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12816, file: !2236, line: 559, type: !107)
!12819 = !DILocalVariable(name: "thread", scope: !12816, file: !2236, line: 562, type: !2134)
!12820 = !DILocation(line: 0, scope: !12816)
!12821 = !DILocation(line: 239, column: 9, scope: !12822, inlinedAt: !12825)
!12822 = distinct !DISubprogram(name: "runq_best", scope: !2236, file: !2236, line: 237, type: !12823, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{!2134}
!12825 = distinct !DILocation(line: 314, column: 28, scope: !12826, inlinedAt: !12829)
!12826 = distinct !DISubprogram(name: "next_up", scope: !2236, file: !2236, line: 312, type: !12823, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12827)
!12827 = !{!12828}
!12828 = !DILocalVariable(name: "thread", scope: !12826, file: !2236, line: 314, type: !2134)
!12829 = distinct !DILocation(line: 562, column: 28, scope: !12816)
!12830 = !DILocation(line: 0, scope: !12826, inlinedAt: !12829)
!12831 = !DILocation(line: 340, column: 17, scope: !12826, inlinedAt: !12829)
!12832 = !DILocation(line: 340, column: 9, scope: !12826, inlinedAt: !12829)
!12833 = !DILocalVariable(name: "thread", arg: 1, scope: !12834, file: !2236, line: 127, type: !2134)
!12834 = distinct !DISubprogram(name: "should_preempt", scope: !2236, file: !2236, line: 127, type: !12835, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12837)
!12835 = !DISubroutineType(types: !12836)
!12836 = !{!145, !2134, !107}
!12837 = !{!12833, !12838}
!12838 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12834, file: !2236, line: 128, type: !107)
!12839 = !DILocation(line: 0, scope: !12834, inlinedAt: !12840)
!12840 = distinct !DILocation(line: 564, column: 6, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12816, file: !2236, line: 564, column: 6)
!12842 = !DILocation(line: 133, column: 17, scope: !12843, inlinedAt: !12840)
!12843 = distinct !DILexicalBlock(scope: !12834, file: !2236, line: 133, column: 6)
!12844 = !DILocation(line: 0, scope: !12841)
!12845 = !DILocation(line: 133, column: 6, scope: !12834, inlinedAt: !12840)
!12846 = !DILocation(line: 137, column: 2, scope: !12847, inlinedAt: !12840)
!12847 = distinct !DILexicalBlock(scope: !12848, file: !2236, line: 137, column: 2)
!12848 = distinct !DILexicalBlock(scope: !12834, file: !2236, line: 137, column: 2)
!12849 = !DILocation(line: 137, column: 2, scope: !12848, inlinedAt: !12840)
!12850 = !DILocation(line: 137, column: 2, scope: !12851, inlinedAt: !12840)
!12851 = distinct !DILexicalBlock(scope: !12847, file: !2236, line: 137, column: 2)
!12852 = !DILocation(line: 140, column: 6, scope: !12853, inlinedAt: !12840)
!12853 = distinct !DILexicalBlock(scope: !12834, file: !2236, line: 140, column: 6)
!12854 = !DILocation(line: 140, column: 6, scope: !12834, inlinedAt: !12840)
!12855 = !DILocation(line: 150, column: 9, scope: !12856, inlinedAt: !12840)
!12856 = distinct !DILexicalBlock(scope: !12834, file: !2236, line: 149, column: 6)
!12857 = !DILocation(line: 149, column: 6, scope: !12834, inlinedAt: !12840)
!12858 = !DILocation(line: 157, column: 6, scope: !12859, inlinedAt: !12840)
!12859 = distinct !DILexicalBlock(scope: !12834, file: !2236, line: 157, column: 6)
!12860 = !DILocation(line: 564, column: 6, scope: !12816)
!12861 = !DILocation(line: 566, column: 14, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !2236, line: 566, column: 7)
!12863 = distinct !DILexicalBlock(scope: !12841, file: !2236, line: 564, column: 42)
!12864 = !DILocation(line: 566, column: 7, scope: !12863)
!12865 = !DILocation(line: 567, column: 4, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12862, file: !2236, line: 566, column: 27)
!12867 = !DILocation(line: 568, column: 3, scope: !12866)
!12868 = !DILocation(line: 585, column: 1, scope: !12816)
!12869 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2236, file: !2236, line: 1144, type: !12870, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12872)
!12870 = !DISubroutineType(types: !12871)
!12871 = !{!2134, !12700}
!12872 = !{!12873, !12874, !12875}
!12873 = !DILocalVariable(name: "pq", arg: 1, scope: !12869, file: !2236, line: 1144, type: !12700)
!12874 = !DILocalVariable(name: "thread", scope: !12869, file: !2236, line: 1146, type: !2134)
!12875 = !DILocalVariable(name: "n", scope: !12869, file: !2236, line: 1147, type: !2232)
!12876 = !DILocation(line: 0, scope: !12869)
!12877 = !DILocation(line: 1147, column: 19, scope: !12869)
!12878 = !DILocation(line: 1152, column: 2, scope: !12869)
!12879 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11656, file: !11656, line: 115, type: !12615, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12880)
!12880 = !{!12881}
!12881 = !DILocalVariable(name: "thread", arg: 1, scope: !12879, file: !11656, line: 115, type: !2134)
!12882 = !DILocation(line: 0, scope: !12879)
!12883 = !DILocation(line: 117, column: 46, scope: !12879)
!12884 = !DILocation(line: 117, column: 10, scope: !12879)
!12885 = !DILocation(line: 117, column: 9, scope: !12879)
!12886 = !DILocation(line: 117, column: 2, scope: !12879)
!12887 = distinct !DISubprogram(name: "is_preempt", scope: !2236, file: !2236, line: 62, type: !12450, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12888)
!12888 = !{!12889}
!12889 = !DILocalVariable(name: "thread", arg: 1, scope: !12887, file: !2236, line: 62, type: !2134)
!12890 = !DILocation(line: 0, scope: !12887)
!12891 = !DILocation(line: 65, column: 22, scope: !12887)
!12892 = !DILocation(line: 65, column: 30, scope: !12887)
!12893 = !DILocation(line: 65, column: 2, scope: !12887)
!12894 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12063, file: !12063, line: 35, type: !12895, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12899)
!12895 = !DISubroutineType(types: !12896)
!12896 = !{!145, !12897}
!12897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12898, size: 32)
!12898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!12899 = !{!12900}
!12900 = !DILocalVariable(name: "to", arg: 1, scope: !12894, file: !12063, line: 35, type: !12897)
!12901 = !DILocation(line: 0, scope: !12894)
!12902 = !DILocation(line: 37, column: 35, scope: !12894)
!12903 = !DILocation(line: 37, column: 10, scope: !12894)
!12904 = !DILocation(line: 37, column: 9, scope: !12894)
!12905 = !DILocation(line: 37, column: 2, scope: !12894)
!12906 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !726, file: !726, line: 225, type: !12907, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12911)
!12907 = !DISubroutineType(types: !12908)
!12908 = !{!145, !12909}
!12909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12910, size: 32)
!12910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2144)
!12911 = !{!12912}
!12912 = !DILocalVariable(name: "node", arg: 1, scope: !12906, file: !726, line: 225, type: !12909)
!12913 = !DILocation(line: 0, scope: !12906)
!12914 = !DILocation(line: 227, column: 15, scope: !12906)
!12915 = !DILocation(line: 227, column: 20, scope: !12906)
!12916 = !DILocation(line: 227, column: 2, scope: !12906)
!12917 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !726, file: !726, line: 325, type: !12789, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12918)
!12918 = !{!12919, !12920}
!12919 = !DILocalVariable(name: "list", arg: 1, scope: !12917, file: !726, line: 325, type: !12700)
!12920 = !DILocalVariable(name: "node", arg: 2, scope: !12917, file: !726, line: 326, type: !2232)
!12921 = !DILocation(line: 0, scope: !12917)
!12922 = !DILocation(line: 328, column: 24, scope: !12917)
!12923 = !DILocation(line: 328, column: 15, scope: !12917)
!12924 = !DILocation(line: 328, column: 9, scope: !12917)
!12925 = !DILocation(line: 328, column: 45, scope: !12917)
!12926 = !DILocation(line: 328, column: 2, scope: !12917)
!12927 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !726, file: !726, line: 266, type: !12928, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12930)
!12928 = !DISubroutineType(types: !12929)
!12929 = !{!145, !12700}
!12930 = !{!12931}
!12931 = !DILocalVariable(name: "list", arg: 1, scope: !12927, file: !726, line: 266, type: !12700)
!12932 = !DILocation(line: 0, scope: !12927)
!12933 = !DILocation(line: 268, column: 15, scope: !12927)
!12934 = !DILocation(line: 268, column: 20, scope: !12927)
!12935 = !DILocation(line: 268, column: 2, scope: !12927)
!12936 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !726, file: !726, line: 496, type: !12937, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12939)
!12937 = !DISubroutineType(types: !12938)
!12938 = !{null, !2232}
!12939 = !{!12940, !12941, !12942}
!12940 = !DILocalVariable(name: "node", arg: 1, scope: !12936, file: !726, line: 496, type: !2232)
!12941 = !DILocalVariable(name: "prev", scope: !12936, file: !726, line: 498, type: !12777)
!12942 = !DILocalVariable(name: "next", scope: !12936, file: !726, line: 499, type: !12777)
!12943 = !DILocation(line: 0, scope: !12936)
!12944 = !DILocation(line: 498, column: 34, scope: !12936)
!12945 = !DILocation(line: 499, column: 34, scope: !12936)
!12946 = !DILocation(line: 501, column: 8, scope: !12936)
!12947 = !DILocation(line: 501, column: 13, scope: !12936)
!12948 = !DILocation(line: 502, column: 8, scope: !12936)
!12949 = !DILocation(line: 502, column: 13, scope: !12936)
!12950 = !DILocation(line: 503, column: 2, scope: !12936)
!12951 = !DILocation(line: 504, column: 1, scope: !12936)
!12952 = distinct !DISubprogram(name: "sys_dnode_init", scope: !726, file: !726, line: 211, type: !12937, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12953)
!12953 = !{!12954}
!12954 = !DILocalVariable(name: "node", arg: 1, scope: !12952, file: !726, line: 211, type: !2232)
!12955 = !DILocation(line: 0, scope: !12952)
!12956 = !DILocation(line: 213, column: 8, scope: !12952)
!12957 = !DILocation(line: 213, column: 13, scope: !12952)
!12958 = !DILocation(line: 214, column: 8, scope: !12952)
!12959 = !DILocation(line: 214, column: 13, scope: !12952)
!12960 = !DILocation(line: 215, column: 1, scope: !12952)
!12961 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11656, file: !11656, line: 131, type: !12962, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12964)
!12962 = !DISubroutineType(types: !12963)
!12963 = !{!145, !2134, !152}
!12964 = !{!12965, !12966}
!12965 = !DILocalVariable(name: "thread", arg: 1, scope: !12961, file: !11656, line: 131, type: !2134)
!12966 = !DILocalVariable(name: "state", arg: 2, scope: !12961, file: !11656, line: 131, type: !152)
!12967 = !DILocation(line: 0, scope: !12961)
!12968 = !DILocation(line: 133, column: 23, scope: !12961)
!12969 = !DILocation(line: 133, column: 10, scope: !12961)
!12970 = !DILocation(line: 133, column: 36, scope: !12961)
!12971 = !DILocation(line: 133, column: 45, scope: !12961)
!12972 = !DILocation(line: 133, column: 2, scope: !12961)
!12973 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11656, file: !11656, line: 211, type: !12974, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12976)
!12974 = !DISubroutineType(types: !12975)
!12975 = !{!145, !107, !107}
!12976 = !{!12977, !12978}
!12977 = !DILocalVariable(name: "prio", arg: 1, scope: !12973, file: !11656, line: 211, type: !107)
!12978 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12973, file: !11656, line: 211, type: !107)
!12979 = !DILocation(line: 0, scope: !12973)
!12980 = !DILocation(line: 213, column: 9, scope: !12973)
!12981 = !DILocation(line: 213, column: 2, scope: !12973)
!12982 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11656, file: !11656, line: 206, type: !12974, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12983)
!12983 = !{!12984, !12985}
!12984 = !DILocalVariable(name: "prio1", arg: 1, scope: !12982, file: !11656, line: 206, type: !107)
!12985 = !DILocalVariable(name: "prio2", arg: 2, scope: !12982, file: !11656, line: 206, type: !107)
!12986 = !DILocation(line: 0, scope: !12982)
!12987 = !DILocation(line: 208, column: 15, scope: !12982)
!12988 = !DILocation(line: 208, column: 2, scope: !12982)
!12989 = distinct !DISubprogram(name: "z_ready_thread", scope: !2236, file: !2236, line: 635, type: !12432, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12990)
!12990 = !{!12991, !12992, !12994}
!12991 = !DILocalVariable(name: "thread", arg: 1, scope: !12989, file: !2236, line: 635, type: !2134)
!12992 = !DILocalVariable(name: "__i", scope: !12993, file: !2236, line: 637, type: !12466)
!12993 = distinct !DILexicalBlock(scope: !12989, file: !2236, line: 637, column: 2)
!12994 = !DILocalVariable(name: "__key", scope: !12993, file: !2236, line: 637, type: !12466)
!12995 = !DILocation(line: 0, scope: !12989)
!12996 = !DILocation(line: 0, scope: !12993)
!12997 = !DILocation(line: 0, scope: !12474, inlinedAt: !12998)
!12998 = distinct !DILocation(line: 637, column: 2, scope: !12993)
!12999 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13000)
!13000 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !12998)
!13001 = !DILocation(line: 0, scope: !12483, inlinedAt: !13000)
!13002 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !12998)
!13003 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !12998)
!13004 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !12998)
!13005 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !12998)
!13006 = !DILocation(line: 639, column: 4, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !2236, line: 638, column: 41)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !2236, line: 638, column: 7)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !2236, line: 637, column: 26)
!13010 = distinct !DILexicalBlock(scope: !12993, file: !2236, line: 637, column: 2)
!13011 = !DILocation(line: 0, scope: !12508, inlinedAt: !13012)
!13012 = distinct !DILocation(line: 637, column: 2, scope: !13010)
!13013 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13012)
!13014 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13012)
!13015 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13012)
!13016 = !DILocation(line: 0, scope: !12522, inlinedAt: !13017)
!13017 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13012)
!13018 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13017)
!13019 = !DILocation(line: 642, column: 1, scope: !12989)
!13020 = distinct !DISubprogram(name: "ready_thread", scope: !2236, file: !2236, line: 617, type: !12432, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13021)
!13021 = !{!13022}
!13022 = !DILocalVariable(name: "thread", arg: 1, scope: !13020, file: !2236, line: 617, type: !2134)
!13023 = !DILocation(line: 0, scope: !13020)
!13024 = !DILocation(line: 626, column: 7, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13020, file: !2236, line: 626, column: 6)
!13026 = !DILocation(line: 626, column: 34, scope: !13025)
!13027 = !DILocation(line: 626, column: 37, scope: !13025)
!13028 = !DILocation(line: 626, column: 6, scope: !13020)
!13029 = !DILocation(line: 0, scope: !12683, inlinedAt: !13030)
!13030 = distinct !DILocation(line: 629, column: 3, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13025, file: !2236, line: 626, column: 64)
!13032 = !DILocation(line: 252, column: 15, scope: !12683, inlinedAt: !13030)
!13033 = !DILocation(line: 252, column: 28, scope: !12683, inlinedAt: !13030)
!13034 = !DILocation(line: 0, scope: !12690, inlinedAt: !13035)
!13035 = distinct !DILocation(line: 254, column: 3, scope: !12694, inlinedAt: !13030)
!13036 = !DILocation(line: 0, scope: !12697, inlinedAt: !13037)
!13037 = distinct !DILocation(line: 229, column: 2, scope: !12690, inlinedAt: !13035)
!13038 = !DILocation(line: 186, column: 2, scope: !12707, inlinedAt: !13037)
!13039 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !13037)
!13040 = !DILocation(line: 186, column: 2, scope: !12711, inlinedAt: !13037)
!13041 = !DILocation(line: 188, column: 2, scope: !12713, inlinedAt: !13037)
!13042 = !DILocation(line: 188, column: 2, scope: !12715, inlinedAt: !13037)
!13043 = !DILocation(line: 0, scope: !12713, inlinedAt: !13037)
!13044 = !DILocation(line: 189, column: 7, scope: !12718, inlinedAt: !13037)
!13045 = !DILocation(line: 189, column: 35, scope: !12718, inlinedAt: !13037)
!13046 = !DILocation(line: 189, column: 7, scope: !12719, inlinedAt: !13037)
!13047 = !DILocation(line: 191, column: 21, scope: !12723, inlinedAt: !13037)
!13048 = !DILocation(line: 190, column: 4, scope: !12723, inlinedAt: !13037)
!13049 = !DILocation(line: 192, column: 4, scope: !12723, inlinedAt: !13037)
!13050 = distinct !{!13050, !13041, !13051}
!13051 = !DILocation(line: 194, column: 2, scope: !12713, inlinedAt: !13037)
!13052 = !DILocation(line: 196, column: 37, scope: !12697, inlinedAt: !13037)
!13053 = !DILocation(line: 196, column: 2, scope: !12697, inlinedAt: !13037)
!13054 = !DILocation(line: 197, column: 1, scope: !12697, inlinedAt: !13037)
!13055 = !DILocation(line: 630, column: 3, scope: !13031)
!13056 = !DILocation(line: 632, column: 2, scope: !13031)
!13057 = !DILocation(line: 633, column: 1, scope: !13020)
!13058 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11656, file: !11656, line: 120, type: !12615, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13059)
!13059 = !{!13060}
!13060 = !DILocalVariable(name: "thread", arg: 1, scope: !13058, file: !11656, line: 120, type: !2134)
!13061 = !DILocation(line: 0, scope: !13058)
!13062 = !DILocation(line: 122, column: 12, scope: !13058)
!13063 = !DILocation(line: 122, column: 62, scope: !13058)
!13064 = !DILocation(line: 123, column: 4, scope: !13058)
!13065 = !DILocation(line: 122, column: 2, scope: !13058)
!13066 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2236, file: !2236, line: 644, type: !12432, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13067)
!13067 = !{!13068, !13069, !13071}
!13068 = !DILocalVariable(name: "thread", arg: 1, scope: !13066, file: !2236, line: 644, type: !2134)
!13069 = !DILocalVariable(name: "__i", scope: !13070, file: !2236, line: 646, type: !12466)
!13070 = distinct !DILexicalBlock(scope: !13066, file: !2236, line: 646, column: 2)
!13071 = !DILocalVariable(name: "__key", scope: !13070, file: !2236, line: 646, type: !12466)
!13072 = !DILocation(line: 0, scope: !13066)
!13073 = !DILocation(line: 0, scope: !13070)
!13074 = !DILocation(line: 0, scope: !12474, inlinedAt: !13075)
!13075 = distinct !DILocation(line: 646, column: 2, scope: !13070)
!13076 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13077)
!13077 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13075)
!13078 = !DILocation(line: 0, scope: !12483, inlinedAt: !13077)
!13079 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13075)
!13080 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13075)
!13081 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13075)
!13082 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13075)
!13083 = !DILocation(line: 647, column: 3, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !2236, line: 646, column: 26)
!13085 = distinct !DILexicalBlock(scope: !13070, file: !2236, line: 646, column: 2)
!13086 = !DILocation(line: 0, scope: !12508, inlinedAt: !13087)
!13087 = distinct !DILocation(line: 646, column: 2, scope: !13085)
!13088 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13087)
!13089 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13087)
!13090 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13087)
!13091 = !DILocation(line: 0, scope: !12522, inlinedAt: !13092)
!13092 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13087)
!13093 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13092)
!13094 = !DILocation(line: 649, column: 1, scope: !13066)
!13095 = distinct !DISubprogram(name: "z_sched_start", scope: !2236, file: !2236, line: 651, type: !12432, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13096)
!13096 = !{!13097, !13098}
!13097 = !DILocalVariable(name: "thread", arg: 1, scope: !13095, file: !2236, line: 651, type: !2134)
!13098 = !DILocalVariable(name: "key", scope: !13095, file: !2236, line: 653, type: !12466)
!13099 = !DILocation(line: 0, scope: !13095)
!13100 = !DILocation(line: 0, scope: !12474, inlinedAt: !13101)
!13101 = distinct !DILocation(line: 653, column: 25, scope: !13095)
!13102 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13103)
!13103 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13101)
!13104 = !DILocation(line: 0, scope: !12483, inlinedAt: !13103)
!13105 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13101)
!13106 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13101)
!13107 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13101)
!13108 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13101)
!13109 = !DILocation(line: 655, column: 6, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13095, file: !2236, line: 655, column: 6)
!13111 = !DILocation(line: 655, column: 6, scope: !13095)
!13112 = !DILocation(line: 0, scope: !12508, inlinedAt: !13113)
!13113 = distinct !DILocation(line: 656, column: 3, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13110, file: !2236, line: 655, column: 36)
!13115 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13113)
!13116 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13113)
!13117 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13113)
!13118 = !DILocation(line: 0, scope: !12522, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13113)
!13120 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13119)
!13121 = !DILocation(line: 657, column: 3, scope: !13114)
!13122 = !DILocation(line: 660, column: 2, scope: !13095)
!13123 = !DILocation(line: 661, column: 2, scope: !13095)
!13124 = !DILocation(line: 662, column: 2, scope: !13095)
!13125 = !DILocation(line: 663, column: 1, scope: !13095)
!13126 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11656, file: !11656, line: 126, type: !12615, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13127)
!13127 = !{!13128}
!13128 = !DILocalVariable(name: "thread", arg: 1, scope: !13126, file: !11656, line: 126, type: !2134)
!13129 = !DILocation(line: 0, scope: !13126)
!13130 = !DILocation(line: 128, column: 23, scope: !13126)
!13131 = !DILocation(line: 128, column: 36, scope: !13126)
!13132 = !DILocation(line: 128, column: 56, scope: !13126)
!13133 = !DILocation(line: 128, column: 2, scope: !13126)
!13134 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11656, file: !11656, line: 155, type: !12432, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13135)
!13135 = !{!13136}
!13136 = !DILocalVariable(name: "thread", arg: 1, scope: !13134, file: !11656, line: 155, type: !2134)
!13137 = !DILocation(line: 0, scope: !13134)
!13138 = !DILocation(line: 157, column: 15, scope: !13134)
!13139 = !DILocation(line: 157, column: 28, scope: !13134)
!13140 = !DILocation(line: 158, column: 1, scope: !13134)
!13141 = distinct !DISubprogram(name: "z_reschedule", scope: !2236, file: !2236, line: 967, type: !12509, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13142)
!13142 = !{!13143, !13144}
!13143 = !DILocalVariable(name: "lock", arg: 1, scope: !13141, file: !2236, line: 967, type: !12477)
!13144 = !DILocalVariable(name: "key", arg: 2, scope: !13141, file: !2236, line: 967, type: !12466)
!13145 = !DILocation(line: 0, scope: !13141)
!13146 = !DILocation(line: 969, column: 6, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13141, file: !2236, line: 969, column: 6)
!13148 = !DILocation(line: 969, column: 23, scope: !13147)
!13149 = !DILocation(line: 969, column: 26, scope: !13147)
!13150 = !DILocation(line: 969, column: 6, scope: !13141)
!13151 = !DILocalVariable(name: "key", arg: 2, scope: !13152, file: !11758, line: 193, type: !12466)
!13152 = distinct !DISubprogram(name: "z_swap", scope: !11758, file: !11758, line: 193, type: !13153, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13155)
!13153 = !DISubroutineType(types: !13154)
!13154 = !{!107, !12477, !12466}
!13155 = !{!13156, !13151}
!13156 = !DILocalVariable(name: "lock", arg: 1, scope: !13152, file: !11758, line: 193, type: !12477)
!13157 = !DILocation(line: 0, scope: !13152, inlinedAt: !13158)
!13158 = distinct !DILocation(line: 970, column: 3, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13147, file: !2236, line: 969, column: 39)
!13160 = !DILocalVariable(name: "l", arg: 1, scope: !13161, file: !818, line: 221, type: !12477)
!13161 = distinct !DISubprogram(name: "k_spin_release", scope: !818, file: !818, line: 221, type: !13162, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13164)
!13162 = !DISubroutineType(types: !13163)
!13163 = !{null, !12477}
!13164 = !{!13160}
!13165 = !DILocation(line: 0, scope: !13161, inlinedAt: !13166)
!13166 = distinct !DILocation(line: 195, column: 2, scope: !13152, inlinedAt: !13158)
!13167 = !DILocation(line: 225, column: 2, scope: !13168, inlinedAt: !13166)
!13168 = distinct !DILexicalBlock(scope: !13169, file: !818, line: 225, column: 2)
!13169 = distinct !DILexicalBlock(scope: !13161, file: !818, line: 225, column: 2)
!13170 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !13166)
!13171 = !DILocation(line: 225, column: 2, scope: !13172, inlinedAt: !13166)
!13172 = distinct !DILexicalBlock(scope: !13168, file: !818, line: 225, column: 2)
!13173 = !DILocation(line: 196, column: 9, scope: !13152, inlinedAt: !13158)
!13174 = !DILocation(line: 971, column: 2, scope: !13159)
!13175 = !DILocation(line: 0, scope: !12508, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 972, column: 3, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13147, file: !2236, line: 971, column: 9)
!13178 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13176)
!13179 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13176)
!13180 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13176)
!13181 = !DILocation(line: 0, scope: !12522, inlinedAt: !13182)
!13182 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13176)
!13183 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13182)
!13184 = !DILocation(line: 975, column: 1, scope: !13141)
!13185 = distinct !DISubprogram(name: "resched", scope: !2236, file: !2236, line: 940, type: !13186, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13188)
!13186 = !DISubroutineType(types: !13187)
!13187 = !{!145, !152}
!13188 = !{!13189}
!13189 = !DILocalVariable(name: "key", arg: 1, scope: !13185, file: !2236, line: 940, type: !152)
!13190 = !DILocation(line: 0, scope: !13185)
!13191 = !DILocalVariable(name: "key", arg: 1, scope: !13192, file: !6124, line: 112, type: !32)
!13192 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6124, file: !6124, line: 112, type: !13193, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13195)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{!145, !32}
!13195 = !{!13191}
!13196 = !DILocation(line: 0, scope: !13192, inlinedAt: !13197)
!13197 = distinct !DILocation(line: 946, column: 9, scope: !13185)
!13198 = !DILocation(line: 115, column: 13, scope: !13192, inlinedAt: !13197)
!13199 = !DILocation(line: 946, column: 32, scope: !13185)
!13200 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !13204)
!13201 = distinct !DISubprogram(name: "__get_IPSR", scope: !6003, file: !6003, line: 1027, type: !6090, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13202)
!13202 = !{!13203}
!13203 = !DILocalVariable(name: "result", scope: !13201, file: !6003, line: 1029, type: !152)
!13204 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !13206)
!13205 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6999, file: !6999, line: 46, type: !7000, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13206 = distinct !DILocation(line: 946, column: 36, scope: !13185)
!13207 = !{i64 7016874}
!13208 = !DILocation(line: 0, scope: !13201, inlinedAt: !13204)
!13209 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !13206)
!13210 = !DILocation(line: 946, column: 2, scope: !13185)
!13211 = distinct !DISubprogram(name: "need_swap", scope: !2236, file: !2236, line: 953, type: !7000, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13212)
!13212 = !{!13213}
!13213 = !DILocalVariable(name: "new_thread", scope: !13211, file: !2236, line: 959, type: !2134)
!13214 = !DILocation(line: 962, column: 31, scope: !13211)
!13215 = !DILocation(line: 0, scope: !13211)
!13216 = !DILocation(line: 963, column: 23, scope: !13211)
!13217 = !DILocation(line: 963, column: 20, scope: !13211)
!13218 = !DILocation(line: 963, column: 2, scope: !13211)
!13219 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11758, file: !11758, line: 181, type: !6013, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13220)
!13220 = !{!13221, !13222}
!13221 = !DILocalVariable(name: "key", arg: 1, scope: !13219, file: !11758, line: 181, type: !32)
!13222 = !DILocalVariable(name: "ret", scope: !13219, file: !11758, line: 183, type: !107)
!13223 = !DILocation(line: 0, scope: !13219)
!13224 = !DILocation(line: 185, column: 8, scope: !13219)
!13225 = !DILocation(line: 186, column: 2, scope: !13219)
!13226 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2236, file: !2236, line: 665, type: !12432, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13227)
!13227 = !{!13228, !13229, !13231}
!13228 = !DILocalVariable(name: "thread", arg: 1, scope: !13226, file: !2236, line: 665, type: !2134)
!13229 = !DILocalVariable(name: "__i", scope: !13230, file: !2236, line: 671, type: !12466)
!13230 = distinct !DILexicalBlock(scope: !13226, file: !2236, line: 671, column: 2)
!13231 = !DILocalVariable(name: "__key", scope: !13230, file: !2236, line: 671, type: !12466)
!13232 = !DILocation(line: 0, scope: !13226)
!13233 = !DILocation(line: 669, column: 8, scope: !13226)
!13234 = !DILocation(line: 0, scope: !13230)
!13235 = !DILocation(line: 0, scope: !12474, inlinedAt: !13236)
!13236 = distinct !DILocation(line: 671, column: 2, scope: !13230)
!13237 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13238)
!13238 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13236)
!13239 = !DILocation(line: 0, scope: !12483, inlinedAt: !13238)
!13240 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13236)
!13241 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13236)
!13242 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13236)
!13243 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13236)
!13244 = !DILocation(line: 672, column: 7, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !2236, line: 672, column: 7)
!13246 = distinct !DILexicalBlock(scope: !13247, file: !2236, line: 671, column: 26)
!13247 = distinct !DILexicalBlock(scope: !13230, file: !2236, line: 671, column: 2)
!13248 = !DILocation(line: 672, column: 7, scope: !13246)
!13249 = !DILocation(line: 0, scope: !12666, inlinedAt: !13250)
!13250 = distinct !DILocation(line: 673, column: 4, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13245, file: !2236, line: 672, column: 35)
!13252 = !DILocation(line: 266, column: 15, scope: !12666, inlinedAt: !13250)
!13253 = !DILocation(line: 266, column: 28, scope: !12666, inlinedAt: !13250)
!13254 = !DILocation(line: 0, scope: !12674, inlinedAt: !13255)
!13255 = distinct !DILocation(line: 268, column: 3, scope: !12678, inlinedAt: !13250)
!13256 = !DILocation(line: 234, column: 2, scope: !12674, inlinedAt: !13255)
!13257 = !DILocation(line: 674, column: 3, scope: !13251)
!13258 = !DILocation(line: 675, column: 3, scope: !13246)
!13259 = !DILocation(line: 676, column: 26, scope: !13246)
!13260 = !DILocation(line: 676, column: 23, scope: !13246)
!13261 = !DILocation(line: 676, column: 3, scope: !13246)
!13262 = !DILocation(line: 0, scope: !12508, inlinedAt: !13263)
!13263 = distinct !DILocation(line: 671, column: 2, scope: !13247)
!13264 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13263)
!13265 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13263)
!13266 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13263)
!13267 = !DILocation(line: 0, scope: !12522, inlinedAt: !13268)
!13268 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13263)
!13269 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13268)
!13270 = !DILocation(line: 679, column: 16, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13226, file: !2236, line: 679, column: 6)
!13272 = !DILocation(line: 679, column: 13, scope: !13271)
!13273 = !DILocation(line: 679, column: 6, scope: !13226)
!13274 = !DILocation(line: 680, column: 3, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13271, file: !2236, line: 679, column: 26)
!13276 = !DILocation(line: 681, column: 2, scope: !13275)
!13277 = !DILocation(line: 684, column: 1, scope: !13226)
!13278 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12063, file: !12063, line: 52, type: !12450, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13279)
!13279 = !{!13280}
!13280 = !DILocalVariable(name: "thread", arg: 1, scope: !13278, file: !12063, line: 52, type: !2134)
!13281 = !DILocation(line: 0, scope: !13278)
!13282 = !DILocation(line: 54, column: 39, scope: !13278)
!13283 = !DILocation(line: 54, column: 9, scope: !13278)
!13284 = !DILocation(line: 54, column: 2, scope: !13278)
!13285 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11656, file: !11656, line: 141, type: !12432, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13286)
!13286 = !{!13287}
!13287 = !DILocalVariable(name: "thread", arg: 1, scope: !13285, file: !11656, line: 141, type: !2134)
!13288 = !DILocation(line: 0, scope: !13285)
!13289 = !DILocation(line: 143, column: 15, scope: !13285)
!13290 = !DILocation(line: 143, column: 28, scope: !13285)
!13291 = !DILocation(line: 146, column: 1, scope: !13285)
!13292 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11656, file: !11656, line: 73, type: !2909, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13293 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13294)
!13294 = distinct !DILocation(line: 75, column: 30, scope: !13292)
!13295 = !DILocation(line: 0, scope: !12483, inlinedAt: !13294)
!13296 = !DILocation(line: 75, column: 9, scope: !13292)
!13297 = !DILocation(line: 76, column: 1, scope: !13292)
!13298 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2236, file: !2236, line: 977, type: !6100, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13299)
!13299 = !{!13300}
!13300 = !DILocalVariable(name: "key", arg: 1, scope: !13298, file: !2236, line: 977, type: !152)
!13301 = !DILocation(line: 0, scope: !13298)
!13302 = !DILocation(line: 979, column: 6, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13298, file: !2236, line: 979, column: 6)
!13304 = !DILocation(line: 979, column: 6, scope: !13298)
!13305 = !DILocation(line: 980, column: 3, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13303, file: !2236, line: 979, column: 20)
!13307 = !DILocation(line: 981, column: 2, scope: !13306)
!13308 = !DILocation(line: 0, scope: !12522, inlinedAt: !13309)
!13309 = distinct !DILocation(line: 982, column: 3, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13303, file: !2236, line: 981, column: 9)
!13311 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13309)
!13312 = !DILocation(line: 985, column: 1, scope: !13298)
!13313 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2236, file: !2236, line: 695, type: !12432, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13314)
!13314 = !{!13315, !13316}
!13315 = !DILocalVariable(name: "thread", arg: 1, scope: !13313, file: !2236, line: 695, type: !2134)
!13316 = !DILocalVariable(name: "key", scope: !13313, file: !2236, line: 699, type: !12466)
!13317 = !DILocation(line: 0, scope: !13313)
!13318 = !DILocation(line: 0, scope: !12474, inlinedAt: !13319)
!13319 = distinct !DILocation(line: 699, column: 25, scope: !13313)
!13320 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13321)
!13321 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13319)
!13322 = !DILocation(line: 0, scope: !12483, inlinedAt: !13321)
!13323 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13319)
!13324 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13319)
!13325 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13319)
!13326 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13319)
!13327 = !DILocation(line: 702, column: 7, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13313, file: !2236, line: 702, column: 6)
!13329 = !DILocation(line: 702, column: 6, scope: !13313)
!13330 = !DILocation(line: 0, scope: !12508, inlinedAt: !13331)
!13331 = distinct !DILocation(line: 703, column: 3, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13328, file: !2236, line: 702, column: 38)
!13333 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13331)
!13334 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13331)
!13335 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13331)
!13336 = !DILocation(line: 0, scope: !12522, inlinedAt: !13337)
!13337 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13331)
!13338 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13337)
!13339 = !DILocation(line: 704, column: 3, scope: !13332)
!13340 = !DILocation(line: 707, column: 2, scope: !13313)
!13341 = !DILocation(line: 708, column: 2, scope: !13313)
!13342 = !DILocation(line: 710, column: 2, scope: !13313)
!13343 = !DILocation(line: 713, column: 1, scope: !13313)
!13344 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11656, file: !11656, line: 96, type: !12615, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13345)
!13345 = !{!13346}
!13346 = !DILocalVariable(name: "thread", arg: 1, scope: !13344, file: !11656, line: 96, type: !2134)
!13347 = !DILocation(line: 0, scope: !13344)
!13348 = !DILocation(line: 98, column: 23, scope: !13344)
!13349 = !DILocation(line: 98, column: 36, scope: !13344)
!13350 = !DILocation(line: 98, column: 57, scope: !13344)
!13351 = !DILocation(line: 98, column: 2, scope: !13344)
!13352 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11656, file: !11656, line: 148, type: !12432, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13353)
!13353 = !{!13354}
!13354 = !DILocalVariable(name: "thread", arg: 1, scope: !13352, file: !11656, line: 148, type: !2134)
!13355 = !DILocation(line: 0, scope: !13352)
!13356 = !DILocation(line: 150, column: 15, scope: !13352)
!13357 = !DILocation(line: 150, column: 28, scope: !13352)
!13358 = !DILocation(line: 153, column: 1, scope: !13352)
!13359 = distinct !DISubprogram(name: "z_pend_thread", scope: !2236, file: !2236, line: 770, type: !13360, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13366)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{null, !2134, !2165, !13362}
!13362 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !13363)
!13363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !13364)
!13364 = !{!13365}
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13363, file: !693, line: 66, baseType: !692, size: 64)
!13366 = !{!13367, !13368, !13369, !13370, !13372}
!13367 = !DILocalVariable(name: "thread", arg: 1, scope: !13359, file: !2236, line: 770, type: !2134)
!13368 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13359, file: !2236, line: 770, type: !2165)
!13369 = !DILocalVariable(name: "timeout", arg: 3, scope: !13359, file: !2236, line: 771, type: !13362)
!13370 = !DILocalVariable(name: "__i", scope: !13371, file: !2236, line: 774, type: !12466)
!13371 = distinct !DILexicalBlock(scope: !13359, file: !2236, line: 774, column: 2)
!13372 = !DILocalVariable(name: "__key", scope: !13371, file: !2236, line: 774, type: !12466)
!13373 = !DILocation(line: 0, scope: !13359)
!13374 = !DILocation(line: 773, column: 2, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13376, file: !2236, line: 773, column: 2)
!13376 = distinct !DILexicalBlock(scope: !13359, file: !2236, line: 773, column: 2)
!13377 = !DILocation(line: 773, column: 2, scope: !13376)
!13378 = !DILocation(line: 773, column: 2, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13375, file: !2236, line: 773, column: 2)
!13380 = !DILocation(line: 0, scope: !13371)
!13381 = !DILocation(line: 0, scope: !12474, inlinedAt: !13382)
!13382 = distinct !DILocation(line: 774, column: 2, scope: !13371)
!13383 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13384)
!13384 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13382)
!13385 = !DILocation(line: 0, scope: !12483, inlinedAt: !13384)
!13386 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13382)
!13387 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13382)
!13388 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13382)
!13389 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13382)
!13390 = !DILocation(line: 775, column: 3, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13392, file: !2236, line: 774, column: 26)
!13392 = distinct !DILexicalBlock(scope: !13371, file: !2236, line: 774, column: 2)
!13393 = !DILocation(line: 0, scope: !12508, inlinedAt: !13394)
!13394 = distinct !DILocation(line: 774, column: 2, scope: !13392)
!13395 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13394)
!13396 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13394)
!13397 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13394)
!13398 = !DILocation(line: 0, scope: !12522, inlinedAt: !13399)
!13399 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13394)
!13400 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13399)
!13401 = !DILocation(line: 777, column: 1, scope: !13359)
!13402 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2236, file: !2236, line: 79, type: !12615, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13403)
!13403 = !{!13404}
!13404 = !DILocalVariable(name: "thread", arg: 1, scope: !13402, file: !2236, line: 79, type: !2134)
!13405 = !DILocation(line: 0, scope: !13402)
!13406 = !DILocation(line: 81, column: 23, scope: !13402)
!13407 = !DILocation(line: 81, column: 36, scope: !13402)
!13408 = !DILocation(line: 81, column: 53, scope: !13402)
!13409 = !DILocation(line: 81, column: 2, scope: !13402)
!13410 = distinct !DISubprogram(name: "pend_locked", scope: !2236, file: !2236, line: 760, type: !13360, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13411)
!13411 = !{!13412, !13413, !13414}
!13412 = !DILocalVariable(name: "thread", arg: 1, scope: !13410, file: !2236, line: 760, type: !2134)
!13413 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13410, file: !2236, line: 760, type: !2165)
!13414 = !DILocalVariable(name: "timeout", arg: 3, scope: !13410, file: !2236, line: 761, type: !13362)
!13415 = !DILocation(line: 0, scope: !13410)
!13416 = !DILocation(line: 766, column: 2, scope: !13410)
!13417 = !DILocation(line: 767, column: 2, scope: !13410)
!13418 = !DILocation(line: 768, column: 1, scope: !13410)
!13419 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2236, file: !2236, line: 740, type: !13420, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13422)
!13420 = !DISubroutineType(types: !13421)
!13421 = !{null, !2134, !2165}
!13422 = !{!13423, !13424}
!13423 = !DILocalVariable(name: "thread", arg: 1, scope: !13419, file: !2236, line: 740, type: !2134)
!13424 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13419, file: !2236, line: 740, type: !2165)
!13425 = !DILocation(line: 0, scope: !13419)
!13426 = !DILocation(line: 742, column: 2, scope: !13419)
!13427 = !DILocation(line: 743, column: 2, scope: !13419)
!13428 = !DILocation(line: 747, column: 13, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13419, file: !2236, line: 747, column: 6)
!13430 = !DILocation(line: 747, column: 6, scope: !13419)
!13431 = !DILocation(line: 748, column: 16, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13429, file: !2236, line: 747, column: 22)
!13433 = !DILocation(line: 748, column: 26, scope: !13432)
!13434 = !DILocation(line: 749, column: 28, scope: !13432)
!13435 = !DILocation(line: 0, scope: !12697, inlinedAt: !13436)
!13436 = distinct !DILocation(line: 749, column: 3, scope: !13432)
!13437 = !DILocation(line: 186, column: 2, scope: !12707, inlinedAt: !13436)
!13438 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !13436)
!13439 = !DILocation(line: 186, column: 2, scope: !12711, inlinedAt: !13436)
!13440 = !DILocation(line: 188, column: 2, scope: !12713, inlinedAt: !13436)
!13441 = !DILocation(line: 188, column: 2, scope: !12715, inlinedAt: !13436)
!13442 = !DILocation(line: 0, scope: !12713, inlinedAt: !13436)
!13443 = !DILocation(line: 189, column: 7, scope: !12718, inlinedAt: !13436)
!13444 = !DILocation(line: 189, column: 35, scope: !12718, inlinedAt: !13436)
!13445 = !DILocation(line: 189, column: 7, scope: !12719, inlinedAt: !13436)
!13446 = !DILocation(line: 191, column: 21, scope: !12723, inlinedAt: !13436)
!13447 = !DILocation(line: 190, column: 4, scope: !12723, inlinedAt: !13436)
!13448 = !DILocation(line: 192, column: 4, scope: !12723, inlinedAt: !13436)
!13449 = distinct !{!13449, !13440, !13450}
!13450 = !DILocation(line: 194, column: 2, scope: !12713, inlinedAt: !13436)
!13451 = !DILocation(line: 196, column: 37, scope: !12697, inlinedAt: !13436)
!13452 = !DILocation(line: 196, column: 2, scope: !12697, inlinedAt: !13436)
!13453 = !DILocation(line: 197, column: 1, scope: !12697, inlinedAt: !13436)
!13454 = !DILocation(line: 751, column: 1, scope: !13419)
!13455 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2236, file: !2236, line: 753, type: !13456, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13458)
!13456 = !DISubroutineType(types: !13457)
!13457 = !{null, !2134, !13362}
!13458 = !{!13459, !13460}
!13459 = !DILocalVariable(name: "thread", arg: 1, scope: !13455, file: !2236, line: 753, type: !2134)
!13460 = !DILocalVariable(name: "timeout", arg: 2, scope: !13455, file: !2236, line: 753, type: !13362)
!13461 = !DILocation(line: 0, scope: !13455)
!13462 = !DILocation(line: 755, column: 7, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13455, file: !2236, line: 755, column: 6)
!13464 = !DILocation(line: 755, column: 6, scope: !13455)
!13465 = !DILocation(line: 756, column: 3, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13463, file: !2236, line: 755, column: 41)
!13467 = !DILocation(line: 757, column: 2, scope: !13466)
!13468 = !DILocation(line: 758, column: 1, scope: !13455)
!13469 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12063, file: !12063, line: 47, type: !13456, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13470)
!13470 = !{!13471, !13472}
!13471 = !DILocalVariable(name: "thread", arg: 1, scope: !13469, file: !12063, line: 47, type: !2134)
!13472 = !DILocalVariable(name: "ticks", arg: 2, scope: !13469, file: !12063, line: 47, type: !13362)
!13473 = !DILocation(line: 0, scope: !13469)
!13474 = !DILocation(line: 49, column: 30, scope: !13469)
!13475 = !DILocation(line: 49, column: 2, scope: !13469)
!13476 = !DILocation(line: 50, column: 1, scope: !13469)
!13477 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2236, file: !2236, line: 795, type: !2191, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13478)
!13478 = !{!13479, !13480, !13481, !13483, !13484}
!13479 = !DILocalVariable(name: "timeout", arg: 1, scope: !13477, file: !2236, line: 795, type: !2193)
!13480 = !DILocalVariable(name: "thread", scope: !13477, file: !2236, line: 797, type: !2134)
!13481 = !DILocalVariable(name: "__i", scope: !13482, file: !2236, line: 800, type: !12466)
!13482 = distinct !DILexicalBlock(scope: !13477, file: !2236, line: 800, column: 2)
!13483 = !DILocalVariable(name: "__key", scope: !13482, file: !2236, line: 800, type: !12466)
!13484 = !DILocalVariable(name: "killed", scope: !13485, file: !2236, line: 801, type: !145)
!13485 = distinct !DILexicalBlock(scope: !13486, file: !2236, line: 800, column: 26)
!13486 = distinct !DILexicalBlock(scope: !13482, file: !2236, line: 800, column: 2)
!13487 = !DILocation(line: 0, scope: !13477)
!13488 = !DILocation(line: 797, column: 28, scope: !13477)
!13489 = !DILocation(line: 0, scope: !13482)
!13490 = !DILocation(line: 0, scope: !12474, inlinedAt: !13491)
!13491 = distinct !DILocation(line: 800, column: 2, scope: !13482)
!13492 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13493)
!13493 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13491)
!13494 = !DILocation(line: 0, scope: !12483, inlinedAt: !13493)
!13495 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13491)
!13496 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13491)
!13497 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13491)
!13498 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13491)
!13499 = !DILocation(line: 801, column: 27, scope: !13485)
!13500 = !DILocation(line: 801, column: 32, scope: !13485)
!13501 = !DILocation(line: 801, column: 61, scope: !13485)
!13502 = !DILocation(line: 0, scope: !13485)
!13503 = !DILocation(line: 804, column: 7, scope: !13485)
!13504 = !DILocation(line: 805, column: 21, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !2236, line: 805, column: 8)
!13506 = distinct !DILexicalBlock(scope: !13507, file: !2236, line: 804, column: 16)
!13507 = distinct !DILexicalBlock(scope: !13485, file: !2236, line: 804, column: 7)
!13508 = !DILocation(line: 805, column: 31, scope: !13505)
!13509 = !DILocation(line: 805, column: 8, scope: !13506)
!13510 = !DILocation(line: 806, column: 5, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13505, file: !2236, line: 805, column: 40)
!13512 = !DILocation(line: 807, column: 4, scope: !13511)
!13513 = !DILocation(line: 808, column: 4, scope: !13506)
!13514 = !DILocation(line: 809, column: 4, scope: !13506)
!13515 = !DILocation(line: 810, column: 4, scope: !13506)
!13516 = !DILocation(line: 811, column: 3, scope: !13506)
!13517 = !DILocation(line: 0, scope: !12508, inlinedAt: !13518)
!13518 = distinct !DILocation(line: 800, column: 2, scope: !13486)
!13519 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13518)
!13520 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13518)
!13521 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13518)
!13522 = !DILocation(line: 0, scope: !12522, inlinedAt: !13523)
!13523 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13518)
!13524 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13523)
!13525 = !DILocation(line: 813, column: 1, scope: !13477)
!13526 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2236, file: !2236, line: 779, type: !12432, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13527)
!13527 = !{!13528}
!13528 = !DILocalVariable(name: "thread", arg: 1, scope: !13526, file: !2236, line: 779, type: !2134)
!13529 = !DILocation(line: 0, scope: !13526)
!13530 = !DILocation(line: 781, column: 21, scope: !13526)
!13531 = !DILocation(line: 781, column: 2, scope: !13526)
!13532 = !DILocation(line: 782, column: 2, scope: !13526)
!13533 = !DILocation(line: 783, column: 15, scope: !13526)
!13534 = !DILocation(line: 783, column: 25, scope: !13526)
!13535 = !DILocation(line: 784, column: 1, scope: !13526)
!13536 = distinct !DISubprogram(name: "pended_on_thread", scope: !2236, file: !2236, line: 724, type: !13537, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13539)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{!2165, !2134}
!13539 = !{!13540}
!13540 = !DILocalVariable(name: "thread", arg: 1, scope: !13536, file: !2236, line: 724, type: !2134)
!13541 = !DILocation(line: 0, scope: !13536)
!13542 = !DILocation(line: 726, column: 2, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13544, file: !2236, line: 726, column: 2)
!13544 = distinct !DILexicalBlock(scope: !13536, file: !2236, line: 726, column: 2)
!13545 = !DILocation(line: 726, column: 2, scope: !13544)
!13546 = !DILocation(line: 726, column: 2, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13543, file: !2236, line: 726, column: 2)
!13548 = !DILocation(line: 728, column: 2, scope: !13536)
!13549 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11656, file: !11656, line: 165, type: !12432, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13550)
!13550 = !{!13551}
!13551 = !DILocalVariable(name: "thread", arg: 1, scope: !13549, file: !11656, line: 165, type: !2134)
!13552 = !DILocation(line: 0, scope: !13549)
!13553 = !DILocation(line: 167, column: 15, scope: !13549)
!13554 = !DILocation(line: 167, column: 28, scope: !13549)
!13555 = !DILocation(line: 168, column: 1, scope: !13549)
!13556 = distinct !DISubprogram(name: "unready_thread", scope: !2236, file: !2236, line: 731, type: !12432, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13557)
!13557 = !{!13558}
!13558 = !DILocalVariable(name: "thread", arg: 1, scope: !13556, file: !2236, line: 731, type: !2134)
!13559 = !DILocation(line: 0, scope: !13556)
!13560 = !DILocation(line: 733, column: 6, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13556, file: !2236, line: 733, column: 6)
!13562 = !DILocation(line: 733, column: 6, scope: !13556)
!13563 = !DILocation(line: 0, scope: !12666, inlinedAt: !13564)
!13564 = distinct !DILocation(line: 734, column: 3, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13561, file: !2236, line: 733, column: 34)
!13566 = !DILocation(line: 266, column: 15, scope: !12666, inlinedAt: !13564)
!13567 = !DILocation(line: 266, column: 28, scope: !12666, inlinedAt: !13564)
!13568 = !DILocation(line: 0, scope: !12674, inlinedAt: !13569)
!13569 = distinct !DILocation(line: 268, column: 3, scope: !12678, inlinedAt: !13564)
!13570 = !DILocation(line: 234, column: 2, scope: !12674, inlinedAt: !13569)
!13571 = !DILocation(line: 735, column: 2, scope: !13565)
!13572 = !DILocation(line: 736, column: 25, scope: !13556)
!13573 = !DILocation(line: 736, column: 22, scope: !13556)
!13574 = !DILocation(line: 736, column: 2, scope: !13556)
!13575 = !DILocation(line: 737, column: 1, scope: !13556)
!13576 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11656, file: !11656, line: 160, type: !12432, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13577)
!13577 = !{!13578}
!13578 = !DILocalVariable(name: "thread", arg: 1, scope: !13576, file: !11656, line: 160, type: !2134)
!13579 = !DILocation(line: 0, scope: !13576)
!13580 = !DILocation(line: 162, column: 15, scope: !13576)
!13581 = !DILocation(line: 162, column: 28, scope: !13576)
!13582 = !DILocation(line: 163, column: 1, scope: !13576)
!13583 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2236, file: !2236, line: 786, type: !12432, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13584)
!13584 = !{!13585, !13586, !13588}
!13585 = !DILocalVariable(name: "thread", arg: 1, scope: !13583, file: !2236, line: 786, type: !2134)
!13586 = !DILocalVariable(name: "__i", scope: !13587, file: !2236, line: 788, type: !12466)
!13587 = distinct !DILexicalBlock(scope: !13583, file: !2236, line: 788, column: 2)
!13588 = !DILocalVariable(name: "__key", scope: !13587, file: !2236, line: 788, type: !12466)
!13589 = !DILocation(line: 0, scope: !13583)
!13590 = !DILocation(line: 0, scope: !13587)
!13591 = !DILocation(line: 0, scope: !12474, inlinedAt: !13592)
!13592 = distinct !DILocation(line: 788, column: 2, scope: !13587)
!13593 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13594)
!13594 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13592)
!13595 = !DILocation(line: 0, scope: !12483, inlinedAt: !13594)
!13596 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13592)
!13597 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13592)
!13598 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13592)
!13599 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13592)
!13600 = !DILocation(line: 789, column: 3, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !2236, line: 788, column: 26)
!13602 = distinct !DILexicalBlock(scope: !13587, file: !2236, line: 788, column: 2)
!13603 = !DILocation(line: 0, scope: !12508, inlinedAt: !13604)
!13604 = distinct !DILocation(line: 788, column: 2, scope: !13602)
!13605 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13604)
!13606 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13604)
!13607 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13604)
!13608 = !DILocation(line: 0, scope: !12522, inlinedAt: !13609)
!13609 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13604)
!13610 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13609)
!13611 = !DILocation(line: 791, column: 1, scope: !13583)
!13612 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2236, file: !2236, line: 816, type: !13613, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13615)
!13613 = !DISubroutineType(types: !13614)
!13614 = !{!107, !152, !2165, !13362}
!13615 = !{!13616, !13617, !13618, !13619, !13620, !13622}
!13616 = !DILocalVariable(name: "key", arg: 1, scope: !13612, file: !2236, line: 816, type: !152)
!13617 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13612, file: !2236, line: 816, type: !2165)
!13618 = !DILocalVariable(name: "timeout", arg: 3, scope: !13612, file: !2236, line: 816, type: !13362)
!13619 = !DILocalVariable(name: "ret", scope: !13612, file: !2236, line: 828, type: !107)
!13620 = !DILocalVariable(name: "__i", scope: !13621, file: !2236, line: 829, type: !12466)
!13621 = distinct !DILexicalBlock(scope: !13612, file: !2236, line: 829, column: 2)
!13622 = !DILocalVariable(name: "__key", scope: !13621, file: !2236, line: 829, type: !12466)
!13623 = !DILocation(line: 0, scope: !13612)
!13624 = !DILocation(line: 823, column: 14, scope: !13612)
!13625 = !DILocation(line: 823, column: 2, scope: !13612)
!13626 = !DILocation(line: 826, column: 20, scope: !13612)
!13627 = !DILocation(line: 826, column: 18, scope: !13612)
!13628 = !DILocation(line: 828, column: 12, scope: !13612)
!13629 = !DILocation(line: 0, scope: !13621)
!13630 = !DILocation(line: 0, scope: !12474, inlinedAt: !13631)
!13631 = distinct !DILocation(line: 829, column: 2, scope: !13621)
!13632 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13633)
!13633 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13631)
!13634 = !DILocation(line: 0, scope: !12483, inlinedAt: !13633)
!13635 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13631)
!13636 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13631)
!13637 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13631)
!13638 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13631)
!13639 = !DILocation(line: 830, column: 7, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13641, file: !2236, line: 830, column: 7)
!13641 = distinct !DILexicalBlock(scope: !13642, file: !2236, line: 829, column: 26)
!13642 = distinct !DILexicalBlock(scope: !13621, file: !2236, line: 829, column: 2)
!13643 = !DILocation(line: 830, column: 26, scope: !13640)
!13644 = !DILocation(line: 830, column: 23, scope: !13640)
!13645 = !DILocation(line: 830, column: 7, scope: !13641)
!13646 = !DILocation(line: 831, column: 20, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13640, file: !2236, line: 830, column: 36)
!13648 = !DILocation(line: 832, column: 3, scope: !13647)
!13649 = !DILocation(line: 0, scope: !12508, inlinedAt: !13650)
!13650 = distinct !DILocation(line: 829, column: 2, scope: !13642)
!13651 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13650)
!13652 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13650)
!13653 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13650)
!13654 = !DILocation(line: 0, scope: !12522, inlinedAt: !13655)
!13655 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13650)
!13656 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13655)
!13657 = !DILocation(line: 834, column: 2, scope: !13612)
!13658 = distinct !DISubprogram(name: "z_pend_curr", scope: !2236, file: !2236, line: 840, type: !13659, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13661)
!13659 = !DISubroutineType(types: !13660)
!13660 = !{!107, !12477, !12466, !2165, !13362}
!13661 = !{!13662, !13663, !13664, !13665}
!13662 = !DILocalVariable(name: "lock", arg: 1, scope: !13658, file: !2236, line: 840, type: !12477)
!13663 = !DILocalVariable(name: "key", arg: 2, scope: !13658, file: !2236, line: 840, type: !12466)
!13664 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13658, file: !2236, line: 841, type: !2165)
!13665 = !DILocalVariable(name: "timeout", arg: 4, scope: !13658, file: !2236, line: 841, type: !13362)
!13666 = !DILocation(line: 0, scope: !13658)
!13667 = !DILocation(line: 844, column: 20, scope: !13658)
!13668 = !DILocation(line: 844, column: 18, scope: !13658)
!13669 = !DILocation(line: 846, column: 2, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13671, file: !2236, line: 846, column: 2)
!13671 = distinct !DILexicalBlock(scope: !13658, file: !2236, line: 846, column: 2)
!13672 = !DILocation(line: 846, column: 2, scope: !13671)
!13673 = !DILocation(line: 846, column: 2, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13670, file: !2236, line: 846, column: 2)
!13675 = !DILocation(line: 0, scope: !12474, inlinedAt: !13676)
!13676 = distinct !DILocation(line: 856, column: 9, scope: !13658)
!13677 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13678)
!13678 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13676)
!13679 = !DILocation(line: 0, scope: !12483, inlinedAt: !13678)
!13680 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13676)
!13681 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13676)
!13682 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13676)
!13683 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13676)
!13684 = !DILocation(line: 857, column: 14, scope: !13658)
!13685 = !DILocation(line: 857, column: 2, scope: !13658)
!13686 = !DILocation(line: 0, scope: !13161, inlinedAt: !13687)
!13687 = distinct !DILocation(line: 858, column: 2, scope: !13658)
!13688 = !DILocation(line: 225, column: 2, scope: !13168, inlinedAt: !13687)
!13689 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !13687)
!13690 = !DILocation(line: 225, column: 2, scope: !13172, inlinedAt: !13687)
!13691 = !DILocation(line: 0, scope: !13152, inlinedAt: !13692)
!13692 = distinct !DILocation(line: 859, column: 9, scope: !13658)
!13693 = !DILocation(line: 0, scope: !13161, inlinedAt: !13694)
!13694 = distinct !DILocation(line: 195, column: 2, scope: !13152, inlinedAt: !13692)
!13695 = !DILocation(line: 225, column: 2, scope: !13168, inlinedAt: !13694)
!13696 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !13694)
!13697 = !DILocation(line: 225, column: 2, scope: !13172, inlinedAt: !13694)
!13698 = !DILocation(line: 196, column: 9, scope: !13152, inlinedAt: !13692)
!13699 = !DILocation(line: 859, column: 2, scope: !13658)
!13700 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2236, file: !2236, line: 862, type: !13701, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13703)
!13701 = !DISubroutineType(types: !13702)
!13702 = !{!2134, !2165}
!13703 = !{!13704, !13705, !13706, !13708}
!13704 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13700, file: !2236, line: 862, type: !2165)
!13705 = !DILocalVariable(name: "thread", scope: !13700, file: !2236, line: 864, type: !2134)
!13706 = !DILocalVariable(name: "__i", scope: !13707, file: !2236, line: 866, type: !12466)
!13707 = distinct !DILexicalBlock(scope: !13700, file: !2236, line: 866, column: 2)
!13708 = !DILocalVariable(name: "__key", scope: !13707, file: !2236, line: 866, type: !12466)
!13709 = !DILocation(line: 0, scope: !13700)
!13710 = !DILocation(line: 0, scope: !13707)
!13711 = !DILocation(line: 0, scope: !12474, inlinedAt: !13712)
!13712 = distinct !DILocation(line: 866, column: 2, scope: !13707)
!13713 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13712)
!13715 = !DILocation(line: 0, scope: !12483, inlinedAt: !13714)
!13716 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13712)
!13717 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13712)
!13718 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13712)
!13719 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13712)
!13720 = !DILocation(line: 867, column: 12, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13722, file: !2236, line: 866, column: 26)
!13722 = distinct !DILexicalBlock(scope: !13707, file: !2236, line: 866, column: 2)
!13723 = !DILocation(line: 869, column: 14, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13721, file: !2236, line: 869, column: 7)
!13725 = !DILocation(line: 869, column: 7, scope: !13721)
!13726 = !DILocation(line: 870, column: 4, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13724, file: !2236, line: 869, column: 23)
!13728 = !DILocation(line: 871, column: 3, scope: !13727)
!13729 = !DILocation(line: 0, scope: !12508, inlinedAt: !13730)
!13730 = distinct !DILocation(line: 866, column: 2, scope: !13722)
!13731 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13730)
!13732 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13730)
!13733 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13730)
!13734 = !DILocation(line: 0, scope: !12522, inlinedAt: !13735)
!13735 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13730)
!13736 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13735)
!13737 = !DILocation(line: 874, column: 2, scope: !13700)
!13738 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2236, file: !2236, line: 877, type: !13701, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13739)
!13739 = !{!13740, !13741, !13742, !13744}
!13740 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13738, file: !2236, line: 877, type: !2165)
!13741 = !DILocalVariable(name: "thread", scope: !13738, file: !2236, line: 879, type: !2134)
!13742 = !DILocalVariable(name: "__i", scope: !13743, file: !2236, line: 881, type: !12466)
!13743 = distinct !DILexicalBlock(scope: !13738, file: !2236, line: 881, column: 2)
!13744 = !DILocalVariable(name: "__key", scope: !13743, file: !2236, line: 881, type: !12466)
!13745 = !DILocation(line: 0, scope: !13738)
!13746 = !DILocation(line: 0, scope: !13743)
!13747 = !DILocation(line: 0, scope: !12474, inlinedAt: !13748)
!13748 = distinct !DILocation(line: 881, column: 2, scope: !13743)
!13749 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13750)
!13750 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13748)
!13751 = !DILocation(line: 0, scope: !12483, inlinedAt: !13750)
!13752 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13748)
!13753 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13748)
!13754 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13748)
!13755 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13748)
!13756 = !DILocation(line: 882, column: 12, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13758, file: !2236, line: 881, column: 26)
!13758 = distinct !DILexicalBlock(scope: !13743, file: !2236, line: 881, column: 2)
!13759 = !DILocation(line: 884, column: 14, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13757, file: !2236, line: 884, column: 7)
!13761 = !DILocation(line: 884, column: 7, scope: !13757)
!13762 = !DILocation(line: 885, column: 4, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13760, file: !2236, line: 884, column: 23)
!13764 = !DILocation(line: 886, column: 10, scope: !13763)
!13765 = !DILocation(line: 887, column: 3, scope: !13763)
!13766 = !DILocation(line: 0, scope: !12508, inlinedAt: !13767)
!13767 = distinct !DILocation(line: 881, column: 2, scope: !13758)
!13768 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13767)
!13769 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13767)
!13770 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13767)
!13771 = !DILocation(line: 0, scope: !12522, inlinedAt: !13772)
!13772 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13767)
!13773 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13772)
!13774 = !DILocation(line: 890, column: 2, scope: !13738)
!13775 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2236, file: !2236, line: 893, type: !12432, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13776)
!13776 = !{!13777}
!13777 = !DILocalVariable(name: "thread", arg: 1, scope: !13775, file: !2236, line: 893, type: !2134)
!13778 = !DILocation(line: 0, scope: !13775)
!13779 = !DILocation(line: 0, scope: !13583, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 895, column: 2, scope: !13775)
!13781 = !DILocation(line: 0, scope: !13587, inlinedAt: !13780)
!13782 = !DILocation(line: 0, scope: !12474, inlinedAt: !13783)
!13783 = distinct !DILocation(line: 788, column: 2, scope: !13587, inlinedAt: !13780)
!13784 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13785)
!13785 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13783)
!13786 = !DILocation(line: 0, scope: !12483, inlinedAt: !13785)
!13787 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13783)
!13788 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13783)
!13789 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13783)
!13790 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13783)
!13791 = !DILocation(line: 789, column: 3, scope: !13601, inlinedAt: !13780)
!13792 = !DILocation(line: 0, scope: !12508, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 788, column: 2, scope: !13602, inlinedAt: !13780)
!13794 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13793)
!13795 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13793)
!13796 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13793)
!13797 = !DILocation(line: 0, scope: !12522, inlinedAt: !13798)
!13798 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13793)
!13799 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13798)
!13800 = !DILocation(line: 896, column: 8, scope: !13775)
!13801 = !DILocation(line: 897, column: 1, scope: !13775)
!13802 = distinct !DISubprogram(name: "z_set_prio", scope: !2236, file: !2236, line: 902, type: !12835, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13803)
!13803 = !{!13804, !13805, !13806, !13807, !13809}
!13804 = !DILocalVariable(name: "thread", arg: 1, scope: !13802, file: !2236, line: 902, type: !2134)
!13805 = !DILocalVariable(name: "prio", arg: 2, scope: !13802, file: !2236, line: 902, type: !107)
!13806 = !DILocalVariable(name: "need_sched", scope: !13802, file: !2236, line: 904, type: !145)
!13807 = !DILocalVariable(name: "__i", scope: !13808, file: !2236, line: 906, type: !12466)
!13808 = distinct !DILexicalBlock(scope: !13802, file: !2236, line: 906, column: 2)
!13809 = !DILocalVariable(name: "__key", scope: !13808, file: !2236, line: 906, type: !12466)
!13810 = !DILocation(line: 0, scope: !13802)
!13811 = !DILocation(line: 0, scope: !13808)
!13812 = !DILocation(line: 0, scope: !12474, inlinedAt: !13813)
!13813 = distinct !DILocation(line: 906, column: 2, scope: !13808)
!13814 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13815)
!13815 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13813)
!13816 = !DILocation(line: 0, scope: !12483, inlinedAt: !13815)
!13817 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13813)
!13818 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13813)
!13819 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13813)
!13820 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13813)
!13821 = !DILocation(line: 907, column: 16, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !2236, line: 906, column: 26)
!13823 = distinct !DILexicalBlock(scope: !13808, file: !2236, line: 906, column: 2)
!13824 = !DILocation(line: 909, column: 7, scope: !13822)
!13825 = !DILocation(line: 0, scope: !12666, inlinedAt: !13826)
!13826 = distinct !DILocation(line: 912, column: 5, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13828, file: !2236, line: 911, column: 63)
!13828 = distinct !DILexicalBlock(scope: !13829, file: !2236, line: 911, column: 8)
!13829 = distinct !DILexicalBlock(scope: !13830, file: !2236, line: 909, column: 19)
!13830 = distinct !DILexicalBlock(scope: !13822, file: !2236, line: 909, column: 7)
!13831 = !DILocation(line: 266, column: 28, scope: !12666, inlinedAt: !13826)
!13832 = !DILocation(line: 0, scope: !12674, inlinedAt: !13833)
!13833 = distinct !DILocation(line: 268, column: 3, scope: !12678, inlinedAt: !13826)
!13834 = !DILocation(line: 234, column: 2, scope: !12674, inlinedAt: !13833)
!13835 = !DILocation(line: 913, column: 23, scope: !13827)
!13836 = !DILocation(line: 0, scope: !12683, inlinedAt: !13837)
!13837 = distinct !DILocation(line: 914, column: 5, scope: !13827)
!13838 = !DILocation(line: 252, column: 28, scope: !12683, inlinedAt: !13837)
!13839 = !DILocation(line: 0, scope: !12690, inlinedAt: !13840)
!13840 = distinct !DILocation(line: 254, column: 3, scope: !12694, inlinedAt: !13837)
!13841 = !DILocation(line: 0, scope: !12697, inlinedAt: !13842)
!13842 = distinct !DILocation(line: 229, column: 2, scope: !12690, inlinedAt: !13840)
!13843 = !DILocation(line: 186, column: 2, scope: !12707, inlinedAt: !13842)
!13844 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !13842)
!13845 = !DILocation(line: 186, column: 2, scope: !12711, inlinedAt: !13842)
!13846 = !DILocation(line: 188, column: 2, scope: !12713, inlinedAt: !13842)
!13847 = !DILocation(line: 188, column: 2, scope: !12715, inlinedAt: !13842)
!13848 = !DILocation(line: 0, scope: !12713, inlinedAt: !13842)
!13849 = !DILocation(line: 189, column: 7, scope: !12718, inlinedAt: !13842)
!13850 = !DILocation(line: 189, column: 35, scope: !12718, inlinedAt: !13842)
!13851 = !DILocation(line: 189, column: 7, scope: !12719, inlinedAt: !13842)
!13852 = !DILocation(line: 190, column: 4, scope: !12723, inlinedAt: !13842)
!13853 = !DILocation(line: 192, column: 4, scope: !12723, inlinedAt: !13842)
!13854 = distinct !{!13854, !13846, !13855}
!13855 = !DILocation(line: 194, column: 2, scope: !12713, inlinedAt: !13842)
!13856 = !DILocation(line: 196, column: 2, scope: !12697, inlinedAt: !13842)
!13857 = !DILocation(line: 197, column: 1, scope: !12697, inlinedAt: !13842)
!13858 = !DILocation(line: 918, column: 4, scope: !13829)
!13859 = !DILocation(line: 919, column: 3, scope: !13829)
!13860 = !DILocation(line: 920, column: 22, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13830, file: !2236, line: 919, column: 10)
!13862 = !DILocation(line: 0, scope: !12508, inlinedAt: !13863)
!13863 = distinct !DILocation(line: 906, column: 2, scope: !13823)
!13864 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13863)
!13865 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13863)
!13866 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13863)
!13867 = !DILocation(line: 0, scope: !12522, inlinedAt: !13868)
!13868 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13863)
!13869 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13868)
!13870 = !DILocation(line: 926, column: 2, scope: !13802)
!13871 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2236, file: !2236, line: 929, type: !13872, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13874)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{null, !2134, !107}
!13874 = !{!13875, !13876, !13877}
!13875 = !DILocalVariable(name: "thread", arg: 1, scope: !13871, file: !2236, line: 929, type: !2134)
!13876 = !DILocalVariable(name: "prio", arg: 2, scope: !13871, file: !2236, line: 929, type: !107)
!13877 = !DILocalVariable(name: "need_sched", scope: !13871, file: !2236, line: 931, type: !145)
!13878 = !DILocation(line: 0, scope: !13871)
!13879 = !DILocation(line: 931, column: 20, scope: !13871)
!13880 = !DILocation(line: 935, column: 17, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13871, file: !2236, line: 935, column: 6)
!13882 = !DILocation(line: 935, column: 20, scope: !13881)
!13883 = !DILocation(line: 935, column: 35, scope: !13881)
!13884 = !DILocation(line: 935, column: 48, scope: !13881)
!13885 = !DILocation(line: 935, column: 6, scope: !13871)
!13886 = !DILocation(line: 936, column: 3, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13881, file: !2236, line: 935, column: 55)
!13888 = !DILocation(line: 937, column: 2, scope: !13887)
!13889 = !DILocation(line: 938, column: 1, scope: !13871)
!13890 = distinct !DISubprogram(name: "k_sched_lock", scope: !2236, file: !2236, line: 987, type: !2909, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13891)
!13891 = !{!13892, !13894}
!13892 = !DILocalVariable(name: "__i", scope: !13893, file: !2236, line: 989, type: !12466)
!13893 = distinct !DILexicalBlock(scope: !13890, file: !2236, line: 989, column: 2)
!13894 = !DILocalVariable(name: "__key", scope: !13893, file: !2236, line: 989, type: !12466)
!13895 = !DILocation(line: 0, scope: !13893)
!13896 = !DILocation(line: 0, scope: !12474, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 989, column: 2, scope: !13893)
!13898 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13899)
!13899 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13897)
!13900 = !DILocation(line: 0, scope: !12483, inlinedAt: !13899)
!13901 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13897)
!13902 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13897)
!13903 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13897)
!13904 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13897)
!13905 = !DILocation(line: 992, column: 3, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !2236, line: 989, column: 26)
!13907 = distinct !DILexicalBlock(scope: !13893, file: !2236, line: 989, column: 2)
!13908 = !DILocation(line: 0, scope: !12508, inlinedAt: !13909)
!13909 = distinct !DILocation(line: 989, column: 2, scope: !13907)
!13910 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13909)
!13911 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13909)
!13912 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13909)
!13913 = !DILocation(line: 0, scope: !12522, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13909)
!13915 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13914)
!13916 = !DILocation(line: 994, column: 1, scope: !13890)
!13917 = distinct !DISubprogram(name: "z_sched_lock", scope: !11656, file: !11656, line: 251, type: !2909, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13918 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !13920)
!13920 = distinct !DILocation(line: 253, column: 2, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13922, file: !11656, line: 253, column: 2)
!13922 = distinct !DILexicalBlock(scope: !13917, file: !11656, line: 253, column: 2)
!13923 = !DILocation(line: 0, scope: !13201, inlinedAt: !13919)
!13924 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !13920)
!13925 = !DILocation(line: 253, column: 2, scope: !13922)
!13926 = !DILocation(line: 253, column: 2, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13921, file: !11656, line: 253, column: 2)
!13928 = !DILocation(line: 254, column: 2, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13930, file: !11656, line: 254, column: 2)
!13930 = distinct !DILexicalBlock(scope: !13917, file: !11656, line: 254, column: 2)
!13931 = !DILocation(line: 254, column: 2, scope: !13930)
!13932 = !DILocation(line: 254, column: 2, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13929, file: !11656, line: 254, column: 2)
!13934 = !DILocation(line: 256, column: 2, scope: !13917)
!13935 = !DILocation(line: 258, column: 2, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13917, file: !11656, line: 258, column: 2)
!13937 = !{i64 2154802595}
!13938 = !DILocation(line: 259, column: 1, scope: !13917)
!13939 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2236, file: !2236, line: 996, type: !2909, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13940)
!13940 = !{!13941, !13943}
!13941 = !DILocalVariable(name: "__i", scope: !13942, file: !2236, line: 998, type: !12466)
!13942 = distinct !DILexicalBlock(scope: !13939, file: !2236, line: 998, column: 2)
!13943 = !DILocalVariable(name: "__key", scope: !13942, file: !2236, line: 998, type: !12466)
!13944 = !DILocation(line: 0, scope: !13942)
!13945 = !DILocation(line: 0, scope: !12474, inlinedAt: !13946)
!13946 = distinct !DILocation(line: 998, column: 2, scope: !13942)
!13947 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !13948)
!13948 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !13946)
!13949 = !DILocation(line: 0, scope: !12483, inlinedAt: !13948)
!13950 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !13946)
!13951 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13946)
!13952 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !13946)
!13953 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !13946)
!13954 = !DILocation(line: 999, column: 3, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !2236, line: 999, column: 3)
!13956 = distinct !DILexicalBlock(scope: !13957, file: !2236, line: 999, column: 3)
!13957 = distinct !DILexicalBlock(scope: !13958, file: !2236, line: 998, column: 26)
!13958 = distinct !DILexicalBlock(scope: !13942, file: !2236, line: 998, column: 2)
!13959 = !DILocation(line: 999, column: 3, scope: !13956)
!13960 = !DILocation(line: 999, column: 3, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13955, file: !2236, line: 999, column: 3)
!13962 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !13963)
!13963 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !13964)
!13964 = distinct !DILocation(line: 1000, column: 3, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !2236, line: 1000, column: 3)
!13966 = distinct !DILexicalBlock(scope: !13957, file: !2236, line: 1000, column: 3)
!13967 = !DILocation(line: 0, scope: !13201, inlinedAt: !13963)
!13968 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !13964)
!13969 = !DILocation(line: 1000, column: 3, scope: !13966)
!13970 = !DILocation(line: 1000, column: 3, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13965, file: !2236, line: 1000, column: 3)
!13972 = !DILocation(line: 1002, column: 5, scope: !13957)
!13973 = !DILocation(line: 1002, column: 20, scope: !13957)
!13974 = !DILocation(line: 1002, column: 3, scope: !13957)
!13975 = !DILocation(line: 1003, column: 3, scope: !13957)
!13976 = !DILocation(line: 0, scope: !12508, inlinedAt: !13977)
!13977 = distinct !DILocation(line: 998, column: 2, scope: !13958)
!13978 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !13977)
!13979 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13977)
!13980 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !13977)
!13981 = !DILocation(line: 0, scope: !12522, inlinedAt: !13982)
!13982 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !13977)
!13983 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !13982)
!13984 = !DILocation(line: 1011, column: 2, scope: !13939)
!13985 = !DILocation(line: 1012, column: 1, scope: !13939)
!13986 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2236, file: !2236, line: 1014, type: !12823, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13987 = !DILocation(line: 1028, column: 25, scope: !13986)
!13988 = !DILocation(line: 1028, column: 2, scope: !13986)
!13989 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2236, file: !2236, line: 1155, type: !13990, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13992)
!13990 = !DISubroutineType(types: !13991)
!13991 = !{!145, !2163, !2163}
!13992 = !{!13993, !13994, !13995, !13996, !13997}
!13993 = !DILocalVariable(name: "a", arg: 1, scope: !13989, file: !2236, line: 1155, type: !2163)
!13994 = !DILocalVariable(name: "b", arg: 2, scope: !13989, file: !2236, line: 1155, type: !2163)
!13995 = !DILocalVariable(name: "thread_a", scope: !13989, file: !2236, line: 1157, type: !2134)
!13996 = !DILocalVariable(name: "thread_b", scope: !13989, file: !2236, line: 1157, type: !2134)
!13997 = !DILocalVariable(name: "cmp", scope: !13989, file: !2236, line: 1158, type: !1149)
!13998 = !DILocation(line: 0, scope: !13989)
!13999 = !DILocation(line: 1160, column: 13, scope: !13989)
!14000 = !DILocation(line: 1161, column: 13, scope: !13989)
!14001 = !DILocation(line: 1163, column: 8, scope: !13989)
!14002 = !DILocation(line: 1165, column: 10, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13989, file: !2236, line: 1165, column: 6)
!14004 = !DILocation(line: 1165, column: 6, scope: !13989)
!14005 = !DILocation(line: 1167, column: 17, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14003, file: !2236, line: 1167, column: 13)
!14007 = !DILocation(line: 1167, column: 13, scope: !14003)
!14008 = !DILocation(line: 1170, column: 25, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14006, file: !2236, line: 1169, column: 9)
!14010 = !DILocation(line: 1170, column: 52, scope: !14009)
!14011 = !DILocation(line: 1170, column: 35, scope: !14009)
!14012 = !DILocation(line: 1170, column: 3, scope: !14009)
!14013 = !DILocation(line: 0, scope: !14003)
!14014 = !DILocation(line: 1173, column: 1, scope: !13989)
!14015 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2236, file: !2236, line: 1175, type: !14016, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14031)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{null, !14018, !2134}
!14018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14019, size: 32)
!14019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14020, line: 37, size: 128, elements: !14021)
!14020 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14021 = !{!14022, !14030}
!14022 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14019, file: !14020, line: 38, baseType: !14023, size: 96)
!14023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !742, line: 83, size: 96, elements: !14024)
!14024 = !{!14025, !14026, !14029}
!14025 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14023, file: !742, line: 84, baseType: !2163, size: 32)
!14026 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14023, file: !742, line: 85, baseType: !14027, size: 32, offset: 32)
!14027 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !742, line: 81, baseType: !14028)
!14028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13990, size: 32)
!14029 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14023, file: !742, line: 86, baseType: !107, size: 32, offset: 64)
!14030 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14019, file: !14020, line: 39, baseType: !107, size: 32, offset: 96)
!14031 = !{!14032, !14033, !14034, !14035, !14044}
!14032 = !DILocalVariable(name: "pq", arg: 1, scope: !14015, file: !2236, line: 1175, type: !14018)
!14033 = !DILocalVariable(name: "thread", arg: 2, scope: !14015, file: !2236, line: 1175, type: !2134)
!14034 = !DILocalVariable(name: "t", scope: !14015, file: !2236, line: 1177, type: !2134)
!14035 = !DILocalVariable(name: "__f", scope: !14036, file: !2236, line: 1190, type: !14039)
!14036 = distinct !DILexicalBlock(scope: !14037, file: !2236, line: 1190, column: 3)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !2236, line: 1189, column: 27)
!14038 = distinct !DILexicalBlock(scope: !14015, file: !2236, line: 1189, column: 6)
!14039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !742, line: 155, size: 96, elements: !14040)
!14040 = !{!14041, !14042, !14043}
!14041 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14039, file: !742, line: 156, baseType: !2231, size: 32)
!14042 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14039, file: !742, line: 157, baseType: !194, size: 32, offset: 32)
!14043 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14039, file: !742, line: 158, baseType: !1149, size: 32, offset: 64)
!14044 = !DILocalVariable(name: "n", scope: !14045, file: !2236, line: 1190, type: !2163)
!14045 = distinct !DILexicalBlock(scope: !14046, file: !2236, line: 1190, column: 3)
!14046 = distinct !DILexicalBlock(scope: !14036, file: !2236, line: 1190, column: 3)
!14047 = !DILocation(line: 0, scope: !14015)
!14048 = !DILocation(line: 1179, column: 2, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14050, file: !2236, line: 1179, column: 2)
!14050 = distinct !DILexicalBlock(scope: !14015, file: !2236, line: 1179, column: 2)
!14051 = !DILocation(line: 1179, column: 2, scope: !14050)
!14052 = !DILocation(line: 1179, column: 2, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14049, file: !2236, line: 1179, column: 2)
!14054 = !DILocation(line: 1181, column: 31, scope: !14015)
!14055 = !DILocation(line: 1181, column: 45, scope: !14015)
!14056 = !DILocation(line: 1181, column: 15, scope: !14015)
!14057 = !DILocation(line: 1181, column: 25, scope: !14015)
!14058 = !DILocation(line: 1189, column: 11, scope: !14038)
!14059 = !DILocation(line: 1189, column: 7, scope: !14038)
!14060 = !DILocation(line: 1189, column: 6, scope: !14015)
!14061 = !DILocation(line: 1190, column: 3, scope: !14036)
!14062 = !DILocation(line: 1190, column: 3, scope: !14045)
!14063 = !DILocation(line: 0, scope: !14045)
!14064 = !DILocation(line: 1190, column: 3, scope: !14046)
!14065 = !DILocation(line: 1193, column: 2, scope: !14037)
!14066 = !DILocation(line: 1191, column: 42, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14046, file: !2236, line: 1190, column: 54)
!14068 = !DILocation(line: 1191, column: 12, scope: !14067)
!14069 = !DILocation(line: 1191, column: 22, scope: !14067)
!14070 = distinct !{!14070, !14061, !14071}
!14071 = !DILocation(line: 1192, column: 3, scope: !14036)
!14072 = !DILocation(line: 1195, column: 17, scope: !14015)
!14073 = !DILocation(line: 1195, column: 37, scope: !14015)
!14074 = !DILocation(line: 1195, column: 2, scope: !14015)
!14075 = !DILocation(line: 1196, column: 1, scope: !14015)
!14076 = !DISubprogram(name: "z_rb_foreach_next", scope: !742, file: !742, line: 176, type: !14077, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14077 = !DISubroutineType(types: !14078)
!14078 = !{!2163, !14079, !14080}
!14079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14023, size: 32)
!14080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14039, size: 32)
!14081 = !DISubprogram(name: "rb_insert", scope: !742, file: !742, line: 105, type: !14082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14082 = !DISubroutineType(types: !14083)
!14083 = !{null, !14079, !2163}
!14084 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2236, file: !2236, line: 1198, type: !14016, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14085)
!14085 = !{!14086, !14087}
!14086 = !DILocalVariable(name: "pq", arg: 1, scope: !14084, file: !2236, line: 1198, type: !14018)
!14087 = !DILocalVariable(name: "thread", arg: 2, scope: !14084, file: !2236, line: 1198, type: !2134)
!14088 = !DILocation(line: 0, scope: !14084)
!14089 = !DILocation(line: 1200, column: 2, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14091, file: !2236, line: 1200, column: 2)
!14091 = distinct !DILexicalBlock(scope: !14084, file: !2236, line: 1200, column: 2)
!14092 = !DILocation(line: 1200, column: 2, scope: !14091)
!14093 = !DILocation(line: 1200, column: 2, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14090, file: !2236, line: 1200, column: 2)
!14095 = !DILocation(line: 1202, column: 17, scope: !14084)
!14096 = !DILocation(line: 1202, column: 37, scope: !14084)
!14097 = !DILocation(line: 1202, column: 2, scope: !14084)
!14098 = !DILocation(line: 1204, column: 16, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14084, file: !2236, line: 1204, column: 6)
!14100 = !DILocation(line: 1204, column: 7, scope: !14099)
!14101 = !DILocation(line: 1204, column: 6, scope: !14084)
!14102 = !DILocation(line: 1205, column: 7, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14099, file: !2236, line: 1204, column: 22)
!14104 = !DILocation(line: 1205, column: 22, scope: !14103)
!14105 = !DILocation(line: 1206, column: 2, scope: !14103)
!14106 = !DILocation(line: 1207, column: 1, scope: !14084)
!14107 = !DISubprogram(name: "rb_remove", scope: !742, file: !742, line: 110, type: !14082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14108 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2236, file: !2236, line: 1209, type: !14109, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14111)
!14109 = !DISubroutineType(types: !14110)
!14110 = !{!2134, !14018}
!14111 = !{!14112, !14113, !14114}
!14112 = !DILocalVariable(name: "pq", arg: 1, scope: !14108, file: !2236, line: 1209, type: !14018)
!14113 = !DILocalVariable(name: "thread", scope: !14108, file: !2236, line: 1211, type: !2134)
!14114 = !DILocalVariable(name: "n", scope: !14108, file: !2236, line: 1212, type: !2163)
!14115 = !DILocation(line: 0, scope: !14108)
!14116 = !DILocation(line: 1212, column: 37, scope: !14108)
!14117 = !DILocation(line: 1212, column: 21, scope: !14108)
!14118 = !DILocation(line: 1217, column: 2, scope: !14108)
!14119 = distinct !DISubprogram(name: "rb_get_min", scope: !742, file: !742, line: 115, type: !14120, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14122)
!14120 = !DISubroutineType(types: !14121)
!14121 = !{!2163, !14079}
!14122 = !{!14123}
!14123 = !DILocalVariable(name: "tree", arg: 1, scope: !14119, file: !742, line: 115, type: !14079)
!14124 = !DILocation(line: 0, scope: !14119)
!14125 = !DILocation(line: 117, column: 9, scope: !14119)
!14126 = !DILocation(line: 117, column: 2, scope: !14119)
!14127 = !DISubprogram(name: "z_rb_get_minmax", scope: !742, file: !742, line: 100, type: !14128, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14128 = !DISubroutineType(types: !14129)
!14129 = !{!2163, !14079, !195}
!14130 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2236, file: !2236, line: 1246, type: !14131, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14139)
!14131 = !DISubroutineType(types: !14132)
!14132 = !{!2134, !14133}
!14133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14134, size: 32)
!14134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14020, line: 53, size: 2080, elements: !14135)
!14135 = !{!14136, !14138}
!14136 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14134, file: !14020, line: 54, baseType: !14137, size: 2048)
!14137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2170, size: 2048, elements: !584)
!14138 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14134, file: !14020, line: 55, baseType: !32, size: 32, offset: 2048)
!14139 = !{!14140, !14141, !14142, !14143}
!14140 = !DILocalVariable(name: "pq", arg: 1, scope: !14130, file: !2236, line: 1246, type: !14133)
!14141 = !DILocalVariable(name: "thread", scope: !14130, file: !2236, line: 1252, type: !2134)
!14142 = !DILocalVariable(name: "l", scope: !14130, file: !2236, line: 1253, type: !12700)
!14143 = !DILocalVariable(name: "n", scope: !14130, file: !2236, line: 1254, type: !2232)
!14144 = !DILocation(line: 0, scope: !14130)
!14145 = !DILocation(line: 1248, column: 11, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14130, file: !2236, line: 1248, column: 6)
!14147 = !DILocation(line: 1248, column: 7, scope: !14146)
!14148 = !DILocation(line: 1248, column: 6, scope: !14130)
!14149 = !DILocation(line: 1253, column: 31, scope: !14130)
!14150 = !{i32 0, i32 33}
!14151 = !DILocation(line: 1253, column: 20, scope: !14130)
!14152 = !DILocation(line: 1254, column: 19, scope: !14130)
!14153 = !DILocation(line: 1260, column: 1, scope: !14130)
!14154 = distinct !DISubprogram(name: "z_unpend_all", scope: !2236, file: !2236, line: 1262, type: !14155, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14157)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!107, !2165}
!14157 = !{!14158, !14159, !14160}
!14158 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14154, file: !2236, line: 1262, type: !2165)
!14159 = !DILocalVariable(name: "need_sched", scope: !14154, file: !2236, line: 1264, type: !107)
!14160 = !DILocalVariable(name: "thread", scope: !14154, file: !2236, line: 1265, type: !2134)
!14161 = !DILocation(line: 0, scope: !14154)
!14162 = !DILocation(line: 1267, column: 19, scope: !14154)
!14163 = !DILocation(line: 1267, column: 41, scope: !14154)
!14164 = !DILocation(line: 1267, column: 2, scope: !14154)
!14165 = !DILocation(line: 1268, column: 3, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14154, file: !2236, line: 1267, column: 50)
!14167 = !DILocation(line: 1269, column: 3, scope: !14166)
!14168 = distinct !{!14168, !14164, !14169}
!14169 = !DILocation(line: 1271, column: 2, scope: !14154)
!14170 = !DILocation(line: 1273, column: 2, scope: !14154)
!14171 = distinct !DISubprogram(name: "z_waitq_head", scope: !12011, file: !12011, line: 52, type: !13701, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14172)
!14172 = !{!14173}
!14173 = !DILocalVariable(name: "w", arg: 1, scope: !14171, file: !12011, line: 52, type: !2165)
!14174 = !DILocation(line: 0, scope: !14171)
!14175 = !DILocation(line: 54, column: 52, scope: !14171)
!14176 = !DILocation(line: 54, column: 28, scope: !14171)
!14177 = !DILocation(line: 54, column: 9, scope: !14171)
!14178 = !DILocation(line: 54, column: 2, scope: !14171)
!14179 = distinct !DISubprogram(name: "init_ready_q", scope: !2236, file: !2236, line: 1276, type: !14180, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14187)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{null, !14182}
!14182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14183, size: 32)
!14183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !752, line: 83, size: 96, elements: !14184)
!14184 = !{!14185, !14186}
!14185 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14183, file: !752, line: 86, baseType: !2134, size: 32)
!14186 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14183, file: !752, line: 90, baseType: !2170, size: 64, offset: 32)
!14187 = !{!14188}
!14188 = !DILocalVariable(name: "rq", arg: 1, scope: !14179, file: !2236, line: 1276, type: !14182)
!14189 = !DILocation(line: 0, scope: !14179)
!14190 = !DILocation(line: 1289, column: 22, scope: !14179)
!14191 = !DILocation(line: 1289, column: 2, scope: !14179)
!14192 = !DILocation(line: 1291, column: 1, scope: !14179)
!14193 = distinct !DISubprogram(name: "sys_dlist_init", scope: !726, file: !726, line: 197, type: !14194, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14196)
!14194 = !DISubroutineType(types: !14195)
!14195 = !{null, !12700}
!14196 = !{!14197}
!14197 = !DILocalVariable(name: "list", arg: 1, scope: !14193, file: !726, line: 197, type: !12700)
!14198 = !DILocation(line: 0, scope: !14193)
!14199 = !DILocation(line: 199, column: 8, scope: !14193)
!14200 = !DILocation(line: 199, column: 13, scope: !14193)
!14201 = !DILocation(line: 200, column: 8, scope: !14193)
!14202 = !DILocation(line: 200, column: 13, scope: !14193)
!14203 = !DILocation(line: 201, column: 1, scope: !14193)
!14204 = distinct !DISubprogram(name: "z_sched_init", scope: !2236, file: !2236, line: 1293, type: !2909, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14205 = !DILocation(line: 1302, column: 2, scope: !14204)
!14206 = !DILocation(line: 1306, column: 2, scope: !14204)
!14207 = !DILocation(line: 1309, column: 1, scope: !14204)
!14208 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2236, file: !2236, line: 1311, type: !14209, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14212)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{!107, !14211}
!14211 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !2134)
!14212 = !{!14213}
!14213 = !DILocalVariable(name: "thread", arg: 1, scope: !14208, file: !2236, line: 1311, type: !14211)
!14214 = !DILocation(line: 0, scope: !14208)
!14215 = !DILocation(line: 1313, column: 22, scope: !14208)
!14216 = !DILocation(line: 1313, column: 9, scope: !14208)
!14217 = !DILocation(line: 1313, column: 2, scope: !14208)
!14218 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2236, file: !2236, line: 1325, type: !14219, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14221)
!14219 = !DISubroutineType(types: !14220)
!14220 = !{null, !14211, !107}
!14221 = !{!14222, !14223, !14224}
!14222 = !DILocalVariable(name: "thread", arg: 1, scope: !14218, file: !2236, line: 1325, type: !14211)
!14223 = !DILocalVariable(name: "prio", arg: 2, scope: !14218, file: !2236, line: 1325, type: !107)
!14224 = !DILocalVariable(name: "th", scope: !14218, file: !2236, line: 1334, type: !2134)
!14225 = !DILocation(line: 0, scope: !14218)
!14226 = !DILocation(line: 1331, column: 2, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14228, file: !2236, line: 1331, column: 2)
!14228 = distinct !DILexicalBlock(scope: !14229, file: !2236, line: 1331, column: 2)
!14229 = distinct !DILexicalBlock(scope: !14218, file: !2236, line: 1331, column: 2)
!14230 = !DILocation(line: 1331, column: 2, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14227, file: !2236, line: 1331, column: 2)
!14232 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14234)
!14234 = distinct !DILocation(line: 1332, column: 2, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !2236, line: 1332, column: 2)
!14236 = distinct !DILexicalBlock(scope: !14218, file: !2236, line: 1332, column: 2)
!14237 = !DILocation(line: 0, scope: !13201, inlinedAt: !14233)
!14238 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14234)
!14239 = !DILocation(line: 1332, column: 2, scope: !14236)
!14240 = !DILocation(line: 1332, column: 2, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14235, file: !2236, line: 1332, column: 2)
!14242 = !DILocation(line: 1336, column: 2, scope: !14218)
!14243 = !DILocation(line: 1337, column: 1, scope: !14218)
!14244 = distinct !DISubprogram(name: "k_can_yield", scope: !2236, file: !2236, line: 1384, type: !7000, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14245 = !DILocation(line: 1386, column: 11, scope: !14244)
!14246 = !DILocation(line: 1386, column: 29, scope: !14244)
!14247 = !DILocation(line: 1386, column: 32, scope: !14244)
!14248 = !DILocation(line: 1386, column: 46, scope: !14244)
!14249 = !DILocation(line: 1387, column: 28, scope: !14244)
!14250 = !DILocation(line: 1387, column: 4, scope: !14244)
!14251 = !DILocation(line: 1386, column: 2, scope: !14244)
!14252 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !804, file: !804, line: 989, type: !7000, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14253 = !DILocation(line: 993, column: 10, scope: !14252)
!14254 = !DILocation(line: 993, column: 2, scope: !14252)
!14255 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2236, file: !2236, line: 1390, type: !2909, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14256)
!14256 = !{!14257}
!14257 = !DILocalVariable(name: "key", scope: !14255, file: !2236, line: 1396, type: !12466)
!14258 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14259)
!14259 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14260)
!14260 = distinct !DILocation(line: 1392, column: 2, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14262, file: !2236, line: 1392, column: 2)
!14262 = distinct !DILexicalBlock(scope: !14255, file: !2236, line: 1392, column: 2)
!14263 = !DILocation(line: 0, scope: !13201, inlinedAt: !14259)
!14264 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14260)
!14265 = !DILocation(line: 1392, column: 2, scope: !14262)
!14266 = !DILocation(line: 1392, column: 2, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14261, file: !2236, line: 1392, column: 2)
!14268 = !DILocation(line: 0, scope: !12474, inlinedAt: !14269)
!14269 = distinct !DILocation(line: 1396, column: 25, scope: !14255)
!14270 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !14271)
!14271 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !14269)
!14272 = !DILocation(line: 0, scope: !12483, inlinedAt: !14271)
!14273 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !14269)
!14274 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14269)
!14275 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !14269)
!14276 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !14269)
!14277 = !DILocation(line: 0, scope: !14255)
!14278 = !DILocation(line: 1400, column: 18, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !2236, line: 1399, column: 36)
!14280 = distinct !DILexicalBlock(scope: !14255, file: !2236, line: 1398, column: 6)
!14281 = !DILocation(line: 0, scope: !12666, inlinedAt: !14282)
!14282 = distinct !DILocation(line: 1400, column: 3, scope: !14279)
!14283 = !DILocation(line: 266, column: 15, scope: !12666, inlinedAt: !14282)
!14284 = !DILocation(line: 266, column: 28, scope: !12666, inlinedAt: !14282)
!14285 = !DILocation(line: 0, scope: !12674, inlinedAt: !14286)
!14286 = distinct !DILocation(line: 268, column: 3, scope: !12678, inlinedAt: !14282)
!14287 = !DILocation(line: 234, column: 2, scope: !12674, inlinedAt: !14286)
!14288 = !DILocation(line: 1402, column: 15, scope: !14255)
!14289 = !DILocation(line: 0, scope: !12683, inlinedAt: !14290)
!14290 = distinct !DILocation(line: 1402, column: 2, scope: !14255)
!14291 = !DILocation(line: 252, column: 15, scope: !12683, inlinedAt: !14290)
!14292 = !DILocation(line: 252, column: 28, scope: !12683, inlinedAt: !14290)
!14293 = !DILocation(line: 0, scope: !12690, inlinedAt: !14294)
!14294 = distinct !DILocation(line: 254, column: 3, scope: !12694, inlinedAt: !14290)
!14295 = !DILocation(line: 0, scope: !12697, inlinedAt: !14296)
!14296 = distinct !DILocation(line: 229, column: 2, scope: !12690, inlinedAt: !14294)
!14297 = !DILocation(line: 186, column: 2, scope: !12707, inlinedAt: !14296)
!14298 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !14296)
!14299 = !DILocation(line: 186, column: 2, scope: !12711, inlinedAt: !14296)
!14300 = !DILocation(line: 188, column: 2, scope: !12713, inlinedAt: !14296)
!14301 = !DILocation(line: 188, column: 2, scope: !12715, inlinedAt: !14296)
!14302 = !DILocation(line: 0, scope: !12713, inlinedAt: !14296)
!14303 = !DILocation(line: 189, column: 7, scope: !12718, inlinedAt: !14296)
!14304 = !DILocation(line: 189, column: 35, scope: !12718, inlinedAt: !14296)
!14305 = !DILocation(line: 189, column: 7, scope: !12719, inlinedAt: !14296)
!14306 = !DILocation(line: 191, column: 21, scope: !12723, inlinedAt: !14296)
!14307 = !DILocation(line: 190, column: 4, scope: !12723, inlinedAt: !14296)
!14308 = !DILocation(line: 192, column: 4, scope: !12723, inlinedAt: !14296)
!14309 = distinct !{!14309, !14300, !14310}
!14310 = !DILocation(line: 194, column: 2, scope: !12713, inlinedAt: !14296)
!14311 = !DILocation(line: 196, column: 37, scope: !12697, inlinedAt: !14296)
!14312 = !DILocation(line: 196, column: 2, scope: !12697, inlinedAt: !14296)
!14313 = !DILocation(line: 197, column: 1, scope: !12697, inlinedAt: !14296)
!14314 = !DILocation(line: 1403, column: 2, scope: !14255)
!14315 = !DILocation(line: 0, scope: !13152, inlinedAt: !14316)
!14316 = distinct !DILocation(line: 1404, column: 2, scope: !14255)
!14317 = !DILocation(line: 0, scope: !13161, inlinedAt: !14318)
!14318 = distinct !DILocation(line: 195, column: 2, scope: !13152, inlinedAt: !14316)
!14319 = !DILocation(line: 225, column: 2, scope: !13168, inlinedAt: !14318)
!14320 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14318)
!14321 = !DILocation(line: 225, column: 2, scope: !13172, inlinedAt: !14318)
!14322 = !DILocation(line: 196, column: 9, scope: !13152, inlinedAt: !14316)
!14323 = !DILocation(line: 1405, column: 1, scope: !14255)
!14324 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2236, file: !2236, line: 1459, type: !14325, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14327)
!14325 = !DISubroutineType(types: !14326)
!14326 = !{!1149, !13362}
!14327 = !{!14328, !14329, !14330}
!14328 = !DILocalVariable(name: "timeout", arg: 1, scope: !14324, file: !2236, line: 1459, type: !13362)
!14329 = !DILocalVariable(name: "ticks", scope: !14324, file: !2236, line: 1461, type: !692)
!14330 = !DILocalVariable(name: "ret", scope: !14324, file: !2236, line: 1480, type: !1149)
!14331 = !DILocation(line: 0, scope: !14324)
!14332 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14333)
!14333 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14334)
!14334 = distinct !DILocation(line: 1463, column: 2, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14336, file: !2236, line: 1463, column: 2)
!14336 = distinct !DILexicalBlock(scope: !14324, file: !2236, line: 1463, column: 2)
!14337 = !DILocation(line: 0, scope: !13201, inlinedAt: !14333)
!14338 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14334)
!14339 = !DILocation(line: 1463, column: 2, scope: !14336)
!14340 = !DILocation(line: 1463, column: 2, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14335, file: !2236, line: 1463, column: 2)
!14342 = !DILocation(line: 1468, column: 6, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14324, file: !2236, line: 1468, column: 6)
!14344 = !DILocation(line: 1468, column: 6, scope: !14324)
!14345 = !DILocation(line: 1469, column: 20, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14343, file: !2236, line: 1468, column: 40)
!14347 = !DILocation(line: 1469, column: 3, scope: !14346)
!14348 = !DILocation(line: 1473, column: 3, scope: !14346)
!14349 = !DILocation(line: 1478, column: 10, scope: !14324)
!14350 = !DILocation(line: 1480, column: 16, scope: !14324)
!14351 = !DILocation(line: 1485, column: 1, scope: !14324)
!14352 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4224, file: !4224, line: 310, type: !14353, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14355)
!14353 = !DISubroutineType(types: !14354)
!14354 = !{null, !14211}
!14355 = !{!14356}
!14356 = !DILocalVariable(name: "thread", arg: 1, scope: !14352, file: !4224, line: 310, type: !14211)
!14357 = !DILocation(line: 0, scope: !14352)
!14358 = !DILocation(line: 319, column: 2, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14352, file: !4224, line: 319, column: 2)
!14360 = !{i64 2151089087}
!14361 = !DILocation(line: 320, column: 2, scope: !14352)
!14362 = !DILocation(line: 321, column: 1, scope: !14352)
!14363 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2236, file: !2236, line: 1415, type: !14364, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14366)
!14364 = !DISubroutineType(types: !14365)
!14365 = !{!1149, !692}
!14366 = !{!14367, !14368, !14369, !14370}
!14367 = !DILocalVariable(name: "ticks", arg: 1, scope: !14363, file: !2236, line: 1415, type: !692)
!14368 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14363, file: !2236, line: 1418, type: !152)
!14369 = !DILocalVariable(name: "timeout", scope: !14363, file: !2236, line: 1430, type: !13362)
!14370 = !DILocalVariable(name: "key", scope: !14363, file: !2236, line: 1437, type: !12466)
!14371 = !DILocation(line: 0, scope: !14363)
!14372 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14373)
!14373 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 1420, column: 2, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14376, file: !2236, line: 1420, column: 2)
!14376 = distinct !DILexicalBlock(scope: !14363, file: !2236, line: 1420, column: 2)
!14377 = !DILocation(line: 0, scope: !13201, inlinedAt: !14373)
!14378 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14374)
!14379 = !DILocation(line: 1420, column: 2, scope: !14376)
!14380 = !DILocation(line: 1420, column: 2, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14375, file: !2236, line: 1420, column: 2)
!14382 = !DILocation(line: 1425, column: 12, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14363, file: !2236, line: 1425, column: 6)
!14384 = !DILocation(line: 1425, column: 6, scope: !14363)
!14385 = !DILocation(line: 1426, column: 3, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14383, file: !2236, line: 1425, column: 18)
!14387 = !DILocation(line: 1427, column: 3, scope: !14386)
!14388 = !DILocation(line: 1431, column: 24, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14363, file: !2236, line: 1431, column: 6)
!14390 = !DILocation(line: 1431, column: 6, scope: !14363)
!14391 = !DILocation(line: 1432, column: 35, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14389, file: !2236, line: 1431, column: 30)
!14393 = !DILocation(line: 1432, column: 27, scope: !14392)
!14394 = !DILocation(line: 1433, column: 2, scope: !14392)
!14395 = !DILocation(line: 1434, column: 27, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14389, file: !2236, line: 1433, column: 9)
!14397 = !DILocation(line: 0, scope: !14389)
!14398 = !DILocation(line: 0, scope: !12474, inlinedAt: !14399)
!14399 = distinct !DILocation(line: 1437, column: 25, scope: !14363)
!14400 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !14401)
!14401 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !14399)
!14402 = !DILocation(line: 0, scope: !12483, inlinedAt: !14401)
!14403 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !14399)
!14404 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14399)
!14405 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !14399)
!14406 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !14399)
!14407 = !DILocation(line: 1440, column: 20, scope: !14363)
!14408 = !DILocation(line: 1440, column: 18, scope: !14363)
!14409 = !DILocation(line: 1442, column: 2, scope: !14363)
!14410 = !DILocation(line: 1443, column: 23, scope: !14363)
!14411 = !DILocation(line: 1443, column: 2, scope: !14363)
!14412 = !DILocation(line: 1444, column: 29, scope: !14363)
!14413 = !DILocation(line: 1444, column: 2, scope: !14363)
!14414 = !DILocation(line: 0, scope: !13152, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 1446, column: 8, scope: !14363)
!14416 = !DILocation(line: 0, scope: !13161, inlinedAt: !14417)
!14417 = distinct !DILocation(line: 195, column: 2, scope: !13152, inlinedAt: !14415)
!14418 = !DILocation(line: 225, column: 2, scope: !13168, inlinedAt: !14417)
!14419 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14417)
!14420 = !DILocation(line: 225, column: 2, scope: !13172, inlinedAt: !14417)
!14421 = !DILocation(line: 196, column: 9, scope: !13152, inlinedAt: !14415)
!14422 = !DILocation(line: 1448, column: 2, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14424, file: !2236, line: 1448, column: 2)
!14424 = distinct !DILexicalBlock(scope: !14363, file: !2236, line: 1448, column: 2)
!14425 = !DILocation(line: 1448, column: 2, scope: !14424)
!14426 = !DILocation(line: 1448, column: 2, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14423, file: !2236, line: 1448, column: 2)
!14428 = !DILocation(line: 1450, column: 10, scope: !14363)
!14429 = !DILocation(line: 1450, column: 45, scope: !14363)
!14430 = !DILocation(line: 1450, column: 43, scope: !14363)
!14431 = !DILocation(line: 1451, column: 6, scope: !14363)
!14432 = !DILocation(line: 1457, column: 1, scope: !14363)
!14433 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8092, file: !8092, line: 1103, type: !12253, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14434)
!14434 = !{!14435}
!14435 = !DILocalVariable(name: "t", arg: 1, scope: !14433, file: !8092, line: 1103, type: !695)
!14436 = !DILocation(line: 0, scope: !14433)
!14437 = !DILocation(line: 0, scope: !12534, inlinedAt: !14438)
!14438 = distinct !DILocation(line: 1106, column: 9, scope: !14433)
!14439 = !DILocation(line: 139, column: 13, scope: !14440, inlinedAt: !14438)
!14440 = distinct !DILexicalBlock(scope: !14441, file: !8092, line: 138, column: 10)
!14441 = distinct !DILexicalBlock(scope: !14442, file: !8092, line: 136, column: 7)
!14442 = distinct !DILexicalBlock(scope: !12555, file: !8092, line: 134, column: 17)
!14443 = !DILocation(line: 1106, column: 2, scope: !14433)
!14444 = distinct !DISubprogram(name: "k_yield", scope: !4224, file: !4224, line: 140, type: !2909, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14445 = !DILocation(line: 148, column: 2, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14444, file: !4224, line: 148, column: 2)
!14447 = !{i64 2151088407}
!14448 = !DILocation(line: 149, column: 2, scope: !14444)
!14449 = !DILocation(line: 150, column: 1, scope: !14444)
!14450 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2236, file: !2236, line: 1495, type: !14451, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14453)
!14451 = !DISubroutineType(types: !14452)
!14452 = !{!1149, !107}
!14453 = !{!14454, !14455}
!14454 = !DILocalVariable(name: "us", arg: 1, scope: !14450, file: !2236, line: 1495, type: !107)
!14455 = !DILocalVariable(name: "ticks", scope: !14450, file: !2236, line: 1497, type: !1149)
!14456 = !DILocation(line: 0, scope: !14450)
!14457 = !DILocation(line: 1501, column: 31, scope: !14450)
!14458 = !DILocation(line: 1501, column: 10, scope: !14450)
!14459 = !DILocation(line: 1502, column: 23, scope: !14450)
!14460 = !DILocation(line: 1502, column: 10, scope: !14450)
!14461 = !DILocation(line: 1506, column: 31, scope: !14450)
!14462 = !DILocation(line: 1506, column: 9, scope: !14450)
!14463 = !DILocation(line: 1506, column: 2, scope: !14450)
!14464 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8092, file: !8092, line: 571, type: !12253, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14465)
!14465 = !{!14466}
!14466 = !DILocalVariable(name: "t", arg: 1, scope: !14464, file: !8092, line: 571, type: !695)
!14467 = !DILocation(line: 0, scope: !14464)
!14468 = !DILocation(line: 0, scope: !12534, inlinedAt: !14469)
!14469 = distinct !DILocation(line: 574, column: 9, scope: !14464)
!14470 = !DILocation(line: 135, column: 5, scope: !14442, inlinedAt: !14469)
!14471 = !DILocation(line: 139, column: 13, scope: !14440, inlinedAt: !14469)
!14472 = !DILocation(line: 574, column: 2, scope: !14464)
!14473 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8092, file: !8092, line: 1187, type: !12253, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14474)
!14474 = !{!14475}
!14475 = !DILocalVariable(name: "t", arg: 1, scope: !14473, file: !8092, line: 1187, type: !695)
!14476 = !DILocation(line: 0, scope: !14473)
!14477 = !DILocation(line: 0, scope: !12534, inlinedAt: !14478)
!14478 = distinct !DILocation(line: 1190, column: 9, scope: !14473)
!14479 = !DILocation(line: 145, column: 13, scope: !14480, inlinedAt: !14478)
!14480 = distinct !DILexicalBlock(scope: !12552, file: !8092, line: 144, column: 10)
!14481 = !DILocation(line: 1190, column: 2, scope: !14473)
!14482 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2236, file: !2236, line: 1517, type: !14353, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14483)
!14483 = !{!14484}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !2236, line: 1517, type: !14211)
!14485 = !DILocation(line: 0, scope: !14482)
!14486 = !DILocation(line: 1521, column: 6, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14482, file: !2236, line: 1521, column: 6)
!14488 = !DILocation(line: 1521, column: 6, scope: !14482)
!14489 = !DILocation(line: 1525, column: 6, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14482, file: !2236, line: 1525, column: 6)
!14491 = !DILocation(line: 1525, column: 37, scope: !14490)
!14492 = !DILocation(line: 1525, column: 6, scope: !14482)
!14493 = !DILocation(line: 1527, column: 20, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14495, file: !2236, line: 1527, column: 7)
!14495 = distinct !DILexicalBlock(scope: !14490, file: !2236, line: 1525, column: 42)
!14496 = !DILocation(line: 1527, column: 33, scope: !14494)
!14497 = !DILocation(line: 1527, column: 7, scope: !14495)
!14498 = !DILocation(line: 1532, column: 2, scope: !14482)
!14499 = !DILocation(line: 1533, column: 2, scope: !14482)
!14500 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14501)
!14501 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14502)
!14502 = distinct !DILocation(line: 1537, column: 7, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14482, file: !2236, line: 1537, column: 6)
!14504 = !DILocation(line: 0, scope: !13201, inlinedAt: !14501)
!14505 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14502)
!14506 = !DILocation(line: 1537, column: 6, scope: !14482)
!14507 = !DILocation(line: 1538, column: 3, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14503, file: !2236, line: 1537, column: 25)
!14509 = !DILocation(line: 1539, column: 2, scope: !14508)
!14510 = !DILocation(line: 1540, column: 1, scope: !14482)
!14511 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11656, file: !11656, line: 101, type: !12615, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14512)
!14512 = !{!14513}
!14513 = !DILocalVariable(name: "thread", arg: 1, scope: !14511, file: !11656, line: 101, type: !2134)
!14514 = !DILocation(line: 0, scope: !14511)
!14515 = !DILocation(line: 103, column: 23, scope: !14511)
!14516 = !DILocation(line: 103, column: 36, scope: !14511)
!14517 = !DILocation(line: 103, column: 55, scope: !14511)
!14518 = !DILocation(line: 103, column: 2, scope: !14511)
!14519 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2236, file: !2236, line: 1567, type: !14520, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!14211}
!14522 = !{!14523}
!14523 = !DILocalVariable(name: "ret", scope: !14519, file: !2236, line: 1577, type: !14211)
!14524 = !DILocation(line: 1577, column: 30, scope: !14519)
!14525 = !DILocation(line: 0, scope: !14519)
!14526 = !DILocation(line: 1582, column: 2, scope: !14519)
!14527 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2236, file: !2236, line: 1593, type: !14528, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{!107}
!14530 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14531)
!14531 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14532)
!14532 = distinct !DILocation(line: 1595, column: 10, scope: !14527)
!14533 = !DILocation(line: 0, scope: !13201, inlinedAt: !14531)
!14534 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14532)
!14535 = !DILocation(line: 1595, column: 27, scope: !14527)
!14536 = !DILocation(line: 1595, column: 41, scope: !14527)
!14537 = !DILocation(line: 1595, column: 30, scope: !14527)
!14538 = !DILocation(line: 1595, column: 2, scope: !14527)
!14539 = distinct !DISubprogram(name: "z_thread_abort", scope: !2236, file: !2236, line: 1725, type: !12432, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14540)
!14540 = !{!14541, !14542}
!14541 = !DILocalVariable(name: "thread", arg: 1, scope: !14539, file: !2236, line: 1725, type: !2134)
!14542 = !DILocalVariable(name: "key", scope: !14539, file: !2236, line: 1727, type: !12466)
!14543 = !DILocation(line: 0, scope: !14539)
!14544 = !DILocation(line: 0, scope: !12474, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 1727, column: 25, scope: !14539)
!14546 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !14545)
!14548 = !DILocation(line: 0, scope: !12483, inlinedAt: !14547)
!14549 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !14545)
!14550 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14545)
!14551 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !14545)
!14552 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !14545)
!14553 = !DILocation(line: 1729, column: 20, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14539, file: !2236, line: 1729, column: 6)
!14555 = !DILocation(line: 1729, column: 33, scope: !14554)
!14556 = !DILocation(line: 1729, column: 48, scope: !14554)
!14557 = !DILocation(line: 1729, column: 6, scope: !14539)
!14558 = !DILocation(line: 0, scope: !12508, inlinedAt: !14559)
!14559 = distinct !DILocation(line: 1730, column: 3, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14554, file: !2236, line: 1729, column: 54)
!14561 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !14559)
!14562 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14559)
!14563 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !14559)
!14564 = !DILocation(line: 0, scope: !12522, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !14559)
!14566 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !14565)
!14567 = !DILocation(line: 1731, column: 3, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !2236, line: 1731, column: 3)
!14569 = distinct !DILexicalBlock(scope: !14570, file: !2236, line: 1731, column: 3)
!14570 = distinct !DILexicalBlock(scope: !14560, file: !2236, line: 1731, column: 3)
!14571 = !DILocation(line: 1736, column: 20, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14539, file: !2236, line: 1736, column: 6)
!14573 = !DILocation(line: 1736, column: 33, scope: !14572)
!14574 = !DILocation(line: 1736, column: 49, scope: !14572)
!14575 = !DILocation(line: 1736, column: 6, scope: !14539)
!14576 = !DILocation(line: 0, scope: !12508, inlinedAt: !14577)
!14577 = distinct !DILocation(line: 1737, column: 3, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14572, file: !2236, line: 1736, column: 56)
!14579 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !14577)
!14580 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14577)
!14581 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !14577)
!14582 = !DILocation(line: 0, scope: !12522, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !14577)
!14584 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !14583)
!14585 = !DILocation(line: 1738, column: 3, scope: !14578)
!14586 = !DILocation(line: 1775, column: 2, scope: !14539)
!14587 = !DILocation(line: 1776, column: 16, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14539, file: !2236, line: 1776, column: 6)
!14589 = !DILocation(line: 1776, column: 13, scope: !14588)
!14590 = !DILocation(line: 1776, column: 25, scope: !14588)
!14591 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14593)
!14593 = distinct !DILocation(line: 1776, column: 29, scope: !14588)
!14594 = !DILocation(line: 0, scope: !13201, inlinedAt: !14592)
!14595 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14593)
!14596 = !DILocation(line: 1776, column: 6, scope: !14539)
!14597 = !DILocation(line: 0, scope: !13152, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 1777, column: 3, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14588, file: !2236, line: 1776, column: 47)
!14600 = !DILocation(line: 0, scope: !13161, inlinedAt: !14601)
!14601 = distinct !DILocation(line: 195, column: 2, scope: !13152, inlinedAt: !14598)
!14602 = !DILocation(line: 225, column: 2, scope: !13168, inlinedAt: !14601)
!14603 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14601)
!14604 = !DILocation(line: 225, column: 2, scope: !13172, inlinedAt: !14601)
!14605 = !DILocation(line: 196, column: 9, scope: !13152, inlinedAt: !14598)
!14606 = !DILocation(line: 1778, column: 3, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14608, file: !2236, line: 1778, column: 3)
!14608 = distinct !DILexicalBlock(scope: !14609, file: !2236, line: 1778, column: 3)
!14609 = distinct !DILexicalBlock(scope: !14599, file: !2236, line: 1778, column: 3)
!14610 = !DILocation(line: 0, scope: !12508, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 1780, column: 2, scope: !14539)
!14612 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !14611)
!14613 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14611)
!14614 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !14611)
!14615 = !DILocation(line: 0, scope: !12522, inlinedAt: !14616)
!14616 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !14611)
!14617 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !14616)
!14618 = !DILocation(line: 1781, column: 1, scope: !14539)
!14619 = distinct !DISubprogram(name: "end_thread", scope: !2236, file: !2236, line: 1690, type: !12432, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14620)
!14620 = !{!14621}
!14621 = !DILocalVariable(name: "thread", arg: 1, scope: !14619, file: !2236, line: 1690, type: !2134)
!14622 = !DILocation(line: 0, scope: !14619)
!14623 = !DILocation(line: 1695, column: 20, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14619, file: !2236, line: 1695, column: 6)
!14625 = !DILocation(line: 1695, column: 33, scope: !14624)
!14626 = !DILocation(line: 1695, column: 49, scope: !14624)
!14627 = !DILocation(line: 1695, column: 6, scope: !14619)
!14628 = !DILocation(line: 1697, column: 29, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14624, file: !2236, line: 1695, column: 56)
!14630 = !DILocation(line: 1698, column: 7, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14629, file: !2236, line: 1698, column: 7)
!14632 = !DILocation(line: 1698, column: 7, scope: !14629)
!14633 = !DILocation(line: 0, scope: !12666, inlinedAt: !14634)
!14634 = distinct !DILocation(line: 1699, column: 4, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14631, file: !2236, line: 1698, column: 35)
!14636 = !DILocation(line: 266, column: 28, scope: !12666, inlinedAt: !14634)
!14637 = !DILocation(line: 0, scope: !12674, inlinedAt: !14638)
!14638 = distinct !DILocation(line: 268, column: 3, scope: !12678, inlinedAt: !14634)
!14639 = !DILocation(line: 234, column: 2, scope: !12674, inlinedAt: !14638)
!14640 = !DILocation(line: 1700, column: 3, scope: !14635)
!14641 = !DILocation(line: 1701, column: 20, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14629, file: !2236, line: 1701, column: 7)
!14643 = !DILocation(line: 1701, column: 30, scope: !14642)
!14644 = !DILocation(line: 1701, column: 7, scope: !14629)
!14645 = !DILocation(line: 1702, column: 4, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14642, file: !2236, line: 1701, column: 39)
!14647 = !DILocation(line: 1703, column: 3, scope: !14646)
!14648 = !DILocation(line: 1704, column: 9, scope: !14629)
!14649 = !DILocation(line: 1705, column: 23, scope: !14629)
!14650 = !DILocation(line: 1705, column: 3, scope: !14629)
!14651 = !DILocation(line: 1706, column: 3, scope: !14629)
!14652 = !DILocation(line: 1722, column: 2, scope: !14629)
!14653 = !DILocation(line: 1723, column: 1, scope: !14619)
!14654 = distinct !DISubprogram(name: "unpend_all", scope: !2236, file: !2236, line: 1674, type: !14655, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14657)
!14655 = !DISubroutineType(types: !14656)
!14656 = !{null, !2165}
!14657 = !{!14658, !14659}
!14658 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14654, file: !2236, line: 1674, type: !2165)
!14659 = !DILocalVariable(name: "thread", scope: !14654, file: !2236, line: 1676, type: !2134)
!14660 = !DILocation(line: 0, scope: !14654)
!14661 = !DILocation(line: 1678, column: 19, scope: !14654)
!14662 = !DILocation(line: 1678, column: 41, scope: !14654)
!14663 = !DILocation(line: 1678, column: 2, scope: !14654)
!14664 = !DILocation(line: 1679, column: 3, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14654, file: !2236, line: 1678, column: 50)
!14666 = !DILocation(line: 1680, column: 9, scope: !14665)
!14667 = !DILocalVariable(name: "thread", arg: 1, scope: !14668, file: !11676, line: 65, type: !2134)
!14668 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11676, file: !11676, line: 65, type: !14669, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14671)
!14669 = !DISubroutineType(types: !14670)
!14670 = !{null, !2134, !32}
!14671 = !{!14667, !14672}
!14672 = !DILocalVariable(name: "value", arg: 2, scope: !14668, file: !11676, line: 65, type: !32)
!14673 = !DILocation(line: 0, scope: !14668, inlinedAt: !14674)
!14674 = distinct !DILocation(line: 1681, column: 3, scope: !14665)
!14675 = !DILocation(line: 67, column: 15, scope: !14668, inlinedAt: !14674)
!14676 = !DILocation(line: 67, column: 33, scope: !14668, inlinedAt: !14674)
!14677 = !DILocation(line: 1682, column: 3, scope: !14665)
!14678 = distinct !{!14678, !14663, !14679}
!14679 = !DILocation(line: 1683, column: 2, scope: !14654)
!14680 = !DILocation(line: 1684, column: 1, scope: !14654)
!14681 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2236, file: !2236, line: 1794, type: !14682, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14684)
!14682 = !DISubroutineType(types: !14683)
!14683 = !{!107, !2134, !13362}
!14684 = !{!14685, !14686, !14687, !14688}
!14685 = !DILocalVariable(name: "thread", arg: 1, scope: !14681, file: !2236, line: 1794, type: !2134)
!14686 = !DILocalVariable(name: "timeout", arg: 2, scope: !14681, file: !2236, line: 1794, type: !13362)
!14687 = !DILocalVariable(name: "key", scope: !14681, file: !2236, line: 1796, type: !12466)
!14688 = !DILocalVariable(name: "ret", scope: !14681, file: !2236, line: 1797, type: !107)
!14689 = !DILocation(line: 0, scope: !14681)
!14690 = !DILocation(line: 0, scope: !12474, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 1796, column: 25, scope: !14681)
!14692 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !14691)
!14694 = !DILocation(line: 0, scope: !12483, inlinedAt: !14693)
!14695 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !14691)
!14696 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14691)
!14697 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !14691)
!14698 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !14691)
!14699 = !DILocation(line: 1801, column: 20, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14681, file: !2236, line: 1801, column: 6)
!14701 = !DILocation(line: 1801, column: 33, scope: !14700)
!14702 = !DILocation(line: 1801, column: 49, scope: !14700)
!14703 = !DILocation(line: 1801, column: 6, scope: !14681)
!14704 = !DILocation(line: 1803, column: 13, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14700, file: !2236, line: 1803, column: 13)
!14706 = !DILocation(line: 1803, column: 13, scope: !14700)
!14707 = !DILocation(line: 1805, column: 24, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14705, file: !2236, line: 1805, column: 13)
!14709 = !DILocation(line: 1805, column: 21, scope: !14708)
!14710 = !DILocation(line: 1805, column: 34, scope: !14708)
!14711 = !DILocation(line: 1806, column: 20, scope: !14708)
!14712 = !DILocation(line: 1806, column: 44, scope: !14708)
!14713 = !DILocation(line: 1806, column: 30, scope: !14708)
!14714 = !DILocation(line: 1805, column: 13, scope: !14705)
!14715 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !14717)
!14717 = distinct !DILocation(line: 1809, column: 3, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !2236, line: 1809, column: 3)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !2236, line: 1809, column: 3)
!14720 = distinct !DILexicalBlock(scope: !14708, file: !2236, line: 1808, column: 9)
!14721 = !DILocation(line: 0, scope: !13201, inlinedAt: !14716)
!14722 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !14717)
!14723 = !DILocation(line: 1809, column: 3, scope: !14719)
!14724 = !DILocation(line: 1809, column: 3, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14718, file: !2236, line: 1809, column: 3)
!14726 = !DILocation(line: 1810, column: 23, scope: !14720)
!14727 = !DILocation(line: 1810, column: 42, scope: !14720)
!14728 = !DILocation(line: 1810, column: 3, scope: !14720)
!14729 = !DILocation(line: 1811, column: 22, scope: !14720)
!14730 = !DILocation(line: 1811, column: 3, scope: !14720)
!14731 = !DILocation(line: 0, scope: !13152, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 1814, column: 9, scope: !14720)
!14733 = !DILocation(line: 0, scope: !13161, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 195, column: 2, scope: !13152, inlinedAt: !14732)
!14735 = !DILocation(line: 225, column: 2, scope: !13168, inlinedAt: !14734)
!14736 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14734)
!14737 = !DILocation(line: 225, column: 2, scope: !13172, inlinedAt: !14734)
!14738 = !DILocation(line: 196, column: 9, scope: !13152, inlinedAt: !14732)
!14739 = !DILocation(line: 1817, column: 3, scope: !14720)
!14740 = !DILocation(line: 0, scope: !14700)
!14741 = !DILocation(line: 0, scope: !12508, inlinedAt: !14742)
!14742 = distinct !DILocation(line: 1822, column: 2, scope: !14681)
!14743 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !14742)
!14744 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14742)
!14745 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !14742)
!14746 = !DILocation(line: 0, scope: !12522, inlinedAt: !14747)
!14747 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !14742)
!14748 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !14747)
!14749 = !DILocation(line: 1823, column: 2, scope: !14681)
!14750 = !DILocation(line: 1824, column: 1, scope: !14681)
!14751 = distinct !DISubprogram(name: "z_sched_wake", scope: !2236, file: !2236, line: 1882, type: !14752, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14754)
!14752 = !DISubroutineType(types: !14753)
!14753 = !{!145, !2165, !107, !106}
!14754 = !{!14755, !14756, !14757, !14758, !14759, !14760, !14762}
!14755 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14751, file: !2236, line: 1882, type: !2165)
!14756 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14751, file: !2236, line: 1882, type: !107)
!14757 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14751, file: !2236, line: 1882, type: !106)
!14758 = !DILocalVariable(name: "thread", scope: !14751, file: !2236, line: 1884, type: !2134)
!14759 = !DILocalVariable(name: "ret", scope: !14751, file: !2236, line: 1885, type: !145)
!14760 = !DILocalVariable(name: "__i", scope: !14761, file: !2236, line: 1887, type: !12466)
!14761 = distinct !DILexicalBlock(scope: !14751, file: !2236, line: 1887, column: 2)
!14762 = !DILocalVariable(name: "__key", scope: !14761, file: !2236, line: 1887, type: !12466)
!14763 = !DILocation(line: 0, scope: !14751)
!14764 = !DILocation(line: 0, scope: !14761)
!14765 = !DILocation(line: 0, scope: !12474, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 1887, column: 2, scope: !14761)
!14767 = !DILocation(line: 55, column: 2, scope: !12483, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 145, column: 10, scope: !12474, inlinedAt: !14766)
!14769 = !DILocation(line: 0, scope: !12483, inlinedAt: !14768)
!14770 = !DILocation(line: 148, column: 2, scope: !12491, inlinedAt: !14766)
!14771 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14766)
!14772 = !DILocation(line: 148, column: 2, scope: !12495, inlinedAt: !14766)
!14773 = !DILocation(line: 160, column: 2, scope: !12474, inlinedAt: !14766)
!14774 = !DILocation(line: 1888, column: 12, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14776, file: !2236, line: 1887, column: 26)
!14776 = distinct !DILexicalBlock(scope: !14761, file: !2236, line: 1887, column: 2)
!14777 = !DILocation(line: 1890, column: 14, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14775, file: !2236, line: 1890, column: 7)
!14779 = !DILocation(line: 1890, column: 7, scope: !14775)
!14780 = !DILocalVariable(name: "thread", arg: 1, scope: !14781, file: !14782, line: 134, type: !2134)
!14781 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14782, file: !14782, line: 134, type: !14783, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14785)
!14782 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14783 = !DISubroutineType(types: !14784)
!14784 = !{null, !2134, !32, !106}
!14785 = !{!14780, !14786, !14787}
!14786 = !DILocalVariable(name: "value", arg: 2, scope: !14781, file: !14782, line: 135, type: !32)
!14787 = !DILocalVariable(name: "data", arg: 3, scope: !14781, file: !14782, line: 136, type: !106)
!14788 = !DILocation(line: 0, scope: !14781, inlinedAt: !14789)
!14789 = distinct !DILocation(line: 1891, column: 4, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14778, file: !2236, line: 1890, column: 23)
!14791 = !DILocation(line: 0, scope: !14668, inlinedAt: !14792)
!14792 = distinct !DILocation(line: 138, column: 2, scope: !14781, inlinedAt: !14789)
!14793 = !DILocation(line: 67, column: 15, scope: !14668, inlinedAt: !14792)
!14794 = !DILocation(line: 67, column: 33, scope: !14668, inlinedAt: !14792)
!14795 = !DILocation(line: 139, column: 15, scope: !14781, inlinedAt: !14789)
!14796 = !DILocation(line: 139, column: 25, scope: !14781, inlinedAt: !14789)
!14797 = !DILocation(line: 1894, column: 4, scope: !14790)
!14798 = !DILocation(line: 1895, column: 10, scope: !14790)
!14799 = !DILocation(line: 1896, column: 4, scope: !14790)
!14800 = !DILocation(line: 1898, column: 3, scope: !14790)
!14801 = !DILocation(line: 0, scope: !12508, inlinedAt: !14802)
!14802 = distinct !DILocation(line: 1887, column: 2, scope: !14776)
!14803 = !DILocation(line: 194, column: 2, scope: !12516, inlinedAt: !14802)
!14804 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14802)
!14805 = !DILocation(line: 194, column: 2, scope: !12520, inlinedAt: !14802)
!14806 = !DILocation(line: 0, scope: !12522, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 215, column: 2, scope: !12508, inlinedAt: !14802)
!14808 = !DILocation(line: 95, column: 2, scope: !12522, inlinedAt: !14807)
!14809 = !DILocation(line: 1901, column: 2, scope: !14751)
!14810 = distinct !DISubprogram(name: "z_sched_wait", scope: !2236, file: !2236, line: 1904, type: !14811, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14814)
!14811 = !DISubroutineType(types: !14812)
!14812 = !{!107, !12477, !12466, !2165, !13362, !14813}
!14813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!14814 = !{!14815, !14816, !14817, !14818, !14819, !14820}
!14815 = !DILocalVariable(name: "lock", arg: 1, scope: !14810, file: !2236, line: 1904, type: !12477)
!14816 = !DILocalVariable(name: "key", arg: 2, scope: !14810, file: !2236, line: 1904, type: !12466)
!14817 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14810, file: !2236, line: 1905, type: !2165)
!14818 = !DILocalVariable(name: "timeout", arg: 4, scope: !14810, file: !2236, line: 1905, type: !13362)
!14819 = !DILocalVariable(name: "data", arg: 5, scope: !14810, file: !2236, line: 1905, type: !14813)
!14820 = !DILocalVariable(name: "ret", scope: !14810, file: !2236, line: 1907, type: !107)
!14821 = !DILocation(line: 0, scope: !14810)
!14822 = !DILocation(line: 1907, column: 12, scope: !14810)
!14823 = !DILocation(line: 1909, column: 11, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14810, file: !2236, line: 1909, column: 6)
!14825 = !DILocation(line: 1909, column: 6, scope: !14810)
!14826 = !DILocation(line: 1910, column: 11, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14824, file: !2236, line: 1909, column: 20)
!14828 = !DILocation(line: 1910, column: 26, scope: !14827)
!14829 = !DILocation(line: 1910, column: 9, scope: !14827)
!14830 = !DILocation(line: 1911, column: 2, scope: !14827)
!14831 = !DILocation(line: 1912, column: 2, scope: !14810)
!14832 = distinct !DISubprogram(name: "z_data_copy", scope: !14833, file: !14833, line: 22, type: !2909, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !1949)
!14833 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14834 = !DILocation(line: 24, column: 2, scope: !14832)
!14835 = !DILocation(line: 27, column: 2, scope: !14832)
!14836 = !DILocation(line: 71, column: 1, scope: !14832)
!14837 = distinct !DISubprogram(name: "z_add_timeout", scope: !2273, file: !2273, line: 88, type: !14838, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14844)
!14838 = !DISubroutineType(types: !14839)
!14839 = !{null, !2246, !2265, !14840}
!14840 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !14841)
!14841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !14842)
!14842 = !{!14843}
!14843 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14841, file: !693, line: 66, baseType: !692, size: 64)
!14844 = !{!14845, !14846, !14847, !14848, !14854, !14855, !14858, !14861}
!14845 = !DILocalVariable(name: "to", arg: 1, scope: !14837, file: !2273, line: 88, type: !2246)
!14846 = !DILocalVariable(name: "fn", arg: 2, scope: !14837, file: !2273, line: 88, type: !2265)
!14847 = !DILocalVariable(name: "timeout", arg: 3, scope: !14837, file: !2273, line: 89, type: !14840)
!14848 = !DILocalVariable(name: "__i", scope: !14849, file: !2273, line: 102, type: !14850)
!14849 = distinct !DILexicalBlock(scope: !14837, file: !2273, line: 102, column: 2)
!14850 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !818, line: 106, baseType: !14851)
!14851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !818, line: 32, size: 32, elements: !14852)
!14852 = !{!14853}
!14853 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14851, file: !818, line: 33, baseType: !107, size: 32)
!14854 = !DILocalVariable(name: "__key", scope: !14849, file: !2273, line: 102, type: !14850)
!14855 = !DILocalVariable(name: "t", scope: !14856, file: !2273, line: 103, type: !2246)
!14856 = distinct !DILexicalBlock(scope: !14857, file: !2273, line: 102, column: 24)
!14857 = distinct !DILexicalBlock(scope: !14849, file: !2273, line: 102, column: 2)
!14858 = !DILocalVariable(name: "ticks", scope: !14859, file: !2273, line: 107, type: !692)
!14859 = distinct !DILexicalBlock(scope: !14860, file: !2273, line: 106, column: 39)
!14860 = distinct !DILexicalBlock(scope: !14856, file: !2273, line: 105, column: 7)
!14861 = !DILocalVariable(name: "next_time", scope: !14862, file: !2273, line: 137, type: !1149)
!14862 = distinct !DILexicalBlock(scope: !14863, file: !2273, line: 127, column: 22)
!14863 = distinct !DILexicalBlock(scope: !14856, file: !2273, line: 127, column: 7)
!14864 = !DILocation(line: 0, scope: !14837)
!14865 = !DILocation(line: 91, column: 6, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14837, file: !2273, line: 91, column: 6)
!14867 = !DILocation(line: 91, column: 6, scope: !14837)
!14868 = !DILocation(line: 99, column: 2, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !2273, line: 99, column: 2)
!14870 = distinct !DILexicalBlock(scope: !14837, file: !2273, line: 99, column: 2)
!14871 = !DILocation(line: 99, column: 2, scope: !14870)
!14872 = !DILocation(line: 99, column: 2, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14869, file: !2273, line: 99, column: 2)
!14874 = !DILocation(line: 100, column: 6, scope: !14837)
!14875 = !DILocation(line: 100, column: 9, scope: !14837)
!14876 = !DILocation(line: 0, scope: !14849)
!14877 = !DILocalVariable(name: "l", arg: 1, scope: !14878, file: !818, line: 136, type: !14881)
!14878 = distinct !DISubprogram(name: "k_spin_lock", scope: !818, file: !818, line: 136, type: !14879, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14882)
!14879 = !DISubroutineType(types: !14880)
!14880 = !{!14850, !14881}
!14881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!14882 = !{!14877, !14883}
!14883 = !DILocalVariable(name: "k", scope: !14878, file: !818, line: 139, type: !14850)
!14884 = !DILocation(line: 0, scope: !14878, inlinedAt: !14885)
!14885 = distinct !DILocation(line: 102, column: 2, scope: !14849)
!14886 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !14891)
!14887 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6124, file: !6124, line: 42, type: !8804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14888)
!14888 = !{!14889, !14890}
!14889 = !DILocalVariable(name: "key", scope: !14887, file: !6124, line: 44, type: !32)
!14890 = !DILocalVariable(name: "tmp", scope: !14887, file: !6124, line: 53, type: !32)
!14891 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !14885)
!14892 = !{i64 2851010}
!14893 = !DILocation(line: 0, scope: !14887, inlinedAt: !14891)
!14894 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !14885)
!14895 = distinct !DILexicalBlock(scope: !14896, file: !818, line: 148, column: 2)
!14896 = distinct !DILexicalBlock(scope: !14878, file: !818, line: 148, column: 2)
!14897 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !14885)
!14898 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !14885)
!14899 = distinct !DILexicalBlock(scope: !14895, file: !818, line: 148, column: 2)
!14900 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !14885)
!14901 = !DILocation(line: 106, column: 33, scope: !14860)
!14902 = !DILocation(line: 105, column: 7, scope: !14856)
!14903 = !DILocation(line: 107, column: 50, scope: !14859)
!14904 = !DILocation(line: 107, column: 48, scope: !14859)
!14905 = !DILocation(line: 0, scope: !14859)
!14906 = !DILocation(line: 109, column: 17, scope: !14859)
!14907 = !DILocation(line: 110, column: 3, scope: !14859)
!14908 = !DILocation(line: 111, column: 31, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14860, file: !2273, line: 110, column: 10)
!14910 = !DILocation(line: 111, column: 37, scope: !14909)
!14911 = !DILocation(line: 111, column: 35, scope: !14909)
!14912 = !DILocation(line: 0, scope: !14860)
!14913 = !DILocation(line: 109, column: 8, scope: !14859)
!14914 = !DILocation(line: 109, column: 15, scope: !14859)
!14915 = !DILocation(line: 114, column: 12, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14856, file: !2273, line: 114, column: 3)
!14917 = !DILocation(line: 0, scope: !14856)
!14918 = !DILocation(line: 114, column: 3, scope: !14916)
!14919 = !DILocation(line: 115, column: 24, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14921, file: !2273, line: 115, column: 8)
!14921 = distinct !DILexicalBlock(scope: !14922, file: !2273, line: 114, column: 45)
!14922 = distinct !DILexicalBlock(scope: !14916, file: !2273, line: 114, column: 3)
!14923 = !DILocation(line: 115, column: 11, scope: !14920)
!14924 = !DILocation(line: 115, column: 18, scope: !14920)
!14925 = !DILocation(line: 115, column: 8, scope: !14921)
!14926 = !DILocation(line: 116, column: 15, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14920, file: !2273, line: 115, column: 32)
!14928 = !DILocation(line: 117, column: 26, scope: !14927)
!14929 = !DILocation(line: 117, column: 5, scope: !14927)
!14930 = !DILocation(line: 123, column: 7, scope: !14856)
!14931 = !DILocation(line: 120, column: 15, scope: !14921)
!14932 = !DILocation(line: 114, column: 36, scope: !14922)
!14933 = distinct !{!14933, !14918, !14934}
!14934 = !DILocation(line: 121, column: 3, scope: !14916)
!14935 = !DILocation(line: 124, column: 4, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !2273, line: 123, column: 18)
!14937 = distinct !DILexicalBlock(scope: !14856, file: !2273, line: 123, column: 7)
!14938 = !DILocation(line: 125, column: 3, scope: !14936)
!14939 = !DILocation(line: 127, column: 13, scope: !14863)
!14940 = !DILocation(line: 127, column: 10, scope: !14863)
!14941 = !DILocation(line: 127, column: 7, scope: !14856)
!14942 = !DILocation(line: 137, column: 24, scope: !14862)
!14943 = !DILocation(line: 0, scope: !14862)
!14944 = !DILocation(line: 139, column: 18, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14862, file: !2273, line: 139, column: 8)
!14946 = !DILocation(line: 139, column: 23, scope: !14945)
!14947 = !DILocation(line: 141, column: 5, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14945, file: !2273, line: 140, column: 48)
!14949 = !DILocation(line: 142, column: 4, scope: !14948)
!14950 = !DILocalVariable(name: "key", arg: 2, scope: !14951, file: !818, line: 190, type: !14850)
!14951 = distinct !DISubprogram(name: "k_spin_unlock", scope: !818, file: !818, line: 189, type: !14952, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14954)
!14952 = !DISubroutineType(types: !14953)
!14953 = !{null, !14881, !14850}
!14954 = !{!14955, !14950}
!14955 = !DILocalVariable(name: "l", arg: 1, scope: !14951, file: !818, line: 189, type: !14881)
!14956 = !DILocation(line: 0, scope: !14951, inlinedAt: !14957)
!14957 = distinct !DILocation(line: 102, column: 2, scope: !14857)
!14958 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !14957)
!14959 = distinct !DILexicalBlock(scope: !14960, file: !818, line: 194, column: 2)
!14960 = distinct !DILexicalBlock(scope: !14951, file: !818, line: 194, column: 2)
!14961 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !14957)
!14962 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !14957)
!14963 = distinct !DILexicalBlock(scope: !14959, file: !818, line: 194, column: 2)
!14964 = !DILocalVariable(name: "key", arg: 1, scope: !14965, file: !6124, line: 84, type: !32)
!14965 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6124, file: !6124, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14966)
!14966 = !{!14964}
!14967 = !DILocation(line: 0, scope: !14965, inlinedAt: !14968)
!14968 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !14957)
!14969 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !14968)
!14970 = !{i64 2851827}
!14971 = !DILocation(line: 148, column: 1, scope: !14837)
!14972 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !726, file: !726, line: 225, type: !14973, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14977)
!14973 = !DISubroutineType(types: !14974)
!14974 = !{!145, !14975}
!14975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14976, size: 32)
!14976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2250)
!14977 = !{!14978}
!14978 = !DILocalVariable(name: "node", arg: 1, scope: !14972, file: !726, line: 225, type: !14975)
!14979 = !DILocation(line: 0, scope: !14972)
!14980 = !DILocation(line: 227, column: 15, scope: !14972)
!14981 = !DILocation(line: 227, column: 20, scope: !14972)
!14982 = !DILocation(line: 227, column: 2, scope: !14972)
!14983 = distinct !DISubprogram(name: "elapsed", scope: !2273, file: !2273, line: 62, type: !14984, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!14984 = !DISubroutineType(types: !14985)
!14985 = !{!1149}
!14986 = !DILocation(line: 64, column: 9, scope: !14983)
!14987 = !DILocation(line: 64, column: 28, scope: !14983)
!14988 = !DILocation(line: 64, column: 35, scope: !14983)
!14989 = !DILocation(line: 64, column: 2, scope: !14983)
!14990 = distinct !DISubprogram(name: "first", scope: !2273, file: !2273, line: 39, type: !14991, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14993)
!14991 = !DISubroutineType(types: !14992)
!14992 = !{!2246}
!14993 = !{!14994}
!14994 = !DILocalVariable(name: "t", scope: !14990, file: !2273, line: 41, type: !14995)
!14995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!14996 = !DILocation(line: 41, column: 19, scope: !14990)
!14997 = !DILocation(line: 0, scope: !14990)
!14998 = !DILocation(line: 43, column: 9, scope: !14990)
!14999 = !DILocation(line: 43, column: 2, scope: !14990)
!15000 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !726, file: !726, line: 443, type: !15001, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15003)
!15001 = !DISubroutineType(types: !15002)
!15002 = !{null, !14995, !14995}
!15003 = !{!15004, !15005, !15006}
!15004 = !DILocalVariable(name: "successor", arg: 1, scope: !15000, file: !726, line: 443, type: !14995)
!15005 = !DILocalVariable(name: "node", arg: 2, scope: !15000, file: !726, line: 443, type: !14995)
!15006 = !DILocalVariable(name: "prev", scope: !15000, file: !726, line: 445, type: !15007)
!15007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14995)
!15008 = !DILocation(line: 0, scope: !15000)
!15009 = !DILocation(line: 445, column: 39, scope: !15000)
!15010 = !DILocation(line: 447, column: 8, scope: !15000)
!15011 = !DILocation(line: 447, column: 13, scope: !15000)
!15012 = !DILocation(line: 448, column: 8, scope: !15000)
!15013 = !DILocation(line: 448, column: 13, scope: !15000)
!15014 = !DILocation(line: 449, column: 8, scope: !15000)
!15015 = !DILocation(line: 449, column: 13, scope: !15000)
!15016 = !DILocation(line: 450, column: 18, scope: !15000)
!15017 = !DILocation(line: 451, column: 1, scope: !15000)
!15018 = distinct !DISubprogram(name: "next", scope: !2273, file: !2273, line: 46, type: !15019, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15021)
!15019 = !DISubroutineType(types: !15020)
!15020 = !{!2246, !2246}
!15021 = !{!15022, !15023}
!15022 = !DILocalVariable(name: "t", arg: 1, scope: !15018, file: !2273, line: 46, type: !2246)
!15023 = !DILocalVariable(name: "n", scope: !15018, file: !2273, line: 48, type: !14995)
!15024 = !DILocation(line: 0, scope: !15018)
!15025 = !DILocation(line: 48, column: 58, scope: !15018)
!15026 = !DILocation(line: 48, column: 19, scope: !15018)
!15027 = !DILocation(line: 50, column: 9, scope: !15018)
!15028 = !DILocation(line: 50, column: 2, scope: !15018)
!15029 = distinct !DISubprogram(name: "sys_dlist_append", scope: !726, file: !726, line: 404, type: !15030, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15033)
!15030 = !DISubroutineType(types: !15031)
!15031 = !{null, !15032, !14995}
!15032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!15033 = !{!15034, !15035, !15036}
!15034 = !DILocalVariable(name: "list", arg: 1, scope: !15029, file: !726, line: 404, type: !15032)
!15035 = !DILocalVariable(name: "node", arg: 2, scope: !15029, file: !726, line: 404, type: !14995)
!15036 = !DILocalVariable(name: "tail", scope: !15029, file: !726, line: 406, type: !15007)
!15037 = !DILocation(line: 0, scope: !15029)
!15038 = !DILocation(line: 406, column: 34, scope: !15029)
!15039 = !DILocation(line: 408, column: 8, scope: !15029)
!15040 = !DILocation(line: 408, column: 13, scope: !15029)
!15041 = !DILocation(line: 409, column: 8, scope: !15029)
!15042 = !DILocation(line: 409, column: 13, scope: !15029)
!15043 = !DILocation(line: 411, column: 8, scope: !15029)
!15044 = !DILocation(line: 411, column: 13, scope: !15029)
!15045 = !DILocation(line: 412, column: 13, scope: !15029)
!15046 = !DILocation(line: 413, column: 1, scope: !15029)
!15047 = distinct !DISubprogram(name: "next_timeout", scope: !2273, file: !2273, line: 67, type: !14984, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15048)
!15048 = !{!15049, !15050, !15051}
!15049 = !DILocalVariable(name: "to", scope: !15047, file: !2273, line: 69, type: !2246)
!15050 = !DILocalVariable(name: "ticks_elapsed", scope: !15047, file: !2273, line: 70, type: !1149)
!15051 = !DILocalVariable(name: "ret", scope: !15047, file: !2273, line: 71, type: !1149)
!15052 = !DILocation(line: 69, column: 24, scope: !15047)
!15053 = !DILocation(line: 0, scope: !15047)
!15054 = !DILocation(line: 70, column: 26, scope: !15047)
!15055 = !DILocation(line: 73, column: 10, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15047, file: !2273, line: 73, column: 6)
!15057 = !DILocation(line: 73, column: 19, scope: !15056)
!15058 = !DILocation(line: 74, column: 21, scope: !15056)
!15059 = !DILocation(line: 74, column: 30, scope: !15056)
!15060 = !DILocation(line: 74, column: 28, scope: !15056)
!15061 = !DILocation(line: 74, column: 45, scope: !15056)
!15062 = !DILocation(line: 73, column: 6, scope: !15047)
!15063 = !DILocation(line: 77, column: 9, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15056, file: !2273, line: 76, column: 9)
!15065 = !DILocation(line: 0, scope: !15056)
!15066 = !DILocation(line: 81, column: 20, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15047, file: !2273, line: 81, column: 6)
!15068 = !DILocation(line: 81, column: 6, scope: !15067)
!15069 = !DILocation(line: 81, column: 32, scope: !15067)
!15070 = !DILocation(line: 85, column: 2, scope: !15047)
!15071 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !726, file: !726, line: 341, type: !15072, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15074)
!15072 = !DISubroutineType(types: !15073)
!15073 = !{!14995, !15032, !14995}
!15074 = !{!15075, !15076}
!15075 = !DILocalVariable(name: "list", arg: 1, scope: !15071, file: !726, line: 341, type: !15032)
!15076 = !DILocalVariable(name: "node", arg: 2, scope: !15071, file: !726, line: 342, type: !14995)
!15077 = !DILocation(line: 0, scope: !15071)
!15078 = !DILocation(line: 344, column: 15, scope: !15071)
!15079 = !DILocation(line: 344, column: 9, scope: !15071)
!15080 = !DILocation(line: 344, column: 26, scope: !15071)
!15081 = !DILocation(line: 344, column: 2, scope: !15071)
!15082 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !726, file: !726, line: 325, type: !15072, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15083)
!15083 = !{!15084, !15085}
!15084 = !DILocalVariable(name: "list", arg: 1, scope: !15082, file: !726, line: 325, type: !15032)
!15085 = !DILocalVariable(name: "node", arg: 2, scope: !15082, file: !726, line: 326, type: !14995)
!15086 = !DILocation(line: 0, scope: !15082)
!15087 = !DILocation(line: 328, column: 24, scope: !15082)
!15088 = !DILocation(line: 328, column: 15, scope: !15082)
!15089 = !DILocation(line: 328, column: 9, scope: !15082)
!15090 = !DILocation(line: 328, column: 45, scope: !15082)
!15091 = !DILocation(line: 328, column: 2, scope: !15082)
!15092 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !726, file: !726, line: 294, type: !15093, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15095)
!15093 = !DISubroutineType(types: !15094)
!15094 = !{!14995, !15032}
!15095 = !{!15096}
!15096 = !DILocalVariable(name: "list", arg: 1, scope: !15092, file: !726, line: 294, type: !15032)
!15097 = !DILocation(line: 0, scope: !15092)
!15098 = !DILocation(line: 296, column: 9, scope: !15092)
!15099 = !DILocation(line: 296, column: 2, scope: !15092)
!15100 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !726, file: !726, line: 266, type: !15101, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15103)
!15101 = !DISubroutineType(types: !15102)
!15102 = !{!145, !15032}
!15103 = !{!15104}
!15104 = !DILocalVariable(name: "list", arg: 1, scope: !15100, file: !726, line: 266, type: !15032)
!15105 = !DILocation(line: 0, scope: !15100)
!15106 = !DILocation(line: 268, column: 15, scope: !15100)
!15107 = !DILocation(line: 268, column: 20, scope: !15100)
!15108 = !DILocation(line: 268, column: 2, scope: !15100)
!15109 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2273, file: !2273, line: 150, type: !15110, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15112)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{!107, !2246}
!15112 = !{!15113, !15114, !15115, !15117}
!15113 = !DILocalVariable(name: "to", arg: 1, scope: !15109, file: !2273, line: 150, type: !2246)
!15114 = !DILocalVariable(name: "ret", scope: !15109, file: !2273, line: 152, type: !107)
!15115 = !DILocalVariable(name: "__i", scope: !15116, file: !2273, line: 154, type: !14850)
!15116 = distinct !DILexicalBlock(scope: !15109, file: !2273, line: 154, column: 2)
!15117 = !DILocalVariable(name: "__key", scope: !15116, file: !2273, line: 154, type: !14850)
!15118 = !DILocation(line: 0, scope: !15109)
!15119 = !DILocation(line: 0, scope: !15116)
!15120 = !DILocation(line: 0, scope: !14878, inlinedAt: !15121)
!15121 = distinct !DILocation(line: 154, column: 2, scope: !15116)
!15122 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15123)
!15123 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15121)
!15124 = !DILocation(line: 0, scope: !14887, inlinedAt: !15123)
!15125 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15121)
!15126 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15121)
!15127 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15121)
!15128 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15121)
!15129 = !DILocation(line: 155, column: 7, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15131, file: !2273, line: 155, column: 7)
!15131 = distinct !DILexicalBlock(scope: !15132, file: !2273, line: 154, column: 24)
!15132 = distinct !DILexicalBlock(scope: !15116, file: !2273, line: 154, column: 2)
!15133 = !DILocation(line: 155, column: 7, scope: !15131)
!15134 = !DILocation(line: 156, column: 4, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15130, file: !2273, line: 155, column: 39)
!15136 = !DILocation(line: 158, column: 3, scope: !15135)
!15137 = !DILocation(line: 0, scope: !14951, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 154, column: 2, scope: !15132)
!15139 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15138)
!15140 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15138)
!15141 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15138)
!15142 = !DILocation(line: 0, scope: !14965, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15138)
!15144 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15143)
!15145 = !DILocation(line: 161, column: 2, scope: !15109)
!15146 = distinct !DISubprogram(name: "remove_timeout", scope: !2273, file: !2273, line: 53, type: !2267, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15147)
!15147 = !{!15148}
!15148 = !DILocalVariable(name: "t", arg: 1, scope: !15146, file: !2273, line: 53, type: !2246)
!15149 = !DILocation(line: 0, scope: !15146)
!15150 = !DILocation(line: 55, column: 6, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15146, file: !2273, line: 55, column: 6)
!15152 = !DILocation(line: 55, column: 14, scope: !15151)
!15153 = !DILocation(line: 55, column: 6, scope: !15146)
!15154 = !DILocation(line: 56, column: 25, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15151, file: !2273, line: 55, column: 23)
!15156 = !DILocation(line: 56, column: 12, scope: !15155)
!15157 = !DILocation(line: 56, column: 19, scope: !15155)
!15158 = !DILocation(line: 57, column: 2, scope: !15155)
!15159 = !DILocation(line: 59, column: 23, scope: !15146)
!15160 = !DILocation(line: 59, column: 2, scope: !15146)
!15161 = !DILocation(line: 60, column: 1, scope: !15146)
!15162 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !726, file: !726, line: 496, type: !15163, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15165)
!15163 = !DISubroutineType(types: !15164)
!15164 = !{null, !14995}
!15165 = !{!15166, !15167, !15168}
!15166 = !DILocalVariable(name: "node", arg: 1, scope: !15162, file: !726, line: 496, type: !14995)
!15167 = !DILocalVariable(name: "prev", scope: !15162, file: !726, line: 498, type: !15007)
!15168 = !DILocalVariable(name: "next", scope: !15162, file: !726, line: 499, type: !15007)
!15169 = !DILocation(line: 0, scope: !15162)
!15170 = !DILocation(line: 498, column: 34, scope: !15162)
!15171 = !DILocation(line: 499, column: 34, scope: !15162)
!15172 = !DILocation(line: 501, column: 8, scope: !15162)
!15173 = !DILocation(line: 501, column: 13, scope: !15162)
!15174 = !DILocation(line: 502, column: 8, scope: !15162)
!15175 = !DILocation(line: 502, column: 13, scope: !15162)
!15176 = !DILocation(line: 503, column: 2, scope: !15162)
!15177 = !DILocation(line: 504, column: 1, scope: !15162)
!15178 = distinct !DISubprogram(name: "sys_dnode_init", scope: !726, file: !726, line: 211, type: !15163, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15179)
!15179 = !{!15180}
!15180 = !DILocalVariable(name: "node", arg: 1, scope: !15178, file: !726, line: 211, type: !14995)
!15181 = !DILocation(line: 0, scope: !15178)
!15182 = !DILocation(line: 213, column: 8, scope: !15178)
!15183 = !DILocation(line: 213, column: 13, scope: !15178)
!15184 = !DILocation(line: 214, column: 8, scope: !15178)
!15185 = !DILocation(line: 214, column: 13, scope: !15178)
!15186 = !DILocation(line: 215, column: 1, scope: !15178)
!15187 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2273, file: !2273, line: 183, type: !15188, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15192)
!15188 = !DISubroutineType(types: !15189)
!15189 = !{!692, !15190}
!15190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15191, size: 32)
!15191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!15192 = !{!15193, !15194, !15195, !15197}
!15193 = !DILocalVariable(name: "timeout", arg: 1, scope: !15187, file: !2273, line: 183, type: !15190)
!15194 = !DILocalVariable(name: "ticks", scope: !15187, file: !2273, line: 185, type: !692)
!15195 = !DILocalVariable(name: "__i", scope: !15196, file: !2273, line: 187, type: !14850)
!15196 = distinct !DILexicalBlock(scope: !15187, file: !2273, line: 187, column: 2)
!15197 = !DILocalVariable(name: "__key", scope: !15196, file: !2273, line: 187, type: !14850)
!15198 = !DILocation(line: 0, scope: !15187)
!15199 = !DILocation(line: 0, scope: !15196)
!15200 = !DILocation(line: 0, scope: !14878, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 187, column: 2, scope: !15196)
!15202 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15203)
!15203 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15201)
!15204 = !DILocation(line: 0, scope: !14887, inlinedAt: !15203)
!15205 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15201)
!15206 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15201)
!15207 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15201)
!15208 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15201)
!15209 = !DILocation(line: 188, column: 11, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15211, file: !2273, line: 187, column: 24)
!15211 = distinct !DILexicalBlock(scope: !15196, file: !2273, line: 187, column: 2)
!15212 = !DILocation(line: 0, scope: !14951, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 187, column: 2, scope: !15211)
!15214 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15213)
!15215 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15213)
!15216 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15213)
!15217 = !DILocation(line: 0, scope: !14965, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15213)
!15219 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15218)
!15220 = !DILocation(line: 191, column: 2, scope: !15187)
!15221 = distinct !DISubprogram(name: "timeout_rem", scope: !2273, file: !2273, line: 165, type: !15188, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15222)
!15222 = !{!15223, !15224, !15225}
!15223 = !DILocalVariable(name: "timeout", arg: 1, scope: !15221, file: !2273, line: 165, type: !15190)
!15224 = !DILocalVariable(name: "ticks", scope: !15221, file: !2273, line: 167, type: !692)
!15225 = !DILocalVariable(name: "t", scope: !15226, file: !2273, line: 173, type: !2246)
!15226 = distinct !DILexicalBlock(scope: !15221, file: !2273, line: 173, column: 2)
!15227 = !DILocation(line: 0, scope: !15221)
!15228 = !DILocation(line: 169, column: 6, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15221, file: !2273, line: 169, column: 6)
!15230 = !DILocation(line: 169, column: 6, scope: !15221)
!15231 = !DILocation(line: 173, column: 28, scope: !15226)
!15232 = !DILocation(line: 0, scope: !15226)
!15233 = !DILocation(line: 173, column: 39, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15226, file: !2273, line: 173, column: 2)
!15235 = !DILocation(line: 173, column: 2, scope: !15226)
!15236 = !DILocation(line: 174, column: 15, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15234, file: !2273, line: 173, column: 61)
!15238 = !DILocation(line: 174, column: 9, scope: !15237)
!15239 = !DILocation(line: 175, column: 15, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15237, file: !2273, line: 175, column: 7)
!15241 = !DILocation(line: 175, column: 7, scope: !15237)
!15242 = !DILocation(line: 173, column: 52, scope: !15234)
!15243 = distinct !{!15243, !15235, !15244}
!15244 = !DILocation(line: 178, column: 2, scope: !15226)
!15245 = !DILocation(line: 180, column: 17, scope: !15221)
!15246 = !DILocation(line: 180, column: 15, scope: !15221)
!15247 = !DILocation(line: 180, column: 2, scope: !15221)
!15248 = !DILocation(line: 181, column: 1, scope: !15221)
!15249 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12063, file: !12063, line: 35, type: !15250, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15252)
!15250 = !DISubroutineType(types: !15251)
!15251 = !{!145, !15190}
!15252 = !{!15253}
!15253 = !DILocalVariable(name: "to", arg: 1, scope: !15249, file: !12063, line: 35, type: !15190)
!15254 = !DILocation(line: 0, scope: !15249)
!15255 = !DILocation(line: 37, column: 35, scope: !15249)
!15256 = !DILocation(line: 37, column: 10, scope: !15249)
!15257 = !DILocation(line: 37, column: 9, scope: !15249)
!15258 = !DILocation(line: 37, column: 2, scope: !15249)
!15259 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2273, file: !2273, line: 194, type: !15188, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15260)
!15260 = !{!15261, !15262, !15263, !15265}
!15261 = !DILocalVariable(name: "timeout", arg: 1, scope: !15259, file: !2273, line: 194, type: !15190)
!15262 = !DILocalVariable(name: "ticks", scope: !15259, file: !2273, line: 196, type: !692)
!15263 = !DILocalVariable(name: "__i", scope: !15264, file: !2273, line: 198, type: !14850)
!15264 = distinct !DILexicalBlock(scope: !15259, file: !2273, line: 198, column: 2)
!15265 = !DILocalVariable(name: "__key", scope: !15264, file: !2273, line: 198, type: !14850)
!15266 = !DILocation(line: 0, scope: !15259)
!15267 = !DILocation(line: 0, scope: !15264)
!15268 = !DILocation(line: 0, scope: !14878, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 198, column: 2, scope: !15264)
!15270 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15269)
!15272 = !DILocation(line: 0, scope: !14887, inlinedAt: !15271)
!15273 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15269)
!15274 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15269)
!15275 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15269)
!15276 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15269)
!15277 = !DILocation(line: 199, column: 11, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !2273, line: 198, column: 24)
!15279 = distinct !DILexicalBlock(scope: !15264, file: !2273, line: 198, column: 2)
!15280 = !DILocation(line: 199, column: 23, scope: !15278)
!15281 = !DILocation(line: 0, scope: !14951, inlinedAt: !15282)
!15282 = distinct !DILocation(line: 198, column: 2, scope: !15279)
!15283 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15282)
!15284 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15282)
!15285 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15282)
!15286 = !DILocation(line: 0, scope: !14965, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15282)
!15288 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15287)
!15289 = !DILocation(line: 199, column: 21, scope: !15278)
!15290 = !DILocation(line: 202, column: 2, scope: !15259)
!15291 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2273, file: !2273, line: 205, type: !14984, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15292)
!15292 = !{!15293, !15294, !15296}
!15293 = !DILocalVariable(name: "ret", scope: !15291, file: !2273, line: 207, type: !1149)
!15294 = !DILocalVariable(name: "__i", scope: !15295, file: !2273, line: 209, type: !14850)
!15295 = distinct !DILexicalBlock(scope: !15291, file: !2273, line: 209, column: 2)
!15296 = !DILocalVariable(name: "__key", scope: !15295, file: !2273, line: 209, type: !14850)
!15297 = !DILocation(line: 0, scope: !15291)
!15298 = !DILocation(line: 0, scope: !15295)
!15299 = !DILocation(line: 0, scope: !14878, inlinedAt: !15300)
!15300 = distinct !DILocation(line: 209, column: 2, scope: !15295)
!15301 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15302)
!15302 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15300)
!15303 = !DILocation(line: 0, scope: !14887, inlinedAt: !15302)
!15304 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15300)
!15305 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15300)
!15306 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15300)
!15307 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15300)
!15308 = !DILocation(line: 210, column: 9, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15310, file: !2273, line: 209, column: 24)
!15310 = distinct !DILexicalBlock(scope: !15295, file: !2273, line: 209, column: 2)
!15311 = !DILocation(line: 0, scope: !14951, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 209, column: 2, scope: !15310)
!15313 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15312)
!15314 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15312)
!15315 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15312)
!15316 = !DILocation(line: 0, scope: !14965, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15312)
!15318 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15317)
!15319 = !DILocation(line: 212, column: 2, scope: !15291)
!15320 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2273, file: !2273, line: 215, type: !9480, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15321)
!15321 = !{!15322, !15323, !15324, !15326, !15327, !15330, !15331}
!15322 = !DILocalVariable(name: "ticks", arg: 1, scope: !15320, file: !2273, line: 215, type: !1149)
!15323 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15320, file: !2273, line: 215, type: !145)
!15324 = !DILocalVariable(name: "__i", scope: !15325, file: !2273, line: 217, type: !14850)
!15325 = distinct !DILexicalBlock(scope: !15320, file: !2273, line: 217, column: 2)
!15326 = !DILocalVariable(name: "__key", scope: !15325, file: !2273, line: 217, type: !14850)
!15327 = !DILocalVariable(name: "next_to", scope: !15328, file: !2273, line: 218, type: !107)
!15328 = distinct !DILexicalBlock(scope: !15329, file: !2273, line: 217, column: 24)
!15329 = distinct !DILexicalBlock(scope: !15325, file: !2273, line: 217, column: 2)
!15330 = !DILocalVariable(name: "sooner", scope: !15328, file: !2273, line: 219, type: !145)
!15331 = !DILocalVariable(name: "imminent", scope: !15328, file: !2273, line: 221, type: !145)
!15332 = !DILocation(line: 0, scope: !15320)
!15333 = !DILocation(line: 0, scope: !15325)
!15334 = !DILocation(line: 0, scope: !14878, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 217, column: 2, scope: !15325)
!15336 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15337)
!15337 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15335)
!15338 = !DILocation(line: 0, scope: !14887, inlinedAt: !15337)
!15339 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15335)
!15340 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15335)
!15341 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15335)
!15342 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15335)
!15343 = !DILocation(line: 218, column: 17, scope: !15328)
!15344 = !DILocation(line: 0, scope: !15328)
!15345 = !DILocation(line: 221, column: 27, scope: !15328)
!15346 = !DILocation(line: 233, column: 17, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15328, file: !2273, line: 233, column: 7)
!15348 = !DILocation(line: 234, column: 26, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15347, file: !2273, line: 233, column: 56)
!15350 = !DILocation(line: 234, column: 4, scope: !15349)
!15351 = !DILocation(line: 235, column: 3, scope: !15349)
!15352 = !DILocation(line: 0, scope: !14951, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 217, column: 2, scope: !15329)
!15354 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15353)
!15355 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15353)
!15356 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15353)
!15357 = !DILocation(line: 0, scope: !14965, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15353)
!15359 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15358)
!15360 = !DILocation(line: 237, column: 1, scope: !15320)
!15361 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2273, file: !2273, line: 239, type: !15362, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15364)
!15362 = !DISubroutineType(types: !15363)
!15363 = !{null, !1149}
!15364 = !{!15365, !15366, !15367, !15369}
!15365 = !DILocalVariable(name: "ticks", arg: 1, scope: !15361, file: !2273, line: 239, type: !1149)
!15366 = !DILocalVariable(name: "key", scope: !15361, file: !2273, line: 245, type: !14850)
!15367 = !DILocalVariable(name: "t", scope: !15368, file: !2273, line: 262, type: !2246)
!15368 = distinct !DILexicalBlock(scope: !15361, file: !2273, line: 261, column: 67)
!15369 = !DILocalVariable(name: "dt", scope: !15368, file: !2273, line: 263, type: !107)
!15370 = !DILocation(line: 0, scope: !15361)
!15371 = !DILocation(line: 242, column: 2, scope: !15361)
!15372 = !DILocation(line: 0, scope: !14878, inlinedAt: !15373)
!15373 = distinct !DILocation(line: 245, column: 25, scope: !15361)
!15374 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15375)
!15375 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15373)
!15376 = !DILocation(line: 0, scope: !14887, inlinedAt: !15375)
!15377 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15373)
!15378 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15373)
!15379 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15373)
!15380 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15373)
!15381 = !DILocation(line: 261, column: 9, scope: !15361)
!15382 = !DILocation(line: 261, column: 17, scope: !15361)
!15383 = !DILocation(line: 261, column: 25, scope: !15361)
!15384 = !DILocation(line: 261, column: 37, scope: !15361)
!15385 = !DILocation(line: 261, column: 47, scope: !15361)
!15386 = !DILocation(line: 261, column: 44, scope: !15361)
!15387 = !DILocation(line: 261, column: 2, scope: !15361)
!15388 = !DILocation(line: 0, scope: !15368)
!15389 = !DILocation(line: 263, column: 12, scope: !15368)
!15390 = !DILocation(line: 265, column: 16, scope: !15368)
!15391 = !DILocation(line: 265, column: 13, scope: !15368)
!15392 = !DILocation(line: 266, column: 13, scope: !15368)
!15393 = !DILocation(line: 267, column: 3, scope: !15368)
!15394 = !DILocation(line: 0, scope: !14951, inlinedAt: !15395)
!15395 = distinct !DILocation(line: 269, column: 3, scope: !15368)
!15396 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15395)
!15397 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15395)
!15398 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15395)
!15399 = !DILocation(line: 0, scope: !14965, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15395)
!15401 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15400)
!15402 = !DILocation(line: 270, column: 6, scope: !15368)
!15403 = !DILocation(line: 270, column: 3, scope: !15368)
!15404 = !DILocation(line: 0, scope: !14878, inlinedAt: !15405)
!15405 = distinct !DILocation(line: 271, column: 9, scope: !15368)
!15406 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15405)
!15408 = !DILocation(line: 0, scope: !14887, inlinedAt: !15407)
!15409 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15405)
!15410 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15405)
!15411 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15405)
!15412 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15405)
!15413 = !DILocation(line: 272, column: 22, scope: !15368)
!15414 = distinct !{!15414, !15387, !15415}
!15415 = !DILocation(line: 273, column: 2, scope: !15361)
!15416 = !DILocation(line: 276, column: 19, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15418, file: !2273, line: 275, column: 23)
!15418 = distinct !DILexicalBlock(scope: !15361, file: !2273, line: 275, column: 6)
!15419 = !DILocation(line: 277, column: 2, scope: !15417)
!15420 = !DILocation(line: 279, column: 15, scope: !15361)
!15421 = !DILocation(line: 279, column: 12, scope: !15361)
!15422 = !DILocation(line: 280, column: 21, scope: !15361)
!15423 = !DILocation(line: 282, column: 24, scope: !15361)
!15424 = !DILocation(line: 282, column: 2, scope: !15361)
!15425 = !DILocation(line: 0, scope: !14951, inlinedAt: !15426)
!15426 = distinct !DILocation(line: 284, column: 2, scope: !15361)
!15427 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15426)
!15428 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15426)
!15429 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15426)
!15430 = !DILocation(line: 0, scope: !14965, inlinedAt: !15431)
!15431 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15426)
!15432 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15431)
!15433 = !DILocation(line: 285, column: 1, scope: !15361)
!15434 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2273, file: !2273, line: 287, type: !15435, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15437)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{!694}
!15437 = !{!15438, !15439, !15441}
!15438 = !DILocalVariable(name: "t", scope: !15434, file: !2273, line: 289, type: !695)
!15439 = !DILocalVariable(name: "__i", scope: !15440, file: !2273, line: 291, type: !14850)
!15440 = distinct !DILexicalBlock(scope: !15434, file: !2273, line: 291, column: 2)
!15441 = !DILocalVariable(name: "__key", scope: !15440, file: !2273, line: 291, type: !14850)
!15442 = !DILocation(line: 0, scope: !15434)
!15443 = !DILocation(line: 0, scope: !15440)
!15444 = !DILocation(line: 0, scope: !14878, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 291, column: 2, scope: !15440)
!15446 = !DILocation(line: 55, column: 2, scope: !14887, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 145, column: 10, scope: !14878, inlinedAt: !15445)
!15448 = !DILocation(line: 0, scope: !14887, inlinedAt: !15447)
!15449 = !DILocation(line: 148, column: 2, scope: !14895, inlinedAt: !15445)
!15450 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15445)
!15451 = !DILocation(line: 148, column: 2, scope: !14899, inlinedAt: !15445)
!15452 = !DILocation(line: 160, column: 2, scope: !14878, inlinedAt: !15445)
!15453 = !DILocation(line: 292, column: 7, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15455, file: !2273, line: 291, column: 24)
!15455 = distinct !DILexicalBlock(scope: !15440, file: !2273, line: 291, column: 2)
!15456 = !DILocation(line: 292, column: 19, scope: !15454)
!15457 = !DILocation(line: 0, scope: !14951, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 291, column: 2, scope: !15455)
!15459 = !DILocation(line: 194, column: 2, scope: !14959, inlinedAt: !15458)
!15460 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15458)
!15461 = !DILocation(line: 194, column: 2, scope: !14963, inlinedAt: !15458)
!15462 = !DILocation(line: 0, scope: !14965, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 215, column: 2, scope: !14951, inlinedAt: !15458)
!15464 = !DILocation(line: 95, column: 2, scope: !14965, inlinedAt: !15463)
!15465 = !DILocation(line: 292, column: 17, scope: !15454)
!15466 = !DILocation(line: 294, column: 2, scope: !15434)
!15467 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2273, file: !2273, line: 297, type: !6090, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15468 = !DILocation(line: 300, column: 19, scope: !15467)
!15469 = !DILocation(line: 300, column: 9, scope: !15467)
!15470 = !DILocation(line: 300, column: 2, scope: !15467)
!15471 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2273, file: !2273, line: 306, type: !15435, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15472 = !DILocation(line: 308, column: 9, scope: !15471)
!15473 = !DILocation(line: 308, column: 2, scope: !15471)
!15474 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2273, file: !2273, line: 319, type: !6100, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15475)
!15475 = !{!15476, !15477, !15478, !15479}
!15476 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15474, file: !2273, line: 319, type: !152)
!15477 = !DILocalVariable(name: "start_cycles", scope: !15474, file: !2273, line: 328, type: !152)
!15478 = !DILocalVariable(name: "cycles_to_wait", scope: !15474, file: !2273, line: 331, type: !152)
!15479 = !DILocalVariable(name: "current_cycles", scope: !15480, file: !2273, line: 338, type: !152)
!15480 = distinct !DILexicalBlock(scope: !15481, file: !2273, line: 337, column: 11)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !2273, line: 337, column: 2)
!15482 = distinct !DILexicalBlock(scope: !15474, file: !2273, line: 337, column: 2)
!15483 = !DILocation(line: 0, scope: !15474)
!15484 = !DILocation(line: 322, column: 19, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15474, file: !2273, line: 322, column: 6)
!15486 = !DILocation(line: 322, column: 6, scope: !15474)
!15487 = !DILocation(line: 328, column: 26, scope: !15474)
!15488 = !DILocation(line: 333, column: 43, scope: !15474)
!15489 = !DILocation(line: 337, column: 2, scope: !15474)
!15490 = !DILocation(line: 338, column: 29, scope: !15480)
!15491 = !DILocation(line: 0, scope: !15480)
!15492 = !DILocation(line: 341, column: 23, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15480, file: !2273, line: 341, column: 7)
!15494 = !DILocation(line: 341, column: 39, scope: !15493)
!15495 = !DILocation(line: 349, column: 1, scope: !15474)
!15496 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !804, file: !804, line: 1675, type: !6090, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15497 = !DILocation(line: 1677, column: 9, scope: !15496)
!15498 = !DILocation(line: 1677, column: 2, scope: !15496)
!15499 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8126, file: !8126, line: 24, type: !6090, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15500 = !DILocation(line: 26, column: 9, scope: !15499)
!15501 = !DILocation(line: 26, column: 2, scope: !15499)
!15502 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2273, file: !2273, line: 364, type: !15503, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15505)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!695, !14840}
!15505 = !{!15506, !15507}
!15506 = !DILocalVariable(name: "timeout", arg: 1, scope: !15502, file: !2273, line: 364, type: !14840)
!15507 = !DILocalVariable(name: "dt", scope: !15502, file: !2273, line: 366, type: !692)
!15508 = !DILocation(line: 0, scope: !15502)
!15509 = !DILocation(line: 368, column: 6, scope: !15502)
!15510 = !DILocation(line: 371, column: 10, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15512, file: !2273, line: 370, column: 47)
!15512 = distinct !DILexicalBlock(scope: !15513, file: !2273, line: 370, column: 13)
!15513 = distinct !DILexicalBlock(scope: !15502, file: !2273, line: 368, column: 6)
!15514 = !DILocation(line: 371, column: 3, scope: !15511)
!15515 = !DILocation(line: 376, column: 58, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !2273, line: 376, column: 7)
!15517 = distinct !DILexicalBlock(scope: !15512, file: !2273, line: 372, column: 9)
!15518 = !DILocation(line: 376, column: 7, scope: !15517)
!15519 = !DILocation(line: 376, column: 43, scope: !15516)
!15520 = !DILocation(line: 377, column: 4, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15516, file: !2273, line: 376, column: 64)
!15522 = !DILocation(line: 379, column: 10, scope: !15517)
!15523 = !DILocation(line: 379, column: 33, scope: !15517)
!15524 = !DILocation(line: 379, column: 31, scope: !15517)
!15525 = !DILocation(line: 379, column: 3, scope: !15517)
!15526 = !DILocation(line: 0, scope: !15513)
!15527 = !DILocation(line: 381, column: 1, scope: !15502)
!15528 = distinct !DISubprogram(name: "boot_banner", scope: !15529, file: !15529, line: 26, type: !2909, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1949)
!15529 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15530 = !DILocation(line: 34, column: 2, scope: !15528)
!15531 = !DILocation(line: 36, column: 1, scope: !15528)
